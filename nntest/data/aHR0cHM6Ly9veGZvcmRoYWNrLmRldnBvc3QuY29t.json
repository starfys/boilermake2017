[["collaboard", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"collaboard \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/604/datas/gallery.jpg\"/>\n<p>\n<i>collaboard is collborative tool allowing researchers to collaborate using LaTeX and a shared whiteboard</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"collaboard \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/603/datas/gallery.jpg\"/>\n<p>\n<i>if no room exists, it is created</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"collaboard \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/606/datas/gallery.jpg\"/>\n<p>\n<i>messages are previewed as you type. drawing on the right appear in realtime in the browsers of other participants</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Ben and I are both PhD students in science subjects and have experienced phases when our supervisors have been traveling for a while. However, when skyping with them it is often difficult to convey mathematical ideas, as most chat are not able to properly typeset equations or able to easily share sketches.</p>\n<h2>What it does</h2>\n<p>It's basically a chat room with extra support for latex and a whiteboard. The idea is that you're skyping with your supervisor, open the chat room on your laptop and tablet and use the laptop to write equations and the tablet to draw sketches. Everything appears in realtime at the other end.</p>\n<h2>How we built it</h2>\n<p>We use node.js with express.js and socket.io for the backend, the front end is written in angular2 with typescript.</p>\n<h2>Challenges we ran into</h2>\n<p>A few... not really knowing angular or node at all was the main one. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Doing our first hackathon and actually submitting something!</p>\n<h2>What we learned</h2>\n<p>Never mess with angular routers....</p>\n<h2>What's next for collaboard</h2>\n<p>Better layout on small phone screens, export to latex/pdf documents. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/socket-io\">socket.io</a></span></li><li><span class=\"cp-tag\">angular2</span></li><li><span class=\"cp-tag\">mathjax</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/azure\">azure</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/typescript\">typescript</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://scichat.westeurope.cloudapp.azure.com/\" rel=\"nofollow\" target=\"_blank\" title=\"http://scichat.westeurope.cloudapp.azure.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>scichat.westeurope.cloudapp.azure.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked equally with Florian on all parts of the app. First hackathon, first socket.io app, first all-nighter coding ;-). Great experience. ", ""]], ["AutoDJ", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/qlJH8-5ZJlk?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Lots of people are creative enough to write awesome lyrics, but they lack the musical knowledge to create songs with them. What if we had a program to generate a good song depending on the text input?\nThat's exactly what AutoDJ does.</p>\n<h2>What it does</h2>\n<p>Using <strong>Microsoft's Text Analysis API from Cognitive Services</strong>, we analyse the key-phrases of the input text given by the user. We also look if it is happy / sad, using the <strong>sentiment analysis</strong> feature of the API. \nWe compare the resulted features against a large collection of song lyrics, using the cosine similarity measure. The first few best matches are then fed into a <strong>Restricted Boltzmann Machine</strong> algorithm that generates a new song from them.</p>\n<h2>How we built it</h2>\n<p>First we downloaded a large number of popular songs from YouTube (the instrumentals only) and their lyrics separately from different websites. \nThen we have a script that calls Microsoft's Text Analysis API and gets the key phrases for the user input, and compares it using the cosine similarity measure with the key phrases from all the lyrics downloaded.\nWe take the instrumental songs of the best matches (encoded as .mid) and feed them into the neural network that generates a new .mid with similar sounding.</p>\n<h2>Challenges we ran into</h2>\n<p>It's very hard to generate new music, as this is a cutting-edge current research topic.\nIt is also very hard (and thus unreliable) to convert mp3s into midis. We had some troubles doing that, and even now it's not too accurate.\nOf course we also had the usual issues with permissions, dependencies, etc., but who doesn't have those ?</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Actually managing to complete a pipeline user -&gt; algorithm -&gt; result -&gt; user.</p>\n<h2>What we learned</h2>\n<p>Quite a lot. Mostly about neural networks and language processing.</p>\n<h2>What's next for AutoDJ</h2>\n<p>Some extra features could be implemented such as improving the accuracy of similarity, by taking more details into account. Also we could have more than just happy/sad sentiments, and maybe even analyse the main topic of the text.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">tensorflow</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/midi-js\">midi.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/nltk\">nltk</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/machine-learning\">machine-learning</a></span></li><li><span class=\"cp-tag\">neural-network</span></li><li><span class=\"cp-tag\">scraper</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/requests\">requests</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/beautiful-soup\">beautiful-soup</a></span></li><li><span class=\"cp-tag\">youtube-dl</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag\">microsoft</span></li><li><span class=\"cp-tag\">text-analysis-api</span></li><li><span class=\"cp-tag\">cognitive-services</span></li></ul>\n</div>\n</div>", ["", "", "", ""]], ["Don't Laugh", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/JuD4GAxDzYc?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Don't Laugh \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/727/datas/gallery.jpg\"/>\n<p>\n<i>Try not to laugh when faced with this!</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We're a team formed of CS students, a mathematician and an engineer. We have some very mixed skill sets, and so wanted to do something which everybody could work on. We had the idea of making some kind of catapult controlled by an Arduino, and that evolved into this.</p>\n<h2>What it does</h2>\n<p>Players sit around the gun in a semi-circle. A camera moves back and forth taking photos of the players. If it detects that a player is laughing or looking too happy, the gun points towards them and shoots them!</p>\n<p>Works best when paired with a funny video playing in the centre of the players (thus the name \"Don't Laugh\").</p>\n<h2>How we built it</h2>\n<p>We have a Python script running which sends serial signals to an Arduino. The Arduino then moves the servos on which the camera and gun are mounted, as well as the servo used to pull the trigger. It uses OpenCV to take photos from a webcam mounted on a servo and the Microsoft Cognitive Services emotion API.</p>\n<p>When a photo is taken from the webcam, it's passed to the emotion API which returns a value for how happy the players are. If a particular player is looking too happy, the Python script tells the Arduino to move the gun and then shoot them!</p>\n<h2>Challenges we ran into</h2>\n<p>OpenCV is hard, especially with Python 3. It was also difficult to mount the servos on an assembly of some kind. We ended up using a beer bottle!</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>It works! And the accuracy is actually pretty good. If there's one person in the group that's laughing, the gun will aim at that person and shoot.</p>\n<p>The gun also makes fake movements, just to freak the players out - you really don't know if it's going to hit you or not!</p>\n<h2>What we learned</h2>\n<p>All of us learned something different. Some learned Python, others OpenCV, and other Arduino programming.</p>\n<h2>What's next for Don't Laugh</h2>\n<p>We're planning to develop more mini games and add more modes to the game.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/opencv\">opencv</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/microsoft-project-oxford\">microsoft-project-oxford</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Homlet/stressed\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Homlet/stressed\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on developing the idea, and the Python code to interface with the Arduino via serial.", "I worked with the hardware, making the gun, fitting the servos and programming the Arduino.", "I wrote the high-level logic and fit everyone else's pieces together.", ""]], ["Play Lumos", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Play Lumos \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/672/datas/gallery.jpg\"/>\n<p>\n<i>Play Lumos</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Play Lumos \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/653/datas/gallery.jpg\"/>\n<p>\n<i>Cast Spells</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Play Lumos \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/655/datas/gallery.jpg\"/>\n<p>\n<i>Map player select</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Play Lumos \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/660/datas/gallery.jpg\"/>\n<p>\n<i>House points</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>The magical world of Harry Potter</p>\n<h2>What it does</h2>\n<p>Enter the digital world of Play Lumos on your mobile (webbrowser). You add your name and then you will be randomly assigned to a house. You enter the map of the location and select a opponent. After confirming by the opponent the magic begins, you need to cast spells to each other. When you win a duel, your house get points. </p>\n<h2>How I built it</h2>\n<p>Wizard powers</p>\n<h2>Challenges we ran into</h2>\n<p>Implementing the map... many more...</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Creating a wizardry playful game for mobile in the web browser that let's people play with there friends.</p>\n<h2>What we learned</h2>\n<p>Java-script, using Esri API</p>\n<h2>What's next for Play Lumon</h2>\n<p>Mastering the dark arts of programming further to make the app more ready for releasing it to muggles.</p>\n<h2>Website</h2>\n<p>playlumos.com (still pending...)</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/esri\">esri</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sql\">sql</a></span></li><li><span class=\"cp-tag\">magic-powers</span></li></ul>\n</div>\n</div>", ["", "", "", ""]], ["BagPackers", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Meeting each other and making friends lead to the discussion of something almost every university student has on their bucket lists: backpacking. Wandering off on your own without any plan seems like fun, but we realised that as adventurous as we may be, some things such as finding cheap places to stay at along the route are quite necessary. Alas, Bag'Packers was born. </p>\n<h2>What it does</h2>\n<p>This web app takes in the details of your trip, and proposes a route you could take during your journey. It also proposes an itinerary for you, taking into account how much hiking you would have done in a day, and shows you various options for cheap hostels and places to stay at where you'd be stopping your day's hike. </p>\n<h2>How we built it</h2>\n<p>Using sky scanner and google's API. Written in Python and integrated in Django.\n HTML, CSS and JavasScript for front end.</p>\n<h2>Challenges we ran into</h2>\n<p>Every one coded in python for the first time and it was also our first time using an API. The Skyscanner API was particularly difficult, especially for the hotel search. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We were able to complete a working prototype despite our lack of experience, and managing to actually use the Skyscanner API. </p>\n<h2>What we learned</h2>\n<p>python, api , teamwork, how to stay up all night to finish the work.</p>\n<h2>What's next for BagPackers</h2>\n<p>to keep improving on what we have built to make it better and simpler with more features. Also create a mobile app.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/django\">django</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/skyscanner\">skyscanner</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/othmanus/oxfordhack-2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/othmanus/oxfordhack-2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the backend, with the Skyscanner API. It was my first time coding in Python (and at all), so it was daunting at first but I had loads of fun.", "I worked on the front-end by developing the landing page and Google Map integration. And also in the backend by creating the project with Django framework, and merging the other contributions.", "I worked on the Google Maps API integration. This let the website get the route from origin to destination. It then split the route into parts defined by the user, so that we could search for hotels around each part.", ""]], ["Trigger Replacer", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Trigger Replacer \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/643/datas/gallery.jpg\"/>\n<p>\n<i>UI: Options page for the Trigger Replacer</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Trigger Replacer \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/654/datas/gallery.jpg\"/>\n<p>\n<i>Page with no changes made</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Trigger Replacer \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/674/datas/gallery.jpg\"/>\n<p>\n<i>Instances of \"Murder\" replaced with \"Harass\"</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Trigger Replacer \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/704/datas/gallery.jpg\"/>\n<p>\n<i>Another example where \"Fuck\" is replaced with \"Oops\"</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Online harassment has many forms, and one of them is the possibility of the malicious triggering of vulnerable individuals. Trigger warning are becoming more and more mainstream and we wanted a safe space to be available online for such vulnerable users. #HackHarassment</p>\n<h2>What it does</h2>\n<p>Trigger Replacer allows the user to type up a list of words that trigger them, and the words they would like them to be replaced with. The user can remove and reset the list of words as they wish, and Chrome will save them for future reference without the user having to input them each time.</p>\n<h2>How we built it</h2>\n<p>We used a Chrome extension and their APIs to create a JavaScript code with jQuery elements which is injected on all tabs. An HTML file was made to create the options page of the extension for the user to edit their trigger words.</p>\n<h2>Challenges we ran into</h2>\n<ul>\n<li>Initially the code was run on button click, and we wanted to ensure one click replaced <em>all</em> words and not just one at a time.</li>\n<li>Using regular expressions to exclude elements of the html within tags.</li>\n<li>Asynchronicity of the API callback functions.</li>\n<li>Reading and writing of words using Chrome storage API.</li>\n</ul>\n<h2>Accomplishments that we're proud of</h2>\n<ul>\n<li>Creating something that works from scratch.</li>\n<li>The ability of replacing all instances of the words on the static HTML page.</li>\n<li>Allowing the user to edit the words as they wish.</li>\n<li>Making the internet a safer space.</li>\n</ul>\n<h2>What we learned</h2>\n<ul>\n<li>How to create a Chrome extension.</li>\n<li>Working together with new people on a project with a very tight deadline.</li>\n</ul>\n<h2>What's next for Trigger Replacer</h2>\n<ul>\n<li>Ensuring the extension works on dynamic sites like Facebook or Twitter where the user can scroll (currently only replaces the first few instances of the words)</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li></ul>\n</div>\n</div>", ["", "", ""]], ["Moon", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/XvoavtDxnSw?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Moon \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/282/datas/gallery.jpg\"/>\n<p>\n<i>snapshot</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Moon \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/283/datas/gallery.jpg\"/>\n<p>\n<i>snapshot</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Moon \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/287/datas/gallery.jpg\"/>\n<p>\n<i>snapshot</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Moon \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/285/datas/gallery.jpg\"/>\n<p>\n<i>snapshot</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Moon \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/284/datas/gallery.jpg\"/>\n<p>\n<i>snapshot</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Moon \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/286/datas/gallery.jpg\"/>\n<p>\n<i>snapshot</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>The moon has always been inspirational to people at all ages, but is always too far away and too distant. It's magnificent, but looking at it, I felt kind of sad, and in between this sadness and admiration I started planing this experience.</p>\n<h2>What it does</h2>\n<p>By reading the thoughts of the moon and the stars around, we will be able to see how lonely the moon feels, and how at the end is revealed that our perception is a key factor, and that we should need to learn to view things differently to understand better, and realize that we can be so hard on ourself and so wrong without reason.</p>\n<p>With this experience, maybe with an improved version will be better, I also expect people to understand other persons feelings, fomenting the empathy by understanding the moon, which is a character that everyone know and no one have bad feelings against, and with this experience open minds to what other people can feel, and trying to drive to a place where expressing this feelings or emotions is more normal and accepted than as in the current world we live nowadays.</p>\n<h2>How I built it</h2>\n<p>I coded it all in C++ from scratch. Used the SFML libraries to help on thinks like the audio, or the window management, but mostly coded all the game by myself from scratch.</p>\n<h2>Challenges I ran into</h2>\n<p>I arrived at the hackathon late after taking a taxi, bus, flight, another bus (for 4 hours), and some good walking, and started coding right away. It's been exhausting and haven't had time to iterate and improve the game.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Having it finished. With less history and features than I would have liked to add, but finished.</p>\n<p>LAST MINUTE UPDATE, BUILDS FOR ANDROID VERSION ARE WORKING!!!</p>\n<h2>What I learned</h2>\n<p>That I love making games, and that may help delivering stories.</p>\n<h2>What's next for Moon</h2>\n<p>It will disappear on the horizon, and came again every night, alone, but finally knowing that all the little dots in the sky love, appreciate and need her. \nOn my side I would like to deliver the original complete history that I intended to deliver adding more content to this experience and making it grow bigger.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">sfml</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/gimp\">gimp</a></span></li><li><span class=\"cp-tag\">qtcreator</span></li><li><span class=\"cp-tag\">sleephours</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/kaitokidi/Moon\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/kaitokidi/Moon\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/kaitokidi/Moon/tree/master/AndroidProjectmoonstuf/bin\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/kaitokidi/Moon/tree/master/AndroidProjectmoonstuf/bin\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Hackathon Happiness", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Event data analysis with Microsoft Cognitive Services Emotions API and outputting it in a geolocation aware format using Esri maps API.</p>\n<h2>What it does</h2>\n<p>Takes a simple two-field input: a link to a Facebook album with photos from an event and a location. Analyses photos in the album and evaluates emotions of people present on the photos. Plots a point on a 2D map and displays information about the event gathered from the Emotions API.</p>\n<h2>How we built it</h2>\n<p>A broad overview of our application is basically getting all the photos from Facebook and then passing the links on to the backend for further processing. The backend calls the Microsoft Cognitive API's for every image and does some minor data processing on the returned values and gives it back to the user. But it was even harder to implement this simple workflow. We started with just calling the cognitive api's through JavaScript but it took a lot of time to send all the images and do required calculations. So we thought of sending a message to an AWS SQS queue and wrote a Go server, which is attached to the queue and when it receives new messages, it calls the API for all the images concurrently thus bringing our execution time from about 10secs to 1-2secs. Apart from that we run node.js server on an EC2 instance and the frontend is written in Angular.js, HTML5 and CSS.</p>\n<h2>Challenges we ran into</h2>\n<p>The major challenges were basically related to concurrency in Go, eliminating data races, avoiding null pointers and reduce the number of goroutines. Also understanding the AWS SDK for Go lang was a big challenge and setting up the Simple Queue Service wasn't easy as well.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Efficient use of multiple APIs and actually harnessing the power of Go and Amazon AWS.</p>\n<h2>What's next for Hackathon Happiness</h2>\n<p>User registration, added functionality to save your map even when the session has expired.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/go\">go</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/angular-js\">angular.js</a></span></li><li><span class=\"cp-tag\">sqs</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/behavioral-media-networks-cognitive-insights\">behavioral-media-networks-cognitive-insights</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/facebook-graph\">facebook-graph</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/esri\">esri</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/npm\">npm</a></span></li><li><span class=\"cp-tag\">microsoft-cognitive-services</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://oxfordhack.mishrabhinav.com/\" rel=\"nofollow\" target=\"_blank\" title=\"http://oxfordhack.mishrabhinav.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>oxfordhack.mishrabhinav.com</span>\n</a></li>\n<li><a href=\"https://github.com/mishrabhinav/oxfordhack_2016_server\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/mishrabhinav/oxfordhack_2016_server\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/mishrabhinav/oxfordhack_2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/mishrabhinav/oxfordhack_2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the frontend using Angular.js, HTML and CSS. I used the Facebook Graph API and the ArcGIS API.", "", "", ""]], ["Fameboost", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Fameboost \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/720/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>Features:</p>\n<h2>Inspiration:</h2>\n<p>the reactions of Facebook</p>\n<h2>What it does:</h2>\n<p>tells which photo will gain the most attention</p>\n<h2>How we built it:</h2>\n<p>used machine learning to analyze Facebook photos and learned which tags make the most successful photos; the website outputs the best photo from a given set</p>\n<h2>Challenges we ran into:</h2>\n<p>ran out of memory, not enough time to debug the model, Django usage</p>\n<h2>Accomplishments that we're proud of:</h2>\n<p>the website gives some good predictions</p>\n<h2>What we learned:</h2>\n<p>team members should stay together and collaborate</p>\n<h2>What's next for Fameboost:</h2>\n<p>developing more sensitive features</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/facebook\">facebook</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">htm</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/django\">django</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/github\">github</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/numpy\">numpy</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/scikit-learn\">scikit-learn</a></span></li><li><span class=\"cp-tag\">microsoft-api</span></li></ul>\n</div>\n</div>", ["Neural network", "I created the django website (although only small parts of the layout are mine), database, data model, machine learning model, API integration for Microsoft Visual Analysis and Facebook Graph (good docs, happy to learn those), feature extraction", ""]], ["crowd-reactions", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"crowd-reactions \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/698/datas/gallery.jpg\"/>\n<p>\n<i>crowd reactions dashboard</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"crowd-reactions \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/699/datas/gallery.jpg\"/>\n<p>\n<i>age distribution</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"crowd-reactions \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/700/datas/gallery.jpg\"/>\n<p>\n<i>sentiment over time</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"crowd-reactions \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/701/datas/gallery.jpg\"/>\n<p>\n<i>gender distribution</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"crowd-reactions \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/756/datas/gallery.jpg\"/>\n<p>\n<i>sentiment over time with frames and extracted faces</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We are bringing the capabilities of services like Google Analytics into the real world!\nAllowing businesses to explore how people interact with billboards, posters and ads has tremendous value. \nAnd with our application, we can give the insights that people need to better target their audience in the physical world. </p>\n<h2>What it does</h2>\n<p>We are using the Microsoft Cognitive Services to analyze video footages of people around things like billboards, posters or other kinds of advertisements. \nUsing this footages, we can analyze facial features and determine how people react to whatever they are looking at. \nSo we also can determine demographics such as age, gender and other characteristics to give insights into how the target audience looks like.</p>\n<h2>How we built it</h2>\n<p>Video footages are processed with the Microsoft Cognitive Services APIs.</p>\n<p>First, we process the video file to find the different faces through the video.\nThen we generate frames for every point in the video where faces are recognized. </p>\n<p>These images are then slightly enhanced and go through further processing by the Faces API and Emotion API. \nThis data is then aggregated using react.js and highchart to provide clear characteristics about the audience reactions and demographics. We could even tell you how many people wear glasses.</p>\n<h2>Challenges we ran into</h2>\n<p>Since we currently don't have a system with cameras attached to advertisements in places such as the London Underground, we don't have these footages to analyze. Therefore, we used timelaps videos of public places as a replacement. The charts shown in the images are based on this footage: <a href=\"https://www.youtube.com/watch?v=ZpHRp-WgQ0w\" rel=\"nofollow\">https://www.youtube.com/watch?v=ZpHRp-WgQ0w</a>.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Even though we did not have much experience in the area of video processing, we accomplished fairly good results and were able to work with video footage without further problems.</p>\n<p>The tool-chain that we built to generate the final data has grown very quickly and has several intermediate steps. With this established tool-chain, it is easy to process further videos.</p>\n<h2>What we learned</h2>\n<p>We learned how to process video footage with the Microsoft Cognitive Services and how to use external libraries to generate images for specific frames in a video. We were astonished how fast we could achieve good results using the Microsoft Cognitive Services without training a dedicated model for this task.</p>\n<h2>What's next for crowd-reactions</h2>\n<p>Currently we can track faces in the video of people in front of ads, but we can't say whether they look on their phone, at the ad or somewhere else. As a next step we want to build a custom face recognition model that also computes for each face the probability that this person ist actually looking at the ad. Furthermore, our current platform can process complete video files. This can be extended with an endpoint, which consumes video streams in real time.  </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/react\">react</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/redux\">redux</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag\">microsoft-cognitive</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/nicoring/crowd-reactions\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/nicoring/crowd-reactions\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["HeartBeat", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"HeartBeat \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/562/datas/gallery.jpg\"/>\n<p>\n<i>Our team logo! </i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"HeartBeat \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/569/datas/gallery.jpg\"/>\n<p>\n<i>Welcome to our site! </i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>It always challenging for medical students and new doctors to interpret electrocardiograms (ECGs) given how often they are used in clinical practice. </p>\n<h2>What it does</h2>\n<p>HeartBeat helps them to interpret ECGs and differentiate between cardiac arrhythmias. It is a tool that they can use on top of their existing clinical knowledge in order to confirm the interpretation of the ECG. </p>\n<h2>How we built it</h2>\n<p>We used a cardiac arrhythmia dataset from UC Irvine and taught our classifier to differentiate between normal ECGs and ECGs showing cardiac arrhythmias (eg heart attacks, heart blocks, sinus tachycardia, etc.). </p>\n<h2>Challenges we ran into</h2>\n<p>It was challenging to figure out what to teach the classifier, how to input the data, and how to structure it neatly. Connecting everyone's work was challenging too (front-end, machine learning algorithm, and back-end). </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We're proud that we could work together to get our project done within 24 hours! Teaching a machine to distinguish between the presence and absence of cardiac arrhythmias and classifying it was technically challenging. </p>\n<h2>What we learned</h2>\n<p>We learnt a lot about Python, ECGs, scikit-learn, and machine learning!  </p>\n<h2>What's next for HeartBeat</h2>\n<p>Instead of uploading csv files to input the data, it would be cool to just upload images so that pictures are just needed in order to interpret the ECGs. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/machine-learning\">machine-learning</a></span></li><li><span class=\"cp-tag\">ai</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/adobe-illustrator\">adobe-illustrator</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/scikit-learn\">scikit-learn</a></span></li><li><span class=\"cp-tag\">neuralnet</span></li><li><span class=\"cp-tag\">svm</span></li><li><span class=\"cp-tag\">ensemble</span></li><li><span class=\"cp-tag\">knearestneighbours</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://getcouper.com:5000/index.html\" rel=\"nofollow\" target=\"_blank\" title=\"http://getcouper.com:5000/index.html\">\n<i class=\"ss-icon ss-link\"></i>\n<span>getcouper.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Jitterbug", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Jitterbug \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/632/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Jitterbug \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/634/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Jitterbug \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/635/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We were inspired by a meme we saw during chemistry class that depicted a squirrel with its arms in the air captioned, \"Interpretive Dance\".</p>\n<h2>What it does</h2>\n<p>The application is an IOS app, that uses the core motion framework to allow for a ball on the screen to be rolled around by tilting the phone. The goal of the game is to make the ball follow a highlighted path.</p>\n<h2>How we built it</h2>\n<p>Using the phone's accelerometer, we determined the components of gravity acting on the phone, and extended that to the motion of the ball.</p>\n<h2>Challenges we ran into</h2>\n<p>Our initial idea was to create an app that tracks the iPhone using the accelerometer and gyroscope. This app would guide the user to move in such a way as to simulate dancing. It proved to be very difficult to track the location of the phone in 3D space, so we ended up using the accelerometer reading to make a ball roll on the screen. The idea of the ball following the a line on the screen remained, just without the simulation of dancing. Of course, nothing is preventing the user from dancing while playing the game...</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>In working on this project we created a level interface that makes level selection very smooth and easy on both the front and back end. However, we were not able to fully utilize it, nor create all the levels we desired.</p>\n<h2>What we learned</h2>\n<p>We improved our skills in swift and learned a lot of Linear Algebra during our initial attempt to create a dancing game.</p>\n<h2>What's next for Jitterbug</h2>\n<p>We hope to work out the formulas that the dancing portion of the game requires.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xcode\">xcode</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/uikit\">uikit</a></span></li><li><span class=\"cp-tag\">coremotion</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ios\">ios</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/jlefelhocz/DanceApp\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/jlefelhocz/DanceApp\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Designer and Artist", "", ""]], ["Novis Obliviate", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Assist people with dementia in their day-to-day lives.</p>\n<h2>What it does</h2>\n<p>It learns from the person's actions and reminds the user where </p>\n<h2>How we built it</h2>\n<h2>Challenges we ran into</h2>\n<h2>Accomplishments that we're proud of</h2>\n<h2>What we learned</h2>\n<h2>What's next for Novis Obligate</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ios\">ios</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/love\">love</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/machine-learning\">machine-learning</a></span></li></ul>\n</div>\n</div>", ["", "", "", ""]], ["fypster2", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Solving Education</p>\n<h2>What it does</h2>\n<p>A social network where you can share specific content, setup meetings with people of interest, mentoring, advising, meeting in person.</p>\n<h2>How we built it</h2>\n<p>Trial and error</p>\n<h2>Challenges we ran into</h2>\n<p>Server-client syncing, ui, css</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We learned stuff</p>\n<h2>What we learned</h2>\n<p>We learned how to make instasearch!</p>\n<h2>What's next for fypster2</h2>\n<p>Further dev</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/meteor-js\">meteor.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/react\">react</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/n1k0d49/Fypster2\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/n1k0d49/Fypster2\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["hackersmap", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>Inspiration\nBeing able to find relevant people in hackathon venues</p>\n<p>What it does\nLocallize and show people on a building plan</p>\n<p>How I built it\nWith my sweat and blood</p>\n<p>Challenges I ran into\nDeploying Node.JS server</p>\n<p>Accomplishments that I'm proud of\nSocket managing, server-client communication</p>\n<p>What I learned\nSome JS, deploying is a bitch</p>\n<p>What's next for hackersmap\nA Database and more interactivity</p>\n<p>Built With\nJS</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/angular-js\">angular.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/socket-io\">socket.io</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/esri\">esri</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag\">memes</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Divailo/hackersmap\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Divailo/hackersmap\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["choice", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"choice \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/571/datas/gallery.jpg\"/>\n<p>\n<i>Example playlist (page scrolled down)</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"choice \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/577/datas/gallery.jpg\"/>\n<p>\n<i>Example playlist (top of page)</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<blockquote>\n<p>The ability to have everyone engaged in a music based social experience by contributing together ideas and interests.\nListen to playlists that the majority will enjoy.\nAvoid upsetting someone by offending them if you don't like their taste in music (anonymous voting feature)</p>\n</blockquote>\n<h2>What it does</h2>\n<blockquote>\n<p>Has built in library of music that can be found with search bar (type in artists, songs, genres etc...)\nIf a user does not like a certain playlist, artist, song etc they can vote to skip (anonymously) what is currently playing (MVP version), if the majority also vote to skip then this action takes place\nIf someone suggests a playlist, artist etc in the search bar, a popup appears which asks users if they agree - if the majority agree then the suggested request becomes the current music option</p>\n</blockquote>\n<h2>How we built it</h2>\n<blockquote>\n<p>Firstly, developed/mind mapped ideas fully using business model template\nBack end build by linking youtube feature\nLogo design by graphic designer after thorough consultation and discussion\nFront end developing following a mock up draft\nConnecting the back and front ends to finalise the MVP</p>\n</blockquote>\n<h2>Challenges we ran into</h2>\n<blockquote>\n<p>Building a front end with no experience was a challenge\nFirst time using YouTube related database\nSmall team, little time and multiple super interesting ideas (if there was more time a great website could be produced!)</p>\n</blockquote>\n<h2>Accomplishments that we're proud of</h2>\n<blockquote>\n<p>Finished the MVP of the app, it looks really cool and works for the time we had been given</p>\n</blockquote>\n<h2>What we learned</h2>\n<blockquote>\n<p>Integrating YouTube with back end\nFront end developing skills\nDedication! </p>\n</blockquote>\n<h2>What's next for choice</h2>\n<blockquote>\n<p>If this could be developed with a bigger team, this would be an excellent project, which could potentially change the \"social gathering\" scene - such as a chilled Friday in the office, going out clubbing, or just hanging out at home with friends - as they say, \"music is a piece of art, that goes in the ears and straight to the heart\"</p>\n</blockquote>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/youtube\">youtube</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/adobe-illustrator\">adobe-illustrator</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/websockets\">websockets</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Drag0s/choice\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Drag0s/choice\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["May The News Be With You", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"May The News Be With You \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/673/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>After recently incredibly depressing news, I wanted a way of reading headlines without making you not want to get out of bed.</p>\n<h2>What it does</h2>\n<p>It shows you the daily headlines, currently from bbc news (in future imported from your feedly) and displays them in a star wars intro scroller.</p>\n<h2>How I built it</h2>\n<p>Currently in Processing, porting to p5.js and creating a web interface</p>\n<h2>Challenges I ran into</h2>\n<p>XML parsing can be a problem.\nFonts not working in Processing.\n when starting to port to javascript had some probelms with objects and parseing.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<p>Rotating text in the X axis.</p>\n<h2>What's next for May The News Be With You</h2>\n<p>Port to p5.js make nice web interface where you can use feedly to import news.\nput on <a href=\"http://www.maythenewsbewithyou.com\" rel=\"nofollow\">www.maythenewsbewithyou.com</a></p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/processing\">processing</a></span></li><li><span class=\"cp-tag\">p5.js</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://www.maythenewsbewithyou.com\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.maythenewsbewithyou.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.maythenewsbewithyou.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Semantic SFM", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<h2>What it does</h2>\n<p>It reconstructs a 3D point cloud from a given video sequence containing a certain object.</p>\n<h2>How we built it</h2>\n<p>We extracted the frames from the video and used VisualSFm library to reconstruct the point cloud from them.</p>\n<h2>Challenges we ran into</h2>\n<h2>Accomplishments that we're proud of</h2>\n<h2>What we learned</h2>\n<h2>What's next for Semantic SFM</h2>\n</div>\n</div>", ["", "", ""]], ["Museful", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Museful \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/769/datas/gallery.jpg\"/>\n<p>\n<i>Our whiteboard plan</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We are studying medicine, biomedical sciences, economics and computer science. As a multidisciplinary team, we wanted to incorporate all 4 areas to create an app which helps mental health patients. Depression and anxiety disorder cost $1 trillion per year (WHO), so this app could have medical and financial implications.</p>\n<p>Our research indicated that mood diary apps currently on the market require individuals to input their own emotional state. Research has shown that patients with mental health difficulties may not perceive their own emotional state accurately. As a result, we wanted to use software to analyse this instead.</p>\n<h2>What it does</h2>\n<p>The app is a mood diary to monitor emotional states, allowing people to record their daily feelings and difficulties. This  feeds into Microsoft API to analyse text to check whether the sentiment was negative or positive, and offers advice for specific treatment goals. For example, it will direct patients displaying suicidal tendencies to the Samaritans hotline, provide patients with panic attacks management advice.</p>\n<p>If patients have 7 negatives in a row, they are prompted to call their psychiatrist or a close family member/friend via the Dialler. If patients input positive entries, only these will be listed on the front page.</p>\n<h2>How we built it</h2>\n<p>We planned on a white board for 2 hours to determine our main goals: a simple and accessible app. We built an Android app using Android Studio, and used Material Design combined with many libraries. This allowed us to use web Microsoft API (Text Analysis) for cognitive services. </p>\n<p>Using retrofit (a library for android development), we were able to send requests to the API, which gave us a sentiment score. This enabled us to know how positive/negative the user is feeling, as well as keywords to determine possible reasons for these extreme emotions. This prompted users with tailored advice.</p>\n<p>We used this to display all positive stories on the front page, whilst hiding negative messages from sight. However, if the user entered a large number of negative messages over a long period of time, this could indicate deteriorating mental health. The Dialler would then be launched to contact a friend/doctor.</p>\n<p>We used support libraries to make our application backward compatible, whilst still giving the material design to older phones. Libraries called RXJava and RXAndroid gave us cleaner code when developing.</p>\n<p>We used Adobe Illustrator to design a Material Design inspired app icon, and generated multiple different pixel densities. This allows for the icon to be viewed on a greater number of devies.</p>\n<h2>Challenges we ran into</h2>\n<p>Timing was very difficult, as we had created an ambitious project with many goals. Furthermore, some of us had never coded before. We intended to use Muse, but we could not access the technology for the 24 hours. The Pebble watches did not have pulse detection so we could not incorporate this.</p>\n<p>We tried to augment the new Microsoft API with IBM Watson Tone Analyser API, to give us a larger variety of emotions to select from. Potentially, this would have allowed us to assign percentages to measure the weighting of specific emotional states. However, due to the 24 hours time constraints, IBM were unable to accept our request for the beta trial in time.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Three of us learnt how to code for the first time in only 24 hours at our very first hackathon. Our computer scientist learnt how to use the Microsoft API having never used it before. Also, he had never coded on Ubuntu Linux before during a hackathon.</p>\n<h2>What we learned</h2>\n<p>Those who had never coded before learnt basic programming skills, and our computer scientist learnt aspects of medicine and psychiatry.</p>\n<h2>What's next for Museful</h2>\n<p>Incorporate Muse technology to analyse strong emotions via brain activity, or measuring pulse via a smartwatch. These would prompt patients to open their diary and log a new entry via a notification. </p>\n<p>Furthermore, we would have liked to incorporate location features with SkyScanner API to allow individuals to recommend hotels, restaurants, doctors etc. for people with similar mental health conditions. Also, location features with Esri could allow individuals to form local support groups, which has been shown to be beneficial.</p>\n<p>We would have liked to incorporate the Microsoft API more closely to pick up specific keywords, and offer even more specific tips to patients. This could be further improved with IBM Watson's API.</p>\n<p>A final touch would be to add a customisable personalised motivational wall on the front page. Patients could submit their own images, including motivational quotes and their favourite photos. This would aim to improve mental wellbeing over the long term.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag\">material-design</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/microsoft-project-oxford\">microsoft-project-oxford</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/VikashKothary/Museful\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/VikashKothary/Museful\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Not associated with this failure. ", "", "", ""]], ["Event5", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Our team was inspired by the fact that there are so many social websites that provide services like dating, chatting, finding jobs, connecting with friends, listening to music etc and for each of those there is one particular service that is exceptionally popular. However, there is no one service when it comes to events. There are several sites that offer a range of event suggestions but hosts either have to pay, be popular enough or sell tickets to them. The only platform that hosts events for free without any specific conditions is facebook. However, there is no functions to recommend events in your area. If you are looking for something specific, facebook is convenient, but not if you need inspiration on a friday night!</p>\n<h2>What it does</h2>\n<p>Our app takes voice input from the user, like \u201cshow me events in london\u201d and suggests events nearby sorted by categories like \u201cconcerts\u201d, \u201cfood markets\u201d, \u201cseasonal\u201d, along with time etc.</p>\n<h2>How we built it</h2>\n<p>With the aim of using voice recognition to find local events for users\nThe build consisted of a two-prong approach, involving an Android front-end and a Java based backend.\nThe Android front end component involved multiple API's, including Google's Speech Recognition, Facebook's Graph API for JSON retrieval of event data, as well as MonkeyLearn API for natural language processing elements.\nThe backend is written in Java using the Spring Boot framework for accessible REST calls. It is calling the Facebook Graph Event API to pull a list of events in the area, which is then filtering using calls to a trained NLP model on MonkeyLearn. The Endpoint is then exposed using ngrok.</p>\n<h2>Challenges we ran into</h2>\n<p>-Multiple rewrites and builds were executed due to numerous compatibility issues, but all were analyzd and resolved\n-- Natural Language Processing: it is very hard to categorise the event names and descriptions for some events on facebook and put them into appropriate categories. Hard coding words is not an efficient approach therefore we used machine learning that uses a bag of words method. This method, however, is still not error-prone and relies on labelled data.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>-Excellent work distribution involving everyone's own strengths, with particular focus on redundancies incase an approach failed.\n-- We are very proud of the team spirit, we quickly found each other, decided on the topic and divided the tasks. There were no major conflict of opinions and everybody contributed significant knowledge and expertise to this project and everything went smoothly until the end.</p>\n<h2>What we learned</h2>\n<ul>\n<li>36 hours is not enough time to create a commercial product.\n-Stuff like this can ONLY be done in teams and when everyone shows commitment it will ALWAYS WORK\n## What's next for Event5</li>\n<li>Scaling up involving other APIs </li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag\">google-speech-recognition-api</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/facebook-graph\">facebook-graph</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag\">monkeylearn</span></li><li><span class=\"cp-tag\">http</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/EXJUSTICE/OxfordHack\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/EXJUSTICE/OxfordHack\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Android front end", "", "", "", ""]], ["PotterSmash", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/ugIJhn3pWpk?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"PotterSmash \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/805/datas/gallery.jpg\"/>\n<p>\n<i>Playing all together</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"PotterSmash \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/752/datas/gallery.jpg\"/>\n<p>\n<i>Choose your house</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"PotterSmash \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/744/datas/gallery.jpg\"/>\n<p>\n<i>Initial screen</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"PotterSmash \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/751/datas/gallery.jpg\"/>\n<p>\n<i>Playing with the mobile phone</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"PotterSmash \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/750/datas/gallery.jpg\"/>\n<p>\n<i>Dying as the time goes by</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to do a big multiplayer game, where everyone could participate, and as this hackathon was inspired in the Harry Potter world, we finally did a competitive multiplayer where the public can support their favourite team too helping them winning (or making the others to lose!)</p>\n<h2>What it does</h2>\n<p>You just need to register for a team and play with three more people of other houses. If you are the last alive, you will win your round and you will bring glory to your house. \nThe game will have as well a final round where only the best player of each house will be able to demonstrate their abilities in a last, amazing combat, that will be the last to decide which is the best house among the others. Will it be Gryffindor? Hufflepuff? Ravenclaw? or Slytherin?</p>\n<h2>How we built it</h2>\n<p>We built it with JS (nodeJS, phaserJS, ...) in order to be able to play it online on canvas, with our mobile phones. The phones will be our gamepads and the server will have the only screen where all the action will take place.</p>\n<h2>Challenges we ran into</h2>\n<p>We did not decide how to finally do this game until we had few hours left, so we actually had not a lot of time to build everything. Our project was really ambicious, and even if we did not succeed in finish everything, we are happy with the final result (it's really funny!)</p>\n<h2>Accomplishments that we are proud of</h2>\n<p>We did a lot of team work, we did not sleep a lot and we had fun designing, programming and playing the game. It was totally worth it!</p>\n<h2>What we learned</h2>\n<p>We learned more about JS and multiplayer online.</p>\n<h2>What's next for PotterSmash</h2>\n<p>We want to finish adding all our ideas and after it, we will see :)</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/phaser-js\">phaser.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/dasilvacontin/placeholder-hack-name\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/dasilvacontin/placeholder-hack-name\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Semantic and Instance Segmentation", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Semantic and Instance Segmentation \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/691/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Semantic and Instance Segmentation \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/692/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Semantic and Instance Segmentation \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/693/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Semantic and Instance Segmentation \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/695/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Semantic and Instance Segmentation \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/696/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Semantic and Instance Segmentation \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/705/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>This is a Computer Vision project aimed at understanding the contents of images. This has numerous applications, such as in robotics, driverless cars, medical diagnosis and image editing. In all this cases, machines need to perceive and understand their environment in a manner similar to humans.</p>\n<p>There are now cloud services, such as the Microsoft Cognitive Services API. However, these do not offer a detailed, per-pixel understanding of images, which is what my system does.</p>\n<h2>What it does</h2>\n<p>The algorithm identifies the object class of every single pixel in the image. For example, it labels certain pixels as \"person\", and others as \"car\" and so on. Furthermore, it identifies unique instances of objects as well: So if there are multiple people, then it should identify each person separately. </p>\n<h2>How I built it</h2>\n<p>The core of the system is implemented using deep neural networks, and described in my research papers (I am a PhD student). I had already trained a model to perform Semantic and Instance Segmentation as part of my research and conference paper submission.</p>\n<p>In the hackathon, I built a web interface to it, so that a user could upload images, or specify links to images on the internet, and see their result on unconstrained images. </p>\n<p>This runs on the cloud, on a Titan X GPU using Cuda.</p>\n<h2>Challenges I ran into</h2>\n<p>I don't really know much about building websites. </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>It seems to work! The algorithm had previously only been evaluated on academic datasets. Now it is being tested on random images from the internet.</p>\n<h2>What I learned</h2>\n<p>I learnt a bit about Flask and building websites in Python.</p>\n<h2>What's next for Semantic and Instance Segmentation</h2>\n<p>There will be some improvements to the core recognition algorithm. Also, the \"Instance Segmentation\" part needs to deal better with occluding objects.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">caffe</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://129.67.95.17:5000\" rel=\"nofollow\" target=\"_blank\" title=\"https://129.67.95.17:5000\">\n<i class=\"ss-icon ss-link\"></i>\n<span>129.67.95.17</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Skybreak", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Skybreak \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/354/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Our inspiration was our love for travel and simple addictive games.</p>\n<h2>What it does</h2>\n<p>Combining a simple plane game with real flights data with real data from the skyscanner api, skybreak lets you accomplish your dreams by flying all across the globe. Starting from London, you can pick your flight. The price of the flight you take is taken away from your wallet and the distance covered by your flight is added to your score. A flight corresponds to a game and the longer you remain on flight without hitting a cloud or falling off screen, the more money you gain.\nThis game is a combination  of strategy in terms of picking the best flights and gaming skills in terms of making a flight last as long as possible. </p>\n<h2>How I built it</h2>\n<p>We built it using node.js to get the flights data from the skyscanner api and C# with unity to create the front-end of the game.</p>\n<h2>Challenges I ran into</h2>\n<p>Getting the distance between two airports required getting a database of airports with their locations and using the latitude and longitude took us some time. We also had to learn C# and unity during the project and set up a webserver for highscores.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Combining real world data with a simple game to make it fun and challenging.</p>\n<h2>What I learned</h2>\n<p>I learned C# and also how to use unity.</p>\n<h2>What's next for Skybreak</h2>\n<p>Take off in one hour!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag\">skyscanner-api</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/ImperialBeasts-OxfordHack16\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ImperialBeasts-OxfordHack16\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I built the front-end of the game in C# and the user interface using unity.", "I worked on the backed storing highscore and using the Skyscanner API for flights.", "I worked on the high scoring system, specifically focused on converting the JSON format of storing data into usable data for Unity.", ""]], ["Facial Response Tracker", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Facial Response Tracker \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/625/datas/gallery.jpg\"/>\n<p>\n<i>The customized message</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Facial Response Tracker \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/626/datas/gallery.jpg\"/>\n<p>\n<i>The gifs</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>As we become more attached to our machines, our ability to become isolated and depressed grows. When our team saw the power of Microsoft's emotion API, we saw an opportunity to fight that trend.</p>\n<h2>What it does</h2>\n<p>Our app presents the user with several funny gifs. After a second or two of display, we take a picture of the user's face and send it to Microsoft's API to gauge their response. By gathering this data over time, we can alert users when they begin to react less and less to originally amusing things, which could indicate mild depression.</p>\n<h2>How we built it</h2>\n<p>The app is composed of an express server and a mongodb backend. The pictures are taken on any built-in webcam.</p>\n<h2>Challenges we ran into</h2>\n<p>Browsers understandably make it very hard for websites to access computer hardware. It took many iterations, but we eventually found an approach that works for all platforms we've tested.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>As a team of mostly newbies, we're extremely proud of how we pulled together and built something significant out of technologies we'd never worked with before. </p>\n<h2>What we learned</h2>\n<p>From Git to Express, our whole team worked with new and interesting technologies. We learned a lot about programming and collaborative coding.</p>\n<h2>What's next for Facial Response Tracker</h2>\n<p>The gifs need to be classified and some universal metrics need to be calculated. Measuring an individual's response only against their own history is prone to random fluctuation in short term moods and the quality of the gifs. We would also like to implement a feature that presents easy access to mental health resources to all and a community component that allows friends to support each other.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/microsoft-project-oxford\">microsoft-project-oxford</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/jamestautges/oxfordhack\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/jamestautges/oxfordhack\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Hitchhacking", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Hitchhacking \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/621/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Garrelt is an ambitious hitchhiker! \nWhen going from London to Oxford it costs him a lot of money!\nThat's why Garrelt hitchhikers!\nGarrelt misses security, comfort and fun when traveling to his admired destination.\nWe build Hitchhacking to make hitchhiking great again!</p>\n<h2>What it does</h2>\n<p>Hitchhacking connects millions of drivers with matching Hitchhikers.\nWe match the direction of the drivers route, with the admired direction of the Hitchhiker.\nBy using advanced similiarity matching, we prioritze a matching of people, who share the same interests.\nSpeech messages with each request help to keep an authentic environment.</p>\n<h2>How I built it</h2>\n<p>We build the app as an Android App in Java. The Backend is running on an Apache maschine only throug php scripts. The communication is realized over json. The database is a mysql database.</p>\n<h2>Challenges I ran into</h2>\n<p>We had to advance the app's usability to make it comfortable for both participants use the app throughout a longer route. Additionally the driver shouldn't be distracted while driving. Keeping the app simple was a main aspect of the development. Moreover, the algorithm to find the correct direction of drivers without them having to type in a destination was a challenge and has still some room for improvement.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We're proud of the simplicity of our API and the fact of using speech massages as a function to make both participant into contact.</p>\n<h2>What I learned</h2>\n<p>We learned a lot about the work with gps targeted development and the small challenges when working in Android Studio.</p>\n<h2>What's next for Hitchhacking</h2>\n<p>We will need to advance our algorithm for finding people with matching directions, to make it more functional in urban areas.\nWe would like to implement speech recoginition for having less interaction with the app through the driver.\nOur matching algorithm for common interest has some more room for improvement and should be implemented as a self learning one.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mysql\">mysql</a></span></li><li><span class=\"cp-tag\">geo</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/PunktSonstNichts/Hitchhacking\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/PunktSonstNichts/Hitchhacking\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Android app", "", "", ""]], ["Commute", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>Inspiration</h1>\n<p>People don't always live where they work, but also don't want to spend too long on the train or in the car to get there. This is a problem we are now facing after graduation and finding jobs in new places. If you know two locations it is easy enough to query directly, but with hundreds of places within a reasonable distance, it is very difficult to work out the best options. Commute allows you to input your workplace, an amount of time you are willing to commute for and a method of transport. </p>\n<h1>What it does</h1>\n<p>Given your work destination, choose how you would like to commute and the maximum amount of time you are willing to travel. Commute will show a map of potential places to live, with options to visualise layers of geographic data from ArcGIS OpenData in .geojson format.</p>\n<h1>How we built it</h1>\n<p>We aggregated data from a number of sources on UK locations in order to build a database of locations, names, population sizes and distances. This allowed us to filter the number of queries beign passed to the Google Maps Distance Matrix to improve loading times (and save requests to our API key!) After getting the travel time with Google, we then plotted the map on the front end with the Esri API and used their layers and OpenData to add contextual information.</p>\n<h1>Challenges we faced</h1>\n<p>Finding reliable data on place names in usable formats was difficult. We used a .csv file from GeoNames and an excel spreadsheet from a Government FOI request. Parsing this data and storing it in the database in an efficient way was one of the biggest challenges.</p>\n<h1>Accomplishments we're proud of</h1>\n<p>Producing a list of reasonable results in a reasonable time, for a genuine problem we have recently experienced. It was fun to see locations along the main train lines highlighted - also highlights the limitations of public transport in rural areas!</p>\n<h1>What we learned</h1>\n<p>Neither of us had much prior experience in javascript, so using the Esri API was a challenge but a rewarding one.</p>\n<h1>What's next</h1>\n<p>We want to add a number of features - house price data particularly would make the tool much more useful to a wider audience. We would also like to find more data sources and allow the user to filter the results based on these. Finally, we'd like to add a second destination option, for couples who want to find somewhere central to live.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/esri\">esri</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-maps\">google-maps</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/django\">django</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Rob-Owen/commute\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Rob-Owen/commute\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["HobbyHack", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"HobbyHack \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/639/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"HobbyHack \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/640/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>SkyScanner API inspired us to do something useful with it. Although there exist projects that use SkyScanner API to optimize travel path by the price or the distance, we wanted to optimize it by another variable that might be more meaningful to a person. That's why we came up with interest-based traveling salesman problem enabling end-users to find their optimal journey based on their interests, for example, museums, pubs or theaters. </p>\n<h2>What it does</h2>\n<p>The webpage takes the user's list of interest and their location as a starting destination, along the dates and the preferred radius of travel. The output is a journey planned on the map based on their interests at the same time minimizing the prize with the SkyScanner.</p>\n<h2>How I built it</h2>\n<p>The website takes the user interests as an input along with a current location as a starting point for TSP problem. It uses Google Maps API to find the closest major cities within the specified radius and computes interest-related best cities to visit based on the average rating of the places on Google Maps. The cities are then passed onto SkyScanner API to search for the cheapest flights and routes. All combinations of these routes are passed onto the Traveling Salesmen Problem which computes the best path. The path and coordinates are then passed back to Esri API and displayed as a route on the map.</p>\n<h2>Challenges I ran into</h2>\n<p>We had all the components working separately but with the limit of time we found it difficult to join them together smoothly. Because of this, a lot of details we wanted to include had to be omitted (for example displaying details of the route which is a very easy and logical next step), so that we could present the full product. Also, we used a lot of separate components, which was a challenge with respect to time.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We all value the technologies that we learned, and above all the sense of achievement that came from fully working product that we achieved through teamwork</p>\n<h2>What I learned</h2>\n<p>the use of various APIs, Django, how to interface between front-end and back-end</p>\n<h2>What's next for HobbyHack - plan your journey based on your hobbies</h2>\n<p>We want to include more information about the journeys and most of all, add more variables to optimize for example weather information.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-maps\">google-maps</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/esri\">esri</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/skyscanner\">skyscanner</a></span></li><li><span class=\"cp-tag\">geopy</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/django\">django</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li></ul>\n</div>\n</div>", [""]], ["LazyShopper", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"LazyShopper \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/633/datas/gallery.jpg\"/>\n<p>\n<i>HomePage</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Being busy. And lazy.</p>\n<h2>What it does</h2>\n<p>We used the Tesco API to search and suggest relevant items to people using sorting algorithms. This allows users to sort their items by price and nutritional content such as Calories, Protein, Fat or Sugar.</p>\n<h2>Challenges we ran into</h2>\n<p>Since we are dependent on Tesco's website, we faced problems when we realised we couldn't log into an account programmatically. We also encountered problems when trying to connect the front and back-ends.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Our continued belief in the project even though everything was telling us to switch tactics.</p>\n<h2>What we learned</h2>\n<p>[Hichame] Using the networking feature of a browser to see the types of requests and content being sent.\n[Hichame] [Tolu ] Using the Tesco API.\n[All of us] Working on a tech project with complete strangers.\n[Chining] How to make a website from scratch\n[Eleni] My first hackathon was a great experience. My team help me to understand deeper the algorithmic thinking since I am beginner with programming. Also, I get familiar with languages that I have never worked with before.</p>\n<h2>What's next for LazyShopper</h2>\n<p>Tracking the user over period of time in order to predict their future shopping habits. (The initial plan was to) Automate grocery shopping by allowing the user to select their favourite/common items (such as milk or chocolate). Create a spotify type page where users can just click a button and have recipe or mood based meals such such as \"Comfort Food\" or \"Mexican Night\".</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">tesco-api</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/HichameMoriceau/OxfordHack-automated-grocery-shopping\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/HichameMoriceau/OxfordHack-automated-grocery-shopping\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I focused on front-end development. I designed a website for our team, including  homepage, user's information page and teammate introduction page.", "", "", ""]], ["Accio Nimbus", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Accio Nimbus \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/608/datas/gallery.jpg\"/>\n<p>\n<i>Find your way, everyday!</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>I remember the first time Shu looked at me. He couldn t contain himself. 2 words popped out of his mouth. Those words will remain forever as our team name: Sparky Lashes. Jokes aside, our inspiration came from the fact that google trip was supposed to be a big hit, but it failed. Miserably. We tried to better it. We succeeded. Then we failed. Stay tuned for our story...</p>\n<h2>What it does</h2>\n<p>Everything, but what s supposed to actually do. Getting attractive locations? CHECKED. Getting distances? CHECKED. Routing? Double checked. Improving travel time? Well...we are all about sightseeing. We take our time. </p>\n<h2>How we built it</h2>\n<p>Sleepless hours, spilled blood and dead bugs are no far from the truth. Coming from a background involving hardcore C#-ing, C++ and Django, we thought about using none of those! 24 hours, of which 23 trying to understand what we were actually typing and one to write this epic story... Our salvation came in the form of API-s and open source. We will never forget our stranger friends. Not only we made the web, but it actually runs. </p>\n<h2>Challenges we ran into</h2>\n<p>Crazy words, blue screen due to 100+ tabs and sleep deprivation. Not to speak about each and single new line of code. At one point, Facebook refused our conversations. We thought about using git. But it was not hardcore enough. While we were trying to figure out javascript...we got into jquery.. We tried to run away from it, but we weren't fast enough. During morning hours, we had a moment of weakness in which we just collapsed. We woke up 15 minutes later, with no memory of our code. Of course, this did not stop us! We had to keep fighting! We had to prevail! Cheap version of red bull after cheap version of redbull and we were closer and closer to deploying our project. One thing we forgot. We forgot to learn Chinese (Microsoft Cognitive Services).. little did we know..</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We can type jquery in 3 different ways. We added 3 more languages, including a bit of Chinese. We mumbled-jumbled our way thought this hack. We proved ourselves brave and limitless. We attended countless challenges, being involved in machine learning and competitive programming as well as in actually finishing our hack. We even won some points for our houses.</p>\n<h2>What we learned</h2>\n<p>Except for the languages, to trust each other. I mean, I found it hard at first to let another pair of hands mess with my code. </p>\n<h2>What's next for Accio Nimbus</h2>\n<p>Fixing the totally not existing bugs. Solving the NP-complete part of it. Some glory along the way. Voice integration for ease of access and semi-AI just to take a part of the challenge of deciding what to visit next. We consider ourselves community inclined, therefore we will provide a way of gathering parties for sightseeing. The users would be able to rate guides and propose trips. And, of course, our services will always have a free version.</p>\n<p>Carry on and accio Nimbus!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag\">computer-vision</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/gps\">gps</a></span></li><li><span class=\"cp-tag\">places-api</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag\">confidence</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://socialsaleslist.com/home.html\" rel=\"nofollow\" target=\"_blank\" title=\"http://socialsaleslist.com/home.html\">\n<i class=\"ss-icon ss-link\"></i>\n<span>socialsaleslist.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Flock", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Small and medium-sized remote enterprises may struggle to find the best locale to set up a meeting with employees based in various different countries.</p>\n<h2>What it does</h2>\n<p>It provides the optimum location for people to congregate at minimum expense, which is of special importance for SME companies, for whom profit margins may be tight and who have no or small headquarters in few and disparate cities.</p>\n<h2>How we built it</h2>\n<p>We made use of genetic search and optimization algorithms.</p>\n<h2>Challenges we ran into</h2>\n<p>Defining the problem in a formal way using mathematic notation, in order to convert to a appropriate representation for the genetic algorithms.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Our solution was designed to be easily scalable, such that meetings involving larger groups would be handled with minimum additional effort.</p>\n<h2>What we learned</h2>\n<p>Application of genetic algorithms. The power of API as regards the quality of data available, is an influential element to the whole solution.</p>\n<h2>What's next for Flock</h2>\n<p>Enhancing it by introducing more parameters to the search function to increase to specificity and the power of the model and provide more detailed search results. Introducing hotel costs could give more accurate estimate of the true expense. The Skyscanner API has not the ability to show indirect routes between chosen airports, which limits the effectiveness of our model. Therefore the inclusion of this feature to the API could improve our solution.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/skyscanner\">skyscanner</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Okeanus/skyscanner\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Okeanus/skyscanner\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Trippin", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Trippin \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/721/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Trippin \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/675/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Trippin \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/616/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Trippin \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/614/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Trippin \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/617/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>Our web service is integrated with the Google Calendar API and occasionally checks whether the user has some free time in the following month, and if they do, it tries to plan a trip for them using SkyScanner.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-calendar\">google-calendar</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/skyscanner\">skyscanner</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["jetblazinit", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"jetblazinit \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/449/150/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>The original plan was to integrate both the Skyscanner API with the Esri API to come up with a hack that would allow people to identify peak travel periods to different popular destinations around the world. This would be useful to those who are avoiding the crowd, and who are looking for the cheaper destinations.</p>\n<h2>What it does</h2>\n<p>It generates a heatmap on the WebGL API, which identifies the destinations with lots of flights, using a self-written Gaussian function. It draws data from the Skyscanner API to do so.</p>\n<h2>How we built it</h2>\n<p>The original idea was to use the Esri API; however, there were technical issues with parsing the data into a geolocation database object that can be rendered by the layer, so we migrated to the WebGL API, feeding it with the JSON data drawn from the Skyscanner API.</p>\n<h2>Challenges we ran into</h2>\n<p>The Esri API did not offer some of the functionalities that we needed, i.e. we could not process the data to be passed into the Layer, without having access to their server (which is a paid service). There were issues with making calls to the Skyscanner API, which was only resolved in the night. We had to manually write the gaussian blur for the heat map, before mapping it to the globe. After mapping it to the globe, we had to re-plot the points on the globe, without the data stacking.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Despite the setbacks, we finally managed to complete the project, even though we had to start from scratch during the night.</p>\n<h2>What we learned</h2>\n<p>How difficult it is to hack into APIs without proper documentation and few features, as well as the difficulty in deploying to AWS.</p>\n<h2>What's next for jetblazinit</h2>\n<p>Mapping the data to history would allow people to plan their holidays in advance, so that they can make the best choices. We would also like to be able to write an algorithm that would identify the next best (nearest and cheapest) destination that people can look for as an alternative.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/skyscanner\">skyscanner</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/three-js\">three.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/webgl-earth\">webgl-earth</a></span></li></ul>\n</div>\n</div>", ["", "", "", ""]], ["Voicer", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Voicer \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/574/datas/gallery.jpg\"/>\n<p>\n<i>Voicer</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to use the Microsoft Cognitive Services to build something.</p>\n<h2>What it does</h2>\n<p>It allows you to create websites with your voice.\nYou say things like 'Set title, Oxford Hack' to add a title.\n'Add image of cookie', adds an image of a cookie.</p>\n<h2>How we built it</h2>\n<p>We used Django to build the server and parse the user's input.\nThe Bing search API provides us with the images to add to the </p>\n<h2>Challenges we ran into</h2>\n<p>We needed to develop simple voice commands which reduce errors in detection while also being able to parse things on the backend.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>The detection is very accurate and pretty fast as well. The webpages look very good and are take seconds to set up.</p>\n<h2>What we learned</h2>\n<p>Detecting and parsing voice commands.</p>\n<h2>What's next for Voicer</h2>\n<p>Adding different templates for the webpages so that the user has more customisation options.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/django\">django</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag\">cognitive-services</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/EwilDawe/OxfordHack\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/EwilDawe/OxfordHack\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["i worked front end", "", "", ""]], ["Censor", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Remove all political posts from your social media</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li></ul>\n</div>\n</div>", [""]], ["TyrannyEscape", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"TyrannyEscape \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/575/datas/gallery.jpg\"/>\n<p>\n<i>TyrannyEscape</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>The millions of suffering Americans stuck under Trump.</p>\n<h2>What it does</h2>\n<p>It allows customers to insure themselves against the rule of a tyrannical political leader. If a customer insures themselves against the rule of a particular election candidate, then in the event that that candidate wins the upcoming election, TyrannyEscape auto books them a flight out of the country, using the SkyScanner API, within 12 hours.</p>\n<h2>How I built it</h2>\n<p>Built by Mack - using python with the Skysanner API.</p>\n<h2>Challenges I ran into</h2>\n<p>Finding a way to scrape the internet for betting odds on upcoming election candidates.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Integrating the SkyScanner API.</p>\n<h2>What I learned</h2>\n<p>There aren't that many left wing world leaders right now...</p>\n<h2>What's next for TyrannyEscape</h2>\n<p>Going global! And finding betting odds for election candidates further afield than Europe, so that TyrannyEscape can insure those with even more at stake in their leadership elections than us here in the West.</p>\n</div>\n</div>", [""]], ["OxBot", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>The idea originally was to build an app for family and friends to fix up a vacation based on various factors. Didn't work, had to pivot a few hours before submission.</p>\n<h2>What it does</h2>\n<p>Goofs around</p>\n<h2>How we built it</h2>\n<p>Used Node for the server side logic, microsoft bot framework, Facebook messenger platform, </p>\n<h2>Challenges we ran into</h2>\n<p>Don't want to remember</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Built something that we won't be ashamed to submit</p>\n<h2>What we learned</h2>\n<p>Some vague idea about server side processing</p>\n<h2>What's next for OxBot</h2>\n<p>git rm -r</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag\">microsoftbotframework</span></li><li><span class=\"cp-tag\">recastai</span></li><li><span class=\"cp-tag\">facebook-messenger-platform</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/achadha0111/oxbot\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/achadha0111/oxbot\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Hacking is Magic", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/1U7mb3EqQxY?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Hacking is Magic \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/483/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Hacking is Magic \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/488/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Since this is a Harry Potter themed hackathon, I felt the need to create something matching the theme that allows us muggles to get a taste of what it's like to be a wizard. </p>\n<h2>What it does</h2>\n<p>When the user moves the wand, the 7 LEDs change colour and pattern depending on it's orientation. Requires some enthusiatic acting and imagination. </p>\n<h2>How I built it</h2>\n<p>This uses an Arduino Uno, an accelerometer, 3 breadboards, 7 neopixels and a portable phone charger. I used code from an existing project featuring a wand that controls a tv, and edited it to fit the LEDs and the effects I wanted. Accelerometers are notoriously inconsistent so it took some time to get the numbers right- they were usually very different than the original code.</p>\n<h2>Challenges I ran into</h2>\n<p>Initially had some issues getting the LEDs going before realising I used the wrong resistor (took far too long to realise). Getting the values right took time. The main issue I am still dealing with is the consistency of the accelerometer- it sometimes gives off random numbers as feedback, which in turn calls functions at the wrong time. Because of this I had to remove a (very pretty!) rainbow function, as it was getting called randomly.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Proud I got it all done in a reasonable time before the deadline! It's not my most ambitious project but it was a bit of fun.</p>\n<h2>What I learned</h2>\n<p>I've never used an accelerometer before so I learned how the values are read and used. I also learned a bit more about the neopixel library- mainly that it will be very difficult for me to write my own patterns for my LEDs.</p>\n<h2>What's next for Hacking is Magic</h2>\n<p>I would have loved to have taken this off the breadboard and onto an actual wand, but due to time and soldering constraints that was not to be. It would definitely be fun to do that in the future. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/holographicleah/MagicWandTVRemote_haxx6\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/holographicleah/MagicWandTVRemote_haxx6\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Online Magic Trick - Amaze Your Friends", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p> First ever hack, learning using code academy as I went along. Wanted to produce a website that allowed anybody to do a magic trick with very little practice. Work as a professional magician, and want to change my answer after I perform from, 'sorry, I can't tell you how I did that' to 'here's something that you can learn'.</p>\n<h2>What it does</h2>\n<p> It's an online magic trick. Read the instructions page first if you are using it. A person thinks of a card, or three people (one picks the colour, one picks the suit, one picks the value), they can change their mind as much as they want and you do not influence their decision. Whatever they say, when you click on the link a picture of their chosen card comes up. </p>\n<h2>How I built it</h2>\n<p> I used the code academy tutorial to learn how to initially write the basic code structure in html and css. Then I learnt how to put in the appropriate images and links onto the page, and on each letter. Didn't know what software to put the code that I had written into, so I just coded into the text file on my wordpress website on a new page. Started by coming up with a set of words that could be split into 4 instructions, to represent the four suits, with 13 characters in each instruction (minus spaces) to represent the 13 potential card values in each suit. Then coded each individual letter to correspond to each playing card (this took the bulk of the time as I had to attach an image link to every letter). I then reformatted all the information so that it was in one line as a sentence and added a title. Created a new instructions page and added a link to that. Then coded in the pictures and links, as well as centre lining the text and making it look nice. Finally I added a link from the instructions to my website (not coded during the hackathon), because... why not right? </p>\n<h2>Challenges I ran into</h2>\n<p> The biggest challenge I faced was convincing myself to start learning to code, then it was ensuring that all of the code was formatted and the website looked nice. Coming up with the word combination was difficult, as was ensuring that the link looked as much like one single hyperlink as possible. </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p> Finally got around to learning to code, and am now looking forward to working on many more exciting projects. Also proud to have come up with the idea and then gone on to execute it. Proud that it was all written in actual code rather than just editing the words on wordpress as I usually do with my website.</p>\n<h2>What I learned</h2>\n<p> How to use html/css. How to create headings, change font sizes, import images, add hyperlinks, add image hyperlinks, reformat code to become one sentence, work continuously for a few hours without procrastinating. </p>\n<h2>What's next for Online Magic Trick - Amaze Your Friends</h2>\n<p> Definitely going to design some more magic tricks that people can do for their friends using the platform. Hope to make them even better and far more difficult to figure out. Maybe also mix coding with some real life magic tricks. Also hope to do a psychology page where people can take part in experiments (eg. implicit association tests) to see if they have implicit biases and how they compare to the rest of the population. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://magicromil.com/online-magic-trick-show-your-friends/\" rel=\"nofollow\" target=\"_blank\" title=\"http://magicromil.com/online-magic-trick-show-your-friends/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>magicromil.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Emergen-c", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Emergen-c \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/612/datas/gallery.jpg\"/>\n<p>\n<i>The page. This is it.</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>With increasing numbers of refugees coming across many countries, the importance of being able to access the emergency services at any point is vital.</p>\n<h2>What it does</h2>\n<p>The site is a very light weight (&lt;90KB) response in any language with the emergency service numbers for the area.</p>\n<h2>How I built it</h2>\n<p>The site runs a simple node.js backend for fetching the numbers and translating the strings, and it fetches all of the numbers from JSON.</p>\n<h2>Challenges I ran into</h2>\n<p>Keeping the load size low whilst ensuring it is clear what everything on the site does.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Keeping the total page size &lt;100KB while still being useful</p>\n<h2>What I learned</h2>\n<p>Working with AWS is more complicated than I original foresaw.</p>\n<h2>What's next for Emergen-c</h2>\n<p>Removing the font-awesome dependency to half the further decrease the delivery size (~25KB after removal)</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://emergen-c.org\" rel=\"nofollow\" target=\"_blank\" title=\"http://emergen-c.org\">\n<i class=\"ss-icon ss-link\"></i>\n<span>emergen-c.org</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Emotion Filter", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>In our opinion, 9GAG transformed from a website which has really funny images, to a website which is full of disgusting or sad things. We decided to improve this, focus more on the quality of a meme website.</p>\n<h2>What it does</h2>\n<p>The application can get images from these kind of websites, for now in the prototype it has just predefined images, and it can monitor the users reaction to images whenever they open one, by taking a picture of them with the webcam, and using the Cognitive Service API, we detect their happiness level. In the end, pictures get ordered according to the average happiness level registered from users reactions.</p>\n<h2>How I built it</h2>\n<p>We built it using just Java, and different libraries of it (eg. JavaFX).</p>\n<h2>Challenges I ran into</h2>\n<p>The biggest challenge was to figure out what the binary image data actually means on the Microsoft API webpage, since no clear example was given.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We are proud that in the end we make it to work, and also had the chance to use artificial intelligence in our project.</p>\n<h2>What I learned</h2>\n<p>We learned a lot about Java, Java FX and different libraries.</p>\n<h2>What's next for Emotion Fileter</h2>\n<p>The next step for Emotion filter is to be deployed in websites and work together with the database of images, to be able to sort them according to happiness.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/excel\">excel</a></span></li><li><span class=\"cp-tag\">java-fx</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/vczero98/emotionfilter.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/vczero98/emotionfilter.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["AINotes", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We all use Note taking apps like Evernote or Google Keep (some of us use them pretty heavily), but AI/Machine Learning could make the experience more richer and user friendly.</p>\n<h2>What it does</h2>\n<ul>\n<li>Use NLP to understand queries to search through user's notes (DONE)</li>\n<li>Use AI to correct mistakes in notes (TODO)</li>\n<li>Use AI to automatically generate tags for notes for easy searching (TODO)</li>\n<li>Use AI to offer rich suggestions to improve the note (TODO)</li>\n<li>Use AI to extract useful information from the notes to offer summaries (TODO)</li>\n</ul>\n<h2>How I built it</h2>\n<p>Android Studio and Project Oxford APIs</p>\n<h2>Challenges I ran into</h2>\n<p>Microsoft's website isn't showing the subscription page where you can access subscription keys for other APIs, so not able to use the other API's at the moment</p>\n<h2>What I learned</h2>\n<p>Many things about AI, ML and NLP</p>\n<h2>What's next for AINotes</h2>\n<p>Complete this app, polish it and launch it for public next year!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/microsoft-project-oxford\">microsoft-project-oxford</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/theblixguy/AINotes\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/theblixguy/AINotes\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on building the Android app", "", ""]], ["FineType", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"FineType \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/537/datas/gallery.jpg\"/>\n<p>\n<i>Logo</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Occasionally, we find ourselves tapping the wrong button on the relatively small software keyboard on our smartphones. Thus was born the idea of a new input for phones - a way of typing that would get rid of the typing aspect entirely by streamlining the process.</p>\n<h2>What it does</h2>\n<p>FineType allows the user to input text characters purely through the use of hand motions and without the use of an on-screen keyboard.</p>\n<h2>How we built it</h2>\n<p>We used Java and the Android Studio IDE to build FineType.</p>\n<h2>Challenges we ran into</h2>\n<p>We found that the process of switching between groups of characters and between the characters inside each group a tedious process that kept bugging out for us. Eventually, the fix was found as a time delay for switching.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We're proud of the way we graphically represented to the user when they switched between the blocks of characters and which block they were on.</p>\n<h2>What we learned</h2>\n<p>We learned how to access accelerometer readings from an Android phone, along with negating gravity in accelerometer equations. We also learned how to create a GUI interface in Android Studio, an IDE with which we had no experience at all for creating apps - in fact, we created our first ever mobile app here at OxfordHack.</p>\n<h2>What's next for FineType</h2>\n<p>FineType's next steps would be to smooth the user experience by reducing the amount of errors that come from unexpected diagonal movement, smoothing the amount of noise experienced by the app from random movement, and adding features like capitalization, spacing, and repeating characters in a row.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/ShreySquared/OxfordHack-FineType\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ShreySquared/OxfordHack-FineType\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked full-stack", "I worked full stack for FineType"]], ["We Use Muse", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to explore what can be achieved in terms of thought-based computer control using the Muse Headband.</p>\n<h2>What it does</h2>\n<p>One can use the headband's accelerometer to control the cursor, but the thought pattern classification subsystem does not work very well, as it is very hard to collect clean training data without a pure lab environment (e.g. no distractions, etc.).</p>\n<p>We also built a simple prototype of an interface which would allow a user to track how focused they are during their work. If someone were to, perhaps, spend a long time working without being productive, this app could provide insights into why this was the case: it would highlight cases when a user would have trouble focusing.</p>\n<h2>How we built it</h2>\n<p>We used Python and Ruby, as well as the Muse research tools. For the data analysis, we used Jupyter and scikit-learn. For the perfect UX and design, we leveraged Comic Sans MS\u2122 and a patented marquee implementation.</p>\n<h2>Challenges we ran into</h2>\n<p>It's very difficult to analyze and classify traces of EEG activity in such a limited timeframe. Moreover, collecting clean data with no distractions is nearly impossible in hackathon conditions.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We collected quite a lot of data of people performing various activities while wearing the Muse headband. The accelerometer-based computer control interface also works quite well!</p>\n<h2>What we learned</h2>\n<p>EEG-powered human-computer interaction is <em>possible</em>, i.e., the signal does exist in the data. With appropriate training data collection and analysis, one could definitely build a real-time computer control system using EEG.</p>\n<h2>What's next for We Use Muse</h2>\n<p>We would like to improve our data collection conditions, and build a more robust pipeline for the data cleaning.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ruby\">ruby</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/scikit-learn\">scikit-learn</a></span></li><li><span class=\"cp-tag\">comic-sans</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/muse\">muse</a></span></li><li><span class=\"cp-tag\">muse-headband</span></li></ul>\n</div>\n</div>", ["First time working this closely with custom hardware, and definitely the first time analyzing EEG data. This was a blast to work on, despite the fact that the results still require more polish before being capable of working in practice.", "Some tangential contributions to the mouse tracking software and the dashboard for the EEG activity.", ""]], ["Project Cambridge", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Project Cambridge \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/812/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Project Cambridge \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/760/datas/gallery.jpg\"/>\n<p>\n<i>CDN landing page and instructions</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Project Cambridge \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/759/datas/gallery.jpg\"/>\n<p>\n<i>Simulated results with a slow server response time</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to get a better understanding of the features of AWS and learn about how incoming traffic can be managed and routed across multiple machines</p>\n<h2>What it does</h2>\n<p>It takes your remote assets and caches them on our high speed SSD backed AWS infrastructure</p>\n<h2>How I built it</h2>\n<p>It uses express to accept incoming traffic and caches the content it finds to disk.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>It auto scales and uses some really cool advanced AWS features</p>\n<h2>What's next for Project Cambridge</h2>\n<p>Tidy up the code base and probably privatise it for my own use because it would be super expensive to run publically</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://projectcambridge.com/\" rel=\"nofollow\" target=\"_blank\" title=\"http://projectcambridge.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>projectcambridge.com</span>\n</a></li>\n<li><a href=\"https://github.com/PandelisZ/project-cambridge\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/PandelisZ/project-cambridge\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Tune my life", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Tune my life \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/497/datas/gallery.jpg\"/>\n<p>\n<i>Home page</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Tune my life \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/588/datas/gallery.jpg\"/>\n<p>\n<i>Photos obtained, want to generate a playlist?</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Tune my life \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/590/datas/gallery.jpg\"/>\n<p>\n<i>Generating playlist...</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>If your life was a movie, which would be the soundtrack of it? Tune my life is a platform which collects your Instagram photos and, after running computer vision on the photos, generates the perfect Spotify \nplaylist that matches with your photos' story.</p>\n<h2>Inspiration</h2>\n<p>We wanted to develop something using sentiment analysis. </p>\n<h2>What it does</h2>\n<p>Tune my life collects your Instagram photos and, after running computer vision on the photos, generates the perfect Spotify playlist that matches with your photos' story.</p>\n<h2>How we built it</h2>\n<p>We built the platform with Python and used <a href=\"http://flask.pocoo.org/\" rel=\"nofollow\">Flask</a> for the server. The photos are obtained using the <a href=\"https://www.instagram.com/developer/\" rel=\"nofollow\">Instagram API</a> and then processed with <a href=\"https://www.microsoft.com/cognitive-services/en-us/apis\" rel=\"nofollow\">Microsoft cognitive services</a> in order to apply the sentiment analysis and retrieve the data. Finally, the playlist is generated using the <a href=\"https://developer.spotify.com/web-api/\" rel=\"nofollow\">Spotify API</a> according to parameters such as acousticness, danceability, loudness, tempo, balance, etc.</p>\n<h2>Challenges we ran into</h2>\n<p>API's restrictions (Pending approval of instagram to give public access), how to determine the music attributes from the parameters obtained when running cognitive analysis over the images, deploying to the server</p>\n<h2>Accomplishments that we're proud of</h2>\n<p><strong>tl;dr -&gt; It works!</strong>\nWe have used some technologies that we hadn't use before and the results are pretty accurate.</p>\n<h2>What we learned</h2>\n<p>How to use Spotify's API, Instagram's and Microsoft cognitive services. Also we did some research related to the topic we discovered relations between feelings and music attributes.</p>\n<h2>What's next for Tune my life</h2>\n<ul>\n<li>Get instagram's approval and be able to make it public.</li>\n<li>Use the images captions to obtain more information about the emotions related to the picture.</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag\">microsoft-cognitive-services</span></li><li><span class=\"cp-tag\">instagram-api</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/spotify\">spotify</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/wailingtam/score-me\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/wailingtam/score-me\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the backend, merging the APIs data and defining the main workflow. Configured Instagram API", "", "", ""]], ["Portal to a Magical Castle Game", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Portal to a Magical Castle Game \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/180/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Portal to a Magical Castle Game \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/185/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Portal to a Magical Castle Game \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/182/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Portal to a Magical Castle Game \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/184/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Portal to a Magical Castle Game \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/177/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Portal to a Magical Castle Game \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/179/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Portal to a Magical Castle Game \u2013 screenshot 7\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/183/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Portal to a Magical Castle Game \u2013 screenshot 8\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/181/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Portal to a Magical Castle Game \u2013 screenshot 9\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/171/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Portal to a Magical Castle Game \u2013 screenshot 10\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/174/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Portal to a Magical Castle Game \u2013 screenshot 11\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/172/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Portal to a Magical Castle Game \u2013 screenshot 12\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/173/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Portal to a Magical Castle Game \u2013 screenshot 13\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/176/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Portal to a Magical Castle Game \u2013 screenshot 14\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/175/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Portal to a Magical Castle Game \u2013 screenshot 15\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/447/178/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>This is a game with a magic theme to fit the theme of the hackathon. In this game the character has to follow game hints that lead to the player answering the phone to a friend who sends information about the location of a portal to a magical world. The way 3d graphics engines work greatly interests me so for fun, instead of using a program like unity that does the 3d for you, for this project I aimed to create a 3d game using just JavaScript, jQuery, HTML, paint images and screenshots I would take of 3d objects.\n I created 3D objects using SkectchUp then screenshotted these scenery models from lots of different angles and used JavaScript and jQuery to control when these images were displayed to create a 3d game experience for the user. I also used Photoshop to make the images backgrounds transparent where appropriate. The game includes some third person scenes in which the players width and height is multiplied by scalar values based on its y-coordinate to create perspective and show when the player is close or far away. This scene also includes some quick first person moments which occur when an object of great importance to the games story appears and the user is able to view this item in first person. This was done to make sure the user sees this object up close and notices it. As the player opens the portal the world distorts a bit to empathise the magical powers of the portal. Magic dust also appears above the flashing portal. Once the portal is opened the magical world is all in first person. The player is transported to a magical castle which they can freely walk up and down one corridor of. The corridor appears clear at first but as soon as the player starts to walk an enchanted floating hat appears. \nWhen making the game I came across many challenges. One of these was that the number of screenshots needed to make a smooth running 3D game was too large. I had to compromise and limit the number of images used to a reasonable number. I also struggled with problems caused by code written for different stages of the game affecting thing in a part of the game they were not intended for. The solution to this was to give each stage of the game a boolean variable that tracks if it should have started running yet or not. This helped me keep track of which stage of the game the user was in and what code should and shouldn\u2019t run for this stage of the game. \nThe main thing I leant was how to make the 3d for the first person scene in the game (in the castle scene). In the future, to expand on the game I could make the game longer so that you can explore more of the castle. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://www.314games.co.uk/oxfordhack/game.html\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.314games.co.uk/oxfordhack/game.html\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.314games.co.uk</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]]]