[["Window Share", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/E0kwLtTMWz8?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n</ul> </div>\n<div>\n<h2>Window Share</h2>\n<p><strong>Intuitive content sharing. Simply drag a program window from one computer to another.</strong></p>\n<p><strong>Seamless, local sharing</strong>\nWindow Share is the most intuitive way for you to share the things you enjoy with those close to you, help your co-workers on their projects, use multiple computers for optimum efficiency, or get through the wee hours of the morning at your next hackathon.</p>\n<p><strong>Drag and drop.</strong>\nAll you need to do is move your mouse off the side of your screen and it controls the computer next to you. If you\u2019re grabbing a window, it\u2019ll send whatever file is open in that window along for the ride. And if they don\u2019t have the program you have the file open in, it will open in their default.</p>\n<p><strong>Cross-platform</strong>\nYes, if you drag a Notepad file onto your friend\u2019s Mac, it\u2019ll open Textedit. (It\u2019s a new way to pass notes in class)</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/shell\">shell</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag\">batchfile</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/applescript\">applescript</a></span></li><li><span class=\"cp-tag\">win32</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/chrome\">chrome</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/sbower213/windowshare\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/sbower213/windowshare\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I developed the server / client socket interface. It is an extremely extensible interface that provides the ability to transfer many different types of content.", "my contributions were predominantly tears generated while working on the chrome extension", "Helped demo the ability to show screenshots as well as helped with reading windows on any Windows computer.", "I wrote all of the code for interfacing with Windows, capturing mouse/keyboard events, and manipulating the mouse. I also did a lot of the large-scale architecture of the program."]], ["Book Reading Bot (brb)", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<div class=\"alert-box alert\">\n        This image is currently processing. Please be patient...\n      </div>\n<img alt=\"Book Reading Bot (brb) \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"https://devpost-challengepost.netdna-ssl.com/assets/defaults/software-d4334efb72013df43784baffede9d379.gif\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<div class=\"alert-box alert\">\n        This image is currently processing. Please be patient...\n      </div>\n<img alt=\"Book Reading Bot (brb) \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"https://devpost-challengepost.netdna-ssl.com/assets/defaults/software-d4334efb72013df43784baffede9d379.gif\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>The Book Reading Bot (brb) programmatically flips through physical books, and using TTS reads the pages aloud. There are also options to download the pdf or audiobook.</p>\n<p>I read an article on <a href=\"http://columbiaspectator.com/\" rel=\"nofollow\">The Spectator</a> how some low-income students cannot afford textbooks, and actually spend time at the library manually scanning the books on their phones. I realized this was a perfect opportunity for technology to help people and eliminate repetitive tasks. All you do is click start on the web app and the software and hardware do the rest! </p>\n<p>Another use case is for young children who do not know how to read yet. Using brb, they can read Dr. Seuss alone! As kids nowadays spend too much time on the television, I hope this might lure kids back to children books.</p>\n<p>On a high level technical overview, the web app (bootstrap) sends an image to a flask server which uses ocr and tts. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ibm-watson\">ibm-watson</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/servo\">servo</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-drive-api\">google-drive-api</a></span></li></ul>\n</div>\n</div>", ["software", "hardware"]], ["encore.ai", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>encore.ai</h1>\n<p>Generate new lyrics in the style of any artist using Deep Learning. Try it out at <a href=\"http://encore.ai\" rel=\"nofollow\">http://encore.ai</a>!</p>\n<h2>Music Lives Forever.</h2>\n<p>From Elvis to The Beatles, Nirvana to Tupac, many of the artists we love are no longer creating. encore.ai lets you revive the spirit of your favorite artists in the modern age.</p>\n<h2>We are impatient.</h2>\n<p>Cant wait for the next Kanye album to drop? Were you part of the public outcry over the delayed release of Frank Ocean's new record? Fret no more \u2013\u00a0encore.ai delivers your favorite artist's next single at the touch of a button.</p>\n<h2>But How Does It Work?!</h2>\n<p>We used TensorFlow to create an LSTM (Long Short Term Memory) Neural Network that reads all of the lyrics of any musical artist. The network learns the style of how the artist writes \u2013\u00a0the context of words, rhymes, line/stanza breaks, etc. Given a seed word or phrase, it will generate a new song in that artist's style.</p>\n<h2>Some Examples:</h2>\n<h3>Kanye West</h3>\n<p>Never I admit I can't do I see a drug som... <br/>\nI\u2019m \u2019bout to re-united <br/>\nI'll need have to play me alone <br/>\nI'll fade back O extra until they cover from an ultralight beam <br/></p>\n<p>Because you do her money before my Sean harder <br/>\nNow, 2 West I one away<br/>\nI\u2019m up, so quit, One:] <br/>\nyeah, I will <br/>\nYou see, you need)<br/> \nAll your mic from a moment<br/> \nI'm saying, violate<br/></p>\n<p>Let\u2019s got no goodbyes to a dem me <br/>\nnow? <br/>\nI been nothing funny but we go n___<br/>\nGet all my racks steps <br/></p>\n<p>And rockin' (Grandma) watch my strippers got getting this b___ a shot, is like somebody It's old s__ <br/>\nAnd oh precious *<br/>\nCause we call that ready for not <br/></p>\n<p>[Hook] <br/>\nIt's an room 2 now, in the restaurant, clothing on. <br/>\nStanding dem my money <br/></p>\n<p>[Kanye West:] <br/>\nLet's fly off beats that I\u2019m at these good life with you <br/>\nkeep the big a_<em>, take my things and throw my s</em>_\u2019s is stronger<br/></p>\n<h3>Taylor Swift</h3>\n<p>paper lying here <br/>\n'Cause I swear out there ain't where <br/>\nYou outta be <br/>\nAnd you flashback to when he said forever and always <br/>\nOh, and it rains in your bedroom <br/>\nEverything is wrong <br/>\nIt rains when the sun came up, you were lookin' at me <br/>\nSanta baby, forgot to mention one little thing <br/>\nA ring</p>\n<p>And I don't think it all through? All these things will change<br/>\nCan you feel it now? <br/>\nI fall in love with you <br/>\nGive me a photograph to hang on my wall, superstar <br/></p>\n<p>How'd we got problems <br/>\nAnd I don't think we can solve them <br/>\nYou were the prince <br/>\nI used to see <br/>\nThe one we danced to all night long <br/></p>\n<p>Cause you got me a nice new apartment <br/>\nIn a city, wouldn't you have to make me go back there again.\" <br/></p>\n<p>find the wrong wrong <br/>\nOn our last night <br/>\nOoh, ooh, love's like this <br/>\nIt's something I missed <br/>\nOoh, ooh, ooh, ooh <br/>\nIt was the best night, never would forget how he moved.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag\">tensorflow</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://encore.ai\" rel=\"nofollow\" target=\"_blank\" title=\"http://encore.ai\">\n<i class=\"ss-icon ss-link\"></i>\n<span>encore.ai</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I wrote our LSTM model in TensorFlow.", "", "", ""]], ["Fretless", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/17spBbGGMG8?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Fretless \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/410/715/datas/gallery.jpg\"/>\n<p>\n<i>Close-up of Fretless attachment</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Fretless \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/410/716/datas/gallery.jpg\"/>\n<p>\n<i>Charlene playing the violin with Fretless</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Fretless \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/410/717/datas/gallery.jpg\"/>\n<p>\n<i>Side view of the hardware</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Fretless \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/357/datas/gallery.jpg\"/>\n<p>\n<i>Select instrument and song you want to play</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Fretless \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/358/datas/gallery.jpg\"/>\n<p>\n<i>GUI</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Learning a new instrument is hard. Inspired by games like Guitar Hero, we wanted to make a fun, interactive music experience but also have it translate to actually learning a new instrument. We chose the violin because most of our team members had never touched a violin prior to this hackathon. Learning the violin is also particularly difficult because there are no frets, such as those on a guitar, to help guide finger placement. </p>\n<h2>What it does</h2>\n<p>Fretless is a modular attachment that can be placed onto any instrument. Users can upload any MIDI file through our GUI. The file is converted to music numbers and sent to the Arduino, which then lights up LEDs at locations corresponding to where the user needs to press down on the string.</p>\n<h2>How we built it</h2>\n<p>Fretless is composed to software and hardware components.\nWe used a python MIDI library to convert MIDI files into music numbers readable by the Arduino. Then, we wrote an Arduino script to match the music numbers to the corresponding light. Because we were limited by the space on the violin board, we could not put four rows of LEDs (one for each string). Thus, we implemented logic to color code the lights to indicate which string to press. </p>\n<h2>Challenges we ran into</h2>\n<p>One of the challenges we faced is that only one member on our team knew how to play the violin. Thus, the rest of the team was essentially learning how to play the violin and coding the functionalities and configuring the electronics of Fretless at the same time. \nAnother challenge we ran into was the lack of hardware available. In particular, we weren\u2019t able to check out as many LEDs as we needed. We also needed some components, like a female DC power adapter, that were not present at the hardware booth. And so, we had limited resources and had to make do with what we had. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We\u2019re really happy that we were able to create a working prototype together as a team. Some of the members on the team are also really proud of the fact that they are now able to play Ode to Joy on the violin!</p>\n<h2>What we learned</h2>\n<p>Do not crimp lights too hard.\nThings are always harder than they seem to be.\nOde to Joy on the violin :)</p>\n<h2>What's next for Fretless</h2>\n<p>We can make the LEDs smaller and less intrusive on the violin, ideally a LED pad that covers the entire fingerboard. Also, we would like to expand the software to include more instruments, such as cello, bass, guitar, and pipa. Finally, we would like to corporate a PDF sheet music to MIDI file converter so that people can learn to play a wider range of songs.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">kivy</span></li></ul>\n</div>\n</div>", ["", "", "", ""]], ["xkcd For America", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"xkcd For America \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/112/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"xkcd For America \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/367/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Given the upcoming presidential election, we wanted there to be a fun way for people to determine which candidate aligned more with their interests, if they were to throw away all their pre-conceived notions about each candidate. We were interested in using Natural Language Processing and we all love reading xkcd comics, so we decided there was an interesting way we could integrate these two traditionally disparate tasks \u2013 reading funny comics vs. reading about presidential candidate election info/platforms.</p>\n<h2>What it does</h2>\n<p>Essentially, we boiled it down to the very basics. Our users visit our site to find what appears to be a very simple quiz. You flip through a series of xkcd comics, and you either upvote it or downvote it to indicate whether you found it interesting/funny. At the end, we determine which candidate you have a closer affinity with and show you the collective data of all the people who've participated!</p>\n<h2>How we built it</h2>\n<p>We curated the speeches of Trump and Clinton from their election campaigns, as well as nearly all of Trump's tweets from the last year. From this text corpus, we ran the latent Dirichlet allocation (LDA) algorithm in order to get a collection of 'topics' (Trump topics and Clinton topics) \u2013 these topics were then mapped to the most closely corresponding xkcd comics.\nFrom there, we built a front-end interface where users could indicate their interest in each xkcd comic, which we tracked the results of to display a diagnosis at the end, regarding whether they displayed more interest in Clinton topics vs Trump topics.</p>\n<h2>Challenges we ran into</h2>\n<ul>\n<li>Finding good, equal sources of data</li>\n<li>Cleaning the data in a way that the LDA algorithm could accept it</li>\n<li>Making sense of the LDA algorithm's results (tendency to give garbage topics)</li>\n<li>Making the bar graph show up with data results</li>\n</ul>\n<h2>Accomplishments that we're proud of</h2>\n<ul>\n<li>It works!!</li>\n<li>We've found a good deal of interested users, originally we weren't sure if people would like it :) </li>\n</ul>\n<h2>What's next for xkcd For America</h2>\n<p>We definitely think there's a lot of fun to be had with the data we have and our platform. </p>\n<ul>\n<li>Collecting more user data to make better visualizations and possibly compare with how this measures up to their preconceived candidate preference.</li>\n<li>Comparing the frequency that candidates used of SAT words in their speeches to determine who'd be more likely to attend college in 2016</li>\n<li>And more!</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/angular-js\">angular.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/nltk\">nltk</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/scikit-learn\">scikit-learn</a></span></li><li><span class=\"cp-tag\">gensim</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/exsmiley/hackmit2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/exsmiley/hackmit2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://xkcd4usa.herokuapp.com/\" rel=\"nofollow\" target=\"_blank\" title=\"https://xkcd4usa.herokuapp.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>xkcd4usa.herokuapp.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I trained the models for the machine learning components, set up the node.js backend, and worked on the controller for the frontend.", "I collected our dataset of speeches, worked on the frontend and did graphics/design work for images as well as cards using Angular and Material Design.", ""]], ["xkcd'd", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"xkcd'd \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/293/datas/gallery.jpg\"/>\n<p>\n<i>Partial search</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"xkcd'd \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/294/datas/gallery.jpg\"/>\n<p>\n<i>Bing Search</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"xkcd'd \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/295/datas/gallery.jpg\"/>\n<p>\n<i>Google Search</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"xkcd'd \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/414/069/datas/gallery.jpg\"/>\n<p>\n<i>'merica Mode</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>It is often easy to find oneself engrossed in the vastness of the internet. It was our duty to society to provide each and every man, woman, and child the opportunity for laughter and joy amongst their daily browsing activities. Hence, xkcd'd was born...born from the desire to bring intelligent comedy when least expected to deliver maximum enjoyment. </p>\n<h2>What it does</h2>\n<p>xkcd'd automatically curates an xkcd post based on what you are currently searching in Chrome, whether on Google or Bing. As a bonus feature, a interactive visual gallery of presidential xkcd mosaics and information about each of them is presented in honor of the upcoming election season (nicknamed \"'merica Mode\").</p>\n<h2>How we built it</h2>\n<p>xkcd'd is a Chrome extension. Thus, it was developed primarily using JavaScript. Additionally, the data crunching tasks related to the mosaic creation process was performed using python's image manipulation capabilities. </p>\n<h2>Challenges we ran into</h2>\n<p>The majority of the development team had no experience developing Chrome extensions. Thus, the related technologies had to be learned in order to successfully complete this project. Additionally, this project was not started until multiple hours into HackMIT due to technical difficulties with the hardware the team was planning on using for their original idea. Finally, the team had limited animation experience which made the added presidential xkcd mosaic show a challenge.  </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We have successfully created an application that works as we intended it to. It provides satisfaction to not only our team members, but all who we have demonstrated xkcd'd to. We believe that this application will provide joy to many users in the future. </p>\n<h2>What we learned</h2>\n<p>Never give up. We started late, switched projects a few times, and had never developed a Chrome extension before. Yet, our team was able to successful deliver a polished final project that will benefit a plethora of users.</p>\n<h2>What's next for xkcd'd</h2>\n<p>Feature enhancement, stability improvement, increased relevancy of the posts that are displayed to the user, and added functionality.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/chrome\">chrome</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/github\">github</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/bdrumheller/xkcd-d\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/bdrumheller/xkcd-d\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Pusheen Sell", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Pusheen Sell \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/536/datas/gallery.jpg\"/>\n<p>\n<i>The home screen of the app, listing all of the items for sale.</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to create a fun and easy way for students to sell items on campus.</p>\n<h2>What it does</h2>\n<p>Pusheen Sell allows users to browse items currently for sale and sell items of their own. Not only is the app quick and easy to use, but it also gives more information about the items on sale through short videos.</p>\n<h2>How we built it</h2>\n<p>The app is built using Xcode 8 and Swift 3, and the backend is handled via Firebase.</p>\n<h2>Challenges we ran into</h2>\n<p>We started out with a much more ambitious project than we could complete in 24 hours, so we had to make some hard decisions and cut features in order to make a working app.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We're happy that we were able to get the video processing working.</p>\n<h2>What we learned</h2>\n<p>Proper git management is important, even with a small team in the same place.</p>\n<h2>What's next for Pusheen Sell</h2>\n<p>We would like to add a few more features that we couldn't complete in 24 hours, and eventually get the app in hands of students to start user testing. Eventually, this would be a great app to be used on campuses across the world!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xcode\">xcode</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ios\">ios</a></span></li><li><span class=\"cp-tag\">pusheen</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li></ul>\n</div>\n</div>", ["I worked on the iOS app and convinced the team to go all-out on the Pusheen theme.", "", "", ""]], ["Ethereum Piggy", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Ethereum Piggy \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/078/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Ethereum Piggy \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/079/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>Ethereum Piggy lets you save money with a virtual Piggy Bank. The app connects to your coinbase ethereum wallet and allows you to put money into your virtual Piggy Bank. \nThanks to Ethereums contracts in the blockchain we secure the savings until a set time and can guarantee that they will be released after the time to the original owner. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ios\">ios</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/coinbase\">coinbase</a></span></li><li><span class=\"cp-tag\">ethereum</span></li></ul>\n</div>\n</div>", ["I designed and implemented the contract. ", ""]], ["Amicable", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We all realized that we spend way to much time planning while on vacation instead of vacationing.</p>\n<h2>What it does</h2>\n<p>Ami creates a planner for what you should do while on vacation.  There is a simple user-input form where you can enter the things you'd like to do, and how badly you'd like to do them.  Ami takes this into account and will plan your day considering factors that you might not want to have to deal with, like hours places are open and how long it takes to get from one place to another.</p>\n<h2>How we built it</h2>\n<p>We used TwoSigma's Beaker Notebook.  We used a HTML form for user input implementing Google's API to determine the locations and hours of the places users said they wanted to go see.  Then, a Java cell takes in information about the locations, hours, and user preference to determine an optimal schedule.</p>\n<h2>Challenges we ran into</h2>\n<p>One of the strengths of the Beaker Notebook is its ability to use a variety of programming languages in the same notebook. However, that was also one of its core weaknesses. We initially had trouble getting the different programming languages we used to communicate with each other. Furthermore, we also ran into difficulties designing an algorithm that uses both user preferences and parameters about the various locations to create an optimal schedule. In the end, we settled on a greedy algorithm to accomplish this task. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We were able to use the strengths of various different programming languages such as java for creating algorithms and python for handling the data from the google API to create a optimized product.</p>\n<h2>What we learned</h2>\n<p>We learned that using various languages together is a massive challenge. </p>\n<h2>What's next for Amicable</h2>\n<p>Create a UI, accept more more information about the locations such what times these locations are the least crowded and how other tourists rate these locations.</p>\n<h2>See a demo!</h2>\n<p>Try entering in some places you'd like to visit.  Edit the sample events in the Java class to see how the scheduling algorithm works.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">beaker</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://pub.beakernotebook.com/publications/dca6aa6a-7dca-11e6-bad0-0f3663541bb8\" rel=\"nofollow\" target=\"_blank\" title=\"https://pub.beakernotebook.com/publications/dca6aa6a-7dca-11e6-bad0-0f3663541bb8\">\n<i class=\"ss-icon ss-link\"></i>\n<span>pub.beakernotebook.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["ColoVR", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/HldNqLBlTgc?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n</ul> </div>\n<div>\n<h2>What it does</h2>\n<p>ColoVR is a virtual experience allowing users to modify their environment with colors and models. It's a relaxing, low poly experience that is the first of its kind to bring an accessible 3D experience to the Google Cardboard platform. It's a great way to become a creative in 3D without dropping a ton of money on VR hardware.</p>\n<h2>How we built it</h2>\n<p>We used Google Daydream and extended off of the demo scene to our liking. We used Unity and C# to create the scene, and do all the user interactions. We did painting and dragging objects around the scene using a common graphics technique called Ray Tracing. We colored the scene by changing the vertex color. We also created a palatte that allowed you to change tools, colors, and insert meshes. We hand modeled the low poly meshes in Maya.</p>\n<h2>Challenges we ran into</h2>\n<p>The main challenge was finding a proper mechanism for coloring the geometry in the scene. We first tried to paint the mesh face by face, but we had no way of accessing the entire face from the way the Unity mesh was set up. We then looked into an asset that would help us paint directly on top of the texture, but it ended up being too slow. Textures tend to render too slowly, so we ended up doing it with a vertex shader that would interpolate between vertex colors, allowing real time painting of meshes. We implemented it so that we changed all the vertices that belong to a fragment of a face. The vertex shader was the fastest way that we could render real time painting, and emulate the painting of a triangulated face. Our second biggest challenge was using ray tracing to find the object we were interacting with. We had to navigate the Unity API and get acquainted with their Physics raytracer and mesh colliders to properly implement all interaction with the cursor. Our third challenge was making use of the Controller that Google Daydream supplied us with -  it was great and very sandboxed, but we were almost limited in terms of functionality. We had to find a way to be able to change all colors, insert different meshes, and interact with the objects with only two available buttons.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We're proud of the fact that we were able to get a clean, working project that was exactly what we pictured. People seemed to really enjoy the concept and interaction. </p>\n<h2>What we learned</h2>\n<p>How to optimize for a certain platform - in terms of UI, geometry, textures and interaction.</p>\n<h2>What's next for ColoVR</h2>\n<p>Hats, interactive collaborative space for multiple users. We want to be able to host the scene and make it accessible to multiple users at once, and store the state of the scene (maybe even turn it into an infinite world) where users can explore what past users have done and see the changes other users make in real time.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">daydream</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/ascn/ColoVR\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ascn/ColoVR\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["UI", "Ray tracing player interaction (painting and dragging objects), Scene creation, Graphic Icons, Modeling in Maya", ""]], ["TourDeMarsVR", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"TourDeMarsVR \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/551/datas/gallery.jpg\"/>\n<p>\n<i>Live game </i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"TourDeMarsVR \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/642/datas/gallery.jpg\"/>\n<p>\n<i>Hardware</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"TourDeMarsVR \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/644/datas/gallery.jpg\"/>\n<p>\n<i>The User Experience </i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"TourDeMarsVR \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/655/datas/gallery.jpg\"/>\n<p>\n<i>arduino code running</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to give virtual reality a purpose, while pushing its limits and making it a fun experience for the user.</p>\n<h2>What it does</h2>\n<p>Our game immerses the user in the middle of an asteroid belt. The user is accompanied by a gunner, and the two players must work together to complete the course in as little time as possible. Player 1 drives the spacecraft using a stationary bike with embedded sensors that provide real-time input to the VR engine. Player 2 controls uses a wireless game controller to blow up asteroids and clear the way to the finish.</p>\n<h2>How we built it</h2>\n<p>Our entire system relies on a FireBase server for inter-device communication. Our bike hardware uses a potentiometer and hall-effect sensor running on an Arduino to measure the turn-state and RPMs of the bike. This data is continuously streamed to the FireBase server, where it can be retrieved by the virtual reality engine. Player 1 and Player 2 constantly exchange game state information over the FireBase server to synchronize their virtual reality experiences with virtually no latency.</p>\n<p>We had the option to use Unity for our 3D engine, but instead we used the SmokyBay 3D Engine (which was developed from scratch by Magnus Johnson). We chose to use Magnus' engine because it allowed us to more easily at support for FireBase, and additional hardware.</p>\n<h2>Challenges we ran into</h2>\n<p>We spent a large amount of time trying to arrive at the correct configuration of hardware for our application. In particular, we spent many hours working with the Particle Photon before realizing that it's high level of latency makes it unsuitable for real time applications. We had no prior experience with FireBase, and spent a lot of time integrating it into our project, but it ultimately turned out to be a very elegant solution.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are most proud of the integration aspect of our project. We had to incorporate many sensors, 2 iPhones, a FireBase database, and a game controller into a holistic virtual reality experience. This was in many ways frustrating, but ultimately very rewarding.</p>\n<h2>What we learned</h2>\n<p>In retrospect, it would have been very helpful to have a more complete understanding of the hardware available to us and it's limitations.</p>\n<h2>What's next for TourDeMarsVR</h2>\n<p>Add more sensors and potentially integrating Leap Motion instead of hand held gaming pad. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/objective-c\">objective-c</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-cardboard\">google-cardboard</a></span></li></ul>\n</div>\n</div>", ["I put together the hardware on the bike, and worked on the Arduino code that reads sensor values, calculates RPMs and handlebar position, and sends the data to a computer over USB. I also wrote a Python script with Somi that takes in sensor data from the Arduino via USB, parses it, and continuously pushes the data to Firebase. ", "", "", ""]], ["VR DJ", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to hack on the HTC Vive and learn a new technology.</p>\n<h2>What it does</h2>\n<p>VR DJ allows you to visualize and manipulate music. You are placed in a world where you can see glowing bars that change size based on the frequencies of the music. You can then change the volume by moving the controllers up and down, change the tempo by moving the controllers closer and farther apart, and move to the next song by moving one controller up and the other down.</p>\n<h2>How we built it</h2>\n<p>We used Unity and the HTC Vive to develop our hack. Since neither of us had significant experience with Unity and we had zero experience with Vive, we built it very slowly, learning along the way.</p>\n<h2>Challenges we ran into</h2>\n<p>We had difficulty detecting input from the HTC Vive controllers and eventually chose to work around the issue due to time constraints.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We made a thing! Our hack works and is usable, and actually provides an interesting and somewhat humorous listening experience.</p>\n<h2>What we learned</h2>\n<p>Lots! \nWe learned how to use Unity, C#, basic algebra, and the Vive!</p>\n<h2>What's next for VR DJ</h2>\n<p>Lots! </p>\n<ul>\n<li>Be able to play any user selected song stored on their pc</li>\n<li>Be able to amplify only specific frequency bands, similar to an equalizer</li>\n<li>Allow track rewinding</li>\n<li>Color changing visualization based on song tempo</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag\">vive</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["DronAR", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"DronAR \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/315/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p><strong>DronAR</strong> was inspired by a love of cool technology. Drones are hot right now, and the question is, why not combine it with VR? The result is an awesome product that allows for drone management to be more <strong>visually intuitive</strong> letting users interact with drones in ways never done before.</p>\n<h2>What it does</h2>\n<p><strong>DronAR</strong> allows users to view realtime information about their drones such as positional data and status. Using this information, users can make on the spot decisions of how to interact with their drown.</p>\n<h2>How I built it</h2>\n<p>Unity + Vuforia for AR. Node + Socket.IO + Express + Azure for backend</p>\n<h2>Challenges I ran into</h2>\n<p>C# is <em>beautiful</em></p>\n<h2>What's next for DronAR</h2>\n<p>Adding SLAM in order to make it easier to interact with the AR items.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/vuforia\">vuforia</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/azure\">azure</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/socket-io\">socket.io</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://www.dronar.xyz\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.dronar.xyz\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.dronar.xyz</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Worked on Azure + Socket IO + Node, backend is fun", "", "", ""]], ["Game of Drones", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Game of Drones \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/447/datas/gallery.jpg\"/>\n<p>\n<i>Drone management utility with street view</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Game of Drones \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/448/datas/gallery.jpg\"/>\n<p>\n<i>Food order page</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>Ever wish you could order food from the comfort of your car? Game of Drones provides advanced route planning algorithms for drones to deliver food to moving vehicles using real time OpenStreetMaps data and PostMates fee estimates.</p>\n<p>Game of Drones also provides an enterprise-side drone control and management tool. Drones once dispatched can be tracked by customers in real-time on the same app. Customers are shown street view feeds from the GPS co-ordinates of the drone. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/leaflet-js\">leaflet.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/openstreetmap\">openstreetmap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-streetview\">google-streetview</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/postmates\">postmates</a></span></li><li><span class=\"cp-tag\">mithril.js</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://dronald.stevenhao.com\" rel=\"nofollow\" target=\"_blank\" title=\"http://dronald.stevenhao.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>dronald.stevenhao.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Downloaded cat pics", ""]], ["Bitcard", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to do something involving bitcoin and chrome extension, and came across this idea.</p>\n<h2>What it does</h2>\n<p>Allows you to shop online on a site that doesn't traditionally accept bitcoin. When you make a purchase, it sends the bitcoin to our coinbase account, and we issue you a prepaid capital one Nessie credit card that you can use to make your purchase. No annoying 10-minute confirmations!</p>\n<h2>How we built it</h2>\n<p>We have a node.js backend on heroku running the API integrations. We use the coinbase and Nessie APIs to handle the money, and deliver the app via a chrome extension. Firebase stores a hashmap between nessie customer ids and coinbase customer ids. </p>\n<h2>Challenges we ran into</h2>\n<p>API integration issues, Implementing OAuth2,</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Node.JS integrations; pratical application, simple and elegant</p>\n<h2>What we learned</h2>\n<p>How to use these APIs, make a chrome extension.</p>\n<h2>What's next for Bitcard</h2>\n<p>Use of other cryptocurrencies, integration with other online wallet providers</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/ravirahman/bitcard-backend\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ravirahman/bitcard-backend\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Worked on the API backend, including coinbase oauth2 and capital one nessie api integrations.", "Designed and implemented the front end and the integration as a chrome extension.", "Worked on both backend and frontend, set up the system to generate a new credit card number."]], ["AskTheCandidates", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"AskTheCandidates \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/544/datas/gallery.jpg\"/>\n<p>\n<i>An example of complex policy from both sides.</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>With the debates coming up, we wanted to come up with a way of involving everyone. We all have topics that we want to hear the candidates discuss most of all, and we realised that we could use markov chains to do it!</p>\n<h2>What it does</h2>\n<p>Enter a topic, and watch as we generate a conversation between Hillary Clinton and Donald Trump on the subject.</p>\n<h2>How we built it</h2>\n<p>We use a library of speeches from both candidates and markov chains to generate responses.</p>\n<h2>Challenges we ran into</h2>\n<p>It was important to ensure coherency where possible - that was difficult since politicians are evasive at the best of times!</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Our wonderful front end, and the unintentional hilarity of the candidates' responses.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/alexwolson/AskTheCandidates\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/alexwolson/AskTheCandidates\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the back end using python with markovify and nltk.", "I worked on the front end using HTML, CSS, and Bootstrap.", "", ""]], ["Pusheats", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Pusheats \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/614/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Pusheats \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/615/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Pusheats \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/616/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Pusheats \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/617/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Pusheen + Psychology + Nativescript = healthier living! Obesity is one of the leading causes of preventable death, and we wanted to help address this growing crisis.</p>\n<h2>What it does</h2>\n<p>We wrote an iOS/Android mobile application based on psychology/neuroscience lab research dialogues that have been demonstrated to help people to improve their eating habits. The application lets people record their meals, enter mealtimes to get helpful \"nudges\" from Pusheen, and rate their mood before and after meals so that people can better understand the impact that their food choices are having on their life. We also include random doses of XKCD comics related to food to encourage people to browse the app for fun!</p>\n<h2>How we built it</h2>\n<ul>\n<li>\"Used Heroku for Flask app deployment for backend\"</li>\n<li>Scraped XKCD pictures and tagged captions with Monkeylearn's Machine Classifier APIs. Hand-tagged the categories that were relevant to healthy eating, and generated listing of all XKCDs suitable for healthy eating app</li>\n<li>Nativescript to develop mobile app</li>\n<li>Telerik platform to deploy app for prototyping</li>\n</ul>\n<h2>Challenges we ran into</h2>\n<ul>\n<li>Working with mobile apps for the first time</li>\n<li>Getting Nativescript dependencies and iOS/Android emulators set up on various devices</li>\n<li>\"No success with Microsoft OCR API for reading text from xkcd comics/images (#comicsansforcaptchas)\"</li>\n<li>Losing a laptop for several hours due to Windows 10 auto-update</li>\n</ul>\n<h2>Accomplishments that we're proud of</h2>\n<ul>\n<li>Working with Nativescript and Flask for the first time</li>\n<li>Working together with a ML API to improve image tagging quality</li>\n<li>Deploying our first mobile app!</li>\n</ul>\n<h2>What we learned</h2>\n<ul>\n<li>How to integrate different technologies to make a mobile app work</li>\n</ul>\n<h2>What's next for Pusheats</h2>\n<ul>\n<li>Pitching the app to friends at the psych lab!</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">nativescript</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag\">monkeylearn</span></li></ul>\n</div>\n</div>", ["", "", "", ""]], ["Picky Pusheen", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>No one wants to go around asking for people to hang out with them with little to no knowledge of what they need to do or how free they are. Picky Pusheen eliminates a lot of needless conversations and rejections.</p>\n<h2>What it does</h2>\n<p>We advertise your need to do a certain activity (getting dinner, jogging, getting groceries) and your friends can browse through their friends' activities (including yours) and pair up depending on their preferences. Also, we have the functionality to schedule an activity with just the press of a button, further streamlining the process.</p>\n<h2>How I built it</h2>\n<p>NativeScript allowed us to easily build a cross-platform mobile app with just a bit of javascript. The backend is built with Rails and our remote button is an arduino powered by the Photon wi-fi dev kit</p>\n<h2>Challenges I ran into</h2>\n<p>Very poor internet speed crippled us for the first 7 hours of this hackathon so we didn't get nearly as much done as we wouldn have liked.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Creating a hack that uses both hardware and software in a non-trivial manner</p>\n<h2>What I learned</h2>\n<p>NativeScript and general mobile development</p>\n<h2>What's next for Picky Pusheen</h2>\n<p>It will be the vehicle we use to have a lot less awkward conversations and hang out a lot more during everyday tasks</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">nativescript</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ruby-on-rails\">ruby-on-rails</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/3dprinting\">3dprinting</a></span></li><li><span class=\"cp-tag\">photon</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/TheMichaelHu/PickyPusheen\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/TheMichaelHu/PickyPusheen\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I set up the rails backend and data modeling.", "", "", ""]], ["Logo Lens", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/xxjJi76tULE?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We hope this app encourages users to invest in the stocks and grow their personal investments.</p>\n<h2>What it does</h2>\n<p>When the user sees a logo in everyday life and wants to learn more about the financial performance of said company in the stock exchange, the user can simply perform the airtap gesture and the HoloLens will take a snapshot of the current view. Then, the image is sent to Google\u2019s Cloud Vision API and analyzed to see if there are any logos in the picture. If a logo is detected, the company of the logo is found and the NASDAQ API is used to determine the recent performance of the company\u2019s stock. Finally, this financial data is visualized on the HoloLens through Unity. </p>\n<h2>How we built it</h2>\n<p>We had the HoloLens take a picture after receiving an airtap gesture. The picture is then run through a chain of APIs, specifically Google Vision (to detect logos), a company name .csv (to get ticker names from company names), and NASDAQ API (to check stock prices).</p>\n<h2>Challenges we ran into</h2>\n<p>We had challenges in implementing a gesture to capture photos, capturing photos, sending a JSON request through Unity to the Cloud Vision API, parsing XML from the NASDAQ API, and scripting in Unity. Because the HoloLens hasn\u2019t been developed on much yet, there was little documentation and examples to learn from. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Becoming familiarized with developing for an AR environment, using Unity and the Windows Holographic Platform. Figuring out the Cloud Vision image recognition API to detect images from the snapshot the user takes on the HoloLens.</p>\n<h2>What we learned</h2>\n<p>AR/Mixed Reality is an emerging field and devices like the HoloLens have incredible potential. It was a great learning experience to work with the HoloLens and figure out how to use Unity </p>\n<h2>What's next for Logo Lens</h2>\n<p>1) By incorporating Capital One API, we could simulate buying and selling stocks on the go. \n2) Selecting what pieces of data are more helpful to the user and presenting them using clean and easy to understand visualizations.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/microsoft-hololens\">microsoft-hololens</a></span></li><li><span class=\"cp-tag\">google-cloud-vision</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/nasdaq-data-on-demand\">nasdaq-data-on-demand</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/ChenJonathan/Logo-Locator\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ChenJonathan/Logo-Locator\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Integrated APIs and worked on representing the data in a graph.", "Streamlined application flow, integrated APIs, and designed UI in Unity", "", ""]], ["HomeBites", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>University students often skip out on meals or pursue food only when it's free. For these students, dinner has become an unavoidable expenditure instead of an enjoyable tasty experience. With HomeBites, students can conveniently experience the joys of a warmly cooked meals with interesting company. </p>\n<h2>What it does</h2>\n<p>Homebites connects guests to local hosts/residents who are willing to make a home-cooked meal. In addition, given the commitment of preparing meals, Homebites has a catering option for hosts who have extra food, ensuring that hosts do not lose money whatsoever. This is ideally suited for university students who want a home-cooked meal as well as travelers who wish to taste authentic local food in a region. </p>\n<h2>How we built it</h2>\n<p>Homebites was built with Microsoft Azure, Facebook Messenger and Graph API, Capital One API, Postmates API, and API.AI.</p>\n<h2>Challenges we ran into</h2>\n<p>Azure's Machine Learning Studio has problem reading Azure's DocumentDB source. In addition, communication between the Messenger Chatbot and the Azure database often needs to be debugged. The fact that Facebook Messenger's payment method requires several days for Facebook to be approved means we need to seek alternative payment approaches, and neither Capital One nor Coinbase, the available payment APIs, are mainstream enough to reach a wide audience. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>The chatbot has a good user interface and is extremely convenient to use.</p>\n<h2>What we learned</h2>\n<p>We became more familiar with the Graph and Messenger API in Facebook and Microsoft Azure. </p>\n<h2>What's next for HomeBites</h2>\n<p>HomeBites is ready to launch as soon as scalability issues are addressed. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/capital-one\">capital-one</a></span></li><li><span class=\"cp-tag\">messenger</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/azure\">azure</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/postmates\">postmates</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/machine-learning\">machine-learning</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/api-ai\">api.ai</a></span></li></ul>\n</div>\n</div>", [""]], ["Gaze", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Gaze \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/779/datas/gallery.jpg\"/>\n<p>\n<i>Gaze: Homepage</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Gaze \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/745/datas/gallery.jpg\"/>\n<p>\n<i>Searching educational lectures by locating timestamps for corresponding lecture slides </i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Gaze \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/780/datas/gallery.jpg\"/>\n<p>\n<i>Search audio content and subtitles by specific inputted text queries</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Gaze \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/714/datas/gallery.jpg\"/>\n<p>\n<i>Searching a video for a specific scene: \"Robert Downey Junior drinking\". Timestamps for matching scenes are displayed.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Gaze \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/691/datas/gallery.jpg\"/>\n<p>\n<i>\"Behind the scenes\": Scene screenshot analysis done through Microsoft's Cognitive Services</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Gaze \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/692/datas/gallery.jpg\"/>\n<p>\n<i>\"Behind the scenes\": Scene screenshot analysis done through Microsoft's Cognitive Services</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Gaze \u2013 screenshot 7\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/693/datas/gallery.jpg\"/>\n<p>\n<i>\"Behind the scenes\": Scene screenshot analysis done through Microsoft's Cognitive Services</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Gaze \u2013 screenshot 8\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/694/datas/gallery.jpg\"/>\n<p>\n<i>\"Behind the scenes\": Scene screenshot analysis done through Microsoft's Cognitive Services</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Deep learning as a tool can have a huge impact in the media industry. With visual and audio content taking over 70% of the internet, people often struggle with navigating through un-organized media content. Our goal is to transform cluttered video content into a simplified and streamlined navigating experience.</p>\n<h2>What it does</h2>\n<p>Gaze organizes un-organized videos to help the user interpret and navigate visual information. It allows the user to 1) search video content by specific inputted text queries, 2) search educational lectures by locating timestamps for corresponding lecture slides  3) search audio content and subtitles by specific inputted text queries.</p>\n<h2>How We Built It</h2>\n<p>First, we split the video into smaller scenes by creating an average brightness histogram and calculating entropy. Scenes were distinguished and determined by substantially different histogram and entropy results. Once scenes were separated, we sent two frames from each scene to Microsoft's Cognitive services to get a highly contextual description of the scene. Iterating through each description and clustering keywords into a giant bucket, we were able to provide the users a platform to navigate through a media content with accuracy and ease.</p>\n<h2>Challenges I ran into</h2>\n<p>We were limited to a low-end CPU from Azure, so video processing time took around 50ms per frame, with around 90,000 frames per clip. </p>\n<h2>What's next for Gaze</h2>\n<p>Lots of sleep and tourism.</p>\n</div>\n</div>", ["", "", "", ""]], ["Termibox", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We spend half our time in the browser and half our time on terminal (because we're nerds..), so we decided to merge them!</p>\n<h2>What it does</h2>\n<p>Termibox brings the functionality of the Terminal into the web - and then some!\nWe implemented different bash commands (ls, cd, grep) as they would apply to websites - for instance, typing \"cd ..\" will bring you back to your previous page and \"cd\" will bring you to your home page.\nBut, then, we added some new functionality as well. We created our own commands - like dataset-gen - to easily search the web using our extension. Typing \"dataset-gen \" will manually create a downloadable database of relevant pictures based on the query.</p>\n<h2>How we built it</h2>\n<p>We added in a new Chrome extension, by using Omnibox, that's triggered by typing \"$ \" into the URL bar. Then, for each command we commonly used in Terminal, we tried to think about how it would apply to the Internet. Some - like \"cd\" - were easy to transition. Others, like \"grep\" or \"cat\" required some creativity. The next step in our project was to implement something in Termibox that was harder in Terminal. This brought us to dataset-gen - it's often difficult to find good datasets. So, we used the Bing Search API to search for any query passed into dataset-gen and added capability to easily download these datasets. </p>\n<h2>Challenges we ran into</h2>\n<p>Some of the APIs were rather difficult to use and it took us a really long time to get images of a decent quality - by filtering out logos etc. - through our web scraper.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We implemented a whole bunch of terminal commands and managed to have enough time to integrate some new commands. We also built a website which serves as the Termibox manual! \n(Also, we managed to hide a Pusheen in our extension...find it if you can!)</p>\n<h2>What we learned</h2>\n<p>We learned how to develop Chrome extensions!</p>\n<h2>What's next for Termibox</h2>\n<p>We'll make the Github repos public so people can add whatever new commands they would want to see :)</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jade\">jade</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/amin10/url-term\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/amin10/url-term\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/mayuri95/dataset-gen\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/mayuri95/dataset-gen\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Breast Cancer Detection", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration: To develop a fast and efficient way of detecting bio-markers for diagnosis of breast cancer in women</h2>\n<h2>What it does: Our program has a set of images of cells undergoing mitotic divisions which are good biomarkers for prognosis of breast cancer. We take in the image of the breast tissue, break the image down to the size in which we have the standard atypia cell images, and then compare for any presence of abnormality in the breast cells</h2>\n<h2>How we built it: Collecting images of mitotic cells and using Wolfram Alpha's machine learning algorithm</h2>\n<h2>Challenges we ran into: Searching for criteria for a cell to be cancerous, comparing the atypia cells to breast cells</h2>\n<h2>Accomplishments that we're proud of: learning things in short time, coming up with algorithms for Biomaker detection, targeting a real world complex problem</h2>\n<h2>What we learned: Machine learning, using Wolfram Alpha's Development platform</h2>\n<h2>What's next for Detection of breast cancer based on image analysis: Coming up with an exhaustive set of criteria for cancerous breast cells, taking into account the orientation of the cells and convolutions, making it into a user friendly software</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/wolfram-technologies\">wolfram-technologies</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/machine-learning\">machine-learning</a></span></li></ul>\n</div>\n</div>", ["", "", "", ""]], ["Tinderprint", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Tinderprint \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/720/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Tinderprint \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/717/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Tinderprint \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/724/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Tinderprint \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/721/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Tinderprint \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/722/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Tinderprint \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/719/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Tinderprint \u2013 screenshot 7\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/716/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>Tinderprint</h1>\n<p>Tinderprint is a dating app that matches you with people based\non true physical and spiritual compatibility.  For millenia,\nhandreaders have been using fingerprints to characterize people's\npersonalities and to predict major life events.  Tinderprint uses\na neural net to analyze the unique qualities of your fingerprint.\nWe use these qualities to match you with people with compatible\npersonalities, helping you get to your next major life event &lt;3.</p>\n<p>Tinderprint uses a convolutional neural network trained on a public data set to identify the prominent features of your fingerprint. According to thousands of years of fingerprint reading, the presence of loops reveals your intelligence and demeanor, the presence of whorls indicates your will and conviction, and the presence of arches exposes your pragmatism and stubbornness. We use a similarity metric across these features and more to help you find partners you'll be compatible with.</p>\n<h2>Running the app</h2>\n<p>To run an instance of tinderprint, download the latest versions of npm\nand mongo.  Run mongo in the background (on port 27107), install the\napp's dependencies, and run the app.  You can then access the app at\nlocalhost:3000.</p>\n<pre class=\"language-nolang\"><code>mongod &amp;\nnpm install\nnpm start\n</code></pre>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">keras</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/scipy\">scipy</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ejs\">ejs</a></span></li><li><span class=\"cp-tag\">mobile-web</span></li><li><span class=\"cp-tag\">nist-dataset</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/machine-learning\">machine-learning</a></span></li><li><span class=\"cp-tag\">convolutional-neural-network</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/vinaymayar/tinderprint\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/vinaymayar/tinderprint\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["ControlGeek", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>The era of controlling your devices from anywhere in the world is here and we want to include everyone in the exciting new developments.</p>\n<h2>What it does</h2>\n<p>Using easy hand gestures, you can wirelessly control electronic devices from anywhere in your home.</p>\n<h2>How we built it</h2>\n<p>To create our product, we programmed the touch pad and wireless transmitter in python and the receiving end, a Raspberry Pi, in Python with an interface written in Javascript.</p>\n<h2>Challenges we ran into</h2>\n<p>The touchpad drivers were difficult to install and the values it reported varied significantly. As a workaround to this issue, we created a baseline value for each 'pixel' on the touchpad and enumerated the values that varied greatly from their baseline, indicating a touch.</p>\n<p>As we had to run our Raspberry Pi headless due to a lack of monitor, we initially needed to hunt down the Pi's SSH server on the open hackathon network. Eventually, we were able to setup a link-local connection for some initial configuration and transfer that to the open network. After the Pi was setup, we encountered an issue with our servos behaving erratically. It turned out that the Python GPIO library that came with the Pi did not allow for enough precision to give us any sort of fine grained control over the servos. Switching out the library for one built out of C solved the problem.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>There were two really defining moments of this hack. The first was when our web interface on the Raspberry Pi first gained full control of our servos and lights, allowing us to eventually expose an interface to the touchpad-driving code. The second defining moment was when we finally fixed all the major bugs in the touchpad-driving code, allowing it to properly detect gestures for the first time.</p>\n<h2>What we learned</h2>\n<p>We learned a lot about Python, signal processing techniques, analog servo operation, and a whole host of bits of knowledge in our building of ControlGeek, both from each other and from the great mentors HackMIT had around (we can't count how many times we called over someone from the Synaptics booth)</p>\n<h2>What's next for ControlGeek</h2>\n<p>The next step for ControlGeek would first include extending gesture support to detect different numbers of fingers, varying speed, and slow tracking. From there, ControlGeek could be hooked into any number of functionalities of a home such as lights, blinds, fans, and media players.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li><li><span class=\"cp-tag\">synaptics</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/love\">love</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/websockets\">websockets</a></span></li></ul>\n</div>\n</div>", ["In addition to coming up with the idea, I programmed the algorithms to read and convert the raw data into commands as well as transmit the commands over wifi to the receiver.", "", ""]], ["BlackBox", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/7KcSXuQXCng?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration: We're trying to get involved in the AI chat-bot craze and pull together cool pieces of technology -&gt; including Google Cloud for our backend, Microsoft Cognitive Services and Facebook Messenger API</h2>\n<h2>What it does: Have a look - message Black Box on Facebook and find out!</h2>\n<h2>How we built it: SO MUCH PYTHON</h2>\n<h2>Challenges we ran into: State machines (i.e. mapping out the whole user flow and making it as seamless as possible) and NLP training</h2>\n<h2>Accomplishments that we're proud of: Working NLP, Many API integrations including Eventful and Zapato</h2>\n<h2>What we learned</h2>\n<h2>What's next for BlackBox: Integration with google calendar - and movement towards a more general interactive calendar application. Its an assistant that will actively engage with you to try and get your tasks/events/other parts of your life managed. This has a lot of potential - but for the sake of the hackathon, we thought we'd try do it on a topic that's more fun (and of course, I'm sure quite a few us can benefit from it's advice :) )</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/machine-learning\">machine-learning</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/96imranahmed/blackbox-public\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/96imranahmed/blackbox-public\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://blackboxai.me\" rel=\"nofollow\" target=\"_blank\" title=\"https://blackboxai.me\">\n<i class=\"ss-icon ss-link\"></i>\n<span>blackboxai.me</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the general architecture of the chat bot and on the State Machine that converted the output from the NLPs API into meaningful actions. I learned a lot about how to integrate APIs into a project. ", "", "", ""]], ["Kinvest", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Kinvest \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/588/datas/gallery.jpg\"/>\n<p>\n<i>Kinvest Homepage</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Kinvest \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/589/datas/gallery.jpg\"/>\n<p>\n<i>Analysis Calculator</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Kinvest \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/587/datas/gallery.jpg\"/>\n<p>\n<i>Predicted impact of a $10 Loan to someone in need in Brazil</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to leverage machine learning to help lenders to Kiva learn where their money could make the greatest impact. Kiva is an international nonprofit, founded in 2005 and based in San Francisco, that works with microfinance institutions on five continents to provide loans to people without access to traditional banking systems. Lenders invest money in small businesses and fundraisers in underprivileged parts of the world.</p>\n<p>Our goal was to quantify the impact of people's donation and show people how even tiny amounts of money can help multiple families across the globe start businesses that are self sustainable. </p>\n<h2>What it does</h2>\n<p>Kinvest is trained on Kiva's large datasets. We used these to train a predictive model that can score the value of a dollar amount in a certain country and accurately predict the number of  families that are directly impacted by a donors donation. This encourages people to donate more.</p>\n<h2>How we built it</h2>\n<p>Kinvest is built in <code>python</code>. We used data and machine learning libraries like <code>pandas</code> and <code>sklearn</code>. We also integrated Flask, Beaker Notebook, and Firebase.</p>\n<h2>Challenges we ran into</h2>\n<p>With the data we had, it was very difficult to define what a successful loan was, or who a successful lender was. It was also difficult to learn how to leverage all of our large tech stack in just 24 hours.</p>\n<h2>Accomplishments that we're proud of</h2>\n<ul>\n<li>The potential impact of Kinvest is huge. We are excited to see where Kinvest will impact those in need!</li>\n<li>Finishing our hack in 24 hours</li>\n<li>Going from unfamiliar with these technologies to being able to properly implement them into an application was no small feat</li>\n</ul>\n<h2>What we learned</h2>\n<ul>\n<li>The satisfaction of hacking for good</li>\n<li>How to work with a large dataset in a limited amount of time</li>\n<li>The importance of picking up languages and technologies on the fly</li>\n</ul>\n<h2>What's next for Kinvest</h2>\n<p>We want to study Kiva's dataset more deeply so that we can better predict what a good choice for a loan is. The possibilities for linking up with other datasets (World Bank, Census, economic data) is nearly limitless. We want to see where the societal impact of Kinvest can go.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/machine-learning\">machine-learning</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/scikit-learn\">scikit-learn</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/pandas\">pandas</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["SplitPay", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"SplitPay \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/375/datas/gallery.jpg\"/>\n<p>\n<i>Image Processing Used</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"SplitPay \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/612/datas/gallery.jpg\"/>\n<p>\n<i>Thresholding tests</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Every time we go out with friends, it's always a pain to figure payments for each person. Charging people through Venmo is often tedious and requires lots of time. What we wanted to do was to make the whole process either by just easily scanning a receipt and then being able to charge your friends immediately.</p>\n<h2>What it does</h2>\n<p>Our app takes a picture of a receipt and sends to a python server(that we made) which filters and manipulates the image before performing OCR. Afterwards, the OCR is parsed and the items and associated prices are sent to the main app where the user can then easily charge his friends for use of the service.</p>\n<h2>How we built it</h2>\n<p>We built the front-end of the app using meteor to allow easy reactivity and fast browsing time. Meanwhile, we optimized the graphics so that the website works great on mobile screens. Afterwards, we send the photo data to a flask server where we run combination of python, c and bash code to pre-process and then analyze the sent images. Specifically, the following operations are performed for image processing:</p>\n<ol>\n<li>RGB to Binary Thresholding</li>\n<li>Canny Edge Detection</li>\n<li>Probabilistic Hough Lines on Canny Image</li>\n<li>Calculation of rotation disparity to warp image</li>\n<li>Erosion to act as a flood-fill on letters</li>\n</ol>\n<h2>Challenges we ran into</h2>\n<p>We ran into a lot of challenge actively getting the OCR from the receipts. Established libraries such Microsoft showed  poor performance. As a result, we ended up testing and creating our own methods for preprocessing and then analyzing the images of receipts we received. We tried many different methods for different steps:</p>\n<ul>\n<li>Different thresholding methods (some of which are documented below)</li>\n<li>Different deskewing algorithms, including hough lines and bounding boxes to calculate skew angle</li>\n<li>Different morphological operators to increase clarity/recognition of texts.</li>\n</ul>\n<p>Another difficulty we ran into was implementing UI such that it would run smoothly on mobile devices.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We're very proud of the robust parsing algorithm that we ended up creating to classify text from receipts.</p>\n<h2>What we learned</h2>\n<p>The the building of SplitPay, we learned many different techniques in machine vision. We also learned about implementing communication between two web frameworks and about the reactivity used to build Meteor.</p>\n<h2>What's next for SplitPay</h2>\n<p>In the future, we hope to continue the development of SplitPay and to make it easier to use, with easier browsing of friends and more integration with other external APIs, such as ones from Facebook, Microsoft, Uber, etc.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/meteor-js\">meteor.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/opencv\">opencv</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/capital-one\">capital-one</a></span></li><li><span class=\"cp-tag\">mobile</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/jsegaran/Splitpay\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/jsegaran/Splitpay\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Wrote image processing code for converting receipts to a more recognizable input. Helped implement text parser."]], ["Flight Aid", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Flight Aid \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/785/datas/gallery.jpg\"/>\n<p>\n<i>UI Screenshot</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Originally, we wanted to think of various ways drone delivery could be used to solve problems, and decided to create an app for emergency medicine delivery as there are certainly situations in which someone might not be able to make it to the hospital or pharmacy. Drones could deliver life-saving products like insulin and inhalers.\nBuilding upon that, I don't think many people enjoy having to drive to CVS or Walgreens to pick up a prescription medicine, so the drones could be used for all sorts of pharmaceutical deliveries as well.</p>\n<h2>What it does</h2>\n<p>This is a user-facing web app that allows the user to pick a delivery location and follow the delivery through real-time tracking. The app also provides an ETA.</p>\n<h2>How we built it</h2>\n<p>The app is built on CherryPy and the styling is done with HTML/CSS/SCSS/JS (jQuery). In terms of APIs, we used Mapbox to set and view location for tracking and ordering. This app was built off of DroneKit's API and drone delivery example, and we used DroneKit's drone simulator to test it.</p>\n<h2>Challenges we ran into</h2>\n<p>We really wanted to add SMS notifications that would alert the user when the package had arrived but ran into issues implementing the Twilio API without a server using only jQuery, as most solutions utilized PHP. It was also our first time working with CherryPy, so that was a challenging learning experience in terms of picking up a new framework.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>I'm proud of figuring out how to calculate ETA given coordinates, learning a lot more Python than I'd previously ever known, and integrating nice styling with the bare bones website. I'm also proud of the photoshopped Pusheen background.</p>\n<h2>What we learned</h2>\n<p>I learned how to work with new APIs, since I hadn't had much prior experience using them. I also learned more Python in the context of web development and jQuery.</p>\n<h2>What's next for Flight Aid</h2>\n<p>I really want to figure out how to add notifications so I can flesh out more features of the user-facing app. I would in the future want to build a supplier-facing app that would give the supplier analytics and alarms based on the drone's sensor data.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">dronekit</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/scss\">scss</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/LisaLudique/flightaidfinal\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/LisaLudique/flightaidfinal\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Drones For Humanity - Second-Order Autonomy", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Drones For Humanity - Second-Order Autonomy \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/209/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Drones For Humanity - Second-Order Autonomy \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/210/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Drones For Humanity - Second-Order Autonomy \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/212/datas/gallery.jpg\"/>\n<p>\n<i> </i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Drones For Humanity - Second-Order Autonomy \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/213/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>After a bit of research, we found that immediately following a natural disaster, the lack of aid is the cause of most of the casualties. In many third world countries, it takes as long as _ a few weeks _ for first responders to rescue many survivors. Many people in need of food, water, medicine, and other aid supplies can unfortunately not survive for longer than 48 hours. For this, we have created a POC drone that can work with a thousand others to search, identify and deliver aid to survivors.</p>\n<h2>What it does</h2>\n<p>The drone is fully autonomous, given a set of GPS coordinates, it will be able to deliver a package without human intervention. We took this concept a step further: our drone will search a predefined area, immediately following a natural disaster. While it is doing so, it is looking for survivors using some type of machine vision implementation. For the purpose of this project, we are using a color sensor camera and a color tag as our delivery point. Once the target has been found, a small medicinal package is released by means of an electromagnet. The drone then sends over the cellular network, the coordinates of the drop, notifying ground crews of the presence of a survivor. Furthermore, this also prevents multiple drones from delivering a package to the same location. The server coordinates the delivery on the scale of hundreds or thousands of drones, simultaneously searching the area.</p>\n<h2>How I built it</h2>\n<p>The flight control is provided by the Ardupilot module. The collision avoidance and color detection is handled by an Arduino. Internet access and pipelining is provided by a Raspberry Pi, and the server is an online database running Python on Google App Engine. The ground station control is using the Mission Planner, and provides realtime updates about the location of the drone, cargo condition, temperature, etc. Everything is built on a 250mm racer quad frame. Essentially, the flight computer handles all of the low-level flight controls, as well as the GPS navigation. The main workhorse of this drone is the Arduino, which integrates information from sonar sensors, an object sensing camera, as well as a GPS to guide the flight computer around obstacles, and to locate the color tag, which is representative of a victim of a natural disaster. The Arduino also takes in information from the accelerometer to be able to compute its position with the help of a downward facing camera in GPS-compromised areas.</p>\n<h2>Challenges I ran into</h2>\n<p><strong>weight</strong> and <strong>power management</strong>. Considering the fact that we had to use a small racer quad that only had a 2 pound maximum payload, we had to use as few and as light components as possible. Additionally, the power regulators on the motor controllers were only capable of powering a few small electronics. We had to combine multiple regulators to be able to power all of the equipment.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Perhaps coming up with an application of drones that could have a far-reaching impact; the ability to save hundred or thousands of lives, and possibly assist in economic development of third-world countries.</p>\n<h2>What I learned</h2>\n<p>Something as small as a drone can really make a difference in the world. Even saving a single life is substantial for a pseudo-self-aware machine, and is truly a step forward for technology.</p>\n<h2>What's next for Second-Order Autonomy</h2>\n<p>Robustness testing and implementation of the machine vision system. Of course scaling up the platform so that it may be a viable solution in third-world countries. Considering a clear need for the technology, this project could be taken further for practical use.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://hackmit-drone-project.appspot.com/\" rel=\"nofollow\" target=\"_blank\" title=\"http://hackmit-drone-project.appspot.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>hackmit-drone-project.appspot.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Skycart", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Drones are the future. With more and more advancements in drone technology, drones are becoming accessible by everyone. We saw an untapped marketplace for those in need of quick, reliable deliveries in large cities where a few blocks could take too long to traverse. By allowing people to have a way to deliver packages across cities, we enable many time sensitive deliveries to take place. This extends from the common consumer to industries and hospitals.</p>\n<h2>What it does</h2>\n<h2>How I built it</h2>\n<h2>Challenges I ran into</h2>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<h2>What's next for Skycart</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n</div>", [""]], ["LeapLock", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>LeapLock was inspired by the gesture based locking mechanism on Android phones, and the hassle of having to deal with physical keys. </p>\n<h2>What it does</h2>\n<p>LeapLock allows users to use 3D hand gestures to unlock a safe or any kind of lock. Users can register hand gestures as a \"password\" gesture. The lock then only opens when the user inputs the same hand gesture again.</p>\n<h2>How we built it</h2>\n<p>We used the LeapMotion Controller to track hand gestures, Node.js with Socket.IO for the web interface, and Beaker for additional pattern visualizations. </p>\n<h2>What's next for LeapLock</h2>\n<p>LeapLock is applicable to a variety of systems and devices that need authentication. For example, when you're traveling, you can use it to unlock luggage or hotel room doors without having to deal with losing keys. </p>\n<p>Path vizualization with Beaker Notebook: <a href=\"https://pub.beakernotebook.com/publications/a8fa25f8-7dc4-11e6-a786-5be5630250ae\" rel=\"nofollow\">https://pub.beakernotebook.com/publications/a8fa25f8-7dc4-11e6-a786-5be5630250ae</a></p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/leap-motion\">leap-motion</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag\">beaker</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/socket-io\">socket.io</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Howon/LeapLock\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Howon/LeapLock\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Firebase + Beaker", "Designed lock box with distributed system for demo.", "Developed 3D gesture similarity algorithm for authentication"]], ["Smart Drone Delivery Planning", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to build a very general, multi-vehicle path planning simulator, that boasted a unique user experience.</p>\n<h2>What it does</h2>\n<p>Allows users to specify, within Apple maps, the location of any number of packages and their corresponding target destinations, as well as any number of drones, each of which can have a custom weight capacity.  Once the locations are specified, a path planning algorithm determines how to assign each of the drones to delivery tasks, and a simulation is performed.</p>\n<h2>How we built it</h2>\n<p>We used A* with an admissible heuristic initially to solve the path planning algorithm optimally, but ultimately opted to use a more scalable algorithm at the cost of optimality that performs well in practice.</p>\n<h2>Challenges we ran into</h2>\n<p>Even with A*, as the number of packages increased beyond just a few, the problem became quickly intractable.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>The algorithm that we designed scales easily with more drones and packages and still provides intelligent coordination between drones.</p>\n<h2>What we learned</h2>\n<p>We learned the high cost associated with optimal solutions when dealing with difficult optimization problems.</p>\n<h2>What's next for Smart Drone Delivery Planning</h2>\n<p>We want to introduce constraints around the amount of time that a drone can stay in the air before it has to recharge.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag\">apple-maps</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/JessicaYeh/DroneMap\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/JessicaYeh/DroneMap\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I implemented the path finding algorithms and worked on making things more scalable.", ""]], ["JS Policy", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>When web developers use a third-party ad or analytics script (e.g. Google Analytics), they are trusting that party with their user's data. Unfortunately, third-parties sometimes turn out to be malicious, or they could be compromised. The New York Times experienced this at one point, requiring them to tweet, \"Attn: NYTimes.com readers: Do not click pop-up box warning about a virus -- it's an unauthorized ad we are working to eliminate.\" Other possible exploits could include scraping sensitive personal or financial information from a web page and sending it back to the malicious/compromised third-party's servers.</p>\n<p>In order to protect user data, it's important to keep third-parties in check. However, it's impractical and incomplete to review third-party scripts manually, so JS Policy offers a way to enforce what these scripts can and can't access on a web page.</p>\n<h2>What it does</h2>\n<p>JS Policy is a Javascript sandbox that isolates third-party scripts from the primary Javascript runtime and gives the sandbox a limited view of the DOM (the actual content on the page).</p>\n<h2>How I built it</h2>\n<p>JS Policy is implemented using a web worker inside a sandboxed iframe, with DOM reads &amp; mutations passing through a detailed policy, written by the web developer using the product.</p>\n<h2>Challenges I ran into</h2>\n<p>Javascript is designed for single threaded applications, so it lacks many useful synchronization primitives. I had to implement some of these primitives by repurposing a few brand new/experimental browser features.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I'm proud of how I was able to get a proof-of-concept demo of this idea up and running in just 24 hours, especially given that this is my first time working with the lower-level guts of the Javascript runtime.</p>\n<h2>What I learned</h2>\n<p>I learned a lot about service workers and Javascript's runtime.</p>\n<h2>What's next for JS Policy</h2>\n<p>I am hoping to continue to develop the project to support more nuanced policies.</p>\n<p>JS Policy uses a new, experimental browser feature called SharedArrayBuffers, so it only works in Chromium (pre-release Chrome) with special settings, so unfortunately a public URL demo wouldn't be of much use.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n</div>", [""]], ["Augmented Paper", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Augmented Paper \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/657/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>With the coming of the IoT age, we wanted to explore the addition of new experiences in our interactions with physical objects and facilitate crossovers from the digital to the physical world. Since paper is a ubiquitous tool in our day to day life, we decided to try to push the boundaries of how we interact with paper.</p>\n<h2>What it does</h2>\n<p>A user places any piece of paper with text/images on it on our clipboard and they can now work with the text on the paper as if it were hyperlinks. Our (augmented) paper allows users to physically touch keywords and instantly receive Google search results. The user first needs to take a picture of the paper being interacted with and place it on our enhanced clipboard and can then go about touching pieces of text to get more information.</p>\n<h2>How I built it</h2>\n<p>We used ultrasonic sensors with an Arduino to determine the location of the user's finger. We used the Google Cloud API to preprocess the paper contents. In order to map the physical (ultrasonic data) with the digital (vision data), we use a standardized 1x1 inch token as a 'measure of scale' of the contents of the paper.</p>\n<h2>Challenges I ran into</h2>\n<p>So many challenges! We initially tried to use a RFID tag but later figured that SONAR works better. We struggled with Mac-Windows compatibility issues and also struggled a fair bit with the 2D location and detection of the finger on the paper. Because of the time constraint of 24 hours, we could not develop more use cases and had to resort to just one.</p>\n<h2>What I learned</h2>\n<p>We learned to work with the Google Cloud Vision API and interface with hardware in Python. We learned that there is a LOT of work that can be done to augment paper and similar physical objects that all of us interact with in the daily world.</p>\n<h2>What's next for Augmented Paper</h2>\n<p>Add new applications to enhance the experience with paper further. Design more use cases for this kind of technology.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-cloud\">google-cloud</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/adityavishwanath/augmented_paper\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/adityavishwanath/augmented_paper\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Crowd Search", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Crowd Search \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/826/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Crowd Search \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/833/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>This week a 16 year old girl went missing outside Oslo, in Norway. Her parents posted about it on Facebook, and it was quickly shared by thousands of people. An immense amount of comments scattered around a large amount of Facebook posts consisted of people trying to help, by offering to hang up posters, aid in the search and similar. A Facebook group was started, and grew to over 15 000 people within a day. The girl was found, and maybe a few of the contributions helped?</p>\n<p>This is just one example, and similar events probably play out in a large number of countries and communities around the world. Even though Facebook is a really impressive tool for quickly sharing information like this across a huge network, it falls short on the other end - of letting people contribute to the search. Facebook groups are too linear, and has few tools that aid in making this as streamlined as possible. The idea is to create a platform that covers this.</p>\n<h2>What it does</h2>\n<p>Crowd Search is split into two main parts:</p>\n<ul>\n<li>The first part displays structured information about the case, letting people quickly get a grasp of the situation at hand. It makes good use of rich media and UX design, and presents the data in an understandable way.</li>\n<li>The second part is geared around collaboration between volunteers. It allows the moderators of the missing person search to post information, updates and tasks that people can perform to contribute towards.</li>\n</ul>\n<h2>How we built it</h2>\n<p>Crowd Search makes heavy use of Firebase, and is because of this a completely front-end based application, hosted on Firebase Hosting. The application itself is built using React. </p>\n<p>By using Firebase our application syncs updates in realtime, whether it's comments, new posts, or something as a simple as a task list checkbox. Firebase also lets us easily define a series of permission rules, to make sure that only authorized moderators and admins can change existing data and similar. Authentication is done using Facebook, through Firebase's authentication provider.</p>\n<p>To make development as smooth as possible we make use of a series of utilities:</p>\n<ul>\n<li>We compile our JavaScript files with Babel, which lets us use new ECMAScript 2016+ features.</li>\n<li>We quality check our source code using ESLint (known as linting)</li>\n<li>We use Webpack to bundle all our JS and Sass files together into one bundle, which can then be deployed to any static file host (we're using Firebase Hosting).</li>\n</ul>\n<h2>What's next for Crowd Search</h2>\n<p>The features presented here function as an MVP to showcase what the platform could be used for. There's a lot of possibilities for extension, with a few examples being:</p>\n<ul>\n<li>Interactive maps</li>\n<li>Situational timelines</li>\n<li>Contact information</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/react\">react</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sass\">sass</a></span></li><li><span class=\"cp-tag\">webpack</span></li><li><span class=\"cp-tag\">babel</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://hackmit-crowdsearch.firebaseapp.com/0\" rel=\"nofollow\" target=\"_blank\" title=\"https://hackmit-crowdsearch.firebaseapp.com/0\">\n<i class=\"ss-icon ss-link\"></i>\n<span>hackmit-crowdsearch.firebaseapp.com</span>\n</a></li>\n<li><a href=\"https://github.com/ekmartin/hackmit-crowdsearch\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ekmartin/hackmit-crowdsearch\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on integrating Facebook into the app and linking the constant changes to the UI. Also created UI elements on the frontend", "", "", ""]], ["SmartNighter", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration: RedBull &amp; Microsoft Band</h2>\n<h2>What it does: Maximizes your productivity/Avoids you getting stuck at an unfamiliar country during a connection flight</h2>\n<h2>How we built it: Visual-studio, Learning C# and how to work with the band the hard way &amp; using UPPERCASE HELP MESSAGES for the mentor queue.</h2>\n<h2>Challenges we ran into: Not sleeping. Not knowing C# beforehand.</h2>\n<h2>Accomplishments that we're proud of: We learned and actually like C# now. We did this in a team of only 2 people!</h2>\n<h2>What we learned: 2 is better than 1 and late is better than never.</h2>\n<h2>What's next for SmartNighter: Finishing the notifications and healthy living features. Getting images to load properly to the Band.</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/visual-studio\">visual-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/love\">love</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://drive.google.com/file/d/0B6j3HoBE3iN3VEltZFJGRlg3N0E/view?usp=sharing\" rel=\"nofollow\" target=\"_blank\" title=\"https://drive.google.com/file/d/0B6j3HoBE3iN3VEltZFJGRlg3N0E/view?usp=sharing\">\n<i class=\"ss-icon ss-link\"></i>\n<span>drive.google.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Touchy-Feely Screen", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Originally we wanted to create a physical, cross-platform volume mixer to control levels of various processes while staying in full screen. It ended up being far more challenging than that but the basics were still achieved. </p>\n<h2>What it does</h2>\n<p>The python file is executed and it interprets and parses certain commands based on gestures and user input.</p>\n<h2>How I built it</h2>\n<p>With a lot of help from Synaptics. It's based on a large, 15\" touchscreen manufactured by them. Included was a single example program and very little documentation. </p>\n<h2>Challenges I ran into</h2>\n<p>It was a challenge to make this device. Just starting out it was hard to configure and install the drivers correctly just to interact with the board itself, and beyond that very little documentation was available. Essentially we were handed the board and sent on our ways. However, Synaptics provided a lot of mentoring and help whenever I needed it. </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>While pretty basic and not super efficient, I'm proud of the algorithm I made for detecting the motion of the finger, and the design choices I made throughout the code. Very few values are hardcoded in an effort to create something that 'could' be used later.</p>\n<h2>What's next for Touchy-Feely Screen</h2>\n<p>More touching and feeling</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n</div>", [""]], ["SoundTrak", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Countless high school presentations where changing slides affected the quality of lecture. Teachers will benefit from the freedom of mobility obtained through contact-free slide advancements.</p>\n<h2>What it does</h2>\n<p>SoundTrak advances slides using audio input via external hardware.</p>\n<h2>How we built it</h2>\n<p>We used an arduino and multiple microphones to respond to clicks. The two microphones means that the device is directional, and that the audience can not trigger the controls.</p>\n<h2>Challenges we ran into</h2>\n<p>Integrating the GUI with the Arduino due to an error in the communication protocol - this absorbed several hours.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We have a working project, and we got sleep last night!</p>\n<h2>What we learned</h2>\n<p>We learned that communication between the different members of our team is crucial - even when something seems obvious.</p>\n<h2>What's next for SoundTrak</h2>\n<p>We can improve audio reception with more time via an FFT implementation, which can increase the variety of signals. We can additionally implement this over more platforms such as videos and web-browsers.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">keyboard.h</span></li><li><span class=\"cp-tag\">math.h</span></li><li><span class=\"cp-tag\">pyserial</span></li></ul>\n</div>\n</div>", ["I worked on presentation, marketable value, and ran some sample codes for Arduino. ", "I worked on the UI system for Soundtrak, and connecting the Python UI with the Arduino. ", "", ""]], ["Smart Mirror", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Smart Mirror \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/573/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>Each one of us wastes precious time staring into a mirror every morning as we recite the monotonous routine of brushing our teeth. It's something we're taught to do from the youngest age - an activity as mindless as they come. But, it doesn't have to be.</p>\n<p>With Smart Mirror, that time can be fully utilized, as you prepare for your day by examining your to-do list, reading new emails, checking weather and traffic, and soaking in other important bytes of information, such as current events and financial news. With a large and high-definition screen, Smart Mirror can bring you the utility of a traditional mirror with the functionality and efficiency of a computer. In front of our mirror, you'll have access to numerous useful widgets that will help you get the most out of your day.</p>\n<p>We built Smart Mirror as a web app programmed in HTML / CSS and Javascript. We felt this was the best approach towards reaching an MVP because we were able to have relatively easy access to utilities of the device, such as the camera, and the resources of several APIs on the web.</p>\n<p>Our greatest challenge was deciding what approach we wanted to take in building this. With little experience in web development, we had a lot to learn in a short amount of time. Although our hack doesn't incorporate all of the features we initially imagined, we feel it does justice to our original vision.</p>\n<p>Through creating Smart Mirror, we learned a great deal about web development and project management. We hope to continue working on the project in the coming weeks and see what more learning experiences we can glean from this formative project. Coming up, we would like to create more widgets that dig into and provide richer information to the user, incorporate a higher quality camera to improve the functionality of the mirror itself, and build out customization and preference features that will tailor Smart Mirror to the needs of our users.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n</div>", [""]], ["Sunrise", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>2 ordinary objects, a bed and a lamp, working together to create a smoother wake-up experience, aware of the user's needs.</p>\n<h2>What it does</h2>\n<p>The bed is actually equipped with a system tracking the user's sleep patterns which are shared with the lamp to allow it to wake one up at the most appropiate time and to deliver the most relevant information that the user would need.</p>\n<h2>How we built it</h2>\n<p>We solderered an accelerometer to an Arduino to get live-feedback of the motions of the user lying in the bed, and set up a Python program to analyze the sleep phases and send the results live to a user-friendly dashboard. The dashboard displays relevant information for the user at the wake-up time including the time, weather forecast for the day, facebook notifications, and calendar events through a synthesized voice notification. </p>\n<h2>Challenges we ran into</h2>\n<p>We struggled at first to connect all 3 layers together. The Arduino had to send live data over to the Python running the analytic program and this one had to send its result to the HTML/JS website thereafter. Our program written in Python took considerably more time since we had to choose how to structure the data to then be analyzed. Also, getting multiple APIs working on our dashboard and the dashboard itself took us at least as much as the other layers did.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Our team is very proud over the fact that we managed to dispatch the workload in an efficient way and that the final product is actually functional.</p>\n<h2>What we learned</h2>\n<p>We learned that making a product with even a small variety of components can take much more time than is ordinarily available. Also, we realized that the teamwork we had helped us significantly towards having a working prototype by the time limit.</p>\n<h2>What's next for Sunrise</h2>\n<p>Improving the user's experience through the dashboard: Better notification management, more natural voice synthesizing, more relevance and more predictiveness.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["An xkcd Interactive Story - A Bunch of Rocks", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/7AHwvxhgzl0?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>From the admission puzzle to the prizes list, HackMIT has a lot of references to xkcd. Inspired by the quirky humor that comes from these awesome comics, I wanted to create a video game that encapsulates this nature. </p>\n<h2>What it does</h2>\n<p>It is a video game created in inspiration from the xkcd comic \"A Bunch of Rocks\". I chose the comic, \"A Bunch of Rocks\", because the themes explored in the comic are things that every student can relate to, thus allowing a more immersed experience. You use the arrow keys and space bar to play.</p>\n<h2>How I built it</h2>\n<p>The art was all hand drawn in GIMP and the program was created completely from scratch in java.</p>\n<h2>What's next?</h2>\n<p>Improvement of game play and continuation of the story.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n</div>", [""]], ["Mesh", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>The technological capabilities of the HoloLens, google cardboard and other AR/MR/VR devices along with a distinct lack of a virtual interface for the real world lead us to investigate how we could manipulate atoms with bits, control physical objects through virtual interactions.</p>\n<h2>What it does</h2>\n<p>This project provides a link between the virtual and physical worlds by allowing you to interact with physical objects from the virtual space.  The Hololens  provides real-time mapping of the area and functions as the gateway allowing the user to interact with holograms and other virtual objects which are then sent to other devices which control real world events such as driving a robot.  We mesh atoms and bits allowing seamless interaction between MR/VR and the real world</p>\n<h2>How we built it</h2>\n<p>Using Unity, we made a Hololens app to visibly merge the virtual and physical worlds allowing the user to see the bits overlayed on the atoms.  We then open a network socket between the Hololens and an android device running a pre-made app for the robot in order to send commands which are generated from the user's input in the app.  </p>\n<h2>Challenges we ran into</h2>\n<p>The programmable robot kits that we're using is actually a prototype which hasn't been released. There is no wifi API for it, and the bluetooth is using a special protocol, and the development edition of HoloLens isn't that open at this moment as well. Thus we have spent most of our time (18hr) on the communication between these two devices and to overcome the difficulties of interfacing with the CellRobots, we contacted one of the CellRobot developers and they created a simple API for us to use to send commands to the robot, something it wasn't able to do before.  The Gear 360 we are using for the VR component does not natively stream requiring us to use C# to mimic the Google Street View android application.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>By reading through lots of open source codes and getting the supports from technical mentors, we figured out a way to communicate between the robots and hololens. First, we deployed an app on a tablet as the user interface to control the physical robots. Second, we wrote a script to enable hololens to send requests to the tablet through HTTP protocol. Third, the tablet receive and transport the requests to the physical robots, giving it specific actions.</p>\n<h2>What we learned</h2>\n<ul>\n<li>We learned how to develop and deploy AR apps to the HoloLens platform</li>\n<li>We learned about C# and Unity development</li>\n<li>Gained Experience with the CellRobot Platform</li>\n<li>We learned how to do networking on a HoloLens to communicate to an Android app</li>\n</ul>\n<h2>What's next for Mesh</h2>\n<ul>\n<li>Integrate HoloLens holograms into live streaming video from Galaxy 360 for VR interfaces like Google Cardboard for shared experiences between AR and VR users using a universal coordinate system</li>\n<li>When AR and mixed reality technologies become more commonplace, being able to interact and affect the physical world through the virtual will be very important. We will add more sophisticated interactions with the CellRobots in terms of more fined-grade actions and adding support for voice recognition for tasks for the HoloLens</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-cardboard\">google-cardboard</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/microsoft-hololens\">microsoft-hololens</a></span></li><li><span class=\"cp-tag\">gear360</span></li><li><span class=\"cp-tag\">cellrobot</span></li><li><span class=\"cp-tag\">april-tags</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c\">c</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/justinar/mesh\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/justinar/mesh\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Clippd", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Clippd \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/419/datas/gallery.jpg\"/>\n<p>\n<i>Home Page</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<h2>What it does</h2>\n<p>We can take a link to a youtube video and a certain set of words, then produce a clipped version of the video with just those words.</p>\n<h2>How we built it</h2>\n<p>Used Express framework with IBM Watson API</p>\n<h2>Challenges we ran into</h2>\n<p>Finding an accurate translation API was a difficult task.</p>\n<h2>Accomplishments that we're proud of</h2>\n<h2>What we learned</h2>\n<p>Learned a lot about IBM Watson API and video editing packages.</p>\n<h2>What's next for Clippd</h2>\n<p>Add ability to cut from multiple Youtube videos in a single request.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ibm-watson\">ibm-watson</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/sboominathan/hackmit-2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/sboominathan/hackmit-2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on part of the backend and the UI. More specifically on the backend, I implemented the backup method of getting the captions from the video as well as the method for cut and pasting together the subclips.", "", ""]], ["AR Election", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"AR Election \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/339/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We are two MIT students who wanted to experiment with new technologies, create something cool, and have fun at HackMIT! Politics, especially the upcoming Presidential election, has been one of the more popular topics of discussion among our friends.</p>\n<h2>What it does</h2>\n<p>We picked several dates to examine how the Clinton's and Trump's popularity changed in each state over time.</p>\n<h2>How we built it</h2>\n<p>We used Microsoft Hololens, Unity, and C#.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Despite having no previous experience working with any of these technologies, we feel like we learned so much in less than 24 hours.</p>\n<h2>What's next for AR Election</h2>\n<p>More interactive features with more data!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/microsoft-hololens\">microsoft-hololens</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/aluh95/hackmit-2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/aluh95/hackmit-2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I integrated the blender models for the states, but it was a team effort overall.", ""]], ["autoFinger", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"autoFinger \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/584/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"autoFinger \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/585/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"autoFinger \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/583/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Many accidents happen due to distractions either by using phones or the car's infotainment systems.</p>\n<h2>What it does</h2>\n<p>autoFInger allows you to contol your car's infotaiment system using a fingerprint scanner, each finger signals a different function. Want to lower the temperature? use your left pinky. Want to raise the temperature? use your right pinky. \nWant to blow the horn? use your middle finger. It's as simple as that!</p>\n<h2>How we built it</h2>\n<p>autoFinger works using the Synaptics fingerprint scanner to scan you fingers, using JAVA algorithms to match your finger to previously learned fingers to identify it's position (i.e index) then it operate the function linked to that finger.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">synaptics-fingerpint-scanner</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/matlab\">matlab</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sync\">sync</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li></ul>\n</div>\n</div>", ["Wrote the algorithm for Fingerprint Comparison on MATLAB.", "Wrote the algorithm for Fingerprint Comparison on MATLAB.", "Initial developing and testing with javascript", "", ""]], ["FLEYE", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Shared wanderlust and a penchant for saving money (aka being a student).</p>\n<h2>What it does</h2>\n<p>Inspires users to pursue traveling even when tied down to a limiting budget. Our product lets the user FLEYE by the seat of their pants. </p>\n<h2>How we built it</h2>\n<p>The backend was built using Express.js (a NODE framework), the handlebars templating engine, and the Amadeus API. The front end was built using Google Maps, HTML, CSS, and Javascript.</p>\n<h2>Challenges we ran into</h2>\n<p>We had a difficult time getting the backend and front end talking to one another. We also had issues, on the user end, balancing constraints with freedom. While we wanted to give the user agency, we also wanted to constrain the search for query purposes. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Learning how to use Node! Learning how to utilize the skill set of every team member. </p>\n<h2>What we learned</h2>\n<p>Having a good team makes everything better.</p>\n<h2>What's next for FLEYE</h2>\n<ul>\n<li>Deploy the site on heroku</li>\n<li>Multi-city roundtrip options</li>\n<li>Extra information like purchasing power</li>\n<li>Possibly utilizing YapQ to furhter inspire travel </li>\n<li>Efficiency</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/handlebars-js\">handlebars.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/bramanudom/HackMIT2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/bramanudom/HackMIT2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Limited movement vehicle control", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Using the brain sensing headband to control the movement of robot.</p>\n<h2>What it does</h2>\n<p>This controls the movement of robot from the electric signals generated with muse headband.</p>\n<h2>How I built it</h2>\n<p>We assembled the robot from scratch, used the data from the muse headband to get the brain's electric signal, and finally used Android Studio to create a app in order to properly handle the movement of different motors inside the robot.</p>\n<h2>Challenges I ran into</h2>\n<p>It took almost 4 hours to make the robot running, and finally realized the Edison was faulty. Also, it was hard to translate the date retrieved from muse for the movement of robot.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Our team managed to get the front rotation of all motors of the robot over the wireless network.</p>\n<h2>What I learned</h2>\n<p>To translate the data from muse headband to control robot.</p>\n<h2>What's next for Limited movement vehicle control</h2>\n<p>The team is trying to reach the position where the robots movement will synchronize with head's movement.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/intel-edison\">intel-edison</a></span></li><li><span class=\"cp-tag\">4wd-robot-kit</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/muse\">muse</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["chewyTime", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"chewyTime \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/351/datas/gallery.jpg\"/>\n<p>\n<i>Searching for restaurants</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"chewyTime \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/353/datas/gallery.jpg\"/>\n<p>\n<i>Viewing current menus</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"chewyTime \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/377/datas/gallery.jpg\"/>\n<p>\n<i>See what your friends have ordered</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Recently we've all started to notice a trend at restaurants. When you get there, one of the biggest challenges is what do we order? And there are a few ways people try to tackle this: </p>\n<ul>\n<li>Ask for recommendations of food</li>\n<li>Text their foodie friend for help</li>\n<li>Start browsing yelp and reading reviews to try to grasp what is the best thing to order</li>\n</ul>\n<p>However, sometimes recommendations by other people don't necessarily fit our taste, which can lead to a possibly less than ideal meal. This is where we come in, trying to create the optimal meal for people.</p>\n<h2>What it does</h2>\n<p>The app serves to not only allow for better food recommendations for the diner, but also give restaurants a means of more powerful data analysis. From a very high level, the app serves as a means for massive data aggregation that aides both restaurants and users alike. </p>\n<p>From the consumer side the app allows users to find a given restaurant and the associated menu. From here, the back end will also provide recommendations based upon a heuristic naive bayes algorithm. </p>\n<h2>How we built it</h2>\n<p>In terms of the tools we used: we built an app with a Flask framework frontend that is linked to a MySQL database and mobile development was done in swift. In order to aid our development, we leveraged a variety of APIs including locu (menus), yelp (restaurants), google search (autocompletion), and facebook-graph-api (future development and social network connectivity). </p>\n<h2>Challenges we ran into</h2>\n<p>In order to provide a reasonable proof of concept recommendation system that took into account the user's preferences we utilized the \"yelp-academic-dataset.\" This led to some difficulties when dealing with the sparsely populated feature matrix and applying appropriate algorithms to achieve a reasonable result. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>For us, deciding on such a large project that included an extensive front and back end, in the end the experience was challenging yet really rewarding. </p>\n<h2>What we learned</h2>\n<p>For us some of the most valuable experience was learning to work as a team on such a large project (from both the front and back end). And this was truly our defining experience, where we're working with few hours of sleep on a large project, it honestly came down to delegation and team work that allowed us to finish.</p>\n<h2>What's next for chewyTime</h2>\n<p>For us, we still look forwards to continually improving and further developing the app and see where it takes us. This would mean hashing out more of the restaurant side of the application and building deeper functionality by leveraging networks.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/yelp\">yelp</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/locu\">locu</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/facebook-graph\">facebook-graph</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/facebook-login-api\">facebook-login-api</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/apache\">apache</a></span></li><li><span class=\"cp-tag\">google-search-api</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mysql\">mysql</a></span></li></ul>\n</div>\n</div>", ["", "", ""]], ["20-20-20", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"20-20-20 \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/264/datas/gallery.jpg\"/>\n<p>\n<i>Eye-con</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>20-20-20</h1>\n<p>A popup app reminding you to rest your eyes every 20 minutes by looking at something 20 ft away for 20 seconds!  Don't go blind. </p>\n<p>Both Windows and Mac versions available</p>\n<p>Made at HackMIT 2016</p>\n<p>Contributors: Lordique Fok, Jennifer Lauv, Katherine Young</p>\n<p>The 202020.jar file is the executable for Windows. \nMake sure that you place the nircmd folder inside the Windows folder of the repository in your Program Files directory!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/lordique/20-20-20\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/lordique/20-20-20\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Meshed Worlds", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>The original inspiration came from wanting to mix the real world with a virtual one. A way in which you could interact with a virtually generated world and feel like you where there. As a result we decided to scan real world environments and then generating virtual reality worlds based on them. We used the Kinect for Windows to scan the environment and the Gear-VR for the 3D world generated. The main challenges we ran into were lack of documentation along with confusing instructions on how to approach this project. We started without any experience on any of these tools, so any minute step was a huge landmark. We are very proud that now we can scan and generate 3D environments. We learned that we should have talked to Sponsors about their technologies from earlier on, that Virtual 3D rendering it's a huge skill set on it's own, and that this is not just an overnight hack. The next step will be to begin automating the entire set up, from scanning all the environment up until rendering of the world.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/kinect\">kinect</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/oculus-gear-vr\">oculus-gear-vr</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li></ul>\n</div>\n</div>", ["", "", ""]], ["BobaPirates", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>.</p>\n<h2>What it does</h2>\n<h2>How I built it</h2>\n<h2>Challenges I ran into</h2>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<h2>What's next for BobaPirates</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/zacharyliu/boba-pirates\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/zacharyliu/boba-pirates\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Selfie Anywhere", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Billions of Selfies every year with everyone always trying to get the perfect one. Selfie Anywhere allows you take one anywhere in the world</p>\n<h2>How I built it</h2>\n<p>Android, opencv, google street view apis, python, magic</p>\n<h2>Challenges I ran into</h2>\n<p>Android, opencv, google street view apis, python, dark magic</p>\n<h2>What I learned</h2>\n<p>Android, opencv, google street view apis, python, trying to look for magic</p>\n<h2>What's next for Selfie Anywhere</h2>\n<h1>BedSelfie ( and then better and improved everything. Fancier image processing, nicer user interface, better server interactions)</h1>\n</div>\n</div>", [""]], ["Driving Companion", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Ford presentation, but it's unfinished!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/huemanh111/hackMIT16\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/huemanh111/hackMIT16\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["StreetPay", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>Our project is an android application that allows users to pay street vendors/performers for their services. Each user is able to log into our app and scan the QR code/enter the username of the vendor they are interacting with and they will then be directed to a web address specific to the vendor where they will enter the amount of transaction. We also made a web based application that allows the vendor to see when a transaction has gone through, but this is separate from the user website so they do not share information. This allows users to buy/tip vendors without having to use cash and broadens the client base for the vendors/performers.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://web.mit.edu/chandani/www/hackmit/index.html\" rel=\"nofollow\" target=\"_blank\" title=\"http://web.mit.edu/chandani/www/hackmit/index.html\">\n<i class=\"ss-icon ss-link\"></i>\n<span>web.mit.edu</span>\n</a></li>\n<li><a href=\"http://web.mit.edu/chandani/www/hackmit/user.html?username=someone\" rel=\"nofollow\" target=\"_blank\" title=\"http://web.mit.edu/chandani/www/hackmit/user.html?username=someone\">\n<i class=\"ss-icon ss-link\"></i>\n<span>web.mit.edu</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["MIT-GO", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Pokemon GO</p>\n<h2>What it does</h2>\n<p>Like a digital scavenger hunt around MIT</p>\n<h2>How we built it</h2>\n<p>Nativescript + ZZZZZzzz</p>\n<h2>Challenges we ran into</h2>\n<p>We had issues trying to find the right framework to develop in and had to debug Android Studio for the longest time and learn that App Maker isn't well-suited to the project.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>It works?</p>\n<h2>What we learned</h2>\n<p>How difficult app development can be and learning about a simple framework that can make it a lot easier</p>\n<h2>What's next for MIT-GO</h2>\n<p>Finalizing it so that it properly functions.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xml\">xml</a></span></li><li><span class=\"cp-tag\">nativescript</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-maps\">google-maps</a></span></li></ul>\n</div>\n</div>", ["I helped design the GUI", "", ""]], ["Arthritisense", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>Arthritisense is a novel doctor-patient interface system that tracks the entire therapy process, from reminding patients to do their exercises through monitoring correct positioning and providing feedback to the doctor. The database communicates with a python program that dictates what exercise the patient needs to perform and uses the Leap Motion VR Device to detect if the patient is performing the specific exercises correctly. Our project aims to increase communication between patients and doctors and to make arthritis exercises more accessible as well as fun for the 40 million people in the US that suffer from arthritis. We hope to continue development to bring a product to the market.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/leap-motion\">leap-motion</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/kjiang8/arthritisense\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/kjiang8/arthritisense\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["fermata", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We have so little time to reflect how we use our time and it would be amazing to know with a simple click what percentage of our time is used studying, or sleeping, or studying. Knowing these metrics doesn't fix anything, but it gives us perspective on how we each live our lives.</p>\n<h2>What it does</h2>\n<p>We are implementing a simple web application that categorizes how your time is used based on your google calendar. Knowing what percentage of your time is spent where provides perspective to all those who toil endlessly with minimal time for reflection.</p>\n<h2>How I built it</h2>\n<p>Angular.js, node.js, html5, css3, Heroku.</p>\n<h2>Challenges I ran into</h2>\n<p>First web app development was difficult to understand how all the components fit together.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Understanding and touching the full stack.</p>\n<h2>What I learned</h2>\n<p>Node.js, angular.js, and how all the different components interact.</p>\n<h2>What's next for fermata</h2>\n<p>Make the front-end really simple and user-friendly.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/angular-js\">angular.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-calendar\">google-calendar</a></span></li></ul>\n</div>\n</div>", ["Worked on backend with node.js, heroku, and Google Calendar API.", "I was involved in front-end and the Heroku setup", "Worked with front end design (including Angular JS), wire frames, application mockups, and application use cases / pitch. ", ""]], ["HotSpot", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"HotSpot \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/084/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"HotSpot \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/088/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<pre class=\"language-nolang\"><code>We were inspired by the conversation we had with one of the Kensho developers. He told us about how he studies the correlation between seemingly random pairs of events and the stock market--this led us to ask the same question but in a more physical sense. We wondered: what are the similarly random patterns for a person in his day to day travels\n</code></pre>\n<h2>What it does</h2>\n<pre class=\"language-nolang\"><code>The app serves two purposes--one for the consumer and one for the business owner. Foremost, the user can see which places or being actively visited based on other user's activities--these are the \"hot spots\". Furthermore, the user can also look at each business's most common successor--where an average user will most likely go to next--in order to gain valuable suggestions on new points of entertainment or businesses. From a business owner standpoint, he can see the quantitative results of the net user population on the website in order to track the flow of his customers. This will allow a business owner to change practices based on the tendencies of his customers.\n</code></pre>\n<h2>How I built it</h2>\n<pre class=\"language-nolang\"><code>The app was built for iOS in Swift. It regularly posts the users location to a Node server that triggers MongoDB queries. Also, the app requests a general lay of the land when first starting up where it makes a get request to the Node server to get 18 points of interest nearby. These 18 nearby points are found through the Google Maps API. All of the \"hotness\" data and closest neighbor suggestions on the app stem from this API get request. Finally, the website uses other API endpoints to get basic data in order to plot an undirected graph.\n</code></pre>\n<h2>Challenges I ran into</h2>\n<pre class=\"language-nolang\"><code>The implementation of getting data from google was somewhat sloppy. This, along with the fact that we needed to make a high volume of requests, led to occasional max outs on the Google Maps API limit. Constructing the graph also proved to be quite challenging. Finally, creating mock data was horribly tedious do to the close relationship between the data--an SQL DB would have worked much better. (PS: This did not need ASYNC JavaScript)\n</code></pre>\n<h2>Accomplishments that I'm proud of</h2>\n<p>The interface of the app looks very professional and clean, and the concept seemed to legitimate.</p>\n<h2>What I learned</h2>\n<p>We learned that the typical MEAN stack (or its other expressions) may not always function the best. For example, a PHP + MySQL combination would fulfill the role much better; however, we were limited in the fact that our best iOS dev is also our best PHP dev. On a more specific note, we learned that Google's Map API can only make 20 requests at one time. This highlights the important of designing smart algorithms that minimize http requests.</p>\n<h2>What's next for HotSpot</h2>\n<p>We would like to implement this on a large scale where the number of business is not limited. We believe this will do the best job of answering our initial question of whether or not patterns exist for a person in his day to day travels because most people move farther than a small, multiple block radius. Also, some notion of machine learning could benefit the analysis of this data for the business owner substantially.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ios\">ios</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-maps\">google-maps</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/SazanDauti/HotSpot\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/SazanDauti/HotSpot\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Shrimply Pibbles", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>As hip hop lovers, we wanted to automate the beat creation process, to give artists exposure to a wider range of accompaniment.</p>\n<h2>What it does</h2>\n<p>Simply click the button, and listen to the musical creation generated before your ears.</p>\n<h2>How we built it</h2>\n<p>We built the music around a javascript MIDI library MIDI.js.  All of the instruments, notes and beats are randomly generated in real time.</p>\n<h2>Challenges we ran into</h2>\n<p>We struggled with using randomization, while also making the end product appealing.</p>\n<h2>What's next for Shrimply Pibbles</h2>\n<p>Watch out for Shrimply Pibbles' next mixtape, dropping on soundcloud Winter 2016</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/midi-js\">midi.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://web.mit.edu/csloan/www/shrimply-pibbles/\" rel=\"nofollow\" target=\"_blank\" title=\"http://web.mit.edu/csloan/www/shrimply-pibbles/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>web.mit.edu</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["HYRE", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"HYRE \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/430/datas/gallery.jpg\"/>\n<p>\n<i>Have you ever been to a career fair? Are you a hiree or recruiter? Either way, we have something for you!</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"HYRE \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/431/datas/gallery.jpg\"/>\n<p>\n<i>Take a photo of your candidate and find his/her resume immediately!</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"HYRE \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/434/datas/gallery.jpg\"/>\n<p>\n<i>Upload your resume and get HYREd soon!</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"HYRE \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/587/datas/gallery.jpg\"/>\n<p>\n<i>Recruiters can view their hirees afterwards!</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Career fairs are hectic when so many students try to talk to recruiters at once. Recruiters don\u2019t have time to scan everyone\u2019s paper resume at the fair, and it is even harder to remember their faces after they drop off their paper resume. We decided to make an app that associates a student\u2019s face to his/her resume using facial recognition software. Recruiters can look at a student\u2019s resume quickly at a career fair and remember the student\u2019s face.</p>\n<h2>What it does</h2>\n<p>HYRE is a web application created to aid both students and recruiters in the job hiring process. Students use the app to upload their resumes and pictures. Recruiters use the app by taking a picture of a student at career fair and immediately obtaining his/her resume through facial recognition software. Recruiters can save students they like in the app if recruiters are considering students for hire. HYRE can not only be used at career fairs, but also at networking events.</p>\n<h2>How we built it</h2>\n<p>HYRE was built using Django, Python, HTML, Javascript, and a SQLite database for the web application. The facial recognition software API was obtained from Kairos, an open source human analytics platform.</p>\n<h2>Challenges we ran into</h2>\n<p>Staying awake. Especially after promising ourselves no caffeine. Also, implementing facial recognition reliably and integrating it into our app.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Making a complete product that we can demo at career fair.</p>\n<h2>What we learned</h2>\n<p>How to use Django and how to create web applications (none of us had prior experience).</p>\n<h2>What's next for HYRE</h2>\n<p>We can significantly improve our facial recognition algorithm by using a more well-known API (which would take longer to implement). In addition, the app could be much more interactive for students, where students could view companies and save recruiters that they met, so that the students don\u2019t forget recruiters\u2019 names and faces. This would also be a cool project for Microsoft HoloLens, since recruiters could pull up resumes as holograms.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/django\">django</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag\">facial-recognition</span></li><li><span class=\"cp-tag\">kairos</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/sarojaerabelli/HVGS\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/sarojaerabelli/HVGS\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Sentimessenger", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Sentimessenger \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/914/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Sentimessenger \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/274/datas/gallery.jpg\"/>\n<p>\n<i>https://xkcd.com/1296/</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>Sentimessenger</h1>\n<p>Our app lets the user upload their Facebook Messenger data to a familiar looking site. They can download easily from Facebook as a giant HTML file. Then the user can see a colorful visualization of all of their conversations over time with a sentiment analysis. </p>\n<p>You can find the source code here: <a href=\"https://github.com/brandondsherman/Sentimessenger\" rel=\"nofollow\">https://github.com/brandondsherman/Sentimessenger</a></p>\n<p>To try it out you have at allow unsafe scripts to be ran in your browser.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag\">jupyter-notebook</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/r\">r</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/angular-js\">angular.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://brandondsherman.github.io/Sentimessenger/\" rel=\"nofollow\" target=\"_blank\" title=\"http://brandondsherman.github.io/Sentimessenger/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>brandondsherman.github.io</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Efficient ASD Detection using Machine Learning", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Autism Spectrum Disorder is a disease that needs to be caught early on in order for the patient at risk to lead a normal, or near normal life. Research shows that self reported surveys and questionnaires are effective in determining the risk of autism in children, but such tests are expensive and time consuming.</p>\n<h2>What it does</h2>\n<p>The program(in its current state) generates a random data set that models the list of questionnaire responses for a particular child. It is then trained to determine which children are likely to develop autism using part of this data set. Randomly generated data was used because actual data requires the signing off of a private investigator associated with a university. </p>\n<h2>How I built it</h2>\n<p>The program was built using python, and makes extensive use of Pandas, Numplot and Sklearn in order to manipulate data and set up the machine learning algorithm.</p>\n<h2>Challenges I ran into</h2>\n<p>Organizing the data efficiently required the use of arrays and a data frame, both of which had different methods to splice and modify data. Figuring out the proper methods to analyze and process the data correctly required a lot of trial and error.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I was able to build something by the end of hackMIT, and managed to do something in a medically related field.</p>\n<h2>What I learned</h2>\n<p>Machine learning can be used to solve many classes of problems, and many machine learning problems can be made easier by combining feature values into a single vector.</p>\n<h2>What's next for Efficient ASD Detection using Machine Learning</h2>\n<p>Support for user inputs can be easily added next. They were not implemented in this version due to a lack of time. Using university resources in order to gain access to the medical datasets already available online would help to train the model better. Creating a user interface, or possibly a web application would be useful to collect data. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n</div>", [""]], ["Tuber", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Google maps is cool, but it could be cooler.</p>\n<h2>What it does</h2>\n<p>Gives alternate modes of transport along with energy expended, time spent, and style points.</p>\n<h2>How I built it</h2>\n<p>Lots of google apis!</p>\n<h2>Challenges I ran into</h2>\n<p>Web formatting is hard and so is learning a new language (javascript) in 12 hours.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>The website runs without failing and actually does exactly what we told it to do!</p>\n<h2>What I learned</h2>\n<p>Javascript is a beautiful and effective language. Also I learned exactly what an api is and how it can be used in personal projects!</p>\n<h2>What's next for Tuber</h2>\n<p>Multiple modes of transport for a given journey, ranking travel modes by travel time or energy or style points, etc, prettying up the map.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google--2\">google</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/ThatcherC/Tuber\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ThatcherC/Tuber\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["ClassSense", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Gruseome details</p>\n<h2>What it does</h2>\n<h2>How I built it</h2>\n<h2>Challenges I ran into</h2>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<h2>What's next for ClassSense</h2>\n</div>\n</div>", ["I worked on the dashboard frontend and communication with the Firebase Real-time Database.", "", "", ""]], ["Sesame", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>Typing passwords is inefficient and easy to detect. We came up with a solution that makes it practically impossible to notice the entered password.</p>\n<p>We used Webgazer.js, a library that uses webcam to track eye movements, to create a more secure and intuitive password system. The user draws a password on the screen (similar to android pattern unlock) with their eyes in place of a password string.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/nate-brennan/HackMIT2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/nate-brennan/HackMIT2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Worked on javascript integration with plugin app.  Learned about both. Yay.", "", "", ""]], ["Stockify", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/wWzoHt6bXkk?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Stockify \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/080/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Stockify \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/081/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Beaker allows seamless integration and analysis of data. Today, several articles mention companies names and their recent developments. This inspired us to work on a browser extension that generates automated stock reports at the click of a button.</p>\n<h2>What it does</h2>\n<p>A user can highlight any company they want to research and get details about the stock's performance along with a bootstrap-esque framework that allows for instant numerical and statistical analysis within the browser using Beaker. Data may be analyzed in multiple languages, including Python, R, C++, and results can be exported and published to other platforms for collaboration.</p>\n<p><a href=\"https://youtu.be/54wqPuB_3o4\" rel=\"nofollow\">https://youtu.be/54wqPuB_3o4</a></p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">beaker</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/azure\">azure</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/django\">django</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/chrome\">chrome</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/nasdaq-data-on-demand\">nasdaq-data-on-demand</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["SmartPark", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"SmartPark \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/009/datas/gallery.jpg\"/>\n<p>\n<i>Technical Overview</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"SmartPark \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/045/datas/gallery.jpg\"/>\n<p>\n<i>Detection Scenario</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"SmartPark \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/057/datas/gallery.jpg\"/>\n<p>\n<i>OpenXC vehicle data in the android client</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"SmartPark \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/070/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"SmartPark \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/087/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Finding parking in urban areas can be a nightmare. Our vision is cars that communicate to each other whenever they see an open space.</p>\n<h2>What it does</h2>\n<p>Our system uses computer vision and infrared sensors to detect gaps large enough to fit a car. It then uploads the location and timestamp to the cloud for other users to see. Any user can get directions to a detected open space.\nNo more endless circling around the block, use the cloud to find parking right away.</p>\n<h2>How we built it</h2>\n<p>We combined kinect sensors and camera with OpenXL vehicle interface and an android tablet. A front-facing camera would use Google Vision to detect a parking lot. A kinect on the side of the car would activate its camera and infrared to detect an open parking space. The location would be then uploaded to Firebase for other clients to see.</p>\n<h2>Challenges we ran into</h2>\n<p>Networking between different hardware was a huge challenge that took hours to overcome.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Our computer vision algorithm can successfully detect an open space in a parking lot.</p>\n<h2>What we learned</h2>\n<p>Most of us were new to android development, as well as working with vehicle data.</p>\n<h2>What's next for SmartPark</h2>\n<p>An extension of this project would be to aggregate enough data to provide the probability of finding parking on any street.\nNetwork effect is the greatest potential of this project - deploying at scale.\nImproving the space detection algorithm for detecting street parking.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li><li><span class=\"cp-tag\">google-cloud-vision</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/openxc\">openxc</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/kinect\">kinect</a></span></li></ul>\n</div>\n</div>", ["I helped design the algorithm to detect open parking spots and implemented the call to the Google Cloud Vision API to detect whether we were in a parking lot.", ""]], ["LineRunner", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>Line Runner</h1>\n<h2>Background</h2>\n<p>Actors have lines. Some actors have a lot of lines. Lines are hard to memorize; it takes a lot of time and requires a lot of line iteration in order to properly recall what you're supposed to say and when you're supposed to say it. Reading through your script to find your cue line can work, but you're also prone to allowing your peripheral vision to accidentally read your own line as well. \"I knew that,\" you tell yourself, but you definitely did not. </p>\n<p>For years, actors have been solving this problem by making friends and coercing them to help them study lines in their free time. Friends will read your cue aloud, and then read your line to check to make sure you're right. Since you never see the script, you can't accidentally read your line and foul up your practice session.</p>\n<p>Now, with Line Runner, actors don't need friends!</p>\n<h2>tl;dr</h2>\n<p>Line Runner can run lines with any character in any scene, so long as it has a script file to reference. Simply tell it who you want to be; Line Runner will read aloud your cue line and wait for you to say your line. If you're wrong, Line Runner will chastise you as much or more than your friend would. If you're right, Line Runner will skip forward to your next cue.</p>\n<h2>God Mode</h2>\n<p>For an added challenge, try \"God Mode!\" Three wrong lines in a row and the program will <code>rm -rf /</code>; this should encourage you to remember your lines.</p>\n<h2>Acknowledgements</h2>\n<ul>\n<li>Our image on devpost includes two graphics that are CC by attribution (via Noun Project)\n\n<ul>\n<li>\"chat bubble\" is by Yeong Rong Kim</li>\n<li>\"Actor\" is by Jonathan C. Dietrich</li>\n</ul></li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/murphymatt/LineRunner\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/murphymatt/LineRunner\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["SmartCart", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>As college students, we are inspired by necessity to start cooking as we began our lives independent people. Cooking became a passion for us and we soon realized that this application needed to be created. This was through the repeated amount of failures of not having the proper food items ready to cook.</p>\n<h2>What it does</h2>\n<p>SmartCart is a cross platform application that is designed to connect the world of recipes online to your devices. SmartCart starts off with a Chrome Extension that saves web page ingredients of a recipe and adds all the items to a cart. In the cart, it is compared to Walmart's API to estimate the total cost it would take to prepare the recipe. </p>\n<h2>How we built it</h2>\n<p>SmartCart can be divided into three essential parts. The first part is the Chrome Extension that triggers the application to save a webpage's recipe information on a server. This is coded in Javascript. The server itself is written in Python and scrapes the website information for ingredient details, while connected to Firebase API and Walmart API for price information. Meanwhile, the web application is coded in AngularJS.</p>\n<h2>Challenges we ran into</h2>\n<p>Each recipe website is formatted very differently and scraping this is very difficult.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Created a full stack application in a plethora of different languages.</p>\n<h2>What we learned</h2>\n<p>How to make a Chrome Extension, work in Python, HTTP Requests. </p>\n<h2>What's next for SmartCart</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/walmart-open\">walmart-open</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/angular-js\">angular.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ios\">ios</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xcode\">xcode</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/chrome\">chrome</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://github.com/kevinj97/SmartCart\" rel=\"nofollow\" target=\"_blank\" title=\"http://github.com/kevinj97/SmartCart\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"http://github.com/kevinj97/SmartCart\" rel=\"nofollow\" target=\"_blank\" title=\"http://github.com/kevinj97/SmartCart\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["MIT Poles", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"MIT Poles \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/957/datas/gallery.jpg\"/>\n<p>\n<i>Home</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"MIT Poles \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/534/datas/gallery.jpg\"/>\n<p>\n<i>Create Poll</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"MIT Poles \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/951/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"MIT Poles \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/949/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"MIT Poles \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/950/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>The idea started with a group chat we had with around 60 people in it. The idea was to add many people to the group chat in order to get a general consensus on an issue or topic. Groupme allows certain messages to be 'liked' and we would 'like' the answer we agreed with the most, essentially creating a poll. We had a lot of fun with the group chat and were inspired to make a version accessible to the entire MIT community. </p>\n<h2>What it does</h2>\n<p>At the moment we have a sign up page set up where a new user can enter some preliminary information including their kerberos. A verification email will then be sent to <a href=\"mailto:kerberos@mit.edu\" rel=\"nofollow\">kerberos@mit.edu</a>, verifying that the user is affiliated with MIT, and has an MIT email address. The verification email will contain a code should be entered on the site and allow the user to proceed to the site.</p>\n<p>The homepage allows the user to choose to create a poll, which will be posted on the site. In order for a user to view the results of any poll, they must have answered the poll themselves.</p>\n<h2>How we built it</h2>\n<p>We built the website using bootstrap. We also created a locally hosted database with mySQL that contains all of the account information, question data and answer data. The site is also locally hosted.</p>\n<h2>Challenges we ran into</h2>\n<p>At first we tried hosting the site and the database on amazon web services, but didn't want to pay any money. We then eventually decided to move everything to a local host. It was a challenge to figure out the best host for the site and the database, and the overall structure.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We're very proud of our signup feature and the email verification system we set up.\nWe also are proud of basically everything we've done since we came in with little to no knowledge of how to make a website from scratch. </p>\n<h2>What we learned</h2>\n<p>We learned about what a database was and how to make one. We learned how to send and retrieve information from that database. A lot of us were using PHP for the first time. We also learned how to set up a local server, and the pros and cons of different servers. We also learned how to use Bootstrap and integrate all of our different components together.</p>\n<h2>What's next for MIT Poles</h2>\n<p>We want to add new features such as a 'join group' feature that allows user to make subgroups and vote on issues with sub communities, choosing whether to remain anonymous or not.</p>\n<p>We have code to show, but didn't have time to upload it all to a Bitbucket repo!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mysql\">mysql</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li></ul>\n</div>\n</div>", [""]], ["Sound Supervisor", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Sound Supervisor \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/672/datas/gallery.jpg\"/>\n<p>\n<i>Printed Unit 1</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Sound Supervisor \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/852/datas/gallery.jpg\"/>\n<p>\n<i>demo gif</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Sound Supervisor \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/702/datas/gallery.jpg\"/>\n<p>\n<i>Outer housing Model</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Sound Supervisor \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/673/datas/gallery.jpg\"/>\n<p>\n<i>Printed Unit 3</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Sound Supervisor \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/674/datas/gallery.jpg\"/>\n<p>\n<i>Printed Unit 2</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Familiar with the volume mixer in windows? It allows users to control the volumes of the individual applications currently running on a given computer. It is a great feature of the OS, but can be a hassle to use when using fullscreen applications, or when you have a lot of windows open. </p>\n<h2>What it does</h2>\n<p>Sound Supervisor gives the user control of the volume mixer in the real world, with a small usb peripheral device. Users assign applications to knobs on the face of the physical device, which enables them to control the volumes of individual applications in the real world. Instead of having to alt-tab out of your development environment to change the volume of your music, you can now use Sound Supervisor to do it without missing a beat. </p>\n<h2>How I built it</h2>\n<p>Using an arduino and a C# application, we were able to implement this volume mixer in hardware. On the arduino side, the analog signal from each of the potentiometer is filtered for noise, and then transmitted over a serial port to the computer. When it arrives in the from-scratch built C# application, the data is parsed. Once the data is parsed, the C# application makes windows kernel calls in order to modify the volume for a specific process. </p>\n<h2>Challenges I ran into</h2>\n<p>The windows kernel is very stratified, and audio is handled very differently from windows xp to vista to 7 and so on. Finding a way to control process volume across installations was very difficult, but making it happen was very satisfying, and will produce a pretty useful little device. </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Going from nothing, to a fully formed hardware peripheral with a supporting desktop application in less than 24 hours was really difficult. The team got lucky, in that we ran into no major development roadblocks and could start focusing on polish with some time to spare. </p>\n<h2>What I learned</h2>\n<p>RTFM. Every time. Stack overflow is good for little things, but there is some merit to reading the the source documentation. </p>\n<h2>What's next for Sound Supervisor</h2>\n<p>Since it was built with Devon's components, it's bound for his desk and everyday use. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li></ul>\n</div>\n</div>", [""]], ["Spot", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Spot \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/511/datas/gallery.jpg\"/>\n<p>\n<i>Parked - Once parked in the spot, the cost for the duration of your parking session, and maximum time remaining are displayed.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Spot \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/512/datas/gallery.jpg\"/>\n<p>\n<i>Searching for parking spots - either through navigating through the map, or setting an address, nearby parking spots are displayed</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Spot \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/514/datas/gallery.jpg\"/>\n<p>\n<i>Selected parking spot -  displaying location of the spot, cost per hour and parking time limit</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Finding and paying for parking sucks, so we made it better.</p>\n<h2>What it does</h2>\n<p>Spot is a parking assist mobile web app that removes the hassle of finding and paying for parking. Spot allows a user to set where they are going, and will show nearby parking spots, as well as meter time limits and cost per hour.</p>\n<h2>How we built it</h2>\n<p>We built a Flask app that we then deployed to Heroku.  The app itself is based on an Arduino sensor that would monitor a parking spot, and transmit the status, whether the spot is available or not, to a web app.  </p>\n<h2>Challenges we ran into</h2>\n<p>Spot had two very large challenges, both with the hardware and software aspects of the system.\nIn regard to hardware, he sensor and circuit that Spot use are very simple, however, pushing the data a sensor receives to a server is quite difficult.  The normal way to do this is with an Arduino Ethernet Shield, however, none were available.  The work-around to this was using a simple Python script that read from the Arduino data port and pushed the data up to the server.\nWorking with a map API was difficult, and something none of us had experience with.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/heroku\">heroku</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-maps\">google-maps</a></span></li></ul>\n</div>\n</div>", ["Built and deployed the Flask app including the endpoints for the sensor data, contributed a lot to coding the styling and layout of each page.", "Worked on the front end of the app including the Google Maps API.", ""]], ["General Election Trends", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Every member of our group is interested in data analysis. Whilst looking through the possible hacks that the companies were suggesting, we happened upon the presidential election data analysis project. </p>\n<h2>What it does</h2>\n<p>Our project analyzes data from previous presidential elections and uses it to both notice trends in previous elections and also to use it to predict future results.</p>\n<h2>How we built it</h2>\n<p>We first scraped the data from wikipedia using a javascript program. We then analyzed the data by converting it into a csv file and running a data analysis on it in c++. We also created a visual graphic to help better visualize the data in html/javascript. </p>\n<h2>Challenges we ran into</h2>\n<p>We had some trouble coming up with an idea. In addition, none of us had worked with csv files or extracted data from a website before so we had to take some time to learn that. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We managed to create a fully functional intensity election map. In addition, we learned the basics of data analysis to help us with this project in general.</p>\n<h2>What we learned</h2>\n<p>We learned the basics of data analysis, how to extract data from websites, and how to read and write from csv files. </p>\n<h2>What's next for General Election Trends</h2>\n<p>We want to use this program to help predict future election results in the future. We noticed a general trendline in the data and hope to use that and multiple other factors to try and predict the results in the 2016 general election.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n</div>", ["", "", ""]], ["Latex-t", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>When working on problem sets for Mathematics or Computer Science classes, we've all found it's a lot easier to write and think on paper or a white board than it is to think in Latex. The most tedious part of completing these problems always ends up being typing up this inspiration into Latex. </p>\n<h2>What it does</h2>\n<p>Our project has two parts. The first part takes an image of written equations, then processes the image and splits the work into lines. Using flood fill, our program finds individual characters, then sends these characters to ShapeCatcher.com to map the character to a variety of possible unicode characters. Then our program chooses the most likely match based on a combination of ShapeCatcher's specific score and our prioritizing of common characters. Then, our program utilizes the relative locations of the characters in the initial image to determine if certain numbers are subscript, superscript, and/or fractions. Finally, our program combines the unicode characters and the positional information to generate and email Latex code to the user which can then be added to a Latex document by the user. </p>\n<p>The second part uses the Synaptics Large Touch Sensor to allow the user to draw and input equations into the program. The time based drawing data is then sent to a server running a tool called Seshat, which was written as a PhD project by a computer scientist a couple years ago which interprets single line equations into Latex code.</p>\n<h2>How we built it</h2>\n<p>The first part of our program runs entirely in Python. We use a variety of algorithms to complete the tasks listed above. </p>\n<p>For the second part, we used Python to interpret touch data from the Synaptics large touch sensor and parse it into a format that Seshat could interpret. Then, we used a post request to send this to Seshat so we could return the response as a Latex equation. </p>\n<h2>Challenges we ran into</h2>\n<p>One of the challenges we ran into was the fact that a lot of character recognition systems utilize time based data in addition to the picture. Because of this, we had to either find a way to get time based data or find a character recognition that didn't need it. Shape catcher was our first approach. Our main difficulty with using Shape Catcher was the fact that it didn't have any sort of API, so we had to manually figure out what post request to send to get back a response. In addition, we had to learn how to parse the HTML response. </p>\n<p>With time based data, we utilized the Synaptics touchpad to draw equations. Then, we could send this data to Seshat server to find the equation. The biggest challenges here were getting the touchpad data to be collected efficiently with a high frame rate, getting the data into the right format, and properly getting data back from the Seshat server. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We were most proud of the fact that we were able to individually implement all of these algorithms for OCR on our own and get them to work together through a variety of files written by a variety of people. We definitely struggled with having clear code with clear specs that people could read and understand to work together with. </p>\n<p>For the second part of the project, we're most proud of the fact that we were able to properly work with the Synaptics touch sense to the extent where we could get data and properly interpret and format it. </p>\n<h2>What we learned</h2>\n<p>We learned about utilizing get and post requests! Also, we learned a ton about image processing with all of our work with the original image. Also, we learned a lot about using external sensors through our experiments with the Synaptics Touch Sensor. </p>\n<h2>What's next for Latex-t</h2>\n<p>Right now, Latex-t unfortunately can't hit a lot of specialized mathematical symbols and expressions like integrals and sums. Our goal is next to expand the scope of what Latex-t can accomplish. Then, our plan would be to incorporate both sides of our project into an iPad app. The iPad gives us the interfaces both of a large touchscreen for drawing equations and a camera for taking static pictures of written equations. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/github\">github</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/varunm22/latex-t\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/varunm22/latex-t\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["sid", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"sid \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/127/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"sid \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/128/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"sid \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/185/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Jared's grandmother is a high-school librarian, and she deals with issues surrounding student ids everyday. For example, students often forget their physical ids but carry their cell phones at essentially all times. She encourages students to take photos of their ids to display on their phones, but more often than not, the barcodes aren't able to be read by the scanner.</p>\n<h2>What it does</h2>\n<p>Our CMS interface is accessible by school administrators who can add student account containing the information necessary to identify them, particularly their student id. Our mobile application calls an API which extracts this information, displaying the student's photo, name, school name, and barcode id. Students can request to change their password, and a form is submitted to their emails for handling.</p>\n<h2>How we built it</h2>\n<p>Our mobile application is built natively in Swift 3 and iOS 10.0 using Xcode 8.0. Our CMS interface is built on a stack of Flask, nginx, gunicorn, and html/css. The database driving both clients is MySQL, running on sql.scripts.mit.edu, and our Flask server is hosted on an AWS EC2 instance. </p>\n<h2>Challenges we ran into</h2>\n<p>Ensuring that our connections sql.scripts.mit.edu did not overlap. Furthermore, ensuring our database model matched our ORM. Developing in Swift 3, far different from the comfortable Swift 2.*, and building for a target version 10.0, also recently released. Kicking the CentOS box on our EC2 instance required a lot of domain knowledge with respect to the libraries and frameworks we needed to import to run a Flask server.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Self-hosting on AWS. Utilizing a free technology at MIT. Building an efficient ORM. Building a CMS as opposed to directly interacting with the database.</p>\n<h2>What we learned</h2>\n<h2>What's next for sid</h2>\n<p>Adding more schools. Enhancing security. Redesigning the UI.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/nginx\">nginx</a></span></li><li><span class=\"cp-tag\">gunicorn</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ios\">ios</a></span></li><li><span class=\"cp-tag\">alamofire</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sqlalchemy\">sqlalchemy</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mysql\">mysql</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/johnclarke96/student-id\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/johnclarke96/student-id\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Tesla's Wrath", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Tesla's Wrath \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/694/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Tesla's Wrath \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/695/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Tesla's Wrath \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/696/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Tesla's Wrath \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/697/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>The security of airgapped systems is generally taken for granted, as airgapping removes the primary vectors for infiltration and exploitation. It is also generally assumed that even an infiltrated airgapped system is still (relatively) safe, as the infiltrator has no way to activate their payload on demand.</p>\n<h2>What it does</h2>\n<p>Tesla's Wrath (\"TW\") uses the incidental RF emissions produced by the GPIO pin(s) of the Intel Edison and other compute boards to transmit and receive payloads between \"airgapped\" systems or IoT devices.</p>\n<p>In its current state, TW is capable of sending a payload from an Edison board to a listening system, such as the RTL2832U SDR. This payload is sent on the FM band (at a frequency of approximately 100MHz) and is decoded by the client. Currently, no signal processing is performed - analysis is done by considering peaks over -45dB as binary '1' and all lesser signals binary '0'.</p>\n<p>The ultimate goal of TW is to provide a full two-way channel between airgapped systems, <strong>without any specialized radio or signal processing equipment</strong>. In theory (and in practice on the transmission end), this is made possible by the effect of spurious emissions from a proximate transmitter on the receiver.</p>\n<h2>How we built it</h2>\n<p>TW currently uses a single Intel Edison chip and Arduino breakout board as the transmitter, as well as an SDR (NooElec RTL2832) as the receiver. Both leverage Linux and open source programs (RTL-SDR, GQRX).</p>\n<h2>Challenges we ran into</h2>\n<p>Our initial attempt focused on using an off-the-shelf FM transmitter to activate a GPIO pin on the Edison. This quickly proved infeasible, as the FM transmitter was imprecise and had substantial distortion and feedback issues. We switched to a dual-band transceiver, but experienced separate issues with power output and (legal) frequency limitations. Upon switching to the Edison for the role of transmission, we experienced problems with limited range and signal strength, although these were worked around by means of an antenna.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Getting the Intel Edison to transmit on the FM band with limited resources and without specialized hardware.</p>\n<h2>What we learned</h2>\n<p>Interfacing with the Intel Edison and its GPIOs.</p>\n<p>Radio regulations and power characteristics.</p>\n<p>Frequency modulation techniques and signal mixing.</p>\n<p>How to break RF equipment.</p>\n<h2>What's next for teslas-wrath</h2>\n<p>TW will ultimately be capable of complete two-way transmission, as mentioned above. Similarly, we plan to experiment further with noise reduction and range extension. We would also like to experiment with more diverse hardware, including the Raspberry Pi and other embeddable boards. Extending this potential to consumer-oriented hardware (desktops, tablets, servers) is also a natural conclusion for TW.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c\">c</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bash\">bash</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/intel-edison\">intel-edison</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li><li><span class=\"cp-tag\">sdr</span></li><li><span class=\"cp-tag\">radio</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/linux\">linux</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/fdcabb611f5e10605d933575bcac24c9/teslas-wrath\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/fdcabb611f5e10605d933575bcac24c9/teslas-wrath\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Testing and schematics research.", "", "", ""]], ["Mind Palace", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>I learned about the Loci method in psychology class and found it interesting and having great potential.</p>\n<h2>What it does</h2>\n<p>The app creates and takes one through a virtual mind palace, where one can place visual representations of topics at familiar locations. Afterwards, one can play a game to test one's familiarity with your subject of memorization. </p>\n<h2>How we built it</h2>\n<p>We used Android Studio to build and program this app.  </p>\n<h2>Challenges we ran into</h2>\n<p>We often had issues with Github when pushing/pulling/merging. In addition, android programming was new to a few of our team members. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>The app successfully combines the creation of a mind palace with an interactive test of the user's progress in memorization.</p>\n<h2>What we learned</h2>\n<p>We learned many new programming techniques, as well as how to divide the programming tasks to maximize efficiency.  </p>\n<h2>What's next for HackMIT2016</h2>\n<p>We would like to extend the project to customize the mind palace for the users. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/eureka1123/HackMIT2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/eureka1123/HackMIT2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on creating your own mind palace, specifically the set up and selection  of background images. I also incorporated the \"cards\" into our game, associating each one with a location.", "I worked on gathering the pictures and creating the logo. I just started learning code from the beginning of this project, and tried to learn more and more as it went along. I also worked on building the car.", "", ""]], ["Glass Ticker", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>The idea for Glass Ticker came after Adam read a news article several years ago announcing that computers had outnumbered humans in quantity of stock market trades. We wrote Glass Ticker to examine the other side of the stock market: humans, and in particular, their susceptibility to news media.</p>\n<h2>What it does</h2>\n<p>We sought to determine the impact of a news article on a human's tendency to invest in that company. Our program computes a metric we call the Consumer Investment Coefficient, which is a value ranging from zero to one that represents the correlation that the news coverage of a company on a given day will influence casual investors, or people that do not work exclusively in finance, to invest in the company. The program also computes several other useful metrics that relate to the media's influence over the market.</p>\n<h2>How we built it</h2>\n<p>We used the NASDAQ APIs to feed live stock market data into our program. We brainstormed, outlined, and implemented a novel algorithm using several uncommon data transformations. We wrote the code in a variety of programming languages, but the primary mechanisms are implemented in Python.</p>\n<h2>Challenges we ran into</h2>\n<p>Visualizing our own processes was a complex undertaking due to the program's great degree of abstraction from reality and the complexity of the algorithm. We were, of course, also limited by the fallibility of our bodies, as two of our team members fell ill at some point, and were not able to make it through the night. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We built a totally original algorithm that really works!</p>\n<h2>What we learned</h2>\n<p>Finance is hard!</p>\n<h2>What's next for Glass Ticker</h2>\n<p>We believe that Glass Ticker can be relatively easily validated by grouping NASDAQ-listed companies by sector and verifying that consumer industries are more highly correlated than industrial sectors, in accordance with our premise that news coverage plays a large role in influencing investor decisions.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag\">c3</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li></ul>\n</div>\n</div>", [""]], ["Aria", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Youtube recently demonetized a large pool of videos many of which were made by career content creators. They cited advertiser friendliness as the reason and targeted videos tagged or flagged with unsavory topics. This caused quite the stir in the Youtube community with many feeling snubbed by high-view content that earned piddling revenue. </p>\n<p>We wanted to create  a content creation platform where the creator would be rewarded not by the amount of money advertisers were willing to pay but by consumers engagement with the content. We wanted a system that would gauge interest and appreciation for media without unduly burdening the user. To that end, we built Aria- a platform where emotional analysis of viewers through facial and voice processing measure engagement would appropriately allocate funds to video creators. </p>\n<h2>How we built it</h2>\n<p>We developed a web application where we output a video and, during the playback of said video, we grab visual and auditory information. We send this information back and process the visual information using Microsoft's cognitive service API for emotional analysis and the auditory information using Microsofts speech processing and text analysis APIs. We store these in a documentdb for later retrieval. When calculating costs, we retrieve information from our database and combine these values together into a metric that measures the difference between content creator intent and perceived user emotion and achieve a metric for how well a video achieves its goal. Using this value, we transfer an appropriate amount of funds from a central revenue bank account to content creator accounts using the Capital One Nessie API.</p>\n<h2>Challenges we ran into</h2>\n<p>We did not anticipate the difficulty of processing audio data. Taking data in as input, sampling correctly, converting the file format, and ultimately converting this into a concrete sentiment value were all more challenging than we anticipated. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>For the bulk of the video presenting software, we remained entirely loyal to Microsoft's services and integrated each in a meaningful way.  </p>\n<h2>What we learned</h2>\n<p>Sometimes simple ideas have difficult implementations. Even when we broke down our project into discrete, manageable chunks, unforeseen difficulties and misunderstandings resulted in a lot of time spent tinkering with code. Given a short time period to construct our project, such as a hackathon setting, focus on essential components is paramount. </p>\n<h2>What's next for Aria</h2>\n<p>Our video system is in a very early stage of development. Many features that are common across platforms such as Youtube, Vimeo, etc such as recommendations are absent in our current iteration. Aria can be expanded to achieve these while still retaining its core goals. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/machine-learning\">machine-learning</a></span></li><li><span class=\"cp-tag\">cognitive-services</span></li><li><span class=\"cp-tag\">documentdb</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/azure\">azure</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Hackathon-1/fml\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Hackathon-1/fml\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Bliglass", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Bliglass \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/997/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to make hardware technology that allows people with visual disabilities to be able to feel as independent as anyone else.</p>\n<h2>What it does</h2>\n<p>It can direct people with visual disabilities to their desired destination and allow them to know when to take a turn and if there is a person or object in front of them to avoid it.</p>\n<h2>How I built it</h2>\n<p>We built it using Swift on the application side using the MapKit and Bluetooth framework. We build the hardware side with Arduino, C code, and Bluetooth Module to communicate with mobile.</p>\n<h2>Challenges I ran into</h2>\n<p>We could not pair our Bluetooth module initially and we also could not add sound commands.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We made a portable prototype, which we can start using to test whether it can help people with visual disabilities.</p>\n<h2>What I learned</h2>\n<p>We learned a lot of hardware components and how to configure it properly with different parts such as Ultrasonic Sensors and Servo Motors.</p>\n<h2>What's next for Bliglass</h2>\n<p>Testing the prototype with people </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c\">c</a></span></li></ul>\n</div>\n</div>", ["", "", ""]], ["Connec", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Connec \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/527/datas/gallery.jpg\"/>\n<p>\n<i>Start screen</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Connec \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/526/datas/gallery.jpg\"/>\n<p>\n<i>List of companies and their Queue Health</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Connec \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/524/datas/gallery.jpg\"/>\n<p>\n<i>Student Priority of 5 Queues</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Connec \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/525/datas/gallery.jpg\"/>\n<p>\n<i>Recruiter Mode</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We know we're not the only ones who are frustrated with career fairs. They are unorganized, crowded, and an awful experience for all parties involved. As technologies improve, it seems that career fairs stay the same. We sought to change that and modernize the career fair.</p>\n<h2>What it does</h2>\n<p>Connec is a web application that replaces traditional lines at a career fair with an automated queuing system. Students can electronically join the queues of companies they're interested in (up to 5 at a time) and track their positions in real-time. When they are close to the front of a queue, a reminder is text-messaged to them. </p>\n<p>On the other end, recruiters can make company queues for students to see and join. During recruitment, they are presented with a screen that tells them the student's name and the length of the queue. When they are done speaking with a student, they manually update the queue with a simple click of a button.</p>\n<h2>How we built it</h2>\n<p>The user interface of the web app was designed using Sketch. That design was converted into frontend code using the Bootstrap framework. The backend utilized Node.js, Express.js, and MongoDB.</p>\n<h2>Challenges we ran into</h2>\n<p>As this was our team's first hackathon, it was surprising how difficult it was to decide on an idea. We also had to learn a bunch of frameworks on the spot. As time ran low, we had to say farewell to some features we wanted to implement.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We're so proud of the amount of effort we put in. We didn't plan to stay up as late as we did, however, we all made sacrifices for the sake of the project.</p>\n<h2>What we learned</h2>\n<p>We learned a multitude of frameworks like Node.js, Express.js and MongoDB. We were familiarized with the frontend/backend relationship. We learned the valuable consequences of working in a team of friends.</p>\n<h2>What's next for Connec</h2>\n<p>We want to add the additional features we had to cut out, such as a countdown clock to the time that career fair starts. We also want to introduce the webapp to the school's career center for possible use at a future career fair.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/font-awesome\">font-awesome</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/stephaniepang97/connec\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/stephaniepang97/connec\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Provided research and the high level layout of the web app. Also contributed to the back end HTML code.", "Designed the UI and subsequently implemented the front-end.", ""]], ["Pico", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Pico \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/937/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to bring the fun experience of Prisma to the immersive world of VR.</p>\n<h2>What it does</h2>\n<p>The user explores Google street view photospheres transformed by our app into the style of different artists.</p>\n<h2>How we built it</h2>\n<p>We have a distributed server architecture comprising of a Node.js server and a Python server (which hosts our trained Torch models). The two run on different AWS instances and communicate with each other with the gRPC library. A latitude longitude request is sent to the Node.js server, which saves a photosphere to Amazon S3 and sends the link to the Python server which processes the image in the style of the artist and sends back an S3 image link. The Node.js server then sends the S3 image link to the VR app. </p>\n<h2>Challenges we ran into</h2>\n<p>1) The photosphere images for VR are 16MB. Right now, deep learning models are capable of dealing with images that are 1MB.\n2) Training and integrating a deep learning network into Python. \n3) Decreasing the latency of the model in creating different styles which is difficult as it is an iterative optimization process.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/machine-learning\">machine-learning</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">torch</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/heliumsoule/Pico\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/heliumsoule/Pico\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Hate Yourself: Productivity through Guilt", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>People (especially students) often get distracted while trying to do work by websites like Facebook, Reddit, Netflix, etc. We wanted to build something that negatively reinforces visiting those pages.</p>\n<h2>What it does</h2>\n<p>Hate Yourself limits the amount of time you can spend on certain websites, and will send you demeaning messages if you stay on them for a while. This causes severe guilt and will make users want to do their work! In extreme cases, electric shock may be employed to physically harm the user.</p>\n<h2>How we built it</h2>\n<p>We wrote Hate Yourself as a Google Chrome extension and used an Arduino (and a battery and a  bunch of capacitors) to deliver the shock.</p>\n<h2>Challenges we ran into</h2>\n<p>Getting enough voltage to actually make the shock hurt! Also centering divs.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Figuring out how to center divs. </p>\n<h2>What we learned</h2>\n<p>How to center divs.</p>\n<h2>What's next for Hate Yourself: Productivity through Guilt</h2>\n<p>Make the shock aspect work!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/chrome\">chrome</a></span></li></ul>\n</div>\n</div>", ["", "", "", ""]], ["Rexthor -beta", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Even though we have been in school for only one month, we have already witnessed so many people stressing out about everything from their social life to academics to economic status. This has led to deterioration of their academic grades as well as social life. Our inspiration came from this problem that we want to fix with our product and hopefully, destress people so they have the calmness and focus they need to do well in all aspect of their life.</p>\n<h2>What it does</h2>\n<p>It utilises facial emotion recognition to sense what and how the user is feeling the given day and sets the mood of lighting, music, temperature, TV shows, etc. accordingly(for now, our prototype can control lighting and music). It also uses speech recognition to personalise for each user, whether he/she wants to skip to another song or change the settings of a device(air conditioner, TV, etc.) Every user will be prompted for songs they like to listen to in each mood and based on the input, it would create playlists the user can then play on shuffle or edit using speech, all without moving from their position.</p>\n<h2>How we built it</h2>\n<p>We utilised existing <em>APIs</em> including Microsoft Cognitive Sciences Emotion <em>API</em>, Google Speech <em>API</em> and Spotify <em>API</em> in JavaScript and Python. We also have a hardware aspect(lighting) where we built a circuit with LEDs and resistors and connected it to a raspberry pi to control the lighting.</p>\n<h2>Challenges we ran into</h2>\n<ol>\n<li>Integration of backend with hardware</li>\n<li>Silently installing Raspberry Pi 3 without a keyboard, monitor or mouse.</li>\n</ol>\n<h2>Accomplishments that we're proud of</h2>\n<ol>\n<li>Started a project we can work on in the future</li>\n<li>Learned and implemented 3 APIs</li>\n<li>Created a modern and minimal User Interface from scratch</li>\n</ol>\n<h2>What we learned</h2>\n<ol>\n<li>How to deal with a variety of APIs</li>\n<li>Working in a team</li>\n<li>Project Management</li>\n<li>Raspberry pi: software and hardware</li>\n</ol>\n<h2>What's next for Rexthor -beta</h2>\n<p>We plan on expanding using leap motion and oculus rift further personalising for each user by allowing them to make hand gestures to change any setting and then virtually be in an environment where they can destress and calm themselves or get excited whenever they want to. We also plan on implementing a variety of settings within a room including temperature, TV channel/show, locks, etc.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/meteor-js\">meteor.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li><li><span class=\"cp-tag\">microsoft-cognitive-sciences</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-web-speech-api\">google-web-speech-api</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/nisargkolhe/Rexthor-Beta\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/nisargkolhe/Rexthor-Beta\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Created the algorithm to play songs based on different emotion inputs using Microsoft's Cognitive sciences Api and then integrating it with Spotify. Worked on integrating raspberry pi 3 for custom lighting demo.", "Worked on the backend and frontend with Meteor.JS, implementing Microsoft's Emotions API and Google Speech API.", ""]], ["Radar", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Despite the incredible amount of effort that is being poured into advanced 3D-Motion Tracking by researchers and large scale companies today, developers rarely touch this paradigm because most people don't have access to the third party systems built around 3D-Motion Tracking. The thing is though, that people usually carry around the basic components for this form of interaction with them every day through their laptop and smartphone cameras! So we decided to build an api for web developers to begin to explore this new form of interaction where the client doesn't need to carry any extra weight.</p>\n<h2>What it does</h2>\n<p>Radar tracks motion in 3D through a WebRTC configuration between a standard smartphone camera and a laptop or computer webcam. The smartphone is horizontally placed parallel to the end of a laptop with the front-facing camera pointing upwards. X-Y movement is tracked by the laptop webcam, and Z movement (moving towards or away the laptop screen) is tracked by the phone camera. Together, any moving object can be tracked in 3 dimensions. All of this is done in browser, and can be used to interact with various web applications such as simulations, games, and navigation.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/webrtc\">webrtc</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag\">es6</span></li><li><span class=\"cp-tag\">web-technologies</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/themichaelyang/radar.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/themichaelyang/radar.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["RockBand2.0", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>RockBand2.0</h1>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/luludust/RockBand2.0\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/luludust/RockBand2.0\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["FacePlate", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>FacePlate</h1>\n<p>Whether we like it or not, digital screens have become a large part of lives. Whether we are looking at cooking recipes, facetiming parents, or working out at a gym, we almost always have screens next to us. It could be a phone, a television, or an iPad, but they all consist of screens.</p>\n<p>However, the inconvenience of constantly having to hold the screen is always a nagging problem that people face. Because of this, we decided to build a face detector that will allow the screen, or any object, to rotate up to 180 degree motion. This way, as long as the user mantles their item on the machine, they will be able to have a solid view of the screen, so whether they're cooking and reading their recipes, or working out at a gym, they'll be able to have both their hands free to do what they are doing. This way, people could concentrate more on their task at hand rather than worry about being handicapped.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/hdg97/FacePlate\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/hdg97/FacePlate\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Integrated openCV with intel Edison to allow facial recognition while manipulating the camera platform", "Worked on hardware ", "Hardware and software "]], ["Money With Friends", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Money With Friends \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/688/datas/gallery.jpg\"/>\n<p>\n<i>main view</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Money With Friends \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/691/datas/gallery.jpg\"/>\n<p>\n<i>send money</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Money With Friends \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/687/datas/gallery.jpg\"/>\n<p>\n<i>view balance</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Money With Friends \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/690/datas/gallery.jpg\"/>\n<p>\n<i>view friends list</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Money With Friends \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/689/datas/gallery.jpg\"/>\n<p>\n<i>import friends</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>I used to work at PayPal and I sometimes give money to friends. I like using the PayPal app and Venmo to send money to friends, but there are issues, especially when you spell an email incorrectly (this can lead to permanently lost money on PayPal). I know that sending and receiving money (digital currency) is a HUGE (multi-billion dollar) industry with a lot of opportunity. </p>\n<h2>What it does</h2>\n<p>This app is supposed to use the Capital One API Nessie and the Facebook API to connect your friends and send money. </p>\n<h2>How I built it</h2>\n<p>I used a Swift single view application to create an application for iOS. I only wrote some of the main application views, as I ran into challenges that I could not resolve.</p>\n<h2>Challenges I ran into</h2>\n<p>First and foremost, the biggest challenge was scope. I decided to build the app alone, as my original partner decided not to come, and implementing the Nessie and Facebook APIs was a little too bold. After I built the framework for the app and going to a few talks, I dived into the APIs. I have not done very much with services and HTTP. So, trying to do it on my own was a bad idea. Essentially, I was not able to implement any of the APIs I had set out to implement.</p>\n<p>Second, I stayed to the end of the introduction ceremony and did not get a table. The bleacher seats are extremely uncomfortable. I'm also not a fan of using my laptop on my actual lap. </p>\n<p>Third, the internet was unusable for a few hours at the beginning of the hackathon. I could use Xcode offline, but I had to try to view the APIs on my phone.</p>\n<p>Finally, I was extremely tired. We left at 6:30PM (9:30PM EST) and had a 5 hour flight with a 2 hour layover. We got here at 6:00AM EST. I didn't sleep for over 40 hours. At around 10:00PM, I crashed. I had not planned on needing a host or sleeping, but ended up needing both. I slept until about 6:00AM and did not get much more done on the project. </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I'm a beginner in Swift development and Xcode, but the app looks decent for a beginner (in my opinion). </p>\n<h2>What I learned</h2>\n<p>Scope is extremely important. If I had focused on just Nessie or just Facebook, I could have probably gotten more added. Sleep is also important. If I'm invited back next year, I'll be sure to bring or make a team and get here Friday night.</p>\n<h2>What's next for Money With Friends</h2>\n<p>I may continue later, just to have the experience. For now, Money With Friends is cancelled.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/lkcallen/moneywithfriends\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/lkcallen/moneywithfriends\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Sole contributor"]], ["Scrub", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Scrub \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/092/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Scrub \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/093/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Oftentimes it takes quite a long time to find the right spot in longer videos, even when we know exactly what we are looking for. This is especially true with lectures and documentaries. With recent developments in audio transcription, we can now search many videos by their dialog content.</p>\n<h2>What it does</h2>\n<p>Scrub uses the captions generated (and sometimes hand-written) for YouTube videos to allow users to query locations in videos where a certain word or phrase is spoken. We are also looking into using the speech recognition capabilities of iOS 10 to allow us to transcribe personal videos as well.</p>\n<h2>How we built it</h2>\n<p>We built both an iOS mobile app and a React web app for this, both utilizing an XML-based API for YouTube to receive generated captions for videos. Embeddable YouTube players allow us to play the video at the given time stamp of a phrase when it happens. For the iOS personal video dialog search, we are investigating using the MediaPlayer and Speech frameworks to locate and transcribe video files.</p>\n<h2>Challenges we ran into</h2>\n<p>Unexpected issues with YouTube players due to changes in iOS 10, as well as several issues involving parsing XML and launching Herold to host the web app. Fairly smooth sailing otherwise, though!</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Being able to quickly show all instances of a word or phrase in an hour-long lecture video within seconds in a clean UI for both iOS and web.</p>\n<h2>What we learned</h2>\n<p>There's still a long way to go with speech-to-text, particularly in the face of noise, accents, and so forth. Additionally, some YouTube videos don't allow access to captioning via their API due to copyright issues...</p>\n<h2>What's next for Scrub</h2>\n<p>Getting a working implementation of personal video transcriptions and further optimizing the transcription process. Hopefully developing an Android version as well and a simpler Chrome extension to allow users to use Scrub while they are on YouTube itself.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/iphone-sdk\">iphone-sdk</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/react\">react</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/heroku\">heroku</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/objective-c\">objective-c</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ajax\">ajax</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/atitus5/HackMIT16\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/atitus5/HackMIT16\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Implemented the XML parsing from a url to a list of timestamped Youtube links that match the phrase.", "I worked on the React web app, going from the user input to displaying video links. I cleaned up the CSS and made the web app look presentable.", ""]], ["Conversationalist", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Conversationalist \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/934/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Conversationalist \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/946/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>We've all been in a situation where some of the participants in a meeting or group project are dominating the discussion, while others are rarely getting the chance to make their opinions heard. Oftentimes, individuals do not realize how much they are talking relative to others in the group - this issue is particularly relevant to underrepresented and minority groups, who may have trouble speaking out in such settings.</p>\n<p>Conversationalist aims to solve, or at least increase awareness of, this problem by combining microphone information from each participant's smartphone/laptop in order to display a dynamic infographic that uses the brightness of each user's name to highlight those who should be given an opportunity to contribute more.</p>\n<p>NOTE: In order for the JS to access microphone data, you will need to go to chrome://flags and enable Experimental Web Platform Features</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">ruby-sinatra</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://hackmit16.herokuapp.com/index.html\" rel=\"nofollow\" target=\"_blank\" title=\"https://hackmit16.herokuapp.com/index.html\">\n<i class=\"ss-icon ss-link\"></i>\n<span>hackmit16.herokuapp.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Additive Recurrent Neural Net", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>I was inspired by the ability of recurrent nets to learn cyclical patterns, and I wanted something that could learn a cyclical pattern in a smooth space, like a sin wave over continuous numbers.</p>\n<h2>What it does</h2>\n<p>For each frame x_i, the net computes the output f(x_i) and adds it to the state, so that x_{i+1} = x_i + f(x_i).</p>\n<h2>How I built it</h2>\n<p>By hand</p>\n<h2>Challenges I ran into</h2>\n<p>It turned out Theano didn't help the project at all, because I was just doing an exploration, and didn't need backpropogation. Therefore I ditched it and implemented a neural net by hand.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Good proof of concept of cyclical behavior.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">matplotlib</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/JamiesonWarner/add_net\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/JamiesonWarner/add_net\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Wireless Controlled Rover", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We got some inspiration from the Intel booth and some ideas we came up on our own.</p>\n<h2>What it does</h2>\n<p>It's a robot that is controlled by the internet over wifi. We use an android smartphone to send it commands from the users input (touch/speech). These commands are sent from phone to firebase and then the edison takes it off of firebase and talks to the arduino which then controls the motors to make it move.</p>\n<h2>How we built it</h2>\n<p>We initially started out with the Seed Studio 4WD base and then realized that we couldn't use the supplied board for our purposes. We then decided to use the Intel Edison to talk to the motor controllers over i2c. After running into major issues with i2c and the Edison we decided to use an Arduino to control then instead and then have the Edison control the Arduino over serial using the USB host functionality. We programmed the Arduino to take the letters \"l, r, f, R\" for left, right, forward, and reverse over serial. We then programmed the Intel Edison to pull the command data from Firebase and from there we pushed it with serialport to the Arduino. We're controlling with an android smartphone with a custom built app. The app has four buttons labeled Left, Right, Forward and Back to all the user to control the robot over wifi. Once any of these buttons are pressed the app sends the data to firebase and the Edison is constantly listening so it then notifies the arduino of the command which then in turn talks to the motor controllers which then makes it move.</p>\n<h2>Challenges we ran into</h2>\n<p>We ran into a lot of problems with the Seeed Studio kit and the Intel Edison. For some reason we couldn't get i2c to work with the Edison, which is why we had to use an arduino to interface with the motor controllers. If we were able to get i2c working it would've been a much cleaner solution with less lag. Also the Seeed Studio kit had some odd instructions where we put two motors back to back and they both had hall effect sensors on the back with large magnets that prevented the two motors from turning individually. Also one of our team members had initally wired up the kit, but didn't realize that he had made a mistake which took some time to figure out. The AA battery pack was also a hassle for some reason where it wasn't making good contact with the batteries so it looked like everything was fine, but the pack wasn't outputting voltage meaning that there was a break somewhere. I even tested the continuity all around and it was fine. Strangely enough after a few times of removing the batteries and reinserting them it started to work again.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We're proud that it actually moves and works.</p>\n<h2>What we learned</h2>\n<p>We learned that sometimes the hardware may be faulty and it's not your code (Intel Edison i2c problem). Also learned a lot about different apis and programs like Node.JS and Firebase.</p>\n<h2>What's next for Wireless Controlled Rover</h2>\n<p>To hopefully make voice recognition seamless</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/intel-edison\">intel-edison</a></span></li><li><span class=\"cp-tag\">johnny-five</span></li><li><span class=\"cp-tag\">serialport</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag\">seeed</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/HackMITAggies/CarProject\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/HackMITAggies/CarProject\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Helped with the software development. Had the Bing API come into play to start speech-to-text feature that unfortunately stopped working about an hour before presentation because of the key to the API", "", ""]], ["Semantic Zoom", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<h2>What it does</h2>\n<h2>How we built it</h2>\n<h2>Challenges we ran into</h2>\n<h2>Accomplishments that we're proud of</h2>\n<h2>What we learned</h2>\n<h2>What's next for Semantic Zoom</h2>\n<p>Coming soon!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ios\">ios</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/natural-language-processing\">natural-language-processing</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/machine-learning\">machine-learning</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["HomeBites", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>University students often skip out on meals or pursue food only when it's free. For these students, dinner has become an unavoidable expenditure instead of an enjoyable tasty experience. With HomeBites, students can conveniently experience the joys of a warmly cooked meals with interesting company.</p>\n<h2>What it does</h2>\n<p>HomeBites connects guests to local hosts/residents who are willing to make a home-cooked meal. In addition, given the commitment of preparing meals, HomeBites has a catering option for hosts who have extra food, ensuring that hosts do not lose money whatsoever. This is ideally suited for university students who want a home-cooked meal as well as travelers who wish to taste authentic local food in a region.</p>\n<h2>How we built it</h2>\n<p>HomeBites was built with Microsoft Azure, Node.js, Facebook Messenger and Graph API, Postmates API, and API.AI.</p>\n<h2>Challenges we ran into</h2>\n<p>Azure's Machine Learning Studio has problem reading Azure's DocumentDB source. In addition, communication between the Messenger Chatbot and the Azure database often needs to be debugged. The fact that Facebook Messenger's payment method requires several days for Facebook to be approved means we need to seek alternative payment approaches, and neither Capital One nor Coinbase, the available payment APIs, are mainstream enough to reach a wide audience.</p>\n<h2>Accomplishments we're proud of</h2>\n<p>The chatbot has a good user interface and is extremely convenient to use.</p>\n<h2>What we learned</h2>\n<p>We became more familiar with the Graph and Messenger API in Facebook and Microsoft Azure.</p>\n<h2>What's next for HomeBites</h2>\n<p>HomeBites is ready to launch as soon as scalability issues are addressed.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/azure\">azure</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/postmates\">postmates</a></span></li><li><span class=\"cp-tag\">facebook-messenger-platform</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/api-ai\">api.ai</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/machine-learning\">machine-learning</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/pmeruva/HomeBites\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/pmeruva/HomeBites\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Dank", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We all know that one guy who keeps telling your group to watch X movie.\nYou watch X movie, and its absolute trash. Like you expected.\nThis happens over and over. How can you low key ignore his inout, without seeming rude?</p>\n<h2>How I built it</h2>\n<p>Maintains internal state of who was championing the movie from the get-go, and how the group's movie perception changed over time. Uses math and stuff to take this <code>delta_dank</code> and use it to update each member's <code>value_as_a_person</code>, which determines how much their input is weighted. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/dank-dolphins/dank\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/dank-dolphins/dank\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["F\u00b3", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"F\u00b3 \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/374/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>The MIT mailing list free-food is frequently contacted by members of the community offering free food. Students rush to the location of free food, only to find it's been claimed. From the firsthand accounts of other students as well as personal experience, we know that it's incredibly hard to respond fast enough to free food when notified by the mailing list. </p>\n<h2>What it does</h2>\n<p>F3 collects information about free food from the free-food mailing list. The location of the food is parsed from the emails, and then using the phone's GPS and the whereis.mit.edu API, the distance to the food is calculated. Using a combination of the distance and the age of the email, the food listings are sorted.</p>\n<h2>How we built it</h2>\n<p>This app was built with Android Studio using Java and a few different libraries and APIs.</p>\n<p>Emails from <a href=\"mailto:free-food@mit.edu\" rel=\"nofollow\">free-food@mit.edu</a> are automatically forward to a Gmail account that the app has access to. Using an android mail library, we parsed the location (in the form of various names, nicknames, to determine which building food is located at. Then, the user's location is taken to calculate the distance between the free food and the phone's GPS location. The user receives a list of free food, including the building/location, distance from their own coordinates, and the 'age' of the free food (how long ago the email was sent). </p>\n<h2>Challenges we ran into</h2>\n<p>At first, we wrote the mail reading/parsing code in vanilla Java outside of Android studio. However, when we tried to integrate it with the app, we realized that Java libraries aren't necessarily compatible with Android. Hence, a considerable of time late at night was put toward reworking the mail code to be compatible with Android.</p>\n<p>Also, there were difficulties in retrieving GPS coordinates, especially with regard to accessing fine location permissions and various stability issues. </p>\n<h2>Accomplishments that we're proud of</h2>\n<ul>\n<li>Creating our first app (none of us had prior Android development experience)</li>\n<li>Making horrible puns</li>\n</ul>\n<h2>What we learned</h2>\n<ul>\n<li>How to sort-of use Android Studio</li>\n<li>How email/IMAP works</li>\n<li>How to use Git/GitHub</li>\n<li>How to use regular expressions</li>\n</ul>\n<h2>What's next for f3</h2>\n<ul>\n<li>Settings for a search radius</li>\n<li>Refresh periodically in background</li>\n<li>Push(een) notifications</li>\n<li>More Pusheen</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/cory2067/f3\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/cory2067/f3\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Developed mail scripts, integration of whereis.mit.edu api, GPS distance from buildings, and displaying/loading data in the app. ", "", "", ""]], ["MojiChat", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>In our digital age, it's hard to gauge a genuine reaction to communication we send. With MojiChat, intended to seek a solution to that problem, using the preferred alphabet of our generation--<em>emoji</em>.</p>\n<p><img alt=\"alt text\" data-canonical-url=\"http://i.imgur.com/N0GpjtX.png\" src=\"https://res.cloudinary.com/devpost/image/fetch/s--VQIkCpWh--/http://i.imgur.com/N0GpjtX.png\" title=\"Initial Mockups\"/></p>\n<h2>What it does</h2>\n<p>MojiChat lets you send your friends captioned photos and get their facial response in the form of an emoji. When a friend sends you a photo on MojiChat, it takes a photo of your face and determines the emotion of it, and sends one of eight animated emoji back, each corresponding to an emotion.</p>\n<h2>How we built it</h2>\n<p>MojiChat's core technology is Microsoft Cognitive Service's Emotion API, which can determine emotion from photos. The app itself is built entirely in Swift and runs on a Firebase backend.</p>\n<h2>Challenges we ran into</h2>\n<p>We originally intended to run MojiChat on a Parse analog, and had some trouble learning the ins and outs of Firebase. As with any unfamiliar technology, it felt as though we were swimming upstream some of the time, which when we were especially glad to have Firebase mentors on site to help us out.</p>\n<p><img alt=\"alt text\" data-canonical-url=\"http://i.imgur.com/TTseDPg.png\" src=\"https://res.cloudinary.com/devpost/image/fetch/s--gZ8KQ2kv--/http://i.imgur.com/TTseDPg.png\" title=\"Emoji 1\"/></p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We developed a unique alphabet of emoji specifically for the app, all of which were fully animated by our team graphic designer, Julian. We also had a very clear vision from the start and worked to follow through on the app we wanted to create at HackMIT 2016. Finally, we worked as a team to create a clear and understandable user interface for the app.</p>\n<h2>What we learned</h2>\n<p>Backends as a service take time to learn- they aren't always just plug and play! And of course, software development always takes twice as long as you expect it to.</p>\n<p><img alt=\"alt text\" data-canonical-url=\"http://i.imgur.com/h3xovbf.png\" src=\"https://res.cloudinary.com/devpost/image/fetch/s--KTkzsAfo--/http://i.imgur.com/h3xovbf.png\" title=\"Emoji 2\"/></p>\n<h2>What's next for MojiChat</h2>\n<p>The four of us learned a lot about what we can and cannot do developing this app, and will definitely be taking it to our projects in the future, whether they be on iOS, the web, or a gessoed canvas.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/TheSafo/MojiChat\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/TheSafo/MojiChat\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Marketing director and social media engineer for MojiChat. Stay tuned for our IPO in October!", "As a non-self-proclaimed iOS Guru, I worked on many facets of our mobile app. I set up our real time communication, which was my first time using Firebase. Additionally, I attempted to keep up with our designers designs, while communicating with our complex algorithms on the back end of our app.", "I designed the interfacing between the app and the Microsoft Emotions API as well as the algorithms that converted the output to a corresponding emoji. It was my first time using swift and JSON requests and I learned a lot!", ""]], ["Ivy", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We were inspired by this (<a href=\"https://youtu.be/CQbkhYg2DzM\" rel=\"nofollow\">https://youtu.be/CQbkhYg2DzM</a>)</p>\n<h2>What it does</h2>\n<p>Ivy is a virtual assistant you can see (as a 3d hologram). You can talk to her as though she is a real person and she will interact with you. You can ask her about information such as weather, stocks, flight information and sports scores. She can even tell you jokes. As an added bonus, she can send the data you ask her right to your phone so you are always notified. </p>\n<h2>How we built it</h2>\n<p>Ivy is powered by IBM Watson to handle conversations and artificial intelligence. We taught her a bunch of things and she picked it up using machine learning. The web app was built using Node.js, Ember.js HTML, and CSS. We also used the Twilio API to handle mobile notifications. Ivy was hosted and deployed using Bluemix. </p>\n<p>The actual hologram is displayed using a clear prism that we built, placed atop a screen running the web app. </p>\n<h2>Challenges we ran into</h2>\n<p>IBM Watson does a terrible job mixing plain Javascript with Node.js, and this caused a lot of problems for us as relatively simple problems took incredibly complex solutions. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Building a hologram that works, looks cool, and is powered by artificial intelligence. </p>\n<h2>What we learned</h2>\n<p>We learned that Javascript is a really messy - but powerful - language. We also got the chance to build a practical artificial intelligence.</p>\n<h2>What's next for Ivy</h2>\n<p>We want to make Ivy into a complete virtual assistant. We want to make it so that a user can text Ivy for questions and she will respond to answers just like she would when you talk to her (similar to a text based chat bot). But even more practical, we want to push our artificial intelligence platform paired with the hologram technology to make Ivy an actual assistant that can be used in public spaces. For example, a holographic librarian (just like in the video above) that a visitor can walk up to and ask questions. We feel as though this technology has a lot of potential in the real world, we just need to scale up. Very exciting stuff. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ibm-watson\">ibm-watson</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bluemix\">bluemix</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://conversation-test.mybluemix.net/\" rel=\"nofollow\" target=\"_blank\" title=\"http://conversation-test.mybluemix.net/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>conversation-test.mybluemix.net</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Worked on implementing IBM Watson and communicating with API and services along with it. Used Node and JS to write the back end and implement it into the front end. \nHelped connect APIs that retrieve weather, sports, news, etc. then integrated Twilio to connect to users phone to send notifications based on user requests and Watson inputs.", "I worked mainly on integrating IVY with various APIs where it can pull the data for according the input provided by users and giving them useful information on the go.\nI also helped the team mates on getting watson Dialogues, entities and intents implemented. ", "", ""]], ["Etsy Keyworder", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>I was inspired by my own Etsy shop, kangaroocrafts.etsy.com. I found the process of scanning through hundreds of popular product listings to find keywords, and cross-checking them using the Etsy search engine and Google AdWords to be tedious, so I thought maybe an app can do this!</p>\n<p>Ideally, this app pulls data from the Etsy API, specifically collecting keywords from trending categories and the associated trending tags. These \"recommended keywords\" are then stored in the application. The user inputs simple words that may describe their new listing. The app concatenates all logical two-word combinations of keywords and cross checks these simple words and concatenations with the \"recommended keywords\" list and returns a list of highly searched words that the seller should use in their own listing title and tags.</p>\n<p>Currently the webapp is broken. I have a bare-bones user interface built using HTML</p>\n<p>Challenges I ran into include that going into this, I only had basic python skills. I had to learn about APIs and web hosting, then I learned HTML. I am in the process of writing the working code using javascript, jquery and node. </p>\n<p>Accomplishments that I'm proud of include the fact that I learned so many options for developing. </p>\n<p>What's next for Etsy-Keyworder? I hope it actually works so I never have to do grueling SEO by hand again. I also plan to integrate it with Google AdWords to optimize listings in Google search. I know from experience that the trends on Google are definitely different than the trends on Etsy, so it is important to note the distinction. This app is currently specific to the Etsy community's trends, and the Etsy search engine.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/goyamini/Etsy-Keyworder\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/goyamini/Etsy-Keyworder\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Motion Control Sensor", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Our team really wanted to learn how to use some of the cool hardware available.</p>\n<h2>What it does</h2>\n<p>The device detects motion and alerts users using a piezo-electric buzzer.</p>\n<h2>How we built it</h2>\n<p>We connected a buzzer and motion sensor to a Raspberry Pi using a breadboard. The device is controlled by a laptop running Python that was connected by an ethernet cable.</p>\n<h2>Challenges we ran into</h2>\n<p>There were no jumper cables, so we had to innovate a way to connect the wires to the Raspberry Pi. Also, none of us had any experience using Raspberry Pi, so it was challenging to learn.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We started to learn how to use a new device - Raspberry Pi - that we were not previously familiar with.</p>\n<h2>What we learned</h2>\n<p>It takes a lot of components and patience to learn how to use a new device.</p>\n<h2>What's next for Motion Control Sensor</h2>\n<p>Learn how to adapt Raspberry Pi to take in audio inputs.</p>\n</div>\n</div>", ["", "", ""]], ["Render: A Research Matchmaking App ", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to create an application to help enhance some portion of our college experience. We realized that many of us were interested in research on campus and sometimes had trouble finding the exact professor or grad student that had projects that fit our specific interests. </p>\n<h2>What it does</h2>\n<p>With Render: a student or professor can log in, fill out a form of their information and then be match with multiple others who share similar interests. In a way, it is a matchmaking app similar to Tinder and Bumble. </p>\n<h2>What's next for Render: A Research Matchmaking App</h2>\n<ul>\n<li>a more streamlined navigation system</li>\n<li>an interactive/responsive website</li>\n<li>location based features</li>\n<li>the ability for people to match outside of one's college</li>\n</ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/juliajluo/Render.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/juliajluo/Render.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Hand Roller", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Hand Roller \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/953/datas/gallery.jpg\"/>\n<p>\n<i>Short GIF demonstration of the outputted command codes and the motors going</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Hand Roller \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/952/datas/gallery.jpg\"/>\n<p>\n<i>Hercules robot in full</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Hand Roller \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/951/datas/gallery.jpg\"/>\n<p>\n<i>Closer look at Intel-Edison board</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>I was inspired by the sheer size and amount of people/things happening at HackMIT, since I had never been to a college hackathon before. I didn't want to miss out on any of the action, but I also obviously could not be more than one place at once, so I thought: why don't I just make a robot that I can control wirelessly to take my phone and scope out the events? I thought it would also be fun to use the Leap Motion to communicate with the robot so it would be a no touch remote control, which was what I implemented.</p>\n<h2>What it does</h2>\n<p>The robot moves according to certain gestures that the Leap Motion tracks. If you hold your hand flat, the robot goes forward. Index finger extended (only) makes it turn left, and pinky finger extended (only) makes it turn right. When you make a fist, the robot stops.</p>\n<h2>How I built it</h2>\n<p>I used the Hercules robotics kit from Intel, as well as the Intel-Edison and Arduino extended boards. These acted as a parallel computer to my own, allowing cross platform communication. The Intel Edison is connected to my computer through wifi. The Leap Motion pushes data that it processes through my computer and the Leap Motion API onto a static localhost server run through flask. The Intel-Edison CPU unit then sends continuous GET requests to this server, downloading the output strings and using those as \"commands\" for its motor functions.</p>\n<h2>Challenges I ran into</h2>\n<p>First off, there were several different very specific manuals for building the Hercules, but no comprehensive one, so I just figured out all the wiring and connections on my own. As someone with very little background experience in electronic circuits, this was a difficulty I did not anticipate (as I thought the manual would guide me through it). My second challenge was that I thought that the Intel-Edison already communicated with the computer, hence why it was originally guided by keypresses. However, since the Intel-Edison is its own computer, the keyboard merely acted as a wirelessly connected keyboard instead of the Edison actually retrieving data from the computer. I did not realize there was no communication between the platforms, so setting up a static server as a proxy proved to be the most difficult part of the code by far.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I am proud that I actually was able to have  hack that was very heavy in both hardware and software components, since I usually tend to focus on only one or the other. Additionally, I had never set up a static server and used  ajax for post/get requests before, so I'm glad that the \"data-transfer\" actually worked out.</p>\n<h2>What I learned</h2>\n<p>I learned how to use flask to set up a static server, how to use ajax/json for data input/output requests, and how to effectively wire an electronics system.</p>\n<h2>What's next for Hand Roller</h2>\n<p>Although the Leap Motion API is a good start, it is not a very extensive API and therefore does not have the best hand mapping functions built in. Next time, I hope to create a wrapper class and define my own gestures, in order to have more accurate tracking for the remote control.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/intel-edison\">intel-edison</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/leap-motion\">leap-motion</a></span></li><li><span class=\"cp-tag\">hercules</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ajax\">ajax</a></span></li></ul>\n</div>\n</div>", [""]], ["Cena Post", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Create a Twitter-like Social Network without a Central DB</p>\n<h2>What it does</h2>\n<p>It uses a BitTorrent-like algorithm to create a distributed hash table (DHT) with users posts and other information. </p>\n<h2>How we built it</h2>\n<p>We used python and built nearly everything from scratch. </p>\n<h2>Challenges we ran into</h2>\n<p>Lack of Wifi, Limited Time, Difficult concepts</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Understanding the Data Structures involved in making this project.</p>\n<h2>What we learned</h2>\n<p>How BitTorrent Protocol Works, theory behind Distributed HashTables, principles of networks.</p>\n<h2>What's next for Cena Post</h2>\n<p>Adding more functionality like username searches, encryption, and improved efficiency.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">web-kit</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/dasokol/sokolnetwork\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/dasokol/sokolnetwork\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["BitInvoice", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Bitcoin has enormous potential to change the financial ecosystem of the world. As someone with a passion for this technology, I hoped to develop an application around it at HackMIT.</p>\n<h2>What it does</h2>\n<p>BitInvoice offers the user a template for a basic invoice. In addition to basic details that one may find on an invoice template, this template generator is hooked up to the Coinbase API to generate a new bitcoin address for each invoice created. Each one of these individual addresses belongs to the Coinbase wallet that the user owns. Any small business owner with a Coinbase account would have the ability to generate infinite invoices for their customers that would be quick and free of hassle for both parties. </p>\n<h2>How we built it</h2>\n<p>BitInvoice is a web application that was developed in Python on the Flask web framework. For the bitcoin part of the project I used the Coinbase API. I used a number of python libraries for things like QR code generation and PDF generation.</p>\n<h2>Challenges we ran into</h2>\n<p>Having not had much experience working with APIs, this project was certainly challenging in this regard, though I did learn a lot from it.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Having a working application was immensely satisfying. Especially so because it is a bitcoin application that serves a valuable purpose.</p>\n<h2>What we learned</h2>\n<p>I developed my abilities in programming with Python throughout this project. Specifically, I became a lot more comfortable with the Flask web framework, and gained a better understanding for APIs.</p>\n<h2>What's next for BitInvoice</h2>\n<p>BitInvoice has a lot of potential capabilities. The next step is implementing an automated billing system in which the recipient of the invoice has a certain amount of time to pay their bill before automatic contract termination. There are also many other exciting opportunities for how to integrate bitcoin into the world of international business-to-business commerce, BitInvoice is only a start.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/coinbase\">coinbase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/nickheyek/bitinvoice\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/nickheyek/bitinvoice\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["HackMIT Stock Price Prediction", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We have an interest in neural networks and have heard of recurrent neural networks being used for stock price prediction.  We then thought that we could try to augment past market data used to train stock prediction RNNs with sentiment data on those stocks.</p>\n<h2>What it does</h2>\n<p>It forecasts stock prices using a time series of stock data that's labelled with sentiments on those stocks at a given time point</p>\n<h2>How we built it</h2>\n<p>We built our neural network using Keras, and visualized data outputed from our model on a node.js webapp.</p>\n<h2>Challenges we ran into</h2>\n<p>Quite a few - ranging from setting up our node.js server, obtaining sentiment data, training our neural net - quite a range of things, mainly pertaining to using data.</p>\n<h2>Used Data:</h2>\n<p>For our stock prices, we used Hourly Nasdaq market data for Facebook and Apple.  For our sentiment data, we used sentiment data on theses stocks gathered and kindly provided by (late on a Saturday night) Pierce Crosby of StockTwits</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">keras</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/c4goldsw/HackMIT-Stock-Prediction\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/c4goldsw/HackMIT-Stock-Prediction\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Built Recurrent Neural Network from karas", "", "", ""]], ["Tangotator", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to explore the possibilities of augmented reality.</p>\n<h2>What it does</h2>\n<p>Currently, not much</p>\n<h2>How I built it</h2>\n<p>Unity stuff.</p>\n<h2>Challenges I ran into</h2>\n<p>Unity is surprisingly hard to use for a bunch of coders.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Parts of it work and are cool.</p>\n<h2>What I learned</h2>\n<p>Game dev is a completely different paradigm.</p>\n<h2>What's next for Tangotator</h2>\n<p>Add the planned functionality for multiple users.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/project-tango\">project-tango</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/not-inept/tangotator\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/not-inept/tangotator\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Hillary-Trump", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>The app was inspired by the 6th degrees of Kevin Bacon game. We wanted to make a light hearted project that is easy to showcase and gives information about the 2016 us presidential election candidate.</p>\n<h2>What it does</h2>\n<p>It's a website, where you can enter a word/topic and then it will show you a link path from the Wikipedia article for the word you gave to the articles for the 2 candidates.\nIt will also show you how many times the articles for both candidates have been viewed on Wikipedia the past 30 days.\nFinally it will look up all the news articles relating to the 2 candidates from the past few days, look at how many times your search term was mentioned in those articles and it reports that number as well.</p>\n<h2>How we built it</h2>\n<p>The frontend was built on top of a template.\nThe backend was written in python and was made into a Web service using Flask.\nFor the Wikipedia links,  we scrape the Wikipedia articles for links and then run a simple greedy algorithm with a heuristic on the results to find paths.\nFor the page views we use the eventregistry API.\nFor the articles we also use the eventregistry API and then parse the result using beautiful soup.\nThe backend and frontend are hosted on separate heroku nodes.</p>\n<h2>Challenges we ran intout</h2>\n<p>We originally tried to deploy both our frontend and backend on the same node, which we didn't get to work properly. </p>\n<p>Getting the run time of our Wikipedia crawler algorithm down to reasonable speeds.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Actually managing to come up with an idea.\nBuilding a Web webcrawler from scratch!</p>\n<h2>What we learned</h2>\n<p>How to use Flask and the eventregistry API.\nHow to build a Web crawler.</p>\n<h2>What's next for Hillary-Trump</h2>\n<p>Make our algorithms faster, add in new data to report and add support for the candidates from past elections.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/wikipedia\">wikipedia</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/beautiful-soup\">beautiful-soup</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://www.hillary-trump.us\" rel=\"nofollow\" target=\"_blank\" title=\"https://www.hillary-trump.us\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.hillary-trump.us</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["EmojiWorld", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>EmojiWorld</h2>\n<p><strong>What it does</strong>\nEmojiWorld uses the Oculus GearVR headset to submit the users to an augmented reality where faces in their surroundings are analyzed and replaced with the emoji that best matches their current expression.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/oculus-gear-vr\">oculus-gear-vr</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag\">affectiva</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li></ul>\n</div>\n</div>", [""]], ["Orrery", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>The inspiration for this app was to create an app that overlays star data and constellations in virtual reality, in order to create a unique user experience.</p>\n<h2>What it does</h2>\n<p>Using the camera, it detects star information</p>\n<h2>How we built it</h2>\n<p>The backend uses Java and OpenCV for star detection from camera. We wrote an algorithm from scratch and used machine learning to train the data in order to detect star information from images of stars. The frontend is an Android app.</p>\n<h2>Challenges we ran into</h2>\n<p>Initially, we tried using ENCOG library for machine learning, and used EC2 instances to train our data, but because we were writing the machine learning part without using a machine learning API and training it ourselves, we kept running out of RAM and had limited system resources. </p>\n<p>Initially we wanted to display the constellation star data on the hololens, but we could not figure out Unity in time as it took a long time to install along with Visual Studio.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>The backend to detect star data was completed relatively quickly.</p>\n<h2>What we learned</h2>\n<p>We learned a lot about using new technologies--such as hololens. </p>\n<h2>What's next for Orrery</h2>\n<p>More resources to train machine learning algorithm.</p>\n</div>\n</div>", ["", "", ""]], ["Worth Watching", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>We all like movies, but we hate spending time and money watching horrible movies that have been overly hyped up. We built an intelligent tool to help predict whether upcoming movies are worth watching. We are using IMDB, Metacritic and Rotten Tomatoes to determine the quality of the movies and Twitter to find out how the community really feels about it, to come up with an accurate result. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/azure\">azure</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bluemix\">bluemix</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twitter\">twitter</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://upcoming-b842b.firebaseapp.com\" rel=\"nofollow\" target=\"_blank\" title=\"https://upcoming-b842b.firebaseapp.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>upcoming-b842b.firebaseapp.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Oshen", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>I'd really like to be social-media famous, but I don't want to put in the time and effort to get there. What if I could use an algorithm to suggest content? I'd be able to generate tweets that are popular with my followers who can spread my words of wisdom and attract new followers.</p>\n<h2>What it does</h2>\n<p>Twitter data is read into a MongoDB instance. From there, a series of asynchronous and parallelized data processes form intermediate representations and eventually build out data that can be used to create Tweets.</p>\n<h2>How I built it</h2>\n<p>I built a Flask web app that handles the API that is exposed to consumers of the data. From there, I built a job queue service that handles requests for data asynchronously and in parallel. This includes special handlers for making API requests.</p>\n<h2>Challenges I ran into</h2>\n<p>The process of debugging jobs running asynchronously was the biggest hurdle to meeting my project timeline. I was able to develop a process where I could make each step repeatable, but in the end I couldn't totally solve more complex operations where I'd need to track two different jobs simultaneously.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Building a successful data pipeline that has the potential to handle far larger quantities of data. At this point, I'm limited by the rate at which I can get data out of Twitter instead of the compute time or disk read-write.</p>\n<h2>What I learned</h2>\n<p>Start simple, and make data changes repeatable. There's no need to build in more complex options into a system ahead of future perceived slowdowns when the code doesn't run the important bits yet.</p>\n<h2>What's next for Oshen</h2>\n<p>More complex analytics. I'd like to move into sentiment analysis and deeper analysis of the best time of day for my tweet engagement, as well as a scraping utility that looks for new web content that matches suggested material.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twitter\">twitter</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/redis\">redis</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag\">rq</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/buckbaskin/oshen\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/buckbaskin/oshen\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Textura", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Many computer vision programs will tell you if a specific, pre-defined and pre-trained feature, is present in an image. Textura is a lightweight program that will train online for the feature you request.</p>\n<h2>What it does</h2>\n<p>You input an image and an adjective (works best with textures, or easily identifiable visual patterns), and we give you a matching score!</p>\n<h2>How I built it</h2>\n<p>Flask for the web app, Theano for the CNNs</p>\n<h2>Challenges I ran into</h2>\n<p>Theano debugging is quite difficult :3</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>A working product! And something that I'd work on even after the end of the hackathon</p>\n<h2>What I learned</h2>\n<p>Theano debugging experience??? Basic image processing in Python to actually normalize images to input into the CNNs.</p>\n<h2>What's next for Textura</h2>\n<p>Better accuracy, faster interface, smoother experience!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">neural-networks</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag\">theano</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/lzil/textura\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/lzil/textura\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["SnapAHotel", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>The complications of travel</h2>\n<h2>SnapAHotel uses Android Wear to find nearby hotels. With a simple snap, an individual can find the 50 nearest hotel rooms.</h2>\n<h2>We utilized the Amadeus API and Android-Studio to develop the app.</h2>\n<h2>Extracting the right data from Amadeus to fit on the watch was a challenge and getting the gestures on the watch to work was a challenge.</h2>\n<h2>I'm proud that we were able to learn so much from a simple idea and have an idea for a unique app.</h2>\n<h2>I learned that using gestures and API data is very particular and can lead to a lot of errors.</h2>\n<h2>SnapAHotel is a start to easier travel. Adding onto the application will allow users to find nearby activities, taxis, and other useful travel items with simple hand gestures.</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amadeus\">amadeus</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li></ul>\n</div>\n</div>", [""]], ["IN.VN", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"IN.VN \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/407/datas/gallery.jpg\"/>\n<p>\n<i>Early demo of search</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"IN.VN \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/360/datas/gallery.jpg\"/>\n<p>\n<i>Favicon</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"IN.VN \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/361/datas/gallery.jpg\"/>\n<p>\n<i>Main logo</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"IN.VN \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/363/datas/gallery.jpg\"/>\n<p>\n<i>Early demo of reservation/delivery card.</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Frustrated by having to look through multiple stores when trying to find a specific item last minute? Just moved into your new house and can't wait to order a new pillow from Amazon? Hopefully we can solve these problems for you.</p>\n<h2>What it does</h2>\n<p>Just search for any item at IN.VN, specific such as 'Quench Blue Plastic Water Bottle' or non-specific such as 'ceramic kitchen knife' and we'll highlight the nearest stores nearby that currently stock that item. You can click once to reserve it and pick it up at your own convenience, or click to order and get it delivered ASAP by postmates.</p>\n<h2>How we built it</h2>\n<p>Backend database and custom API is built using Django in Python and uses the Google Maps API for geolocation data. We're simulating the postmates API for the delivery mockup and then basic web tech for the front end.</p>\n<h2>Challenges we ran into</h2>\n<p>Team work distribution becomes a problem when trying to ideate quickly and work at speed.</p>\n<h2>What's next for IN.VN</h2>\n<p>We wish to continue fleshing out the product until a truly useful MVP exists, at which point we'll be requesting further feedback from potential users before continuing further.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-maps\">google-maps</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/django\">django</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/web\">web</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/postmates\">postmates</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/majolo/invn\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/majolo/invn\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Worked with google maps Api to pull data about chain stores around Boston, looked at Postmates Api", ""]], ["Postmates Generosity", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We were thinking of interesting ways to use postmates and one thing that we thought was nice, was to be able to donate through this app. </p>\n<h2>What it does</h2>\n<p>This webapps allows you to select a price value of a donation. It will then optimize to find a meal that will fit the range and deliver it to the closest shelter in the user's zone. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/react\">react</a></span></li></ul>\n</div>\n</div>", ["", "", ""]], ["Pereoscope", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>[<a href=\"https://xkcd.com/941/\" rel=\"nofollow\">https://xkcd.com/941/</a>]</p>\n<h2>What it does</h2>\n<p>This is an attempt at building a 3d live stream with a large IPD.</p>\n<h2>How we built it</h2>\n<p>We used the Periscope APIs to grab live video streams from two mobile devices, then stitched those frames together to send to a VR viewing device. The recording devices are attached to a dual selfie stick.</p>\n<h2>Challenges we ran into</h2>\n<p>Basically everything about this was challenging</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Taping two Capital One selfie sticks together</p>\n<h2>What we learned</h2>\n<p>Stereoscopic vision is hard</p>\n<h2>What's next for Pereoscope</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">periscope</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-cardboard\">google-cardboard</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/ajiraffe/pereoscope\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ajiraffe/pereoscope\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Emres", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Our team wanted to create something motorized that could provide relief to those who undergo a health care emergency in real time.</p>\n<h2>What it does</h2>\n<p>Through the emres app, one can simply press a distress button and a car will come to their location with basic healthcare supplies. In the mean time, the car also sends the patient's location to First Responders in order to provide for a more immediate relief to their situation.</p>\n<h2>How I built it</h2>\n<p>We built this using Intel's processor as well as SeeedStudio's motorized car hardware. We used Java to program the car and ios for the app.</p>\n<h2>Challenges I ran into</h2>\n<p>At first, only 1 member of our team knew how to code, leading to some difficulties in the making process.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We learned much about both the software and hardware aspects.</p>\n<h2>What's next for Emres</h2>\n<p>With investment and more time, this can be used in first responder vehicles as well as on campuses to provide more immediate relief to health care emergencies.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n</div>", ["", "", ""]], ["ErrorCode", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"ErrorCode \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/252/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"ErrorCode \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/253/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"ErrorCode \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/254/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>It's almost a fact - developers don't like writing test cases. Sure, it is a great feeling writing a test case and seeing all of your code pass, but the actual act of writing out the test cases can be cumbersome and distracting. This is where ErrorCode comes in.</p>\n<h2>What it does</h2>\n<p>ErrorCode is a platform for developers to contract-out their testing. Developers from around the world \"compete\" to write test cases that break your code, yet follow the specs that you set forth.</p>\n<h2>How we built it</h2>\n<p>ErrorCode works by running a Node.JS backend, which serves a front-end that uses AngularJS. The application also uses Firebase for the storage of project and test files that developers publish. Finally, we use Python (and in the future other languages) to run the project scripts and tests.</p>\n<h2>Challenges we ran into</h2>\n<p>The main challenges we faced was the development of the compilation engine, and the act of coordinating file transfer between developer and backend. It was quite a challenge having our Node.JS server execute commands to download the python files and run them against the test files.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are proud of our work in that it is a great foundation as a more robust code review tool. There are many future features that we would like to implement, and the platform provides great incentives for developers to participate.</p>\n<h2>What's next for ErrorCode</h2>\n<p>We would like to build a more robust compilation engine which includes support for multiple languages. We would also like to provide direct integration with services like GitHub, TravisCI, CircleCI, etc... for ease-of-use regarding the code download process. Finally, our biggest area of improvement would be the development of the Smart Specification API. Use natural language processing and big data, we would like to use the data from specifications on our site to predict test cases and test suite partitions for a given piece of code. These recommendations would be invaluable to the user, with the possible development of a test suite generator purely from specifications.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/angular-js\">angular.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/vontell/ErrorCode\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/vontell/ErrorCode\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I handled all of the backend components for the project. We used Firebase to manage the storage of our files and a Node.js server to run the site, build the tests, and host the API which returned the results. Additionally we have Square integration for payments.", "", ""]], ["MentalX", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Connect 4 seems like a fairly simple game on paper, but playing it without a board is a completely different story. Trying to hold the patterns of the board in your head, while simultaneously trying to win the game (and prevent your opponent from winning as well!) is taxing, yet strangely addictive. </p>\n<h2>What it does</h2>\n<p>MentalX is a Boardless, customizable Connect 4 variant. It can be customized for different sizes, different amounts needed to be connected, and soon will have 3 player and 3 axes implementation. It currently allows peers to play with each other on the same laptop, and also has an AI functionality, where a Monte Carlo Tree Search learning Artificial Intelligence seeks to beat any challenger. </p>\n<h2>How we built it</h2>\n<p>First we created the Connect 4 game, with a small command line user interface, and then added on different variations such as not showing the board until one player got four of a kind, and changing the size. After this was finished, we researched different game playing methods for AI, and discovered the Monte Carlo tree search algorithm. We implemented this, and have the AI using this method to choose its moves. </p>\n<h2>What's next for MentalX</h2>\n<p>MentalX's primary platform is not computers. Creating aesthetic user interfaces and increased computer functionality would be nice, but the future for MentalX lies in the mobile industry. Using bluetooth to connect with friends, creating a time mode where players only have 5 seconds to make a move, or even doing pass and play functionality all are fundamentally easier on mobile devices. We also plan on including an \"advanced\" mode where one has to know which move they make that wins the game for them, or they lose. MentalX's technology can be extended to other games such as Hex, in an effort to increase pattern recognition and endurance. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["HouseMATE", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"HouseMATE \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/348/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"HouseMATE \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/551/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"HouseMATE \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/574/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"HouseMATE \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/553/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"HouseMATE \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/552/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>As housemates for the past two years, we drew inspiration from our experience of dealing with the daily tasks associated with living with others. This includes the collection of household funds that go towards house supplies and the allocation of weekly chores. We wanted to develop an iOS app which would help with these functions!</p>\n<h2>What it does</h2>\n<p>Essentially, the purpose of this app is to facilitate a quick, easy and organized meeting between all household members. It can assist in the brainstorming and prioritizing of a list of chores, and creating a visual of the current, total household funds.</p>\n<h2>How we built it</h2>\n<p>The app was built with XCode 8.0, and written in Swift. </p>\n<h2>Challenges we ran into</h2>\n<p>Since this was new for all team members, we struggled with saving the data of users into the app. So in between launches, the user input is not saved. </p>\n<h2>What we learned</h2>\n<p>How UI works in XCode/Swift, how storyboards work, and linking it to some very basic functions. </p>\n<h2>What's next for HouseMATE</h2>\n<p>Implementation of core data, along with the additional functions of reminders, scheduling events and connecting with fellow housemates. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xcode\">xcode</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li></ul>\n</div>\n</div>", ["I created the household funds portion of the app, along with the overall design of the app.", "I worked on some of the front end which included the user interface and logo design of the app icon."]], ["SurPAS", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>PAS stands for Personal Accountability System. n</p>\n<h2>Inspiration</h2>\n<p>This project was inspired by a problem that one of our own organizations faced. As a predominantly student-run organization that had just begun last year, we were searching for an RSVP and attendance system that we could use to expedite our accountability processes. However, despite long searches, we could not find any products that seemed to perfectly fit our needs. This is why we built SurPAS, to help organizations like ours find a way to go above and beyond expectations.</p>\n<h2>What it does</h2>\n<p>SurPAS is a web and mobile-enabled application built for student leaders and members of a given organization to quickly and easily receive updates from their team leaders about events and requirements. They will not only receive event notifications, but they will also be able to quickly RSVP to events that they expect to attend as well. Then, at mandatory events, these students can gain credit for the hours they spent at the event by being verified by their small group leaders. </p>\n<p>In addition to being able to quickly take attendance at meetings, these small group leaders and their administrators may also pull up automatically generated reports about each individual's contributions and attendance records, and - if they so choose - may be notified ahead of time if the student is on track to falling behind. This way, student leaders and administrators can quickly see where possible problem areas lie, and they may resolve them before these situations worsen. </p>\n<p>SurPAS is not only applicable to student organizations, as its features can be very widely applicable to other programs from K-12 extracurriculars to adult programs within the workplace. Nevertheless, as students, we found there was a huge gap in this market for student leaders, and we hope that SurPAS can fulfill these needs for future leaders everywhere.</p>\n<h2>How we built it</h2>\n<p>We utilized Google's Firebase, HTML/CSS, Javascript, and D3.js to build everything seen in this prototype.</p>\n<h2>Challenges we ran into</h2>\n<p>We struggled first to learn how to effectively utilize Google's Firebase API with the other technologies that we knew already. Additionally, we struggled to narrow down exactly which parts of the project we felt we should prioritize building in this short time period.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We're proud that we were able to build at least a prototype that demonstrates SurPAS's vast potential to help leaders in all aspects of accountability, which includes an authorization system built through Firebase and a preliminary view of the automatically generated Accountability Reports.</p>\n<h2>What we learned</h2>\n<p>Each member of our team learned something new\u2014whether it was tackling web dev for the first time, or checking out all the functionalities for Google's Firebase! </p>\n<h2>What's next for SurPAS</h2>\n<p>We will continue to develop the prototype until it more closely resembles our final product, then look more deeply at how to bring our mainly web-based application to the mobile space.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">google's-firebase</span></li><li><span class=\"cp-tag\">html/css</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/d3-js\">d3.js</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/programmingprincess/HackMIT2016-StudentOrgApp\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/programmingprincess/HackMIT2016-StudentOrgApp\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I was the first to come up with the solution and propose it to the group. I then worked mainly on the Front-end, creating and synthesizing many of the pages that are seen in the prototype. Collaborated on some parts of the integration of the HTML/CSS with the Google Firebase API. Created advanced graphs in the accountability report using D3.", "As a leader in a student-run organization, I see valuable potential in surPas! I worked on the UI Desgin and the HTML/CSS aspects of the project.\n", ""]], ["SilverBack", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>It was inspired by the surprising number of restaraunts that offer discounted food to college students near ETSU. There are many restaraunts that have $1/slice nights, $1/draft nights, or just 15% for students. Most students on campus at ETSU only know of maybe 2-3 restaurants that offer these deals, but there are so many more that students could be taking advantage of.</p>\n<h2>What it does</h2>\n<p>It allows a restaurant owner/manager to login and post the deals that they offer. These could be recurring deals such as student discounted rates, or they could be a one time deal such as offering BOGO sandwiches. </p>\n<h2>How I built it</h2>\n<p>I went to the Firebase workshop and learned about using Firebase. I sort've threw together a proof-of-concept web app based on Firebase tutorials and examples.</p>\n<h2>Challenges I ran into</h2>\n<p>Testing the app was sometimes difficult while hosting it at localhost, for some reason. I then tried to upload to firebase, but ran into more issues.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I'm proud of getting a semi-working product ready.</p>\n<h2>What I learned</h2>\n<p>I learned about the Firebase tools that are available.</p>\n<h2>What's next for SilverBack</h2>\n<p>I plan to keep working on SilverBack, and then start marketing it to restaurants that are around ETSU. I'll probably come up with a more marketable name, as well. My vision for SilverBack would be to get it up and running, then strongly urge restaurant owners to sign up and use the app for a year or so. I hope to track the number of college students who go to the restaurant as a result of the app. After demoing the application for a year or so, I hope to sell it as a subscription marketing platform to local restaurants. For example, a restaurant may pay $500 per year to be allowed to advertise on SilverBack. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://codyscomputing.com/silverback\" rel=\"nofollow\" target=\"_blank\" title=\"http://codyscomputing.com/silverback\">\n<i class=\"ss-icon ss-link\"></i>\n<span>codyscomputing.com</span>\n</a></li>\n<li><a href=\"https://silverback-ba676.firebaseapp.com/\" rel=\"nofollow\" target=\"_blank\" title=\"https://silverback-ba676.firebaseapp.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>silverback-ba676.firebaseapp.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Camera Calendar", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Wanting to do something with computer vision. </p>\n<h2>What it does</h2>\n<p>Reads  images and tries to identify text</p>\n<h2>How I built it</h2>\n<p>i used tutorials created by google regarding ocr </p>\n<h2>Challenges I ran into</h2>\n<p>lot's of difficulties with compatibility with python 3.5 and the apis </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Managed to get something </p>\n<h2>What I learned</h2>\n<p>Don't use python 3.5  untill api's show they can handle it. </p>\n<h2>What's next for Camera Calendar</h2>\n<p>actual calendar support </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-cloud\">google-cloud</a></span></li><li><span class=\"cp-tag\">google-vision</span></li></ul>\n</div>\n</div>", [""]], ["Ultimate Lights", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Ultimate Lights</h2>\n<p><strong>HackMIT 2016</strong></p>\n<p>Have you ever woken up in the morning in total darkness or with lights that are too bright?</p>\n<p>Have you ever gotten up in the middle of the night to go to the bathroom, only to fumble around for the light switch?</p>\n<p>Have you ever been late leaving your home to an event, despite all of the alarms that you set on your phone?</p>\n<p><strong>Ultimate Lights</strong> is here as a solution for all of those problems and more!</p>\n<p>Picture your ceiling covered by a grid of LED lights. Wouldn't it be great if those lights knew your schedule and where you were in the house at all times? Well wish no more! </p>\n<p>We at <strong>Ultimate Lights</strong> have prototyped a unique software implementation of a smart LED grid system that has the capability to \"follow\" you around the house by turning on the lights directly above you and in your path, and turning off lights behind you. The system can also be set to gradually turn on and off as you wake up and as you go to sleep, and also has an alarm mode that causes the lights to flash continuously when you need to leave the house to get somewhere!</p>\n<p>Ultimate Lights has an easy to use user interface that allows users to set a schedule for their Ultimate Light system so that the system knows when to set off timing alarms, and when the lights should follow you around the house.</p>\n<p>Ultimate Lights utilizes an Angular.JS front-end framework in conjunction with a Python backend, a Node web server, and Firebase to update our interface across machines in real time. We also added a NativeScript component to create native Android and iOS versions of our application.</p>\n<p>Thanks for taking the time to read our submission! </p>\n<p>-The Ultimate Lights team</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/angular-js\">angular.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag\">nativescript</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/huyanhh/ultimate\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/huyanhh/ultimate\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked primarily on the front end of this project, which was definitely a new experience for me. I utilized Angular.js, Bootstrap, and a little bit of Node to get the job done", "Worked on the server, the simulator and the proof of concept hardware", "Worked on the server and mobile app", "Worked on the frontend with angular, firebase, and styled it with bootstrap & some custom css "]], ["Branch", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We were inspired by the current problems facing recipe websites - if you look for a steak recipe, sometimes the comments suggest edits that end up being even more popular than the original itself. We want to use a tree structure to document the meaningful variations / evolution of recipes, and realized we could apply this technology to other problems as well.</p>\n<p>For example, when authors write stories, their progression of ideas is anything but linear. This infrastructure allows authors to more easily revisit older ideas and have any number of new ideas branch off.</p>\n<h2>What it does</h2>\n<p>It stores data in a node-like format. Each node can have any number of children that stems from it, in a \"branch\" like way.</p>\n<h2>How we built it</h2>\n<p>We used the Express framework to develop a RESTful api that services our frontend and talks to Firebase on the backend.</p>\n<h2>Challenges we ran into</h2>\n<p>We didn't know how to use Firebase and Express, so this took a good chunk of time.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We know now Firebase and Express! wooo</p>\n<h2>What we learned</h2>\n<p>Firebase, Express</p>\n<h2>What's next for Branch</h2>\n<p>Integration with other services, making it more generic</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/daydreamerZzz/hackmit2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/daydreamerZzz/hackmit2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["AIsee", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"AIsee \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/246/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"AIsee \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/248/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"AIsee \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/251/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>\"This video is too long!!! I want to navigate to the part where Pusheen is like Pikachu!!\"</p>\n<p>\"Don't we have AI to analyze videos and tell us that already?\"</p>\n<p>And thus, the idea for AIsee was born.</p>\n<p>We found the Clarifai API to help us out and now, AIsee can analyze YouTube videos and tell you where certain components (i.e. cats, cute things, etc.) appear in a video. You can even visualize these components in terms of a graph. It's so convenient that it's a Chrome extension, and you can view it with your open Pusheen YouTube video! Yay, I can now click on a part of the timeline and find Pusheen's cutest moment! :)</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/cheahuychou/AIsee\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/cheahuychou/AIsee\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the javascript that made the API calls to Clarifai and processed the data to get the top tags describing the video, as well as some part of the UI. ", "", ""]], ["Recipe", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Recipe \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/258/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Living off campus and no longer having a meal plan can be tough. We've both always loved to experiment with new recipes, but when you have to plan every meal you eat, it can be overwhelming to build a grocery list.</p>\n<h2>What it does</h2>\n<p>If you are on a recipe page, and the chrome extension is clicked, a drop down menu appears with the ingredients mentioned in the recipe. You can check any ingredients you need to buy, and they are pushed to your grocery list. The recipe url is sent to your planner, where you can choose when you are eating these meals.</p>\n<h2>How we built it</h2>\n<p>For the extension, we had to parse the html of the page and find the ingredients, and then use that to build an array of  dictionaries of the amount, unit, and ingredient. Then, that array is pushed to the server where it is saved to the list, combining ingredients that are already seen in the list by adding the two amounts. </p>\n<h2>Challenges we ran into</h2>\n<p>Not every recipe website is the same- were able to scrape from most major recipe websites, but unfortunately the \"food blog\" websites could not be scraped by our original method.</p>\n<h2>What's next for Recipe</h2>\n<ul>\n<li>Improving aesthetics</li>\n<li>Building the weekly planner interface</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/chrome\">chrome</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/hannahvoelker/recipe-chrome\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/hannahvoelker/recipe-chrome\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/hannahvoelker/recipe-server\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/hannahvoelker/recipe-server\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["vral", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"vral \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/238/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>vral</h1>\n<p>This is supposed to detect coughing sounds in lecture recording (but we're not finished with it yet...)</p>\n<p>But for now, at least, you can run in terminal: $python rosa-tensorflow.py [name of a audio file]</p>\n<p>and it should give you a pretty visualization of your audio file. Make sure you have numpy and librosa installed.</p>\n<p>Next time, hopefully we can use TensorFlow to make this much better!</p>\n<p>If you're using virtual environment in Python\n<a href=\"https://virtualenv.pypa.io/en/stable/\" rel=\"nofollow\">https://virtualenv.pypa.io/en/stable/</a></p>\n<p><code>virtualenv venv</code></p>\n<p><code>source venv/bin/activate</code></p>\n<p><code>pip install -r requirements.txt</code></p>\n<p>Thanks HackMIT 2016!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/prevosis/vral\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/prevosis/vral\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [".", "", ""]], ["Web-Scraping-Wikipedia", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<h2>What it does</h2>\n<p>It utilizes D3 and displays the page views for candidates Clinton and Trump. Would've been nice to add Bernie and Cruz.</p>\n<h2>Challenges I ran into</h2>\n<p>I don't have a domain for hosting.\nSame-origin policy issues.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I did it.</p>\n<h2>What I learned</h2>\n<p>More about D3 and pandas.</p>\n<h2>What's next for Web-Scraping-Wikipedia</h2>\n<p>Continue exploring Wikipedia APIs. They're pretty neat.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/d3-js\">d3.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/amandasullivan/Web-Scraping-Wikipedia\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/amandasullivan/Web-Scraping-Wikipedia\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Scylla", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Privacy on the web has become a leading issue amongst politicians, tech companies, and even average consumers recently. The rise in concerns with who is monitoring communications or selling potentially sensitive information to whom forces many compromises in security. Our initial plan was to build an anonymizing network layer that could encrypt a user's traffic without the need of a specific browser or introducing highly limiting connection speeds. After considerable development, however, we decided to narrow our focus to a highly protected chat client, using the same cryptography engine but without an interface to the network protocols that gave us issues.</p>\n<h2>What it does</h2>\n<p>It allows two users to engage in a conversation over a peer to peer network that is virtually uncrackable (RSA encrypted salts for AES keys that expire within 5 minutes), allowing for an anonymized interaction.</p>\n<h2>How we built it</h2>\n<p>All built in Java, utilizing kryonet and crypto libraries</p>\n<h2>Challenges we ran into</h2>\n<p>As neither of us came into this hackathon with much network experience, setting out to build a viable alternative to Tor and i2p was a tad overambitious.  We were using a custom built SOCKS proxy that could intercept and manipulate raw packets, but we ran into unforeseen issues in the systematic deletion of Clients before they could be used to return network data. We suspect that some operating system kernel trickery was to blame for this, but due to having not much time to debug, this was not confirmed.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We have built a solid foundation for the project we originally set out to make, so with continued development (and a lot of traffic to StackOverflow) we can reach our initial goal. All of the logic still holds and the fact that at 4 am (after having dealt with SOCKS issues for the last few hours) we were able to narrow our scope and create a working product is an achievement in and of itself. By showing practical use of our product already in place, we can continue to build upon what we created here without getting heavily invested only to find it is not feasible.</p>\n<h2>What we learned</h2>\n<p>We learned quite a lot about how Java handles sockets and the balance between a usable (ie. not mind numbingly slow, constantly timing out) system and a completely secure one.</p>\n<h2>What's next for Scylla</h2>\n<p>A movement towards universal compatbility at either a SOCKS proxy level or HTTP/SSL proxy level would be explored again for sure -- that would make the system far more accessible to average users, and allow for organic growth in the size of the network.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/djkazic/scylla\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/djkazic/scylla\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I wrote the boilerplate code and contributed through pair programming on socket logic / implementation.", ""]], ["SeeingEye", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to build a service for the Hard of Hearing and Visually Impaired that enabled them to experience the world around them. </p>\n<h2>What it does</h2>\n<p>Utilizes Android and Hololens to create a more sensational experience gathering video and audio to explain and caption the world around the user. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/microsoft-hololens\">microsoft-hololens</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n</div>", [""]], ["Smart Property", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration: In a world where people are getting more and more connected due to the IOT technologies, people in developing countries find the cost of just joining the conversation prohibitive. However, when combining IOT technologies and a more mobile money solution it becomes possible to enable certain business models as well as financial services to these people. Still companies like M-Kopa that follow a sort of similar pay as you go model find it hard to keep up with operating costs. So, this is a an exploration of a more grass roots approach.</h2>\n<h2>What it does The demonstration is for a theoretical display that can be used to advertise. People are free to rent display time, and the money is distributed fairly through the use of a smart contract to the \"investors\"</h2>\n<h2>How I built it I had been working on the smart contract as an open source project for a while, and I decided it could be cool to polish it more and show it to people.</h2>\n<h2>Challenges I ran into were that I didn't have enough time to do an \"owner\" display to show the money distributing towards investors, but it is still possible to see that the system does work.</h2>\n<h2>Accomplishment is that I mainly worked on this by myself, and I think it is still a pretty good demonstration despite the limited time I had.</h2>\n<h2>What I learned I learned it isn't such a great idea to start at the halfway point of the hackathon, and miss out on all the cool hardware.</h2>\n<h2>What's next for Smart Property remains to be seen.</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag\">solidity</span></li><li><span class=\"cp-tag\">ethereum</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag\">embark</span></li><li><span class=\"cp-tag\">webpack</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/mit-dci/Smart-Property\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/mit-dci/Smart-Property\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["driverfy", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"driverfy \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/142/datas/gallery.jpg\"/>\n<p>\n<i>Driver</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"driverfy \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/143/datas/gallery.jpg\"/>\n<p>\n<i>Passenger</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>It is cool</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/spotify\">spotify</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/redis\">redis</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/brandenchuarnold/driverfy\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/brandenchuarnold/driverfy\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["WhipTrip", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"WhipTrip \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/095/datas/gallery.jpg\"/>\n<p>\n<i>whiptrip.co</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"WhipTrip \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/098/datas/gallery.jpg\"/>\n<p>\n<i>Main page</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p><strong>VISIT <a href=\"http://www.whiptrip.co\" rel=\"nofollow\">http://www.whiptrip.co</a> TO TRY OUT APP</strong> (desktop only)</p>\n<p>Most travel search engines prompt you for too much, like travel dates and specific destinations.  For the single college traveler or the millennial, the opportunities to travel are limited mostly by budget constraints.  We designed WhipTrip to quickly determine some of the best possible trips within any budget, regardless of time or destination.</p>\n<h2>Technologies Used</h2>\n<p>We used node.js for the backend and basic Javascript/jQuery for the frontend.\nWe also used the Amadeus APIs for travel itineraries, the Foursquare API for things to do, and the ____ API for image info.</p>\n<h2>Combining Flights and Hotels</h2>\n<p>In order to achieve a set of trips within a budget, one must account fo the combination of flights and hotel.  There is potential for a cheap flight combined with an expensive hotel, an expensive flight combined with a cheap hotel, or any range in between.  Thus, we used the Amadeus APIs to quickly generate broad searches for both flights and hotels, and used a custom algorithm to combine them.</p>\n<h2>What's next for WhipTrip</h2>\n<p>We'd like to connect to affiliate links with the major travel providers and provide this service for more than just trip ideas -- we'd like to have the ability to book straight through WhipTrip.  Also, we would like to tie in optional car rental and public transit costs, as well as cost of living based on the budgetyourtravel.com API.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://www.whiptrip.co\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.whiptrip.co\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.whiptrip.co</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Frontend and design", "", ""]], ["ICRS Checkout", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"ICRS Checkout \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/305/datas/gallery.jpg\"/>\n<p>\n<i>Screenshot of the Checkout Cart once some products have been scanned</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We needed a system to operate our Hackspace utilities shop, where we sell materials, snacks, and even the use of some restricted equipment. It needed to be instantaneous, allow for a small amount of debt in case of emergency and work using our College ID cards to keep track of who is purchasing what.</p>\n<h2>What it does</h2>\n<p>Each student has a set credit assigned to them that they may spend in our shop's products. To start the transaction they must tap their college ID onto the RFID scanner and, after being able to check their current credit, they can scan the barcode of the product they want to buy. If this transaction would leave them with less than \u00a35 of debt, the may scan more items or proceed to checkout. Their credit can be topped up through our College Union website which will, in turn, update our database with their new credit amount.</p>\n<h2>How we built it</h2>\n<p>The interface is built in bootstrap-generated webpages (html) that we controlled with python, and these are locally hosted.\nWe hosted all of our databases on firebase, accessing them through the firebase API with a python wrapper.</p>\n<h2>Challenges we ran into</h2>\n<p>Connecting the database with the GUI without the python program crashing took the majority of our debugging time, but getting it to work in the end was one of the most incredible moments of the weekend.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We've never made a webapp before, and we have been pleasantly surprised with how well it turned out: it was clean, easy to use and modular, making it easy to update and develop.\nInstead of using technology we wouldn't have available back in London and doing a project with no real future outlook or development, we chose to tackle a problem which we actually needed to solve and whose solution we will be able to use many times in the future. This has meant that competing the Hackathon will have a real impact in the every day transactions that happen in our lab.\nWe're also very proud of developing the database in a system which we knew nothing about at the beginning of this event: firebase. It was challenging, but the final result was as great as we expected.</p>\n<h2>What we learned</h2>\n<p>During the Hackathon, we have improved our coding skills, teamworking, database management, GUI development and many other skills which we will be also able to use in our future projects and careers.</p>\n<h2>What's next for ICRS Checkout</h2>\n<p>Because we have concentrated on a specific range of useful tasks for this Hackathon, we would love to be able to develop a more general system that can be used by different societies, universities and even schools; operated under the same principles but with a wider range of card identification possibilities, products and debt allowance.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag\">pigendo</span></li></ul>\n</div>\n</div>", ["", "", "", ""]], ["Auto Biometrics", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Auto Biometrics \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/113/datas/gallery.jpg\"/>\n<p>\n<i>GUI</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>To expand the scope of automotive biometrics.</p>\n<h2>What it does</h2>\n<p>Our project aims to increase the scope of vehicle biometrics by automatically adjusting the vehicles seat, temperature and radio when the driver scans their fingerprint to turn on their car. </p>\n<h2>How we built it</h2>\n<p>We used Synaptic's fingerprint scanning hardware to scan the user's fingerprint and compare it with authorized driver profiles stored in the system.</p>\n<h2>Challenges we ran into</h2>\n<p>Accurate fingerprint recognition</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We didn't use a finger recognition API or library.</p>\n<h2>What we learned</h2>\n<p>We learned about high resolution capacitive sensing and fingerprint recognition algorithms </p>\n<h2>What's next for Auto Biometrics</h2>\n<p>Update the GUI and interface with actual vehicles</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/jbeck3/autobiometrics\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/jbeck3/autobiometrics\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Webb", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Webb \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/582/datas/gallery.jpg\"/>\n<p>\n<i>A webb</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>After using d3 for a summer position, I stumbled upon a force-driven graph of nodes and edges that moved as you dragged a vertex and adjusted accordingly - I seriously wondered what sort of data could possibly be visualized this way after viewing another web-like visualization of data, I imagined the same type of graphical representation of a Facebook account. </p>\n<h2>What it does</h2>\n<p>Sign in with your Facebook account and Webb will load your recent pictures and posts, adding them as nodes connected to \"me\" on a force-driven graph. Users who engage with you posts (likes, comments, tags) are also added to the graph, connected to each respective piece of media with which they engaged. This gives a completely new view of your social interactions, and using the force-driven graph, you can tug on nodes and see which ones are most connected to you and your social web.</p>\n<h2>How we built it</h2>\n<p>Facebook API, node.js, and d3.js</p>\n<h2>Challenges we ran into</h2>\n<p>Facebook API permissions, converting raw Facebook data to a valid set of vertices and edges </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Creating a fluid and interestingly unique design</p>\n<h2>What we learned</h2>\n<p>Principles of d3.js and the Facebook API</p>\n<h2>What's next for Webb</h2>\n<p>More filtering options and better graphical visualizations of nodes</p>\n<h2>NOTE</h2>\n<p>The navigating to the heroku link (<a href=\"https://sheltered-reef-39168.herokuapp.com\" rel=\"nofollow\">https://sheltered-reef-39168.herokuapp.com</a>) currently only works for Facebook profiles added as testers for Webb - retrieving some permissions requires approval that we didn't have time for during HackMIT, but are applying to after.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/facebook\">facebook</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/d3-js\">d3.js</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/smthd997/hack\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/smthd997/hack\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://sheltered-reef-39168.herokuapp.com\" rel=\"nofollow\" target=\"_blank\" title=\"https://sheltered-reef-39168.herokuapp.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>sheltered-reef-39168.herokuapp.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on exchange of data between the Facebook API and d3 graphing library. I also worked on the presentation of data when inspecting vertices.", "", ""]], ["FlyOut - Go Prepared", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>As people who travel often, either for leisure or for business, planning a trip each time is a hassle. Finding flights, finding places to visit, and knowing the weather condition there requires efforts of research (For example, I forgot to bring warmer clothes to Boston). We put these elements together to create FlyOut, a webapp that finds you the cheapest flight, local attractions, and weather tips.</p>\n<h2>What it does</h2>\n<p>FlyOut is a webapp that finds you the cheapest flight, local attractions, and weather tips.</p>\n<h2>How we built it</h2>\n<p>The entire platform's frontend is built on HTML, CSS, and Bootstrap. Backend was built using javascript and jquery. Amadeus API was utilized.</p>\n<h2>Challenges we ran into</h2>\n<p>Coming up with an idea was the hardest part. Coming into the hackathon not knowing what to build, we thought of how much travel has been part of our lives. We travel to go to hackathons, go meet friends, for work, and to have fun. We wanted to make planning for these a bit easier for our users.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We're proud that we were able to finish brainstorming and building a product that works within 24 hours. This is my first 24 hour hackathon and it was definitely a challenge to do everything that we wanted to do.</p>\n<h2>What we learned</h2>\n<p>We learned that it's really hard to think of new ideas that relate to travel. </p>\n<h2>What's next for FlyOut - Go Prepared</h2>\n<p>We are hoping to incorporate more APIs to optimize our users' travel experiences. We hope to incorporate facebook authentication to retrieve mutual friends living in the area and grab public facebook events that are happening in the user's destination.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amadeus\">amadeus</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google--2\">google</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["FidgetWidget", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>FidgetWidget</h1>\n<p>A hardware hack designed to allow a safe, interactive stimming experience for both autistic and allistic individuals.</p>\n<p>Created at HackMIT 2016 by Kathleen Burkhardt and Jeremy Hong</p>\n<h2>What is stimming?</h2>\n<p>According to Wikipedia:</p>\n<blockquote>\n<p>Self-stimulatory behavior, also known as stimming and self-stimulation, is the repetition of physical movements, sounds, or repetitive movement of objects common in individuals with developmental disabilities, but most prevalent in people with autistic spectrum disorders. It is considered a way in which autistic people calm and stimulate themselves. Therapists view this behavior as a protective response to being overly sensitive to stimuli, with which the individual blocks less predictable environmental stimuli. Sensory processing disorder is also given as a reason by some therapists for the condition. Another theory is that stimming is a way to relieve anxiety, and other emotions.</p>\n</blockquote>\n<p>This project was built to show that stimming is a natural and calming experience.</p>\n<h2>Setup</h2>\n<p>To set up your own FidgetWidget, you will need:</p>\n<ul>\n<li>Breadboard</li>\n<li>3 buttons</li>\n<li>3 10k ohm resistors</li>\n<li>Photoresistor</li>\n<li>Potentiometer</li>\n<li>Jumper Wires</li>\n<li>Arduino Micro</li>\n<li>Raspberry Pi</li>\n<li>Raspberry Pi monitor</li>\n</ul>\n<p>See the circuit schematic for details on how to assemble the circuit.</p>\n<p>Once the circuit is assembled, run the code on the Arduino and the Raspberry Pi.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/kburk1997/FidgetWidget\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/kburk1997/FidgetWidget\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I came up with the initial idea and wrote most of the Python code. I also drew the initial schematic and did some wiring.", "I worked on and provided the hardware. Verified sensory input.\n"]], ["\"Art\"", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to play with a kinect</p>\n<h2>What it does</h2>\n<p>Plays notes on a Pentatonic Scale based on the joint moving</p>\n<h2>How we built it</h2>\n<p>Modifying the Kinect Demo</p>\n<h2>Challenges we ran into</h2>\n<p>Learning C++</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Learning C++</p>\n<h2>What we learned</h2>\n<p>C++</p>\n<h2>What's next for \"Art\"</h2>\n<p>Learning C++...  Properly, and expanding on the capabilities of merging algorithmic music generation with movement.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["Split Scan", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>SplitMe</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-cloud\">google-cloud</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/coinbase\">coinbase</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/ilyaskurikhin/ocr\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ilyaskurikhin/ocr\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Predictosaurus", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Predictosaurus \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/668/datas/gallery.jpg\"/>\n<p>\n<i>Predicted Ratings</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Predictosaurus \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/669/datas/gallery.jpg\"/>\n<p>\n<i>Predicted Ratings</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Predictosaurus \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/670/datas/gallery.jpg\"/>\n<p>\n<i>Submit Ratings</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Predictosaurus \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/671/datas/gallery.jpg\"/>\n<p>\n<i>Login Page</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>As clueless college freshmen navigating the labyrinth of classes with cryptic names and descriptions, we felt that it would be extremely helpful to know which classes we would like before taking them. MIT and Harvard both already maintain a course evaluations database, but they only provide generic information describing the central characteristics of the student population, whereas students' perceptions of these classes vary wildly based on a number of intrinsic factors.</p>\n<h2>What it does</h2>\n<p>The program learns the preferences and abilities of each student while simultaneously learning how these characteristics affect how students perceive the classes they are taking. It predicts how students would rate classes before they take them and can be used as a guide for selecting interesting classes while balancing the weekly workload.</p>\n<h2>How we built it</h2>\n<p>The backend is a Python TCP server that uses collaborative filtering to learn both students' characteristics and the function mapping characteristics to predict ratings. It differentiates the matrix expression describing this relation and performs gradient descent to minimize the mean squared error between the predicted ratings and the sparse set of known ratings provided by student responses.</p>\n<p>The front end is a static HTML website. It uses Javascript's WebSocket API to connect to websocketd, which opens a netcat process to route packets to the TCP port that the Python backend is listening on. </p>\n<h2>What's next for Predictosaurus</h2>\n<p>The next step would be to obtain public hosting for the Python backend so that Predictosaurus would be accessible to the wider MIT and Harvard community. As a machine learning application, it becomes more effective and generates more accurate results as more students submit their ratings to the database, so it is important that it is adopted by as many students as possible.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/numpy\">numpy</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-chart\">google-chart</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/websockets\">websockets</a></span></li><li><span class=\"cp-tag\">netcat</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/machine-learning\">machine-learning</a></span></li><li><span class=\"cp-tag\">collaborative-filtering</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://github.com/predictosaurus/predictosaurus.github.io\" rel=\"nofollow\" target=\"_blank\" title=\"http://github.com/predictosaurus/predictosaurus.github.io\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"http://predictosaurus.github.io\" rel=\"nofollow\" target=\"_blank\" title=\"http://predictosaurus.github.io\">\n<i class=\"ss-icon ss-link\"></i>\n<span>predictosaurus.github.io</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["helloWorld", "", "", ""]], ["Muse-ic", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>What it does</h2>\n<p>It generates piano music that is learned from popular EDM music.</p>\n<h2>How we built it</h2>\n<p>We used python to pre-process the data to turn it into a feature vector of frequencies and amplitudes.</p>\n<h2>Challenges we ran into</h2>\n<p>Assembling the music back after we stripped it to its basics.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We successfully converted many tracks into a midi-like format, so we have a larger database\nto train music from.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/numpy\">numpy</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/scipy\">scipy</a></span></li><li><span class=\"cp-tag\">dl4j</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag\">beaker</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/AlternativeHeroes/muse-ic\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/AlternativeHeroes/muse-ic\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["AutoCensor", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"AutoCensor \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/410/816/datas/gallery.jpg\"/>\n<p>\n<i>Guess where the cuss word is!</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Real-time news reporting is almost here\u2014if only there was real-time censoring technology.</p>\n<h2>What it does</h2>\n<p>Feed in an audio file with cuss words, outputs the audio file with the cuss words silenced, in real time.</p>\n<h2>How we built it</h2>\n<p>In Java, we translated speech to text using IBM Watson's Speech-To-Text function, then silenced the parts of the audio corresponding to the blacklisted word.</p>\n<h2>Challenges we ran into</h2>\n<p>Stereo audio doesn't work with the audio reader/writer.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We worked with things that we weren't familiar with (IBM Watson), and this is the first software hack for one of our members.</p>\n<h2>What we learned</h2>\n<p>We learned how to work with Git, Maven, HTTP, IBM Watson, audio processing.</p>\n<h2>What's next for AutoCensor</h2>\n<p>We are trying to auto-censor songs, and allow compatibility with other audio formats and even video.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ibm-watson\">ibm-watson</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bluemix\">bluemix</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/maven\">maven</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/AndrewWang996/AutoCensor\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/AndrewWang996/AutoCensor\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["We contributed equally to this project.", ""]], ["STEMLabs", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/ry168b5lpA4?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n</ul> </div>\n<div>\n<h2>Top 10 at HackMIT :)</h2>\n<h2>Inspiration</h2>\n<p>All of us have struggled, to some degree, with first-and-second year STEM courses in university. We were frustrated by the lack of tools and support out there to help university students visualize and understand complex topics such as search algorithms, multivariable calculus, and physics. So we thought it'd be cool to see how we could hack that problem using Microsoft HoloLens.</p>\n<h2>What it does</h2>\n<p>The user can use Microsoft HoloLens gesture controls to select his/her desired tutorials and then could see a visualization of difficult concepts. We are currently starting out with the visualization of DFS algorithm.</p>\n<h2>How we built it</h2>\n<p>We built it in Unity &amp; Visual Studio.</p>\n<h2>Challenges I ran into</h2>\n<p>Three people on our team have no prior experience working with HoloLens or Unity. The other teammate also only has limited knowledge in Unity. We essentially all started from point zero and tried to learn how to make a working HoloLens App demo within a weekend.</p>\n<h2>Accomplishments that we are proud of</h2>\n<p>We are quite proud of our learning curve &amp; progress. We did our best to learn and code as much as we can.</p>\n<h2>What we learned</h2>\n<p>Unity &amp; HoloLens basics.</p>\n<h2>What's next for StemLabs</h2>\n<p>Interactivity and an overall immersive experience are the two main pillars the idea took off with, and we are definitely planning to work on this app in the future to improve these two aspects. We also want to enable OCR so that the user could view 3D graphs by simply highlighting an area that he/she does not understand. More things to come include voice commands and NLP algorithms to make the app smarter. We are all really excited to explore the possibilities of how AR could change the way we learn, and we are planning to continue diving deeper into AR dev after this hackathon.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/glsl\">glsl</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/microsoft-hololens\">microsoft-hololens</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/kkulkarni1997/StemLabs\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/kkulkarni1997/StemLabs\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Just Write", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Just Write \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/410/788/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Just Write \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/410/789/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>Fight writer's block with motivation from your favorite internet friends. Every 200 characters, a new image of a baby animal (parsed from Google images) will appear across your screen.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/angular-js\">angular.js</a></span></li></ul>\n</div>\n</div>", [""]], ["Remember The Cat", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>The game Simon was the inspiration.</p>\n<h2>What it does</h2>\n<p>You memorize a sequence all at once and recreate it with cats.</p>\n<h2>How we built it</h2>\n<p>MIT App Inventor</p>\n<h2>Challenges we ran into</h2>\n<p>Making a delay function work.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Finishing a project!</p>\n<h2>What's next for Remember The Cat</h2>\n<p>Scrolling trhougih different memes when you press the reset button.</p>\n<p>Link:\nai2.appinventor.mit.edu/?galleryId=4677154439954432</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mit-app-inventor\">mit-app-inventor</a></span></li></ul>\n</div>\n</div>", [""]], ["Political Personality Quiz", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Political Personality Quiz \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/658/datas/gallery.jpg\"/>\n<p>\n<i>Start Screen (Pusheen!!!)</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Political Personality Quiz \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/667/datas/gallery.jpg\"/>\n<p>\n<i>Sample Question Page (NYC vs Chicago)</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p><a href=\"http://moralmachine.mit.edu\" rel=\"nofollow\">Moral Machine</a>, MIT's online self-driving car moral choice quiz, inspired us to make our own version to predict one's personality based off presidential data.</p>\n<h2>What it does</h2>\n<p>Based on certain data scraped from Wikipedia and other sources about the upcoming election, we chose certain traits randomly to learn about the user's personality. We aggregate the submission data and compare your responses to the average of other test takers, which will tell you at the end which candidate you actually align with based off non-political questions.</p>\n<h2>How we built it</h2>\n<p>We wrote a simple but interesting web app using HTML/CSS and Javascript, and hosted it on Heroku.</p>\n<h2>What we learned</h2>\n<p>Plenty of interesting facts about our upcoming presidential candidates!</p>\n<h2>What's next for Personality Quiz</h2>\n<p>We can use this data to predict how people can influence certain swing states, and were also interested in using <a href=\"http://beakernotebook.com\" rel=\"nofollow\">Beaker</a> to further provide a cleaner and deeper analysis. Going even further, we could possibly interface this web app with the Muse headband to track brain data for each of the questions and compare between users as well as use machine learning to learn from the aggregated user data and attempt to predict what one would choose for each question.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag\">html/css</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/heroku\">heroku</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://hackmit-personality-quiz.herokuapp.com/index.html\" rel=\"nofollow\" target=\"_blank\" title=\"https://hackmit-personality-quiz.herokuapp.com/index.html\">\n<i class=\"ss-icon ss-link\"></i>\n<span>hackmit-personality-quiz.herokuapp.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Scraped online data for questions and worked on front-end.", "", ""]], ["Analytics for Cities", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Analytics for Cities</h2>\n<p>See notebook here: \n<a href=\"https://gist.github.com/rasmi/83347a5e245bb326bc959ed94cfc22e5\" rel=\"nofollow\">https://gist.github.com/rasmi/83347a5e245bb326bc959ed94cfc22e5</a></p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/pandas\">pandas</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/scikit-learn\">scikit-learn</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://gist.github.com/rasmi/83347a5e245bb326bc959ed94cfc22e5\" rel=\"nofollow\" target=\"_blank\" title=\"https://gist.github.com/rasmi/83347a5e245bb326bc959ed94cfc22e5\">\n<i class=\"ss-icon ss-link\"></i>\n<span>gist.github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["U SUCC", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"U SUCC \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/410/676/datas/gallery.jpg\"/>\n<p>\n<i>succ</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Many people think succulents are cute and harmless. There's even a whole game you can play devoted to therapeutically taking care of them.</p>\n<p>This succulent is different though.</p>\n<h2>What it does</h2>\n<p>U succ generates a mean plant-related insult at you when you click on the succulent. </p>\n<h2>How I built it</h2>\n<p>HTML, CSS, JavaScript/jQuery, shake.js for animation. Photoshop for asset illustration.</p>\n<h2>Challenges I ran into</h2>\n<p>Uh, i think it breaks if you click really fast. Something something javascript event timing. Whatever.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I think I conveyed the emotionality of the anger well, through color, and animation.</p>\n<h2>What I learned</h2>\n<p>Not all technology is Good\u2122. I'm no hero.</p>\n<h2>What's next for U SUCC</h2>\n<p>Maybe a real, dynamic app that's social! Grow ur own succulent and send insults to your friends!! Gain social capital by putting others down!!! Quite a representation of the real world.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag\">shake.js</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/photoshop\">photoshop</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://www.jackieliu.me/usucc\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.jackieliu.me/usucc\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.jackieliu.me</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["CakeBoxBot", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/srVgfjNybK0?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"CakeBoxBot \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/410/668/datas/gallery.jpg\"/>\n<p>\n<i>Start of convo</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"CakeBoxBot \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/410/667/datas/gallery.jpg\"/>\n<p>\n<i>End of convo</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration &amp; Instructions</h2>\n<p>Is it your birthday? Is it your 2 years anniversary today? YOU need a cake! But how? CakeBox is here for you. Sit tight and message facebook.com/cakeboxbot with \"I want a cake for [name]\", type your address, then choose the cake you want, and confirm with \"ok\" (or exit the chat and make CakeBoxBot sad). Once your order is confirmed, Postmates (and Pusheen maybe) will deliver the cake to you from the closest bakery to your location. All transactions are done in cash. NOTE THAT YOU HAVE TO AUTHORIZE THE CAKEBOX APP BEFORE YOU CAN SEND IT MESSAGES.</p>\n<h2>What it does</h2>\n<p>CakeBoxBot is a Messenger bot that will order you a cake on-demand instantly by calling the Postmates API on our own server (with the encouragement of Pusheen and xkcd).</p>\n<h2>How we built it</h2>\n<p>We wanted to experiment with messaging bots since they are a popular emerging technology. We built CakeBoxBot with node.js, hosted it on heroku, and we picked Facebook as our bot platform.</p>\n<h2>Challenges we ran into</h2>\n<p>Understanding how to connect the front and back ends of our application took the most time, but we realized that we didn't actually need to add that much to our frontend if we used Facebook Messenger, which is esPUSHEENly great!</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Cake cake cake</p>\n<h2>What we learned</h2>\n<p>Teamwork! And bots are hard! And fun! And cake!</p>\n<h2>What's next for CakeBoxBot</h2>\n<p>Cupcakes!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/heroku\">heroku</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/postmates\">postmates</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/facebook\">facebook</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://www.facebook.com/cakeboxbot/\" rel=\"nofollow\" target=\"_blank\" title=\"https://www.facebook.com/cakeboxbot/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.facebook.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Awechords-Website-", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Awechords-Website- \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/410/636/datas/gallery.jpg\"/>\n<p>\n<i>awechords website </i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>A club I've been involved in since freshman year needed to revamp their site.</p>\n<h2>What it does</h2>\n<p>New website. </p>\n<h2>How I built it</h2>\n<p>HTML/CSS, Bootstrap </p>\n<h2>Challenges/Bugs</h2>\n<p>Still in process of fixing header image cutoff, menu issues when resizing page.</p>\n<h2>What I learned</h2>\n<p>Converting Sketch/Adobe Xd prototype into a working site using Bootstrap framework. </p>\n<h2>What's next for Awechords-Website</h2>\n<p>Adding toggle function for alumni and current members.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sketch\">sketch</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/photoshop\">photoshop</a></span></li><li><span class=\"cp-tag\">adobe-xd</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/cheecheelin/Awechords-Website-\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/cheecheelin/Awechords-Website-\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["worked on design ideation in prototyping tools - front end implementation"]], [".", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<h2>What it does</h2>\n<h2>How we built it</h2>\n<h2>Challenges we ran into</h2>\n<h2>Accomplishments that we're proud of</h2>\n<h2>What we learned</h2>\n<h2>What's next for Rohbot</h2>\n</div>\n</div>", [""]], ["Did Duke Baseball Win?", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>My brother plays baseball for Duke. The website diddukewin.com shows the results of the latest Duke basketball game, but there is no such site for baseball.</p>\n<h2>What it does</h2>\n<p>It returns \"W\", \"L\", \"C\", or \"P\", depending on whether the game was won, lost, cancelled, or postponed.</p>\n<h2>What's next for Did Duke Baseball Win?</h2>\n<p>We hope to soon deploy Did Duke Baseball win on a website and host it on Heroku.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/mtziemba/did-duke-baseball-win\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/mtziemba/did-duke-baseball-win\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["FallTrack", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"FallTrack \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/410/532/datas/gallery.jpg\"/>\n<p>\n<i>FallTrack</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>About one third of the elder population over the age of 65 falls each year, and the risk of falls increases proportionately with age. But these statistics fall short of the actual numbers since many incidents are unreported by seniors and unrecognized by their caregivers. Falls are the leading cause of death due to injury among the elderly. 87% of all fractures in the elderly are due to falls. Falls account for 25% of all hospital admissions, and 40% of all nursing home admissions 40% of those admitted do not return to independent living; 25% die within a year. </p>\n<p>FallTrack helps to solve this problem and take a better care of your elderly loved ones.</p>\n<h2>What it does</h2>\n<p>FallTrack accurately detects when the person falls using accelerometer. Its algorithm helps to distinguish falls from other physically similar activities. </p>\n<h2>How we built it</h2>\n<p>We built it using Arduino and iOS app. </p>\n<h2>Challenges we ran into</h2>\n<p>We had problems with the microcontroller and had to fix false positives. Due to lack of some equipments, we had to improvise with what was available at the time. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are proud of building a fully functioning wearable from the scratch. </p>\n<h2>What we learned</h2>\n<p>We learned to debug the hardware and utilize available resources.</p>\n<h2>What's next for FallTrack</h2>\n<p>We hope FallTrack can help to reduce the fall rate among elderly population in the future.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/accelerometer\">accelerometer</a></span></li><li><span class=\"cp-tag\">buzzer</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/di-y/FallTrack\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/di-y/FallTrack\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]]]