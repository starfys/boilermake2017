[["Ashera", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Ashera \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/712/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>The access we have to seemingly limitless resources in Canada is not a reality in many developing nations. Resources are often more scarce, or with good access, more expensive.  With the prevalence of simple text phones in East Africa, healthcare and medicine have already progressed into integrating SMS to create medical records. It was about time that agriculture followed suite.</p>\n<h2>What it does</h2>\n<p>Ashera is an SMS-based resource monitoring system for farmers. With the use of a small device implanted in your farmland, the vitals of your field are regularly monitored and sent to your mobile number in the form of a text message. Weather changes, including the probability of precipitation, humidity, and temperature are also available with the sensor data, allowing the best timing on planting, watering, fertilizing, and even harvesting. </p>\n<h2>How we built it</h2>\n<p>A single Arduino microprocessor is currently used with a variety of sensors to track the measurements of the health of the soil. Ideally, this arduino has a WiFi (or Ethernet) shield to send the data to the server. A second server gets the information from the data-containing server, and sends the appropriate data from the sensors as well as from a weather API, Dark Sky, to the client via SMS with Twilio. </p>\n<h2>Challenges we ran into</h2>\n<p>Without access to an Ethernet or WiFi shield for the Arduino, we had to create our prototype with a serial connection to a laptop, which in turn posts the sensor information as JSON data to the server. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Our modular design allows us to expand into different areas with the same API. This is vital for taking the project forward and required consistent planning and regular updates to our plan as we troubleshooted.</p>\n<h2>What we learned</h2>\n<p>The Twilio API was a new endeavor for all members. Combining the use of two servers (and a third server to test other aspects), with one each utilizing a different API, was also a new feat for the members of this group, and learning the setup processing was incredibly useful for future projects.</p>\n<h2>What's next for Ashera</h2>\n<p>Combining the use of multiple microprocessors with a single hub would be a more ideal implementation in the future for larger fields. If we were to make this into an actual product, partnering with a telecommunication company to bring this service to more users with either a discounted or advertisment based system. </p>\n<p>Check us out at <a href=\"http://www.ashera.org\" rel=\"nofollow\">www.ashera.org</a></p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/django\">django</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/processing\">processing</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag\">grove</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag\">rest</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/cardy31/Ashera \" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/cardy31/Ashera \">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/HLGreer/Ashera\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/HLGreer/Ashera\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Arduino design and implementation, sensor data processing and submission to the web server.", "Integrated the twilio API to interface with the SMS messaging as well as minor design.", "Built a Python API with Django and deployed it to a Linux server. Also designed the info site."]], ["Farm Radar", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/g7ISLOH50tU?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Farm Radar \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/963/datas/gallery.jpg\"/>\n<p>\n<i>Algorithms Overview</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Farm Radar \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/313/datas/gallery.jpg\"/>\n<p>\n<i>the online dashboard </i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Farm Radar \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/443/datas/gallery.jpg\"/>\n<p>\n<i>the control box (notice the pin on the side, it is designed like this for modular connection)</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration &amp; What it does?</h2>\n<p>This project is created during Major League Hacking (MLH) <a href=\"http://2016.echacks.xyz/\" rel=\"nofollow\">Electric City Hacks 2016</a>.\nWe received the <strong>3rd place</strong> by Major League Hacking, and the <strong>SAP innovation award</strong>.</p>\n<p>The inspiration for this project started after reading about big data in Agri-tech and the use of drones in the farm management system. Researchers are trying to use drones to find out the quality of their crops on a large scale via imaging. What if by using modular ground level sensors we could also easily assess the quality of the farmland at the current time and also be able to monitor long and short term trends? This will also allow us to cross check with drone imaging and all together create a big data warehouse which could give a lot of information to users. </p>\n<p>The problem is sensors/server are expensive, are hard to setup for non-technical people and the interfaces are user friendly. As a farmer, I want to have access to my farms current state from wherever I am in the world and if I ever decide to expand my farm, I should be able to connect more sensors easily. Farm yard does just that. Our dashboard allows you to look into the state of your farm in one glance and look for any potential hazards. It is connected into a distributed server in such a way that, adding a new sensor is as easy as plugging one wire. </p>\n<h2>How we built it</h2>\n<h3>Hardware</h3>\n<p>The hardware system is designed to be modular and portable.\nThe central part of the system is a box with 8 separate input ports, along with the microcontroller (ATmega2560) inside.\nThere is also a Nest Camera on the top of the box, mounted on a motor.\nThe box is designed to be modular and can recognize incoming sensor with set-ups from the dashboard.\nThe box is open to most of the digital and analog sensors. (ex. soil-Moisture, light, fire, water level, heat-motion, temperature, humidity, etc.).\n<img alt=\"Alt text\" data-canonical-url=\"https://simonguozirui.github.io/img/circuits.png\" src=\"https://res.cloudinary.com/devpost/image/fetch/s---L4-Sz7S--/https://simonguozirui.github.io/img/circuits.png\"/></p>\n<h3>Dashboard</h3>\n<p>The software system is based on Sinatra, the reason we used Sinatra over Ruby on Rails is because Sinatra is very lightweight. Using Sinatra, we would do a GET request to a server to get a JSON file, which is then parsed by the controllers to separate data out from 8 different sensors that are fed in at the same time using a serial port on our micro-processor. This data is then connected to a dashing framework which is based on jQuery, Bootstrap, HTML5 and SCSS front end in real time. We run a multi-threaded program within the controller which does a periodic polling every 1s and gets new data.</p>\n<h3>Overall Algorithms</h3>\n<p><img alt=\"Alt text\" data-canonical-url=\"https://simonguozirui.github.io/img/projects/Algorithm%20farm%20radar.png\" src=\"https://res.cloudinary.com/devpost/image/fetch/s--PX6wjZ3o--/https://simonguozirui.github.io/img/projects/Algorithm%2520farm%2520radar.png\"/></p>\n<h3>Communication between hardware and server</h3>\n<p>USB (Serial) communication is used between hardware and server.\nWe choose Serial among others(ex. ZigBee, Wifi, etc) because it is the most stable and easy to set up for our product's environment.\n<img alt=\"Alt text\" data-canonical-url=\"https://simonguozirui.github.io/img/projects/Serial%20Communication.png\" src=\"https://res.cloudinary.com/devpost/image/fetch/s--7052KJ4w--/https://simonguozirui.github.io/img/projects/Serial%2520Communication.png\"/></p>\n<h2>Project Management</h2>\n<p>For our project we decided that we need one dedicated person to guide us through the project as multi-tasking is the enemy of greatness. </p>\n<p><strong>The Project Management Model:</strong> \nWe used an Iterative &amp; Interactive <em>Agile Development Model</em>. \n<img alt=\"Alt text\" data-canonical-url=\"https://simonguozirui.github.io/img/projects/Trello%20Board.png\" src=\"https://res.cloudinary.com/devpost/image/fetch/s--vzSpmfHn--/https://simonguozirui.github.io/img/projects/Trello%2520Board.png\"/></p>\n<p><strong>Versions (Milestones):</strong>\n<em>FarmRadar Hardware (Mohammed Ridwanul &amp; Simon Zirui Guo):</em>\n<em>Version 0</em> (Minimum Viable Product): One sensor\u2019s data is captured onto a micro-processor.\n<em>Version 1</em>: One sensor\u2019s data is captured onto a micro-processor and fed into a computer via a streaming server.\n<em>Version 1.1</em>: 3 sensor\u2019s data is captured onto a micro-processor and fed into a computer via a streaming server. \n<em>Version 2</em>: 8 sensor\u2019s data is captured onto a micro-processor and fed into a computer via a streaming server.</p>\n<p><em>FarmRadar Software (Joshua Arts &amp; Jason Cheung):</em>\n<em>Version 0</em>: Sample sensor data is parsed and displayed onto an HTML5 page dynamically. \n<em>Version 1</em>: Sinatra framework is setup and data displays on erb template accurately.\n<em>Version 3</em>: Front end development is completed, data is visualized.\n<em>Version 4</em>: Interface is made to connect front end to actual server data from sensors.</p>\n<p>The software and hardware is worked on in parallel and independently because they are only dependent on a client-server relationship. </p>\n<p>We used Tello to keep care of organizing tasks. </p>\n<h2>Challenges we ran into</h2>\n<h3>Hardware wise:</h3>\n<p>Tested several kinds of wireless communication, and tries to create .json file for server.\nCreating a server and having a real time changes of data in python is surprisingly difficult. We were introduced to various concepts in CGI etc. But it's capabilities of a built in wifi made it attractive.\nWe decided to adopt an Arduino instead because of our familiarity with C and the platform. </p>\n<h3>Software wise:</h3>\n<p>The most problems we faced were in software actually. The fact that we settled on a Sinatra app without much knowledge of it seemed difficult. Sinatra connect models, views and controllers in a very \"magical\" way that took a lot of exposure to get used to.</p>\n<h3>Web wise:</h3>\n<p>N/A</p>\n<h3>Nest Camera (livesteam)</h3>\n<p>We got the camera connection with the computer, but there is huge delay between frames due to the poor wifi environment. We decided to abandon it to improve user experience, but for future development, we will try to get this feature working.</p>\n<h2>Accomplishments that we're proud of</h2>\n<ul>\n<li>Our system has been generating interests in the community. Professor Omar Alam, wants to use the data we receive cross-check them with drone images to assess the health of crops. He is now in talks with the Ministry of Environment in Peterborough to see how they can use a more complete version of our system.</li>\n<li>Our system is fully modular and portable. </li>\n<li>Our system gives the user rapid feedback and warns them of any potential hazards.</li>\n<li>Our system solves a real world problem. </li>\n<li>We can build upon our system, to do Big Data Analysis, to find out when is the best time for different crops and how environment conditions effect crops.</li>\n<li>Some of us were brought up in a farm and it feels good to contribute via technology.</li>\n</ul>\n<h2>What we learned</h2>\n<ul>\n<li>Sinatra, ruby on rails, hardware hacking, building  server, parsing data, taking care of edge cases, project management, big data strategy, python, raspberry pi 3, Arduino, sensor calibration. </li>\n</ul>\n<h2>What's next for Farm Radar</h2>\n<p>We plan to continue to pursue this project in the open source space as we feel this can help the environment and help us grow better crops!\nWe plan to use more I2C pins in order to connect more sensors, and also auto-recognize the input sensor.\n<img alt=\"Alt text\" data-canonical-url=\"https://simonguozirui.github.io/img/thankyou.png\" src=\"https://res.cloudinary.com/devpost/image/fetch/s--8UN7tvEq--/https://simonguozirui.github.io/img/thankyou.png\"/></p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ruby-on-rails\">ruby-on-rails</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sinatra\">sinatra</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/dark-sky\">dark-sky</a></span></li><li><span class=\"cp-tag\">google-maps-geocoding</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/love\">love</a></span></li><li><span class=\"cp-tag\">nest-camera</span></li><li><span class=\"cp-tag\">internet-of-things</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/kkjasoncheung/farmradar-final\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/kkjasoncheung/farmradar-final\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the hardware testing and connection, and generates string data for the web server. I also designed the logo.", "I worked on both front and some back-end aspects of Farm Radar. My contributions include using Dashing in Sinatra to implement an easy to use and modern UI, while delivering critical information at glance. In addition, I used the dark sky API and Google's geocoding API to implement core location services features in Farm Radar.\n ", "I worked with Jason to build a clean and sleek front-end using dashing, integrate the dark sky API, and develop a versatile backend in Sinatra. I also helped with the transmission and interpretation of the sensor data.", "I worked on the backend of the web software and I worked on creating the project in raspberry pi 3 for redundancy reasons and to try out which mircoprocessor works best including the circuit wiring. I also worked on interfacing the hardware to the software and interpretation of the sensor data."]], ["Sandwich-o-matic", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/F9EkMRwM4CI?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Sandwich-o-matic \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/741/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Sandwich-o-matic \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/909/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Sandwich-o-matic \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/908/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Why waste time making food, when you can just get something else to cook for you? Sandwich-o-matic originated from an idea of a toaster that butters your toast for you. We explored the idea, and took it a step further by building a voice controlled sandwich maker. </p>\n<h2>What it does</h2>\n<p>Sandwich-o-matic is a fully automated, voice controlled sandwich making machine. Simply tap the \"begin recording\" button on the site, and tell the machine your order (for example, \"please make me a sandwich with pepper and sausage\"). The machine will construct the sandwich from scratch, right before your eyes!!</p>\n<h2>How we built it</h2>\n<p>Sandwich-o-matic was an ambitious idea for a thirty-six hour hackathon. We spent a lot of time planning the design for functionality (e.g. the spinning disks under each topping chamber), and even more time building the parts. We used Servos for all of the moving parts except for the DC motor that pulls the toaster sideways, all of which are controlled by the combination of a  Photon and an Arduino. The back-end is node, hosted on AWS. We used the Google Cloud Platform for voice to text features.</p>\n<h2>Challenges we ran into</h2>\n<p>Every step forward brought us to a new challenge of all sorts. From having to rethink our dispensing design to having to deal with I2C, we had to face a lot of new challenges. What really helped us to get through these challenges was working together as a team to brainstorm solutions, and asking our teammates/other hackers for help.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Oh man, where do we start?! First off, the thing actually works. Like, it actually makes sandwiches if you have ingredients in the topping compartments. Secondly, we managed to get things done ahead of what we thought we could. Ultimately, we're proud of how well we worked together as a team and how much fun we had while making the Sandwich-o-matic.</p>\n<h2>What we learned</h2>\n<p>Hardware is annoying but rewarding, Photon is extremely overpowered, APIs are hard (looking at you, Google), and how to cut lots and lots of sheet metal.</p>\n<h2>What's next for Sandwich-o-matic</h2>\n<p>More sandwiches! We would love to incorporate more features into the Sandwich-o-matic. We think that having more topping options and more condiments would allow users to really enjoy being able to make sandwiches without having to do more than ask for one. We will definitely try to continue building on this idea in the future.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-cloud\">google-cloud</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c\">c</a></span></li><li><span class=\"cp-tag\">photon</span></li><li><span class=\"cp-tag\">toaster</span></li><li><span class=\"cp-tag\">sandwiches</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/love\">love</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/toastify\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/toastify\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"http://sandwichomatic.com/\" rel=\"nofollow\" target=\"_blank\" title=\"http://sandwichomatic.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>sandwichomatic.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Worked with Colin on the designing and physical build of the project. ", "I was responsible for the embedded software of the machine. I worked with the Photon and Arduino in order to process the requests, control all of the servos, and make everything run smoothly.", "I was responsible for the NodeJS web server, which forwards NFC and voice recognition sandwich requests to the Photon API, streams data to and from several APIs to achieve voice recognition, and contains helpful tools for testing and debugging the overall flow of information.", "Worked on the major hardware components of the project.  I designed/constructed the ingredient dispenser and many other mechanisms of the build."]], ["Cubes VR", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We were originally inspired by trying to see how many objects would fit inside of containers. </p>\n<h2>What it does</h2>\n<p>Cubes VR lets you create and play with blocks, it feels like building with real blocks. You can stack blocks, make wall shapes, knock down your towers and see the blocks scatter. It's really cool to see.</p>\n<h2>How we built it</h2>\n<p>We used the graphics engine Unreal Engine to make it. </p>\n<h2>Challenges we ran into</h2>\n<p>It was really hard to get started. None of us have worked with VR before, or even used Unreal Engine! That said, we were able to keep our chins up and work through it; it was a fantastic experience and we're very excited to continue working with virtual reality.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>It was difficult to get creating the blocks working. It required several iterations to get them to spawn properly in hand. The other we're really pleased with it how genuinely fun the program turned out to be. We were a little skeptical at first but when we started playing with it we found it was a really cool experience.</p>\n<h2>What we learned</h2>\n<p>We learned a ton! It was two of our member's first hackathon, and it was the other member's second so there was a lot of new stuff for all of us to experience. We learned a lot about planning in the session on friday night, using an incremental plan. </p>\n<h2>What's next for Cubes VR</h2>\n<p>We next want to add more traditional block shapes like rectangles and archways.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unreal-engine\">unreal-engine</a></span></li></ul>\n</div>\n</div>", ["", "", "", ""]], ["Sign Language Translator ", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/UfkHKa8V91A?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Our team wished to create a product that would not only incorporate innovative technology but also find a way to improve society. Through brainstorming, we realized that an overlooked issue in society is clear communication. This lead to discussing the community of signers and how it must be difficult to integrate into a society of fluent english speakers. Over 70 million people in the world use sign language as their first language. Our application, Sign Language Translator, allows users to communicate with others easier and helps to alleviate disadvantages in society. </p>\n<h2>What it does</h2>\n<p>This application translates American Sign Language (ASL) into text and speech in order to make communication more effective. </p>\n<h2>How we built it</h2>\n<p>The motion sensory data is gathered and interpreted using a Leap Motion and the first-party software, Orion. The code is written in Python 2.7. Google Text To Speech software was used to deliver text to speech, and VLC was used to play the .mp3 audio files. The words that are a part of the vocabulary are each individually processed to be recognised after very specific gestures. </p>\n<h2>Challenges we ran into</h2>\n<p>At the beginning, learning to interface with the Leap Motion hardware was tedious and time consuming, as no group members had any prior experience with it. However, the greatest challenges involved the implementations of the input actions that are involved in sign language. The SDK only provided us basic sensory tools, requiring us to write very detailed code to accurately perceive every gesture. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>The biggest accomplishment was being able to identify various signs and translate a user's actions. This was due to the difficulty of just detecting and tracking what movements the user was doing. </p>\n<h2>What we learned</h2>\n<p>Throughout this weekend, our team gained a strong foundation for reading information from a 3D interface. By applying our previous linear algebra knowledge, we were able to successfully break down specific actions and translate these gestures into understable code. In addition, we were able to further our python language experience while learning how to use Leap Motion's Orion software. Lastly, we also learned the importance of debugging and testing our code in order to improve efficiency and accuracy. </p>\n<h2>What's next for Sign Language Translator</h2>\n<p>Sign Language Translator is built for scalability. The code itself was written with reusability and modularity as top priorities. The next step for SLT is an expansion of its vocabulary base in order to better encompass the needs of American Sign Language (ASL) signers. In addition, a friendly user interface that is both simplistic and pragmatic will allow SLT to be accessible to the average user. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/leap-motion\">leap-motion</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">google-tts</span></li><li><span class=\"cp-tag\">vlc</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/9at8/LeapSign\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/9at8/LeapSign\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Coded words (both static and gestures), did linear algebra, found solutions to limitations in hardware, optimized code for performance, thoroughly tested and bug fixed every word (my arms are still sore), demoed the project (that's me in the video!), learned a lot of sign language, and had a ton of fun :)", "I created a few gestures for the words, implemented TTS, learnt sign language, worked with linear algebra, merged/maintained the code and finally presented it to the judges along with my teammates!", "I worked on a bunch of the gesture detection functions of the project, helped in debugging the finished code and worked with high efficiency with 100% uptime and zero sleep. ", ""]], ["CAD Soup", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>CAD Soup helps you collaborate</p>\n<h2>What it does</h2>\n<h2>How we built it</h2>\n<h2>Challenges we ran into</h2>\n<h2>Accomplishments that we're proud of</h2>\n<h2>What we learned</h2>\n<h2>What's next for CAD Soup</h2>\n</div>\n</div>", ["", ""]], ["Vert", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Vert \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/437/100/datas/gallery.jpg\"/>\n<p>\n<i>Team pose!</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Vert \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/850/datas/gallery.jpg\"/>\n<p>\n<i>Final Stretch</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Vert \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/848/datas/gallery.jpg\"/>\n<p>\n<i>At work</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Vert \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/847/datas/gallery.jpg\"/>\n<p>\n<i>Playing around with VR</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>From the opening ceremony of this hackathon, it was made apparent that Trent had a mature waste disposal system set in place. Ryan Swift from MLA alluded to his surprise of how behind Toronto and several States were behind on this aspect. Therefore, we knew we could better instruct the North American society based off of Trent's examples.</p>\n<p>We created a virtual reality (VR) simulation using the Oculus Rift which immerses the user in a peaceful, but littered park with a variety of waste groups. The goal of this VR simulation is to place the litter into the designated disposal bin in an effort to better make aware of the recycling protocols and therefore reducing the carbon footprint on the environment in a fun interactive way. When an item is placed in the correct container, a point is rewarded to the user as incentive while cleaning up the virtual park.</p>\n<p>We used the Unity game engine for creating most of the simulations's environment as well as textures. Several C# Scripts were necessary for defining object collisions and score tally.</p>\n<p>There were several occasions, where we hit road blocks during the development of our simulation due to a variety of technical issues such as not being able to grab 3D objects due to lack of collision, and clipping issues. All members of this team did not have strong previous experience working with the Unity Game Development Engine, the Oculus Rift, or the Leap Motion. However, we perservered and were able to overcome these challenges after working and reworking the problems, and after several search queries and scavenging of the online help forums.</p>\n<p>We were really proud of actually having been able to make the simulation work as this is the first time 3 of us have ever coded on Unity or with C#. Another accomplishment was that we were able to brainstorm effectively and scale our project appropriately to meet the demands of this hackathon. All of us were able to envision our end-goal and in the process deeply expanded our skills with Unity becoming more proficient with it.</p>\n<p>We plan to expand the simulator in terms of size allowing the user to have a better representation of the environment. Also we would like to add additional settings and brush up on the movement mechanics of the simulator as well as smoother object interaction with the leap motion controller.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/oculus\">oculus</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/leap-motion\">leap-motion</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li></ul>\n</div>\n</div>", ["My responsibility was the successful integration of the infrared leap motion controller open sdk modules in unity to interact with objects in the game engine. This included learning for the first time the Unity Game Engine and familiarizing myself with the C# syntax to create scripts to create score tracking in the user-interface and various object reactions after interactions or triggers in the simulation.", "", "", ""]], ["SwivelCam", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/hId2b-Icun0?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"SwivelCam \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/855/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"SwivelCam \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/856/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"SwivelCam \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/857/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"SwivelCam \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/858/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"SwivelCam \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/859/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>When researching ideas for our hack, we really wanted to improve some of the downfalls of todays technology. After reading about all the crimes that occur due to the inconsistency of security cameras, we knew something had to be done. </p>\n<h2>What it does</h2>\n<p>Our hack, SwivelCam, uses facial recognition technology to scan for a persons face when they are in the cameras point of view. After a face has been detected, the camera automatically adjusts itself to keep the persons face in the center of view. The camera mount is extremely versatile and allows for 360\u00b0 rotation with 180\u00b0 tilt while maintaining the cameras stunning 5-megapixel and HD 720p quality.     </p>\n<h2>How we built it</h2>\n<p>Computer vision is based off the OpenCV library with python bindings. The program continually pulls in frames from an attached or internal webcam. For each frame, the frame is processed and faces are detected. The face with the largest area (ie. the closest), is taken as the primary tracking target. As well, the software also draws on the frame before displaying it, showing guide lines for centering, as well as the area and centers of detected faces. If the center of the face is outside the middle third (x and y axis), the program sends a serial command via usb to the Arduino to correct and center the image.</p>\n<h2>Challenges we ran into</h2>\n<p>One of the major challenges we ran into was being able to move the camera based on the position of someones face in the field of view. We had difficulties integrating the servo motors with the facial recognition software to move the camera both efficiently and effectively.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>As new hackers, we are extremely proud of being able to implement a hack that integrates both hardware and software. We are proud that we were able to work with technologies we have never worked with before (such as computer vision and Arduino microcontrollers) to develop a hack that has real world applications.</p>\n<h2>What we learned</h2>\n<p>Most of us had no previous experience programming in embedded C or dealing with Arduino microcontrollers and facial recognition. Throughout the hackathon we learned a lot about collaborating as a team and working together to learn new technologies.</p>\n<h2>What's next for SwivelCam</h2>\n<p>The SwivelCam is a very dynamic product and has many real world applications. Whether its tracking a criminals face or taking the perfect selfie, the SwivelCam is a hack that all vloggers, film makers or just the average person would love to have!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c\">c</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/opencv\">opencv</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/love\">love</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/jdrnd/echacks\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/jdrnd/echacks\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Wrote the C code for the Arduino, wired the entire system and aided in the construction and configuration of the device.", "Wrote image processing, integrated the webcam and arduino into processing running on the host pc.", "Helped write C code for arduino, designed and built dual axial joint for the camera mount and helped troubleshoot the system. "]], ["AlexaBuddy", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>The inspiration for this hack came from an idea thrown in from one of our brainstorming sessions. Jack propsed a hands-free application that allows the user to retrieve posts from social media. As we're all avid reddit users, we applied this to our favorite anonymous social media site, and applied machine learning to #HackHarassement.</p>\n<h2>What it does</h2>\n<p>Using voice-control, the user can control Alexa to navigate through Reddit. The user specifies the subreddit and the number of posts to read. Alexa repeats the titles of the top posts in the subreddit, but skipping over the negative posts. Once Alexa reads all the positive posts, she asks if you want </p>\n<h2>How we built it</h2>\n<p>The app is broken down into two different major components. Our frontend is Alexa's voice interactions, written with the flask-ask framework and tested on AWS Lambda. The backend is done in Python with the Reddit API.  We then apply machine learning to determine the \"negativity\" of the post, using the Indico API. The negativity and sentiment are analyzed to label potential vectors of online harassement.</p>\n<h2>Challenges we ran into</h2>\n<p>Our original plan was a voice-controlled Facebook messenger browser. However, we learned that we didn't have enough time to familiarize ourselves with Facebook API. Twitter wasn't an option for us either, since a Twitter browser on Alexa already existed. Out of the remaining social media, we decided Reddit was the best suited for voice-control.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>One accomplishment that we're proud of is our success in integrating different APIs into one project, where data found by the Reddit API can be screened by indico API, etc.  </p>\n<h2>What we learned</h2>\n<p>None of us were very comfortable writing script in python, and this project gave us the opportunity to develop our skills in python.</p>\n<h2>What's next for AlexaBuddy</h2>\n<p>One plan that was removed (due to time constraints) was the ability for Alexa to read the top comment from each Reddit post.\nSince the idea of AlexaBuddy started with Facebook, one possible next step would be to transfer our knowledge from this project to creating a voice-controlled Messenger on Amazon Echo.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-alexa\">amazon-alexa</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag\">indico</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/reddit\">reddit</a></span></li><li><span class=\"cp-tag\">flask-ask</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/EchoAlexa/AlexaBuddy\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/EchoAlexa/AlexaBuddy\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://www.dropbox.com/s/x74l2i8a276e6qj/20161106_061507.mp4?dl=0\" rel=\"nofollow\" target=\"_blank\" title=\"https://www.dropbox.com/s/x74l2i8a276e6qj/20161106_061507.mp4?dl=0\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.dropbox.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I was mainly focused on finding out how to use indico API to screen text and determine whether or not to say it out loud.", "I set up the Reddit API with OAuth2 using a python wrapper and implemented the main functionality and logic of the Alexa Read Reddit skill using the Flask-Ask framework ", "I worked on the Alexa's responses using flask-ask, as well as Amazon's Lambda integration. ", ""]], ["Tiffin", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Tiffin \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/842/datas/gallery.jpg\"/>\n<p>\n<i>Main Page</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Tiffin \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/734/datas/gallery.jpg\"/>\n<p>\n<i>Food</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Tiffin \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/804/datas/gallery.jpg\"/>\n<p>\n<i>New Post Page</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Tiffin \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/805/datas/gallery.jpg\"/>\n<p>\n<i>About Tiffin</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Tiffin \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/806/datas/gallery.jpg\"/>\n<p>\n<i>Post Page</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Tiffin \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/807/datas/gallery.jpg\"/>\n<p>\n<i>Signup Page</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Tiffin \u2013 screenshot 7\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/808/datas/gallery.jpg\"/>\n<p>\n<i>Postings Page</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Tiffin \u2013 screenshot 8\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/809/datas/gallery.jpg\"/>\n<p>\n<i>Login Page</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>As a group we noticed that many of us who did not pack a lunch have to spend at least 10-15$ for a lunch or dinner, Therefore we made a company that allows anyone to cook and give extras to a customer who are willing to pay for a homecooked meal</p>\n<h2>What it does</h2>\n<p>We created a platform where people who are looking for homemade food and people who have extra food can meet up. We would have a system to allow for them to find each other and perform an exchange where the cook would provide food to the user and the cook would receive money for their services.</p>\n<h2>How we built it</h2>\n<p>We made the web application mainly with HTML,CSS, MySql and PHP. We also used javascript and bootstrap to create the basic animation and outline of the site.</p>\n<h2>Challenges we ran into</h2>\n<p>We had many challenges such as learning PHP and MySql as no one in our group has been exposed to backend programming making the process of logging in,updating food posting and lastly adding data to the database</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We had an amazing time making this project and completing a prototype in the given time,just that is an accomplishment.</p>\n<h2>What we learned</h2>\n<p>We learnt MySql,Php,Javascript and MariaDb</p>\n<h2>What's next for Tiffin</h2>\n<p>We are wanting to make a rating system,reputation system, Premium Service to make profit and lastly make an application for IOS and Android </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php5\">php5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mysql\">mysql</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/vidurmenezes/Tiffin\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/vidurmenezes/Tiffin\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I learned to use MySQL and went in-depth into PHP for the first time to run the back-end of the site. I usually work in Python, C++ or Java so it was definitely a great learning experience. I was able to get this far with the help of Tim. I also helped a little with the front-end, but the majority of my time went into getting the site on to a local web server and communicating with the database and creating procedurally generated HTML pages. This hackathon was a lot of fun and I learned a massive amount, I am proud of what my team has accomplished.", "Electric City Hacks is my first hackathon and prior to this experience I have only had experience with C, C++, Java, and Python, all front end programming languages. During this hackathon I was assigned to assist Sameed with the back end of this website. I have never used with MariaDB, MySQL, or php before in my life. During these hackathon I learned an incredible amount and had a huge amount of fun learning and applying these new skills.", "", ""]], ["PotholeReporter", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration: Car accident caused by Pothole.</h2>\n<h2>What it does: takes a picture of a pothole and sends an email with the photo and location of the pothole to appropriate authorities in charge of the roads in your area.</h2>\n<h2>How I built it: Android Studio.</h2>\n<h2>Challenges I ran into: getting GPS location permissions.</h2>\n<h2>Accomplishments that I'm proud of: having a final working product.</h2>\n<h2>What I learned: Android Permissions, Android in general.</h2>\n<h2>What's next for PotholeReporter: A GUI overhaul is in the future for PotholeReporter as well as additional support for more cities.</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xml\">xml</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li></ul>\n</div>\n</div>", ["One man team. I learned a lot about project and time management as well as about Android activities, intents, and permissions."]], ["GreenGreen", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"GreenGreen \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/927/datas/gallery.jpg\"/>\n<p>\n<i>Prototype</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We were inspired by the sheer amount of garbage that piled up just during the first few hours of the hackathon. We thought that maybe we could turn recycling into a bit of a challenge, tracked by the app and our sensors. We also thought it would be nice to have an alert every time our garbage and recycling cans were full in our dorms.</p>\n<h2>What it does</h2>\n<p>The hardware tracks activity using light sensors and the sparkcore to transmit data to the application. Every time it detects a piece of recycling falling past it, the sensor alerts the application which then adds a point to the user's team. It dynamically updates progress and tracks end dates for goals, making this application potentially useful for other productivity goals.</p>\n<h2>How we built it</h2>\n<p>We tinkered around with the tech we had available, just to see what we could do with it. Once we decided on building a sensor of sorts, we had to pick  a medium for data to be used and transmitted to the user. Website design and servers became too complicated for us, so we started installing as many programs as we could, and AndroidStudio happened to be the program that installed the fastest. </p>\n<h2>Challenges we ran into</h2>\n<p>We could not figure out how to connect our web server to the application, and our attempts to populate the server with information to build our databases continually failed. We also ran into many hours of difficulty installing adequate programs for our use, and spent a lot of time troubleshooting just to get the platforms up and running. In addition, we did not realize that some of the hardware was not performing as advertised, and we did not have enough experience with the tech to realize it immediately. We had to rebuild the entire circuitry multiple times as a result. We also struggled with lack of sleep, and over dosage of caffeine.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We all learned a lot, since we basically came to this hackathon with no experience and knowledge of coding and hardware, and we produced two semi functional products. We also managed not to attack each other or sleep through important deadlines and events.</p>\n<h2>What we learned</h2>\n<p>We learned a little bit about a lot of different concepts and programs. We got a lot of hands on use with micro controllers and other pieces of tech, not necessarily for our project, but just as part of the experience of the hackathon.</p>\n<h2>What's next for GreenGreen</h2>\n<p>We hope to get the app and hardware actually conversing with each other, or at least get them both fully functional separately!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/particle\">particle</a></span></li><li><span class=\"cp-tag\">atom</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag\">grovekit</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/allychow/ECHacks\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/allychow/ECHacks\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the mobile application interface and function, and I contributed to coffee/soylent runs.", "I made the physical prototype using a spark (particle) core, light sensors and LEDs. I also wrote software for the sensors and uploading of data.", "I was working on the backend and trying to get the hardware to communicate correctly to a web based visual graph and the Cloud Database. After that I was attempting to connect the Android App with the Cloud DB to get all the data connected. ", ""]], ["Save the earth tower defense ", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>New game about a tower defense</p>\n<h2>What it does</h2>\n<h2>How we built it</h2>\n<h2>Challenges we ran into</h2>\n<h2>Accomplishments that we're proud of</h2>\n<h2>What we learned</h2>\n<h2>What's next for Save the earth tower defense</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li></ul>\n</div>\n</div>", ["", "", ""]], ["Cyber Goose", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/TEh0EOUdZN4?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Cyber Goose \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/946/datas/gallery.jpg\"/>\n<p>\n<i>Cyber Goose Icon</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>To be able provide tool to help k12 students fight against cyber bullying, and to prevent them become bullying themselves</p>\n<h2>What it does</h2>\n<p>To protect teenage people from direct messaging cyber bullying on facebook</p>\n<h2>How we built it</h2>\n<p>We build Cyber Goose as Google Chrome extension with javascript. For the text analysis part, we make use of the api provided by Microsoft Text Analysis technology checking sentiment.</p>\n<h2>Challenges we ran into</h2>\n<p>The way of loading script in chrome extension is usually loading script after the page is loaded which will delay harassment message from removing.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Be able to block the harassment message.</p>\n<h2>What we learned</h2>\n<p>The development experience of chrome extension. And the advantages and challenges that Natural Language Processing technology. How cyber bullying function works.</p>\n<h2>What's next for Cyber Goose</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag\">microsoft-text-analysis</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/chrome\">chrome</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Hans-Zhang28/Cyber-Goose\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Hans-Zhang28/Cyber-Goose\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Logistica-Politica", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Logistica-Politica \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/486/datas/gallery.jpg\"/>\n<p>\n<i>Main Page - Enter a twitter handle to learn about it's tweeted political leaning and emotional sentiment.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Logistica-Politica \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/798/datas/gallery.jpg\"/>\n<p>\n<i>Example of results</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Logistica-Politica \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/489/datas/gallery.jpg\"/>\n<p>\n<i>About Us Page</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Logistica-Politica \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/669/datas/gallery.jpg\"/>\n<p>\n<i>An inside look at the program's development!</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Logistica-Politica</h2>\n<p><strong>Background and Problem</strong></p>\n<p>Our group had been paying attention to the United States presidential election. We had noticed that the election had become less about actual policy and more about how people feel about the two parties. After noticing this, the next question to ask was \"How do the members of each party actually feel?\" Are they angry, fearful, or even happy? After some discussion, we found a way to figure out how they're feeling: by listening to what they're saying.</p>\n<p><strong>How It Works</strong></p>\n<p>A user can input the twitter handle of an individual. Our program will collect a series of that user's tweet and create a large string. Using twitter data, it is possible for a user to find the most likely political affiliation of a string using the machine learning website Indico. If we give this large string that we have created to Indico, then we can find the political leaning and overall emotional sentiment of the user. This helps for one user, but with the use of a database like Firebase, like we have in our program, it is possible to collect the party affiliations and the emotional sentiments of many users. By grouping people into their parties, we can find the average emotional sentiment of a large sample of a party, that we use to make statistics about the emotional sentiment of a political group.</p>\n<p><strong>Uses</strong></p>\n<p>This can be helpful to predict how a political group feels about the election. Having the overall emotions of a group could help in making preliminary findings about a survey. For instance, if we happen to know that Green voters have an overall emotional sentiment of fearful, then we can have some idea about what results we would get if we surveyed the group. We could also begin to reason as to why a certain group feels a certain way at a certain time, in order to find how a particular event is affecting the election.</p>\n<p><strong>Technologies used</strong></p>\n<ul>\n<li>Flask</li>\n<li>Python 3</li>\n<li>HTML</li>\n<li>JavaScript</li>\n<li>Jinja 2</li>\n<li>JQuery</li>\n<li>CSS</li>\n<li>Indico (API calls)</li>\n<li>Twitter (API calls)</li>\n<li>Heroku (server)</li>\n</ul>\n<p><strong>Challenges Faced</strong></p>\n<ul>\n<li>Integrating the backend and frontend</li>\n<li>Implementing the Heroku server</li>\n<li>Using Flask in Python</li>\n<li>Creating a webapp using JQuery</li>\n<li>Using version control effectively</li>\n</ul>\n<p><strong>Future Steps</strong></p>\n<p>In the future, we would love to place a geographic component to the analysis.We know that tweets can be geocoded, and so using that or another method, we believe that it would be possible to determine where the user lives and factor that into the party affiliation. Certain states have higher proportions of a certain voter, so including the geographic component could prove to be valuable.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jinja\">jinja</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Advait-M/Logistica-Politica\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Advait-M/Logistica-Politica\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://logistica-politica.herokuapp.com/\" rel=\"nofollow\" target=\"_blank\" title=\"https://logistica-politica.herokuapp.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>logistica-politica.herokuapp.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the backend and integrating it into the frontend. Specifically, I worked on the Heroku server, using Flask to communicate between Python and HTML/JS, implementing Twitter and Indico APIs and creating the results page on the website. ", "I worked mostly on the backend using Python. I made the userData class which was used in combination with the Twitter API, and the Indico API to perform analysis on the string that was inputted.", "I worked on the front end HTML and CSS design (bootstrap and a bit of JQuery and JS. I made the home page, the about us page & the \"How It Works Page\". I partially helped in making the results page. Designed them to provide a framework for backend.  "]], ["Uber-for-Coders", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Uber-for-Coders \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/517/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>Uber-for-Coders</h1>\n<p>This android application allows programmers to connect with other programmers to discuss programming related problems and solutions.</p>\n<h2>Inspiration</h2>\n<p>Programmers go through many struggles throughout their careers. Syntax and logical errors can be difficult to solve taking up precious time and energy. The inspiration for this android application was to help make programming easier for fellow hackers. By creating an android application that runs similar to \"Uber\", coders can contact fellow programmers who know the same language as them to help them solve their programming errors. </p>\n<h2>What it does</h2>\n<p>In the beginning, the user creates an account that for the app. As they are making the account, they are asked about their current programming knowledge, which will be stored. Once their knowledge has been determine the user will then be able to communicate with other users who are using the app, and filter them out based on what languages they know.</p>\n<h2>How I built it</h2>\n<p>The entire app was built on android studio. Android studio is an app developing software, that incorporates Java. Within android studio, I utilized the \"SMS\" api and the SQLite database. </p>\n<h2>Challenges I ran into</h2>\n<p>One major challenge that I ran into was the reading of data from the Database. This was very difficult because of the syntax required for this. It took a lot of experimentation and work with mentors in order to make the program read and display the information stored on the database. </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>One accomplishment that I am very proud of is the way I utilized databases in my app.  The databases were successfully able to store the data permanently, with the option of inserting and reading information at anytime. </p>\n<p>Another thing I am very proud of is the \"login screen\" portion of the app. Out of the 36 hours, I had spent 12 hours just attempting to create a login screen. My lack of knowledge with Databases and user interface made it difficult to create one. I had to put in a lot of research, experimenting and trial and error in order to make it work. As of now, the login screen can successfully remember a username and password inputted by the user. </p>\n<h2>What I learned</h2>\n<p>One important thing that I learnt was the use of the SQLite database in android studio. Before Electric City Hacks, I had no prior knowledge as to how data bases work in android studios. The apps I had made prior had little real world application since no databases were used. In this Hackathon, I spent many hours learning how to create, insert data and read data from a database. I am happy to say that by the end of this Hackathon, I have become very knowledgeable with the SQLite database, and can make apps in the future that incorporate them.</p>\n<h2>What's next for Uber-for-Coders</h2>\n<p>For the future I would like to make the android application look more appealing. Currently the colouring and shape of the app is based off of the default options. In the future I would like to experiment with different colours, backgrounds and shapes of the text and buttons in order to make the app look more appealing. More people will want to use the app if it looks more aesthetically pleasing. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag\">sms</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/SaharshHariharan/Uber-for-Coders\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/SaharshHariharan/Uber-for-Coders\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Optimization ", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/_4-ak8j7pOI?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Optimization  \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/753/datas/gallery.jpg\"/>\n<p>\n<i>The number of tasks is then asked for. </i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Optimization  \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/754/datas/gallery.jpg\"/>\n<p>\n<i>When starting to input tasks and the date &amp; task button is pressed the date is asked for. </i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Optimization  \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/755/datas/gallery.jpg\"/>\n<p>\n<i>This is how it looks when the tasks are inputted</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Optimization  \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/756/datas/gallery.jpg\"/>\n<p>\n<i>Then you must enter what the task is. </i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Optimization  \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/757/datas/gallery.jpg\"/>\n<p>\n<i>This is how it looks when another date/tasks are added. </i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Optimization  \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/758/datas/gallery.jpg\"/>\n<p>\n<i>If you want to add more tasks press the same button and repeat the process. </i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Optimization  \u2013 screenshot 7\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/759/datas/gallery.jpg\"/>\n<p>\n<i>This is home page. </i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Many calendar app's such as Google Calendar aren't ideal as when you went to see the events planned for the month you are unable to because it is confined in the calendar template, I decided to change that. I wanted to make a website that would allow users like me to put appointments, tests, and events on the website and view other events in that month. </p>\n<h2>What it does</h2>\n<p>It's quite user-friendly and has a simple UI, you click the date &amp; task button: type the date, enter a number of tasks for the day and then you input those tasks. If you need to add more tasks for another day repeat. </p>\n<h2>How I built it</h2>\n<p>I had several issues throughout the hackathon such as a loop for prompts and so on but at the end of the day, I was able to overcome the challenges and complete my website to the extent I could. </p>\n<h2>Challenges I ran into</h2>\n<p>When uploading my website the CSS wouldn't appear, unfortunately, the CSS is still not on the website but I do have a video and picture of the program with it. </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>This was my very first hackathon and one of my first coding projects. I went solo on this project and I think I did decent. </p>\n<h2>What I learned</h2>\n<p>I learned quite a lot while coding this. I learned a lot of tips's to make my program look nicer in code, how to loop a prompt, etc. </p>\n<h2>What's next for Optimization</h2>\n<p>There are many future steps for Optimization such making it an app for IOS and Andriod. Two useful tools on the website would be having a button that would allow you add more tasks to one day and a button that would get rid of completed tasks. Something very useful would also be to include a login page so the website remembers everything as well. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://suryadewan.github.io/Optimization.github.io/\" rel=\"nofollow\" target=\"_blank\" title=\"https://suryadewan.github.io/Optimization.github.io/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>suryadewan.github.io</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I did everything for this project as I went solo. I used javascript, html, and css to create this. Even though there isn't a lot of CSS. "]], ["Reinforced Concrete Design", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>This program is intended for the use of structural engineering design specialists. The calculations embedded into the program will calculate the moment of resistance for a specific cross-section and can be used to reassure that the desired concrete beam will be able to withstand the loading applied to it. This is intended to be a verification tool and should not solely be used for calculation of numerical values.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li></ul>\n</div>\n</div>", [""]], ["Concert Discover", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>The music that I listen to is very different from everyone else. I always enjoy to discover new up and coming artists that create and blend new music styles. </p>\n<h2>What it does</h2>\n<p>It goes through your Spotify playlists and searches for local concerts that could possibly interest you. </p>\n<h2>How I built it</h2>\n<p>I built it using the Spotify API and Eventful API to fetch all the information about the user's music interests and concert event listings. Node.js is used to authenticate (Spotify) and to get data. It is then sent to the html page and parsed with Handlebars.js. </p>\n<h2>Challenges I ran into</h2>\n<p>Figuring out how to configure the UI for the user and make it as flexible as possible to find more concerts.</p>\n<h2>What I learned</h2>\n<p>It was my first time using Node.js and Handlebars.js. It was easy to configure and to learn for a hackathon.</p>\n<h2>What's next for Concert Discover</h2>\n<p>More customization!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/spotify\">spotify</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/eventful\">eventful</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/handlebars-js\">handlebars.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/sebroy00/concertDiscover\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/sebroy00/concertDiscover\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["95 or nah?", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"95 or nah? \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/623/datas/gallery.jpg\"/>\n<p>\n<i>Sets the subject weightings according to math although many other subjects are supported</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"95 or nah? \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/624/datas/gallery.jpg\"/>\n<p>\n<i>Sets knowledge mark</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"95 or nah? \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/625/datas/gallery.jpg\"/>\n<p>\n<i>Sets thinking mark</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"95 or nah? \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/626/datas/gallery.jpg\"/>\n<p>\n<i>Sets communication mark</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"95 or nah? \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/627/datas/gallery.jpg\"/>\n<p>\n<i>Sets application mark</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"95 or nah? \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/628/datas/gallery.jpg\"/>\n<p>\n<i>User clicks calculate to display their mark</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"95 or nah? \u2013 screenshot 7\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/629/datas/gallery.jpg\"/>\n<p>\n<i>Displays the user's math mark</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"95 or nah? \u2013 screenshot 8\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/630/datas/gallery.jpg\"/>\n<p>\n<i>Sets the subject weightings according to english</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"95 or nah? \u2013 screenshot 9\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/631/datas/gallery.jpg\"/>\n<p>\n<i>Sets knowledge mark</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"95 or nah? \u2013 screenshot 10\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/632/datas/gallery.jpg\"/>\n<p>\n<i>Sets thinking mark</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"95 or nah? \u2013 screenshot 11\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/633/datas/gallery.jpg\"/>\n<p>\n<i>Sets communication mark</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"95 or nah? \u2013 screenshot 12\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/634/datas/gallery.jpg\"/>\n<p>\n<i>Sets application mark</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"95 or nah? \u2013 screenshot 13\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/635/datas/gallery.jpg\"/>\n<p>\n<i>User clicks calculate to display their english mark</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"95 or nah? \u2013 screenshot 14\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/636/datas/gallery.jpg\"/>\n<p>\n<i>Displays user's english mark and we can see how the same marks with different weightings result in a different final mark</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>For this hackathon, we decided to create a program that we and our fellow high school students could use on a daily basis. Our school board, like many other boards in Ontario, is obliged to give segmented marks for any assignment, quiz, or test. All subjects have different mark weightings for each subject, thus it takes a student quite a long time to calculate their final mark. We wanted to automate this process and make it faster for a student to calculate their final mark.</p>\n<h2>What it does</h2>\n<p>This website is able to recognize the course the user is calculating the mark for, and use that information to adjust the mark weightings and give the user their final mark based on inputted segmented mark values.</p>\n<h2>How we built it</h2>\n<p>We built this website using HTML, Javascript and CSS.</p>\n<h2>Challenges we ran into</h2>\n<p>The team was not very experienced with styling, thus it was hard for us to figure out ways on how to make the website look visually appealing. </p>\n<h2>What we learned</h2>\n<p>Our team gained experience with CSS styling which allowed us to make a beautiful website while having the same amount of functionality. We also learned that teamwork is key for completing tasks skillfully and efficiently. </p>\n<h2>What's next for (95 || \"nah\");?</h2>\n<p>We plan on advertising and promoting it within our high school because we know that many people will want to calculate their final mark faster using this website. Also, we are planning to develop it into an android &amp; iOS application for portability &amp; offline access.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://www.95ornah.com/\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.95ornah.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.95ornah.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I mostly focused on the logic behind it.", "I created the Javascript logic behind the website calculations, as well as the HTML layout of the website. My first time using CSS was successful, as I was able to efficiently import the Materialize framework and use it to make an effective minimalist design. ", "Using CSS, we stylized this app for a minimalistic UI. Which provides the user with a very unique experience. This was my first hackathon project, and a great opportunity for me to collab on my ideas with a group of people. ", "Throughout the hack, I was working on the logic & troubleshooting component.  Since CSS, HTML & Javascript were entirely new languages to us, there were several logical & run-time errors that I helped troubleshoot. This was an amazing experience because of the amount that I learnt & the people I worked with."]], ["A Walk in the Woods", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"A Walk in the Woods \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/059/datas/gallery.jpg\"/>\n<p>\n<i>Original Setup</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"A Walk in the Woods \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/264/datas/gallery.jpg\"/>\n<p>\n<i>Updated Setup - front</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"A Walk in the Woods \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/265/datas/gallery.jpg\"/>\n<p>\n<i>Updated Setup - back</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>*We are actually a team of 6, but please treat us as a team of 4 as we would like to be considered for prizes. We will decide how to split up any prizes, if we do win anything. Thank you! The other's are Natasha Wall and Amelia King.</p>\n<p>Originally our team consisted of 5 members, with no clear hack idea or direction. Our biggest dilemma was that the team was split between a hardware and a software hack. Through the power of slack, we gained another member, one with much more hardware experience. Together we scoured through the Arduino kit, and found an MPU-6050 and a pulse monitor. We thought, why don't we try and make a game, but aim it around the player's physical state, such as their heart rate? Heart rate is a great indicator of feelings and behaviour, and will spike at things such as frustration. Video games are known as a source of frustration, so why not use this frustration to fuel the game's difficulty, and give the player initiative to stay calm, and not let the game get the better of them. Instead relax, and take, \"a walk in the woods\". Inspired by Trent's beautiful scenery and dedication to keeping it green, we decided to have our game team reflect the calming environment this school provides. </p>\n<p>The game has 2 main parts; the initiation, or mapping, and the game-play phase. \nIn the initiation phase, the data from the gyroscope is combined with the data from the pulse monitor. The gyroscope data is collected with a MPU-6050 sensor around the MPU's x-axis. This data is recorded as negative or positive angles, in degrees. In order to connect the tilt angle to the change in height of the character, angle ranges are made to correspond with certain integers, ranging from -8 to +8 (e.g. angles 10 to 20 degrees correspond to integer 1). These integers then correspond to a pixel change in the height of the character within the game. In the mapping stage the pulse rate data is multiplied by the gyroscope data (a value between -8 and +8), which gives a height coordinate. This coordinate represents the height of the \"obstacle\" at that point in the terrain. For \"A Walk in the Woods\", we chose the ECHacks' tree logo as the obstacle, and the top of the screen as the bounds of the game (e.g. touch the top of the screen or a tree with the character and you loose).\nIn game play, the gyroscope data from the MPU-6050 represents the up and down movement of the character, while the player's pulse rate (heart rate) represents the speed of the character. Like most obstacle games, the objective is to avoid the terrain obstacles for as long as possible. </p>\n<p>Challenges were faced with extracting usable data from the MPU-6050 and formatting it in order to be usable further along in the project. Originally, we wanted to change the height of the character by moving the MPU up and down along the z-axis. This proved very difficult as associating accelerations to possible position changes was very difficult, and the data was largely affected by things such as gravity. It made it very hard to see relevant changes and to correspond them to integers in order to represent a change in height (in pixels) of the character.<br/>\nPlotting the data in order to create the tree terrain for the game proved very difficult. The data was difficult to translate into coordinates that could be used to modify the tree photo heights. At some point, we had 3 group members attempting to work through the code in order to find any issues. Lastly, the hardest component was plotting the game-play data dynamically, so that the position of the character could be seen continuously changing as the gyroscope was moved. Dynamically updating forms in Visual Studio was our first issue, as our first approach did not dynamically \"plot\" the character, but rather only plotted the final position. After changing our approach we were able to read the game-play data more efficiently, and were able to continuously plot the data so that the character's motion could be tracked. </p>\n<p>We are very proud of ourselves, as a majority of our team are first time hackers. Our largest accomplishment is properly defining the scope of the project, as it allowed us to properly divide and conquer the work. We were all able to work on an area that we enjoyed, and it allowed us to solve our original hardware vs software dilemma, as the project incorporated both. Our largest Arduino accomplishment is realizing that we could use the pitch change as a way to control our character's height, while our biggest Visual Studio accomplishment is using polling to get data from the sensor to the form (display).</p>\n<p>All of us were able to learn something, whether that be new skills or improving old ones. Our members were able to improve their Arduino, Visual Studio, C#, and app development skills. Some members worked on programs that they had never used before (like Visual Studio) and had a chance to learn skills that are very applicable in the real world.</p>\n<p>We believe that the idea of incorporating this hardware setup with other games is very feasible. This set up allows players to really understand how they are connected to the game, and the effects they have. Future games can be educational (for children and students) or just for entertainment. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/net\">.net</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/visual-studio\">visual-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/d-jokic/aWalkinTheWoods\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/d-jokic/aWalkinTheWoods\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Power Balance", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We are a group of almost all first-time hackers who were eager to use our diverse skill sets to create something amazing. We started talking about what we were capable of creating, and decided a simple game would be achievable in the 36 hours. We then discussed goals for our game, and came up with a collaborative appraoch to teach the skills of team communication and collaboration.</p>\n<h2>What it does</h2>\n<p>This game requires players to balance a seesaw as weight is continuously and randomly added to each side. The goal of the game is keep the surface level, and avoid the seesaw touching the ground.\nIdeally, as a two player game, it would have players work together, each balancing a moving weight on one side of the seesaw to redistribute weight and keep the seesaw balanced.</p>\n<h2>How I built it</h2>\n<p>This game was built entirely from scratch, with no APIs or copied code. We started with a empty script. We decided to use simple geometric objects within HTML's Canvas, managed to have objects display and then animated those objects. Then the physics of the game and all the mathematics were conceptualized and written into the code. The user input was then defined and implemented. From there on, it was debugging and adding new features. The motion controller was built using an Arduino 101 from MLH, it controlled 4 relays which then controlled a MakeyMakey.</p>\n<h2>Challenges I ran into</h2>\n<p>Our ultimate goal was the creation of a multiplayer game, but we ran into a few roadblocks with the mathematics and coding. Since the plank is tilting constantly at different speeds according to the respective shift in balance, the weight and the plank are all moving in two dimensions according to an one-dimensional input. The calculation and the coding for this kind of feature can prove to be extremely difficult.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>As a novice coder, I (Erin) tok the opportunity to learn about javascript and bootstrap while here. I created, the first .html page I've ever created independently.</p>\n<h2>What I learned</h2>\n<p>Each of the challenges we encountered forced us to explore new dimmensions of coding, mathematics, and game reiterations as we worked towards creating a working product. I persoanlly have learned that even simple cocnepts and designs can create headaches in the design process, and that we should always estimate more time for tasks than we think we need, in order to have wiggle room to olve problems we encounter.</p>\n<h2>What's next for Power Balance</h2>\n<p>The next steps include expanding the game for multiplayer use. With more time and investment into graphics, Power Balance has the potential to be marketable to companies such as Luminosity as an expansion to their already existing package of brain-training games. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://ecjamies.github.io/Electric_City_Hacks_1/\" rel=\"nofollow\" target=\"_blank\" title=\"https://ecjamies.github.io/Electric_City_Hacks_1/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>ecjamies.github.io</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I helped code the javascript app. I'm also responsible for the Arduino powered motion controller.", "I calculated the back-end mathematics concerning the physics involving the weight of the falling balls as well as the weight, the slope of the plank in response to the constant change of balance and the weight's movement, and the logic behind contact between ball-plank and plank-ground.", "JavaScript Developer. ", ""]], ["Solar", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Solar \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/865/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Solar \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/814/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Solar \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/813/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Solar \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/812/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Solar \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/867/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Solar \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/866/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Solar \u2013 screenshot 7\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/868/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Solar \u2013 screenshot 8\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/869/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>Try it out live at <a href=\"http://spinnningoutofcontrol.com/\" rel=\"nofollow\">http://spinnningoutofcontrol.com/</a> ;) Desktop only!</p>\n<h2>Inspiration</h2>\n<p>Current educational physics simulation tools such as PhET have various limitations. Most of them are dull and have unappealing graphics. We think interactive 3D physics simulations, which are more beautiful, intuitive and more fun to work with, will eventually replace the outdated PhET tools.</p>\n<h2>What it does</h2>\n<p>Solar is an interactive three dimensional solar system simulation that demonstrates simple planetary motions and Kepler's laws.</p>\n<h2>How we built it</h2>\n<p>We built this application using three.js, an abstraction layer on top of WebGL.</p>\n<h2>Challenges we ran into</h2>\n<p>Originally, we were to develop a multiplayer game based on HTML5 canvas similar to <a href=\"http://http://agar.io/\" rel=\"nofollow\">agar.io</a>. Unfortunately, after hours of attempting, we realized that was is impossible to make such game under the given time constraint.</p>\n<h2>Accomplishments that we are proud of</h2>\n<p>When we realized that our idea doesn't work out, we were able to adapt.</p>\n<h2>What we learned</h2>\n<p>Hackathon is not about winning, it is about failing and not giving up. Three out of four hackers on our team are hackathon first-timers. When we failed, we did not let it go. Instead, we scrapped our ideas several times, starting from scratch three times before creating a satisfactory project.</p>\n<h2>What's next for Solar</h2>\n<p>Programming with three.js can be a daunting obstacle for Physics educational professionals who do not have enough programming experience. To facilitate the process of making high-quality interactive 3D simulations, the next step is creating another abstraction wrapper on top of three.js specifically for Physics simulations creation as well as an easy-to-use Graphical User Interface.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/three-js\">three.js</a></span></li><li><span class=\"cp-tag\">ammo.js</span></li><li><span class=\"cp-tag\">webpack</span></li><li><span class=\"cp-tag\">ramda.js</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/josh-sun/solar_simulator\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/josh-sun/solar_simulator\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/lpan/solar-physics\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/lpan/solar-physics\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"http://spinnningoutofcontrol.com/\" rel=\"nofollow\" target=\"_blank\" title=\"http://spinnningoutofcontrol.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>spinnningoutofcontrol.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Green Fly", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Green Fly \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/670/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Green Fly \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/671/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Green Fly \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/672/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Green Fly \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/673/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>After finding out that one of their teammates was a pilot, the team became fixated around an aviation theme.  The concept on a race came after we had the opportunity to try using the Leap Motion, a device that senses your hands as they physically move and mimics them virtually.</p>\n<h2>What it does</h2>\n<p>This game uses keyboard user inputs to move forward and turn to avoid obstacles to try and reach the end of the level.  The backdrop to this is that nature is throwing it's worst at Earth and it is the responsibility of the user to transport the last human on the planet out to safety in a spaceship up above.</p>\n<h2>How we built it</h2>\n<p>We used Unity, a game development software and the programming language C# to create the 3-dimensional obstacles and animations respectively.  And we decided to compile everything together using Unity - into one executable file.</p>\n<h2>Challenges we ran into</h2>\n<p>Although our original goal, we were unable to connect the leap motion sensor to the game.  So, currently, it relies on user keyboard inputs to navigate the aircraft, while we do plan to incorporate the former technology soon.  It proved to be a challenge to use C# to integrate the Leap Motion related-language and Unity-related programming.  So, it had more to do with navigating through the various libraries to correct this measure.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>This was the first major hackathon for all three of us, and having never used C# before, it did prove to be a challenge, but we're proud of the fact that we created a game with user inputs!</p>\n<h2>What I learned</h2>\n<p>As long as there's imagination, there's an opportunity for a game!</p>\n<h2>What's next for Green Fly</h2>\n<p>Next, we plan on finishing the implementation and integration of Leap Motion into our game to allow users to control the airplane using the Leap Motion sensor only.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/aneeshsri/echacks\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/aneeshsri/echacks\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"http://g-r-e-e-and-f-l-y.com/INDEX.html\" rel=\"nofollow\" target=\"_blank\" title=\"http://g-r-e-e-and-f-l-y.com/INDEX.html\">\n<i class=\"ss-icon ss-link\"></i>\n<span>g-r-e-e-and-f-l-y.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Visual Scrape", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Visual Scrape \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/693/datas/gallery.jpg\"/>\n<p>\n<i>Example Screenshot of the \"About\" Page</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Visual Scrape \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/695/datas/gallery.jpg\"/>\n<p>\n<i>An example of a search done with the Keywords \"US Elections\"</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Visual Scrape \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/697/datas/gallery.jpg\"/>\n<p>\n<i>Example Screenshot of the \"About\" Page</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration:</h2>\n<p>Nowadays, information is vast and wide-spread, and being able to visualize data in a graphical format would be a huge asset, considering the following applications:\n-Business Marketing trends\n-Primary Educational research resource\n-Higher Educational purposes\n-Social Media analytics </p>\n<h2>What it does</h2>\n<p>Given a user-inputted keyword, the webapp begins scraping at several image databases, and extends its crawl to as many embedded links as necessary.  The result is a list of visual graphics ordered by relevance.  Relevance can be influenced by an user-inputted five-star review system.  However, Relevance is chiefly determined through the web-crawling algorithm.  </p>\n<h2>How we built it</h2>\n<p>The web app consists of a 2 page front end, built with HMTL, CSS, Bootstrap, Javascript and Jquery. After a keyword has been chosen by the user, a web spider is deployed by the scrapy cloud and produces a table of 9 images. As the user scrolls down a javascript script generates more table rows, until all possible images have been exhausted.</p>\n<h2>Challenges we ran into</h2>\n<p>Setting up the scrappy environment was our first biggest challenge. Establishing a conncection between the front end and backend also became a challenge towards the end of development.The main issue was processing the scraped data produced by the scrappy spider, for display to the front end. Additionally, scalability could also be an issue because all the scraped data is stored locally at this point. Future models will take advantage of amazonweb services.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Having a spider successfully return scrapped data.</p>\n<h2>What we learned</h2>\n<p>How to develop a front end using bootstrap. Project Management (agile). SVC with git.</p>\n<h2>What's next for Visual Scrape</h2>\n<p>Debugging, refining the data scraped, establishing an even stronger connection between frontend and backend, adding a functionality to scrape information and present it in infographical format</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">scrapy</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mysql\">mysql</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ajax\">ajax</a></span></li><li><span class=\"cp-tag\">google-doc</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/latex\">latex</a></span></li></ul>\n</div>\n</div>", ["", "", "", ""]], ["StockStory", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"StockStory \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/738/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>Stockstory</h1>\n<p>StockStory provides solutions to those studying historical stock value trends and analyzing their correlation with a company's relative news attention. StockStory allows users to view real trends in data and determine the real reasons behind these trends.</p>\n<h1>Historical Stock Data</h1>\n<p>Historical stock data is fetched using the Yahoo Finance API and displayed using Chart.js, a JavaScript chart drawing library. Users can interact with the graph and click to view news headlines from that week.</p>\n<h1>News Stories</h1>\n<p>News stories are fetched using the Guardian API for archived news articles. Using the Dandelion Sentiment API, each article is assigned a percentage score indicating its sentiment.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/rsriv/stockstory\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/rsriv/stockstory\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["A.I. Lab", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"A.I. Lab \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/437/057/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"A.I. Lab \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/437/058/datas/gallery.jpg\"/>\n<p>\n<i>Custom IDE!</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"A.I. Lab \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/437/055/datas/gallery.jpg\"/>\n<p>\n<i>Put your pong AI to the test!</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"A.I. Lab \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/437/056/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"A.I. Lab \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/437/054/datas/gallery.jpg\"/>\n<p>\n<i>Creating games with AWS</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>We all felt that there was an immense lack of educational programming tools aimed at children. Specifically, to our surprise, there is not a single app on the google app store with this purpose in mind. This realization, paired with our shared interest in Artificial Intelligence, gave birth to the app we now call the AI Lab. The premise of the app is to allow the user to <strong><em>code their own AI right from their phone</em></strong> for a selection of arcade games. They can then pit their AI off against other people's AI's online. This constant process of learning, testing, and improvement results in a fun and effective environment to learn the basics of coding for all ages.</p>\n<p>The app involves three main sections: Learn, Code, and Play. </p>\n<p>In Learn, the user can partake in tutorials which cover basic programming structures like if statements, variables, function and loops. They also learn the API functions we made for them to make controlling the arcade games simple.</p>\n<p>In Code,  the player uses what they learned to create an AI for one of several arcade games including Pong and Tanks.  The coding is written in lua and is done <strong><em>right on the phone from a custom made Integrated Development Environment, equipped with our own syntax highlighting and autocomplete</em></strong></p>\n<p>Finally, in Play, the user is paired off against someone of a similar skill level online. Each player views the game being played in <strong><em>real-time using AWS</em></strong>. The player can review the outcome as many times as they like, and hopefully learn from both their losses and wins to become increasingly better programmers.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sql\">sql</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xml\">xml</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/lua\">lua</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/George-E/AI-Lab\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/George-E/AI-Lab\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on creating the function of the android app that would download and upload data from the game server, as well as animate the game pieces on screen with the position data per tick. ", "", "", ""]], ["GeNN", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to learn about neural networks :D</p>\n<h2>What it does</h2>\n<p>Its a neural network with support for gradient decent backprop for supervised learning and a genetic algorithm for unsupervised learning (intended for interfacing with games)</p>\n<h2>How we built it</h2>\n<p>Lots of linear algebra and JS </p>\n<h2>Challenges we ran into</h2>\n<p>Neural nets matrix math is hard</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>we figured it out at the end</p>\n<h2>What we learned</h2>\n<p>linear algebra and Neural nets :D</p>\n<h2>What's next for GeNN</h2>\n<p>Make it in a language that isnt constrained to the browser, we dont have too much experience with JS and it seems all le hot companies be using this meme language so we decided to use it too.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["Code Name: Melpomene", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Code Name: Melpomene \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/678/datas/gallery.jpg\"/>\n<p>\n<i>Pana, the protagonist</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Code Name: Melpomene \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/680/datas/gallery.jpg\"/>\n<p>\n<i>Malus, a mysterious misanthrope.</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>All of us plan on entering the video game industry professionally. The natural progression is to create games of our own. This is a proof of concept of our ideas.</p>\n<h2>What it does</h2>\n<p>You navigate around rooms (composed of custom art assets) interacting with objects to facilitate actions with other objects.</p>\n<h2>Challenges we ran into</h2>\n<p>The struggle to complete all of the mechanics precluded us from developing much in the ways of content. A lot of planning was made into the story which didn't end up with much implementation.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>The fact that most of what we planned ended up in the final project was a pleasant surprise to us novices.</p>\n<h2>What's next for Code Name: Melpomene</h2>\n<p>In our spare times, we'll continue to expand on the project, developing content and fleshing out the elements we desire.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag\">piskel</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://www.mediafire.com/file/3gv1nir4tjbrru6/MelpomeneVert.exe\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.mediafire.com/file/3gv1nir4tjbrru6/MelpomeneVert.exe\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.mediafire.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Worked as a co-programmer. In particular, I developed the text system and event programming.", "For this project my job was to create the character's movements and integrate its animations into the game. I also set up the layout for the game with all of the object and character collisions. Another job I had to do was set up the entire mapping of the warps for the character.", "I was our team's graphic designer, coming up with concept art for the characters and making the sprites, backgrounds, and character profiles.\n"]], ["dearMe", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We wanted a way to evaluate ourselves in ways that are difficult for us. The APIs used for this project can read in between the lines of the diary entries for emotions, personas, and etc.; certain things that are a lot harder for humans to read in general especially when it comes to self-evaluation.  </p>\n<h2>What it does</h2>\n<p>When you enter an entry, we analyze the persona behind the entry. With this data, we compose a radar chart that evaluates the difference between your persona now, and your persona before to a certain time period.</p>\n<h2>How we built it</h2>\n<p>We mainly used Node.js for the backend, with sentiment analysis utilizing Java. For the database, we went with mongoDB. For the front end, it was the Jade, CSS, and javascript.</p>\n<h2>Challenges we ran into</h2>\n<p>One of the biggest challenges that we had to overcome during this hackathon was that our tools weren't well chosen because the individual skill sets between us were different.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>One of our biggest accomplishments during this project was how we were able to incorporate so many APIs and make them work together to make this product. </p>\n<h2>What we learned</h2>\n<p>We learned proper databasing practices, and we had to learn how to use multiple node modules. Further to this, we had to learn how to use the meaningcloud API and the indico API and implemented it into our program.\nWe learned a lot during this hackathon. We learned how to use mongoDB with javascript and how to parsed JSON with Java</p>\n<h2>What's next for dearMe</h2>\n<p>winning</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag\">indico</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jade\">jade</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/love\">love</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag\">meaningcloud</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/gson\">gson</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://www.dearme.ml\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.dearme.ml\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.dearme.ml</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Helped with front and back end", "Did all the databasing, most of the NodeJS. Set up deployment environment and worked on processing as well as frontend. Configured Google and Indico APIs", "I worked on the backend along with Carol. I did sentiment and entity extraction part of the program. MeaningCloud + Java + some JS.", "Front end, Front-end, frontend~"]], ["eStamps", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"eStamps \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/615/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"eStamps \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/617/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"eStamps \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/614/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"eStamps \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/613/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"eStamps \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/437/095/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>Getting on the public transit system is an everyday affair that students, seniors, and workers all depend on across major cities in the world. One of the major flaws in public transit system is the transfer system. The transfer system enforces people to use paper receipts when getting off and on different buses and trains en route to their final destination. This is both a huge inconvenience to travellers and wastes massive amounts of paper which can pollutes the environment. This is where we come in. Welcome to our modern transit solution, eStamps. The paperless, eco-friendly way of using any transit system. Simply open eStamps, select the city that you are currently in, choose from a variety of payment options, and show your proof of payment to the conductor when you are onboard. No fumbling around for transfer receipts or small change - easy, convenient and eco-friendly. With a staggering 91% of the adult population owning a cellphone, and many cities, including Peterborough, wanting to be more technology reliant, we believe that eStamps will not only be feasible but there will be a huge demand for this application.\nWe plan on enabling bluetooth in our app so that all you require is a simple tap for the transit system to verify your proof of payment.\nWith eStamps, millions of potential users will have a simple and efficient way of using the transit system, not only in Peterborough, but around the world. </p>\n<p>Soon public transit systems will have the eStamps of approval</p>\n<h2>Inspiration</h2>\n<p>Bus Transfers uses too much paper</p>\n<h2>What it does</h2>\n<p>Provides an Alternative way of paying the transit system</p>\n<h2>How we built it</h2>\n<p>Coded with Android</p>\n<h2>Challenges we ran into</h2>\n<p>Android Pay does not work in Canada</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>It Works!!!!</p>\n<h2>What we learned</h2>\n<p>That Android pay does not support Canada lol.</p>\n<h2>What's next for eStamps</h2>\n<p>Provide Bluetooth for an even more secure check, Test drive with a small city and then a large one later down the line</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag\">android-pay</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/tzhang995/ECHacks2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/tzhang995/ECHacks2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Android boy here! Did most of the back end and when that was done, I helped with the front end.", "Front End, UI/UX, Web"]], ["Meme Ninja", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Meme Ninja \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/646/datas/gallery.jpg\"/>\n<p>\n<i>Screenshot of Program </i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Meme Ninja \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/647/datas/gallery.jpg\"/>\n<p>\n<i>Homemade sprites!</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Our group did not have a specific idea at the start, however, we were interested by the unique hardware available at the hackathon. </p>\n<h2>What it does</h2>\n<p>This game tracks the movement of the user's fingers and maps it onto the screen. If the line formed by the user hits an enemy/meme, the target is destroyed. If you miss a meme and it disappears, you lose a life. The completion of 3 levels results in a win while 5 lost life points causes a game over.</p>\n<h2>How we built it</h2>\n<p>The leap motion senor acts as an interface to receive the user's hand gestures as input. The hand gesture required the user to touch their index and middle finger together while pointing outwards above the sensor. The average coordinates of the tips of these fingers act as an x,y coordinate where a circle/dot is drawn on the screen. This process is repeated every 17 miliseconds, so you can draw lines. We made it so that only ten dots could be drawn at the screen at a time; leaving a disappearing trail as you drew the lines. Next, using objects, a target class was implemented which creates different memes.</p>\n<h2>Challenges we ran into</h2>\n<p>Initially, our group wanted to create a painting canvas with the leap motion. We felt that for an immersive experience, the oculus rift had to be in combination with the leap motion. However, none of our laptops were compatible with the oculus rift and we thus scraped the virtual reality aspect of our project. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are proud of coming up with the clever solution to a tricky problem of creating a trailing line. Our progress was halted to a stop at one point, however, by using an array list, the line is constantly adding a new point and taking away the last. Furthermore, we are happy to say that an inexperienced team were able to develop and complete a complicated program.</p>\n<h2>What we learned</h2>\n<p>We all learned how to program with the leap motion. Additionally, we were able to strengthen our skills with java objects and classes, specifically with 2D Graphics.</p>\n<h2>What's next for Meme Ninja</h2>\n<p>We plan on polishing this game further by adding more levels and enemies. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/leap-motion\">leap-motion</a></span></li><li><span class=\"cp-tag\">2dgraphics</span></li></ul>\n</div>\n</div>", ["", "", "", ""]], ["journ\u00e9", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/p7zdNXRQBHs?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"journ\u00e9 \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/447/datas/gallery.jpg\"/>\n<p>\n<i>Journ\u00e9, the new way to share!</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"journ\u00e9 \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/437/026/datas/gallery.jpg\"/>\n<p>\n<i>Login page</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"journ\u00e9 \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/437/027/datas/gallery.jpg\"/>\n<p>\n<i>Find fun pictures around you </i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"journ\u00e9 \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/437/025/datas/gallery.jpg\"/>\n<p>\n<i>Collect points to get stickers and backgrounds</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"journ\u00e9 \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/437/028/datas/gallery.jpg\"/>\n<p>\n<i>More fun stuff</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Have you ever wondered what others in your city have been up to? Have you ever wanted to relive an event from a new perspective? This desire to stay in the loop and become part of a larger community was what motivated us to build journ\u00e9.</p>\n<h2>What it does</h2>\n<p>journ\u00e9 is an Android app that allows users to anonymously post photos attached to their current location. These photos are available exclusively to users who are in close proximity to the original location.</p>\n<h2>How we built it</h2>\n<p>journ\u00e9 was built using the Android SDK for the app and Python together with Flask for the backend. The backend runs on an AWS instance and uses MariaDB to organize all the information.</p>\n<h2>Challenges we ran into</h2>\n<p>Our team consists of mostly first-time hackers and the tools we worked with on this project were new to many of us as well. Working under the time constraints and learning new frameworks as we went along was certainly challenging but also a great opportunity to learn.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Apart from the pride we take in the technical aspects of our solution, we are really proud of the user experience our app offers. With just a few clearly labelled buttons and a focus on the essential features it is a real joy to use and feels both polished and intuitive.</p>\n<h2>What we learned</h2>\n<p>Some of us were able to get a head-first dive into a new language (be it Python or Java) while for others this was the first time actually setting up a database or a server.</p>\n<h2>What's next for journ\u00e9</h2>\n<p>A feature we are going to add is an \"explore\" option. This will display a map of the user's current location with any submissions in the nearby area. The user can then decide to check out the submissions in his area.</p>\n<p>Another feature we hope to implement is a timelimit for how long submissions stay visible (for example, after 24 hours all unopened submissions are no longer available). Along with this, the user can expand and view each image only once before it disappears forever. </p>\n<p>A third feature we see in journ\u00e9's future is to do with a store in the application. While the store is currently implemented, users are not yet able to purchase anything. Users currently collect points for submitting photos through the app. In the future, we plan to implement a store that will allow users to buy packs of stickers and filters for their photos with their points earned. There is also a possibility for monetization, where users can buy points that can be used towards the stickers and filters.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/love\">love</a></span></li><li><span class=\"cp-tag\">mariadb</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/michael-schwarz/echacks-project\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/michael-schwarz/echacks-project\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the frontend component of the app. This was my first time working on an Android app and I was able to learn a lot with the help of my teammates.", "", "", "", ""]], ["TheorEz", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"TheorEz \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/199/datas/gallery.jpg\"/>\n<p>\n<i>Path-Intergral function uses a Riemann sum to approximate the path integral and generate a visualization from accelerometer data.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"TheorEz \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/271/datas/gallery.jpg\"/>\n<p>\n<i>Regressions from sampled data.</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1><strong>TheorEz</strong></h1>\n<p><strong>A powerful computational physics suite for efficiently analyzing large volumes of experimental data.</strong></p>\n<p><em>TheorEz</em> takes computational physics to the next-level by identifying the correlation between real data sets and the underlying mathematical principles. It accompanies this data with an in-depth visualization of the experiment in the form of a 3-D Plot. This plot is calculated using an accelerometer and an approximation of a double path integral, to plot each step of the accelerometer's displacement. </p>\n<p>The program accepts easily-created data files which are run through our Regression Algorithm. This algorithm determines the proportionality between variables in an experiment and provides a constant coefficient, which usually cannot be derived without extensive experimental data. The program is also designed to interface with an Arduino to receive data. With these capabilities, <em>TheorEz</em> aims to increase efficiency in the field of computational physics with further applications in graphic design using Motion Plots.  <em>TheorEz</em> features parallel processing which makes it scalable and powerful, allowing users to crunch large data files in an efficient manner.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/kalebruscitti/Theor-E-Z\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/kalebruscitti/Theor-E-Z\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["ECG/EKG Simulator", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"ECG/EKG Simulator \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/255/datas/gallery.jpg\"/>\n<p>\n<i>App screen</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"ECG/EKG Simulator \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/318/datas/gallery.jpg\"/>\n<p>\n<i>Logo</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"ECG/EKG Simulator \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/440/066/datas/gallery.jpg\"/>\n<p>\n<i>website stuff</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to know how ECGs work, and if we could create an app that could do it, instead of the clunky amount of equipment needed to do it. Especially with the myriad of sensors out there that are slowly capable of doing more accurate and precise sensor readings of the human body.</p>\n<h2>What it does</h2>\n<p>It simulates the various heart sensors or leads, and tries to recreate the waves that show the heartbeat. We then use that to match with various description of known heart problems or blockages, and try to do a risk assessment for the user.</p>\n<h2>How we built it</h2>\n<p>We mainly generated custom waveforms, that can be matched to describe various heart conditions, there is also a bunch of regular waveforms to simulate the various people and their conditions.</p>\n<h2>Challenges we ran into</h2>\n<p>We didn't get heart rate sensors or the correct hardware (Raspberry Pi had wifi and connection problems), and frequent hardware crashes. So instead we decided to focus onto getting the main algorithms and design of the app.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>-First time working on a hackathon as a team of 4!</p>\n<p>-One of the first Trent teams to participate in ECHacks.</p>\n<h2>What we learned</h2>\n<p>-We learned to create an Android App</p>\n<p>-Interface database with Android App</p>\n<p>-Setting up a server with phpmyadmin, mysql, php, apache2</p>\n<p>-Learning how to do frontend development with Adobe Muse, Dreamweaver, and Bootstrap.</p>\n<p>-Work better as a team!</p>\n<p>-Cultivate better design skills.</p>\n<p>-Much more!</p>\n<h2>What's next for ECG/EKG Simulator</h2>\n<p>Adding an interface for Arduino or sensors so that people can actually measure their heartbeat, and use that to determine what their current heart condition is like, or if there are at any risk for any heart conditions.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mysql\">mysql</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/phpmyadmin\">phpmyadmin</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/muse\">muse</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://159.203.44.249/\" rel=\"nofollow\" target=\"_blank\" title=\"http://159.203.44.249/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>159.203.44.249</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Focused on creating the app, and making sure that it works on Android devices.", "", "", ""]], ["Connect ", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Imagine you\u2019re meeting someone for the first time. You\u2019d like to add them on your facebook,on your instagram, maybe even on your snapchat. Isn\u2019t it hugely inconvenient to open up each social media app and take down someone\u2019s username for each social app?</p>\n<h2>What it does</h2>\n<p>Connect is a web app that does the same for you in a simple click. Using google tone, our web app generates a sound to transfer a url from one person to another.This url is unique and includes all the usernames of all social apps the user may be on. So, with a simple click, you can transfer or receive a multitude of information. </p>\n<h2>How we built it</h2>\n<p>We built our user interface using HTML and CSS. We use PHP to generate links for each social media app, depending on the username input, and created a unique url and webpage for each user. We used simple text files to store our data, which included a username, password, and social media usernames.</p>\n<h2>Challenges we ran into</h2>\n<p>We initially used Django, SQLite and Python to store and encrypt the data, and generate urls. We also tried to use JavaScript to receive the data from the back end. However, communicating between front end and back end proved to be a challenge as Django isn't very well documented. We then switched to PHP which was relatively easier. However, communicating between action forms on front end and data bases accessed by PHP wasn't easy as we couldn't call our PHP functions directly onto our form input boxes. Instead, we called a url which called a PHP function and returned its value.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>None of us had dealt with back end before. Some of us were doing web development for the first time. We're proud of successfully generating and storing the data we needed to, despite the steep learning curve. </p>\n<h2>What we learned</h2>\n<p>We learned the importance of team work and cooperation. Since we were in a team of four and didn't clearly define our roles at the beginning, we ended up overlapping some of our work. This is when we organised ourselves, and allocated roles to members, according to the member's proficiency or experience or simple enthusiasm to learn a new language. \nWe also learned the power of simplicity. The complicated process of communicating data between front-end and back-end that we initially tried didn't improve our functionality much, compared to the relatively easier but effective way we ended up using.</p>\n<h2>What's next for Connect</h2>\n<p>In the future, we would like to expand this by making it into an android app. In addition to generating a sound to transmit the url, we would also like to use Near Field Communication. With this addition, the app can transmit the url if the user just taps his or her phone to the other\u2019s. \nAlso, as our users grow in number and our data base becomes larger, we would also like to move the data base from simple text files to perhaps MySQL, and use PHP to directly access values from it. We would also like to add functions, such as sending github portfolios, sending information such as work experience or skills, and generating a e-business card that could be transmitted to potential employers using NFC or Google Tone. This would help save paper, as we are essentially transmitting information that a resume and/or a business card would include. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/connecteasily/connect.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/connecteasily/connect.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://connect-easily-theroughcode.c9users.io/index.html\" rel=\"nofollow\" target=\"_blank\" title=\"https://connect-easily-theroughcode.c9users.io/index.html\">\n<i class=\"ss-icon ss-link\"></i>\n<span>connect-easily-theroughcode.c9users.io</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked both on front-end and back-end. This was my first time doing back-end and I learned PHP on the spot. I focused on generating links according to the username input and inserting/accessing data into/from the database. I also communicated the data from PHP to my form action page. I also styled some of the pages, such as the main profile page and the settings page. ", "This was my ever hackathon and my teammates were incredibly supportive throughout the event! I worked on the UI/UX and learnt HTML/CSS during the hackathon. I was able to execute a lot of what I learnt successfully but I'm looking forward to improve and add more finesse to my work!", "I worked mainly on the backend.  As I had little experience in this field, I had to overcome a huge learning curve in order to try and get a server running on AWS and getting our front end to speak with it.  I tried various methods and learned various tools, such as Django and SQLite.  Although we ended up going with PHP in the end, I feel that I've learnt a lot from this hackathon!", ""]], ["Chloris ", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Chloris  \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/256/datas/gallery.jpg\"/>\n<p>\n<i>Collecting a coin</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Chloris  \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/257/datas/gallery.jpg\"/>\n<p>\n<i>Finding a friend</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Drawing inspiration from released 2D &amp; 3D casual games, our team decided to make a fun and engaging game that promotes physical activity as well.</p>\n<h2>What it does</h2>\n<p>Chloris encourages a healthy lifestyle in users by making physical activity entertaining.</p>\n<h2>How we built it</h2>\n<p>We built Chloris using Unity, C#, and Android SDK</p>\n<h2>Challenges we ran into</h2>\n<p>The challenges we faced included: </p>\n<ul>\n<li>Downloading and installing Unity</li>\n<li>Avoiding and Handling merge conflicts while using git</li>\n<li>Coding a precise pedometer</li>\n</ul>\n<h2>Accomplishments that we're proud of</h2>\n<ul>\n<li>Despite the huge learning curve with Unity and Android SDK, we are pleased with the knowledge we gained as it has provided a wonderful learning experience.</li>\n<li>We successfully implemented a pedometer.</li>\n<li>We established cross-platform compatibility with Android and IOS.</li>\n</ul>\n<h2>What we learned</h2>\n<p>Being that it was all of our first time making a game, we established a basic foundation for development with Unity. This includes designing a scrollable background, effective use of sprites, random generation of user collectible coins, and deployment to the Android &amp; IOS platform.</p>\n<h2>What's next for Chloris</h2>\n<p>In the future we would want to accomplish the following:</p>\n<ul>\n<li>Produce our own assets </li>\n<li>Improve overall game performance</li>\n<li>Create a sand box environment to allow users to show off what they have collected </li>\n<li>Improve the pedometer with GPS </li>\n<li> Implement In-app purchases with collected coins </li>\n<li>Avatar customisation</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xcode\">xcode</a></span></li><li><span class=\"cp-tag\">csharp</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/RyanAbraham/Chloris\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/RyanAbraham/Chloris\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the game conversion from the Android to the IOS platform and also assisted with the front end development. As Electric City hacks is my first hackathon ever, I will say it was quite challenging but overall I had a memorable experience while learning how to use Unity and Xcode.", "I worked on the front end and this was my first time using both Unity and C#.", "I worked on the backend. I never worked with Unity before, but I was able to apply my knowledge of C-based languages to successfully get a functional pedometer working out of the Android's accelerometer.", "I worked on the front-end portion of this project. Like the others, I too have never worked with the Android SDK or Unity. My main contribution to the project was creating the UI for the game.  This included a scrolling background, a coins collected display area, and the use of sprites for a game avatar."]], ["Blocks", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Blocks \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/210/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>An article by Tim Urban explores the idea of representing ten minute periods with blocks, so that one's day to day tasks can be visualized and further organized using this concept of ten-minute blocks</p>\n<h2>What it does</h2>\n<p>Allows you select a certain amount of time which is converted in to blocks that acts as a timer where each block lasts for a duration of 10 mins </p>\n<h2>How we built it</h2>\n<p>Using Meteor.js </p>\n<h2>Challenges we ran into</h2>\n<p>At first, our plan was to make an iOS app. However, that plan fell apart due to the difficulty of the program XCode as well as the language Swift. So, we attempted to use a another tool called Meteor.js, which worked successfully at the end</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Getting the animation of dissapearing block to work in accordance with the timer function.</p>\n<h2>What we learned</h2>\n<p>The functionality of Meteor.js</p>\n<h2>What's next for Blocks</h2>\n<p>An iOS version of the app.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/meteor-js\">meteor.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://therealblocks-darktorin.c9users.io/\" rel=\"nofollow\" target=\"_blank\" title=\"https://therealblocks-darktorin.c9users.io/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>therealblocks-darktorin.c9users.io</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["werewolfBot", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>werewolfBot</h1>\n<h4>Commands for the werewolfBot</h4>\n<ul>\n<li><code>creategameroom</code> create a new game room and generate the <code>chatid</code>. The creator becomes the admin</li>\n<li><code>joinroom #chatid</code> join a game room  with the <code>chatid</code></li>\n<li><code>startgame</code> start a game (everybody can) and then the timer starts</li>\n<li><code>players</code> get a list of current players</li>\n<li><code>help</code> get info on commands, roles and how to play</li>\n<li><code>flee</code> drop from the game</li>\n<li><code>stats</code> get a link for stats</li>\n<li><code>chatid</code> gets the id of the group chat(room)</li>\n<li><code>forcestart</code> (Group Admin), start the game</li>\n<li><code>config</code> (Group Admin), set options for group</li>\n<li><p><code>smite</code> (Group Admin), kill players</p></li>\n<li><p><code>nextgame</code> bot will PM you when next game is starting</p></li>\n<li><p><code>ping</code> check bot reply time</p></li>\n<li><p><code>version</code> gets the current version</p></li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/heroku\">heroku</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/yixuanwang/werewolfBot\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/yixuanwang/werewolfBot\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["journ\u00e9 old please disregard ", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p><a href=\"https://devpost.com/software/journe-0mo4wg\" rel=\"nofollow\">https://devpost.com/software/journe-0mo4wg</a></p>\n</div>\n</div>", ["./."]], ["ScreenClean", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"ScreenClean \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/121/datas/gallery.jpg\"/>\n<p>\n<i>Sample image of Unity Platform / game map</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"ScreenClean \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/853/datas/gallery.jpg\"/>\n<p>\n<i>Sample image of C# script</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>As we were researching Trent University and Peterborough before arriving here on Friday night, we saw how much nature plays a big part of this town's image. My teammates and I really wanted to make this evident through our app, which focuses on getting people, especially the youth, more involved into keeping the world clean, and making the Earth a <strong>greener</strong> and more <strong>sustainable</strong> one for future generations. </p>\n<h2>What it does</h2>\n<p>ScreenClean is a simple single-player mobile game. The goal of the game is for the player to clean up the plot of grass, which has litter all around it. As the player progresses in the game and completes more levels, the number of obstacles present on the field increases, as well as the amount of litter. It is a fun, simple, and subtle way to motivate people to clean up after themselves, and keep their surroundings clean.</p>\n<h2>How the team built it + Challenges we faced</h2>\n<p>The way my teammates and I decided to build this app was through Unity, which is a game engine, which allowed us to style and create our application. Since it is our first time at a <em>real</em> Hackathon and our first time creating a game like this, there were a lot of things that we had to learn on the spot. As Unity was a new platform for all of us, it took us quite a while to get used to its features and tools. Familiarizing ourselves with Unity and deciding which methods and functions to use was probably the biggest obstacle our team faced. </p>\n<p>First, we created the playing field, where the player icon could move around and collect the trash from the ground. Then, we created the player icon on a separate layer. One of the bigger challenges we faced was setting the\nborder on the map, because otherwise, the player could just move off-grid and off the screen. It took us quite a while to get this to work, but fortunately, we solved this issue. \nAfterwards, we had to create the obstacles and the collectible trash items. Generating the trash icons in random\nlocations on the map was also another challenge our team faced. Getting the trash to disappear when the user \"picks it up\" was also quite difficult, but with enough reading and persistence, we were able to accomplish both these things.</p>\n<p>Once we finished the initial phase of creating an executable program, the rest was pretty simple. The team and I just had to tweak a few errors, and added some simple features (but with more time, more could definitely be added!) that would make the game a fun one for everyone.</p>\n<h2>Accomplishments that the Team is proud of</h2>\n<p>Learning Unity and getting used to it is definitely the accomplishment our team is proud of. We came into this Hackathon planning on creating a simple Javascript application, but we decided to take a risk learning a new platform to make the game more visually appealing and user-engaging. The fact that we were all able to contribute and see this application actually work <em>almost</em> the way we envisioned it is one of our proudest moments so far as new programmers. At every step of the way, just seeing each individual element of our program come to life in our simple game made this experience worthwhile and surely one to remember.</p>\n<h2>What we learned</h2>\n<p>Other than the obvious answers of the importance of teamwork and collaboration, our team learned that despite\nnot being the most experienced programmers present at this Hackathon, nor having the flashiest or most exciting program, just learning a new language and creating something simple and fun with it is what these Hackathons are for. This experience motivated us to keep coding, and stay curious to learn more. Being in the same place as many like-minded people inspires us that the future is bright for innovation, and keeps us hungry to keep learning as there is so much that we have yet to figure out in the world of hacking. </p>\n<h2>What's next for ScreenClean</h2>\n<p>As what we have finished currently is a rough version, there are many features that we would like to implement in the future. A timed mode, different themes and player icons, and other general user interface features, are some of the ideas that we discussed so far. The implementation of these features would allow a more user-friendly experience and greatly improve the functionality of the game.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/colinmarsch/ScreenClean\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/colinmarsch/ScreenClean\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the motion control of the player. This was my first time working with Unity and while it was difficult to get used to at first I was able to quickly become more comfortable with this software.", "I worked on the map generation and the interaction of game objects. It was my first time working with Unity, and although it was hard, I learned a lot about this game engine.", ""]], ["Resourceful", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Resourceful \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/118/datas/gallery.jpg\"/>\n<p>\n<i>Resourceful</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Resourceful \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/120/datas/gallery.jpg\"/>\n<p>\n<i>Facts</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Resourceful \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/122/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Resourceful \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/123/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Resourceful \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/128/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>As co-op students constantly living alone and on-the-go, we like to travel and try new delicious dishes. However, we got frustrated with all the food that was being thrown to waste. The main reasons why this was happening, as we found out, was because a lot of ingredients we bought were used once in a while, for very specific culinary dishes. </p>\n<p><em>You either throw it away, or restrict yourself to eating only asparagus sprouts for the rest of the month!</em></p>\n<p>France and Italy are among the first countries to pass a law that forbids food supply chains to throw out \"waste food\" (which is really not waste food). We decided that we could contribute to the growing movement, even if we do that by the means of a two-day hackathon invention - and so the idea for Resourceful was born.</p>\n<h2>What it does</h2>\n<p>Resourceful lets users look inside their fridge and simultaneously ask Amazon Alexa what dishes could be made with the products they have. Alexa then processes the given data and returns the best match to the user.</p>\n<h2>How We built it</h2>\n<p>First of all, we did a lengthy research on which food-related APIs to use, as there are dozens of them, and all return various things or require a considerable amount of time for approval. Then we picked out our needed software tools, which were Eclipse with Maven - to be able to deploy under a .JAR file to AWS.</p>\n<p>We started by building up from the endpoints of both parts to the program. When we had our Alexa Skill and our Edamam Requestor ready, we merged the two codebases, plugged the corresponding parts and deployed the entire thing to Amazon-Web-Services.</p>\n<p>Lastly, we made our code presentable and thoroughly tested the software by quizzing Alexa with various ingredients.</p>\n<h2>Challenges We ran into</h2>\n<p>All of us would agree that the hardest part of the project was the tiny but dangerous step of merging the code and deploying it to AWS. And to be frank, this tiny step took 50% of our hack time. We ran into problems that wouldn't have solutions or any kind of mention on forums, and we also ran into the infamous Java ClassNotFoundException. We had to dig very deep to find the solution to this problem.</p>\n<h2>Accomplishments that We're proud of</h2>\n<p>Getting AWS to work without the ClassNotFoundException! And getting the entire project to run on Java <em>even though Node.js would have been a much smoother process.</em></p>\n<h2>What We learned</h2>\n<p>That Peterborough is very proactive on recycling and preserving the environment!</p>\n<p>That we might have to plan ahead next time and request access as early as possible, if we decide to use third-party services.</p>\n<p>That it's always good to search for solutions to a problem where you least expect it... Especially with compilers and IDEs :)</p>\n<h2>What's next for Resourceful</h2>\n<p>We hope it helps <em>at least</em> one person to save food from wasting away.\nAnd we hope it helps people eat healthy, eat deliciously and eat ethically.</p>\n<p>We might consider taking Resourceful further, as we had some ideas for features we had to hold back for the hackathon.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-alexa\">amazon-alexa</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag\">edamam</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/maven\">maven</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/dmalataeva/echacks\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/dmalataeva/echacks\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the Edamam API usage, initial setup and configuration of Maven and AWS for our needs. (Also hustled JSON files like a pro).", "", ""]], ["TEmo Assistant ", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"TEmo Assistant  \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/561/datas/gallery.jpg\"/>\n<p>\n<i>TEmo Interface</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Statistics shows that people with depression feel alone and many times afraid to talk to other people about the situation. We want to help with this problem through the advancement of Brain-Computer Interface technology. We want to develop a system that can detect emotions based on individual brain wave signals. This can be used as a feedback system for mental illness patients, such as clinical depression. </p>\n<h2>What it does</h2>\n<p>Our project will use the Emotiv headband to detect EEG signals and display a person's emotion. TEmo starts by talking to the user by asking them about their day. Depending on the user's response, TEmo uses sentenmental analysis combined with EEG feedback from Emotiv to determine the next question. We want to establish a conversation with the user, and the end result would be an improvement of the user's mood. </p>\n<h2>How we built it</h2>\n<p>Emotiv Exavier Control Panel/Composer\nWatson speech to text recognition, sentimental analysis, text to speech API</p>\n<h2>Challenges we ran into</h2>\n<p>Emotiv examples from developer tool kit did not provide raw EEG data for analysis.\nWe had some problem running C code on Windows and software that pair with Emotiv ran into .dll issues because dependencies were missing. Watson's API was hard to figure due to authentication.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are tackling a problem which none of us had prior experience before (emotion detection) Emotiv API\nWe got most of functionalities working</p>\n<h2>What we learned</h2>\n<p>Leared to use Emotiv SDK\nLearned to use Watson, socket.io, nodejs</p>\n<h2>What's next for TEmo</h2>\n<p>Using machine learning for mood classification</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ibm-watson\">ibm-watson</a></span></li><li><span class=\"cp-tag\">speech-rec</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sentiment-analysis-online\">sentiment-analysis-online</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/emotiv\">emotiv</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/socket-io\">socket.io</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag\">text-to-speech</span></li><li><span class=\"cp-tag\">speech-to-text</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://mytemo.herokuapp.com/\" rel=\"nofollow\" target=\"_blank\" title=\"https://mytemo.herokuapp.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>mytemo.herokuapp.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Water Watch", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p><em>Water Watch</em> came to us when we first heard about the TD Best Green Hack category. We are all first timers here and don't have amazing skills, so we thought we could do something simple and creative, while at the same time staying environmentally conscious.</p>\n<h2>What it does</h2>\n<p><em>Water Works</em> keeps track of how long you spend in the shower and saves this data. It then uses this data to give you statistics about your water usage (e.g. average amount of water used per shower, how much more than the Canadian daily average you are using, whether you are increasing or decreasing your water usage, etc.) to help you keep track of your water usage while showering. </p>\n<h2>How we built it</h2>\n<p><em>Water Works</em> was built entirely in Python. It started off as an idea on paper, and we began to develop it by breaking it down into smaller pieces and assigning different pieces to different team members. Once we were each done our pieces, we put it together and began to piece it together and patch it up as a team.</p>\n<h2>Challenges we ran into</h2>\n<p>Creating responsive and usable GUI, ensuring there were no errors in any of the calculations or data manipulation, ensuring that all data going in and out of files was properly handled.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are proud that we were able to create the app in a way that all the data was properly utilized and provided useful statistics that really put into perspective how much water we are using every time we shower.</p>\n<h2>What we learned</h2>\n<p>We learned how to work within a team, and how to create GUI in Python.</p>\n<h2>What's next for Water Works</h2>\n<p>The next steps for Water Works is to port it on to a mobile platform, and create a web interface for it. We would also like to move all the data onto a database, and allow users to access their data from any device.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n</div>", ["", "", ""]], ["Event POP", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/wapftYbqt4A?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Event POP \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/892/datas/gallery.jpg\"/>\n<p>\n<i>Logo</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Innovation</p>\n<h2>What it does</h2>\n<p>Provides end users with an immersive 3D experience when they point their phone camera at an ordinary printed flyer! When pointed to the ad, the user sees a 3D video, linked with Facebook event pages. The user can even touch the ordinary printed flyer in specific spots (buttons) to have their phone open a specific browser page. </p>\n<h2>How we built it</h2>\n<p>We used Unity and Vuforia. Users uploading their logos and other promotional material do it on a website made with PHP HTML and CSS. </p>\n<h2>Challenges we ran into</h2>\n<p>Real time video display with Unity. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Building the AR app.</p>\n<h2>What we learned</h2>\n<p>(Naeem) Not to use a GitHub desktop client lol\nBasics of Vuforia.</p>\n<h2>What's next for Event POP</h2>\n<p>Linking our backend database with the AR app.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/vuforia\">vuforia</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/hnrytrn/ec-hacks\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/hnrytrn/ec-hacks\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"http://www.naeemb.com/ECHacks.html\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.naeemb.com/ECHacks.html\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.naeemb.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on creating the AR  environment using Unity and Vuforia.", ""]], ["PyVoiceControl", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"PyVoiceControl \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/436/599/datas/gallery.jpg\"/>\n<p>\n<i>Logo.</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We set out with the goal of being able to automate the tedious tasks that one does on a day-to-day basis. Really just the simple things that can just be done a lot more conveniently. This meant opening web pages, applications etc. Gradually, we realized that we had stumbled upon a great way to enable the differently abled to access computers. At this point, we began to prioritize the ease of use on part of the user. By incorporating an OCR, we were able to locate (and click) elements like buttons that traditional web page analyzers cannot. By the end, We had extended to the ability to control computer peripherals beyond just a mouse to the keyboard as well. To top it all off, we created a variety of \"voice-triggerable\" scripts that make computer usage even more of a breeze!</p>\n<h2>What it does</h2>\n<p>It is a voice control tool that allows the user to control their computer.</p>\n<h2>How we built it</h2>\n<p>Everything was programmed in Python. A simple script was used to handle mouse and keyboard controls. The GUI was created using Tkinter. The speech to text was generated using Google Cloud. The text to speech was generated with MacOS's built in terminal commands. The mouse tracking works by having the user say the text on the screen at which to move the cursor. The text is then search for by taking a screenshot and then running an OCR (with Tesseract) to find the exact locations. </p>\n<h2>Challenges we ran into</h2>\n<ul>\n<li>trouble with installing libraries</li>\n<li>OCR being too slow</li>\n<li>Google speech to text being too slow</li>\n<li>Parsing OCR data</li>\n</ul>\n<h2>Accomplishments that we're proud of</h2>\n<p>We worked with tools that we never used before. And everything mostly worked (although somewhat slowly). Overall, the project is intended as either an assistive program for those who need it, or a simple handy tool.</p>\n<h2>What we learned</h2>\n<p>We learned how to use many new tools.</p>\n<h2>What's next for PyVoiceControl</h2>\n<p>PyVoiceControl needs to be more user friendly and run more efficiently. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/tesseract\">tesseract</a></span></li><li><span class=\"cp-tag\">pil</span></li><li><span class=\"cp-tag\">pillow</span></li><li><span class=\"cp-tag\">pyautogui</span></li><li><span class=\"cp-tag\">gcloud</span></li><li><span class=\"cp-tag\">pyaudio</span></li><li><span class=\"cp-tag\">pip</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/TT1103/PyVoiceControl\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/TT1103/PyVoiceControl\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked mainly on the functionality of the voice control. This includes the keyboard and mouse controls, the OCR, and parsing the text data to usable commands (and subsequently running those commands). ", "I worked on the interactions between the GCloud API and the Python files. I was responsible for fetching the users input as audio and translating it into a string. Beyond that, I also worked on getting the initial python scripts to interact with the api calls. I also designed and deployed the GUI."]], ["Green Tips", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Morgan and his fervent passion and favouritism for the colour green. Also saving the world is kind of nice too, I guess.</p>\n<h2>What it does</h2>\n<p>Through a custom skill facilitated by Amazon Echo's very own Alexa, the user is enlightened by a plethora of informative 'Green Tips'. Upon triggering these series of specialized voice prompts, the user is also given condensed information on an Arduino console for visual reinforcement. All of the 'Green Tips' are located in a custom MySQL database that is accessible by both devices. In future iterations, we hope to transition into a seamless product that combines relays data through both streams concurrently.</p>\n<p>By educating consumers on the environmental impact of certain lifestyle choices and the necessity to make proactive decisions, we hope to make the world a little bit greener one Echo at a time. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-alexa\">amazon-alexa</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/adobe-illustrator\">adobe-illustrator</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mysql\">mysql</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/seanlee98/Green-Tips\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/seanlee98/Green-Tips\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://greentip.github.io/GreenTips.github.io/\" rel=\"nofollow\" target=\"_blank\" title=\"https://greentip.github.io/GreenTips.github.io/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>greentip.github.io</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["- Worked with Amazon Echo to create custom Alexa skill with Lambda function\n", "Development and integration of Arduino Display and Amazon Fire to Amazon Echo.", "I worked on HTML/CSS?JS website design, implementing PHP/MySQL database and idea brainstorming and helping out arduino man.", "I worked on the user experience and interactions with the Amazon Echo as well as front end development"]], ["GreenVR", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>The team</h1>\n<p>We're a group of grade 10 students. Our members include:</p>\n<ul>\n<li>Misha Larionov, who is at his 4th hackathon. His first was Hack Western II.</li>\n<li>Nicholas Carr, who is at his 3rd hackathon. His first was MasseyHacks II.</li>\n<li>Samyar Vahid, who is at his 3rd hackathon. His first was MasseyHacks II.</li>\n<li>Joey Chik, who is at his first hackathon!</li>\n</ul>\n<p>None of the team members have any previous experience with Unity3D, so this is a whole new experience for us.</p>\n<h1>Vision</h1>\n<p>Some people just don't know what to do with their trash. No matter how many signs you put up, people are always going to end up throwing their banana peels in the trash. Our team gets really annoyed by this problem, so we set out to create an affordable and immersive application for people to learn what to do with their trash.</p>\n<h1>Reasoning</h1>\n<p>We decided to build a VR app because we feel that people will better remember their experience if they experience it as an immersive game. At first, we considered using Oculus but then decided that this would be too prohibitively expensive to have any meaningful impact. We then decided to go with Google Cardboard because it's really easy to get and runs on most phones. With Google Cardboard, we can upload our application to the Play Store and have it instantly accessible to millions of users at no cost to them, without relying on our users having expensive hardware to run our app.</p>\n<h1>How we built it</h1>\n<p>We used Unity3D with the GoogleVR package. Our main code was written in C#</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag\">cardboard</span></li><li><span class=\"cp-tag\">google-vr</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li></ul>\n</div>\n</div>", ["Contributed 3D models, brainstormed idea. Moral support.", "Worked on textures and 3D models.", "Worked on the code to handle gaze gestures and spawn the garbage. Also worked on making the prefabs.", "I built most of the scene in Unity, helped with 3D modelling and edited gesture code"]]]