[[" Sir Mix-a-Drink", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/beb8vpS9_oM?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\" Sir Mix-a-Drink \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/421/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\" Sir Mix-a-Drink \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/767/datas/gallery.jpg\"/>\n<p>\n<i>Schematic</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We are all really good at mixing sodas and energy drinks.  While it's fun to have such skill, it gets tiring to have to constantly mix drinks for people at parties.  We created Sir Mix-a-Drink to free us up by becoming the perfect drink mixer.  </p>\n<h2>What it does</h2>\n<p>Amazon Echo listens for drink requests and relays them to Sir Mix-a-Drink who then combines ingredients in the proper quantities.</p>\n<h2>How we built it</h2>\n<p>Amazon Echo/Alexa, diaphragm pumps, and Particle Photon. The photon digital pins drive several NPN Transistors, which in turn power the Diaphragm pumps. A diode (we used an LED) is shunted between each of the motor terminals and the +12v rail in order to protect against transient voltage spikes due to motor inertia.</p>\n<h2>Challenges we ran into</h2>\n<ul>\n<li>Plumbing.</li>\n<li>We went through several sets of transistors. The first were not rated for the motor current, and the second were PNP instead of NPN due to a Datasheet mixup.</li>\n<li>Mysterious microcontroller failures.</li>\n<li>Plumbing.</li>\n<li>The javascript API for photon broke when used on Lambda.  We had to improvise. </li>\n<li>Did we mention plumbing?</li>\n</ul>\n<h2>Accomplishments that we're proud of</h2>\n<ul>\n<li>We made a voice controlled drink mixer in one weekend.</li>\n</ul>\n<h2>What we learned</h2>\n<ul>\n<li>We learned how to hook up all of our favorite hacking toys.</li>\n<li>We learned to just take the L's and move on.</li>\n<li>We learned that big W's can come after a long string of L's</li>\n</ul>\n<h2>What's next for  Sir Mix-a-Drink</h2>\n<ul>\n<li>More recipes ( from the cloud )</li>\n<li>More drink containers</li>\n<li>Level sensors and drink supply management</li>\n<li>Interactive menu with nutritional information</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">photon</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-alexa\">amazon-alexa</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/caffeine\">caffeine</a></span></li><li><span class=\"cp-tag\">diaphragm-pumps</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/nathanbreitsch/alexa-gapminder\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/nathanbreitsch/alexa-gapminder\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Developed Alexa voice control system and achieved integration with the Particle Photon.  Did a lot of plumbing and electronics procurement.  Made (questionable) architectural decisions and served as a voice of (un)reason(ability) within the team.", "Worked mainly on getting the electronics wired up and running, as well as creating circuits suitable for testing our code properly. Also coded most of the code used on the Particle Photon, including our string parsing algorithm for distinguishing orders.", "Worked on wiring and circuit design, and construction. Did a lot of plumbing and a lot of duct taping.", "Provided Hardware assistance- Circuit design, wiring, component selection, etc. as well as some construction and  microcontroller programming. "]], ["The Alumi-Moti", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"The Alumi-Moti \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/019/datas/gallery.jpg\"/>\n<p>\n<i>The Setup Itself!</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"The Alumi-Moti \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/221/datas/gallery.jpg\"/>\n<p>\n<i>Different Angle</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Our Inspiration was the Microsoft Kinect, we have implemented past motion detection software using said hardware. This time, we wanted to do something more basic but with <strong>better functionality and cheaper materials.</strong></h2>\n<h2>Our Hack detects movement and motion, and could be used as a mouse <em>or</em> a different kind of peripheral.</h2>\n<h2>Using a half cube aluminum/cardboard which acts as the variable capacitor. This is what <strong>detects</strong> the motion, using said principle of Electrical Engineering.</h2>\n<h2>Getting it to work and setting the <strong>Arduino</strong> at the correct Full Scale Voltage. Also, to not <strong>Short Circuit</strong> any terminals or wires. Those were only <strong>A FEW</strong> of the many problems we ran into.</h2>\n<h2>That we have a finished product, and this _ brings us a certain sense of _ <strong>Satisfaction</strong>!</h2>\n<h2>That <strong>PATIENCE</strong> is key because we had JUST enough time!!</h2>\n<h2>Perhaps implement recognizable motions to be able to _ right-click_ or <em>left-click</em>, which would take the functionality to another level!!</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/processing\">processing</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/open-library\">open-library</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Make-Magazine/3DInterface?files=1\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Make-Magazine/3DInterface?files=1\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://www.arduino.cc/en/Main/Software\" rel=\"nofollow\" target=\"_blank\" title=\"https://www.arduino.cc/en/Main/Software\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.arduino.cc</span>\n</a></li>\n<li><a href=\"https://github.com/Make-Magazine/3DInterface/tree/master/TicTacToe3D\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Make-Magazine/3DInterface/tree/master/TicTacToe3D\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on Capacitive plates, micro controller assembly code and java code for computer end. Worked both hardware and software of this project. We want to make it better by dividing each plates into four different plates. By dividing into smaller size plates, we will have the same surface are but reduce RC constant hence decrease the latency.  ", "I worked on building the hardware for the Alumi-Moti. I helped with the actual building of the project and the capacitor plates. They work similarly to how a touch screen works. Your hand motion is tracked by the disrupted energy. I also handled the business side of the project (ie presenting it, pricing strategies, comparing it to similar products) seeing as business is a passion of mine. Our team overall worked very well together and we all contributed a lot to the project. We all had vibrant personalities as well so it was easy to stay awake and keep ourselves entertained during our creation of this project. ", ""]], ["Browsvr", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/B8YqHTDvyRo?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Browsvr \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/552/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Browsvr \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/553/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Browsvr \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/554/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Browsvr \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/723/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Browsvr \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/755/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p><img data-canonical-url=\"http://i.giphy.com/MVr4mzIsz3xCM.gif\" src=\"https://res.cloudinary.com/devpost/image/fetch/s--zJCqNbkp--/http://i.giphy.com/MVr4mzIsz3xCM.gif\"/></p>\n<h2>Inspiration</h2>\n<p>The idea really came from a futurama where the internet is shown as something in virtual reality so we wanted to bring this alive so we could experience it for ourselves. </p>\n<h2>What it does</h2>\n<p>The browsvr includes an HTML5 rendering engine that outputs to a texture in Unity. This allows the user to view websites as a textured 3D object in virtual reality. It also allows for website owners to embed data for display in VR. In this example, the data is represented as a set of two cubes, but any Unity asset could be embedded into a website for viewing in Browsvr. </p>\n<h2>How we built it</h2>\n<p>Browsvr was created iteratively. First the rendering engine was applied to a surface that was set far enough away from the user to be legible, but still allow for the rest of the scene to be viewed. A 3D keyboard was then added, which allows for seamless interaction with the VR environment. The wrist-mounted keyboard was added afterwards, and then we added support for</p>\n<h2>Challenges we ran into</h2>\n<p>Integrating Unity, Oculus Rift, and Leap Motion is sometimes a painful experience. There were times when incompatibilities almost ruined the entire project, but many clever hacks and workarounds were discovered.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We were able to make a VR Internet in unity that we can interface with. When you sit in a chair and put that oculus it really takes you to a different world</p>\n<h2>What we learned</h2>\n<p>Virtual Reality is an incredibly powerful tool, but it has the potential to make people very motion sick. Keyboard input is not easy in VR.</p>\n<h2>What's next for Browsvr</h2>\n<p>Better website interaction. Using the fingers as pointers with which to drag the website canvas.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/oculus\">oculus</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/alexa\">alexa</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/leap-motion\">leap-motion</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/love\">love</a></span></li><li><span class=\"cp-tag\">sweat</span></li><li><span class=\"cp-tag\">blood</span></li><li><span class=\"cp-tag\">passion</span></li><li><span class=\"cp-tag\">motion-sickness</span></li></ul>\n</div>\n</div>", ["I made the framework for companies to use and customize our virtual reality browser to provide an engineered experience for their user base. All that's needed is the company to fill out a XML document listing the position, rotation, scale and prefab (3D model)/texture for the walls and they could have a customized room for each of their websites. I also assisted in developing the keyboard, UI, 3D environment and Leap Motion integration.", "General Unity / C# support. Comedic relief.", "Created the scene in Unity, wrote the scripts for connecting virtual keyboard inputs to the web browser. Worked on getting semi-realistic hand models working.", ""]], ["Remember", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/8WGbZKsCGwc?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Remember \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/759/datas/gallery.jpg\"/>\n<p>\n<i>Remember</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We all lose things. It's part of being human. However, we are steadily moving toward an age where we are no longer required to rely on our own faulty recall and recognition. Already the internet and cell phones have moved us into a state wherein digitally-assisted memory is the norm. With <strong>Remember</strong> we want to move that digitally-assisted memory into the physical space.</p>\n<h2>What it does</h2>\n<p><strong>Remember</strong> is an Amazon Alexa Skill that works in conjunction with webcams in your home to help you identify and locate your misplaced items.</p>\n<h2>How we built it</h2>\n<p><strong>Remember</strong> is written in node.js and go. The Alexa skill is written in node.js. And, running off a raspberry pi with webcams connected to it is a go script that causes the device to act as a local server for processing the surfaces visible to the webcams. Alexa sends a signal to the pi to take pictures of the surrounding area. This triggers the go script that takes the pictures, saves them if items have moved significantly, splices them into smaller pictures to increase fidelity, sends them to clarifai for item recognition, processes the returned JSON and stores the processed results in Firebase. The Alexa skill then gets the results from firebase and tells you where the item you're looking for is located, provided that it was within <strong>Remember</strong>'s vision.</p>\n<h2>Challenges we ran into</h2>\n<p>Hours upon hours of frustration and tears.</p>\n<h2>Accomplishments that we're proud of</h2>\n<ul>\n<li>Taking remote photos with our raspberry pi interface</li>\n<li>Writing our server code to interface with multiple apis</li>\n<li>Using Alexa to communicate to users the information gathered about the room by our hardware interface</li>\n<li>Making it work!</li>\n</ul>\n<h2>What we learned</h2>\n<ul>\n<li>How to create Amazon Alexa skills</li>\n<li>Using a raspberry pi as a piece of dedicated hardware with webcams for taking, storing, uploading, and processing images</li>\n<li>Working with Firebase</li>\n<li>Working with clarifai's api</li>\n<li>Lots of cool miscellaneous tech knowledge</li>\n</ul>\n<h2>What's next for <strong>Remember</strong></h2>\n<p>Our original plan was to integrate <strong>Remember</strong> with the nest cam, but we were unavailable to acquire the hardware at Spartahack. With the nest cam, <strong>Remember</strong> would be able to take a 360\u00b0 view of a room and process every visible surface for possible item locations. The increased quality of the photos, as well as the composite image processing, would make <strong>Remember</strong> better than you at finding your things.</p>\n<p>Furthermore, we'd like to increase accuracy and usability of the Skill, through additions to the functionality available to users of Alexa, with additions to supported phrases and abilities.</p>\n<p>Development of a mobile app and web interface to view stats about where your things are most often, and suggest possible locations for lost items. System tracks locations where items are lost and uses machine learning to help determine where you most often leave your items if the system can't detect them with its connected camera/s. This would be further integrated into the Alexa skill so users could ask <strong>Remember</strong> where it thinks their items could be.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/golang\">golang</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-alexa\">amazon-alexa</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/koltclassic/spartahack\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/koltclassic/spartahack\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://koltclassic.github.io/alexaremember\" rel=\"nofollow\" target=\"_blank\" title=\"https://koltclassic.github.io/alexaremember\">\n<i class=\"ss-icon ss-link\"></i>\n<span>koltclassic.github.io</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I developed the backend of the application, including implementing the hosting server, gathering/storing webcam feeds, integration with firebase and also co-develop implementation of the clarifai api for image tagging.", "Planned Alexa skill language and speech formatting. Worked on integration of firebase into Alexa.\nAssisted with the development of backend/go app integration with clarifai api and webcams.", "I worked on the development of the Amazon Alexa Skill and the integration of Alexa into the application ", "Website development"]], ["MUSEic", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/6IJjtJumdsg?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"MUSEic \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/540/datas/gallery.jpg\"/>\n<p>\n<i>MUSEic3</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"MUSEic \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/541/datas/gallery.jpg\"/>\n<p>\n<i>Over the shoulder</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"MUSEic \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/542/datas/gallery.jpg\"/>\n<p>\n<i>Close up2</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"MUSEic \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/543/datas/gallery.jpg\"/>\n<p>\n<i>Controlling the MUSEic</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"MUSEic \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/544/datas/gallery.jpg\"/>\n<p>\n<i>MUSEic2</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"MUSEic \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/545/datas/gallery.jpg\"/>\n<p>\n<i>Over the shoulder2</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"MUSEic \u2013 screenshot 7\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/546/datas/gallery.jpg\"/>\n<p>\n<i>Close up</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"MUSEic \u2013 screenshot 8\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/547/datas/gallery.jpg\"/>\n<p>\n<i>Over the shoulder3</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"MUSEic \u2013 screenshot 9\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/579/datas/gallery.jpg\"/>\n<p>\n<i>Screenshot</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Music is incredibly powerful and has the ability to speak to the depths of a person's soul. We wanted to find a more effective way to help people through emotional times and we thought that music would be the most effective way to do so. If we can help people more effectively cope with the lows of life, and fully enjoy the highs that life brings, we can make a positive impact to many people through the power of MUSEic.</p>\n<h2>What it does</h2>\n<p>MUSEic uses Muse headband, Myo armband, an Android application, and Spotify to help determine your current mood, the most appropriate music to play, and provide an immersive experience to play that music in order to help optimize a person's mood. </p>\n<h2>How I built it</h2>\n<p>We started off with the psychic portion of MUSEic, and dived into the fascinating signals that the Muse produced. Once we could get it to communicate with our laptops, we began to develop our app. We used the Android SDK's from Muse, Myo, and Spotify. The Muse detects our brainwaves that we analyze in order to determine what mood the user is in, the Myo allows us to wirelessly control music playback, and Spotify supplies us with an abundance of playlists and songs. </p>\n<h2>Challenges I ran into</h2>\n<p>Starting off trying to process all of the signals and determine which brain waves to use from the Muse was our first big challenge. Further along, we ran into problems of connecting 3 SDK's at the same time. Resolving dependencies was literally a living nightmare. However, we finally overcame then and successfully used all 3 SDK's to their full potential. UI was something we had a bit of trouble spicing up, as none of us had experience in Android Studio UI design before. This was more of a cosmetic issue, however, and doesn't affect functionality. </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We worked together as a team in order to bring a dream from an idea to a physical product. We split up the work, developed separate parts independently, and came together at the end to make a pretty well working Android app. We had an abundance of talent in our team, from idea developers to implementers, all of us had plenty to contribute to our app. </p>\n<h2>What I learned</h2>\n<p>Getting at least some sleep helps immensely with productivity. Being sleep deprived makes you much more prone to errors, and being more well rested allows you to not make as many mistakes. </p>\n<h2>What's next for MUSEic</h2>\n<p>We have a lot of very lofty goals that just weren't possible for us to accomplish within 36 hour, but we are happy with what we created!\nFirst , because musical preference is so unique to the individual and in order to increase the effectiveness of the music choices, we would want to create an algorithm similar to Pandora or Spotify, that tailors the musical choice to the specific individual, and also to learn more about how the individual responds to music so we can provide better and more personalized solutions to help optimize their mood.\nSecondly, we would allow individuals to create their own playlists and would be able to share and create joint playlists with friends. We know how important friends are to our wellness and we want to leverage that resource.\nThirdly, we would want to do more research to see if the MUSE band can detect a wider range of emotions so the treatment can be more than just the 2 variations of happy and sad that we could accomplished. Emotions like anger, stress, depression, loneliness, and anxiety (just to name a few) could be implemented for the emotional roller coaster that life takes us on. \nAlso, our User Interface could use some recreating. It is a rather simple interface, and creating a cooler, more advanced one with graphs, images, and icons will make our app provide a more user friendly and immersive experience.\nAdditionally, we had the idea of integrating our app with Amazon Echo, in order to provide a truly wireless experience, but we will have to wait until Amazon opens up more features to developers in order to fully harness this incredible tool.\nLastly, iOS development would be of great interest as well, since so many people use that platform as well. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/myo\">myo</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/muse\">muse</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/spotify\">spotify</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xml\">xml</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/iamktam/Muse-ic\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/iamktam/Muse-ic\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Completed Spotify and Myo integration. Worked on UI and testing. ", "", "", ""]], ["Employifai", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/hwE29xbYMSA?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Employifai \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/354/397/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Employifai \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/354/398/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Employifai \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/354/399/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Employifai \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/354/400/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<pre class=\"language-nolang\"><code>## Inspiration\nA lot of young students out there who do well in school don't realize out in the open they're Facebook really is.  That why me we made this app to help kids see what they really shouldn't have on Facebook and they go into the professional world. Our goal is to have people don't lose jobs they deserve.\n</code></pre>\n<h2>How we built it</h2>\n<p>We built mainly off of Firebase server as the back end. This is what connected all the programs. This than combined with the front end with our JavaScript server and ClarfiaAPI.</p>\n<h2>Challenges we ran into</h2>\n<p>The real challenges was getting the push and pull request from Python to Node JS to  the Web App. This is why it is so hard.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>The biggest acho</p>\n<h2>What we learned</h2>\n<p>We learned how to manipulate APIs and all sorts of web app, server-side and client-side, types of code. It was also one person on our teams first time learning.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/wert23239/Employifai\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/wert23239/Employifai\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I created the classification engine in python using Clarifai API.  I adjusted thresholds to optimize performance.", "Backend data management, wrote integrations with Facebook, Clarifai, and Firebase APIs.", ""]], ["NutriCam", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"NutriCam \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/365/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"NutriCam \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/366/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"NutriCam \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/367/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"NutriCam \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/368/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to make an app that would help people better manage what they eat. While apps for managing diet do exist, they're often difficult to use and require a lot of effort on the user's part; therefore, we wanted to create an app that would greatly expedite the process.</p>\n<h2>What it does</h2>\n<p>The app first prompts the user to create an account and sign in. Then, the user is taken to a page where they can either take a picture or view their previous food history. If they choose to take a picture, the camera starts, the user takes a picture of their food, approves it, and the picture is sent back to the app. The app then analyzes the photo to determine what food it is and then fetches nutritional data about the food, including a determination of if that food is overall healthy or not. The user can input whether or not they like that food item and the data is stored in the food history. Later, the user can ask for food suggestions and the app will output something they like based on past responses. </p>\n<h2>How we built it</h2>\n<p>We built the app using Android Studio, Clarifai API, Firebase, Wolfram Alpha API, Microsoft Azure, and Amazon Lambda. Android Studio is used to design and program all the functions of the app. The Clarifai API is used to analyze the objects in the picture and return tags of what was in it. The tags are then checked against a list of foods. Once the food in the picture is determined, the food is searched in the Wolfram Alpha and nutritional details are returned to the app, but also the machine-learning engine powered by Microsoft Azure. The machine-learning engine then compares the nutrition facts of the food to those previously known food. Using this comparison, the engine determines whether or not the user's food is overall healthy or unhealthy. The user can rank the food and their response is sent to Firebase. Firebase is where the user's food history and their food preferences are stored to generate suggestions later. Finally, Amazon Lambda is used to link the app to Amazon Alexa. The user can ask Alexa for food suggestions and then she will return suggestions from the user's food history.</p>\n<h2>Challenges we ran into</h2>\n<p>First, we ran into difficulty integrating the Clarifai API with the Android app. The tags weren't returning, which is a crucial function for every aspect of the app. With some re-structuring of the code, the app started outputting the tags and we could focus on the other functions. Another challenge we ran into was reading the file with all of the foods in it. Eventually, the file was scrapped and the strings of all the food names were just put into an array. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We're proud of the fact that we made an entire Android app that is functional! We're also proud of all the different elements that work together to give the user good results. The Clarifai API correctly identifies each food item, Wolfram grabs that food's nutrition info, Firebase saves the user's food taste, and Azure figures out if that food is healthy or not. All of this together creates an easy and helpful experience for the user!</p>\n<h2>What we learned</h2>\n<p>While we were developing the app, we learned a lot! We learned more about Android App development, how to implement the Clarifai API to identify objects in pictures, and how to build a machine-learning engine in Azure. </p>\n<h2>What's next for NutriCam</h2>\n<p>In the future, we hope to expand NutriCam's ability to identify food by adding more foods to the list. Additionally, we would like to give the user the ability to view their food history; the button is there, the functionality just needs to be added. While NutriCam already has a lot a functionality, there's room for more!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/wolfram-technologies\">wolfram-technologies</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/azure\">azure</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-alexa\">amazon-alexa</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/kcattakcaz/NutriCam\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/kcattakcaz/NutriCam\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Quizlexa", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Among Quizlet's other forms of using flash cards, we decided to explore auditory learning with them.</p>\n<h2>What it does</h2>\n<p>Choose and add Quizlet sets using a web application, where you tag them with keywords, and you can ask Alexa to read you one side of a card and have you decide which of two choices is the other side.</p>\n<h2>How we built it</h2>\n<p>We divided into two groups; one group dealt with the web app and one person dealt with interfacing with Alexa. The app group was responsible for a UI and uploading the flash card sets onto Firebase in a format usable for the Alexa team. The Alexa team was responsible for interpreting voice inputs, and using those inputs to access the different sets that were on Firebase. It took a lot of reading through the documentation, especially for the Alexa team.</p>\n<h2>Challenges we ran into</h2>\n<p>The majority of our challenges were correctly interfacing with the Alexa, but there were also some issues in formatting data sent to Firebase.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Our hack has two independent parts, separately designed, that work with each other very well and without issues.</p>\n<h2>What we learned</h2>\n<p>One of the biggest things we learned were interfacing with any variety of APIs, and the fact that even big companies have <em>very</em>  accessible developer tools that anybody can use.</p>\n<h2>Getting the webapp</h2>\n<p>Go to ajusa.github.io/Quizlexa/www/. For whatever reason, devpost thinks the link is invalid, so we added it here.</p>\n<h2>What's next for Quizlexa</h2>\n<p>We don't know! Perhaps the ability to work through a set of cards at one time a bit more seamlessly, without having to worry about repeated questions. Also, we're excited to see if dynamic slots are something that Amazon adds to their Alexa API.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag\">async</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag\">riot.js</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/apache\">apache</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ionic\">ionic</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-alexa\">amazon-alexa</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/quizlet-flashcards\">quizlet-flashcards</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/theewok629/quizlexa_skill\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/theewok629/quizlexa_skill\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/Ajusa/Quizlexa\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Ajusa/Quizlexa\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I wrote all of the code used by Alexa: to listen to your requests, access index cards from the database, generate questions, and ask them to you.", "I wrote all of the frontend, using quizlet's api, and created an Android app that could interface with Firebase. The app is a cross-platform Cordova application. ", "This project was more of a learning experience than a hands-on one for me. I helped with design and problem solving when it was needed but mainly asked questions regarding what they were coding, helping where I was able to.", "Rather than being a hands on developer of the application, I focused more on designing and testing the app. "]], ["Ekko eSports: VR Soccer", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/hHZEmpGAT6Y?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n</ul> </div>\n<div>\n<h2>Why</h2>\n<p>We made both separately, then decided to integrate them</p>\n<h2>What it does</h2>\n<p>The VR soccer allows you to play 1v1 soccer in VR against another person with the same setup. The Alexa hack adds esports integration into the Echo. We added a bit of overlap that you have to see to believe.</p>\n<h2>How we built it</h2>\n<p>No idea</p>\n<h2>Challenges we ran into</h2>\n<p>The fact that the Firebase Unity Plugin is in \"Alpha\" and was released 2 1/2 months ago</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Works</p>\n<h2>What we learned</h2>\n<p>Teen = Team, alpha.......plugin</p>\n<h2>What's next for We'll come back to this later</h2>\n<p>Possible continuation of development on the Alexa side of things. Not much for VR soccer, just a fun thing to make during a weekend</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n</div>", ["", "", "", ""]], ["Intellivision", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/iRUbMPbqw1Y?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Intellivision \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/590/datas/gallery.jpg\"/>\n<p>\n<i>Login for Android Phone app</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Intellivision \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/550/datas/gallery.jpg\"/>\n<p>\n<i>Android Phone APP UI</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Intellivision \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/573/datas/gallery.jpg\"/>\n<p>\n<i>Histograms </i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Intellivision \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/151/datas/gallery.jpg\"/>\n<p>\n<i>Android App</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Intellivision \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/152/datas/gallery.jpg\"/>\n<p>\n<i>Google Glass App</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Smart eye wear is the next break through in wearable technology (considering Google's interest in Project Aura). Getting live information about we are seeing and learning from it sounds interesting and fascinating - Tony Stark anyone?</p>\n<p>The inspiration for this project is centered around Google Glass and the Clarifai API. We knew that the image-capturing hardware and software built into Google glass was a natural fit for Clarifai API and that this combination could have a very universal application if implemented correctly. Intellivision is an effortless way to generate search results from live images without actually entering any text. After developing this idea, we realized we could take this project to the next level by adding support for Myo hardware. Myo acts as a peripheral for Intellivision and further enhances the user's experience while using Google Glass. Throughout Spartahack, our mission has been to make the process of converting live images into useful searches as effortless as possible.</p>\n<h2>What it does</h2>\n<p>The project has both an Android phone app as well as Google glass app.\nIntellivision is a live augmented reality image tagging android application using Google Glass and MYO band. Whatever you see around with Google Glass on will be added with a list of tags using Clarifai app. The application offers a rich shopping experience by taking you to Amazon when a tag is clicked. You can operate it all with MYO - just flick your wrist! Apart from Google Glass app, the android phone app provides the same experience plus personalized tags using anlalytics on Firebase. It gives you histograms showing which tags you searched more. </p>\n<p><em>Ok glass show me a demo</em></p>\n<h2>How I built it</h2>\n<p>The Android application was built with Android Studio using Firebase as its back-end for user authentication and analytics. The Google Glass app was created using the GDK + Android Studio. Myo functionality was also implemented in Android Studio. Intellivision uses Clarifai API to retrieve tags for the images sent from Android and Glass.</p>\n<h2>Challenges I ran into</h2>\n<p>There will very little developer support available for Google glasses. Also to get the right SDK to get the development on Google glass started was one big challenge.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Well yay! Everything works. We hit each of our initial goals despite running into countless roadblocks along the way. Each time we had a major issue implementing one of the features (Clarifai, Myo, Glass, etc etc) we felt like giving up but each time one of our members came through and pushed the rest of us to completion! We worked together as a team, especially considering the fact that we did not know each other 36 hours ago!</p>\n<h2>What I learned</h2>\n<p>This was our first time working with technologies like Firebase, Clarifai, Myo, and Google Glass. We learned to develop with novel SDKs such as Glass GDK, Myo's Android/Glass companion, as well as new platforms. We also had the opportunity to introduce a completely new feature to Android.</p>\n<h2>What's next for Intellivision</h2>\n<p>Intellivison will grow with the enhancement of Clarifai API. There will be new additions to the API with the improvement in present outputs.</p>\n<ol>\n<li>We also want intellivison to be personalized for users. We will store the tags specific to each user and implement machine learning approach to give a personalized experience. </li>\n<li>The Google Glass has immense potential for the blind. Ironic right? The tags can be translated into speech easily to give the blind user a live experience of his surroundings. </li>\n</ol>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-glass\">google-glass</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/myo\">myo</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/ishub/intellivision-myo\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ishub/intellivision-myo\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Assisted with the creation and planning of the Google Glass and Android app. The hardest part was definitely using Myo with Google Glass!", "", "", ""]], ["wake", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/I5W_XkzUiRk?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"wake \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/354/836/datas/gallery.jpg\"/>\n<p>\n<i>1 - Intro</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"wake \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/354/751/datas/gallery.jpg\"/>\n<p>\n<i>2 - Application Home</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"wake \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/354/752/datas/gallery.jpg\"/>\n<p>\n<i>3 - Initial Blank Screen</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"wake \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/354/746/datas/gallery.jpg\"/>\n<p>\n<i>4 - Alarm Edit Screen</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"wake \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/354/747/datas/gallery.jpg\"/>\n<p>\n<i>5 - Shake Alarm Screen</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"wake \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/354/748/datas/gallery.jpg\"/>\n<p>\n<i>6 - Run Alarm Screen</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"wake \u2013 screenshot 7\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/354/750/datas/gallery.jpg\"/>\n<p>\n<i>7 - Settings Screen</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p><a href=\"https://youtu.be/I5W_XkzUiRk\" rel=\"nofollow\">UI Demo Video (Scenes shortened for brevity)</a>.</p>\n<h2>Inspiration &amp; What it does</h2>\n<p>If you've ever hit the snooze button again and again and again only to realize hours later that you should have been up long ago, then you've felt the pain that we have felt. Driven by the need for an alarm that genuinely got us up, we set out to create wake. </p>\n<p>The app itself is simple. Instead of tapping or sliding a button to disable it, the user must get out of bed and walk a certain distance away to disable the alarm or vigorously shake the alarm for twenty-seconds. These physical triggers engage the user in a way that alarms have not done in the past. Leveraging the GPS and Accelerometer features of modern smartphones we created wake. Additionally, typical snooze features enable users to form bad habits by continuously snoozing an alarm. Instead, wake provides a unique form of negative reinforcement. Users can choose to enable or disable the snooze feature, but there's a catch. The snooze feature must be linked to the user's bank account, and every snooze donates a pre-set amount of money to an entity of the user's choice, such as a charity or political campaign.</p>\n<h2>How we built it</h2>\n<p>The application was built in Objective-C for iOS devices. We leveraged iOS\u2019s NotificationCenter, AudioToolbox, AVFoundation, CoreLocation, and CoreMotion frameworks to implement all the features for this application. We integrated <a href=\"plaid.com\" rel=\"nofollow\">Plaid\u2019s</a> API for payment processing.</p>\n<h2>Challenges we ran into</h2>\n<p>Due to some of iOS\u2019s restrictions, setting the alarm to trigger at a certain time and forcing the user to only use the app was technically impossible. So we could only display a notification for the user to open the app in order to disable the alarm. Additionally, the UILocalNotifications that we used for the event triggers were uncooperative and sometimes would not fire \u2014 so we also built a standard timer to alleviate this issue.\nUnfortunately, due to the lack of an Objective-C wrapper/library for Plaid, we were unable to complete integrating their payment processing system.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We were proud of the UI animations, flow, and functionality of the app. We wanted to make the app not only be functional but also to look/feel great. (Watch <a href=\"https://www.youtube.com/watch?v=I5W_XkzUiRk\" rel=\"nofollow\">the video demo</a>! (Some interactions shortened for brevity.))</p>\n<h2>What we learned</h2>\n<p>We learned that making a alarm application was not as simple as we thought and that working with AutoLayout (through code) could be very painful at times.</p>\n<h2>What's next for wake</h2>\n<p>We will attempt to finish integrating the Plaid payment processing system and releasing wake to the app store.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/objective-c\">objective-c</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sketch\">sketch</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://getwakeapp.com/\" rel=\"nofollow\" target=\"_blank\" title=\"http://getwakeapp.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>getwakeapp.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Lifeline", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Lifeline \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/596/datas/gallery.jpg\"/>\n<p>\n<i>Lifeline</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>Inspiration: Alexa and the Amazon Echo have revolutionized households across the world. In the short year and half since its introduction, people are already seeing how much it can do for them. However, the best thing Alexa has to offer is its amazing ability to help those that need it the most. From wounded veterans to the elderly, Alexa can make their day to day struggles just a little bit easier, and their lives, safer. With Lifeline, a veteran and his loved ones can rest easy, knowing that help is only a phrase away. With Lifeline, a disabled child can stay at home alone, with the ability to reach her parents in an instant. With Lifeline, those who were most restricted can experience worry-free independence like never before.</p>\n<p>What It Does:\nAllows for wounded, disabled and elderly people to use Amazon Echo to alert (text message/call) their emergency contacts when in danger.</p>\n<p>How We Built It:\nWe used HTML and CSS to build the website used for user registration and inputting emergency contact information. We then used Javascript to take the input and store them into a database through Firebase. We also used Firebase for other aspects of user management such as profile modification and authentication. We ended up using Azure for our hosting.</p>\n<p>Challenges We Ran Into:\nWe were originally going to use Microsoft Azure for our Database, but we were unable to implement the back end through Azure so we dropped the idea. </p>\n<p>Accomplishments That We Are Proud Of:\nFor all four of us, this was our first time submitting a project at a hackathon. Initially, we weren\u2019t confident in our ability to deliver a finished product in such a short timespan. However, through the steep learning curve, the unexpected challenges and a severe lack of sleep, we managed to persevere.  In the end, we did a lot more than just deliver a finished product, and we can proudly say that we are on the way to changing life for thousands of people.</p>\n<p>What We Learned:\nWe learned how to develop for the Amazon Echo with Alexa Skill Kit, host a website with Azure, and link it to a Firebase database. Although we were unable to implement Azure for database, we still learned a lot about developing on it. </p>\n<p>What\u2019s Next For Lifeline:\nReleasing the \"skill\" (app) to the Amazon Echo Skill Store </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-alexa\">amazon-alexa</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/azure\">azure</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Lifeline-spartahack2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Lifeline-spartahack2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"http://lifeline-app.azurewebsites.net\" rel=\"nofollow\" target=\"_blank\" title=\"http://lifeline-app.azurewebsites.net\">\n<i class=\"ss-icon ss-link\"></i>\n<span>lifeline-app.azurewebsites.net</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on all of the Amazon Echo/Lambda code, so that our app could communicate to people.", "I designed the logo and worked on Front-End development, specifically working on the login page using HTML, CSS, JS.  I also worked on setting up the firebase database. ", "I worked on the front end and created the login, register and modify user pages using html, css and js. After doing so, I used Firebase to develop various aspects of user management such as a user database, user authentication, and profile modification.", "I worked on the Azure SQL Database Server and set up the Azure Web App. I also helped out with the Firebase development. "]], ["Flappy Rift", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Flappy Rift \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/229/datas/gallery.jpg\"/>\n<p>\n<i>In Game</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Flappy Rift \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/230/datas/gallery.jpg\"/>\n<p>\n<i>Game over </i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Flappy Rift \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/231/datas/gallery.jpg\"/>\n<p>\n<i>Start Menu</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We really, really wanted to work with the Oculus Rift. None of us had used this before.</p>\n<h2>What it does</h2>\n<p>We created a 3-Dimensional version of Flappy Bird.</p>\n<h2>How we built it</h2>\n<p>We used the game development IDE called Unity to develop on the Oculus Rift.</p>\n<h2>Challenges we ran into</h2>\n<p>Troubleshooting the Oculus Rift. We initially tried it on 2 different Macbooks only to realize that El Capiton was no longer officially supported and because of this we could not use the positional tracker. Then we tried it on one of team members Surface Pro 3 and found out that the Surface was not able to power the Rift. Eventually, we ended up bringing in one of our own desktops which made it possible to render what was being displayed on the Rift. None of us had any prior experience with game development. We also had to find workarounds for functions that Unity has but does not support for the Rift.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are very proud of the fact that we got a game running with no prior knowledge of Unity, especially since we were able to incorporate the Oculus Rift. We all played a different part and were able to bring everything together and make a functional game.</p>\n<h2>What we learned</h2>\n<p>We learned about game development with Unity.</p>\n<h2>What's next for Flappy Rift</h2>\n<p>We intend to put this up on a web site and improve visuals.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/oculus-gear-vr\">oculus-gear-vr</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag\">red-bull</span></li></ul>\n</div>\n</div>", ["", "", "", ""]], ["Story Time", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Story Time \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/063/datas/gallery.jpg\"/>\n<p>\n<i>Turn this into Alexa's soothing voice</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We were thinking that it would be a great skill for Alexa to be able to read lines or speeches to someone who was preparing for a play or needed to memorize a speech. We quickly realized that this skill would be even more useful if Alexa could read <em>any</em> form of text.</p>\n<h2>What it does</h2>\n<p>Story Time enables users to take photos from their iPhone, send them through project oxford for text extraction, and finally have Alexa read these \"books\" back to the user. Alexa can now read bedtime stories to children, novel excerpts to adults, and any pictures of text to any user. Or the children can listen to the novels and the adults to the bedtime stories. Whatever floats their boats.</p>\n<h2>How we built it</h2>\n<p>It starts with an iOS app extension that enables users to select any photos on their iPhone from the contextual photo menu. These photos are sent to Microsoft's Project Oxford API, which performs optical character recognition on the photos and returns the result. The photos themselves never even have to be hosted anywhere. The OCR results are parsed into sentences and pages of a \"book\" created from the selected photos. These pages are then uploaded to a Firebase blob for later retrieval by Alexa. When prompted, Alexa can read from any of the books the user has uploaded to their personal library.</p>\n<h2>Challenges we ran into</h2>\n<p>Learning how to work within Alexa's framework was challenging because neither of us had worked with ASK before or really knew the ins and outs of Alexa's capabilities.</p>\n<p>Creating the iOS extension was the most challenging by far, though, because neither of us had used Swift before. It was challenging to make the non-trivial networking requests to APIs while trying to figure out which thread the requests needed to be on and how to parse the results. We're not sure we really like XCode.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>However, we overcame all those challenges (mostly through repeatedly banging our heads on the desk) and were able to make an end-to-end usable product! It has OCR! It has voice interaction! It can take a picture of several pages in a book and read it to you! This Alexa skill is seriously useful to myself and anyone else who has found that they want to continue reading a book while in the shower. Or a hot tub. Or while eating buffalo wings.</p>\n<h2>What we learned</h2>\n<p>We learned how to write iOS extensions, program in Swift, use Project Oxford, and make a useful Alexa skill. Neither of us had done any of that before. I had learned how to use Firebase just last week, but besides that, the tools were new to us.</p>\n<h2>What's next for Story Time</h2>\n<p>It would be natural to extend Story Time by providing more options to upload books to a library. PDF support would be a great addition. Alexa already supports reading from Kindle books and audio books. Story Time's extension of that to any text in any picture really rounds out her skills and utility in that department.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-alexa\">amazon-alexa</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/microsoft-project-oxford\">microsoft-project-oxford</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ios\">ios</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["QuackCryption", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"QuackCryption \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/347/datas/gallery.jpg\"/>\n<p>\n<i>Android App Screenshot</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Rubber duck debugging! Two of our members have large rubber ducks for use in debugging and we came up with a custom encryption scheme. </p>\n<h2>Description</h2>\n<p>QuackCryption is a novel approach to data structures, app development, and encryption by four, 2nd-semester Purdue University computer science majors. In essence, either text or a file is inputted (along with maybe a passphrase of the user's choosing), the text is encrypted using 128-bit AES (in CBC mode), and then that text is then converted into 'Quack' code. The data encrypted can be decrypted back to its original form, bit-for-bit. This software is open source.</p>\n<h2>How we built it</h2>\n<p>Primarily in Java (IntelliJ for desktop and backend, Android Studio for Android app) with JavaScript for the web app.</p>\n<h2>Challenges we ran into</h2>\n<p>Converting files into quacks (essentially creating a data structure) was extremely difficult as we had to read in data one byte at a time. File structures were not very intuitive to work with. Maintaining file name across encryption/decryption was extremely arduous. </p>\n<p>Documenting and standardizing one data structure (the .quack data structure) across all of the platforms was extremely difficult. </p>\n<p>Java's Swing package was extremely difficult to work. </p>\n<p>The web app is mostly non-functional. It works to some extent (text can be quacked and unquacked across sessions) but is not interoperable across other QuackCryption products.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>It legitimately works!</p>\n<h2>What we learned</h2>\n<p>Java's Swing package, graphic design, AES encryption, and data structures/encrypted data structures.</p>\n<h2>What's next for QuackCryption</h2>\n<p>Convert to LLC, change world, sell out to Google. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag\">aes</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://www.kevindong.net/QuackCryption/\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.kevindong.net/QuackCryption/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.kevindong.net</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I designed the '.quack' encrypted data structure and implented it into the backend. ", "I worked on the backend, the web app, and was the general debugger. I also built the website. ", "I made the Android app and did the graphic design for the app.", "I worked on the Desktop App and the backend. I also built the GUI for the Desktop App."]], ["isplutoapla.net", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"isplutoapla.net \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/354/352/datas/gallery.jpg\"/>\n<p>\n<i>isplutoapla.net</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to make the greatest punniest domain of all time.</p>\n<h2>What it does</h2>\n<p>It tells you if pluto is a planet.</p>\n<h2>How we built it</h2>\n<p>Good ol' HTML</p>\n<h2>Challenges we ran into</h2>\n<p>The FTP system on domain.com</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Getting the site to actually post.</p>\n<h2>What we learned</h2>\n<p>Web development is a little more involved than you would think.</p>\n<h2>What's next for isplutoapla.net</h2>\n<p>Unless Pluto's planethood status changes again nothing.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://isplutoapla.net/index.html\" rel=\"nofollow\" target=\"_blank\" title=\"http://isplutoapla.net/index.html\">\n<i class=\"ss-icon ss-link\"></i>\n<span>isplutoapla.net</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["gitAnalyzed", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/IUL3SKjmUtI?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"gitAnalyzed \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/269/datas/gallery.jpg\"/>\n<p>\n<i>Landing Page</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"gitAnalyzed \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/270/datas/gallery.jpg\"/>\n<p>\n<i>gitAnalyze a user</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"gitAnalyzed \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/271/datas/gallery.jpg\"/>\n<p>\n<i>Rank users by skill</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to build an app that allows for companies to find developers with specific skills. Often it is not sufficient to look at a resume and see who has real exposure in a particular language or framework, so we created a tool to easily search by skill and enjoy quick and visually appealing access to developer's projects. </p>\n<h2>What it does</h2>\n<p>On gitAnalyzed, the landing page provides two options: search for a GitHub user by username, or search for a developer with a particular skill. \nWhen a user is searched by name, his or her analyzed data is inserted into the database and visually displayed via d3.js, with on-click functions to provide a breakdown of the repositories for that specific language. If interested, a recruiter can also click a specific repository to check out the source code on GitHub. \nThe other option is to search for a developer via a particular skill. This keyword search queries the database for developers with that skill, as well as sorts them to provide a list of the most experienced developers with the given technology. On click of a developer, the user data is visually represented to the recruiter as in option 1.</p>\n<h2>How I built it</h2>\n<p>We built this web application using the MEAN stack (MongoDB, Express, AngularJS, NodeJS) on Heroku.\nWe used a MongoDB database to hold the information of every user searched so that we could allow users to \"search by skill\" later.\nWe used the GitHub API to pull raw data about user repositories and commits, so that we could perform some analysis.\nWe used D3.js for the data visualization (pie chart).\nWe used AngularJS as a front-end framework, and NodeJS with Express for the server-side language. \nA few of the Node modules we utilized during development: body-parser, HashMap, requests, mongojs.</p>\n<h2>Challenges I ran into</h2>\n<p>In order to perform analysis based on individual commits to each repository, we would have had to send N GET requests for every repository, where N is the number of commits. Since we only used basic authentication, our API requests were fairly limited and that was an unfeasible task. Also, it was a challenge to figure out exactly how to represent data in the DB, in order to efficiently query and sort developers by skill. The front-end, since it was built without any templates, was a bit of a challenge to make look how we wanted.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We are proud that we started Friday night without any idea how we were going to implement the application, and approximately 30 hours later we have a functioning gitAnalyzer with some real data. We learned how to use several new technologies in a time crunch, and came out with a great-looking and handy tool.</p>\n<h2>What I learned</h2>\n<p>We learned how to use D3 with AngularJS, and bring together a lot of different technologies to make a cool and useful web app.</p>\n<h2>What's next for gitAnalyzed</h2>\n<p>We would like to add more information to a person's gitAnalyzed profile (like their number of commits per repository, commit messages, stars, etc) and also provide the ability for a developer or company to Log In and create a profile. We could implement a developer being able to specify that he or she is interested in job opportunities, and companies could potentially reach out if interested. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/angular-js\">angular.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag\">github-api</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://gitanalyzed.herokuapp.com\" rel=\"nofollow\" target=\"_blank\" title=\"http://gitanalyzed.herokuapp.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>gitanalyzed.herokuapp.com</span>\n</a></li>\n<li><a href=\"https://github.com/johnmryan/gitanalyzed\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/johnmryan/gitanalyzed\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Anna and I worked together on full-stack development of the web application: provisioning DB, server-side Node/Express, AngularJS, and HTML/CSS.", ""]], ["Hi World!", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Hi World! \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/074/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Hi World! \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/145/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to create a product that helps encourage children's curiosity, especially by using images. The idea came from kids going to a zoo and just wanting to know what everything was. We help provide them with information in an easy and kid-friendly way</p>\n<h2>What it does</h2>\n<p>For our application, the child just has to provide us with an image link and we provide them with information (definition, fun facts) in an easy to use link so they can learn more in a smaller amount of time.</p>\n<h2>How we built it</h2>\n<p>We created the website in HTML/CSS and the APIs and web scraping in Python. </p>\n<h2>Challenges we ran into</h2>\n<ul>\n<li>Trying initially to create it in an android app (failed to build the environment)</li>\n<li>Use Python's RESTful API framework and passing data to the front-end.</li>\n</ul>\n<h2>Accomplishments that we're proud of</h2>\n<ul>\n<li>Finished our project and put it to the demo stage.</li>\n<li>Decent UI Design<br/></li>\n</ul>\n<h2>What we learned</h2>\n<ul>\n<li>We used about the versatility of Clarifai's API</li>\n<li>Python CGI, jQuery, Ajax, send HTTP request and retrieve data</li>\n</ul>\n<h2>What's next for Hi World!</h2>\n<ul>\n<li>Upload image</li>\n<li>Video frame catching and content recognition.</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ajax\">ajax</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/linux\">linux</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/apache\">apache</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag\">liquidweb</span></li><li><span class=\"cp-tag\">liquid-web</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://discoverworld.me\" rel=\"nofollow\" target=\"_blank\" title=\"http://discoverworld.me\">\n<i class=\"ss-icon ss-link\"></i>\n<span>discoverworld.me</span>\n</a></li>\n<li><a href=\"https://github.com/alonso134/HiWorld-WebApp\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/alonso134/HiWorld-WebApp\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Front-end programming (HTML+CSS/jQuery/AJAX) and UI design", "Lead programmer working on the backend, web crawler and API", "Software Framework Designer. (Helped design Hi World's back end framework). Helped develop mobile app.", ""]], ["Euphony", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Listen to my OWN music from anywhere and any device, without having the files in my devices.</p>\n<h2>What it does</h2>\n<p>Upload all your music files and access them from your Android, iPhone or PC.</p>\n<h2>How we built it</h2>\n<p>Web based app with Android integration (web view)</p>\n<h2>Challenges we ran into</h2>\n<h2>Accomplishments that we're proud of</h2>\n<h2>What we learned</h2>\n<p>How important testing and validation is.</p>\n<h2>What's next for SweetEuphony</h2>\n<p>Integrate with file sharing services like Google Drive and Dropbox.</p>\n</div>\n</div>", ["I worked on creating the Online Mobile App with media player functions and user authentication system.", "I am a software engineering student with experience on Android and product development. Implemented the Android App (web view and splash screen) and helped my teammate Suvro in his first hackathon (SpartaHack 2016)"]], ["Spartifai", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/b3ieufN6Sc8?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Spartifai \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/354/634/datas/gallery.jpg\"/>\n<p>\n<i>3/4 of the team (Abrar Khaja gets Picture Credits)</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Spartifai \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/354/635/datas/gallery.jpg\"/>\n<p>\n<i>Our makeshift Hardware Solution</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>Spartify</h1>\n<h2>Inspiration</h2>\n<p>When introduced to the Clarifai API, our first thought was to use it to provide vision where it currently isn't available, and to nobody is it a bigger problem than it is to the blind community. Seeing-eye dogs are undeniably powerful tools at their disposal, but if a technology were created in the future to help them fully analyze their environment, it could change their quality of life drastically. From here, we set off to creating our prototype. </p>\n<h2>What it does</h2>\n<p>Using a Kinect sensor which feeds data to the Clarifai API, our application is able to discern objects in your surroundings in a 180 degree radius. It then uses a text to speech program to read this data out loud, giving a blind person a general understanding of their environment. </p>\n<h2>How we built it</h2>\n<p>On the software end, we used Python in conjunction with the Clarifai API to process images and provide the user with a general understanding of the positions of certain objects. On the hardware end, we used an Arduino 101 Intel Curie Board in conjunction with a rotary sensor and a grove base shield to determine the angles at which photos were taken by our Kinect sensor and to feed the pictures to our Python application. Lastly, we used Kinect's depth perception abilities to perform some preliminary distance calculations, to help a blind person avoid obstacles. </p>\n<h2>Challenges we ran into</h2>\n<ol>\n<li>Figuring out what hardware to use-- on multiple occasions we ran into hardware limitations due to a lack of equipment. </li>\n<li>Exporting Arduino outputs into python.</li>\n<li>Acquiring accurate data from the rotary sensor.</li>\n</ol>\n<h2>Accomplishments that we're proud of</h2>\n<ol>\n<li>The makeshift mechanical construction we created in order to hold our hardware.</li>\n<li>Our output is fairly detailed, providing an overview of the general environment as well as specific directional information.</li>\n<li>Our integration of the Clarifai API and our utilization of the data provided to provide information to the user.</li>\n</ol>\n<h2>What we learned</h2>\n<ol>\n<li>The abilities and possible utilizations of the Clarifai API.</li>\n<li>We were able to construct a mechanical alternative to the hardware we were unable to acquire.</li>\n<li>We learned a lot about Python and its computing power.</li>\n</ol>\n<h2>What's next for Spartifai</h2>\n<p>In the future, we would look to scaling down the size of our prototype so it would be better suited to a blind person. One idea we have is to create a device that clips on to sunglasses, much like the ones many blind people wear today.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/kinect\">kinect</a></span></li><li><span class=\"cp-tag\">cardboard&amp;ducttape</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/J0Nreynolds/Spartifai\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/J0Nreynolds/Spartifai\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I was mostly involved with the implementation of the Clarifai API itself, and its related functions. Using the tags and probabilities received by passing images through the API, we created a filtration system to determine which to present as general environment traits and which to present at specific locations in clock-time format. This implemented our own algorithm, which utilized probabilities across images to produce more accurate results. Lastly, I worked on converting this data into a readable format which could be read aloud by a text-to-speech service.", "I was heavily involved with finding and creating methods to interface with the Kinect for Windows on MacOSX, something that is not widely supported at all. Using the two-year-old discontinued  OpenNI2 drivers and python wrapper, I recreated a means to receive data from the Kinect, using numpy and OpenCV 3.1 to interpret and operate on the data we received. For me, this was a valuable first-time experience with Computer Vision and Kinect.", "I was heavily involved with setting up the hardware. I was responsible for calibrating the rotary angle sensor and interfacing it with an Arduino board which. I then used the data collected from the Arduino to make calls to the API at predetermined angles. I assisted with creating calls to the API for select tags as well. ", ""]], ["TouchMath", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"TouchMath \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/369/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"TouchMath \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/370/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"TouchMath \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/371/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Honestly, our inspiration for this was pretty simple - we didn't want to do math homework.</p>\n<h2>What it does</h2>\n<p>It's an Android app that parses a math equation from handwriting input and solves it for you, including sums and integrals/double integrals.</p>\n<h2>How we built it</h2>\n<p>It's an Android app that uses the MyScript API to read handwriting and convert it to LaTeX, which gets sent to Wolfram-Alpha for solving.</p>\n<h2>Challenges we ran into</h2>\n<p>The MyScript API didn't always return proper LaTeX, finding the proper image URL from the Wolfram API</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Manipulating LaTeX  strings to be correctly formatted LaTeX strings, getting the MyScript API to work correctly</p>\n<h2>What we learned</h2>\n<p>We learned more about using the Wolfram and MyScript APIs, basic LaTeX</p>\n<h2>What's next for Math</h2>\n<p>Get the app to solve more math, basically.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/bikevin/Math\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/bikevin/Math\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["MyScript API, string manipulation algorithms", "API Requests, Wolfram API, touching up user interface", ""]], ["ThoughtSpace", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"ThoughtSpace \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/354/701/datas/gallery.jpg\"/>\n<p>\n<i>From Initial Sketches ...</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"ThoughtSpace \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/354/724/datas/gallery.jpg\"/>\n<p>\n<i>... To Final app ...</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"ThoughtSpace \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/592/datas/gallery.jpg\"/>\n<p>\n<i>... was that really the \"Final\" app?</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Humans remember places better than random facts of information. Being able to pin your thoughts to different objects in a virtual space would help remember information better, plus, it's super cool.</p>\n<h2>What it does</h2>\n<p>It gives you some VR real estate to be able to create, arrange and keep track of ideas/thoughts while being completely portable</p>\n<h2>How we built it</h2>\n<p>We managed to get an Android phone (sitting in a Google Cardboard) to talk to a Leap Motion to keep track of hands. This is one of the main ways of interacting with ThoughtSpace. Living in this unity ecosystem are 2 node servers, one that helps with tracking leap motion data, and one to poll firebase and keep things in sync. The firebase is to be able to store notes and position coordinates of notes in 3D space. The firebase is kept updated through a lambda function living on Amazon Web Services, which is fed data through the Amazon Echo (This is the second important way to interface with ThoughtSpace). AWS also makes requests to Wolfram's API to pull important/relevant data when requested for richer notes. This adds some great functionality to plain thoughts.</p>\n<h2>Challenges we ran into</h2>\n<p>Getting the leap motion to talk to our Android phone was no easy task. It isn't documented, isn't officially supported, and there's only 1 person, somewhere on the internet, that we know of who's ever been able to pull this off (at the time of writing). Being able to pull it off within this short duration, and go on to build a product around this was definitely a big hurdle we crossed.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Being able to overcome the obstacle described above + getting a whole bunch of tech that none of our team members were familiar with to work together to create something awesome.</p>\n<h2>What we learned</h2>\n<p>How to use the Leap Motion, the Amazon Alexa and RedBull.</p>\n<h2>What's next for ThoughtSpace</h2>\n<p>We're planning to release a Library to standardize the Leap Motion + Android interface. Building something robust on this end could lead to some interesting outcomes. ( IRL Animus anybody? )</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/leap-motion\">leap-motion</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">echo</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-alexa\">amazon-alexa</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag\">lots-of-love</span></li></ul>\n</div>\n</div>", ["I managed to get an Android phone (sitting in a Google Cardboard) to talk to a Leap Motion to keep track of hands. This is one of the main ways of interacting with ThoughtSpace. I built the 2 node servers that help with tracking leap motion data and polling firebase to keep things in sync. ", "I wrote the backend that pushes to the Firebase server for the Alexa app and integrated the Wolfram API with the project.", ""]], ["Xkeys Shorthand", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Xkeys Shorthand \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/354/601/datas/gallery.jpg\"/>\n<p>\n<i>XK-24</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>I wanted to make a user interface aimed towards easing computer usage for the disabled. The application of this idea was on the XKeys XK-24 model customizable keyboard. The result was surprisingly effective, a roughly seventy function keyboard with only twenty four buttons!\nI used a combination of MacroWorks 3.1 programming and AutoHotkey scripting to assign keyboard functions and  build shortcut macros to access letters not represented as a result of the button restriction.</p>\n<p>It was difficult figuring out how to realize my idea of combination buttons filling out the keyboard within the confines of the MacroWorks software. I decided to involve AutoHotkey to broaden my development options.\nI'm proud of adjusting to the manipulation and modification of previously foreign hardwarel as well as the experience of turning the blank slate of the XK-24 into a unique and personalized piece of equipment.\nDuring Spartahack 2016, I learned and worked with Autokeys scripting, Virtual basic, how to use MacroWorks software, how to implement ergonomics into keyboard design while considering practicality.\nI think a slightly larger keyboard could greatly expand the possibilities of the Shorthand project.hhhhheeeeeeeee</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">autohotkey</span></li><li><span class=\"cp-tag\">macroworks-3.1</span></li></ul>\n</div>\n</div>", [""]], ["BuzzVoice", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"BuzzVoice \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/325/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>On the bus ride to the hackathon, we overheard a conversation about Morse code. At the time we were thinking about what to build, so we thought of various applications that could use Morse code. </p>\n<h2>What it does</h2>\n<p>You speak a phrase into it, you press a button, and it vibrates what you said in Morse code. We imagine this as being helpful for people who are deaf or hard of hearing, who could use it to communicate with people who do not know ASL or another sign language. </p>\n<h2>How we built it</h2>\n<p>Most of it is built with Javascript using the pebble.js library, but we also had to use C for certain things, most importantly in order to set the vibration sequences required to render each letter in Morse code.</p>\n<h2>Challenges we ran into</h2>\n<p>As mentioned above, for a small part of the app we had to use C to program it. Neither of us had much experience in it, but after many hours and lots of help from mentors we were able to do what we aimed to. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Going back to our whole experience with C, we're proud that we managed to (with help) program an important piece of our app in a language that we were unfamiliar with using documentation. </p>\n<h2>What's next for BuzzVoice</h2>\n<p>In the near future, we hope to expand BuzzVoice to also have a companion app on iOS and Android, so that it is more customizable for the user. </p>\n<p>Note: If you want to try this using GitHub, then use the branch \"working-version\" on Github. The other ones are no good. (It'll probably just be easier for you to download it from the Pebble appstore though)</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c\">c</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://apps.getpebble.com/applications/56d24e4db10232dc0400004a\" rel=\"nofollow\" target=\"_blank\" title=\"https://apps.getpebble.com/applications/56d24e4db10232dc0400004a\">\n<i class=\"ss-icon ss-link\"></i>\n<span>apps.getpebble.com</span>\n</a></li>\n<li><a href=\"http://github.com/eliyazdi/buzzvoice2\" rel=\"nofollow\" target=\"_blank\" title=\"http://github.com/eliyazdi/buzzvoice2\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["ComboClique", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"ComboClique \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/358/345/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"ComboClique \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/358/346/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"ComboClique \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/358/347/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"ComboClique \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/358/348/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration The idea for ComboClique is to provide a fun social environment to connect with friends while saving money on deals.  Businesses also gain high amounts of new, loyal customers.</h2>\n<h2>What it does The main idea is that businesses can upload promotional deals that will have 2 or more levels.  These levels can be achieved by groups of friends, basically, the more friends you have in the group that will be purchasing the product, the closer you are to the next level, which means a better discount!!</h2>\n<h2>How we built it We built the app with Swift 2.0 and Parse BackEnd.</h2>\n<h2>Challenges we ran into Some challenges we ran into were the quick notifications between users when one user invites another to a group, we wanted that user to be notified in a quick matter.  Also, loading information from Parse took some time, because of the mass amount of querying and searching.</h2>\n<h2>Accomplishments that we're proud of Overall, we are proud of the basic concept and flow of the app.  The app gives a great presentation of how the real application will work.  Although it is very simple at the moment, people can really understand what our concept is all about.</h2>\n<h2>What we learned We learned the main idea of how social networks work, which is very cool, Parse providing the back end is a great tool and we both learned so much from it.</h2>\n<h2>What's next for ComboClique We will keep working on the user design of the app and hopefully find more developers who would want to join our team!!</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/parse\">parse</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xcode\">xcode</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["Labyrinth", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration - we wanted to learn more about the Unreal Engine and it's programming compared to Unity</h2>\n<h2>What it does - Shows our team members' growth in learning the different programming skills</h2>\n<h2>How we built it - We used the Unreal Engine, free sources, and other tutorials to help teach ourselves and our other members how to use a 3D program.</h2>\n<h2>Challenges we ran into - Debugging was a bit difficult: we never used this program before so it took us a while to learn it.</h2>\n<h2>Accomplishments that we're proud of - Learning how to use the Unreal Engine overall. We plan to use this program in the future to teach other members of our Programming Club back at home.</h2>\n<h2>What we learned - (above) and how to use Blender, a bit of Unity.</h2>\n<h2>What's next for Labyrinth - We plan to use this as an example to show to our club and to help teach how to do Javascript and other languages (like C#)</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unreal-engine\">unreal-engine</a></span></li></ul>\n</div>\n</div>", ["I created the maze in Blender, then recreated it in Unreal Engine 4 (due to issues with the import of the Blender file). ", "", "", ""]], ["Vagabond", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Vagabond \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/519/datas/gallery.jpg\"/>\n<p>\n<i>Score and Tags Screen</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Vagabond \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/520/datas/gallery.jpg\"/>\n<p>\n<i>User Login</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Vagabond \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/521/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Vagabond \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/525/datas/gallery.jpg\"/>\n<p>\n<i>App Icon</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>What it does</h2>\n<p>Vagabond gives you a list of tags and you have to take pictures to match the tags to get the highest score amongst your friends. Let Vagabond take you to new places to see spectacular sights. Show off your photography skills and also your creativity. Enhance your vocabulary as you go looking for cool words.</p>\n<h2>How We built it</h2>\n<p>We used Xcode to design and create the Vagabond. Multiple iOS frameworks were used and the Clarifai API was instrumental for the image recognition aspect of Vagabond.</p>\n<h2>Challenges we ran into</h2>\n<p>Pretty much everything.</p>\n<h2>How we overcame it</h2>\n<p>By messing up our sleep cycle.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We tried our best to expose ourselves to as many APIs from our sponsors, and now we can take home some knowledge and experience in them even though we ended up not using all of them.</p>\n<h2>What we learned</h2>\n<ul>\n<li>How to make an iPhone App</li>\n<li>How to use the Clarifai API (LPT: Don't include the curly braces when sending the access token)</li>\n<li>How to make Swift-Objective-C bridge headers</li>\n<li>How to use Firebase</li>\n<li>How to use Microsoft Azure</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/iphone-sdk\">iphone-sdk</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/pjmc-oliveira/spartahacks\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/pjmc-oliveira/spartahacks\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Jobminder", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/3ZEDuYmMz9o?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Jobminder \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/691/datas/gallery.jpg\"/>\n<p>\n<i>Manual Job Entry</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Jobminder \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/693/datas/gallery.jpg\"/>\n<p>\n<i>Job Search (Indeed or LinkedIn API to be added)</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Jobminder \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/695/datas/gallery.jpg\"/>\n<p>\n<i>Logo</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Applying to one job can be time-consuming, applying to ten can consume a life. When attempting to manage multiple job applications, the process can become extremely disorganized. This is compounded when trying to remember which recruiters were for what jobs and who has been recently contacted. During our personal internship/job search, we were forced to use excel sheets or even pen and paper to maintain organization. For this reason, we decided to build Jobminder a job application organizer. </p>\n<h2>What it does</h2>\n<p>Jobminder starts by having the user find job postings of interest to them. At this point the user has to manually upload the jobs they plan to apply for, in the future we hope to add job postings website APIs. Once a user has a saved job that they are planning to apply to they then add contacts that are relevant to the position. This could be recruiters met at hackathons, friends who work for the company, or anyone associated with the company. At this point, users have to use their phone book or manually enter contacts, in the future we would like to integrate the ability to use LinkedIn\u2019s connections. The user is then able to update the application as they move from prospecting the job to actually applying, getting the interview, then receiving an offer; all the while, having easy access to their network within the company.</p>\n<h2>How we built it</h2>\n<p>We used the Ionic framework to build an Angular JS web application that can be ported to IOS and Android. We built a RESTful Node.js API using Express and mongodb. </p>\n<h2>Challenges we ran into</h2>\n<p>The big job posting websites (LinkedIn, Monster, etc.) require developers to file applications and wait on average a week to gain the API keys. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are proud of our user authentication! Two of our team members are experienced programmers and this was the first time using ionic and MongoDB. The other two team members are inexperienced programmers and were able to learn a lot about the process of designing a web app from the ground-up. </p>\n<h2>What we learned</h2>\n<p>We were proud to learn how to use Ionic. This allowed us to port our web application written in angular.js to both an android and iOS app. This was the first time that our team worked together on a project; SpartaHack is the reason for our newfound friendship! During this weekend, we were able to determine what each of our strengths are and determine how to manage ourselves accordingly. We needed this group cohesion when it came to prioritizing which features we wanted to build with the time constraints of this event. The group members with little programming experience learned much about the set-up that is required to build any functional application. Overall, we all learned new skills and how to function as a team to accomplish a common goal! </p>\n<h2>What's next for Jobminder</h2>\n<p>Just because SpartaHack is concluding does not mean our work is done. Over the next month, we plan to gain access to LinkedIn\u2019s API. This will give us access to around 77% of all job postings. This data will substitute users having to enter in job postings manually. We will also incorporate USAJobs API to include many jobs relevant to US veterans and assist them with their job search after deployments. With LinkedIn\u2019s API, we will give users access to their LinkedIn connections improve the networking aspect of the job search. We will also add push notification when the user switches the status of their saved jobs. This will remind users to reach out to their contacts at jobs that they are applying/interviewing it. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/angular-js\">angular.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ionic\">ionic</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/fluid-ui\">fluid-ui</a></span></li></ul>\n</div>\n</div>", ["I lead the development of the frontend Angular js application using Ionic. I took the UI mock ups designed by rob and connor and brought them to life, while integrating the node js REST api built by Jon.", "Complete backend development with RESTful API services. Built using NodeJS with express. Storage with MongoDB. Authentication and authorizations using passport JS. Contributed to the ionic design. Ported the android version.", "", ""]], ["HandyCursor", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"HandyCursor \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/750/datas/gallery.jpg\"/>\n<p>\n<i>Debug Mode of HandyCursor</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Not everyone has tons of hardware, so make the best of whats already there.</p>\n<h2>What it does</h2>\n<p>It recognizes your closed hand as a cursor, and when you open it, it clicks like a mouse (left button)</p>\n<h2>How I built it</h2>\n<p>Python 2.7 script in Visual Studio IDE</p>\n<h2>Challenges I ran into</h2>\n<p>Compiling files and importing</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>An algorithm that no longer thinks my face is a hand, and only recognizes my hand.</p>\n<h2>What I learned</h2>\n<p>API's. I have never used them before this hackathon. Plus, this being my first, I have now leared what a hackathon is and what it encompasses.</p>\n<h2>What's next for HandyCursor</h2>\n<p>A method of recognition for sign language</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">openvc</span></li></ul>\n</div>\n</div>", [""]], ["Python Text-RPG Prototype", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Python Text-RPG Prototype \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/739/datas/gallery.jpg\"/>\n<p>\n<i>Game Screen</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Video games <strong>Zork</strong> and <strong>Pokemon</strong></p>\n<h2>How we built it</h2>\n<p>Python</p>\n<h2>Challenges we ran into</h2>\n<p>Being novices in Python-development (we featured heavy-use of functions, which we just learned about this week)\nMaking the combat system (transferring and updating information between files without losing anything)\nThe aggregation of all sub functions into the main game function.\nMaking the user-interface as easy to understand as possible.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Combat system\nDespite it's rudimentary design visually and mechanically, we are extremely proud of the fact that we prioritized <strong>functionality</strong>, which is an important lesson in engineering and especially prototyping, and that we accomplished building a game from scratch. </p>\n<h2>What we learned</h2>\n<p>Sleep is for the weak.\nCommunication, in conjunction with division of labor, is key for effective work.\nHow to import functions from other files.\nGame development without the use of an engine requires much more time.</p>\n<h2>What's next for Python Text-RPG Prototype</h2>\n<p>Continue to build upon the foundation established during the Hackathon\nHopefully implement audio and visual elements</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n</div>", ["I worked primarily to create the functions used for interacting with and creating the small world of our game. This was my first time working on a non-school instructed project like this so it was definitely a big learning experience.", ""]], ["The Fridge", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Our lazy butts are honestly too lazy to figure out on our own what we can make with what we have in our own fridge. </p>\n<h2>What it does</h2>\n<p>The concept of the project is to have users input the items in their fridge and our program will compare the ingredients input with our database of recipes to find which ones you can make on the spot.</p>\n<h2>How we built it</h2>\n<p>As a web app, the structure, formatting, and events were programmed with HTML, CSS, and Javascript respectively. JSON was used to make our recipe database. Firebase was used to handle our data structure and storage.</p>\n<h2>Challenges we ran into</h2>\n<p>Time constraints. Midway through the hackathon we diverted away from a different project to make this one, but we simply ran out of time.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Got Firebase to store our data properly. Because we had very limited Javascript skills, being able to store our data properly was a huge step for us.</p>\n<h2>What we learned</h2>\n<p>A whole lot of Javascript. With little to no experience with Javascript, this project was as much of a challenge as it was a learning experience.</p>\n<h2>What's next for The Fridge</h2>\n<p>We hope to implement a login system so that each user is able to have their own online \"fridge\". For inputting our stuff into the fridge, we want to be able to take a picture of our fridge and have our foods put in right away. We also wanted The Fridge to be a community application, in which people can add their own recipes to our database of recipes so other users can view them as well. All in all, we hope to make this app as much of a social application as it is an everyday use application.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/theunderpaidone/SpartaHack16S.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/theunderpaidone/SpartaHack16S.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I (Anton Yang) worked on the back end portion that dealt with the data structure and Firebase. I did all of the Javascript and helped with HTML and CSS when needed.", ""]], ["Tupac vs. Biggie", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Tupac vs. Biggie \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/692/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We were inspired by the classic platform games of the past. </p>\n<h2>What it does</h2>\n<p>You are Tupac and you must defeat all the Biggies</p>\n<h2>How we built it</h2>\n<p>We used Stencyl, a flash-game creation software</p>\n<h2>Challenges we ran into</h2>\n<p>It was difficult to make the stomp animations and to get the sound effects just right.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>This was our first hackathon, and the final product to us looked very clean and professional.</p>\n<h2>What we learned</h2>\n<p>We learned how flash games are made and some of the coding that goes into them, as well as teamwork and determination</p>\n<h2>What's next for Tupac vs. Biggie</h2>\n<p>We hope to add more levels as well as more rappers to the game. Coming up is a Drake vs. Meek Mill battle.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">stencyl</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://onedrive.live.com/redir?resid=BFF639ABC571D929!3691&amp;authkey=!ACY1OeWB9x8NW1c&amp;ithint=file%2cswf\" rel=\"nofollow\" target=\"_blank\" title=\"https://onedrive.live.com/redir?resid=BFF639ABC571D929!3691&amp;authkey=!ACY1OeWB9x8NW1c&amp;ithint=file%2cswf\">\n<i class=\"ss-icon ss-link\"></i>\n<span>onedrive.live.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Binary View", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We humans (mostly) view each other through our eyes and what we can see in the physical world. While machines can not literally see, they can classify images into categories. Let's explore how machines view us people.</p>\n<h2>What it does</h2>\n<p>The user enters the name of a person, prompting a behind-the-scenes Google image search that retrieves a large number of image URLs. The application utilizes the Clarifai API to classify the image URLs with a frequency list of textual tags and renders a word-cloud highlighting how machines might view the person in question.</p>\n<h2>How I built it</h2>\n<p>Python Flask, Google Custom Search, Clarifai API, Heroku, JQcloud, Skeleton</p>\n<h2>Challenges I ran into</h2>\n<ul>\n<li>Learning how to write a dynamically driven web app.</li>\n<li>Deployment and environment configurations.</li>\n</ul>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Developed a web solo after pivoting half-way through the hackathon.</p>\n<h2>What I learned</h2>\n<ul>\n<li>Python Flask web framework</li>\n<li>Skeleton CSS framework</li>\n<li>Custom Google Search API</li>\n<li>Clarifai API</li>\n<li>JQCloud Jquery plugin</li>\n<li>Heroku PaaS</li>\n</ul>\n<h2>What's next for Binary View</h2>\n<p>Parallelizing the image classification to larger number of images will provide more interesting and significant results. Additional data visualizations will prove useful in discovering how machine algorithms \"view\" people.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-custom-search\">google-custom-search</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/heroku\">heroku</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://binaryview.herokuapp.com/\" rel=\"nofollow\" target=\"_blank\" title=\"http://binaryview.herokuapp.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>binaryview.herokuapp.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Implemented Python Flask backend, API integration, and frontend.", "Worked with Python and found various API's to integrate in the project."]], ["Tweet Delete", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Tweet Delete \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/575/datas/gallery.jpg\"/>\n<p>\n<i>Console Output Ex1</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Tweet Delete \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/698/datas/gallery.jpg\"/>\n<p>\n<i>Console Output Ex2</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Using twitter and knowing that employers could be looking through your tweets</h2>\n<h2>Uses your twitter access codes and user id to retrieve all your tweets, flag the ones with words from a default list of bad words, or the inputted word from a custom search and deletes the tweets you choose to.</h2>\n<h2>Built using Python 2.7 with a couple external libraries</h2>\n<h2>Initially wanted to make a web app</h2>\n<h2>The program works if you have your twitter development access codes and user id</h2>\n<h2>Using Twitter API to access your tweets and other various information about your profile</h2>\n<h2>Expanding it to work with a way to input your username and password without the need for access codes.  This would have to be done via a web app.</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n</div>", ["", "", ""]], ["Project LeanFitGO!", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Project LeanFitGO! \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/356/594/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Project LeanFitGO! \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/356/604/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Project LeanFitGO! \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/356/623/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Project LeanFitGO! \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/356/624/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Project LeanFitGO! \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/356/625/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Project LeanFitGO! \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/738/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p><a href=\"http://leanfitgo.com\" rel=\"nofollow\">http://leanfitgo.com</a></p>\n<h2>Inspiration</h2>\n<p>This came from the idea that there are two major problems. For a long time there has been a dis-connectiveness in the fluidity between an app that might track your food if you personally input everything... furthermore nothing can give an answer immediately. Furthermore, doctors often are not able to have actual viable for your data for items such as nutrition and exercise.</p>\n<h2>What it does</h2>\n<p>LeanFitGO accomplishes solving both problems mentioned before focusing on either GAINING WEIGHT or LOSING WEIGHT. You can ask Alexa (Amazon Echo) about any item in a meal and she will immediately respond back to you on her opinion of the meal (according to its nutrients as displayed in pics above) and your goal weight. Accordingly Project Lean prioritizes certain nutrients above others.</p>\n<p>Also LeanFitGO also created medical pages/logs patients can share with doctors - to track your patients for better diagnosis and advice and the exercising we associated through the fitbit api.</p>\n<p>Furthermore, I placed a strong emphasis on user and backend design/ux because that is absolutely necessary to penetrate current market,</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I had to leave SpartaHacks early (if I miss anything please email me)</p>\n<h2>What's next for Project LeanFit GO!</h2>\n<p>Incorporation antioxidants, lecithin, and other drugs according to goals set\npre and after workout diets</p>\n<p>This is not simply hack this a company that will change lives.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-alexa\">amazon-alexa</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/fitbit\">fitbit</a></span></li><li><span class=\"cp-tag\">healthsystems:epic)</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/wolfram-technologies\">wolfram-technologies</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag\">domain.com</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://leanfitgo.com\" rel=\"nofollow\" target=\"_blank\" title=\"http://leanfitgo.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>leanfitgo.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["imaginize !", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>the idea came from the fact that big data is an up raising field so </p>\n<h2>What it does</h2>\n<p>first the user enters a key word, then the app will extaract some pictures from youtube and twitter (streaming API of twitter) , after that the pictures goes through clarify api to get the tags and finally we will get those results through charts ( predictive charts could exist)</p>\n<h2>How I built it</h2>\n<p>I've used the nodeJS and other twitter streaming api to </p>\n<h2>Challenges I ran into:</h2>\n<p>time pressure !</p>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<p>learning how to use new api's</p>\n<h2>What's next for imaginize !</h2>\n<p>enhance more it's back-end and add AI</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twitter\">twitter</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/instagram\">instagram</a></span></li></ul>\n</div>\n</div>", [""]], ["Alexa Email Reader", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Coming from someone who has bad eyesight, whenever I wake up in the morning, I hate that I have to put on glasses before I can do anything. However, with Amazon Echo and this app, I can stay connected by listening to some e-mails while I struggle to get out of bed.</p>\n<h2>What it does</h2>\n<p>We will program an Amazon Echo to be able to read e-mails  and throughout time, learn which e-mails might be more important. The program will prioritize getting those important e-mails to you while saving the unnecessary for a later time.</p>\n<h2>How I built it</h2>\n<p>Program will get an email data from Google using their Gmail API and storing e-mail information as JSON dictionaries.</p>\n<p>Program will get a sender name, title of an email, content of an email and date (JSON)</p>\n<p>Each data will process to an array or a container and at first Alexa will only prompt the name and title array (python)</p>\n<p>Unless user says read or delete, Alexa will keep prompting names and titles.</p>\n<p>If user says read for name[k] title[k], it will record that user had response for name[k] and create list frequencies[k] to update frequencies, and call data content[k]</p>\n<p>If user says \"delete\", it will delete data, name[i], title[i], content[i], date[i], then make i+1 become I</p>\n<p>After the process ends, frequencies [] will go to the frequencies container and update it.</p>\n<p>Next time if user gets email, it will get names and compare it with frequencies container, apply quicksort depending on where the name is on the list, reverse the order and prompt names and titles by the reversed order.</p>\n<h2>Challenges I ran into</h2>\n<p>We had to learn new programming languages and had to figure out how we can put all different kind of pro\nAs it was the first time working with APIs and even JSON dicts, it was very difficult to parse through the large amount of data gmail sent back to us. It took hours at times trying to do simple things that I'm at least glad to have learned now. It was also difficult trying to decide on a process to determine how the e-mails would be deemed \"important\", everyone has different habits which could impact what e-mails would eventually be important. </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Learned so much in 36 hours of coding than any of us probably did in a long time. Learning to work with JSON to manipulate data was really cool and useful for future use as well as learning to pull data using another company's API. Despite not having a working product, we did develop an algorithm that would mark e-mail importance and we are very proud of that.</p>\n<h2>What I learned</h2>\n<p>I've learned how to program with JSON, was able to explore more features in python. Also I've learned a lot of things related with data structure and algorithms. Also I've learned how programs communicate with each other, and what kind of back-end programs enables alexa.</p>\n<h2>What's next for Alexa Email Reader</h2>\n<p>With small changes to our algorithm, all that's left is to find a way to store data in the cloud service at Amazon by either learning javascript and using the example provided by scorekeeper or to just learn to do it in python altogether. It's unfortunate that we weren't able to get a functional demo ready for the expo, but I think we saw a lot of progress that could push us to finish this project outside of this hackathon and have an impact in our daily lives. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-alexa\">amazon-alexa</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/fedwatcher/Alexa-Email-Reader\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/fedwatcher/Alexa-Email-Reader\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I developed an algorithm and structure which can enable this project, also constructed prototype program using c++.  ", "I worked on using Gmail API to bring the e-mail data into our program to be processed. I also had to code the authorization function so that our computer could receive data from gmail. The data brought in from gmail was stored in our app as a JSON dict object", "I developed back-end coding with python. It strove to enable Alexa to get information about email, sort emails based on importance, and read email sender,title, and content as commanded.", ""]], ["MySpaceThe.Net", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"MySpaceThe.Net \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/681/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>MySpaceThe.Net</h1>\n<p>A chrome extension, a deployment tool, and an epic website! What a weekend!</p>\n<h2>Inspiration</h2>\n<p>Coming into SpartaHack, we didn't know what we wanted to make so we decided to instead have fun with this and go with any idea that we thought would be enjoyable for us! We came up with two ideas: MySpaceThe.Net and Pull4Me! The former being a Google Chrome Extension and the latter being a development tool.</p>\n<h2>What it does</h2>\n<p>MySpaceThe.Net is a Google Chrome Extension that is built off of two main APIs: Clarifai and Giphy. Clarifai allowed us to get tags to describe all images in the page which we then fed to Giphy to find a suitable image to replace with. And it will do just that, replace all the images from a page with a gif that has the same tag. If that isn't pretty sweet, I don't know what is!</p>\n<p>Pull4Me was the other mini project we worked on to help our lives become easier while working with the Microsoft Azure server. No one likes to SSH into the server just to pull in changes from GitHub and then re run the webserver. We wanted to automate that process by building a BASH script that inputs all the commands for us. Yes, we're that lazy! You start the script when you have changes to a project you made and are ready to commit. You go to the command line and run the command <code>./pull4me.sh</code> or <code>sh pull4me.sh</code> (if you're on Windows). It will prompt you to put in a commit message, push the changes to the repository, ssh into the server, prompt you for your password, and finally pull the changes and restart the server with a single command! WICKED COOL, EHH!</p>\n<h2>How I built it</h2>\n<p>MySpaceThe.Net is a Google Chrome Extension that is built completely in JavaScript using the Clarifai and Giphy APIs. Very Simple, we just followed a guide to making a chrome extension and using the mentioned APIs and we were on our way!</p>\n<p>The MySpaceThe.Net website is built on the static web stack. I used HTML for the markup, SASS for the styles, and JavaScript for the scripting. We also used npm for our package management needs as well as Gulp as our build system which was in charge of processing, autoprefixing and minifying our SASS, uglifying and linting our JavaScript, watching for any changes, and spitting up a simple web server for quick use.</p>\n<p>The MySpaceThe.Net website is being hosted on a Microsoft Azure Ubuntu 14.04 virtual machine which we are also using to demo our precious deployment script.</p>\n<p>The Pull4Me deployment script was a simple BASH script that we didn't spend a lot of time making, but it made a world of a difference in our workflow! All we did was prompt the user to enter a couple of fields and run the deployment commands for you! </p>\n<h2>Challenges I ran into</h2>\n<p>Hussain - I personally have worked very little with BASH so there was a steep learning curve with building the Pull4Me script. </p>\n<p>Matthew - I have never made a chrome extension before and there was a huge learning curve getting started with the APIs, but I learned a lot and am glad I had the opportunity.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Not building one, not two, but THREE epic things over the past couple of days!</p>\n<h2>What I learned</h2>\n<p>We learned a lot including how to use Clarifai's API, Giphy's API, using Microsoft Azure's Cloud Service, scripting in BASH, making a google chrome extension ans so much more!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/shell\">shell</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/linux\">linux</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/npm\">npm</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sass\">sass</a></span></li><li><span class=\"cp-tag\">gulp</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/gulp-js\">gulp.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/azure\">azure</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bash\">bash</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/superhussain/MySpaceThe.Net\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/superhussain/MySpaceThe.Net\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/mknapper1/MySpaceTheNet\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/mknapper1/MySpaceTheNet\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/superhussain/pull4me\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/superhussain/pull4me\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"http://myspacethe.net/\" rel=\"nofollow\" target=\"_blank\" title=\"http://myspacethe.net/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>myspacethe.net</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["It was mostly a team effort across the board, but I had a major hand in creating the beautiful website as well as the deployment tool. ", ""]], ["Cloud Chronos", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Cloud Chronos \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/556/datas/gallery.jpg\"/>\n<p>\n<i>The frontend workspace!</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>For our SpartaHack project, we wanted to build an alarm clock that automatically synced itself to your Google Calendar events. You will be able customize how soon before your first event of the day you would want to wake up. Other customizability options include waking up earlier if your event is further away, or setting a latest possible alarm. We weren't completely able to do that at 36 hours, but we gave it a shot! This devpost displays our work so far on bringing the internet of things to one more device. Try out the hack so far <a href=\"http://shielded-badlands-71426.herokuapp.com/\" rel=\"nofollow\">here</a> (will eventually be cloud-chronos.com, but could not get it to host).</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Cazfri/cloud-chronos\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Cazfri/cloud-chronos\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"http://shielded-badlands-71426.herokuapp.com/\" rel=\"nofollow\" target=\"_blank\" title=\"http://shielded-badlands-71426.herokuapp.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>shielded-badlands-71426.herokuapp.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Built the backend Flask, frontend HTML and Javascript, as well as working with the firebase API to perform Google authentication and database storage. I also worked logistics on how to deploy the website to Heroku, which was a tough processes as I had never deployed a site before.", "I took the lead on the hardware component of the project. My area of development was learning and using the Particle Photon, and figuring out how to make REST calls from it to the web application.", "", ""]], ["Filous", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Filous \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/576/datas/gallery.jpg\"/>\n<p>\n<i>Login Concept</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Filous \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/671/datas/gallery.jpg\"/>\n<p>\n<i>People nearby with shared interests</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We thought it would be a nice idea to find new people who share same interest in your area when you feel bored. So we created Filous to gain experience in app development while implementing various APIs. </p>\n<h2>What it does</h2>\n<p>Updates location coordinates in real time, and shares your interests with other users.</p>\n<h2>How we built it</h2>\n<p>Built using Android Studio, Firebase as a database, and implementation of Facebook login and Google location services API.</p>\n<h2>Challenges we ran into</h2>\n<p>Implementing Google's location services. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Real time updates, management and first time implementation of Firebase. We are proud of what we learnt! </p>\n<h2>What we learned</h2>\n<p>How to use multiple APIs, and Firebase.</p>\n<h2>What's next for Filous</h2>\n<p>Develop a cleaner UI, create a message board, limit location radius, display current locations on a map.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/facebook-login-api\">facebook-login-api</a></span></li><li><span class=\"cp-tag\">google-location-api</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Hide-N-Seek/Filous\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Hide-N-Seek/Filous\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Word Chain", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We both were fairly new to programming, and we wanted to make something that wouldn't be too difficult, but still fun to use. We decided making a word game on android studio would be a good choice for us.</p>\n<h2>What it does</h2>\n<p>It is a game for 2-4 players in which each player must choose a word starting with the last letter of the previous word, within a certain time limit, or else they lose.</p>\n<h2>How we built it</h2>\n<p>We had several screens: one for choosing amount of players, one for choosing names, one for playing the game, and one for displaying the victor.</p>\n<h2>Challenges we ran into</h2>\n<p>There were issues with setting up the layout of the screens, because neither of us were very familiar with this. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We're proud of independently creating a working game with little/no experience. </p>\n<h2>What we learned</h2>\n<p>We learned how to make android apps, as well as java and xml. </p>\n<h2>What's next for Word Chain</h2>\n<p>We should add a feature to make sure that words are actually in the dictionary, because as of right now, the system relies on players' honesty.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li></ul>\n</div>\n</div>", ["I wrote the formatting and layout of the screens.", ""]], ["V-Racer", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"V-Racer \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/476/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Game design is a passion of mine, another passion of mine is being a proud motercycle rider. I made this hack to have some fun and test the limits of my dev skills and explore the endless possibilies of modern game design.</p>\n<h2>What it does</h2>\n<p>V-Racer give people who have never been on a motorcycle the chance to experience something fun and exciting. It also gives those familiar with riding the abilities to experience it like never before; a digital heads up display and VIRTUAL REALITY?</p>\n<p>What's not to like?</p>\n<h2>How I built it</h2>\n<p>Everything was build in the Unity Game Engine. Programming was done in C#. UI art is original, however, some other art assets were borrowed for this project.</p>\n<h2>Challenges I ran into</h2>\n<p>Getting a vehicle sim to feel really good is not something to be taken lightly. This project was very iterative and time intensive. </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Something that looks good and feels nice! Very fun to create.</p>\n<h2>What I learned</h2>\n<p>How to work on my own and set my own pace with design and development.</p>\n<h2>What's next for V-Racer?</h2>\n<p>Multiplayer? New bikes? Courses? Who knows.\nI had a lot of fun on this project - I'm sure I'll be investing more time into it soon enough!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n</div>", [""]], ["InTime - public transportaions time scheduling tool", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"InTime - public transportaions time scheduling tool \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/666/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>It can be very annoying when you got the bus station only to find out you missed the previous bus for only a few second, this project is designed to solve the problem.</p>\n<h2>What it does</h2>\n<p>Provide the user with real time information regarding public transportation systems, when a user is near a transit station in a certain range, the app would notify the user with the time table, so that it can save the users a lot of time. It can also be used as a recurring scheduling tool, input a desired destination, desired time to reach the destination, then the application can notify the user at a certain time in a day for the users to get on the transportation tools.</p>\n<h2>How I built it</h2>\n<p>By using Google maps api and ios / android sdk, we'll be able to locate user's position, and the nearest transit stops with the real time information. We'll also be needing the api for public transportation systems for their time schedule.</p>\n<h2>Challenges I ran into</h2>\n<p>Not enough time, and it would require a lot of knowledge regarding ios/android development.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Having the idea that may potentially save people a lot of time spent on waiting transportations.</p>\n<h2>What I learned</h2>\n<p>Developing an application would require a lot of knowledge about how to combine the apis with the applications.</p>\n<h2>What's next for InTime - public transit time scheduling tool</h2>\n<p>to actually implement it and do some marketing research regarding the needs.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/iphone-sdk\">iphone-sdk</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/machine-learning\">machine-learning</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/azure\">azure</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-maps\">google-maps</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["ClubLife", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration: In our school there are over <strong>70 clubs and sports</strong> that many students want to join. However due to the lack of communication many students don't show up to many meeting and are forced to miss the opportunity to join the club or sport. Our website has every club on one platform on which the club administrators would join as well as the students. The administrators would post anything regarding their club and the students would be able to \"follow\" a club and therefore see any posts the admins make.</h2>\n<h2>Challenges I ran into: We built this website using HTML, JavaScript and CSS. One of our biggest challenge was learning how to code bootstrap and the many minor errors such as mismatching  s. </h2>\n<h2>Accomplishments that I'm proud of: We are extremely proud that we have created a website that is connected with a database(Firebase) that can truly help ordinary high school students like us.</h2>\n<h2>What I learned: We learned that the smallest errors can lead to massive problems.</h2>\n<h2>What's next for ClubLife: We plan to add many more features to this website such as an interactive calendar, RSVP, and a notification system. We also want to push this concept to the app form and contact local schools and integrate our website into the school system. We believe that our website  has the potential to revolutionize all students lives.</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/vvsharma4/ClubLife\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/vvsharma4/ClubLife\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Idea Source", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Idea Source \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/601/datas/gallery.jpg\"/>\n<p>\n<i>Homepage, company selection</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Idea Source \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/602/datas/gallery.jpg\"/>\n<p>\n<i>Login Window</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Idea Source \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/604/datas/gallery.jpg\"/>\n<p>\n<i>Company page</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Idea Source \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/605/datas/gallery.jpg\"/>\n<p>\n<i>create idea</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Idea Source \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/606/datas/gallery.jpg\"/>\n<p>\n<i>Idea voting and comments</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>This web application allows anyone to help improve previously existing features or products that a company has created. Companies will no longer be required to focus on the creative process because anyone with an idea can pitch it to the company easily. Users visiting the website can up-vote any posts that they feel are outstanding or down-vote any posts that may be a bad idea. Users may also comment on any of these posts to share what they think about it.  Since companies will no longer need to think of new ideas, they may sponsor an event to give out a prize to the best suggestion in order to incentivize the improvement of their company.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/angular-js\">angular.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongoose\">mongoose</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/moraneva/spartanLegends\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/moraneva/spartanLegends\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the back end with Node.js, Mongoose, and Express. I worked on the front end with Angular.", "I helped work on the front end with css and html.", "", ""]], ["ValU", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"ValU \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/559/datas/gallery.jpg\"/>\n<p>\n<i>Main Screen</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"ValU \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/565/datas/gallery.jpg\"/>\n<p>\n<i>Add Stocks</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"ValU \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/566/datas/gallery.jpg\"/>\n<p>\n<i>Choose Filter</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"ValU \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/572/datas/gallery.jpg\"/>\n<p>\n<i>What is ValU?</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"ValU \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/574/datas/gallery.jpg\"/>\n<p>\n<i>Info on Stocks</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"ValU \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/615/datas/gallery.jpg\"/>\n<p>\n<i>VBA Program</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<ul>\n<li>There is a massive barrier to entry to get involved in investing. However, we learned that this barrier is completely unnecessary. The idea was to build an app that provides the tools to become involved in investing without prior experience. </li>\n</ul>\n<h2>What it does</h2>\n<ul>\n<li>The app pulls data from the entire NYSE and provides an intrinsic (true) value and a rating for how reliable the intrinsic value is. We have organized the data into something that is concise and easily palatable. </li>\n<li>The user is not only able to create and manage their own stock portfolio, but can search through the entire NSYE based on the values/ratings they would like.</li>\n</ul>\n<h2>How we built it</h2>\n<ul>\n<li>Using Visual Basic we created a program with nested modules that grabs stock data from different online sources, analyzes the stock data, and utilizes statistics and an online calculator. We then exported key data points via xml to a server for use in the application.</li>\n<li>Export data collected from VBA onto a web server</li>\n<li>Pulling data from web server into Xcode and developing an iOS App around the data.</li>\n</ul>\n<h2>Challenges we ran into</h2>\n<ul>\n<li>Pulling data from the entire NYSE</li>\n<li>Using statistical analysis to create a reliability ranking system</li>\n<li> Delegation in Xcode</li>\n</ul>\n<h2>Accomplishments that we're proud of</h2>\n<ul>\n<li>Integrating </li>\n<li>Using Visual Basic to collect and organize data from the entire NYSE (3244 companies!)</li>\n<li>Creating a server to pull data from over 160000 data points onto the iOS App</li>\n</ul>\n<h2>What we learned</h2>\n<ul>\n<li>How to integrate web scraping on a large scale</li>\n<li>Build web service and integrating that into an iOS App.</li>\n<li>iOS software design patterns such as delegation</li>\n</ul>\n<h2>What's next for ValU</h2>\n<ul>\n<li>Improve web server to add real-time updates.</li>\n<li>More complex filters</li>\n<li>Allow more information on stocks (such as stock graphs)</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/visual-basic\">visual-basic</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xcode\">xcode</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li></ul>\n</div>\n</div>", ["I worked on the front end and helped design the interface for the app. Helped correct loose ends and find possible bugs. ", "For ValU I contributed the most in the backend. I helped in writing the VBA modules that grab, calculate, analyze, and create the rating system behind our stock analysis. I also helped manage all of the data for the 3,200+ stocks on the NYSE and exported it via xml to be used in the application. ", "", ""]], ["LearningLock", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"LearningLock \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/800/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"LearningLock \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/801/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"LearningLock \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/803/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"LearningLock \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/804/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"LearningLock \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/805/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Machine learning/artificial intelligence is an emerging field, and we wanted to apply this profound technology to an everyday use case - the smartphone. Privacy and security are especially important in the 21st century, and we wanted to apply machine learning fundamentals to learn a user's pattern unlocking tendencies and be able to detect intruders who may know the phone's unlock pattern.</p>\n<h2>What it does</h2>\n<p>The lockscreen is equipped with a neural network which can differentiate between the phone's owner and an intruder trying to unlock it. The initial set-up involves the unlock pattern being repeatedly drawn by both the owner and an outside individual so the neural network is able to detect subtle differences between users based on a variety of criteria. The AI is further trained and improved each time it is unlocked, either by the owner or a detected intruder.</p>\n<h2>How we built it</h2>\n<p>Neural network architecture was constructed, measuring various criteria and evaluating various mathematical operations based on these findings to build a profile of the phone's owner.</p>\n<h2>Challenges we ran into</h2>\n<p>Unable to get neural network's propagation algorithm to converge at a low enough error, overriding the home button on Android to get an actual lock screen.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Building an efficient neural network that is up to 90% successful in our performed test cases. </p>\n<h2>What we learned</h2>\n<p>The intricacies of artificial intelligence; small operational changes can have large-scale impacts on the success rate.  </p>\n<h2>What's next for LearningLock</h2>\n<p>Integrating additional functions to improve user experience (ex. widgets showing content relevant to the user).</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/machine-learning\">machine-learning</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/AlstonLin/LearningLock\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/AlstonLin/LearningLock\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Worked primarily on front end UI/UX design, integrating unlock pattern library, pulling some relevant data required by the neural network", "Designed and Implemented the Neural Network, overall architecture of the app, parts of the pattern unlocking, the pin backup unlock, and the RESTful calls to get and display weather info"]], ["LED Mood Lights", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"LED Mood Lights \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/580/datas/gallery.jpg\"/>\n<p>\n<i>A screenshot of what the finished program looks like.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"LED Mood Lights \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/585/datas/gallery.jpg\"/>\n<p>\n<i>The breadboard/ arduino.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"LED Mood Lights \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/613/datas/gallery.jpg\"/>\n<p>\n<i>The LEDs in action.</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p><strong>bold</strong>\nNetflix and Chill will never be the same with LED Mood Lights</p>\n<h2>What it does</h2>\n<p>The C# code written in the Processing IDE takes screenshots continuously and finds the average color of the screen.  These values are then sent to the Arduino IDE which outputs the values to the LED lights. </p>\n<h2>How we built it</h2>\n<p>We built the circuit using an Arduino Uno and the Processing and Arduino IDEs.  We used Unity as the interface for image processing.</p>\n<h2>Challenges we ran into</h2>\n<p>We struggled with getting the LED lights to communicate properly with the Arduino.  We also ran into the challenge of finding an efficient way to calculate the average color of the screen. Lastly, presenting an accurate color output with the LEDs proved to be difficult.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are proud of successfully creating a working circuit with the LEDs.</p>\n<h2>What we learned</h2>\n<p>We learned about how bitmaps are stored in memory, how to construct circuits, what serial ports are and how they work, and we became familiar with the Processing and Arduino IDEs.</p>\n<h2>What's next for LED Mood Lights</h2>\n<p>We plan to integrate sound, adaptive brightness, a slider to manually control the brightness and colors of the LEDs, and integrate Alexa.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/processing\">processing</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c\">c</a></span></li></ul>\n</div>\n</div>", ["I did a lot of work with getting the circuit board set up with the led lights, and getting the computer to communicate to the led lights. At first, the script I used to communicate to the lights was written in Java but unity didn't support that, so I had to rewrite it for c# and export each character to the serial port to the arduino. ", ""]], ["Service Animal and Veteran Integration, App Proposal ", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration// I am a veteran without a disability and found that I have a talent for training dogs for veterans and civilians with disabilities. Training these dogs takes a lot of time and dedication, this is a lot of info to teach a person in a short amount of time to maintain that service dog.</h2>\n<h2>What it does, App on your phone that has feeding timers, grooming schedules, Lists of verbal-gesture-noise commands to communicate with your dog, links to short videos and emergency care and numbers. Each member in the family can download app and register it to the dog, this will ensure the service dog isn't overfed or mistreated. There will also be random text on activities you and your dog could do to win prizes</h2>\n<h2>How I built it, just a puff, condensation, and hopeful thinking</h2>\n<h2>Challenges I ran into, I couldn't find people who were willing to put in the time to create this. My passion may inspire them, but without that self-generating inspiration they have no drive beyond our farewells.</h2>\n<h2>Accomplishments that I'm proud of, all the people I've helped and inspired to help others.</h2>\n<h2>What I learned, Programming is not a drag and past operation.</h2>\n<h2>What's next for Service Animal and Veteran Integration, App Proposal, Creation, Fundraising, Market analysis and research, testing and integration, final launch, customer complaints of bugs 24/hour help/line blog and servers to handle the flux of traffic</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">n/a</span></li></ul>\n</div>\n</div>", ["", "", "", ""]], ["Spartan Student Survival Guide", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Spartan Student Survival Guide \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/518/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Spartan Student Survival Guide \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/667/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Spartan Student Survival Guide \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/668/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Spartan Student Survival Guide \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/669/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>This app is geared towards students who are new to Michigan State, to alleviate the problem of being lost on campus. Students are able to add their classes with a location, and the app will provide directions to each class. In addition, the app will show the user the nearest food and directions to it. The app was built using swift and XCode, and uses MapKit to show maps in the app, as well as to get directions for the user using apple maps. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/iphone-sdk\">iphone-sdk</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/justjake307/SpartaHack2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/justjake307/SpartaHack2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["This was my first time building an iOS app and using swift. I worked on the front and integrating Apple Maps into the app. ", "I worked full stack on the \"Schedule\" and map view components.", "I had no knowledge of Swift prior to this weekend. I helped in whatever ways i could, such as creating dictionaries and arrays of data. I am just happy to have had the opportunity to learn something new"]], ["WebAbsForInventors", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"WebAbsForInventors \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/708/datas/gallery.jpg\"/>\n<p>\n<i>Caption of the picture above</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>My Story is I:\nOnce upon a time, there was a guy who was brilliant.\nHe had a really cool idea for a hackathon Project, but his Team was not able to work out the Problems that appeared throu the whole development Progress. So he came up with an idea that he could his Team do easier.</p>\n<p>There was the idea of \"absforinventors.com\" bon!</p>\n<ul>\n<li>The End</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://67.225.133.75/~absforinventors/\" rel=\"nofollow\" target=\"_blank\" title=\"http://67.225.133.75/~absforinventors/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>67.225.133.75</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Multiplayer LeapMotion RollABall", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/7a2H0X5E9Fs?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Multiplayer LeapMotion RollABall \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/528/datas/gallery.jpg\"/>\n<p>\n<i>Bouncing platforms</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Multiplayer LeapMotion RollABall \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/530/datas/gallery.jpg\"/>\n<p>\n<i>Split screen multiplayer</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Multiplayer LeapMotion RollABall \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/531/datas/gallery.jpg\"/>\n<p>\n<i>10/10 IGN</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Multiplayer LeapMotion RollABall \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/532/datas/gallery.jpg\"/>\n<p>\n<i>Fire teleportation devices. </i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>The Roll A Ball tutorial on unity3d.com and the world's hardest square game thing.</p>\n<h2>What it does</h2>\n<p>Lets you control the ball in Unity by rotating your arm. You can also compete against other players using a split screen. :)</p>\n<h2>How we built it</h2>\n<p>Unity 3D and C#. </p>\n<h2>Challenges we ran into</h2>\n<p>Leap Motion took 4 hours to install.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>This whole thing.</p>\n<h2>What we learned</h2>\n<p>How Leap Motion works. (Kind of)</p>\n<h2>What's next for Multiplayer LeapMotion RollABall</h2>\n<p>Nothing.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li></ul>\n</div>\n</div>", ["C# programming, Leap Motion integration, design & stuff.", "My contribution was getting the Leap Motion to work with Unity.", ""]], ["NanoClinic", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"NanoClinic \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/469/datas/gallery.jpg\"/>\n<p>\n<i>Human Body</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"NanoClinic \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/473/datas/gallery.jpg\"/>\n<p>\n<i>Homepage</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"NanoClinic \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/474/datas/gallery.jpg\"/>\n<p>\n<i>Arm and hands symptoms subpage</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"NanoClinic \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/475/datas/gallery.jpg\"/>\n<p>\n<i>Head and throat symptoms subpage</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to create an app that would positively impact the health of an everyday person. NanoClinic is intended to be used as a starting point for further research on the specific ailments contained within it.</p>\n<h2>What it does</h2>\n<p>NanoClinic is designed to suggest various sicknesses a user may have based on the body part and the given criteria they input. The user chooses a part of the body and then chooses symptoms occurring in that region; based on what they choose, a list of ailments appears.</p>\n<h2>How we built it</h2>\n<p>We built NanoClinic using MIT App Inventor 2, which is an open source web application that allows the user to create Android applications.</p>\n<h2>Challenges we ran into</h2>\n<p>Due to the time constraints, we were able to program only one symptom per sickness. We would have liked to program more sickness to match each symptom, as well as more symptoms to match each sickness. Also, MIT App Inventor 2 did not offer a method to detect the status of the checkbox (whether it has been checked or unchecked). It only detects whether the status has been changed.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are proud of the logo design and the general formatting of the application. Additionally, we believe that we designed the Human Body page to be user-friendly and aesthetic.</p>\n<h2>What we learned</h2>\n<p>We exceeded our own expectations in terms of what we believed we could accomplish. Also, we discovered that MIT App Inventor has certain constraints that we were unable to program around. We gained app creation knowledge through each step of the process.</p>\n<h2>What's next for NanoClinic</h2>\n<p>In order to increase suggested diagnosis accuracy, the amount of symptoms available to be chosen by the user, as well as the sicknesses that follow the choices, should both increase. Additionally, other features, such as Body Mass Index calculation and age, have the potential to be factored into the final results.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mit-app-inventor\">mit-app-inventor</a></span></li></ul>\n</div>\n</div>", ["I worked on formatting the application, as well as its coding and research. ", "I worked on general formatting, framework creation, resource gathering, and coding.", "I contributed to the programming, designing, formatting, and resource gathering for the NanoClinic application."]], ["Ambiencer", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Ambiencer \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/586/datas/gallery.jpg\"/>\n<p>\n<i>Universal Windows App visual mock-up</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>Ambiencer</h1>\n<h6>App for sound, sfx and ambience control over your RPG tabletop play, writing sessions, drama play and rehearsals, playing with your children or anything you can think of!</h6>\n<p><em>Project for Spartahack 2016</em></p>\n<ul>\n<li>Ever wanted to play RPG with your friends but had a hard time getting the atmosphere right?</li>\n<li>Are you writing an intense fight for your book and needs to feel the adrenaline?</li>\n<li>Doing a drama play but the sound person gets lost in the amount of files?</li>\n<li>Your children are using their imagination to play. Why not make it more immersive?</li>\n</ul>\n<p>The solution to <del>all</del> some of your problems is here! At least those related to creating the perfect ambience and sounds for every moment you need so!</p>\n<ul>\n<li><strong>Pads:</strong>\nRealtime control over all of your sound sets per scene!</li>\n<li><strong>Timeline:</strong>\nScript events with visual nodes and timing for executing complex manipulations with the click of a button!</li>\n<li><strong>Market:</strong>\nDozens of free and paid packages of every theme you can think of! Are you a sound designer? Why not be there too?</li>\n<li><strong>Stop and halt:</strong>\nStop button ease the stop by reducing the volume in a sweet speed (personalizable) and halt stops immediately all of them. </li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/photoshop\">photoshop</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/visual-studio\">visual-studio</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/bestknighter/Ambiencer\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/bestknighter/Ambiencer\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Siv", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Siv \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/512/datas/gallery.jpg\"/>\n<p>\n<i>Application Icon</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Siv \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/593/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Siv \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/624/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Siv \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/626/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Siv \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/627/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Interactive learning environment that utilizes VR and motion tracking</p>\n<h2>What it does</h2>\n<p>Oculus Rift DK2 paired with Leap Motion to allow user interaction with program. Voice commands to input variable values, and Wolfram Alpha solves it all.</p>\n<h2>How we built it</h2>\n<p><a href=\"https://travis-ci.com/bbuscarino/Siv-Web\" rel=\"nofollow\"><img alt=\"Build Status\" data-canonical-url=\"https://travis-ci.com/bbuscarino/Siv-Web.svg?token=7Juy7ta9EcmRXaLp6SGF&amp;branch=develop\" src=\"https://res.cloudinary.com/devpost/image/fetch/s--7PeUSGpe--/https://travis-ci.com/bbuscarino/Siv-Web.svg%3Ftoken%3D7Juy7ta9EcmRXaLp6SGF%26branch%3Ddevelop\"/></a></p>\n<ul>\n<li>Node.js and Express API, continuously integrated with Travis CI</li>\n<li>Unity 5 with Oculus DK2</li>\n<li>Firebase and Azure running the backend</li>\n<li>Amazon Echo + AWS Lambda driving the voice commands</li>\n</ul>\n<h2>Challenges we ran into</h2>\n<p>Unity/Leap Motion SDK also decided to die at the literal last possible second.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Completing the project within the alotted time period which allowed for minor improvements to strengthen it's presence in the competition.</p>\n<h2>What we learned</h2>\n<p>Test early, test often.\nLeaps of faith end up missing quite often.</p>\n<h2>What's next for Siv</h2>\n<p>The future is unknown. Due to the immaturity of the related technologies, their ability to stick together is rather limited. APIs are fun though.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/oculus\">oculus</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/leap-motion\">leap-motion</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/alexa\">alexa</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/wolfram-technologies\">wolfram-technologies</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li></ul>\n</div>\n</div>", ["I worked on UI/UX, with Unity 5, Visual Studio,  and photoshop. C#, C++, Java, Javascript. ", "Wrote the backend and API, put together the build system. Node.js, Express, C#", "", ""]], ["Shaple", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Shaple \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/373/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Shaple \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/374/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We hoped to combine the original classic games such as pong with the new simple phone games that consistently top the charts. </p>\n<h2>What it does</h2>\n<p>It is a simple and fun paddle game where the goal is to try and keep the ball in the decagon as long as possible. However, one cannot just simply aim at one line too many times because the ball will slip out if it hits one side too many times consecutively. In addition, the corners of the decagon are open zones that the ball will fly though as well.</p>\n<h2>How we built it</h2>\n<p>We used JavaScript and basic coding principles to make the shape of the zone and the game.</p>\n<h2>Challenges we ran into</h2>\n<p>It was difficult to deal with the physics and trigonometry the ball required to bounce at the proper angle.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We were able to complete our game without any prior coding experience. In addition, we were able to effectively recreate the algorithm used in Pong in a larger shape, which required advanced physics and algebra.</p>\n<h2>What we learned</h2>\n<p>We learned JavaScript, algorithms, and the meaning of teamwork and perseverance.</p>\n<h2>What's next for Shaple</h2>\n<p>We would like to make it so that the shape is divided into many smaller segments that disappear if hit too many times, which will increase the difficulty of the game. In addition, we are trying to add more levels and expand the app to the mobile markets with advertising.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://www.khanacademy.org/computer-programming/spin-off-of-shaples/2949422384\" rel=\"nofollow\" target=\"_blank\" title=\"https://www.khanacademy.org/computer-programming/spin-off-of-shaples/2949422384\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.khanacademy.org</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the coding that dealt with the shapes along with the aesthetics and some of the physics as well", "", "", ""]], ["Tab Transfer", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Tab Transfer \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/477/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Tab Transfer \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/485/datas/gallery.jpg\"/>\n<p>\n<i>Unobtrusive, beautiful icon</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Tab Transfer \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/496/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to create an extension that allows you to transfer your tabs between different browsers and devices.</p>\n<h2>What it does</h2>\n<p>Tab Transfer takes all your tabs, extracts the URLs, and sends a POST request to the paste.ee API to create a new paste.</p>\n<h2>How we built it</h2>\n<p>Google and the really cool Cycle guy.</p>\n<h2>Challenges we ran into</h2>\n<p>We originally wanted to have a paste where you could simply click each link to open the ones you wanted. However, the only pastebin-like websites that supported this did not have APIs. We also originally used Pastebin, but found out it had a 20-post-per-day limit, necessitating us to switch to paste.ee for its unlimited limit.</p>\n<h2>Accomplishments that we're proud of</h2>\n<ul>\n<li>We all learned how to make a Chrome extension.</li>\n<li>It kinda actually works</li>\n<li>First hackathon submission (minus 1 person)</li>\n</ul>\n<h2>What we learned</h2>\n<ul>\n<li>One member had no experience with Javascript</li>\n<li>Learned how to use other webapps' APIs</li>\n</ul>\n<h2>What's next for Tab Transfer</h2>\n<p>Something we could try to change is to create our own Pastebin-implementation that supports clickable links. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/woofiewilly/Chrome_Tab_Transfer\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/woofiewilly/Chrome_Tab_Transfer\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Smart Tag ", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>When we first approached the idea, we believed that it already existed. Upon discovering that it didn't, we decided that it would revolutionize the way that users manage their media by naturally marrying text-based searching and image processing</p>\n<h2>What it does</h2>\n<p>It allows users to search for local images using assigned tags</p>\n<h2>How we built it</h2>\n<p>Used the clarifai api to tag images within the phone's local storage and then uses a hashmap to sort the tags into a key value schema where the keys are the tags and the values are arraylists of images</p>\n<h2>Challenges we ran into</h2>\n<p>The largest challenge was accessing the phone's local storage in the background and sorting the images into a schema</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are proud that we were able to use the clarifai api to tag the images and arrange the images into a hashmap</p>\n<h2>What we learned</h2>\n<p>We learned how to complete operations on the internal of the device.</p>\n<h2>What's next for Smart Tag</h2>\n<p>Integrating amazon webs services and echo to allow users to search for images efficiently with their voice</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Spartahacks2016/Hack_Project\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Spartahacks2016/Hack_Project\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Ramsay", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/nHIZTELOPrc?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Ramsay \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/290/datas/gallery.jpg\"/>\n<p>\n<i>Ramsay</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Ramsay \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/297/datas/gallery.jpg\"/>\n<p>\n<i>Echo</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We all <em>hate</em> cooking, lets make it <em>easier</em>.  Besides, who wouldn't cook well with Chef Ramsay navigating them through the complexity of the culinary arts.</p>\n<h2>What it does</h2>\n<ul>\n<li>Filters recipes based on Intolerance (i.e. gluten free, vegan, etc.)</li>\n<li>Randomly presents a recipe based on a craving</li>\n<li>Lists ingredients used in a recipe</li>\n</ul>\n<p>Here's what a conversation might look like:</p>\n<p><strong>User:</strong> <em>Alexa, ask Ramsay</em><br/>\n<strong>Alexa:</strong> <em>Welcome to Alexa Ramsay assistant</em><br/>\n<strong>User:</strong> <em>I'm in the mood for brownies</em><br/>\n<strong>Alexa:</strong> <em>I found Mississippi Mud Brownies, AKA Frosted Marshmallow Brownies.</em><br/>\n<strong>User:</strong> <em>Alexa, ask Ramsay</em><br/>\n<strong>Alexa:</strong> <em>Welcome to Alexa Ramsay assistant</em><br/>\n<strong>User:</strong> <em>How do I make Mississippi Mud Brownies</em><br/>\n<strong>Alexa:</strong> <em>You need cocoa powder, eggs, flour, granulated sugar, light-brown sugar, marshmallows, milk, pecans, powdered sugar, salt, salted butter, salted butter, and vanilla extract</em><br/></p>\n<h2>How we built it</h2>\n<p>Built using <code>node.js</code>, <code>AWS's Alexa API</code>, and <code>Spoonacular's API</code></p>\n<h2>Challenges we ran into</h2>\n<p>The most difficult part of creating Ramsay, besides learning node.js for the first time, would probably be the complex API involved in creating a conversation using Alexa.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We're most proud of figuring out how to use the Alexa service, and integrating it with external API's. Oh, and our app actually worked. That's nice!</p>\n<h2>What's next for Ramsay</h2>\n<p>Our vision is to expand the functionality that Ramsay provides, as well as implement a deeper conversation system.  We want to make Ramsay the ultimate kitchen companion.</p>\n<h3>Things we want Ramsay to be able to do</h3>\n<ul>\n<li>Cooking walkthrough</li>\n<li>Deeper conversation with Alexa</li>\n<li>Recipes based on current ingredients</li>\n<li>Algorithm to standardize recipe names, ingredient lists, and step by step walkthrough</li>\n<li>Construct meal plans'</li>\n</ul>\n<p>The github project can be found <a href=\"https://github.com/joshherkness/Ramsay\" rel=\"nofollow\">here</a>.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/alexa\">alexa</a></span></li><li><span class=\"cp-tag\">echo</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/joshherkness/Ramsay\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/joshherkness/Ramsay\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Backend, Node.js", "I worked in integrating the Alexa app with an API called Spoontastic. I was also responsible for constructing the conversation flow for the application. It was my first time using Node.js so this project was very intimidating. That being said, I learned a lot and had a great time!", ""]], ["emojtions", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"emojtions \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/447/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>I read about several projects that used a twitter sentiment analysis algorithm to determine opinions and geographic trends. Why not do this for just feelings?</p>\n<h2>What it does</h2>\n<p>This website uses the Twitter API and a simple natural language processing query (with keywords) to analyze not general sentiment (positive or negative), but specific emotions. These emotions are mapped onto a map of the US, and emojis and color are used to delineate between different areas of emotions.</p>\n<h2>How I built it</h2>\n<p>This is a website hosted on a Tomcat server on my laptop. It's built with HTML and CSS, and the JavaScript does the sentiment analysis. The Twitter API is used to stream and search tweets within the geographic borders of the US, and then this data is mapped visually onto a JSON of the USA. </p>\n<h2>Challenges I ran into</h2>\n<ul>\n<li>Remotely accessing and referencing pubnub libraries </li>\n<li>Choosing words for the NLP that would not have double-meanings (for example, the word \"damn\", which typically means frustration or anger, but when I had included this word, a bunch of tweets of the \"Damn Daniel\" video came up)</li>\n<li>Getting the emojis to fit the visual space I allotted for them</li>\n<li>Titling this hack</li>\n</ul>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I'm happy that I have a functional project at the end. I'm proud of the fact that I was able to problem-solve with mentors and I actually understood what the heck they were saying. </p>\n<h2>What I learned</h2>\n<p>How to API, how to host on a local web server, how to use JSONS</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twitter\">twitter</a></span></li><li><span class=\"cp-tag\">boot</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/pubnub\">pubnub</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/tomcat\">tomcat</a></span></li></ul>\n</div>\n</div>", [""]], ["Simulation Surgery", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Simulation Surgery \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/458/datas/gallery.jpg\"/>\n<p>\n<i>Logo</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Doctors may need years of practice before having a real surgery, this tech helps them to better prepare by providing them with a near-reality experiences, to sharpen their skills and knowledge regarding surgery.</p>\n<h2>What it does</h2>\n<p>Simulate real life surgery with voice commands (Alexa as the virtual nurse, can provide tools like a nurse in a surgery) ,VR technology to provide a near-reality experiences, leap motion as the interface for the surgery and clarifai as the machine-learning tagging tool to provide different surgery scenarios.</p>\n<h2>How I built it</h2>\n<p>We'd like to use Oculus as the VR experience frontend combined with the powerful computational service by Azure to provide a near-reality surgery experience. We'd also like to use Clarifai's machine-learing technology as the scenario generator to provide the user with different visual scenarios to accommodate surgeons'needs for practices. We'd very much like to use Alexa as the voice backend and virtual nurse,who can provide tools like lancets simply by using voice commands that are common in hospitals. With leap motion as the interaction interface, we can provide the user a WYSIWYG interactive experience that is both accurate and educating.</p>\n<h2>Challenges I ran into</h2>\n<p>The time in building the system would be very long and the communications between different APIs would require a lot of researches for the system to achieve a high accuracy.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>That this idea would help the society as a whole is what makes us the most proud, by providing this system, we could really solve the problem by providing doctors in isolated and under developing area a convenient way of accessing the newest development of medical cares and training.</p>\n<h2>What I learned</h2>\n<p>It is very possible that the VR technology and AI technology can help the society in solving the problem of unevenly distribution of education access, it can literally save many lives by providing concerned party a easy way to access the most advanced technology.</p>\n<h2>What's next for Simulation Surgery</h2>\n<p>To implement the idea under a much accurate environment with professional's help in building the system, and to cut down the cost for the whole system so that every one can have a easy access to the advanced technology </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/leap-motion\">leap-motion</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/alexa\">alexa</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/oculus\">oculus</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/azure\">azure</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["Munch Match", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Munch Match \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/354/153/datas/gallery.jpg\"/>\n<p>\n<i>logo</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Munch Match \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/354/156/datas/gallery.jpg\"/>\n<p>\n<i>favicon</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1><a href=\"http://munchmatch.aliciaf.me\" rel=\"nofollow\">Munch Match</a></h1>\n<h2>Inspiration</h2>\n<p>We believe that when you have lunch with a group or just another (random) person, that goes to your school or work, it's a great way to connect, meet new people, and engage within the community. It's also a cool ice breaker! </p>\n<p>Additionally, based on a <a href=\"http://www.nytimes.com/2016/02/28/magazine/what-google-learned-from-its-quest-to-build-the-perfect-team.html\" rel=\"nofollow\">NYTimes article</a>, they believe that \"the most productive employees are ones that build larger networks by rotating dining companions\".</p>\n<h2>What it does</h2>\n<p>For demo purposes, once you enter the website, you can login and then select which type of food you like. Then it will pair you up with somebody random that has the same taste in food as you. Since we have a small amount of users registered, we did not implement a section to select which school or job you attend; <em>however</em>, that is our ultimate goal!</p>\n<h2>How we built it</h2>\n<ul>\n<li>We built this web app using the <a href=\"http://mean.io/#!/\" rel=\"nofollow\">MEAN stack</a>. </li>\n<li><a href=\"http://materializecss.com/about.html\" rel=\"nofollow\">MaterializeCSS</a> framework.</li>\n<li>To deploy the application we used <a href=\"https://aws.amazon.com/\" rel=\"nofollow\">AWS</a> and <a href=\"http://dokku.viewdocs.io/dokku/\" rel=\"nofollow\">Dokku</a>.</li>\n<li>Integrated the <a href=\"https://auth0.com/\" rel=\"nofollow\">Auth0 API</a> for users to login.</li>\n<li>Created logo design with Adobe Illustrator.</li>\n</ul>\n<h2>Challenges we ran into</h2>\n<ul>\n<li>Trying to make the website responsive</li>\n<li>Navigating through the different pages</li>\n<li>User data issues</li>\n<li>Putting together the objects for related food types</li>\n</ul>\n<h2>Accomplishments that we're proud of</h2>\n<ul>\n<li>How the logo came out</li>\n<li>We were able to finish a good portion of the project</li>\n</ul>\n<h2>What's next for Munch Match</h2>\n<p>Implement a school and work section to essentially connect people within their communities and bring them closer together with a great lunch.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jade\">jade</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/less\">less</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/angular-js\">angular.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag\">materializecss</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag\">dokku</span></li><li><span class=\"cp-tag\">dokker</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/adobe-illustrator\">adobe-illustrator</a></span></li><li><span class=\"cp-tag\">auth0-api</span></li></ul>\n</div>\n</div>", ["", "", ""]], ["Memorais", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Memorais \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/426/datas/gallery.jpg\"/>\n<p>\n<i>Enter tag and find pictures</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>I don't like the time it takes to scroll through my hundreds of photographs trying to find something specific. I thought it'd be so much easier to just go and search for specifics within the photo to find it easily. </p>\n<h2>What it does</h2>\n<p>Users can enter a specific tag that they're looking for, and if anything from any of their photos are prevalent, there will be another screen with a grid displaying all the qualifying pictures.</p>\n<h2>How I built it</h2>\n<p>I made an android application that goes through the user's photos on their device and pulls them into the app. I then used the Clarifai API to help identify the tags in all pictures so that specifics could be searched for. It will then sort through all the common tags based on what was requested, and present the users photos with the appropriate tags.</p>\n<h2>Challenges I ran into</h2>\n<p>It was difficult to pull in all of the users photos without them having to go in and select them all. It was also difficult to sort through the appropriate tags and then present them.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>This is my first time ever working on an application on my own, it was also my first time working with the Clarifai API. </p>\n<h2>What I learned</h2>\n<p>I learned how to use the Clarifai API as well as work with other features within Android development.</p>\n<h2>What's next for Memorais</h2>\n<p>Finish the application as best as possible, and add new features such as searching through Facebook pictures as well.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xml\">xml</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li></ul>\n</div>\n</div>", ["I was a solo hacker and worked on it all. "]], ["Retrospection", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Retrospection \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/362/datas/gallery.jpg\"/>\n<p>\n<i>Android App</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Retrospection \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/363/datas/gallery.jpg\"/>\n<p>\n<i>Android App</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Retrospection \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/364/datas/gallery.jpg\"/>\n<p>\n<i>Android App</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Retrospection \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/404/datas/gallery.jpg\"/>\n<p>\n<i>Amazon Alexa</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Retrospection \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/405/datas/gallery.jpg\"/>\n<p>\n<i>Amazon Alexa</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Retrospection \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/406/datas/gallery.jpg\"/>\n<p>\n<i>Amazon Alexa</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We set out to create an application that would be a valuable resource for individuals with disabilities, such as Alzheimer's or low vision. Our aim is to give people the tools necessary to recall and revisit their past experiences. Individuals with Alzheimer's disease typically struggle with memory loss, so our goal is to jog their memory. For individuals with low vision, we want to create a framework that enables them to revisit their memories and \"see\" the bigger picture.    </p>\n<h2>What it does</h2>\n<p>In its final form, Retrospection will have an online and mobile app presence. In its simplest form, users have the option of choosing to take a picture or record a segment of audio with a time stamp. Images get processed and pushed through Clarifai to generate tags that describe what is included in the image. As tags are generated the information is grouped into a database entry where it waits for Amazon Alexa to pull the tags out of the database. Audio recording entries are passed through speech to text; and then text is incorporated into the Amazon Alexa skill. Once Alexa has been updated with new entries, users can ask Alexa about a specific day/time and Alexa will announce either the tags from that instance, or highlights from a audio recording. </p>\n<h2>How we built it</h2>\n<p>We began by creating a Wordpress website and connecting to Microsoft Azure. From there we implemented an android application utilizing Clarifai in Android Studio. We also created a skill for Amazon Alexa.</p>\n<h2>Challenges we ran into</h2>\n<p>Several challenges occurred as a result of combining different technologies to create Retrospection. Connecting Amazon Alexa with a  blob database in Microsoft Azure proved to be a difficult task because we were unfamiliar with the coding languages necessary to implement these connections. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>In the relatively short time of the Hackathon and as first-time hackers, we were able to envision a project with incredible possibilities. Although we could not finish the full implementation, we are very excited about our progress and proof that siblings can work together to solve a problem (eventually).</p>\n<h2>What we learned</h2>\n<p>We learned how to utilize API's, Microsoft Azure, Java/Android Studio, Amazon Alexa for the first time. Sleep deprivation leads to accidentally inventing a new word for your app name!</p>\n<h2>What's next for Retrospection</h2>\n<p>We plan to continue working on the implementation/ database connect problems. We would really like the app, website, and Alexa to be seamless. We are also going to be on the lookout for additional cases/uses of this application.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-alexa\">amazon-alexa</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/wordpress\">wordpress</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/azure\">azure</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://retrospection.azurewebsites.net/\" rel=\"nofollow\" target=\"_blank\" title=\"http://retrospection.azurewebsites.net/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>retrospection.azurewebsites.net</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Study Tracker Pro", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Study Tracker Pro \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/423/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>As a high school senior struggling with many AP classes, I have come to realize the importance of prioritizing my studies at home. If I am struggling with calculus, for example, I need to devote more time into studying calculus but at the same time, I need to devote a little bit of time for other subjects as well because I can't let those classes suffer either. For this reason, devoting time to each class so that it may maximize the overall grade is very important. And this is why I thought it'd be great if there was a mobile app or a website that would keep track of how much time I spent studying each subject. Using this information, I would be able to figure out if the amount of time I spent on each subject is the good amount. </p>\n<h2>What it does</h2>\n<p>As stated before, my program keeps track of how much time the user spent on each subject. After timing him/herself, there is a spot where the user can enter the subject he/she studied. If the user decides to study a different subject, they can time themselves again and add the new subject. The user will be able to see the time from previous subjects even after they have completed many subjects. </p>\n<h2>How I built it</h2>\n<p>I used HTML, CSS, and JavaScript to build my program. At the top of the page, the description of what the program will do was displayed using HTML. At the bottom, I placed a digital clock, also using HTML. The timer starts when the user presses the START button and stops when the user presses the STOP button. The slot in which the user can enter the name of the subject is hidden when the clock is running and appears after the user has pressed the STOP button. The clock is hidden just as the subject slot appears. Next to the name of the subject, the time appears also. JavaScript was used to do that. When the START button is clicked, the program itself starts timing itself. When the STOP button is clicked, the program stops timing. The time interval between the two is then printed out next to the subject slot. The timer doesn't do anything other than keeping time for the user's accessibility. After printing out the name of the subject and the time, the program repeats until the user decides to exit out of the program. </p>\n<h2>Challenges I ran into</h2>\n<p>At first, I tried to use a JavaScript version of the time, which was not successful. I tried to figure out a way to solve this problem but decided to change the timer instead. Resorting to HTML timer still had the same problem so instead of trying to pass time directly from the timer, I decided to let the program keep a time of its own and print that out instead. Also, I couldn't figure out a way to insert time for each of the subjects. This problem was also solved by letting the program keep its own time. </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I am very proud of completing my very first major program and my very first Hackathon.</p>\n<h2>What I learned</h2>\n<p>I learned that if I stick to the problem and try to fix it, I will eventually find a solution. \nIn addition, I learned how to create a basic webpage using HTML and JavaScript.</p>\n<h2>What's next for Study Tracker Pro</h2>\n<p>In the future, Study Tracker Pro will keep a record of all the times the user studied even after the program is closed. Also, a pie graph of all the subjects in proportion to the time will be created for easy analysis. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li></ul>\n</div>\n</div>", [""]], ["Hands Free Computer Browsing", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Just want Alexa to be like Jarvis in Iron Man</h2>\n<h2>In windows 10 we have Cortana, which you can talk to her by using the microphone in your computer. Cortana's abilities is to search for things on your computer and internet. But, she is stuck on your Windows 10 computer and you can't share the love with previous windows versions. Now you can use your personal assistant, Alexa, from your Amazon Echo to control your computer with your voice!</h2>\n<h2>I built this program using using Alexa Skill Kit and Amazon Web Service apps, Lambda and SQS. I also used Visual Studios to make an windows program to connect the machine to the AWS apps.</h2>\n<h2>Finding out how to do this hack was hard. like extremely hard. With this being my first hack, you can imagine how lost i was at some points. There was no googling it... I was asking questions all weekend by going to the Alexa and Microsoft booths.</h2>\n<h2>I am so proud that this is my first hackathon and first hack. This hack is so cool and I love that veteran hackers are even impressed with my hack.</h2>\n<h2>I have learned a ton about what Alexa can do. The possibilities are endless with her. The AWS apps are so simple and easy to understand. I now know how to use visual studios and it isn't a waste of space on my computer anymore</h2>\n<h2>Right now in this 36 hour hackaton I can only open certain websites and notepad. But, the future is to have Alexa convert what you are saying into a message to SQS and have the windows application grab that message. Another thing is to implement command prompt commands to ask the computer to do hardware tasks like volume control, screen brightness, sleep mode, or simply turn off the computer.</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/visual-studio\">visual-studio</a></span></li></ul>\n</div>\n</div>", [""]], ["Hack Your Health - Health App for Hackers", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Hack Your Health - Health App for Hackers \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/535/datas/gallery.jpg\"/>\n<p>\n<i>Logo</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Hack Your Health - Health App for Hackers \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/398/datas/gallery.jpg\"/>\n<p>\n<i>A search for chemical additives in foods as well as some from common Hacker foods listed</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Hack Your Health - Health App for Hackers \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/401/datas/gallery.jpg\"/>\n<p>\n<i>Scanning QR codes of snacks to retrieve nutritional information</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Hack Your Health - Health App for Hackers \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/400/datas/gallery.jpg\"/>\n<p>\n<i>Detailed information on additives such as their use and if they are sourced from vegetarian products</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Hack Your Health - Health App for Hackers \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/830/datas/gallery.jpg\"/>\n<p>\n<i>Tally of day's consumption as well as an estimator for the next hackathon</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration &amp; What it Does</h2>\n<p>We all love hackathons, but attending several of them within a short time span can wreak havoc on your body. This is mostly due to the typical hackathon diet consisting of high levels of fat, carbohydrates, and various sugars; most of which aren\u2019t burnt off in time for the next event.  This app helps you to determine what foods should be avoided by detailing what additives in foods are dangerous and estimating the quantity of a specific food which you can tolerate without causing any harm.  The app also estimates how long one should take before attending another hackathon based on how much exercise they\u2019ll do and how much junk food they\u2019ve eaten. This is all done easily through bar code scans that retrieve nutritional information seamlessly. </p>\n<h2>How I built it</h2>\n<p>Android app using some REST APIs such as e-additives and nutritionix. </p>\n<h2>Challenges I ran into</h2>\n<p>Trying to develop a clear vision for the app in order to avoid redundancies and refactoring of code. </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Completing the project as a solo hacker for the first time!</p>\n<h2>What I learned</h2>\n<p>How to integrate various APIs together. I had mostly experience with my own backends only. </p>\n<h2>What's next for sparta2016</h2>\n<p>Introduce push notification to remind hackers of upcoming hackathons and tell them how much they have to exercise to be able to go (without gaining weight)</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xml\">xml</a></span></li><li><span class=\"cp-tag\">rest-api</span></li><li><span class=\"cp-tag\">e-additives-api</span></li><li><span class=\"cp-tag\">nutritionix-api</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/AkshayPall/sparta2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/AkshayPall/sparta2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["In Three Words", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>The current flux of opinions about Donald Trump and memes in general brought us to our idea.</p>\n<h2>What it does</h2>\n<p>In Three Words is a website that is developed mainly for entertainment purposes. With the website, people can gather opinions about them in the form of three word phrases and see which phrases are most dominant. In most cases, three words are all you need to describe a person. People can also post three word phrases about other people, and see which phrases are the most popular.</p>\n<h2>How we built it</h2>\n<p>Hiroo was mainly involved in the design process. He used Photoshop to make rough sketches of what our website should look like.</p>\n<p>It was then Anthony's job to implement the better of the sketches. He used HTML, CSS and JavaScript to build a website from scratch. HTML provided the skeleton of the websites, while CSS and JavaScript gave styling and animations to the website to bring it to life.</p>\n<p>Now that the front end is done, we arrive at the back end. Thomas constructed the backend needed to process all the data. We needed a database to store information about people, namely their pictures and the phrases said about them. We also needed connection and data flow between pages. Thus, Thomas used PHP to fulfill such needs.</p>\n<h2>Challenges we ran into</h2>\n<p>We mostly ran into problems that came with inexperience. For example, we had no experience with Microsoft Azure and Firebase, so we took a lot of time to learn and experiment with them. Also, we had a rough week with exams and MHacks, so staying up for another 36 hours just wasn't realistic.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>As freshmen, we are proud to have come this far into the project. Utilizing our skills for the purposes of entertainment was a first for us, but it was a great experience. We are glad to be able to finish this project and produce something that people might want to actually use.</p>\n<h2>What we learned</h2>\n<p>From SpartaHack, we mostly gained experience. We won't be reading long documents or tutorials on Microsoft Azure and Firebase anymore. Not only so, the amount of free food and swag convinced us that the overnighters were worth it, and that we will be attending more hackathons in the future.</p>\n<h2>What's next for In Three Words</h2>\n<p>In Three Words is very extensible, and can be developed further to include more features and have a smoother UI.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mysql\">mysql</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li></ul>\n</div>\n</div>", ["I built the entire back end myself in PHP and MySQL.", "", ""]], ["PokeZork", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to make a way to play Zork with voice, then when we realized that it was the anniversary of Pokemon, we decided to make a tribute to them</p>\n<h2>What it does</h2>\n<p>Currently nothing, but once we finish it, we will be able to walk through a Pokemon game (currently Ruby) through voice commands to the Amazon Alexa </p>\n<h2>How I built it</h2>\n<p>We tried to build it with minimal sleep in the last 12 hours before the hackathon ended... didn't work out too well</p>\n<h2>Challenges I ran into</h2>\n<p>Connecting lambda and dynamo db was very difficult</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>it will be very easy for us to add other scenarios once we have it working, we made it very easily extensible</p>\n<h2>What I learned</h2>\n<p>how to write an alexa skill/code node js</p>\n<h2>What's next for PokeZork</h2>\n<p>getting it to work!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-alexa\">amazon-alexa</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-dynamodb\">amazon-dynamodb</a></span></li></ul>\n</div>\n</div>", [""]], ["Hey Alexa, Whats for Dinner?", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/OFlk_gmMo0Q?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Programmers are the laziest people in the world, so instead of having to actually walk all the way down to the cafeteria to check out what's being served, Alexa can simply tell you.</p>\n<h2>What it does</h2>\n<p>Ask Alexa what a certain station is serving at a certain cafeteria, and Alexa will tell you what they are serving right now (She knows what time of the day it is and automatically adjusts the output)</p>\n<h2>How I built it</h2>\n<p>Alexa is built using Javascript, and tested through amazon's development console. For a prototype, I downloaded the menus for the day and put it as a table into the code. Alexa identifies the meal of the day and which stations you want to know, then tells you what is currently being served.</p>\n<h2>Challenges I ran into</h2>\n<p>We have never done javascript in our lives before, let alone Alexa. I think one of the most challenging obstacle that we ran into is not being used to the errors that the service simulator is returning to us, causing a confusion.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We are extremely proud of the fact that we created a working prototype that we can and hope to expand on in the future with no background knowledge in the language and Alexa at all. Furthermore, the amount of caffeine consumed this weekend might have just broke a Guinness World Record (quick someone call them)</p>\n<h2>What I learned</h2>\n<p>One of the most valuable lessons that we learned at this hackathon is the importance of being able to decipher code. Without much documentation provided, reading long code quickly becomes confusing. We learned by trial and error that the best way to understand a piece of code is to break it down and list all the functions and method headers first. Then take notes as to what each function does, and how they relate or use each other. Doing this allowed us to understand how to use Alexa and teach her new programs easily, as if we have been doing it for a while.</p>\n<h2>What's next for Hey Alexa, Whats for Dinner?</h2>\n<p>Currently, the prototype for our program requires manual download and update of the menus due to the lack of knowledge in document parsing for javascript within our group. In the future, we hope to have Alexa be automatically able to download and update the menu every single day, allowing the application to maintain itself.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/alexa\">alexa</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag\">atom</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/EvilJuiceBox/alexaProjects\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/EvilJuiceBox/alexaProjects\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Cardboard Pac-Man", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Cardboard Pac-Man \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/109/datas/gallery.jpg\"/>\n<p>\n<i>Munch dots!</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Cardboard Pac-Man \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/110/datas/gallery.jpg\"/>\n<p>\n<i>Warp to the other side!</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Cardboard Pac-Man \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/111/datas/gallery.jpg\"/>\n<p>\n<i>Watch out for Blinky, though.</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Our story</h2>\n<p>Last year at SpartaHack, two of our team members created Cardboard Asteroids, a Top 10 hack that re-imagined a classic through the power of Google Cardboard. This year, with an additional team member and a bit more experience under our belts, we wanted to challenge ourselves to bring a more complex game to life. Introducing the first iteration of Cardboard Pac-Man!</p>\n<h2>So what is it?</h2>\n<p>Have you played Pac-Man? Sure you have. How would you like to play in first-person?</p>\n<p>Cardboard Pac-Man allows you to take control of the ghost-gobbling hero and discover just how tough that maze can be to navigate when you aren't looking down from above! Every dot feels that much more satisfying to collect when it's done in virtual reality.</p>\n<h2>How did this come to be?</h2>\n<p>A combination of Blender and Unity (using C# for scripting).</p>\n<p>All of the in-game models were designed to have a pixelated aesthetic in line with the original game. In addition, the algorithms and grid system were recreated from scratch.</p>\n<h2>Challenges</h2>\n<p>Those ghosts were more trouble than we remembered! Unfortunately the full movement algorithms were not completed in time for the presentation, but we definitely plan to finish them up in the near future. Fortunately, the demo is still pretty entertaining even without the threatening specters. If you're moving slow, though, one member of the spooky group might make an appearance.</p>\n<h2>Accomplishments</h2>\n<p>The models turned out very well, and the gameplay that is fully integrated is simple but entertaining, which is in line with the mission of the original game.</p>\n<h2>What's next for Cardboard Pac-Man?</h2>\n<p>Finishing the ghost algorithms, integrating a full menu and GUI, and possibly adding more levels.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/blender\">blender</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-cardboard\">google-cardboard</a></span></li></ul>\n</div>\n</div>", ["I created all the models used in the game. Funily enough I first designed each model in Minecraft to get that 8-bit feel before actually building them in blender. ", "", ""]], ["FireFind", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"FireFind \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/332/datas/gallery.jpg\"/>\n<p>\n<i>Logo</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Red bull and coffee</p>\n<h2>What it does</h2>\n<p>What doesnt it do? FireFind lets you take a picture and write a note about it! Syncs with Firebase</p>\n<h2>How we built it</h2>\n<p>Android voodoo and good luck</p>\n<h2>Challenges we ran into</h2>\n<p>Trying to use Firebase to store images as a string..</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Stringing together multiple apis into one app. Our neat logo!</p>\n<h2>What we learned</h2>\n<p>Not to use Firebase to store images</p>\n<h2>What's next for FireFind</h2>\n<p>Add location tracking to see what is near you that is lost!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xcode\">xcode</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/cloudinary\">cloudinary</a></span></li><li><span class=\"cp-tag\">picasso</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ios\">ios</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/dtkelch/SpartaHack\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/dtkelch/SpartaHack\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["iOS", "", ""]], ["WMB - Where's my Bus", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"WMB - Where's my Bus \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/265/datas/gallery.jpg\"/>\n<p>\n<i>Opening page</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"WMB - Where's my Bus \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/266/datas/gallery.jpg\"/>\n<p>\n<i>Map view of current buses on campus</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Michigan State currently does not have a bus tracking app on campus, and it is an idea that will benefit many people (as well as us, the developers).</p>\n<h2>What it does</h2>\n<p>WMB will tell you when the next bus will arrive at the nearest bus stop to you, your most recently visited, or your favorite bus stops.  Additionally, there is a map view in which you can see, in real time, all of the buses on campus and their positions.  </p>\n<h2>How we built it</h2>\n<p>We developed the android app in android studio using Java, and the backend was developed in phpStorm using php and a mySQL database.  </p>\n<h2>Challenges we ran into</h2>\n<p>We ran into a few problems with the quality of the data received from the CATA feeds, as well as the fact that we're only allowed to pull real time bus data twice per minute.  </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We're proud that we  were able to meet many of our pre-hackathon goals, and were able to implement something that will be useful to potentially thousands of students.  </p>\n<h2>What's next for WMB - Where's my Bus</h2>\n<p>We plan to implement predictive bus locations to fill in the gap between pulls from the CATA feeds.  Also, we plan to give the user a chance to tell us their destination, and we will give them an estimated time of arrival.  </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mysql\">mysql</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/WMBSpartahack2016/Spartahack2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/WMBSpartahack2016/Spartahack2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["My Eyes", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/WvLsMoCTrfI?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Looking at pictures is very nostalgic for the majority of people, but not for all. Blind people are inherently unable to experience such emotions through sight. Nevertheless they have memories that can be triggered by auditory inputs. \nOur mission is to tell blind people their stories, thorugh their pictures and our voice.</p>\n<h2>What it does</h2>\n<p>The mobile app allows people to select images from their own gallery and hear a detailed description of the picture.\nMoreover it can tell what you can see in a given direction (left, right, center), look for a specific thing (glass, lion, table) and \n(<em>not yet implemented</em>) share your favourite pictures on social media!\nEverything completely voice controlled.</p>\n<h2>How we built it</h2>\n<p>We integrated Alexa Echo with the Clarifai API and the Dropbox storage, everything cosily connected in an Android app.\nHere the detailed pipeline:\nThe user opens our app, slides the gallery pictures, touches one (ANY!), then asks Alexa Echos 'What's the picture about?'.\nThe picture is sent to a dropbox folder where Alexa picks it up and sends to the Clarifai API.\nClarifai tags the picture, the tags are rendered by our AWS Lambda Functions and the final sentence is returned to the user by Echo.</p>\n<h2>Challenges we ran into</h2>\n<p>What we just described in few words seems pretty smooth, but the challenges are countless.\nIntegrating so many different services together, developing a mobile app and designing a super easy user interface is amazing.\nBeing able to do all of this in 36 hours is not hard, is incredibly fun.\nThe truth is that we almost though we could not make it, but, the team was to dedicated to fail. The end result just made us forget the countless hours of effort and frustation.</p>\n<h2>Accomplishments that we're proud of</h2>\n<h2>What we learned</h2>\n<p>Skill we had: Java, Python, Friendship\nSkill we have now: Android mobile development, RESTful services, AWS Alexa, Friendship, </p>\n<h2>What's next for My Eyes</h2>\n<p>Well, let us tell you a story, your story. Close your eyes. Alexa, narrate Bob's life.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-alexa\">amazon-alexa</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/umbertoDifa/myEyes\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/umbertoDifa/myEyes\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Intercepter", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/DnxlR-rCuLE?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>If you have a computer without Microsoft Office, or prefer to do your document editing in the browser, it can be a hassle to download a file, then go to your Google Drive or appropriate page, and upload the file back into the cloud. With this extension, downloads of your productivity suite files are seamlessly integrated with Google Drive for you.</p>\n<h2>What it does</h2>\n<p>The extension is constantly running in the background, monitoring for a download to start. Once the download starts, AJAX is used to grab the download url and upload the file into the authenticated Google Drive instantly, and cancels the download. The extension will then open the corresponding productivity app for you.</p>\n<h2>How we built it</h2>\n<p>The entire extension was written in Javascript, using the Google Drive API along with some JSON used to configure the extension.</p>\n<h2>Challenges we ran into</h2>\n<p>Chrome extensions by default are very restricted. This is intentional, as extensions should not be given full access to whatever they want. As a result, we had to bulk up the permissions of this extension to give it access to more cross-domain urls.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>After facing a number of errors regarding authentication and permissions that blocked us from doing everything we wanted to, we were finally able to catch these downloads and upload them into the user's drive seamlessly. This will save a lot of time for the end users.</p>\n<h2>What we learned</h2>\n<p>The limitations of chrome extensions are very strong, and therefore working around them like we did should not be taken lightly. The user should feel comfortable that an extension which constantly monitors their downloads, and potentially intercepts them, does exactly what the developers say it should. This is an excellent project for open source and should be held to a high standard. </p>\n<h2>What's next for Intercepter</h2>\n<p>Future enhancements would allow the user customization of which types of files are automatically uploaded to Google Drive, as well as let the user choose which of their Google accounts should be used. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-drive\">google-drive</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-drive-api\">google-drive-api</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ajax\">ajax</a></span></li></ul>\n</div>\n</div>", ["I spent most of the project pair programming with Adam.I mainly contributed the post requests and find the appropriate endpoints for us to be sending request to.", "I used my experience with extensions to help setup the overall architecture design of the extension. In addition I worked side by side with Jarek using paired programming to sift through and understand the Google Drive API to upload documents."]], ["Tweamer", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Tweamer \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/237/datas/gallery.jpg\"/>\n<p>\n<i>Logo</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Tweamer \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/239/datas/gallery.jpg\"/>\n<p>\n<i>Alexa reading Tweets</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Tweamer \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/241/datas/gallery.jpg\"/>\n<p>\n<i>Commandes for Alexa</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Well, it is time consuming to scroll through all the tweets that you might be following, why not hear it while you are cooking or showering?</p>\n<h2>What it does</h2>\n<p>Audio the live tweets with the keywords of your choice, updates the tweet feed by your voice commands, thus saves you time and your hands for other important things.</p>\n<h2>How I built it</h2>\n<p>Built with twitter API combined with Alexa's api, for which we have implemented a whole schema for voice commands to control the application. Built along with DynamoDB to save your preferences on the cloud, so the users don't have to worry that they miss a thing. Written in JavaScript so it can be easily integrated to a web app, iOS or Andriod applications, and of course it would work on the Echo platform.</p>\n<h2>Challenges I ran into</h2>\n<p>to fetch the related tweets asynchronized is hard.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>That now it works at some point, figured out what was the problem</p>\n<h2>What I learned</h2>\n<p>A whole lot of Javascript and the importance of team-working.</p>\n<h2>What's next for Tweamer</h2>\n<p>Well,we'd like to add the application to Echo and we'd also like to add a nice web interface for the project, and it will guarantee to be a hit if we can develop an iOS and Andriod app for the service.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/alexa\">alexa</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twitter\">twitter</a></span></li></ul>\n</div>\n</div>", ["Worked on the twitter streamer and Amazon echo integration. ", "", ""]], ["octocat", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/mNU4_AHWagw?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>I wanted a way to visualize activity on github. the result looking like its logo is a bonus.</p>\n<h2>What it does</h2>\n<p>every time the repo <a href=\"http://github.com/sveltedonut/octocat-test\" rel=\"nofollow\">here</a> gets a commit, star, or fork, octocat dances a little.</p>\n<h2>How I built it</h2>\n<p>Hardware: some arts and crafts supplies + Spark Core.\nAnimatronics: the tentacles are straws with strings pulled by a servo in order to contract and extend.\nSoftware: Github webhooks, Firebase, Particle Cloud</p>\n<h2>Challenges I ran into</h2>\n<p>Getting the tentacles to move right; the servo was originally not strong enough to pull on the tentacles.</p>\n<h2>What's next for octocat</h2>\n<p>Get octocat to move without requiring the controller page to be open.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/particle\">particle</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/sveltedonut/octocat\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/sveltedonut/octocat\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Ask Political", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Ask Political \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/234/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Ask Political \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/194/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>It's commonly known that citizens of the United States are incredibly disconnected with the government that has such a large impact their lives. In any given group of citizens, most would have a hard time recalling even one of their state senators let alone both senators and their house representatives. Our goal with Ask Political is to make this information easily available so that anyone with an Amazon Alexa can become more integrated with United States Congressional Politics.</p>\n<h2>What it does</h2>\n<p>Ask Political can provide a variety of basic congressional data as well as doing comparisons or analysis of other aspects that might help a voter get a better understanding of who their representatives are and what they do. Alexa can be asked simple questions such as:</p>\n<p><em>Who are the senators for Illinois?</em></p>\n<p>The answers to these questions can be bridged into other queries such as:</p>\n<p><em>Tell me more about Mark Kirk</em></p>\n<p>If we wanted to see a politicians viewpoints, we could further ask:</p>\n<p><em>What bills has Mark Kirk introduced?</em></p>\n<p>Now, our user is more knowledgeable and can prepare to vote by saying:</p>\n<p><em>Next election in Illinois</em></p>\n<p>There are many more functions to help viewers learn and compare representatives within the app and a simply saying \"<em>Help</em>\" will prompt Alexa to give a better overview of querying capabilities.</p>\n<h2>How we built it</h2>\n<p>This application is specifically for the Amazon Echo so all technologies used, aside from the congressional APIs, are directly associated with it. The application is written as an AWS Lambda function using node.js. This connects the New York Times Congressional API, the Google Civic API, and the Sunlight Congress API. By using these three resources, we can use the power of the Amazon Echo to convert vocal requests into web requests that retrieve relevant information.</p>\n<h2>Challenges we ran into</h2>\n<p>While we had some experience with javascript before coming, we had never worked with Node.js. Asynchronous concepts provided us with a lot of confusing results. We had to learn concepts such as callbacks and the culmination of knowledge eventually led us to creating a successful Echo application. Additionally, some of the API interfaces did not cover all we needed. Having to create custom lookup tables proved to be difficult.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Having never worked with node.js, AWS, or an Echo before, we are proud of the fact that we were able to create a functional app that would be useful for such a huge demographic (Any U.S. Citizen). There are so many different possible vocal requests and the Echo is able to translate them to something our code is able to understand.</p>\n<h2>What we learned</h2>\n<p>While our team was able to learn node.js over 36 hours, the ideas that we learned were even more interesting. The architecture behind how an Echo is able to convert any input into a discrete set of structured handlers by using an intent schema and sample phrases/utterances was truly an interesting topic to learn about.</p>\n<h2>What's next for Ask Political</h2>\n<p>More advanced statistics and analysis of congressional members.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/new-york-times\">new-york-times</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-civic-information\">google-civic-information</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-alexa\">amazon-alexa</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sunlight-labs-congress\">sunlight-labs-congress</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/glassbeardglobal/spartahacks-political\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/glassbeardglobal/spartahacks-political\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Formation of the idea and ability to incorporate various APIs to fully implement a functioning addition to the Echo.", "", ""]], ["Forgotten Again", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Forgotten Again \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/157/datas/gallery.jpg\"/>\n<p>\n<i>Sign-up/login</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Forgotten Again \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/153/datas/gallery.jpg\"/>\n<p>\n<i>Main screen allowing you to input tags and receive a combined list according to them</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Forgotten Again \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/158/datas/gallery.jpg\"/>\n<p>\n<i>Early navigation drawer</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Forgotten Again \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/156/datas/gallery.jpg\"/>\n<p>\n<i>Lists screen where occasions are managed</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Forgotten Again \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/155/datas/gallery.jpg\"/>\n<p>\n<i>Screen for a single occasion. Name and tags can be edited as well as items added, updated, and removed</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Forgotten Again \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/154/datas/gallery.jpg\"/>\n<p>\n<i>Screen for a single occasion. Name and tags can be edited as well as items added, updated, and removed</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Forgotten Again \u2013 screenshot 7\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/159/datas/gallery.jpg\"/>\n<p>\n<i>Adding a new item</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Forgotten Again \u2013 screenshot 8\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/160/datas/gallery.jpg\"/>\n<p>\n<i>Screen for a single occasion with newly added item</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Forgotten Again \u2013 screenshot 9\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/161/datas/gallery.jpg\"/>\n<p>\n<i>Main screen results for the tag \"holiday\" showing combined results from both lists</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Forgotten Again \u2013 screenshot 10\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/162/datas/gallery.jpg\"/>\n<p>\n<i>Main screen results for the tags \"holiday\" and \"summer\" showing results from the only matching list</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Many things are forgotten on certain, typical situations like packing your holiday suitcase. Once arrived at your destination you might find that you forgot something - again - and swear to yourself that you think about it next time. Maybe you even write it done on a sheet of paper which you will probably lose long before packing for your next vacation. And then, how likely will you remember the things you usually forget?</p>\n<h2>What it does</h2>\n<p>The app keeps track of forgotten things for configurable occasions. In detail, you first create an occasion which consists of a name and a set of tags. For example, your occasion could be called \"Winter Holiday 2016\" with the tags \"holiday\" and \"winter\". In this occasion's list you add the things you forgot on that occasion.</p>\n<p>Later, when preparing for the next occasion, you can enter tags on the app's main screen. For example, type \"holiday\", and maybe also \"summer\". Then, the app will combine your stored lists of forgotten things for occasions whose tags match with your query and present you a list of things you should remember for the new occasion!</p>\n<h2>How I built it</h2>\n<p>Using Android Studio, Firebase, and my hands.</p>\n<h2>Challenges I ran into</h2>\n<p>Building a new app based on a rough idea within a short time is challenging, especially when done for the first time. Issues, but also more advanced questions (which were less relevant if not even irrelevant for the hack itself) regarding the login flow with Firebase delayed my progress. </p>\n<p>Similarly, general lack of experience with Firebase and some Android APIs was a challenge.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<ul>\n<li>I got the core functionality working within the time frame. Less functionality than I hoped for but, eh, it works!</li>\n</ul>\n<h2>What I learned</h2>\n<ul>\n<li>Getting a project from a rough idea to a basic prototype in 36 hours is challenging but possible and fun :)</li>\n<li>Firebase is great for real-time databases with offline capabilities. Their login mechanism (using email/password), especially caching authentication, confuses me and could be better (documented?).</li>\n</ul>\n<h2>What's next for Forgotten Again</h2>\n<ul>\n<li>Sharing is caring. Users should be able to benefit from lists created by others, so they can learn from other people's mistakes/forgotten things and not only from their own. For this, additional \"negative\" lists to filter out unnecessary </li>\n<li>There's more than just text tags. How about geolocation information? Similarly, temporal information could enhance the functionality.</li>\n<li>Predict occasions. Got a booking confirmation email in your inbox? Looks, like you're going on vacation again! Thus, the app should automatically detect that and present a matching list of things to thinks of.</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li></ul>\n</div>\n</div>", ["Much everything. Much wow."]], ["Wake Me Up When It's All Over", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Wake Me Up When It's All Over \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/460/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Falling asleep while studying for materials science during midterm week</p>\n<h2>What it does</h2>\n<p>An algorithm uses FSR pressure, accelerometer, and EDA (electrodermal activity) sensor data to detect when the user falls asleep. It then selects how best to wake the user up, depending on the state of the user. </p>\n<h2>Challenges we ran into</h2>\n<p>Multi-threading to interface with sensors while running signal processing algorithms was painful.</p>\n<h2>What we learned</h2>\n<p>Multi-threading in C++, interfacing with FSR and EDA sensors and photo resistors, ergonomic considerations when designing wearables.</p>\n<h2>What's next for Wake Me Up When It's All Over</h2>\n<p>Improvement of the algorithm to better use ECG and accelerometry data will allow for a more sophisticated and accurate algorithm for determining when the user has fallen asleep </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bitalino\">bitalino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bluetooth\">bluetooth</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://wakemeupwhenitsall.org\" rel=\"nofollow\" target=\"_blank\" title=\"http://wakemeupwhenitsall.org\">\n<i class=\"ss-icon ss-link\"></i>\n<span>wakemeupwhenitsall.org</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on coding the algorithm to implement the EDA sensor. I also created the project website using HTML/CSS.", "I wrote algorithms for collecting packaged data via Bluetooth and for processing this data to determine when the user falls asleep. I implemented these algorithms concurrently. ", "Worked on the wiring and programming of multiple sensors, and setting up the domain. "]], ["Electronic Voting", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Electronic Voting \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/094/datas/gallery.jpg\"/>\n<p>\n<i>Main Page</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Electronic Voting \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/105/datas/gallery.jpg\"/>\n<p>\n<i>Bernie Sanders Profile</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Electronic Voting \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/108/datas/gallery.jpg\"/>\n<p>\n<i>Donald Trump Profile</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Electronic Voting \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/113/datas/gallery.jpg\"/>\n<p>\n<i>Videos Page</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Electronic Voting \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/115/datas/gallery.jpg\"/>\n<p>\n<i>News Page</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Driving to vote when your voting location is open is a pain. </p>\n<h2>What it does</h2>\n<p>Allows you to vote online and view more information about the political candidates.</p>\n<h2>How We built it</h2>\n<p>HTML, CSS, JavaScript using Firebase.io as a storage backend and python to populate some initial data.</p>\n<h2>Challenges We ran into</h2>\n<p>Whether to use Node or just have static pages. Choosing a JavaScript framework or no framework.</p>\n<h2>Accomplishments that We're proud of</h2>\n<p>Working as a team to complete this as well as learning how to use Firebase.</p>\n<h2>What We learned</h2>\n<p>Firebase</p>\n<h2>What's next for Electronic Voting</h2>\n<p>Spark the discussion for Electronic Voting in the United States.</p>\n<p><em>coming soon at: <a href=\"http://votefreeordiehard.com\" rel=\"nofollow\">VoteFreeOrDieHard.com</a></em> ** via domain.com</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://tizz98.github.io/spartahack2016/\" rel=\"nofollow\" target=\"_blank\" title=\"http://tizz98.github.io/spartahack2016/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>tizz98.github.io</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["P.E.P.E ", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"P.E.P.E  \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/440/datas/gallery.jpg\"/>\n<p>\n<i>PEPE Presentation</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"P.E.P.E  \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/446/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"P.E.P.E  \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/448/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>Inspiration</h1>\n<p>Since the beginning of time, people have used the method of counting to keep track of a large group of people. If the number of people you count at the end equals the number at the beginning, then you know everyone is present. But what if no one started counting? How would you know? Or the police? Or the fire department?...This is where the idea for PEPE comes from. </p>\n<h2>What it does</h2>\n<p>PEPE uses C++ toolkit OpenCv, to not only detect faces, but count and recognize the number of people walking in, and out of the camera frame it's implemented with. </p>\n<h2>What it Stands For</h2>\n<p>P.E.P.E stands for Program Execute People Enumerate. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/opencv\">opencv</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li></ul>\n</div>\n</div>", ["I worked on the front-end of Pepe using dweet.io and freeboard.io to transfer data from a facial recognition program made using OpenCV and C++", "", ""]], ["Trumper", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>When brainstorming for the SpartaHacks challenge, our team was determined to do some form of a hack for the Amazon Echo. We came up with a few ideas (some of which were already implemented by teams at past hackathons), but at some point we had this fun little joke idea of making a chat bot with the Echo. And who else would you rather have in your living room if not Donald J. Trump? And hence, Trumper was born.</p>\n<p>(A developer name for this project was also Dysalexia: after dyxlexia + Alexa. This was after the sometimes jumbled and confusing, yet humorous, blurbs that the bot would spit out)</p>\n<h2>What it does</h2>\n<p>The chat bot is activated by calling \"Alexa\", and then asking the Echo device to \"ask Trump\" (or a number of similar intents). At that point, we enter a loop of conversation with fairly relevant replies (consisting of actual Donald Trump quotes) to what you say/ask. </p>\n<h2>Technical stuff</h2>\n<p>We hunted down over 250 quotes from Trump- half of which are from a speech he gave while running for President, and the other half of which were aggregated from various online social media websites, labelled as \"The Best of Donald Trump\", or similar. This constituted our Trump brain.</p>\n<p><strong>Our original plan</strong> for simulating conversation was a first order (or even n-th order) Markov chain, in the style of the Monty chatbot. However, after a good chunk of playing around with the idea, and even implementing a working prototype in Ruby, we found out that the result was something that sounded somewhat Trump-y, but not very distinct and recognizable. This led to some confusion to testers of our product. Furthermore, since the phrases were being generated instead of being actual quotes, we felt as though the users were missing out on a good part of the experience. Therefore, we changed our technique.</p>\n<p><strong>The second attempt</strong> was to create a kind of fitness function for our list of quotes, and select which one is the most relevant (or \"fit\") as a reply based on the input data that the user provides (aka, a question or phrase). We first determined that we could get a reasonable answer by comparing the quotes to the input, word-by-word, and generating a list of the top 10 or so most similar quotes, and picking from there. Most of the time, having a keyword like \"America\" or \"great again\" or \"wall\" would give a quote that's on the subject, allowing for a somewhat natural discussion.</p>\n<p><strong>We had plans</strong> to expand on this idea and categorize the quotes into general buckets, and try to determine which bucket the input fell into to be able to get a response. Similarly, we were considering using keyword analysis to help branch into other, similar topics (i.e., \"Obama\" would be synonymous with \"African American President\", \"our leader\", \"President\", according to an analysis of the quotes we had), or at the very least help when determining which quote is most \"fit\" by its match compared to these different buckets. We made a couple of prototypes, but submitted the most stable version here, which used the second attempt described above.</p>\n<h2>How I built it</h2>\n<p>We used Javascript as the main language to write the logic in, and a little bit of Ruby for some smaller scripts on the side (stuff like sanitizing the quotes file, some calculations). We also used the Amazon Alexa online console to upload our files to the cloud for testing and usage purposes.</p>\n<h2>Challenges I ran into</h2>\n<p>The initial setup of the Alexa dev environment was a bit of an involved process. There was also somewhat of a learning curve when it came to the actual programming, but the Amazon developers made sure that it wasn't all that bad when it came down to it.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We managed to make Alexa, a kind and gentle-mannered little AI, into Donald Trump. That's one part scary and two parts cool.</p>\n<h2>What I learned</h2>\n<p>A bit more about Javascript and a lot more about the Alexa- it's pretty neat! -George</p>\n<h2>What's next for Trumper</h2>\n<p>We will work on implementing the stretch ideas and continue to tweak the project, since natural language is still very much an open field for study. Perhaps instead of writing our own algorithms, we will integrate with an API of some kind to be able to focus more on the perfecting of the project, rather than the actual gritty details of implementation.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-alexa\">amazon-alexa</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ruby\">ruby</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/rushingseas8/Alexa-Trumper\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/rushingseas8/Alexa-Trumper\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the algorithms that turned your input and Trump's quotes into a response.", "I worked on the back-end"]], ["L-MYSt", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>I used to write on Allpoetry quite a bit.  It helped me overcome many rough times in my life.  I wanted to build a safe place like that for people to be able to post about their hardships and to create a community where we come together and prove that \"what doesn't kill you makes you stronger.\"</p>\n<h2>What it does</h2>\n<p>Let's people submit stories/poems/songs/etc.  </p>\n<h2>How we built it</h2>\n<p>Using HTML, CSS, JavaScript, Firebase, and more with the help of the lovely mentors here at Spartahack.</p>\n<h2>Challenges we ran into</h2>\n<p>Not knowing how to code;\nNeeding sleep;</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>This is our first time programming! We made something!</p>\n<h2>What we learned</h2>\n<h2>What's next for L-MYSt</h2>\n<p>Search bar;\nUser profiles;\nDrop down menus;</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/github\">github</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://chatella.github.io/L-MYST1/TTTKY.html\" rel=\"nofollow\" target=\"_blank\" title=\"http://chatella.github.io/L-MYST1/TTTKY.html\">\n<i class=\"ss-icon ss-link\"></i>\n<span>chatella.github.io</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["It was also my first time coding I worked on the front end creating the Why We Write page. I also coded some of the CSS as well", "It was my very first ever doing anything like this. I helped code a bit, but I mostly worked on designing the site.", ""]], ["Alexa Fashion Buddy", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Michigan's unreliable weather deceives us in picking clothes for the day.</p>\n<h2>What it does</h2>\n<p>Sets your preferences for the clothes in your wardrobe, and suggests to you what to wear based on temperature, chance of precipitation and cloud cover</p>\n<h2>How I built it</h2>\n<p>We used the amazon Alexa skills kit, amazon web services, and dynamo DB to interface our logic with the echo. We interfaced the forecast.io API to get weather info to interface in our javascript files.</p>\n<h2>Challenges I ran into</h2>\n<p>Interfacing the forecast API with javascript and reading the responses was the most difficult part. </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Working as a team on the programming, and being able to finish everything we planned.</p>\n<h2>What I learned</h2>\n<p>We learned how to use AWS, javascript, how to create awesome skills for Alexa.</p>\n<h2>What's next for Alexa Fashion Buddy</h2>\n<p>We would like to add personalized clothing with characteristics such as color and brand for each article you add to the wardrobe as unique identifiers.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag\">https</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-dynamodb\">amazon-dynamodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-alexa\">amazon-alexa</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/ayushers/alexa_fashion_buddy.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ayushers/alexa_fashion_buddy.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["PICTURAPPZ", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"PICTURAPPZ \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/354/533/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We were excited about the API that Clarifai presented at the opening ceremony, and we enjoyed their tech talk, so we decided we wanted to produce something using the tags produced by images filtered through it.</p>\n<h2>What it does</h2>\n<p>Our application takes images from the internet, uses python scripts to access the clarifai API and generate the tags, and sends that information to a rap generator. The rap is then populated on the front page of our application.</p>\n<h2>How we built it</h2>\n<p>We split all the tasks in to parts. Two people worked on the python scripts, while two people worked on the html, css, and javascript. We then needed to collaborate on incorporating our code.</p>\n<h2>Challenges we ran into</h2>\n<p>One of the many challenges we ran into was getting the python scripts to communicate with the javascript dynamically, which was resolved when we started using http requests. One thing we were really hoping to do was take our application and put it into a container, but after several hours of working we realized there were too many dependency issues with the python being unable to load certain modules within the container. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are very proud of how elegant our application appears and sounds. It was really fun to test the application with funny pictures which produced equally enjoyable lyrics. We also were able to create filters to edit out profanities. It was very satisfying to watch our major errors work out, such as our issues with the python scripts. </p>\n<h2>What we learned</h2>\n<p>We learned vast amounts of information about how http requests work, and how they communicate back and forth. We also learned quite a bit about containers from the Cycle developer team. While we weren't able to make containers work this time, it is definitely something that appealed to us as a group.</p>\n<h2>What's next for PICTURAPPZ</h2>\n<p>We were attempting to create a text to speech module for the application, but we ran in to a few issues and time was limited after our problems with containers. But overall we are all very proud of what we were able to achieve. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://www.github.com/BChip/PICTURAPPZ\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.github.com/BChip/PICTURAPPZ\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Worked on the back-end. Languages Used: Node.JS and Python", "", "", ""]], ["Electro Rave Party Flying Pirate Ship", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Electro Rave Party Flying Pirate Ship \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/354/967/datas/gallery.jpg\"/>\n<p>\n<i>Bluetooth, WiFi, and USB storage adapaters</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Electro Rave Party Flying Pirate Ship \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/354/968/datas/gallery.jpg\"/>\n<p>\n<i>Swag Flag</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Electro Rave Party Flying Pirate Ship \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/354/969/datas/gallery.jpg\"/>\n<p>\n<i>Sideview</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Electro Rave Party Flying Pirate Ship \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/354/970/datas/gallery.jpg\"/>\n<p>\n<i>The drone used</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>My love for electronic music harshly conflicted with the fact that no radio stations in Chicago play <strong>electronic dance music</strong> during the day or commutes to the city, so I decided to create and share a station just for electronic music.</p>\n<h2>What it does</h2>\n<p>Broadcasts FM radio in a 40 <i>ish</i> meter radius while following you around on a drone (the bigger your antenna, the larger the radius). Currently plays any music files with optionally custom sample rates on any radio frequency specified between <strong>1 and 250MHz</strong>, although legally operating on <strong>87.5 - 107.9MHz</strong>. Has the capability to connect to devices through Bluetooth (although not completely functional), sync files from a remote computer or server through WiFi (also not completely functional), and store music locally on its 128GB USB drive. Great for attracting unwanted attention from police and tech enthusiasts alike.</p>\n<h2>How I built it</h2>\n<p>The <strong>half-wave dipole antenna</strong> was built using 3 prototypes made of 12 AWG solid copper wire, measuring at 37.5cm for half the optimal 70cm length because of weight issues. The <strong>drone</strong> came with an abundance of resources on GitHub due to it being completely open source, allowing utilization of that code both on Android and the drone itself, despite a good majority of the documentation being written in Chinese. The <strong>Raspberry Pi Model B+</strong> had a custom image flashed before having Raspbian as the operating system, with Bluetooth, WiFi, and USB adapters installed in its USB ports as well as the required software and packages downloaded. The <i>antenna</i> was affixed to GPIO pin 4 with a female pin connector, housing, solder, heat shrink tubing, hot glue, super glue, and a smaller wire to connect the pin and large copper wire together. The stylish <em>flag</em> was designed by only the most masterful hands in Michigan State's Spartahack college student population, by tracing the picture of a pirate flag I found on Google. A <strong>mobile battery</strong> was also completely broken apart and the inside lithium battery attached to the drone structure for powering the Raspberry Pi.</p>\n<h2>Challenges I ran into</h2>\n<p>Apparently the FAA doesn't like unregistered drones flying around, so legal issues had to be studied and resolved. This meant the drone wasn't permitted to fly on Michigan State University campus property, so the automated flight controls were left out as plausible methods of following the user instead of being implemented. The <i>weight</i> of the drone is about 4-10 times as heavy as before, so it may not fly very well or for more than a couple minutes (the maximum advertised flight time on a full battery is 6-7 minutes). Bluetooth ended up being complicated because of corrupted or out-of-date packages being replaced by new packages, some of which weren't compatible with the Raspberry Pi Model B+ operating system, \"Wheezy\". Cloud storage involved some more complex coding and design we didn't have time for, so we ended up putting a skeleton of it within the code for future implementation.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Learned Python; used C programming knowledge; learned more about Bash and the Linux services on boot; met with sponsors who loved to hack as much as I do and also went to Defcon; successfully soldered my first wires; made something that looks ridiculously cool in my opinion.</p>\n<h2>What I learned</h2>\n<p>Python; FAA, Michigan, and Michigan State University drone regulations, policies, restrictions, and exceptions; a few great companies to possibly seek out for internships and more information; and more than any normal human should know about half-wave dipole copper antennas.</p>\n<h2>What's next for Electro Rave Party Flying Pirate Ship</h2>\n<p>Full flight automation, full Bluetooth functionality, cloud storage and sync capabilities, decreased weight proportion, larger broadcast range, longer battery life, advanced customization of Python and Bash scripts.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bluetooth\">bluetooth</a></span></li><li><span class=\"cp-tag\">wifi</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li><li><span class=\"cp-tag\">drone</span></li><li><span class=\"cp-tag\">batteries</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/linux\">linux</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bash\">bash</a></span></li><li><span class=\"cp-tag\">double-sided-tape</span></li><li><span class=\"cp-tag\">usb</span></li><li><span class=\"cp-tag\">antenna</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://makezine.com/projects/raspberry-pirate-radio/\" rel=\"nofollow\" target=\"_blank\" title=\"http://makezine.com/projects/raspberry-pirate-radio/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>makezine.com</span>\n</a></li>\n<li><a href=\"http://www.amazon.com/Crazepony-Quadcopter-Development-Platform-Student/dp/B015MYR1GO/ref=sr_1_3?ie=UTF8&amp;qid=1456663415&amp;sr=8-3&amp;keywords=crazypony\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.amazon.com/Crazepony-Quadcopter-Development-Platform-Student/dp/B015MYR1GO/ref=sr_1_3?ie=UTF8&amp;qid=1456663415&amp;sr=8-3&amp;keywords=crazypony\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.amazon.com</span>\n</a></li>\n<li><a href=\"http://www.redbull.com/\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.redbull.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.redbull.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Broke open the mobile battery! Also brainstormed different approaches on keeping the pirate ship music synced with other devices", "Pretty much everything."]], ["Sammy the Smog Cloud", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Sammy the Smog Cloud \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/068/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Sammy the Smog Cloud \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/354/958/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Sammy the Smog Cloud \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/354/959/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Sammy the Smog Cloud \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/354/960/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We were originally going to make a game about Percival the plastic bag, drifting around on his way to pollute the ocean, because one of our members was inspired by the drifting motion aspect of the game Flower. Somehow this turned into a smog cloud instead, and a tiny bit of our original environmental themes persisted.</p>\n<h2>What it does</h2>\n<p>We implemented a game using the leap-motion as a controller that allows the player to control a cloud traveling through the wrong neighborhood. He just wants to get back to the dump but several entities want to prevent him from doing so. The player must navigate a corridor of these entities, dodging obstacles and large creatures in order to survive until the end.</p>\n<h2>How we built it</h2>\n<p>Unity + C# + leap motion + sketchup</p>\n<h2>Challenges we ran into</h2>\n<p>The biggest challenge at first was hooking up the leap motion. We hadn't used it before, so we were new to its methods of finger/hand tracking, which meant a lot of googling during the first section of the project. In addition, there was this weird issue where having a leap motion controller collide with anything would cause unity to crash that really slowed down the testing process.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We're actually quite proud of the animations in the game! The best animation is the environmentalist who vacuums. Somehow we had the idea that an environmentalist would want to stop smog with a vacuum cleaner, so that's what we went with. </p>\n<h2>What we learned</h2>\n<p>Leap motion is a really cool piece of tech. Its tracking is very solid, and breaks down into many specific hand regions (each finger, palm, large and small hand movements, etc), allowing for a lot of variety and specificity in the control scheme. </p>\n<h2>What's next for Sammy the Smog Cloud</h2>\n<p>TBD, but potentially touched upon more for one member's independent study course. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/leap-motion\">leap-motion</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Calvinjk/Percival\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Calvinjk/Percival\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Created models in sketchup and helped debug everyone else's issues", "Worked on integrating the Leap Motion controller, overall game controller, enemy spawner, and boss AI.", "", ""]], ["Happy Hopping ", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Knowing that bar crawls can be hectic and you can often lose your friends along the way, we wanted to create an app that lets you keep track of your friends and check on them if they end up by themselves.</p>\n<h2>What it does</h2>\n<p>This app allows users to login in via facebook, create bar crawls, and invite friends. After this they can view the bar crawl schedule and a map that shows where all their friends are, using a google maps api. </p>\n<h2>How we built it</h2>\n<p>We built this application using android studio as our primary IDE. We implemented Facebook API, to allow users to login with Facebook. In addition to the Facebook API, we also used the Google Places API that allows the user to search for bars and add them to their bar crawl schedule. The last API we implemented was Google Maps that displays users and bars on a map that are apart of the current user's bar crawl. Lastly, for our back end we used a Firebase database for real-time updates.</p>\n<h2>Challenges we ran into</h2>\n<p>We ran into many issues, including implementing all APIs, as well as interfacing with our Firebase database. All of our team members are relatively new to android, which also proved to be a challenge.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We're proud we were able to successfully implement all our APIs and complete some of the functionality we were hoping to implement. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google--2\">google</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/facebook-login-api\">facebook-login-api</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["Trump Jump", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Trump Jump \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/354/887/datas/gallery.jpg\"/>\n<p>\n<i>Main menu</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Trump Jump \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/354/893/datas/gallery.jpg\"/>\n<p>\n<i>Launch screen</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Voter apathy in America is an enormous issue. About 50% of the electorate voted in the 2012 presidential election. Encouraging people to vote has been a problem our government has been attempting to solve, with few results. Trump Jump is a new approach to encourage people to be involved in politics. The best approach to interest people in our government is through everyday exposure.</p>\n<h2>What it does</h2>\n<p>Our game utilizes real data to dynamically change the characters. By doing so, users will be more informed, and involved in politics. In addition, At the end of each round, Trump Jump displays a current event in politics using a live RSS feed from Washington Post.</p>\n<p>We feel Trump Jump is going to show YUGE results. A user is able to select one of a political opponents. The interaction of that character with the game will depend on the character\u2019s current standings in a national poll. The user can control the jumping height by pressing harder of software on the screen, making meaningful utilization of 3D Touch. Users will have to dodge bricks from The Trump wall, and occasionally Trump will throw a small loan of one million dollars. The goal of the user is to collect as many loans, while dodging the bricks. </p>\n<h2>What's next for Trump Jump</h2>\n<p>Trump Jump will surely find its on the app store, and probably with a booming influx.\nWith a bunch of Trump catchphrases, graphics, and Easter eggs, how could it not?</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ios\">ios</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sprite-kit\">sprite-kit</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/iphone-sdk\">iphone-sdk</a></span></li><li><span class=\"cp-tag\">3d-touch</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jsp\">jsp</a></span></li><li><span class=\"cp-tag\">rss</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://domthedeveloper.github.io/TrumpJumpSplash/\" rel=\"nofollow\" target=\"_blank\" title=\"http://domthedeveloper.github.io/TrumpJumpSplash/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>domthedeveloper.github.io</span>\n</a></li>\n<li><a href=\"https://github.com/robinonsay/TrumpeJump\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/robinonsay/TrumpeJump\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I am a high school senior from Grand Rapids Michigan. I worked on obtaining/creating audio and UI assests for the app. I am excited about getting this app featured on the App Store.", "", "", ""]], ["Quiz Me", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Quiz Me \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/354/865/datas/gallery.jpg\"/>\n<p>\n<i>I want to teach Spanish here</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>Too tired to write this thing... </p>\n<p>helps you study while you browse the internet.</p>\n<p>Started late mid-Saturday because of a complete change in project idea.</p>\n<p>It's a chrome extension that redirects you to our flashcard study tool for every N links that you click on. </p>\n<p>The pictures don't show it all. Come to check it out for a demo!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/EDawg878/QuizMe\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/EDawg878/QuizMe\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["created front end HTML and CSS of the website. did Overall design and user interface.", "Wrote the Javascript backend for the Chrome extension"]], ["Flash Me", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Flash Me \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/354/821/datas/gallery.jpg\"/>\n<p>\n<i>Login Screen</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Flash Me \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/354/822/datas/gallery.jpg\"/>\n<p>\n<i>Example of \"Flashcard\"</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Flash Me \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/354/823/datas/gallery.jpg\"/>\n<p>\n<i>Pick the mode you want to be in</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Flash Me \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/354/834/datas/gallery.jpg\"/>\n<p>\n<i>Login Screen on Website</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Flash Me \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/354/835/datas/gallery.jpg\"/>\n<p>\n<i>Example of a flash card</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>Flash Me</h1>\n<p>Flash Me is a web app and an iPhone app that lets you learn on the go. With Flash Me, you'll never forget your notes at home.</p>\n<h2>Inspiration</h2>\n<p>We built Flash Me because we wanted to try and create a better way for students to learn not just about content, but about themselves as well. The tracking feature allows you to effectively see how well you are performing over time.</p>\n<h2>What It Does</h2>\n<p>Flash Me allows users to input questions that are used by it to create flashcards. The (mobile) app then generates a stack of cards, and users can swipe left on a card for every incorrect answer, and right for correct answers. The mobile app offers two modes: Flash (practice) mode and Quiz mode. Flash mode comes with an infinite stream of cards, and assigns lower weights to a question answered correctly, in order to decrease the probability of them showing up again. Quiz mode comes with a limited set of cards, and stores the users performance in the app's database to analyze their performance. The web app comes with Quiz mode only.</p>\n<h2>How We Built It</h2>\n<p>We built Flash Me's mobile app using Xcode and Swift, and the web app using Node.js. Both apps store and sync data with Firebase. We also used Plotly's API for data visualization. To decrease the probability of correctly answered questions reappearing, we assign weights to all questions in the Flash Mode. These weights are determined using a simple equation: (1+ln(alpha))*(original_weight) where alpha is set to 0.1.</p>\n<h3>Tech</h3>\n<p>Flash Me uses a number software to ensure its success:</p>\n<ul>\n<li><a href=\"http://developer.apple.com/\" rel=\"nofollow\">XCode</a> - iOS Development!</li>\n<li><a href=\"https://nodejs.org/en/\" rel=\"nofollow\">node.js</a> - evented I/O for the backend</li>\n<li><a href=\"https://www.firebase.com/\" rel=\"nofollow\">Firebase</a> - Database to handle data storage and user authentication</li>\n<li><a href=\"http://getbootstrap.com/\" rel=\"nofollow\">Twitter Bootstrap</a> - great UI boilerplate for modern web apps</li>\n<li><a href=\"http://expressjs.com/\" rel=\"nofollow\">Express</a> - fast node.js network app framework [@tjholowaychuk]</li>\n<li><a href=\"https://jquery.com/\" rel=\"nofollow\">jQuery</a> - Animation and front-end developement</li>\n</ul>\n<h2>Challenges We Ran Into</h2>\n<p>Our biggest challenge for this hack was probably integration of all the features. We tried using several APIs and features to try and give our idea a unique feel. We had quite the trouble with server side code (NodeJS) and trying to finish it on two platforms rather than just one.</p>\n<p>Sleeping was quite the problem, as none of us slept more than 5 hours during the entire hackathon.</p>\n<h2>What We Learned</h2>\n<p>Front-end development is much more difficult than backend development, in terms of syntax and correctness. Also, the iOS app caused many problems because Apple wasn't able to register Shashank's device to their developer program! But in the end, we all learned how valuable it can be to check syntax for very small errors (especially in interpreted languages like JavaScript). We all learned, rejoiced, and enjoyed.</p>\n<h2>What's Next for Flash Me</h2>\n<p>We are hoping to use this hack and introduce it into our University's computer science program. The Flash Card idea will be a good way for teachers to upload mini questions and pass them on to hundreds of students at once very quickly.</p>\n<h3>Team</h3>\n<p>The legendary team behind this product:</p>\n<ul>\n<li>Aashna Makkar</li>\n<li>Shotaro Ikeda</li>\n<li><a href=\"http://shashanksaxena.me/\" rel=\"nofollow\">Shashank Saxena</a></li>\n</ul>\n<p>We all go to the University of Illinois Urbana-Champaign!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ejs\">ejs</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xcode\">xcode</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/plotly\">plotly</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/azure\">azure</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Salil999/SpartaHack2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Salil999/SpartaHack2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"http://flash-me.azurewebsites.net\" rel=\"nofollow\" target=\"_blank\" title=\"http://flash-me.azurewebsites.net\">\n<i class=\"ss-icon ss-link\"></i>\n<span>flash-me.azurewebsites.net</span>\n</a></li>\n<li><a href=\"https://github.com/shotaroikeda/flashcard-ios\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/shotaroikeda/flashcard-ios\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the frontend for the web application, and worked on generating the plots and graphs for performance tracking in the backend. I also hooked up a little bit of Firebase in the iOS app.", "", ""]], ["Cook mATE", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Due to both my Sister and Mother owning Amazon Echos, I have had the wonderful opportunity to be exposed to them. In both of the households I know of that have them, Alexa is placed in a central location to the kitchen. I don't believe this a trend amongst just my family, as it would seem natural to interact with Alexa most often there. Many hours are spent making meals, consuming meals, and all in all just being in the kitchen on a weekly basis.</p>\n<p>What I've come to realize is that although Alexa can perform amazing tasks, she seems to lack a fundamental way of communicating recipes to a user. Another skill that was advertised at the time of its release called \"Campbell's Kitchen\" attempts to perform a subset of cooking information, however it appears to have been done in a poor way.\nThe overall rating of the app is 2.5/5 stars with 12 reviews. The first three comments are as follows:</p>\n<p><strong>Great way to get dinner ideas</strong>\n\"This is very much like having a small cookbook that talks to you at your disposal... I find it comes in handy if you want to think about what to pick up at the store or if you're planning your meals for the week. Very handy in my opinion.\"</p>\n<p><strong>So much potential so little now</strong>\n\"I want to be able to ask for a specific recipe not just have random recipes suggested. And then I want the recipe spoken not emailed.\"</p>\n<p><strong>Has the potential to be Great</strong>\n\"I'm really looking for Alexa, to be able to give me meal suggestions verbally, be interactive if I want further information regarding the suggestions...\"</p>\n<p>Those comments alone summarize how customers feel about the skill, and what they feel it still lacks.\nWhere this app has weaknesses, I aimed to have strengths.</p>\n<h2>What it does</h2>\n<p>The key concept of this hack is the ability it provides its users in the kitchen space. The skill is simply invoked by saying\n\"Alexa, ask Cook mATE to find me a Chocolate Chip Cookie recipe.\"</p>\n<p>It then queries Allrecipes.com to find the top three most popular recipes, and report back on them. Then the user picks the recipe, and the next step is for Alexa to read out the ingredients one by one at the command of the user. Advancing to the next ingredient or direction is as easy as saying,\n\"Alexa, ask Cook mATE what's next.\" Its been designed to be a very elegant and useful hack for the average user, and not necessarily the hacker (even though I will be using this quite often).</p>\n<h2>How it works</h2>\n<p>*Have the user fire up Cook mATE and request a meal or food dish to prepare</p>\n<p>*Dynamically scrape data from Allrecipes.com and report that back for the types of recipes requested</p>\n<p>*Have the user pick a recipe and store it in a database so we have some persistent data to work with across sessions</p>\n<p>*Let the user take the reins and have Alexa read out the ingredients and directions for the recipe</p>\n<h2>Challenges I ran into</h2>\n<p>The fact that Amazon Echo skills are usually lambda functions which are almost anonymous and quite nearly non-existent most of the time, threw me off at first. Once adjusting to the lambda platform and getting a few of the nuances of the environment out of the way, it became easier to focus on the actual development. However, part way through the hack once I realized my usual persistent data tricks weren't going to work (simple SQLite DB in a file) because of the lambda environment, I became tripped up again. Utilizing the documentation and a little help from the wonderful Amazon Echo/Alexa team got me back on my feet and on my way to finishing it off.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>This will be the most flushed out hack I've worked on, and I did it solo (for better or for worse). The satisfaction of having a working product in front of you after one weekend is a great </p>\n<h2>What's next for Cook mATE</h2>\n<p>Much more user integration is to come, allowing many more options to be specified, including more information of each recipe. More websites will be added as well to allow an even larger database to be collected from. Feature requests are also welcome at this time. I hope to have this project follow a similar path that Amazon Echo itself follows, where it starts out small with a few core functions, and then continues to grow from there.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/beautiful-soup\">beautiful-soup</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-alexa\">amazon-alexa</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag\">regex</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-dynamodb\">amazon-dynamodb</a></span></li></ul>\n</div>\n</div>", [""]], ["Alexa, Motivate Me", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/maxooaJGbFc?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Hacking can difficult, especially into the late hours, without having much time to rest your brain and your body. Normally teammates are cheerleaders and bring morale up, but with the lack of sleep and energy, we we were inspired to create a cheerleader that isn't subject to normal hack-a-thon weaknesses. Amazon Alexa is becoming a diverse home tool, popularly used in the kitchen, and living room to answer questions and help with computations, but we wanted to create an even more human version of Alexa. Meet Alexa, Motivate me, inspired by our favorite motivators, DJ Khaled, Donald Trump, and Shia Labeouf. She is also equipped with some of the best jokes on the internet, because there is nothing that brings up the mood higher than a terrible joke. </p>\n<h2>What it does</h2>\n<p>Utilizes Amazon Echo and the Amazon Alexa platform to respond to voice commands. She can motivate using famous quotes from DJ Khaled, Donald Trump, and Shia Labeaouf. She also has a repertoire of terrible jokes that are guaranteed to get a laugh, or a groan. </p>\n<h2>How I built it</h2>\n<p>We used the tutorial provided by the Amazon Echo team as well as documentation published on the Amazon developer forums to learn how to create a simple skill. We then expanded on the tutorial and used lambda functions on amazon web services to create the backend for the project.</p>\n<h2>Challenges I ran into</h2>\n<p>Debugging was quite the learning experience, overall the interface was very easy to use and quite intuitive. Also JavaScript is a lot harder to use than C++. </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Created a cool skill for the Amazon Echo!\nManaged time efficiently.</p>\n<h2>What I learned</h2>\n<p>Learned how useful lambda functions are in creating a skill for Amazon Echo. Also learned a substantial amount about Alexa and the Amazon Echo at the workshop. Learned Javascript.</p>\n<h2>What's next for Motivate Me</h2>\n<p>Alexa, Motivate Me is already a motivating beast, with some of the sickest jokes, however there is always room to grow. We would want Alexa to be able to either self-learn through the internet, and be able to target individuals and their humor and be trained according to the responses of the users. \nWe also want Alexa to be able to learn how to play music that will help maximize motivation levels.\nWe also must make sure that no weak jokes, or uninspiring quotes are used because Alexa, Motivate Me must become the greatest motivator and the funniest robot.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-alexa\">amazon-alexa</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/kkuang70/motivateme\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/kkuang70/motivateme\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Magicaption", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We all wanted to do something cool and fun with Clarifai, this is what we came up with!</p>\n<h2>What it does</h2>\n<p>generate captions for pictures based on setting and the emotions of the people in the picture.</p>\n<h2>How we built it</h2>\n<p>Clarifai and project-oxford api calls built on top of an ASP MVC web app deployed on Azure. Data processing and algorithms done by R scripts leveraging the Machine Learning on Azure.. </p>\n<h2>Challenges we ran into</h2>\n<p>Terrible time consuming problems with async api calls and memory streams of image files. Due to these problems we were unfortunately unable to fully deliver our MVP.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Despite the extreme setbacks we were able to build our own C# wrapper for Clarifai which is pretty cool. We might not have been able to present how we wanted to, but we still think this is a great idea and plan to move forward with it outside of the hackathon </p>\n<h2>What we learned</h2>\n<p>A ton about APIs, machine learning, and making async function calls</p>\n<h2>What's next for Magicaption</h2>\n<p>This deadline absolutely does not mark the end of Magicaption. We have 100% plans to turn this into a real thing in the near feature.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/asp-net\">asp.net</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/r\">r</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/microsoft-project-oxford\">microsoft-project-oxford</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["Catan Companion", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Catan Companion \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/354/728/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Catan Companion \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/663/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We love playing Settler's of Catan with the guys in our college dorm, but we know how frustrating it is to start a game of Catan only to find that the starting location you chose has pushed you into a corner or handicapped your resource production.</p>\n<h2>What it does</h2>\n<p>Catan Companion suggests a favorable starting location based on a given Settler's of Catan board configuration.</p>\n<h2>How we built it</h2>\n<p>We used C# and Windows Forms to construct a custom UI component that allows the user to construct any possible Settler's of Catan terrain variation.</p>\n<h2>Challenges we ran into</h2>\n<p>Representing hexagonal tiles in a two-dimensional coordinate system was tough. Calculating from code which hexagons composed each intersection was a significant obstacle. Most of our time was spent constructing the groundwork required to represent the Settler's of Catan gameboard in code. As a consequence, we had less time to refine the actual algorithm that selects strategic starting locations.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>The user interface turned out pretty well, given our limited experience. We managed to make it scalable without any major issues.</p>\n<h2>What we learned</h2>\n<p>Vance was new to C#, Windows Forms, and version control, and developing Catan Companion provided plenty of practice manipulating UI componenets, writing classes, and managing source code.</p>\n<h2>What's next for Catan Companion</h2>\n<p>We'd like to add more sophistication to the criteria used to judge potential embark locations as well as increase the number of favorable locations shown. Now that we have built the framework with which to interpret the game's components, the only limit to Catan Companion's effectiveness is our own strategic analysis of the game's interacting systems.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag\">windows-forms</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/visual-studio\">visual-studio</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://bitbucket.org/JonathanTaylor/swashbuckle/overview\" rel=\"nofollow\" target=\"_blank\" title=\"https://bitbucket.org/JonathanTaylor/swashbuckle/overview\">\n<i class=\"ss-icon ss-link\"></i>\n<span>bitbucket.org</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the user interface and the code that draws the game board to the screen. I also compiled the art assets and wrote code that randomizes the game board when the program is launched.", "I worked on the handling of the storage of our data by deriving the equations for converting between our printed, hexagonal view and our stored, cartesian view. I also created the select interfaces for changing the hex types and probabilities as well as the harbor types."]], ["FriendKeys", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"FriendKeys \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/664/datas/gallery.jpg\"/>\n<p>\n<i>Users can use their mobile device to connect to the server and play sounds while their friends play as well</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"FriendKeys \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/697/datas/gallery.jpg\"/>\n<p>\n<i>A picture of the gui. Keep in mind this uses mobile html and javascript development, not ios development.</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>The project is inspired by an application called multeor. It is an application that allows you to use your mobile device as a controller for an online game.</p>\n<h2>What it does</h2>\n<p>You can choose 1 of 4 controllers and play music along with your friends</p>\n<h2>How I built it</h2>\n<p>we created samples of instruments and put them in to small mp3 files. we utilized the firebase api to create calls and pulls to transfer the data to and from the server. Through doing this, it does not matter what type of object you use to play the instrument. The instrument pushes a data packet to firebase, firebase then pushes the data to the player file.</p>\n<h2>Challenges we ran into</h2>\n<p>we have never done any web development.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Creating a fully function application using javascript, css, api's and a server.</p>\n<h2>What I learned</h2>\n<p>We learned so much from this project it is unbelievable. We didn't even know what we did was possible.</p>\n<h2>What's next for FriendKeys</h2>\n<p>Improvement of the software and individual sessions.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li></ul>\n</div>\n</div>", ["Created samples for music playback. Used css and html for front end development of controllers and webpage. Linked the controllers and playback page through firebase api.", ""]], ["StoryEchoes", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"StoryEchoes \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/424/datas/gallery.jpg\"/>\n<p>\n<i>Final(Live!) Version of StoryEchoes. </i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"StoryEchoes \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/354/534/datas/gallery.jpg\"/>\n<p>\n<i>Second version of StoryEchoes that went live! Movie example.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"StoryEchoes \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/354/535/datas/gallery.jpg\"/>\n<p>\n<i>Second version of StoryEchoes that went live! Video game example.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"StoryEchoes \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/354/361/datas/gallery.jpg\"/>\n<p>\n<i>The first version of StoryEchoes that went live!</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>As someone who enjoys music when I read, I found myself coming across a very common problem. A lot of the time advertisements or mismatched music would pull me out of the story I was enjoying! To try and remedy this problem I started to outline the idea of \"StoryEchoes.\" StoryEchoes allows for readers and gamers to quickly find playlists that fit their books or games. It creates an immersive environment and helps take a user deeper into the world of their game or any other type of story. The idea of using it for games came from the idea that much of the music can be repetitive or a song you might really enjoy will only play once, so pulling the playlist gives more variety.</p>\n<h2>What it does</h2>\n<p>StoryEchoes is an easy to use web application that allows for the user to type in a title/genre which will produce a playlist, or \"soundtrack.\" The goal is that this playlist will allow the user to combat that disconnection that many users face with fictional worlds or different time periods. Music has been shown to be able to provide a significant effect on our emotional states, so having music that follows the story can help us to feel the way the characters may feel or at least feel like we are in their world. This could also be used in a business because of the lack of nsfw music without advertisements.</p>\n<h2>How I Built It</h2>\n<p>Utilizing html, css, and Javascript (Jquery), I focused more on front end than back end. I also created a youtube video to use as the background for the website that is comprised of photos that are \"jump into\" photos. I also utilized Youtube's api and focused on being able to fetch the most viewed and most popular playlists to get the best chance of the playlist fitting the title the user would submit. By pulling playlists the music tends to follow a flow that seems to fit most books/movies. This flow and change in music at appropriate times is what I was going for.</p>\n<h2>Challenges I ran into</h2>\n<p>I came into this hackathon knowing nothing about coding. I had to learn Javascript along with html and css in a fairly short amount of time which was quite difficult. Since I was using Javascript along with html and css, there was quite a lot of nesting that I had to do to be able to make the application work the way I wanted. The youtube video background did not end up working, but that is something I will work on in future plans.  Overall, I was a single person team and this is my very first hack, so it took me longer to work out some basic bugs. Still, I am EXTREMELY proud of the project and the challenges that I ran into because without challenges there is no learning. </p>\n<h1>Accomplishments that I'm proud of</h1>\n<p>This was my very first hack and I am extremely proud to have completed it to my satisfaction. A lot of the small details with design and aesthetics were hard to convey, but I am happy at how it looks and how the application acts. It also looks and works well on mobile (not just on the computer). </p>\n<h2>What I learned</h2>\n<p>For all the first time hackers out there, never ever give up on yourself. For a long time I was extremely hesitant in even trying to hack, but after completing this project I am proud to say I am excited to continue to develop it and to see what else I could do!</p>\n<h2>What's next for</h2>\n<p>I would love to eventually have a larger database of music to pull from that would stay advertisement free. I would also like to see a larger user interface that would allow more individual input into playlists. Integrating my application with the Amazon Echo was the next big step I was looking to take. Using the echo and its wonderful speaker system would allow for a surround sound level of music which would contribute even more to the experience of using StoryEchoes.  Even an integration with audible would allow for a complete listening experience.</p>\n<p>I have many more plans for this application and will continue to develop and use it after SpartaHack2016! </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/youtube\">youtube</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/dermkim/dermkim.github.io.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/dermkim/dermkim.github.io.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://dermkim.github.io\" rel=\"nofollow\" target=\"_blank\" title=\"https://dermkim.github.io\">\n<i class=\"ss-icon ss-link\"></i>\n<span>dermkim.github.io</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["It was my first time ever creating a hack and I was able to use html, css, and javascript to create my web based app. Help from mentors was received, but most coding was done solo."]], ["clarifind", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"clarifind \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/354/560/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"clarifind \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/354/561/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Spartahack2016 Clarifind</h2>\n<h2>The Backstory</h2>\n<p>Clarifind recognizes the sentimental value of physical possessions, from that sweater from Grandma to that watch from Uncle Steve. Three university students decided that they wanted to end the struggle of losing personal belongings to the vast and unforgiving world of neglect and unworthy finders who pose as keepers. Users upload photos of both items they have lost and items that they have found and Clarifind matches their wanted items to items visually similar to those others have found.</p>\n<h2>The Technology</h2>\n<p>Clarifind is a user-friendly application that integrates a cohesive combination of many technologies. The web application is hosted on Firebase, which is also responsible for the databases of uploaded images of found items. Each image is processed through Clarifai which uses advanced image recognition to return similar images from the \"found\" database. Google Maps is harnessed to provide location data for each image, passed as a set of geographical coordinates and converted to a text-based location.</p>\n<h2>The Platform</h2>\n<p>Clarifind is found as an Android app. Users may choose to upload or take new photos directly from their Android phones.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/xmfan/clarifind\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/xmfan/clarifind\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://clarifind.firebaseapp.com/\" rel=\"nofollow\" target=\"_blank\" title=\"https://clarifind.firebaseapp.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>clarifind.firebaseapp.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the front end as well as graphic design of the logo and other aspects of the UI/UX.", "I worked on the android side of things. Designed the UI, UX and the integration with the Clarifai's image tagging API. It was my first time at a Hackathon and also my first time making an Android app! ", ""]], ["Help, Alexa!", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Amazon Echo is a wireless speaker and voice command device designed by Amazon. It was launched in the market in June 23, 2015. Amazon Echo is capable of recognize certain voice patterns and responds to them. Miao Zi and Jeffrey came out with the idea that if we could place an Amazon Echo in every ward of a hospital, then we could actually monitor patients' activities in the ward and respond to their needs when they send requests to Amazon Echo.  </p>\n<h2>What it does</h2>\n<p>Collects commands/ requests from patients through Amazon Echo and then get data from Alexa, process the data and output the processed information to two platforms - website and an app. Our website displays graphs of frequencies of different requests from different ward (here we assume each ward has one Amazon Echo) while our app is a platform that sends push notifications of patients requests to nurses/ doctors of the hospitals.</p>\n<h2>How we built it</h2>\n<p>We used Amazon Echo to get patients' requests and then through Alexa, we got their requests and then saved the information in firebase. Then we used react.js to do the following data processing:</p>\n<p>i) Classify different requests into 5 categories: water, restroom, walk, medicine, emergency. </p>\n<p>ii) Create graphs of frequencies of emergency requests ( restroom, medicine, emergency) and normal requests(water, walk) of different wards.</p>\n<p>After we were done with the data processing, we posted the graph to the website and different requests to our app. We aims to help doctors/ nurses to do some analysis on patients' activities based on the graph and hopes that through the app the paramedics can better attend to patients' need.</p>\n<h2>Challenges we ran into</h2>\n<p>i) Learning how to create new  skills for Alexa. None of us knew how create new skills for Alexa and it took us a while to learn it.</p>\n<p>ii) Connecting Alexa to firebase. Since we need to process the information from Alexa and then distribute it to our website and app, we decided to store Alexa's output in firebase. However, there is any example about connecting Alexa to firebase so we have to figure that out ourselves. The biggest problem we have encountered was that Alexa's output was not sent to firebase before Alexa's sessions end which caused us to keep getting nothing in our output. We managed to use javascript's async lib to fix this problem.</p>\n<p>iii) After connecting Alexa to firebase, we encountered another problem - processing data! We decided to use react.js to do data processing. However, none of us had any prior experience with react.js so we spent a lot of time figuring how to create graphs and extract required information from the data in our firebase.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>The thing we are most proud of this project is that we are creating two platforms that can be useful for paramedics and ease nurses/doctors burdens in handling patients' requests. Amazon echo is a pretty new device and we are really proud that we could work on this new device along with Alexa to use the sophisticated natural language processing techniques that Amazon has created to make a positive impact to the healthcare industry.  </p>\n<h2>What we learned</h2>\n<p>i) Learn how Amazon echo and Alexa work and manage to extract information from the output that Alexa produces based on the input from Amazon echo</p>\n<p>ii) Learn how to do basic information extraction such as creating graphs and sending useful notifications to hospital staff</p>\n<p>iii) Team work distribution</p>\n<h2>What's next for Help, Alexa!</h2>\n<p>i) Getting feedback from people working in healthcare industry on types of information that they need and try infer the data they need based the patients' requests</p>\n<p>ii) Currently we are classifying requests into five categories. We want to add more so that we can handle patients requests better. Also, we want try implementing real time response system through Alexa.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/react\">react</a></span></li><li><span class=\"cp-tag\">chartjs</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-alexa\">amazon-alexa</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li></ul>\n</div>\n</div>", ["", "", ""]], ["Yammr", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Yammr \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/616/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We saw the approval rating systems of Facebook and Twitter and realized that, while they are a good indicator of quality, they are not very good for comparing two messages directly against one another; they are more of an indicator of popularity. As well, if a person likes two different posts, it is impossible to tell which one the person likes better. By directly comparing two posts, we take it from which post a person likes to which a person likes more. Scaling that concept to a larger population, one can find which message in a set is the best according to the opinions of the people.</p>\n<h2>What it does</h2>\n<p>When a user enters the site, they are prompted to enter a message and their name if they desire. If they enter a message and name and press submit, these two pieces of data are saved to a database for future judging. They can opt not to submit a post, but either way they proceed to a screen where they vote on the last hour's posts in a head to head system to determine which post is superior.  Each post is given a score based on how many posts it beats. To make the system more egalitarian, the posts from the hour are stockpiled and disbursed at the same time, so that a post released early doesn't trump any other posts based only on longevity of the post. As well, all of the matchings are randomized, and the order of the matchings are randomized as well. The user can then keep voting until the posts run out, or cut their voting short and go to one final screen. This screen shows the user the top ten highest rated posts submitted in the last hour. </p>\n<h2>How we built it</h2>\n<p>First, we defined all of the parameters and required information that would be used to ensure the project's success. We planned out the required user inputs, screen layouts, database structure, and redefined objectives and constraints inherent to our skill levels, the equipment and the environment we were working with. With plan in hand, we began coding, splitting up the front end and back end segments of the code. A preliminary database was created in this time period and we began to build our site around it. After a workable copy of the backend was created, we generated test cases to be run against the code. By running these tests we were able to expose numerous flaws with our logic and realize different aspects of our code related to the experience of using it. With this newfound knowledge, the original prototype was improved through an iterative process of prototyping and refining the idea until we were able to create a copy of the backend that met our demands. We then meshed the front end segments with the back end segments, and another iterative prototyping process began, mainly focused on the front end end but not disregarding the logic driving it. This was how our project took its final form.</p>\n<h2>Challenges we ran into</h2>\n<p>Before the project even began, we had an issue in that we didn't have very many programming languages in common. This meant that developing an idea to pursue was hard, as we weren't sure if one team member would be able to keep up with the other if any one language was used over another. We solved this by integrating multiple, easy to learn languages across the course of the project. We also had an issue with the number of page refreshes, on one system we used we had entirely too many server calls, with the page refreshing after every vote in the second screen. We solved this by making one call at the beginning and end of the voting process, and dynamically generating the voting comparisons based on the precompiled data. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We're very proud of the final design of the product. We feel it works well both functionally and aesthetically. We're also proud of the progress we made learning new languages and integrating the work of programmers of varying expertise in the languages selected. Finally., our time management and organizational skills were very satisfactory, as we were able to complete one of the larger projects we've ever worked on at a comfortable rate, and we finished fairly early.</p>\n<h2>What we learned</h2>\n<p>Aside from the obvious development of our coding prowess, during this project we gathered valuable experience in collaboration, teamwork, communication skills. Neither of us had worked on a project like this in a team before, so realizing how to split tasks efficiently and integrate them at a later time took a lot of foresight in the initial planning phase, and required constant communication and revision throughout the project. It was a lot of effort, but the experience gained was very applicable in real world coding scenarios, and the environment created by our SpartaHack peers, mentors, and organizers made it thoroughly enjoyable.</p>\n<h2>What's next for Yammr</h2>\n<p>The next steps we have envisioned for Yammr are to involve popular social media sites such as Facebook and Twitter. In pulling popular posts from their sites, we will be able to rank relevant social media and connect people with better quality online content. We also want to host this online and try to accrue more interest, as our program functions better with a larger user base.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mysql\">mysql</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Hohenberg/yammr\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Hohenberg/yammr\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["TextList", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"TextList \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/354/546/datas/gallery.jpg\"/>\n<p>\n<i>TextList: Using Amazon Alexa to send you text message reminders at scheduled dates and times.</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>TextList</h1>\n<p>Using Amazon Alexa to text you to-do list reminders at scheduled times &amp; dates</p>\n<h2>How to Use:</h2>\n<ol>\n<li>Tell Alexa to \"Text me (task description) at Time &amp; Date\"</li>\n<li>You will receive a text message at the specified time/date from a Twilio phone number</li>\n<li>You must then respond to Alexa by responding to the text message. If you do not do so, she will remind you to complete the task every fifteen minutes via text\n\n<ul>\n<li>Text back with the any of the words \"complete, completed, done, accomplished\" to let her know to delete the task from your list</li>\n<li>If you cannot complete the task at that moment, simply respond with \"postpone until (specified date &amp; time / amount of time)\" and she will send you a reminder text at the new time</li>\n</ul></li>\n</ol>\n<h2>Technologies Used:</h2>\n<ul>\n<li><a href=\"https://alexa.amazon.com\" rel=\"nofollow\">Amazon Alexa</a></li>\n<li><a href=\"https://www.firebase.com\" rel=\"nofollow\">Firebase</a></li>\n<li><a href=\"https://www.twilio.com\" rel=\"nofollow\">Twilio</a></li>\n<li><a href=\"https://www.nodejs.org\" rel=\"nofollow\">Node.js</a></li>\n<li><a href=\"https://facebook.github.io/react/\" rel=\"nofollow\">React</a></li>\n</ul>\n<h2>Inspiration</h2>\n<p>We're constantly writing todo lists, reminders and notes to ourselves, and just as often forgetting about all these plans we've made. What we really need is someone there to bug us and remind us of our tasks. Enter TextList.</p>\n<h2>What it does</h2>\n<p>TextList leverages Amazon's Alexa digital assistant to provide you with a friendly source of reminders. Ask Alexa to text you a reminder at a certain time and date in the future, and when the time comes receive a text reminding you. If you fail to respond, Alexa will follow up and make sure you stay on top of your tasks.</p>\n<h2>How we built it</h2>\n<p>TextList works through an Alexa skill with an accompanying web app. The skill was written as an AWS Lambda Function that is executed when you speak with Alexa and adds reminders to our Firebase based backend. The web application made with React.js then pings Firebase for reminders that need to be sent, and uses Twilio to text you any reminders that are ready.</p>\n<h2>Challenges we ran into</h2>\n<p>Amazon's Lambda Function system is confusing (and our Javascript knowledge was very limited) so getting the skill to execute correctly for each user input and mapping intents had a steep learning curve. Neither of us had ever used React.js, and the web application development was a painful experience when it came time to try and deploy.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Alexa understands the user and adds reminders to the database for variety of input sentences!</p>\n<h2>What we learned</h2>\n<p>So much about Alexa, React and Twilio</p>\n<h2>What's next for TextList</h2>\n<p>Full-scale deployment, certification for our skill and mass adoption by people who are tired of forgetting to do their chores.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/react\">react</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-alexa\">amazon-alexa</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/gueroso/TextList\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/gueroso/TextList\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I wrote the Alexa Skill in an AWS Lambda Function, and wrote a good amount of the web app using React.js", ""]], ["Bouncing Lights", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/ImA5yPwL2qg?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Bouncing Lights \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/354/525/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Bouncing Lights \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/354/526/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Bouncing Lights \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/354/527/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Bouncing Lights \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/354/528/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Bouncing Lights \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/354/529/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Bouncing Lights \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/354/530/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Bouncing Lights \u2013 screenshot 7\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/354/531/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Bouncing Lights \u2013 screenshot 8\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/354/532/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration: As a new coder, Mark asked his brother Giorgio for tips on getting started. Giorgio recommended Mark a book which he read over Winter Break. With little understanding, Mark made a few simple projects by himself. Mark, who is currently in Michigan State University's Physics 184 class, used the knowledge he gained from class to set up the project on a breadboard. He and Giorgio have collaborated to make a project. Mark was responsible for the hardware and coding, and Giorgio was responsible for debugging the code.</h2>\n<h2>What it does</h2>\n<p>Three LEDs light up independently on a breadboard when a kick, snare, or hat is detected in a song. </p>\n<h2>How I built it</h2>\n<p>I used a breadboard, wires, resistors, Arduino Uno, and a USB.</p>\n<p>Using my knowledge from my physics class, I understood the lights needed to be set up in parallel in order to light up separately. Resistors are needed to provide a resistance in order to fulfill Ohm's Law V=IR. Without resistance, there would be no voltage. The resistors provided were of 200\u03a9. Less resistance is needed in order to make the lights brighter due to ohm's law. Thus, three resistors were tied in parallel causing the equivalent resistance to equal (200/3)\u03a9, less than the previous 200\u03a9. A wire was connected from digital ground to the negative ground strip on the breadboard. A resistor was connected to the anode of one LED. Another wire was connected from digital port 12 to the anode of the LED, in series with the resistor and LED. Another wire was connected to the cathode of the LED to the ground. The process was repeated for the other LEDS, except the wires connected to the anode were port 8 and 2.</p>\n<p>For the coding, I used the libraries Minim, Firmata, BeatDetector, and BeatListener in order to complete the project. Defining ports ledPin,ledPin2, and ledPin3 as integers of 12, 8, and 2 allowed me to set them as the outputs to pins later on. Kick was set to digital pin 12, snare was set to digital pin 8, and hat was set to digital pin 2. song = minim.loadFIle(\".mp3\", 2048); was used to upload an mp3 file at a specific bit rate that was chosen. song.play(); is used to play the song. beat = new BeatDetect(song.bufferSize(), song.sampleRate()); is an object used to detect the beat of the song that expects buffer to be the length of the song's buffer size. beat.setSensitivity(50);  after a beat is detected, the algorithm waits for 50 milliseconds before another beat can be reported. The sensitivity cannot be negative. If set to a negative value, the sensitivity will be set to 10 milliseconds automatically. The rest of the code consisted of if-then statements pertaining to the kick, snare, and hat. If hat was detected, port 2 was set to high and then set to low. The same thing occurs when kick or snare are detected. StandardFirmata, a firmware, was uploaded into the Arduino before being able to run the code.</p>\n<h2>Challenges I ran into</h2>\n<p>The code was one large hurdle, as I received help from local coders in the room for some of it. My list was set to zero in the beginning when it was supposed to be set to three. I didn't know how to find the list, so a local coder helped me by using println(Arduino.list()); to see how many there were and exactly which part of the list was the Arduino. It was 3rd on the list of 0-5 and the problem was solved. Another challenge was having the lights flash brighter. This was done by adding resistances in parallel into one equivalent resistance, thus reducing the resistance for each LED. Reducing the resistance increases the voltage by Ohm's Law, thus the LEDs became brighter. After I thought everything was fine, the code had a few bugs, and Giorgio debugged the code. </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>This was one of my first projects that I could apply my classroom knowledge and interests to something highly interesting to me. This is my first Hackathon and my intention was to learn, and I learned a great amount while doing this project. </p>\n<h2>What I learned</h2>\n<p>I learned that for the songs to be found and played, the song needs to be in the directory of the library. In my case, BeatWrite. I learned how to find my Arduino in a list. I learned how to diagnose problems more effectively. Using print is a very easy and effective way of doing so. I reinforced my knowledge in circuits and systems. I could properly apply differential equations and lower forms of calculus to the if statements (sarcastic).</p>\n<h2>What's next for Music Light Bounce</h2>\n<p>I want to be able to reinforce Music Light Bounce to a larger scale project in which tubes can be filled with led strips and have LEDs light up or down with respect to volume or kick/snare/hat, depending on what looks more aesthetically pleasing. Sound engineers would love this as it can be used to calculate the rhythm as they see the lights flash instead of listening to the beat. I would also like to add a playlist instead of having the program play one song at a time.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li></ul>\n</div>\n</div>", ["I used an Arduino Uno, nine resistors, a breadboard,an Arduino IDE, and four libraries to make Bouncing Lights. This is one of my first projects involving both hardware and software. I had some help along the way, but all in all the project was a great experience. I did all the wiring and base code, and Giorgio debugged the code, giving the project life.", ""]], ["imNotARobot", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>After running a few sample images through Clarifai's API, we saw how powerful their image tagging capabilities were and wanted to put them (and us) to the test. </p>\n<h2>How it Works</h2>\n<p>ImNotARobot is a Chrome browser extension intended to autocomplete Google's reCAPTCHA fields. When the user executes the extension, our javascript will traverse the document held in the captcha's frame to isolate the source image being displayed. After slicing the image into the respective grid pieces, we encode these images and send them to Clarifai's REST API to be tagged for us. After obtaining the list of tags describing each of the sectioned images, we send these and the captcha's target word to ESA Semantic Relatedness API to acquire a numeric value for comparing semantic relevance for each of the tags. Using the total values of all the tags describing an image, we can then guess whether captcha intends that image to be selected or not.</p>\n<h2>Challenges We Ran Into</h2>\n<p>Throughout developing ImNotARobot we kept running into several roadblocks. First we had trouble figuring out how to tag the data to be sent to Clarifai through the REST api. We also had issues with parsing the document provided by reCAPTCHA because they do not provide IDs or any other means of identifying the members of the document. We also had the problem of the reCAPTCHA sometimes having a 4x4 grid of images that followed a different format of question than the 3x3 grid of images.</p>\n<h2>Accomplishments that We're Proud of</h2>\n<p>Using good agile development practices, and almost always keeping productive and working together to complete our task especially with so many challenges.</p>\n<h2>What We Learned</h2>\n<ul>\n<li>1/2 new to javascript</li>\n<li>2/2 new to chrome extensions </li>\n<li>good handle on RESTful API</li>\n</ul>\n<h2>What's Next for ImNotARobot</h2>\n<p>Fully automating the reCAPTCHA solving process\nImproving on the calculations that decide what the reCAPTCHA wants in the selected images</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li><li><span class=\"cp-tag\">esa</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/chrome\">chrome</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ajax\">ajax</a></span></li><li><span class=\"cp-tag\">rest</span></li></ul>\n</div>\n</div>", ["I worked on integrating the javascript into the chrome extension, and some of the automation of the extension."]], ["CoinChaser", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"CoinChaser \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/354/501/datas/gallery.jpg\"/>\n<p>\n<i>App Icon</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"CoinChaser \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/354/502/datas/gallery.jpg\"/>\n<p>\n<i>App Banner</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"CoinChaser \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/032/datas/gallery.jpg\"/>\n<p>\n<i>Hot profile of Niket</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"CoinChaser \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/036/datas/gallery.jpg\"/>\n<p>\n<i>Leaderboard Functionality </i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Here's The Deal, We Spend Too Much Time On Our Phones...</h2>\n<p>and sure there are other apps out there that try to solve the problem by showing you some scary graphs to try to deter you from phone use or even utility apps that will physically lock you out of your phone for a certain amount of time.\nBut where's the fun in that? There's no replay value.</p>\n<h2>So We Added Gambling To The Mix</h2>\n<p>Yes that's right. CoinChaser allows you to \"bet\" your friends who can stay off their phone the longest. The one who unlocks their phone first loses. (Important to note that this is completely virtual currency, not attached to any real monetary value). A leader-board dictates who among your facebook friends has the most willpower.</p>\n<h2>What We Learned</h2>\n<p>A lot of IOS-development and firebase techniques. It was a really fun app to build.</p>\n<h2>What Problems We Encountered</h2>\n<p>It was really difficult to get firebase to communicate with facebook on the IOS app. There were lots of moving parts. We ended up having to do them separately (unfortunately). When we revisit the app in the future, we would love to use firebase's commands to control facebook instead.</p>\n<h2>Where We Go From Here</h2>\n<p>We're definitely going to continue building the app in the future. Hopefully we can get it ready for the app store in a couple of weeks!\n<strong>If you support the project, definitely toss us a like! We really appreciate it &lt;3.</strong></p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/facebook\">facebook</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ios\">ios</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/objective-c\">objective-c</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/niketbp/CoinChaser\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/niketbp/CoinChaser\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Boondock Armory", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Boondock Armory \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/354/475/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>This was a simple project to do, but I had so much fun here and I am looking forward to doing more of a hardware hack next time.</h2>\n<h2>This website is about a dream that I have had now for about 7 years</h2>\n<h2>I have seen this domain open for the past few years and finally acquired it</h2>\n<h2>There is no posting of anything on the website.  I am not very well versed in JAVA or HTML anymore.  My last programming course was 12-14 years ago.</h2>\n<h2>The website now exists... somewhat</h2>\n<h2>That dreams do not always have to die as you age.</h2>\n<h2>What's next for Boondock Armory is hopefully a claim in angel investors along with my Mechanical Engineering degree and hopefully a small business grows out of this.  Mobile site is also active.</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">domain.com</span></li><li><span class=\"cp-tag\">impress.ly</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://boondockarmory.impress.ly/\" rel=\"nofollow\" target=\"_blank\" title=\"http://boondockarmory.impress.ly/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>boondockarmory.impress.ly</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Raise.com Gift Cards Chrome Extension", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/62zgG6lQ7Gg?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Raise.com Gift Cards Chrome Extension \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/354/462/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Raise.com Gift Cards Chrome Extension \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/354/461/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Raise.com Gift Cards Chrome Extension \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/354/460/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>I realized that it was possible to save up to 50% while shopping online, but also realized I was far too lazy to remember to search through the website to find the most suitable gift card every time I bought something online.</p>\n<h2>What it does</h2>\n<p>It automatically gets the name of the company from your url and gets your inputted price to scrape the raise.com website to get the best electronic gift card for your purchase and open that card in a new tab.</p>\n<h2>How I built it</h2>\n<p>I built it starting with Extensionizr's basic extension and using JavaScript and Chrome's developer tools.</p>\n<h2>Challenges I ran into</h2>\n<p>It took me a bit of time to find out that I needed to request a permission to the extension to access any part of raise.com. It also was challenging to realize that popup is considered a different separate webpage than the rest of the webpage.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I'm proud that I have already saved some money using the extension.</p>\n<h2>What I learned</h2>\n<p>I learned a lot about the Same-Origin Policy, Cross-Origin XMLHttpRequests and Google's policy on them. I also learned a lot about Chrome Extensions and their limitations and capabilities.</p>\n<h2>What's next for Raise.com Gift Cards Chrome Extension</h2>\n<p>-Increase the accuracy rate of getting the company name from the url. Some companies with shortened urls (tjx.com for TJ-Maxx and ae.com for American Eagle) may need to be hardcoded.</p>\n<p>-Error messages for companies that don't offer electronic gift cards, are sold out, or don't have any cards that would save you money</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/chrome\">chrome</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n</div>", [""]], ["Pixel Kanvas", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Pixel Kanvas was inspired by several of our favorite attributes of Minecraft. We wanted to empower a different type of creativity, while encouraging the same collaboration and exploration that has proven to be so enjoyable. </p>\n<h2>What it does</h2>\n<p>Pixel Kanvas is a real-time collaborative HTML5 Canvas used to build pixel art on your own or with a friend! The massive grid can be explored to see the creations of others too! You can move around the grid by zooming, panning, or jumping to any location on the grid, allowing you to share your work with friends!</p>\n<h2>How I built it</h2>\n<p>Pixel Kanvas is built on the Firebase platform. We initially intended to use node.js and socket.io to send information about users actions back and forth, but quickly settled up Firebase following its presentation. We were blown away by how powerful it was, especially considering the low barrier to entry. We created our canvas in HTML5, the markup in CSS, and everything else in JavaScript. We used BitBucket to collaborate together and share our work as a team.</p>\n<h2>Challenges I ran into</h2>\n<p>We faced several challenges while building Pixel Kanvas. The biggest was learning new APIs, including Firebase, a canvas scroller, and a custom color selector tool. Redrawing such a complex canvas following pan and zoom events also proved tricky. </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>It was neat to see how quickly we got a working model up on our domain! We had our friends and family stress test our site and they were able to make amazing pixel art together. It was cool to see that our idea was really exciting to people!</p>\n<h2>What I learned</h2>\n<p>First and foremost, we learned how to use Firebase. We all improved our abilitiy with JavaScript, CSS, and HTML, especially Canvas.</p>\n<h2>What's next for Pixel Kanvas</h2>\n<p>We see a ton of avenues to take Pixel Kanvas in the future! If we implemented login accounts, we could let users earn points, badges, achievements, and level up! We hope to create a feature that allows a user to generate a URL directly to their creation. The grid could be erased every so often to maintain plenty of area to work! The site could be monetized by selling a block of the grid. This would allow the user a space that wouldn't be drawn on by others or erased with the rest of the grid. Future developments will depend on how much traction Pixel Kanvas gains, but we intend to continue to work on Pixel Kanvas after the hackathon regardless of our finish.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://www.pixelkanvas.com\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.pixelkanvas.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.pixelkanvas.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I split my time between learning and implementing the CSS, and screening several new APIs to determine what we wanted to use for Pixel Kanvas.", "", ""]], ["CaffeineCalc", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"CaffeineCalc \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/488/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"CaffeineCalc \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/490/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"CaffeineCalc \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/493/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"CaffeineCalc \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/497/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"CaffeineCalc \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/498/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"CaffeineCalc \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/499/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"CaffeineCalc \u2013 screenshot 7\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/500/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>CaffeineCalc</h1>\n<p>Caffeine calc is a web app that computes how much caffeine you've ingested lately and compares that number to an age-based \"safe level\" of caffeine to show you whether you should be concerned or not. People all over the world are hospitalized for symptoms linked to caffeine overdose, so we created an app that can prevent that before it happens. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://spartahacksquad.github.io/caffeinecalc/#\" rel=\"nofollow\" target=\"_blank\" title=\"http://spartahacksquad.github.io/caffeinecalc/#\">\n<i class=\"ss-icon ss-link\"></i>\n<span>spartahacksquad.github.io</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I developed the calculation algorithm and contributed to the design. It was my idea.", "", "", ""]], ["DevTalk", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"DevTalk \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/355/674/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>When trying work quickly and efficiently it is often frustrating to forget the command or shortcut you looked up just a few days or even hours ago. It's these commands that can save a developer loads of time but often take time to learn from many google searches. With DevTalk we hoped we could create an application that doesn't need to stop your workflow while you learn these powerful tools and their infinite commands. Whether you're trying to be the next best Vimja, or just like making your Google Chrome experience a little nicer, DevTalk can provide you with all you'd ever want to know!</p>\n<h2>What it does</h2>\n<p>DevTalk is an Alexa Skill that allows a developer to optimize his or her workflow, without ever leaving the keyboard, or even the current screen he or she might be working on. DevTalk is a voice recognition application, that when prompted with supply the user with any command or keyboard shortcut needed. By simply asking Alexa \"how do i delete in vim?\" Alexa will quickly respond with the many different options to delete. Alexa can support any developer tool or application and helps the developer learn new tools while never slowing down the workflow.</p>\n<h2>How we built it</h2>\n<p>We started with a Firebase server on the backend. We realized it was the best way to create an API endpiont custom built for our application. It allows us to easily and quickly incorporate new commands and tools into our application. We then use node.JS and an Amazon lambda function to interface with Amazon Alexa. The Lambda function allows us to incorporate an Amazon Echo to interact with our application. We created the skill DevTalk to allow this interaction to happen.</p>\n<h2>Challenges we ran into</h2>\n<p>Event driven programming is hard. Asynchronous requests are really cool but take time to think through and debug. We also realized it can be very difficult to design a user experience with such a new and modern technology.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We learned how to use Node.JS. None of us had any experience with JavaScript or the Node.JS framework. Working with Amazon Alexa allowed us to finally learn in a productive and real application based manner. We've also learned a little more about the AWS console and we are happy to say we think we've gotten a good understanding of how the user experience has changed from just a point and click, to a much more human style, vocal, interaction.</p>\n<h2>What we learned</h2>\n<p>We learned how much of a paradigm shift Amazon Alexa is bringing to the UX. It is no longer about how to click and touch, but rather how to speak, how to communicate. We learned how to develop a UX centered application around speaking. We also learned how easy it is to set up a database on Firebase. It made an awesome api endpoint for devTalk!</p>\n<h2>What's next for DevTalk</h2>\n<p>We hope we can continue development for devTalk and include many more tools and commands. Our goal is to allow community feedback and crowdsource our commands. This will allow anyone to add their favorite command line tools and provide a new, innovative, and exciting way to increase workflow.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-alexa\">amazon-alexa</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/UMichGuys/SpartaHack\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/UMichGuys/SpartaHack\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Worked on building the endpoint database with firebase and the front end.", "", "", ""]], ["Sous chef", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://player.vimeo.com/video/157021873?byline=0&amp;portrait=0&amp;title=0#t=\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>One of the problems we thought Amazon Echo solved really well was the ability to get information through voice. It is like the friend beside you who has nothing to do and doesn't say no when you ask him/her either.</p>\n<h2>What it does</h2>\n<p>The \"Sous chef\" skill can do many things to enhance Alexa and more! For example, want to explore new recipes? Alexa can give you options to choose from. Can't remember what to do next? Alexa can read out the steps you need. Ran out of ingredients? Alexa can remind you to buy them so you can continue doing you! Of course, it also comes with enhanced food-related jokes.</p>\n<h2>How we built it</h2>\n<p>Almost magically. There was Firebase, Amazon, and MEAN involved.</p>\n<h2>Challenges we ran into</h2>\n<p>Finding a great recipe API was definitely a big challenge. Other challenges include: How do we set up Firebase? How do we read/write data to it? How can Alexa behave as if she had persistent data? And as usual, lots of web dev problems.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Damn Alexa! It works.</p>\n<h2>What we've learned</h2>\n<p>Brainstorming is a crucial part of any hackathon. Not having mentors would have been painful.</p>\n<h2>What's next for Sous chef</h2>\n<p>Sentient AI, of course.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-alexa\">amazon-alexa</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/angular-js\">angular.js</a></span></li><li><span class=\"cp-tag\">domain.com</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/danyalraza/CloudKitchenWeb\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/danyalraza/CloudKitchenWeb\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/danyalraza/CloudKitchen\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/danyalraza/CloudKitchen\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Setup Firebase in order for data to be persisted through multiple Alexa sessions", "Worked on the Recipe API", "I worked on a majority of the API requests, as well as the web platform that facilitated searching and saving recipes as favourites", "Alexa Skills kit development, AI training, API integration, Project design, helped with web platform development"]]]