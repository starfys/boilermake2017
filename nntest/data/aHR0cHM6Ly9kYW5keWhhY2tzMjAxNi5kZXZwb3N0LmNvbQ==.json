[["MusicallyMe", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"MusicallyMe \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/197/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Current music suggestion services verbose and force the user to think in computer-centric categories. Other approaches require harvesting large amounts of data before attempting to become effective. I've decided on a new approach. I've always felt that often I don't even consciously realize what I want to listen to - so let's tap into our subconscious.</p>\n<h2>What it does</h2>\n<p>The user gets sets of images flashed in front of them. They are encouraged to press very quickly (F for right image, J for left). The \"idea\" is whichever picture they \".</p>\n<p>The backend uses cosine similarity as algorithm to detect similarity between sets of preferences. This has a couple of advantages:</p>\n<ol>\n<li>Nonresponse can be easily modeled as 0 (-1 for left pic, 1 for right), allowing for time constrained image selection to still produce valid data.</li>\n<li>Scales well with variable amounts of pictures.</li>\n<li>Gives a rigorous, objective result to the question of \"how close\" two sets of preferences are.</li>\n</ol>\n<p>Our database is built with each user. This means I do not have to curate or create much data; it is organically grown.</p>\n<h2>How I built it</h2>\n<p>I used Mongo, Node, and Express</p>\n<h2>Challenges I ran into</h2>\n<p>JavaScript is a great language!</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Getting it to work</p>\n<h2>What I learned</h2>\n<p>JavaScript is a great language!</p>\n<h2>What's next for MusicallyMe</h2>\n<p>Much better UI/UX. Many pain points for users currently.\nBetter optimized data structures in backend, currently using default Mongo settings. </p>\n<p><a href=\"https://github.com/jacsonding/MusicallyMe\" rel=\"nofollow\">https://github.com/jacsonding/MusicallyMe</a></p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://www.musically.me\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.musically.me\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.musically.me</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["SpaceMaze", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Every member of our group held peak interest in working with VR and gesture control, given the numerous doors these new technologies open for us. Through the divergent/convergent ideation model, we arrived at the agreement of building a maze themed game. The particular context of the maze mattered little, so we decided to persue the space theme to promote the futuristic appeal of our game.</p>\n<h2>What it does</h2>\n<p>Space Maze allows any player to step into the virtual reality world, and explore a fully immersive 3 dimensional space themed maze.</p>\n<h2>How we built it</h2>\n<p>The project was built in Unity 5 in accordance with the Oculus Rift SDK and Leap Motion Orion Beta SDK.\nThough many elements of the game are drag and drop operable, all functionality was scripted in C#.</p>\n<h2>Challenges we ran into</h2>\n<p>As the majority of our team had no experience with any of the above technologies mentioned, the learning curve was extremely steep. Furthermore, with the game being fairly multi-platformed, there were an abundance of integration issues with Unity, Oculus Runtime and Leap Motion SDK for all of us. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>In the end, we completed a fully functioning, environment-rich game that is astoundingly beautiful. Game objects are rigidly built, as in collision detection is widespread across the map, and gesture detection for pushing, pinching and throwing are spot on. Also, the game environment is a custom made 53MB layout file of layered textures that interconnect into an incredible alien/spaceship world. </p>\n<h2>What we learned</h2>\n<p>We learned to never underestimate simple development tasks, as errors don't ever show up where you expect them to. \nAlso, we learned to always have backup plans and contingency measures, so that when a resource becomes inaccessible to some members of the group, they have room to contribute.</p>\n<h2>What's next for SpaceMaze</h2>\n<p>The current version of SpaceMaze only holds level 1, and is still in it's prototyping phase. In the future, we hope to have all features, obstacles and storyline developed thoroughly and implemented as such. We also plan on improving the performance of the game significantly, in order to reduce stress on the user's eyes during long periods of usage.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/oculus\">oculus</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/leap-motion\">leap-motion</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/ShuyangLiu/dandyhack16_Maze\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ShuyangLiu/dandyhack16_Maze\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I created the walking through the game and camera. I worked on the obstacles throughout the game and helped anyone throughout the entire event. ", "Worked on back end gesture detection using Leap Motion. Created pinch-to-move script that moved object on collision with hand and pinch of hand. Also was able to implement several back end Gesture detections what did not make it into the game.", "", "", ""]], ["Parity: The 9th Bit", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Parity: The 9th Bit \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/923/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Parity: The 9th Bit \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/925/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Parity: The 9th Bit \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/927/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p><strong>We took them by storm. First by box, then by form. With a pat on our chests. We bring you our best. Now watch us perform.</strong></p>\n<p>We decided to make unusual musical instruments for the hack-a-thon. We wanted to focus on novel ways to generate sound and stayed away from typical hack-a-thon projects. Our first idea was creating six keys that can be hit or stood upon to create instrumental noise. This idea spurred other ideas for other instruments, and resulted in our glove and theramin shirt. </p>\n<p>The shirt started as a \"button-down\" shirt, with each button corresponding to a different note, and when pressed, would play said note. However, due to time restrictions, we decided not to use the button idea, but instead use a proximity sensor to create a theramin shirt.</p>\n<p>Our idea for the glove came about when we were thinking about what it would be like if we could play sounds just by tapping our fingers. Using buttons located on the fingertips, the pressing of the finger against the thumb or any object produced piano notes in the notes of B, E, A and D. </p>\n<p>Overall, the three instruments create sounds in ways that allow for a more unique musical experience. </p>\n<p>Team Members: Chris Dalke, Raaga Kanakam, Thomas Pinella, Dylan Wadler.</p>\n<p>**We are competing for the Best Hardware Hack and 1st Place</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">glove</span></li><li><span class=\"cp-tag\">wood</span></li><li><span class=\"cp-tag\">lights</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/processing\">processing</a></span></li></ul>\n</div>\n</div>", ["", "", ""]], ["SWITCH", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"SWITCH \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/468/datas/gallery.jpg\"/>\n<p>\n<i>Bases are red.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"SWITCH \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/636/datas/gallery.jpg\"/>\n<p>\n<i>Platforms are blue.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"SWITCH \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/637/datas/gallery.jpg\"/>\n<p>\n<i>This game is tricky.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"SWITCH \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/470/datas/gallery.jpg\"/>\n<p>\n<i>Without a walkthrough.</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Run instructions:</h2>\n<p>Download from the itch.io link given.\nUnzip and run SWITCH.exe\nYou should run in 1366x768 or 1280x720\nIt maaaay freak out at some points if run on a computer that's not mine. Especially on levels with lasers, and maybe with completing a level. Hopefully it doesn't. :/\nIf you should have beat a level, but it didn't let you, just use X to skip.</p>\n<h2>Rules</h2>\n<p>Bases are red, and are on the lower level.\nPlatforms are blue, and are on the upper level.\nWhen space is pressed, light squares swap color, and dark squares do not.\nThe player is moved with the arrow keys. It can only stay on the same level by its own movement (but may switch levels if space is pressed and it is on a light square.)\nR resets levels, and X skips them.</p>\n<p>Blocks are purple. They can be pushed. They also can be walked on.\nLasers are yellow. They can be blocked by platforms, blocks and other laser pointers. They can't be walked through.\nSwitches are green. They can be pressed. They toggle a blocker, which can't be walked on or through.</p>\n<h2>My Opinions</h2>\n<p>3D Graphics:</p>\n<p>Aaaah. Blender is too complicated. I ended up not using it at all.\nSimple geometric shapes are all I could use. I think it didn't significantly decrease the quality of the game, and made it a sort of \"colors and shapes\" kind of feel, but it would be nice to learn what literally any of the billions of buttons in Blender do for next time.</p>\n<p>2D Graphics:</p>\n<p>Wow. I really like how that logo came out, actually. \nI enjoy graphic design, but usually I'm not too good at it, but I just really am happy with the look of it.\nI've been looking at it too long, so I'm not actually a good judge at all of its aesthetic or readability though....(also the sleep deprivation probably isn't helping.)\nI did that in MS Paint, because I don't have Illustrator or anything. \nI also was having fun with the red/blue lighting on the sprites, so I might have gone a bit crazy with gradients.</p>\n<p>Level Design:</p>\n<p>I really enjoy puzzles, so it was important to me that the non-tutorial-y levels were designed well.\nI think that there are some very fun ones and some very hard ones too.\nI don't know how long you're going to look over the submission and play all the levels, but know that the level design is probably what I'm most proud of. \nEach non-tutorial level is intended around giving the solver some sort of discovery or moment of sudden understanding, and that's really nice if you can do it well.\nAgain, I designed all the levels, so I already knew their solutions, and might not be a great judge of how fun solving them would be, but I like to make logic puzzles a bunch, so I think I've gotten better at seeing it from both a constructor and a solvers perspective. Anyway, yeah, you can see it for yourself. Hope you like them. (n_n)</p>\n<p>Other:</p>\n<p>Uh... the main menu is.... well.. yeah.\nThe \"beating a level\" animation is so awesome. I kind of accidentally stumbled upon it, but I think it was a good find. I also like the goal cube and background animation. It just makes the atmosphere better than static in my opinion.\nIn terms of code, please don't look in there. It's really awful spaghetti code with random bad cases and stuff. I just kind of randomly hacked stuff together until it worked, instead of thinking of the best way of doing things...</p>\n<h2>What's next</h2>\n<p>I actually am probably going to keep this game and keep working on it.\nI might start a bunch from scratch, so that I can redo some of the awful code, but I can still keep the base everything, and definitely those levels! There's a lot of potential here not yet explored, especially with switch/block and switch/laser interaction, so after getting some sleep and studying for the econ test on Monday that I was supposed to be studying for this weekend, I'll definitely look into expanding it more.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://zachpolansky.itch.io/switch?secret=nNkE4hfZXQkDP3cYx0FvbT9LhM\" rel=\"nofollow\" target=\"_blank\" title=\"https://zachpolansky.itch.io/switch?secret=nNkE4hfZXQkDP3cYx0FvbT9LhM\">\n<i class=\"ss-icon ss-link\"></i>\n<span>zachpolansky.itch.io</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Octocat Invasion", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Octocat Invasion \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/171/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>Hardware-wise, we went into this hackathon with little more than an Arduino Uno and a set of phone-repair tools. We knew we wanted to use the Arduino as an interface to communicate with a computer, so we set it up to send messages of the serial port based on sensor input. We fastened everything together with electrical tape and cardboard, and at one point had to replace a momentary switch with a rocker switch (which impacted the controls a bit). The hardware uses C++ to write a text file based on a log file of a serial monitor called Putty, which the Java program reads and uses for input.</p>\n<p>For the software, we decided to build an Invaders style game with one turret that turns according to the input from the controller we made. The game and graphics are all made in Java. Keeping in the \"Octocat\" theme of the hackathon, we made an octocat to be the alien. You play it by turning the angle of you turret and shooting, if you miss 3, the game is over. When you hit one or it gets through, another one starts, it starts to get faster as your score gets higher. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li><li><span class=\"cp-tag\">arduino-language</span></li></ul>\n</div>\n</div>", ["I did the Arduino and serial communications stuff", "", "", ""]], ["mcmc_philosoph_trump", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"mcmc_philosoph_trump \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/097/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Microsoft Tay</p>\n<h2>How I built it</h2>\n<p>Implemented simple MCMC algorithm on English text gathered from reddit (/r/ Philosophy) and Donald Trump's website to predictively generate text given a keyword of phrase.  </p>\n<h2>Challenges I ran into</h2>\n<p>My original aim was to use a framework such as TensorFlow to train a deep learning model (as microsoft tay, xiaoice, etc.) My quota on the CSUG servers was too little, and the resulting model generated poor text (repeat single character words). With a larger dataset, quota, and more time, I could have finished this approach or improved the output of the current.</p>\n<h2>What's next for mcmc_philosoph_trump</h2>\n<p>Collect more data</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twitter\">twitter</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/reddit\">reddit</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://twitter.com/TrumpPhilosophy\" rel=\"nofollow\" target=\"_blank\" title=\"https://twitter.com/TrumpPhilosophy\">\n<i class=\"ss-icon ss-link\"></i>\n<span>twitter.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["The Dandy Hacker", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>What it does</h2>\n<p>This is a small taste-test of a game with potential to grow. You are a victim trapped within a room inside Rettner Hall and must solve puzzles to escape. The puzzles have a computer science flavour to them, giving computer science students an edge when playing.</p>\n<h2>How we built it</h2>\n<p>Unreal Engine was used for assembly, 3DSMax and Photoshop for asset creation, and Wolfram Technologies for the custom converters.</p>\n<h2>Challenges we ran into</h2>\n<p>Trying to compress 1GB of data into the 35MB limit as we were told during the last 15 minutes.\nAlso incorporating websites into our project and getting responses from the website reviewers. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Learning the wolfram language mathmatica and creating a full scene within Unreal Engine.</p>\n<h2>What we learned</h2>\n<p>How to use mathmatica, some html, and to work together.</p>\n<h2>What's next for The Dandy Hacker</h2>\n<p>Hopefully a larger team with a more innovative goal.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unreal-engine\">unreal-engine</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/wolfram-technologies\">wolfram-technologies</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["MedBook", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"MedBook \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/393/datas/gallery.jpg\"/>\n<p>\n<i>Homepage</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"MedBook \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/390/datas/gallery.jpg\"/>\n<p>\n<i>Sign Up</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"MedBook \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/389/datas/gallery.jpg\"/>\n<p>\n<i>Login</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"MedBook \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/391/datas/gallery.jpg\"/>\n<p>\n<i>Medical Record</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"MedBook \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/392/datas/gallery.jpg\"/>\n<p>\n<i>User Homepage</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We are inspired by our community. </p>\n<h2>What it does</h2>\n<p>The goal of MedBook is to serve as a platform for patients to compile all the medical record they receive from different hospitals. Additionally, users with rare diseases or wants to contribute to health science can donate their medical record to the The Electronic Medical Records and Genomics (eMERGE) Network at the National Health Institute. </p>\n<h2>How I built it</h2>\n<p>Ruby on Rails and Semantic UI</p>\n<h2>Challenges I ran into</h2>\n<p>Finding team members who are interested in building this site with me.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>The website, its awesome features, and the potential impact it can have on society.</p>\n<h2>What I learned</h2>\n<p>Learn to make a functional site in 36 hours</p>\n<h2>What's next for MedBook</h2>\n<p>Work with different hospitals to automatically update patient's\u2019 information instead of making the patients type in their medical record. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ruby-on-rails\">ruby-on-rails</a></span></li><li><span class=\"cp-tag\">semantic-ui</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://medbook.tech/\" rel=\"nofollow\" target=\"_blank\" title=\"http://medbook.tech/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>medbook.tech</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I built the website on RoR", "", ""]], ["TouchPaint", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"TouchPaint \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/398/datas/gallery.jpg\"/>\n<p>\n<i>Modern Face</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration: I wanted to create an immersive creative experience with as little limitation as possible.</h2>\n<h2>What it does: Allows users to \"paint\" a canvas with their own hands. Alternate through a color wheel with the twisting of a fist, and save your creations by placing two hands over the motion sensor. Finally, when you want to start from a blank slate, crush the canvas in your hands and tear it down (lower hands and close fists).</h2>\n<h2>How I built it: I used a Javascript library for the Leap Motion to get directional unit vectors and positions of various fingers and hands throughout the process of painting. To determine which fingers were \"painting\" and which were wavering to the side of the canvas, I took dot products of vectors and evaluated results. To spin the color wheel, I took a similar dot product approach with the x and y axis to determine the colors chosen.</h2>\n<h2>It was difficult keeping track of the color that was being used to paint. To do this, I saved the color as the class name of a div in the html body. This class name would be dynamically updated as the color wheel is spun to adjust colors. It was also difficult Maintaining pointers for the tips of the index and middle finger used to paint. To do this, I created a high order function in Javascript which contained a function necessary to continuously update the pointer selected.</h2>\n<h2>Accomplishments that I'm proud of: I'm proud of how intuitive I got the entire web app to work. From the painting, to the process of changing colors and saving images/clearing the canvas. Everything is extremely user friendly and seamless to use.</h2>\n<h2>What I learned: I learned a ton about the Leap Motion, and just how user friendly all their documentation is. I learned all about the html canvas element, and the cool ability it has to be converted to .png data.</h2>\n<h2>What's next for TouchPaint: I'll keep the website up on a different domain, so one day when I get a Leap Motion I can come back and draw.</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/leap-motion\">leap-motion</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://52.11.122.208/\" rel=\"nofollow\" target=\"_blank\" title=\"http://52.11.122.208/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>52.11.122.208</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["lordofthescripts", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Version Control is boring. Games are fun. And Dragons</p>\n<h2>What it does</h2>\n<p>Makes version control fun by gamifying the process</p>\n<h2>How we built it</h2>\n<p>Javascript with Yesod backend</p>\n<h2>Challenges we ran into</h2>\n<p>Long build times and heroku being dumb. Also linking domain name to project</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>It works (Sort of)</p>\n<h2>What we learned</h2>\n<p>Hackathons can be fun</p>\n<h2>What's next for lordofthescripts</h2>\n<p>More features</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">haskell</span></li><li><span class=\"cp-tag\">yesod</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sqlite\">sqlite</a></span></li><li><span class=\"cp-tag\">stack</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/heroku\">heroku</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://bitbucket.org/lordofthescripts/server\" rel=\"nofollow\" target=\"_blank\" title=\"https://bitbucket.org/lordofthescripts/server\">\n<i class=\"ss-icon ss-link\"></i>\n<span>bitbucket.org</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Sorting Manager", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>It's a long story. We know that we have thousands of files on our PC our cloud. But it's extremely hard sometimes to find our desired files. Let me give you an example- You have downloaded thousands of books from the internet, and all of them have an irrelevant name like - \"whn_23\", \"2663ty\" etc. So, you're still not ready to read your books. You have to open every single file and see the name of the book. So, if it's your worst day and you have 1000 books, then just think about yourself now! It's not only books. Every person has to face this problem in their life. Like- office workers who have tons of office files, but can't remember the purpose of every single file.</p>\n<p>Now, what we are going to do is- building an ultimate software, which will sort every single file searching it's actual name from the file with the author and date. Not only this but also it will separate all the files in separate folders and sub-folders. Like- root folder- \"mathematics\" - sub folder -\"number theory\" - sub-sub folder- \"prime numbers\" - ....... - \"your book\"</p>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://drive.google.com/folderview?id=0B-QfGqPxvDsKVFRVSEkxUXZEYnM&amp;usp=sharing\" rel=\"nofollow\" target=\"_blank\" title=\"https://drive.google.com/folderview?id=0B-QfGqPxvDsKVFRVSEkxUXZEYnM&amp;usp=sharing\">\n<i class=\"ss-icon ss-link\"></i>\n<span>drive.google.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Ecart", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<h2>What it does</h2>\n<h2>How I built it</h2>\n<h2>Challenges I ran into</h2>\n<h2>Accomplishments that I'm proud ofiutd</h2>\n<h2>What I learned</h2>\n<h2>What's next for Ecart</h2>\n</div>\n</div>", [""]], ["Vote2Eat", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Vote2Eat \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/345/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We were trying to find place to eat out around us and since there were so many of us we had to make a poll separately. It would be nice, if it is all in one app.</p>\n<h2>What it does</h2>\n<p>Find a place to eat near your location, and you can send invitation to vote to your friends. </p>\n<h2>How I built it</h2>\n<p>With nativescript, and generate both android and ios codes. We worked in group of 4 and use github to collaborate.</p>\n<h2>Challenges I ran into</h2>\n<p>We had to learn nativescript (and javascript actually). A lot problems with dependencies. Couldn't get maps and many plugin to work. We didn't understand how to link mobile app with database and server. Problem with emulator. </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>make our first app. And it is native cross-platform</p>\n<h2>What I learned</h2>\n<p>making app is tedious, and so many things with the dependencies. It's cool though</p>\n<h2>What's next for jigglybyte_dandyhack16</h2>\n<p>finish this app.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/tkhunkhe/jigglybyte_dandyhack16\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/tkhunkhe/jigglybyte_dandyhack16\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on front-end, created logo, designed overall product and lead the team and delegated tasks", ""]], ["Droplett", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Droplett \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/169/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Droplett \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/170/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Droplett \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/212/datas/gallery.jpg\"/>\n<p>\n<i>welcome page</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Droplett \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/213/datas/gallery.jpg\"/>\n<p>\n<i>the game</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Droplett \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/214/datas/gallery.jpg\"/>\n<p>\n<i>choose a username</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<h2>What it does</h2>\n<p>Connects multiple mobile devices to compete in a simple game. </p>\n<h2>How I built it</h2>\n<h2>Challenges I ran into</h2>\n<p>Collisions between objects on the server</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>realtime movement on mobile / desktop</p>\n<h2>What I learned</h2>\n<p>lots about node and websockets</p>\n<h2>What's next for Droplett</h2>\n<p>Better performance.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag\">javasciprt</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/websockets\">websockets</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/strangesast/dandyhacks\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/strangesast/dandyhacks\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["NapTimes.org", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Our target demographic are college student with hectic sleep schedules. We understand time is a valuable resource.</p>\n<h2>Our Goal</h2>\n<p>To create the most exhaustive and optimal naptime scheduler for today's busy citizen</p>\n<h2>What it does</h2>\n<p>Calculates optimal sleep schedule using an advanced heuristic</p>\n<h2>Challenges we ran into</h2>\n<p>Time, Front-End support, Integration</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Functionality!</p>\n<h2>What we learned</h2>\n<p>It's important to sleep when making something to tell people to sleep</p>\n<h2>What's next for NapsTimes.org</h2>\n<p>Much, much more!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n</div>", ["", "", ""]], ["EventManager", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We felt like Facebook and other event advertising sites made it difficult to put focus on the events themselves.  This allows club members to directly advertise events from their phone without the hassle of other sites.  More importantly students can see all of the events in one place and manage their schedule easily.</p>\n<h2>What it does</h2>\n<p>It is a platform that takes in events from club managers and automatically updates the app to include these events.</p>\n<h2>How we built it</h2>\n<p>We used firebase as a database and android studio.</p>\n<h2>Challenges we ran into</h2>\n<p>Living life.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Finishing.</p>\n<h2>What we learned</h2>\n<p>We learned the whole android development process and firebase in 36 hours.</p>\n<h2>What's next for EventManager</h2>\n<p>We are going to add notifications and allow users to favourite which events they want to attend.\nWe can also connect their chosen events with their google calendar.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xml\">xml</a></span></li></ul>\n</div>\n</div>", ["", "", ""]], ["RealTrumpBot", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Did you ever want to ask Donald Trump a question in real life, but never had the chance? Now you can!</p>\n<h2>What it does</h2>\n<p>Input a question as standard input to my Python program. A version of Donald Trump will respond to you.</p>\n<h2>How I built it</h2>\n<p>Python</p>\n<h2>Challenges I ran into</h2>\n<p>Regular expression parsing, recurrent neural networks which never got built</p>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<h2>What's next for trump_backend</h2>\n<p>A front-end web interface!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/jthurst3/trump_backend\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/jthurst3/trump_backend\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Project name", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>Inspiration</p>\n<p>What it does</p>\n<p>How I built it</p>\n<h2>Challenges I ran into</h2>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<h2>What's next for Project name</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sql\">sql</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n</div>", [""]], ["Ctrl-f Books", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Ctrl-f Books \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/026/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Ctrl-f Books \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/027/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Ctrl-f Books \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/028/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Ctrl-f Books \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/029/datas/gallery.jpg\"/>\n<p>\n<i>Scanning</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Ctrl-f Books \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/064/datas/gallery.jpg\"/>\n<p>\n<i>Logo</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration Cntrl-f on soft copies of the books makes it easier to surf through. But, how about finding some data from physical copy of the book lets say your academic reference book. Always wanted to address this issue.</h2>\n<h2>What it does Allows user to scan barcode of the book that you have and then based on the ISBN number it extracts info of the book using Google Books API. Also, user can search for some data from the book from the app, he'll getpage number information in return.</h2>\n<h2>How we built it We have made use of Google Books API for book data extraction and ZXING open-source API for barcode scanning.</h2>\n<h2>Challenges we ran into</h2>\n<h2>Accomplishments that we're proud of RIght from brainstorming on couple of ideas, then shortlisting on this ambitious idea and try to pull it off in 36 hours :)</h2>\n<h2>What we learned There are open-source APIs that we can make use of for some specialized work. At the same time, they also need some fixes in some areas. Try to contribute it to open-source world.</h2>\n<h2>What's next for Ctrl-f Books If the book is available free on Google-Books, providing an option to read it from the app. Trying to reach out on those books which are still not there on Google-books but which are available on different medias.</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/eclipse\">eclipse</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-books\">google-books</a></span></li></ul>\n</div>\n</div>", ["Backend linking with API, Designed responsive UI.", "Worked on integrating front-end and back end"]], ["Basic NeuralNet (Originally meant to learn Muse data)", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>When we were searching for a hackathon project, after pulling up the hardware list, we saw the muse. We were excited as we had never designed brain computer interfaces.</p>\n<h2>What it does</h2>\n<p>After calibration, this program uses a neural network to catagorize thgoughts into various terms (up, down, left, right, left mouse, right mouse) to control a computer through a \"mental mouse\"</p>\n<h2>How we built it</h2>\n<p>We built it using various elements from probability theory (such as the gaussian curve). We also created (from scratch) and used a neural network (in this project it was a feed forward 3 layer neural network).</p>\n<h2>Challenges we ran into</h2>\n<p>The largest issue we ran into was with muse itself. Many times it decided not to pair, other times it decided that port 5000 was in use (even though it was not). We use an the open sound control protocol wich was poorly documented on the muse.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>With that said, we were able program (from scratch) a neural net implementation with gradient decent. This allows us to perform machine learning with only our code.</p>\n<h2>What we learned</h2>\n<p>We learned all about Artificial intellegence, BCI, and the importanace of patience.</p>\n<h2>What's next for NeuralNet</h2>\n<p>We plan on using this NeuralNet we designed for our ImagineRIT project, an automated ASL interperter using the leap motion controller.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/apache\">apache</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/qxh5696/NeuralNet\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/qxh5696/NeuralNet\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["PassTheParagraph", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>PassTheParagraph</h1>\n<p>A website where users write stories together, one sentence at a time.  Created at DandyHacks 2016</p>\n<p>Users can create stories, which anyone on the website can contribute to, 200 characters at a time.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/spirography/PassTheParagraph\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/spirography/PassTheParagraph\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Improv++", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We all love comedy, but sometimes it is not feasible to go to a local improv. So Improv++ offers a solution for your improv needs right from your own home.</p>\n<h2>What it does</h2>\n<p>Improv++ is a functioning web-app that allows users to participate in short-form improv.</p>\n<h2>How we built it</h2>\n<p>We used Node.JS and Firebase for functionality, and then made a frontend in HTML and CSS with Bootstrap.</p>\n<h2>Challenges we ran into</h2>\n<p>Everything in relation to Firebase.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Getting it to work</p>\n<h2>What we learned</h2>\n<p>Firebase is not as easy as people say it is.</p>\n<h2>What's next for Improv</h2>\n<p>Webcam integration.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/christophert/improvplusplus\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/christophert/improvplusplus\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"http://ipp.chtr.us/\" rel=\"nofollow\" target=\"_blank\" title=\"http://ipp.chtr.us/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>ipp.chtr.us</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I made the frontend and the logo.", "Linked our backend to Firebase", ""]], ["Rhythm Fighter", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Rhythm Fighter \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/711/datas/gallery.jpg\"/>\n<p>\n<i>Main menu</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Rhythm Fighter \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/710/datas/gallery.jpg\"/>\n<p>\n<i>Song selection</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Rhythm Fighter \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/712/datas/gallery.jpg\"/>\n<p>\n<i>Combo!!</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Rhythm Fighter \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/713/datas/gallery.jpg\"/>\n<p>\n<i>Tutorial screen with practice beat</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Rhythm Fighter \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/846/datas/gallery.jpg\"/>\n<p>\n<i>Results screen</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Rhythm Fighter \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/858/datas/gallery.jpg\"/>\n<p>\n<i>Beatmapping in Reaper</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Rhythm Fighter \u2013 screenshot 7\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/857/datas/gallery.jpg\"/>\n<p>\n<i>Before and after of Reaper marker data</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>Created in 36 hours for Dandyhacks '16.</p>\n<h2>Inspiration</h2>\n<p>A shared love of both rhythm based games and quick, high-intensity fighting games led to our idea to combine the two in a way that highlights the strengths of both: the musicality and fun of a rhythm game with the strategy and reflex dependence of a fighting game.</p>\n<h2>What it does</h2>\n<p>Rhythm Fighter is unique as a fighting game in that it only lets players act at specific times. These times are determined by  pre-programmed beatmaps for each song in the game. Imagine it like Guitar Hero or Rockband, but instead of trying to get all the notes, you are trying to take advantage of the notes as time slots in which you can attack, block, or execute part of a combo. This forces the player to react to incoming beats dynamically. Instead of telling the player which buttons to press at each note, we give them the freedom to choose, thus molding their own style of fighting to the music.</p>\n<h2>How we built it</h2>\n<p><strong>Rick:</strong> My role was to code up the framework that tied the program together. I coded most of the main game loop and several of the necessary classes to make things work. A good portion of my effort was put towards finding the best way to display all of our graphics in a fast and efficient way. For this, I chose Java's Swing library primarily because of my previous experience with it. The game displays all of its graphics by drawing directly to one of two buffered images: the background layer and the active layer. The background is written once and not touched again unless the game changes screens(from menu to game, etc.) while the active layer is rewritten every update cycle. I chose a Swing Timer to keep track of our framerate, calling an update method every 16 milliseconds for a full ~60 FPS. It's not the most rock solid timekeeper in the world, especially for a rhythm-based game such as Rhythm Fighter, where everything needs to be as in sync as possible to ensure things don't break down. This made the moving bars that represent the beat reach their destination horribly off time. So, to counteract this, Trevor and I developed a function that gives the x-coordinate where every given bar needs to be at the current time so that it reaches its destination at the precise millisecond its supposed to. The result is a rock-solid rhythm game engine that dynamically corrects inconsistencies in the framerate so that each bar is on the beat no matter what. I also spent a lot of time debugging weird issues and implementing Ben's assets into the code. </p>\n<p><strong>Trevor</strong>: I worked on the character animations and integrated them into the main game loop. I created the animations using 2D graphics from the Swing library. This approach was laborious due to it being entirely based on coordinate plane movement. In order to call the animations in the loop, I used tracker variables to store what frame of the animation would be shown that time through the loop. The possible animations are stored in an enum, and which animation is currently in progress is stored in an outer variable, which is updated every time a successful move is done. There was a lot of trial and error involved to achieve the final result which includes special animations for each move, as well as reactionary animations based on player interaction.</p>\n<p><strong>Ben:</strong> My role on the Rhythm Fighter team was primarily as the \"asset guy\". This entailed sourcing and creating all the various graphics and sounds for the game, as well as creating the beatmaps. Most of the graphics such as the backdrops and buttons were rendered from .png images that had been created using Photoshop. The animations (with the exception of the stick figures which were handled by Trevor) were simply series of .png images that were rendered in quick succession to create movement. The creation of the beatmaps was done using the audio editing program Reaper, as well as Notepad++ for formatting. I created each beatmap by importing the .wav file of the song into Reaper and \"recording\" the beatmap by listening back to the song and pressing a shortcut to place a marker in every place I wanted a beat. I typically could simply perform the song and then go back and edit any markers where my timing was notably off. After the beatmap was established in Reaper, I simply extracted the marker positions from the Reaper project save file and used Notepad++ to format them into a simple list of millisecond values.</p>\n<h2>Challenges we ran into</h2>\n<p>The most difficult challenge we faced was definitely getting the game to run in sync with the music. On top of just playing the music for the game, we have to identify when exactly the players can input actions, calculate when exactly the music \"bars\" should appear on the screen in order to hit the judge bar right on the beat, and lastly we have to ensure that those \"bars\" actually get to the judge bar on the beat. We also have to make sure every step of the process is done as precisely as possible to make the game playable. When we began writing out the game, we stuck with a graphics update loop that was pretty simple and not very stable. We used a while statement that ran the update loop and then waited about 16 milliseconds. This seemed fine when testing out graphics, but as soon as we set it to music, we realized that the graphics were far too inconsistent. We attempted to fix this by associating the framerate directly with the millisecond position of the song at each point. We called our update method every time 15 milliseconds or more passed from our last update, using the song as a timebase. The issue with this was that the audio player we used (Clip) was not very good at updating the position it was currently playing in the song. So we ran into the same problem. Our final solution was to dedicate a thread (using swing.Timer) to calling update every 16 milliseconds so that the time between updates did not vary nearly as much. They still varied, and it was still not a suitable timebase to rely on for time-sensitive graphics like the bars that indicate musical beats. So Trevor and Rick came up with a simple math function to take the song's position and calculate where each bar should be at that millisecond position. This way, the time-sensitive moving bars aren't dependent on the framerate at all, meaning that variations in framerate cause no variation in the movement of the bar, giving us accurate timing. Another difficult part of this challenge was determining when players can input actions. Because players can only use moves on the beat, we had to limit them from entering in anything until those beats. The issue here was that since the song's position was a relatively unreliable source, the \"beat\" was not always represented in the millisecond position. To solve this, and account for visual lag and reaction times, we set a series of buffers to allow players to input actions during a short range (&lt;100 milliseconds) around the beat. This made the game a little more forgiving and enjoyable, as well as keeping everything on time.</p>\n<h2>What's next for Rhythm Fighter</h2>\n<p>We hope to continue pursuing this idea beyond this proof of concept, potentially with the help of APIs such as libGDX or other graphics engines.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/fancygama/RhythmFighter.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/fancygama/RhythmFighter.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["My role on the Rhythm Fighter team was primarily as the \"asset guy\". This entailed sourcing and creating all the various graphics and sounds for the game, as well as creating the beatmaps.", "My role was to code up the framework that tied the program together. I coded most of the main game loop and several of the necessary classes to make things work. A good portion of my effort was put towards finding the best way to display all of our graphics in a fast and efficient way that syncs with the music.", "I worked on the character animations and integrated them into the main game loop. I created the animations using 2d graphics from the Swing library. In order to call the animations in the loop,  I used tracker variables to store what frame of the animation would be shown that time through the loop. The possible animations are stored in an enum, and which animation is currently in progress is stored in an outer variable, which is updated every time a successful move is done."]], ["VirtualTetris", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"VirtualTetris \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/600/datas/gallery.jpg\"/>\n<p>\n<i>VirtualTetris game display</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"VirtualTetris \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/601/datas/gallery.jpg\"/>\n<p>\n<i>Pop-up Directions menu</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>The main inspiration behind this build was to experiment with new hardware taking a well known simple game and giving it a bit of a technical upgrade.</p>\n<h2>What it does</h2>\n<p>Basically, by using the Leap Motion controller, the game is able to recognize hand location and gestures over the controller. Therefore the user will execute directed motions controlling the game of Tetris.</p>\n<h2>How I built it</h2>\n<p>I built this program in Java along with using the Leap-MotionSDK. The Leap-Motion API was extremely well documented and useful allowing this build to be completed over the course of 36 hours. First, I programmed the game of Tetris controlled by basic KeyEvents. Then I experimented with the Leap-Motion controller and API independent of the game. Once I was familiar with the API and controller functionality I was able to connect the game and the controller, sending translating gestures to KeyEvents and mapping the hand location over the controller to the location of the bricks onto the screen. </p>\n<h2>Challenges I ran into</h2>\n<p>The main challenges I faced was creating gestures and mapping the hand over the controller correctly to the Tetris game display. Many times I ran into issues were the games functionality suffered due to slow or innaccurate gesture readings. Therefore, the main challenges were faced in smoothing the control of the game using the Leap Motion controller.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I am glad that for the most part the controls of the game are user-friendly. I am also proud that I successfully integrated Leap-Motions API into this build.</p>\n<h2>What I learned</h2>\n<p>I learned how to sift through SDK documentation and create a project with corresponding libraries in reference to the SDK's API. This was my opportunity to use an API so I am glad I was able to accomplish a build and learn a lot along the way!</p>\n<h2>What's next for VirtualTetris</h2>\n<p>In the future, I would still like to continually refine the gesture and motion tracking. Along side this, implementing a better user interface,create user accounts, collect user high scores. Is what I hope is next for VirtualTetris.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/leap-motion\">leap-motion</a></span></li><li><span class=\"cp-tag\">leap-motionsdk</span></li></ul>\n</div>\n</div>", [""]], ["The Algorithm is Simple", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We were inspired by the website <a href=\"http://www.theproofistrivial.com\" rel=\"nofollow\">www.theproofistrivial.com</a>. The proof is trivial mocks the way some mathematicians and math majors behave when explaining proofs. Sometimes when a mathematician is talking about how to do a proof, they will say something along the lines of \"oh the proof is trivial,\" then proceed to use advanced math terms that don't really explain how to do the problem. The proof is trivial mocks this by explaining how to do any proof with the simple template 'The proof is trivial! Just view the problem as a [random math term] whose element are [random math term]. We felt that computer scientists are just as bad when it comes to explaining algorithms in a condescending manner, thus there also needs to be a 'The Algorithm is Simple' website.</p>\n<h2>What it does</h2>\n<p>Our website does something very similar to 'The Proof is Trivial', except our template is 'The algorithm is simple! Just reduce it to the [random np-complete problem] problem then implement it with [random algorithm/data structure/computer science term]'</p>\n<h2>How we built it</h2>\n<p>First we collected computer science terms and buzzwords from wikipedia and elsewhere on the internet.\nWe wanted the website to have the same look and feel as 'The proof is trivial', so we used the client side html and javascript from theproofistrivial as a template for our website. We are hosting the website with github pages.</p>\n<h2>Challenges we ran into</h2>\n<p>We wanted to have our own domain name, however it was difficult to create a CNAME record with Domain.com.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>I'm proud of building my first website.</p>\n<h2>What we learned</h2>\n<p>I learned a little about html and javascript (I have never used these languages before).</p>\n<h2>What's next for The Algorithm is Simple</h2>\n<p>We are thinking that after The Algorithm is Simple 'explains' how to implement the algorithm, it provides a link to a stack overflow page with 'relevant' code.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://liaklein.github.io/\" rel=\"nofollow\" target=\"_blank\" title=\"http://liaklein.github.io/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>liaklein.github.io</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]]]