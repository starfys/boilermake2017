[["Pebble Hero ", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Pebble Hero  \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/677/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We were inspired by the campaign of #HackHarassment. We wanted to create something that made it easier for anyone to reach out for help or report a situation where they or someone else was in danger, or was being harassed in any way. At first, we wanted to make a web extension, in the form of an animated character that would be on the side of chatrooms to monitor conversations and offer support. However, that's when we came across the Pebble watch at the hardware booth, which none of us has heard of before. We thought it would be a great opportunity to try something we've never done before, so we combined our idea of a harassment reporter/support with the Pebble watch. </p>\n<h2>What it does</h2>\n<p>In risky situations, it is hard to know what to do if you are the subject of harassment or any wrongful action, and it is common for bystanders to fear stepping in. Pebble Hero takes the fear of stepping into conflict by giving users a way to subtlely report issues in front of them. </p>\n<p>Pebble Hero is a Pebble watch app with two different views: one for the person in need, and one for the \"hero.\" </p>\n<p>On the \"person in need\" view, there are three options for different levels of emergency. \nA <strong>Level 1</strong> emergency allows the person to contact the police directly. \nA <strong>Level 2</strong> emergency allows for the person to contact a counselor nearby for emergencies less related to physical safety, and more related to emotional safety. Therefore, things like cyberbullying and face-to-face bullying can also be handled by this report system, with a real person to help. \nA <strong>Level 3</strong> emergency allows for the person to contact a designated \"Buddy\", who is a peer, friend, or family member that also has the app and is able to be contacted for more personal emergencies, like forgetting an important assignment in your dorm. </p>\n<p>On the Hero's view, there are three menus in sequence. The first one will appear when an alert is sent from the person in need's Pebble watch. Then, there is a menu that shows the Name and Location of the person in need. When the Hero clicks \"select\" again, it will notify the person-in-need that the Hero is on their way, or has seen their request. </p>\n<h2>How we built it</h2>\n<p>We started taking turns researching ways to organize menus on Pebble. As we researched, we also tested different methods to see which on we could make work until we found one, and stuck with it. We used CloudPebble to develop our app, and wrote our app in Javascript. We paired a Pebble watch with a phone, and compiled and tested our app as we worked to see how it would appear on the watchface. </p>\n<h2>Challenges we ran into</h2>\n<p>There were many challenges because only half of us were familiar with JavaScript prior to the event. It was a big challenge to make the code run, and to figure out how CloudPebble worked and connected with our phones and the watch. We struggled with getting multiple menu items onto one screen on the watchface, but found a way to save each menu item in its own variable, and manipulate when those variables would be shown. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We're proud of the fact that we MADE SOMETHING!!!!! We came into this hackathon with no ideas, but we all came together and ended up creating something that could be beneficial to society and could really be a useful tool. </p>\n<h2>What we learned</h2>\n<p>Pebble Hero is the first time any of us have created an app, so we learned a lot about app development. We also learned about working with an external device, and programming an app in a non-web environment. </p>\n<h2>What's next for Pebble Hero</h2>\n<p>The next steps to make Pebble Hero even more awesome are to: add icons to the user interface and improve the app so that we could publish it on the Pebble App Store for public use!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/pebble\">pebble</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/ameredith/pebble-hero\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ameredith/pebble-hero\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["frSecurity", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"frSecurity \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/667/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Our team believed safety was a growing matter, we wanted to create a program that would benefit society in a revolutionary way by means of affordability, efficiency, and creativity. </p>\n<h2>What it does</h2>\n<p>The program is an alarm that is designed to detect unauthorized entry by implementing face recognition using a webcam and Amazon Alexa. </p>\n<h2>How we built it</h2>\n<p>Amazon Alexa. Firebase. Angular 2. Ionic 2, </p>\n<h2>Challenges we ran into</h2>\n<p>Applying Push notifications to Amazon Echo. Amazon hasn't release any info on implementing to method for Alexa to speak without us actually activating it with a wake up. But as most hackers, don't we always find a way to go around these type of situations? ;]</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Implementing face recognition into our webcams and using Alexa to send push notifications to the user. We are proud to have created a security system for the public as the home burglary rate continue to grow.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">es6</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/typescript\">typescript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/coffeescript\">coffeescript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag\">lambda</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag\">gsap</span></li></ul>\n</div>\n</div>", ["I contributed by working on the front end of the project. Worked on the HTML layout of the page. Also, contributed to security concepts. ", "", ""]], ["Giddit.io", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>This past summer I interned at a tech company in San Francisco.  Luckily, before moving to the west coast, I was able to find an apartment to rent with three other students from the university that I attend.  Everything seemed to be falling into place until we found out, on the first night of our stay, that there was a restaurant directly below our apartment that played extermely loud music until the early hours of the morning.</p>\n<p>Although I was able to moderate the disturbance by wearing earplugs, I couldn't help but keep thinking how I simply wished that I had known about this situation before signing to pay $1700 a month to live there.  We even had the place checked out by a friend before we signed a lease, but the restaurant downstairs was quiet during the day and so the problem was not immediately apparent.</p>\n<p>A few months later, I met some prospective tenants waiting outside my door for a viewing of the apartment.  After initially just walking by them, I decided to turn around and enlighten them of the situation.  As you can imagine, they were extremely thankful!  </p>\n<p>But what about the people viewing the apartment that I didn't run into?  Or the ones that found the apartment online like I did?  How could I communicate with them?</p>\n<p>Giddit.io is a single location for people to post everything that they would want the next people in their shoes to know.  Whether it's a must see tourist attraction, a hole-in-the-wall restaurant with unbelievable food, or an apartment that might require you to sleep with earplugs on, Giddit.io is the place to go to post and retrieve this information.</p>\n<p>It is built with AWS S3 to store all the data and React Javascript for the UI.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/react\">react</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag\">s3</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://www.giddit.io\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.giddit.io\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.giddit.io</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I built the frontend of giddit.io using ReactJS with the Flux pattern.", ""]], ["Giffical: Random Musical GIFs", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Giffical: Random Musical GIFs \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/616/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p><strong>GIFs</strong> are cool, but they are also distinctly lacking in sound.  We wanted to be able to have GIFs on demand, with awesome music to match.</p>\n<h2>How it works</h2>\n<p>When you click the \"Make me a GIF\" button, Giffical randomly picks a MIDI song - the songs (and song titles) were generated by running ambient sound through a neural network using <a href=\"https://github.com/Glamdring/computoser\" rel=\"nofollow\">Computoser</a>.  Giffical then selects a GIF to accompany the song, changing the playback speed of the GIF to match the BPM of the MIDI (GIF playback control was implemented using <a href=\"https://github.com/buzzfeed/libgif-js\" rel=\"nofollow\">libgif-js</a>),and combining all the elements in you web browser.  </p>\n<p><img alt=\"How our app works in AWS\" data-canonical-url=\"http://i64.tinypic.com/v7s3s0.png\" src=\"https://res.cloudinary.com/devpost/image/fetch/s--ZMfC7r8K--/http://i64.tinypic.com/v7s3s0.png\"/>\nOur app lives entirely within AWS - we use Route 53 for DNS, and an Elastic Load Balancer plus EC2 instance to generate the MIDI tracks and serve the webpage to your browser.  The domain name was provided by Domain.com.</p>\n<h2>What's next for The GIFfical: Random Musical GIFs</h2>\n<p>We want to turn Giffical into a fully auto-generated experience - to create the MIDI tracks on the fly based on input from the user's microphone, and to use the Giphy API to find GIFs and automatically perform speed adjustment based on BPM.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://chaosmuppets.org\" rel=\"nofollow\" target=\"_blank\" title=\"http://chaosmuppets.org\">\n<i class=\"ss-icon ss-link\"></i>\n<span>chaosmuppets.org</span>\n</a></li>\n<li><a href=\"https://github.com/mpbrucker/chaosmuppets\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/mpbrucker/chaosmuppets\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Piano Piano Revolution", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Piano Piano Revolution \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/507/datas/gallery.jpg\"/>\n<p>\n<i>Our physical Piano!</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Piano Piano Revolution \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/646/datas/gallery.jpg\"/>\n<p>\n<i>The Rhythm Game!</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<pre class=\"language-nolang\"><code> Our team was looking to do something interactive and take an aptly named leap with hardware we've never really had the chance to explore before, or lean towards a machine-learning-esque pure software project.  However, we were all unanimous in our wish to scope out a project we could complete.  We started with an idea for machine mixing song lyrics with an pulsing LED Display, but wanted more elements to our Hackathon project.  After some synthesis, we agreed on a digital GUI that can convert music files into user-playable rhythm tracks combined with a futuristic motion-tracking keyboard.\n</code></pre>\n<h2>What it does</h2>\n<pre class=\"language-nolang\"><code> Piano Piano Revolution (PPR) has two integrated components.  The digital portion allows users to easily create a piano-playable note track from a music file, complete with an interface reminiscent of minimalist arcade rhythm games.  \n\n On the hardware side, we have a motion-tracking keyboard which can not only play notes, but also control the software portion of PPR as well.  LED lighting enhances the future experience vibe.  \n</code></pre>\n<h2>How we built it</h2>\n<pre class=\"language-nolang\"><code> On the software side, I wrote the rhythm game GUI with the PyGame library.  Meanwhile, Eric wrote the MIDI conversion software using Python and the MIDO library.  \n\n On the hardware side, Kevin and Kim worked on molding the Leap Motion to interface according to our piano model, through usage of the Leap Motion Python API.  Eric fabricated the acrylic piano from pieces he laser cut.  \n</code></pre>\n<h2>Challenges we ran into</h2>\n<pre class=\"language-nolang\"><code> The biggest challenges we ran into was integration and sounds.  Despite doing our best to make code modular and follow good coding practices, the biggest struggle was hunting and busting all the obscure bugs, some perhaps caused by exhaustion.  Specifically, generating a specific sound from each key posed a challenge due to the lack of documentation on the library we were using, FluidSynth.  \n</code></pre>\n<h2>Accomplishments that we're proud of</h2>\n<pre class=\"language-nolang\"><code> We're proud of getting every single individual component to work.  It's fortunate that we were able to divide up the tasks in a meaningful fashion.  No team member was lacking in work to do.  \n</code></pre>\n<h2>What we learned</h2>\n<pre class=\"language-nolang\"><code> On the whole, we gained a deeper understanding of the Leap Motion API and Python coding, as well as extrapolation and troubleshooting poorly documented libraries.  \n</code></pre>\n<h2>What's next for Piano Piano Revolution</h2>\n<p>Future directions could improve graphical improvements to the digital GUI, as well as tighter integration into an \"all-in-one package\" for the project.  </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/leap-motion\">leap-motion</a></span></li><li><span class=\"cp-tag\">plexiglass</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/HALtheWise/holyoke-ppr\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/HALtheWise/holyoke-ppr\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["TiltShoot ", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/OQqWPJsAH98?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"TiltShoot  \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/561/datas/gallery.jpg\"/>\n<p>\n<i>Picture of device in use.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"TiltShoot  \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/562/datas/gallery.jpg\"/>\n<p>\n<i>Picture of device in use.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"TiltShoot  \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/563/datas/gallery.jpg\"/>\n<p>\n<i>A picture of the Oculus with our device.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"TiltShoot  \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/617/datas/gallery.jpg\"/>\n<p>\n<i>Another picture of our device in use.</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>TiltShoot was inspired through a desire to both hack hardware and software while having fun with an Oculus Rift. </p>\n<h2>What it does</h2>\n<p>TiltShopt's main goal was to have a working game element to be used with an Oculus Rift and accompanying game, which we have accomplished. The short demo accompanying TiltShoot displays the potential of the product as a creator's personal touch to playing shooter games.</p>\n<h2>How we built it</h2>\n<p>The gun was designed entirely in Onshape and laser cut using the laser cutter in the maker space. The Arduino was used with an accelerometer  to gather data and calculate the gun's angular position. From here, the real magic happens in Unity, where the data from the accelerometer turns into a position for the gun within Unity. Finally, we put together a little demo, showing how the gun shoots and reacts in a shooter game environment to demonstrate the product to its full extent.</p>\n<h2>Challenges we ran into</h2>\n<p>We continually changed what hardware we were going to use as we kept hoping to use one set of hardware and being forced to switch to another. As we developed, we encountered a variety of problems with the accelerometer and accurately using the information it gave to relate the gun in-game to the right position. We also dealt with a large amount of code we had never used before (specifically when relating an Arduino to Unity and interfacing with an Oculus Rift), and this was accompanied by unexpected errors that we had to overcome.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We're most proud of our adaptability and improvisation, shown best at the beginning of the Hackathon when our initial idea (which was not TiltShoot) was forced to be scrapped and how we had to develop TiltShoot while constantly iterating and making our ideas work with the materials that were available despite our initial ideas of using different products.</p>\n<h2>What we learned</h2>\n<p>The entire team learned about how to integrate an Arduino with Unity as well as exposing members to new ideas that can be accomplished through interaction of the two.</p>\n<h2>What's next for TiltShoot</h2>\n<p>TiltShoot hopes to provide an open source platform for other developers to use and enjoy.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/oculus\">oculus</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/superduperpacman42/TiltShoot\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/superduperpacman42/TiltShoot\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["TextToObamaSpeech", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/ouY5JG3zbJg?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n</ul> </div>\n<div>\n<h2>What it does</h2>\n<p>TextToObamaSpeech can give users customized Obama speeches. A user can enter a string of words that they would like to hear Obama say and we will return a video of stitched together clips of Obama saying each word.</p>\n<h2>How we built it</h2>\n<p>This project is built on top of AWS to leverage their immense compute power and uses ReactJS for the front-end and Spring Boot/Web/MVC for the back-end server. In Spring, we defined our own RESTful API to request the videos based the text entered. </p>\n<p>For building the videos, we have a large repository of repository of Obama's speeches and use a utility called FFMpeg for all of our video manipulations. As a prerequisite for the set-up for our server, we have several jobs that when kicked off, use IBM's BlueMix APIs to identify words from videos which we then use to build a giant map of each word said in all of the speeches, along with the time stamps of when those words were said. Then, we a user makes a request for a particular string of words, we can use that map to reference the videos and start splicing together clips for the user.</p>\n<h2>Challenges we ran into</h2>\n<p>The biggest challenge we ran into was speed. Videos are generally large things and when you have a lot of them and have to search through them for words, grab specific clips from them, and then splice all of those clips together into one continuous video, it takes some time. A lot of time. That's where PipeDream comes in. PipeDream is our own custom MapReduce pipeline. Based on the historic MapReduce 2004 Paper by Jeff Dean, by leveraging AWS compute power, PipeDream allows us to execute huge amounts of video processing in parallel and cutting our run-time into a mere fraction of what it would be. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>In addition to PipeDream, we also created a smart caching solution we call Fa$tCache so that if a word or phrase has already been asked, building the video the second time around will go much faster.</p>\n<h2>What we learned</h2>\n<p>We learned that Video processing is hard, but rewarding. Also, Obama apparently has some interesting opinions (at least according to our videos).</p>\n<h2>What's next for TextToObamaSpeech</h2>\n<p>The next steps would to be add other people to our video repository. We choose Obama because he has a lot of publicly available speeches to draw from, but our project can take videos of any person, as long as there is enough recorded audio of them to build speeches out of. Who know's what politician/celebrity we'll try next, but feel free to give us some recommendations!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/react\">react</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/redux\">redux</a></span></li><li><span class=\"cp-tag\">java8</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/spring\">spring</a></span></li><li><span class=\"cp-tag\">mapreduce</span></li><li><span class=\"cp-tag\">webpack</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ffmpeg\">ffmpeg</a></span></li><li><span class=\"cp-tag\">bluemix-apis</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/hellaballer/front-end\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/hellaballer/front-end\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Team Your Dream", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Everyone has an unique, wild dream that they haven't got the motivation to complete! It has been proved that committing your dream with a partner can increase the chance of success by 85%! Taking in account the fact that humans can make progress intensively \nand effectively based on co-operation and teamwork, we want to help connect people with the a dream partner so that the pair can both make their dreams come true!</p>\n<h2>What it does</h2>\n<p>We built a web application that allows each people to have an account. Users have to log in and complete their application and their profile. Then they fill in their goals and dreams and the priorities of the dreams. They also need to specify the date that they should finish. Our application will match them to a partner based on the dreams keyword, dream priority, location and date finishing. The partners can view profile and chat to each other, starting the process. After you and your partner have finished a goal, you both will receive a medal! </p>\n<h2>How we built it</h2>\n<p>For front-end, we use HTML CSS javascript, material design and for back-end we use Python &amp; SQLite3 - relational database management system.</p>\n<h2>Challenges we ran into</h2>\n<p>Tiredness and lack of time.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We came up with this idea in only 5 minutes! We are all first-year students and we could fortunately finished the project! </p>\n<h2>What we learned</h2>\n<p>We doesn't only create a really cool app that is pretty unique and useful but we only learn a lot from the hackathon: teamwork, communication, project management, design, function and even..new languages!</p>\n<h2>What's next for TeamYourDream</h2>\n<p>We are planning to add a login feature connected to social media platforms such as Facebook, Twitter, Linkedin and Google+ so that anyone around the world can use our website.  After creating this project successfully, we are looking forward to collaborate again to create new ideas and make more unique products!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag\">material-design</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sqlite\">sqlite</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://dreambuilder.ga/\" rel=\"nofollow\" target=\"_blank\" title=\"http://dreambuilder.ga/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>dreambuilder.ga</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I developed the idea and design the front end + some aspects of the project.", "I am a freshman at Mount Holyoke College. Although I don't have any experience in coding, I have learnt a lot of things from my team members.", "I worked on the back end of the server and I learnt a ton of things."]], ["#HackThePayGap", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>At the Grace Hopper Celebration of Women in Computing, Meghan Smith, USCTO, called upon all attendees to \"hack the pay gap\" by utilizing US government census data.</p>\n<h2>What it does</h2>\n<p>Compare and contrast the income of different demographics in the United States</p>\n<h2>How we built it</h2>\n<p>We used react.js on the front-end to call the MIDAAS API (<a href=\"https://midaas.commerce.gov/developers/\" rel=\"nofollow\">https://midaas.commerce.gov/developers/</a>) to provide the data we display with chart.js.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/react\">react</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://paygap-env.us-west-2.elasticbeanstalk.com/\" rel=\"nofollow\" target=\"_blank\" title=\"http://paygap-env.us-west-2.elasticbeanstalk.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>paygap-env.us-west-2.elasticbeanstalk.com</span>\n</a></li>\n<li><a href=\"https://github.com/alisonberkowitz/HackThePayGap\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/alisonberkowitz/HackThePayGap\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["hackholyoke2016ENG ~ Literary", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Hackholyoke2016ENG - Literary</h2>\n<p>A program that can analyze, identify, and graph spin (good - bad words), onomatopoeia, assonance, + alliteration.\nMade by a trio of first-year Smithies! :D</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/machine-learning\">machine-learning</a></span></li><li><span class=\"cp-tag\">graphics</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/jbombosch/hackholyoke2016ENG\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/jbombosch/hackholyoke2016ENG\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Loop", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We both realize how much of a hassle locking the bike is. So we thought it would be cool if we could lock our bikes from our phones. </p>\n<h2>What it does</h2>\n<p>Using your smartphone, enter your bike lock's passcode. If the passcode is correct, the bike will unlock for a period of time before it automatically locks itself again. If the wrong passcode is guessed too many times, then the bike would remain locked and not accept any unlock requests for a period of time. </p>\n<h2>How we built it</h2>\n<p>The lock mechanism is controlled by a servo, which is controlled by an Arduino. The Arduino receives a request to unlock the bike from a smartphone. If the passcode is correct, then the Arduino would fire the servos and unlock the bike. We programmed the Arduino using Arduino IDE and we created the Android application using Android Studio. The smartphone and the Arduino are connected via Bluetooth Low Energy.</p>\n<h2>Challenges we ran into</h2>\n<p>Designing the lock was challenging because we never really had any hardware experience. Additionally, establishing a connection between the phone and Arduino via BLE was very challenging. Connecting devices via BLE was much more difficult than we anticipated and we spent the majority of our time here trying to figure out this particular problem. </p>\n<h2>Accomplishments that we are proud of</h2>\n<p>We're really proud of the fact that we created something really cool. We never gave up on the project and we worked together to figure out the major issues. We learned a lot.</p>\n<h2>What we learned</h2>\n<p>Both of us didn't really know how to work with Arduinos nor did we know how to program in C so we had to quickly learn the basics. We also didn't know how to work with Bluetooth Low Energy and learning that has been both challenging and rewarding. </p>\n<h2>What's next for Loop</h2>\n<p>There were a lot of features that we didn't implement because we lacked the time. We want to program the Arduino to play sounds so that if you can't find your bike, you could just use the app to play a particular sound so you can find your bike. In addition, we want to encrypt our passcodes so it can't be hacked. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c\">c</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["Emote", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Emote \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/614/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Emote \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/546/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Emote \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/541/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Emote \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/543/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Emote \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/545/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Emote \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/544/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Emote \u2013 screenshot 7\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/542/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>Emote</h1>\n<p>Emote is an Alexa Skill created for the Amazon Echo.</p>\n<h1>Purpose</h1>\n<ul>\n<li>To help people manage their emotions</li>\n<li>Especially geared towards young children with developmental disabilities such as Autism, Asperger's, anxiety, or anger management problems</li>\n<li>They might find it easier to talk to Alexa, not a real person</li>\n<li>Other people tend to have emotional responses that can aggravate or intensify a child\u2019s response to a situation.  * Alexa\u2019s calm and consistent demeanor doesn\u2019t fluctuate or get tired.</li>\n</ul>\n<h1>Main Idea</h1>\n<ul>\n<li>Tell Alexa: \u201cI am feeling _____\u201d</li>\n<li>Alexa responds with suggestions of how to manage that emotion</li>\n<li>There will be multiple steps to the interaction</li>\n<li>Suggestions range from playing music from Spotify to walking user through a countdown exercise. </li>\n</ul>\n<h1>Problems We Encountered</h1>\n<ul>\n<li>New technology</li>\n<li>Amazon Echo is only 2 years old</li>\n<li>Limited resources</li>\n<li>Ability to maintain the connection, it doesn\u2019t just close after 1 interaction</li>\n<li>Multiple-step interactions are in Beta testing, so implementing them is buggy and without much information for issues.</li>\n</ul>\n<h1>Next Steps</h1>\n<ul>\n<li>Fully implement and expand</li>\n<li>Add more depth to every emotion</li>\n<li>Connect other Alexa skills within this skill: Starting an alarm, accessing a To-Do list,  ordering pizza.</li>\n<li>Once Alexa matures, improve the start of the skill for better fluidity and natural speech patterns</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-alexa\">amazon-alexa</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/mbmcconaughey17/HackHolyoke\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/mbmcconaughey17/HackHolyoke\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Flashcards", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Flashcards \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/671/datas/gallery.jpg\"/>\n<p>\n<i>Flashcard</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>We decided to build a program to help us study for Language classes, and actually - any classes that require memorization. On our program you can create different categories for your classes and add/remove a flashcard out of each category.\nCreate a flashcard, add it to a category and start practicing! Flip the card to see if you've memorized the definition and move on to the next words!\nStudy easy!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sql\">sql</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/mltaskova/HackHolyoke2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/mltaskova/HackHolyoke2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Biking Signal Backpack", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Biking Signal Backpack \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/670/datas/gallery.jpg\"/>\n<p>\n<i>outside</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Biking Signal Backpack \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/672/datas/gallery.jpg\"/>\n<p>\n<i>inside </i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We want biking experience to be better and safer, at the same time maintain the cool looking that people would like. </p>\n<h2>What it does</h2>\n<p>The backpack has building in Arudino with sewn LED that is able to flash when there are things within certain distance behind. At the same time, bicylists can give tuning signal shown on the back for nighttime visibility or just to act cool. \nSensoring the distance behind you and give signals when it's close to you. Give turning left/right signal when you want to turn so the people/car/bike is aware of what you want. </p>\n<h2>How we built it</h2>\n<p>Arduino with breadbaord and LEDs swen on backpack. </p>\n<h2>Challenges we ran into</h2>\n<p>At the beginning it was very hard to turn ideas into design. We also needed to consider the accessbility and what we have in hand. Overall the hardware part is hard but we also had good time exploring stuff we never touched before. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We really had fun together and enjoyed working with each other, encouraging each other, and solving problems together for stuff we are both passinate about. At the same time, we learnd a lot as outside classroom experience and exploring new stuff. </p>\n<h2>What we learned</h2>\n<p>To work together and encouraging each other when facing problems. </p>\n<h2>What's next for Biking Signal Backpack</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["College Rides", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"College Rides \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/654/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"College Rides \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/655/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"College Rides \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/656/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"College Rides \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/657/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"College Rides \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/658/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"College Rides \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/659/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"College Rides \u2013 screenshot 7\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/660/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"College Rides \u2013 screenshot 8\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/661/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>hack-holyoke</h1>\n<p>A team project created during Hack Holyoke</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/JulianMullins/hack-holyoke\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/JulianMullins/hack-holyoke\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I'm in charge of designing the functions and layouts of our web app College Rides by using Adobe Illustrator CC. ", "", ""]], ["Emoji Tune-in", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Music reflects the mood of the composers and could affect the mood of the listeners. We want to develop the interactive nature of listening music to an app.</h2>\n<h2>What it does</h2>\n<p>It takes picture of the users and detects their facial expression. Then it plays corresponding music in response to the mood reflected from the users' facial expression.</p>\n<h2>How we built it</h2>\n<p>We wrote python script which captures the image of the user and uses the image obtained as input to the Microsoft's Emotion detector API (project oxford) to get the emotion of the person and play music based on the mood of the person. Based on the user's liking of the music played by the app we either repeat/stop/change the music.</p>\n<p>And one of us produced music tracks through ableton live.</p>\n<h2>Challenges we ran into</h2>\n<p>It was a challenge to learn so much python language.\nAlso it was a challenge to make music of different styles and structures to fit different moods.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>The interactive feature of the app that connects users' mood to the music we play for them.\nAlso the music we play are all made by our team.</p>\n<h2>What we learned</h2>\n<p>API.\nCombining music production with coding.</p>\n<h2>What's next for Emoji Tune-in</h2>\n<p>Detect the music tastes of users from their facial reaction to the previous music we played. And then Emoji Tune-in can play music according to users' tastes.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/opencv\">opencv</a></span></li><li><span class=\"cp-tag\">pyaudio</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/microsoft-project-oxford\">microsoft-project-oxford</a></span></li></ul>\n</div>\n</div>", ["I developed the backend using Python script to take pictures using webcam and integrate with Microsoft's Project Oxford (Emotion detector) and play music according to emotions :) ", "", "", ""]], ["WishList", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Because everyone deserves a happy Christmas/ holiday season</p>\n<h2>What it does</h2>\n<p>Lists children who are hoping to get presents and allows donors to search through profiles and donate presents through Amazon.com</p>\n<h2>How we built it</h2>\n<p>We built this website using MEANSTACK HTML, CSS, JavaScript, Angular.js, node.js, pixabay (images), MongoDB</p>\n<h2>Challenges we ran into</h2>\n<p>We were ambitiously trying to use Amazon web service, but were unable due to the time constraints.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We built a website in under 24 hours! It looks really pretty, and works fairly well.</p>\n<h2>What we learned</h2>\n<p>Not to leave API integration until the end; how to use JavaScript with HTML.</p>\n<h2>What's next for WishList</h2>\n<p>Developing the website so that it works as well as we imagine it can.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">meanstack</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/angular-js\">angular.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/GeoffreyLong/wishlist.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/GeoffreyLong/wishlist.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Retinal Color Accumulation", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Retinal Color Accumulation \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/632/datas/gallery.jpg\"/>\n<p>\n<i>An example of color accumulation</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>I am always looking for new ways of enhancing visual realism, whether that be to a camera or the retina from a raster standpoint.  </p>\n<h2>What it does</h2>\n<p>This shader uses render buffers to display a color accumulation effect.  </p>\n<h2>How I built it</h2>\n<p>I have a video texture that is writing to two buffers.  the second buffer averages the new color value from the video with the value that was already there using a lerp of 0.005.  The first buffer combines the final color value from the second buffer with the proper color value from the video texture.  </p>\n<h2>Challenges I ran into</h2>\n<p>Shadertoy doesn't give me control over drawcalls, so I had to get crafty in order to cache color data from prior frames reliably.  </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>The effect turned out exactly as I intended, with quite tight time constraints.  (~2 hours)</p>\n<h2>What I learned</h2>\n<p>I just about doubled my capabilities in GLSL.  I am used to Shaderlab and DirectX shading languages, so GLSL has been an interesting transition.  </p>\n<h2>What's next for Retinal Color Accumulation</h2>\n<p>I would like to investigate the physical properties of the retina to determine a more realistic value for the accumulation lerp.  I would also like to make the accumulation less severe with less intense colors.  </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/glsl\">glsl</a></span></li><li><span class=\"cp-tag\">shadertoy</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://www.shadertoy.com/view/Mt3Sz4\" rel=\"nofollow\" target=\"_blank\" title=\"https://www.shadertoy.com/view/Mt3Sz4\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.shadertoy.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Harassment Filter(from scratch)", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Harassment Filter(from scratch) \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/644/datas/gallery.jpg\"/>\n<p>\n<i>You before and after Harassment Filter</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Harassment Filter(from scratch) \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/600/datas/gallery.jpg\"/>\n<p>\n<i>Example Filter</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Harassment Filter(from scratch) \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/622/datas/gallery.jpg\"/>\n<p>\n<i>Navy Seals Copypasta</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Harassment Filter(from scratch) \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/627/datas/gallery.jpg\"/>\n<p>\n<i>Example of Code Not Touching a Good Message</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>I saw the HackHarassment filter and wanted to take a quick stab at a text filter.</p>\n<h2>What it does</h2>\n<p>It will take in any text(like from an email or IM) and determine whether it should be considered harmful or not. If it is considered harassment, the program will replace all the harmful words with compliments. </p>\n<h2>How I built it</h2>\n<p>I wrote a bunch of code in matlab. It was all made from scratch and included no prewritten code outside of matlab functions.</p>\n<h2>Challenges I ran into</h2>\n<p>Converting between string, char, and cells was a common problem. Also, getting the correct function index was a challenge. </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>It will correctly index the words most of the time, and it accomplishes what I set out to do.</p>\n<h2>What I learned</h2>\n<p>Deconstructing words and speech is much more difficult than I realized.</p>\n<h2>What's next for Harassment Filter</h2>\n<p>Probably expanding the database to include more words. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/matlab\">matlab</a></span></li></ul>\n</div>\n</div>", [""]], ["Dining2Go", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Dining2Go \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/569/datas/gallery.jpg\"/>\n<p>\n<i>the login screen</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Dining2Go \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/570/datas/gallery.jpg\"/>\n<p>\n<i>some categories</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Dining2Go \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/573/datas/gallery.jpg\"/>\n<p>\n<i>the charbroil section</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Dining2Go \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/575/datas/gallery.jpg\"/>\n<p>\n<i>look at how nice the order section looks</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Dining2Go \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/577/datas/gallery.jpg\"/>\n<p>\n<i>student profile</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We were planning out ideas for the hackathon and eventually we stumbled onto this one because we were all MHC students and we all have suffered through the long and somewhat inconvenient lines at the Blanchard Campus Center. We thought it would be convenient to make an app that would allow MHC students to submit orders to Blanch online so instead of waiting in line, they could just order it and then pick it up when it was ready. </p>\n<h2>What it does</h2>\n<p>Our app allows the user to easily choose items from the online Blanchard menu in order and allow the user to pass in their order for the chefs to process. We split the menu into four sections (charbroiled, salad, grilled, and special) which allows the user to choose which category of food they want and each section leads to a separate screen with checkboxes for what the user wants to order. After clicking through, the user can then go through with their order which is automatically deducted from their dining dollars and the user is also able to delete their order (clear their cart) if they end up changing their mind about the cart. There are some limitations. For the login the username and password are static because the username can only be accepted as le27l and the password as 12345. We were also unable to create more categories for the user to choose from because of how constrained we were as well as being unable to connect the app to the internet to read through and extract information from an online menu. </p>\n<h2>How we built it</h2>\n<p>We built the front end of our app on Android Studio and we built the back end first with eclipse and then combined both pieces into android studio in order to create a working app. </p>\n<h2>Challenges we ran into</h2>\n<p>There were so many challenges. None of us had ever made an app before and we also didn't plan out the entire logic so idea of the app until we met up during the hackathon not to mention how much we struggled a lot with making the display of the app and incorporating the code we had in the back in with the front end. At the same time, we also wanted to be able to update our menu in real time so we had a hard time figuring out how to read from a webpage and then converting them into strings and then we had no idea how to connect it to the code in the front end so there were a lot of stuff that could have gone wrong and did. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>That we were able to make such a sleek looking app and that we were able to combine our code so that we could have a nice demo to work off of. We're also proud that we were able to incorporate a lot of our ideas into the app even though we were working under constrained time and we came in with different skills and a lack of knowledge of some of the coding we had to do. We're really proud that in the end all of our efforts came together and we were able to make something really nice even though we had to abandon some of our more complicated and neat plans (aka having the app run in real time). </p>\n<h2>What we learned</h2>\n<p>We learned how to design apps and how to pull and extract information from a webpage to store for us to run through and connect to other parts of our app. This kind of program was a first for all of us and we're glad that we were able to learn so much in order to explain to each other what we learned and how to connect that with each other so our program was something new to all of us. </p>\n<h2>What's next for Dining2Go</h2>\n<p>We really wanted to be able to have the data read and display from a web page but we ultimately could not do it so hopefully we'll be able to do it some other time. We also hope to be able to incorporate a real time timer so the app can automatically update every day with their new menu and also that we will be able to see what time of day it is to check if the student will be using a lunch, dinner, or snack swipe and show them a menu that corresponds with that time. We also hope to be able to incorporate a favorites tab so users will be able to see what food options they tend to eat as well and an estimated time of how long the user will have to wait depending on how many people are currently in Blanch and how many orders are in the queue. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/eclipse\">eclipse</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/YuHu0621/Dining2Go\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/YuHu0621/Dining2Go\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["SecreteMessageMaker", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<ul>\n<li>We were inspired by the movie \"Imitation Game\" and therefore, we wanted to make an application that encodes and decoded messages. </li>\n</ul>\n<h2>What it does</h2>\n<ul>\n<li>This application enables the user to input a message and encode it with a password then after the user sends the message to another user the second user can decode the message with the password.</li>\n</ul>\n<h2>How we built it</h2>\n<ul>\n<li>We made a class that creates the user interface, two classes with the algorithms that each encodes and decodes the message and an application class.</li>\n</ul>\n<h2>Challenges we ran into</h2>\n<ul>\n<li>The largest challenge was getting the encoded message to be printed to the user interface. We were using a lot of String and char methods that we had never encountered before. </li>\n</ul>\n<h2>Accomplishments that we're proud of</h2>\n<ul>\n<li>We are proud of a good sense of group collaboration and the accomplishment of the project.</li>\n</ul>\n<h2>What we learned</h2>\n<ul>\n<li>We learned how to alternate unicodes and hexadecimals to print out different chars.</li>\n</ul>\n<h2>What's next for secreteMessageTransformation</h2>\n<ul>\n<li>Andriod app</li>\n<li>Finding and resolving bugs</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/adaxz/HackHolyoke2016Project\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/adaxz/HackHolyoke2016Project\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Stereo Lights", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/M08KIpOkrco?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Stereo Lights \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/572/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>In this project, we seek to integrate movement, music and colors(using LED) into one. We imagine that a composer would be given endless possibilities if he/she could compose music and lighting art using movements. In this way, we have greatly maximized the creative capacity of artists and given them a greater opportunity for artistic expression.</p>\n<h2>What it does</h2>\n<p>It Syncs music with RGB lights flickering at different frequencies, integrating the music and lighting with hand gestures/ movement enabling multi-staged composition. </p>\n<h2>How we built it</h2>\n<p>We used Cylon.js for programming with Leap-Motion and sending hand coordinates to Arduino and used Arduino hardware to build an LED and buzzer circuit. The color/LED flickering frequency and the buzzer tone are controlled by the hand coordinates obtained from the Leap motion. </p>\n<h2>Challenges we ran into</h2>\n<p>Communicating with Arduino through cylon.js, Learning how to use Leap motion API and interfacing with cylon.js, Determining hand gesture/coordinates.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We have achieved a simple prototype from our inspiration of revolutionising music/lighting art. </p>\n<h2>What we learned</h2>\n<p>Node.js, Arduino, Leap motion api, and never to give up </p>\n<h2>What's next for Stereo Lights</h2>\n<p>Incorporate entire body gestures possibly with Kinect/ cameras and sync wide variety of music tones/notes and lighting.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/leap-motion\">leap-motion</a></span></li></ul>\n</div>\n</div>", ["", "", ""]], ["Sound-of-Code", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>Sound-of-Code</h1>\n<p>We built the bridge between coding and creating art. Our app, at a fundamental is simple but allows it's users, especially coders to interact with their code in a way that most previously have not. Through sound. </p>\n<p>Our app idea is simple. Take code (or any text for that matter) and map the lines of code to midi files that then can be enjoyed. What we found was strange, that different languages had different trends. That Java was of a higher pitch than your average C file. </p>\n<p>We found that Code has a strange rhythm to it. Almost like a form of poetry. And showing that sonic poetry is ultimately the goal of our project. We worked heard, shed a few tears a long the way, but hope you appreciate the project we made. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/bgeraci714/Sound-of-Code\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/bgeraci714/Sound-of-Code\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I helped develop the GUI view, and worked on connecting it with the text conversion so it could send and receive files, and then play the audio.", "I worked on the GUI and text to sound creation", "I worked on the GUI and the file upload and creation process. ", ""]], ["SafeFace", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>Inspiration</h1>\n<p>The internet is the largest platform for communicating and meeting people around the world. Websites like Omegle and Chat Roulette make incredibly easy to introduced to new individuals with new experiences. However, it leaves many people vulnerable to unwarranted harassment and unsavory individuals</p>\n<p>Our goal with SafeFace is to use active image and video recognition using Clarifai to filter what individuals experience, so they can spend more time interacting with others with like affinities.</p>\n<h1>What is it?</h1>\n<p>SafeFace is a web based anonymous chat client like Chat Roulette or Omegle which allows you to filter what people are sharing using active visual recognition before and during a chat.</p>\n<p>For example, by putting 'nsfw' our server will run a visual check on the user's video feed before connecting with you, to determine if what they are displaying is deemed safe for work, by a predefined prediction threshold. This is not limited to not safe for work content and can span out across all of Clarifai's concept tags, as input by the user.</p>\n<h1>Construction</h1>\n<p>Our web server is written using Node.js and Socket.io to handle incoming traffic and properly managing connecting clients together with Clarifai interpreting individuals video feed.</p>\n<p>Our server takes a snapshot of video feed before connecting two clients encoding it into Base64 which is then interpreted by the Clarafai API, and compares all tags the user has selected to Clarafai's predicted tags within a valid threshold.  This can apply to a large array of topics, making it capable of filtering lots of specific information.</p>\n<p>If the user is displaying content one wishes not to see, it terminates the connection before before or as soon as one of the users filters is detected.</p>\n<h1>Challenges</h1>\n<p>Initially creating the double video feed, implemented a proper connection queue for creating lobbies was the hardest feat. Then, once we had the webpage up and running the biggest difficulty was interpreting the users video feed before a connection was made.</p>\n<p>Next step was formatting the web page with a smooth HTML layout, with very mild success we achieved that.</p>\n<h1>Accomplishments</h1>\n<p>Everything we've done with the project we are incredibly proud of, with the little knowledge we had of JavaScript we're very proud of what we were able to develop.</p>\n<h1>What we learned</h1>\n<p>We learned lots of JavaScript, server management, good use of the Clarifai API, and most importantly that it's not necessary for individuals to have to be exposed to unwarranted harassment by individuals who are just trying to invoke a negative reaction.</p>\n<h1>What's next?</h1>\n<p>We plan to fleshout the layout of the webpage as well as improving our servers connection protocols to ensure smooth lobby making, and matching those with proper filters more efficiently.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/socket-io\">socket.io</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/heroku\">heroku</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://www.safeface.herokuapp.com\" rel=\"nofollow\" target=\"_blank\" title=\"https://www.safeface.herokuapp.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.safeface.herokuapp.com</span>\n</a></li>\n<li><a href=\"https://safeface.tech\" rel=\"nofollow\" target=\"_blank\" title=\"https://safeface.tech\">\n<i class=\"ss-icon ss-link\"></i>\n<span>safeface.tech</span>\n</a></li>\n<li><a href=\"https://github.com/oziasg/safeface\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/oziasg/safeface\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["CyberFilter Chrome Extension", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"CyberFilter Chrome Extension \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/586/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"CyberFilter Chrome Extension \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/587/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"CyberFilter Chrome Extension \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/588/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>We wanted to create something geared toward one of the challenges on the hackathon website. We felt that the cyberbully challenge was a doable project for us given our programming experience. We chose to go with a chrome extension to keep it small and manageable.</h2>\n<h2>CyberFilter hides a list of predetermined words and allows the user to add others in options.</h2>\n<h2>We built it by adapting two other chrome extensions to accomplish our idea of filtering offensive and triggering words.</h2>\n<h2>We both had to learn javascript and spent a lot of time understanding what the code was doing.</h2>\n<h2>We are proud that we have a working project that does what we wanted.</h2>\n<h2>We learned how to make basic chrome extensions and use javascript.</h2>\n<h2>Next we could block websites that have many offensive and triggering words. We could also have it so that it tracks pages that the user is visiting so that parents/guardians can keep track of websites their children are going onto.</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/andrea-couto/CyberbullyFilter-extension-chrome\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/andrea-couto/CyberbullyFilter-extension-chrome\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["beatmix", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"beatmix \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/594/datas/gallery.jpg\"/>\n<p>\n<i>beatmix || HOME</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"beatmix \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/592/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"beatmix \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/593/datas/gallery.jpg\"/>\n<p>\n<i>Start your own beat line here! </i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>To de-stress from midterms or compsci assignment deadlines, the three of us typically turn to jamming and playing music. Between our friendgroup, we always joke about starting a YouTube channel-- however, the sheer amount of commitment involved is pretty daunting. So we brainstormed at the start of HackHolyoke and thought of building a webapp that could help others (like ourselves) jam with anyone who had accessibility to the Internet, but didn't have the resources or the means to do so. Thus, beatmix was born. </p>\n<h2>What it does</h2>\n<p>beatmix provides an outlet for ordinary people to be able to put their music out there, &amp; have it heard by others who also appreciate music. Our webapp allows instant opportunities for collaborations to begin between people around the world. Maybe you've always wanted to start a band, but couldn't find reliable bandmates. Well, fear no more, help is here! \nListen to any uploaded audio clips, then contribute to them to collab, if you wish! This will result in a 'branching off' of several different variations of contributions-- using the same exact original audio clip. If you want to create your own line of beats, hit up the 'CREATE' tab and jam away! </p>\n<h2>How we built it</h2>\n<ul>\n<li>Painstakingly, using JavaScript, HTML/CSS and Bootstrap + Django. </li>\n</ul>\n<h2>Challenges we ran into</h2>\n<ul>\n<li>DJANGO!! </li>\n<li>Sleep-deprivation </li>\n<li>getting accustomed to Bootstrap</li>\n<li>connecting back-end code to what we were looking at (front-end)</li>\n</ul>\n<h2>Accomplishments that we're proud of</h2>\n<ul>\n<li>sleek and minimalistic UI design -- exactly what we had envisioned whilst brainstorming! </li>\n<li>working tremendously well as team, as each of us handled different parts of the webapp &amp; combined them in the end </li>\n<li>learning Bootstrap </li>\n<li>our concept/idea and the amount of work we were able to do<br/></li>\n</ul>\n<h2>What we learned</h2>\n<ul>\n<li>the importance of back-end &amp; how useful debugging is! </li>\n<li>version control with webapps are different than using other languages, like Java </li>\n<li>Bootstrap, basics of Django </li>\n</ul>\n<h2>What's next for beatmix</h2>\n<p>World domination. (Come join and jam with us y'allll) </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/django\">django</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://cielhase.github.io/\" rel=\"nofollow\" target=\"_blank\" title=\"https://cielhase.github.io/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>cielhase.github.io</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Things were not taken seriously", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Things were not taken seriously \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/540/datas/gallery.jpg\"/>\n<p>\n<i>Not Serious</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>When all else fails use memes as the last resort.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/windows-10\">windows-10</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/zourven/Things-were-not-taken-seriously\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/zourven/Things-were-not-taken-seriously\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["TruthSeeker", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>TruthSeeker</h1>\n<p>Create and Store Lambda Functions with Inference and Recursion in Java 8.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/zhanwenchen/TruthSeeker\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/zhanwenchen/TruthSeeker\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Sign2Speech", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Sign2Speech \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/640/datas/gallery.jpg\"/>\n<p>\n<i>American Sign Language</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Sign2Speech \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/648/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Sign2Speech \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/649/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<div class=\"alert-box alert\">\n        This image is currently processing. Please be patient...\n      </div>\n<img alt=\"Sign2Speech \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"https://devpost-challengepost.netdna-ssl.com/assets/defaults/software-d4334efb72013df43784baffede9d379.gif\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Saw how incredibly frustrating sign language was while miming messages across places, imagined how frustrating it must be for deaf people, and how much harder for the other person to understand. </p>\n<h2>What it does</h2>\n<p>Uses Leap Motion to track hand movements of American Sign Language, and parses the individual letters into text, and that text to words, which is then fed through Google Translator's text-to-speech engine and converted to voice.</p>\n<h2>How I built it</h2>\n<p>Leap Motion, Eclipse, Java, Google Translate's API, and distancing self from caffeine. </p>\n<h2>Challenges I ran into</h2>\n<p>Precisely converting finger movements into coordinates, managing Leap Motion's frequent reversal of hand directions and offsetting the several negative results we got to ensure precision with comfort in signing and speaking. </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We managed to perfect over 15 letters in six hours, from mathematical data alone about the intermediate and distal phalanx bones of the human hand.</p>\n<h2>What I learned</h2>\n<p>Working with leap motion, working in an IDE, OS and language I'd never worked in and relying on it till the last minute, and the importance of planning out the goals from the start. </p>\n<h2>What's next for Sign2Speech</h2>\n<p>Improving reliability, adding better autocorrect features, adding user customization for adding special gestures to mean \"thank you\" and \"hello\" and other commonly used phrases in daily parlance, as well as configuring it for other language platforms.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-translate\">google-translate</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/eclipse\">eclipse</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/leap-motion\">leap-motion</a></span></li></ul>\n</div>\n</div>", ["I worked on the calibration of finger movements to Leap Motion, the algorithms for getting reliable results for the motions and the general idea creation process as well. ", "", "", ""]], ["Binary Bagel", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Binary Bagel \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/626/datas/gallery.jpg\"/>\n<p>\n<i>Mmmmmhhh mmmhh, finger lickin' good.</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>Ever wake up groggy in the morning? Ever take to long to eat your breakfast? We've all lost track of time and from our boss we hear the same old rhyme. But not anymore! Now, with Binary Bagel you can eat your morning meal without the fear of getting fired from your job. Featuring orange and pink LED lights, two colors scientifically proven to increase your appetite while calming your fears of any liver damage that may occur. Our bagel is 99% lead free, and is backed by a 100% satisfaction guarantee.</p>\n<p>Future models will include a raspberry pi for improved taste.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag\">atkin's-bagel</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/hoanghonn/binarybagel\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/hoanghonn/binarybagel\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["CUber", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"CUber \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/524/datas/gallery.jpg\"/>\n<p>\n<i>CUber</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"CUber \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/523/datas/gallery.jpg\"/>\n<p>\n<i>Passenger Requesting Ride</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"CUber \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/522/datas/gallery.jpg\"/>\n<p>\n<i>Passenger Waiting for a Pick-Up</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"CUber \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/526/datas/gallery.jpg\"/>\n<p>\n<i>Sending Push Notification to Drivers</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"CUber \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/525/datas/gallery.jpg\"/>\n<p>\n<i>Driver Mode</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Waiting for a taxi or the school's Jitney in small-town rural Maine is a pain when you don't have a car. How can we make a live and more reliable ride-share program that connects students without cars with student drivers on rural college campuses?</p>\n<h2>What Cuber does</h2>\n<ul>\n<li>As a passenger, users can request a ride from location A to location B.  If a online driver accepts, the ETA of the driver displays. If no drivers accept the request, a push notification is sent to all \"online\" drivers. </li>\n<li>As a driver, users can set their status as \"online\" for when they are on call and readily available to drive. They can also see a list of ride requests on the app and decide which trip they would like to make. When the driver is \"offline\" no push notifications are sent to them. </li>\n<li>Additional Features: Jitney and shuttle bus tracker. </li>\n</ul>\n<h2>Why we need CUber</h2>\n<p>Students at Colby College along with many other small, rural, and isolated college campuses do not all have cars or a form of reliable off-campus transportation. What happens when you need to go on a Wal-Mart run during mid-term week and the next available taxi is an hour away? You can't get the snacks and red bull you need to stay awake. </p>\n<p>This app connects the population of available drivers with students who need to make short trips to areas where reliable public transportation does not exist. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li></ul>\n</div>\n</div>", ["I came up with the idea and tried to find ways to setup the database with my teammates, which is still a work in progress!", ""]], ["Helping Hand", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/cOt_IjL1_wM?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Helping Hand \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/487/datas/gallery.jpg\"/>\n<p>\n<i>Helping hand: Infographic </i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Helping Hand \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/518/datas/gallery.jpg\"/>\n<p>\n<i>Close-up of the device</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Helping Hand \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/517/datas/gallery.jpg\"/>\n<p>\n<i>Device side shot </i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>The team thought about small difficulties that we face on a regular basis: a teammate who works as a waiter mentioned having a difficult time opening the restaurant's fridge as he regularly held plates in his hands- he could not make certain motions with the hand that required any sort of \"grasping movement:\" we thought that it would be beneficial to society if we created a device that could prop open doors. </p>\n<h2>How we built it</h2>\n<p>We built the device using a servo, Arduino, and a motion sensor. First, we attached a cardboard \"stick\" onto our servo, then put cardboard around the device to control the direction of the servo. Then, we wired the servo and the motion sensor and programmed it using arduino. As the sensor detects motion, it generates movement in the servo which leads to a slight push that opens the refrigerator.</p>\n<h2>Challenges we ran into</h2>\n<p>The team would have liked to have had a stronger servo, but did not have such option, leading to the fridge door only being slightly opened. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>\"Using Arduino for the first time\" -Caroline Kim \nThe team as a whole is proud of how every individual tried at least one new thing: whether it be programming hardware or wiring boards we worked our way through and at the end, we were successful! </p>\n<h2>What we learned</h2>\n<p>We learned new techniques and how to work efficiently as a team together. Some of us learned how to wire devices for the first time, and others learned to code on Arduino. </p>\n<h2>What's next for Helping Hands</h2>\n<p>The team not only hopes for this device to be placed in restaurants but also placed in locations in order to help the disabled and the elderly with various tasks: with a stronger servo, we hope to fully open doors for everyone, </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/servo\">servo</a></span></li><li><span class=\"cp-tag\">motion-sensor</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/kyumin0409/HackHolyoke2016_Refrigerator\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/kyumin0409/HackHolyoke2016_Refrigerator\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on wiring the Arduino and creating the infographic- I also assisted with various tasks that my teammates needed me to perfom such as assisting with the assembling of the project. ", "I worked on coding the motion sensor and the servo. I also helped with wiring some parts of the device.", "I researched the roles of servo and arduino, planed out the helping hand's project, designed and made the parts to be assemble well and harmonize with servo."]], ["8Byt", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>8Byt</h2>\n<p><em>Sound clip sharing for the future!</em></p>\n<p>In this day and age, people share everything over the internet. Images, videos, tweets, and posts of all kinds are propagated over the world-wide-web through dozens of web services. Amidst this brave new world of interconnections, though, people have lost touch with the oldest method of communication: audio. This dilemma was the inspiration for our brand-new revolutionary new web app, <strong>8Byt\u2122</strong>!</p>\n<p>8Byt\u2122 is a website where users all around the world can exchange ideas through the medium of sound. Simply get a sound file, upload it to 8Byt\u2122, and sit back and let the information flow. It's that easy! Your file is transferred into an advanced database that can distribute that file to anyone else over the internet! Anyone who visits 8Byt\u2122's website can hear your audio file, among those posted by others around the world. Never before has humanity been as connected as they are now, with 8Byt\u2122!</p>\n<p>Why take the time to read a post or watch a video when you can just listen? Upload your favourite quote, a cool sound effect, or a catchy tune. There's no limit to what you can accomplish with 8Byt\u2122!</p>\n<p>But wait! There's more! Not only does 8Byt\u2122 share sound files with the <em>entire world</em>, but every sound file uploaded to 8Byt\u2122 is given a unique URL, such that sound files can be easily shared with specific people. Wow! You'll never have to talk to people again!</p>\n<p><strong>8Byt\u2122</strong>! Sound clip sharing, for all of your sound clip sharing needs.</p>\n<p>On a technical level, 8Byt is a React app build on a PostgresSQL database. It's designed to be highly scalable and easy to use in a similar case to imgur.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/postgresql\">postgresql</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/react\">react</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sass\">sass</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/IanOlin/hackHolyokeF16\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/IanOlin/hackHolyokeF16\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"http://www.8byt.net\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.8byt.net\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.8byt.net</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on transferring data from the client to the browser.", "I worked on getting sound bites from the database and storing submitted sound files.", "I did a lot of ops work scaffolding the application and familiarizing the other team members with Dropwizard, React, and Postgres. I also worked in React retrieving data from the API to generate UI elements.", "I worked on the React for audio playing"]], ["Vidl", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Vidl \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/509/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>Given a set of preferences (dietary restriction, distance, price range), users can swipe right (interested) or left (reject) on food options. As users swipe left for no, the food options are filtered based on the rejected types of food. If the user swipes left, they are given more information on the food and options on establishments that serve it.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/angular-js\">angular.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/chrome\">chrome</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://fuhranku.github.io/foodfinder/#/\" rel=\"nofollow\" target=\"_blank\" title=\"https://fuhranku.github.io/foodfinder/#/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>fuhranku.github.io</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Botsume.tech", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Botsume.tech \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/500/datas/gallery.jpg\"/>\n<p>\n<i>Botsume</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Botsume.tech \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/497/datas/gallery.jpg\"/>\n<p>\n<i>Colby's Financial Aid Bot</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Botsume.tech \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/495/datas/gallery.jpg\"/>\n<p>\n<i>Chatbot dialogue </i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Wouldn't it be great if you could easily deploy chatbots across multiple platforms for your business, school, or personal use? </p>\n<h2>What it does</h2>\n<p>Chatbots are a really complicated thing to build. However, you can build amazing chatbots without having any programming knowledge using Botsume. All you need to know is the questions and the answers to those questions and you will be able to create awesome retrieval based model chatbots.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ajax\">ajax</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sql\">sql</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://www.botsume.tech/index.php\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.botsume.tech/index.php\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.botsume.tech</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I did quality assurance for Botsume.tech.", "I developed the back end, the mobile responsiveness, and Facebook Integration."]], ["TradeOff", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"TradeOff \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/501/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/jonbond5/TradeOff\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/jonbond5/TradeOff\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["lolChat", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"lolChat \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/496/datas/gallery.jpg\"/>\n<p>\n<i>collage cats hats and windmills</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"lolChat \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/624/datas/gallery.jpg\"/>\n<p>\n<i>collage cats cats cats</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>As we were driving to this hackathon, we came up with some criteria for this project:</p>\n<ol>\n<li>No sentiment analysis</li>\n<li>It had to be dumb</li>\n<li>Cat facts</li>\n</ol>\n<p>And thus, lolChat was born.</p>\n<h2>What it does</h2>\n<p>LolChat is an SMS chatbot with lots of features! Text anything you want to (661) 347-1343. Here are some things you can say:</p>\n<ul>\n<li>\"fact\": responds with a random cat fact</li>\n<li>\"newfact\" + your_new_fact: adds a new fact to the fact database</li>\n<li>\"lastfact\": sends you the last fact entered into the database</li>\n<li>\"poem\" + author_name: responds with a randomly generated poem in the style of the specified term. Current supported terms include \"darwin\", \"warren\", \"alice\", \"carroll\", \"plato\", \"bella\", \"bard\", \"bee\", \"Don Quixote\",  and \"america\".</li>\n<li>\"collage\" + search_terms: creates a collage of all your search terms and sends it back to you</li>\n<li>\"word cloud\": responds with a word cloud ;)</li>\n<li>\"dog\": don't even try this one</li>\n<li>\"helpme\": sends you a list of things you can do</li>\n</ul>\n<p>Alternatively, you can start a conversation with Ron Obvious, our smart-ish chat bot! Text anything other than the above terms and he'll respond.</p>\n<p>Some things I like to text it:</p>\n<ul>\n<li>\"collage goat goat goat goat\"</li>\n<li>\"poem alice\"</li>\n<li>\"poem darwin\"</li>\n<li>\"poem bella\"</li>\n<li>\"poem bard\"</li>\n<li>\"dog\"</li>\n<li>\"fact\"</li>\n<li>\"collage college trees mountain cat\"</li>\n<li>\"collage house mouse louse grouse\"</li>\n<li>\"word cloud\"</li>\n<li>\"What's up?\"</li>\n<li>\"Do you like robots?\"</li>\n</ul>\n<p>Poetry example (Twilight):\nBut can you he was clearly beginning\nI turned to disappear.<br/>\nLike you to believe to be satisfied with winning\nWorking relationships are better motivated by fear.</p>\n<h2>How we built it</h2>\n<p>Everything is called from the main flask app when texts come in through Twilio. Feature integration is very easy because of this, as all you need to do is write some helper function in another file, add the route in the Flask app, and bam! You're ready to go.</p>\n<p>All of the features work in different ways (like they should), but the general idea is that we tokenize the user's text to pull out the noun keywords, and then use those words to determine the response to the user. If they want a collage created, we find some images and stitch them together to make a pretty picture. If they want a poem, they get a poem generated by the term they send us.</p>\n<h2>Challenges we ran into</h2>\n<p>Integrating everything was a challenge, especially with how the Flask app for Twilio integration had to be deployed to Heroku. Heroku doesn't work well with Python libraries that depend on C, so we had to create a custom buildpack for our app in order to support the Python Imaging Library (PIL). This took much longer than it should have. Working with PIL was no walk in the park, either.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Getting all this stuff to work together, especially on Heroku, was a challenge. We're especially proud of how lolChat is available to anyone with a cell phone <em>right now!</em></p>\n<h2>What we learned</h2>\n<ul>\n<li>Heroku does some things well, other things not so much.</li>\n<li>Sleeping at hackathons is so much better than not sleeping at hackathons.</li>\n<li>Goats</li>\n<li>Deploy early and often.</li>\n</ul>\n<h2>What's next for lolChat</h2>\n<p>More features! Generated youtube haikus? Performing Google's deep dream algorithm on the generated images? Automatically texting you random cat facts ever 2.57 minutes with no way to cancel? The possibilities are endless!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag\">pillow</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/heroku\">heroku</a></span></li><li><span class=\"cp-tag\">chatterbot</span></li><li><span class=\"cp-tag\">rhymeless</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/cloudinary\">cloudinary</a></span></li><li><span class=\"cp-tag\">pattern</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/hannahtwiggsmith/PaintMeAPicture\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/hannahtwiggsmith/PaintMeAPicture\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I wrote the Flask app, which included all of the Twilio routes to tie everything together, and deployed the whole thing to Heroku. I also scavenged cat facts from around the universe.", "I wrote the python files in the Collagerator folder. The collagerator is designed to take in a list of image names and make a collage out of them and host the resulting collage on the internet. It uses the Python Image Library and Cloudinary for image editing and hosting respectively.", "I used the Getty Images API to get stock photo images and pattern.en to pull nouns from sentences, then integrated them so a sentence can return several images.\nI used rhymeless to generate poetry from keywords associated with eleven different texts."]], ["TempSensor ", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"TempSensor  \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/723/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Winter in MA is harsh. </p>\n<h2>What it does</h2>\n<p>Our TempSensor can sense the skin temperature and display it on an LCD screen attached to a pair of gloves. By accessing the skin temperature, we are able to assess which pair of gloves has the best quality of keeping you warm. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li></ul>\n</div>\n</div>", ["", "", "", ""]], ["MS Finger-Paint", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"MS Finger-Paint \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/641/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We all remember the mind boggling user interface from Minority Report, but those days are far from us. In the past 24 hours, we found the missing link.</p>\n<h2>What it does</h2>\n<p>Re-imagine your daily use of MS Paint with Leap Motion integration: we call it MS FingerPaint. Pinch with your right hand to draw, make a fist to clear your artwork, roll your left hand to change color and pinch with it to lock your choice of color. You can even change the thickness by petting your left index finger with your right index finger.</p>\n<p><a href=\"https://www.youtube.com/watch?v=PR1Lk60Us_s\" rel=\"nofollow\">https://www.youtube.com/watch?v=PR1Lk60Us_s</a></p>\n<h2>How I built it</h2>\n<p>We used Leap Motion and it's development kit to sense and interpret gestural information from the user. Our user interface was built in Python with PyGame.</p>\n<h2>Challenges I ran into</h2>\n<p>This was our first time using Leap Motion, so it was difficult getting momentum at the beginning. Once we figured that out, we actually got to our minimum viable product relatively early which allowed us to iterate and add features throughout the event. From a design perspective, it was tough to map a cohesive set of gestures to each of our features while attempting to make them intuitive and ensuring that they don't overlap (one gesture being interpreted as another).</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We were happy with how our user experience turned out. While the Leap Motion proved to be fidgety at times, the end product is very usable. </p>\n<h2>What I learned</h2>\n<p>How to use and implement leap motion and stretched out our UX design legs.</p>\n<h2>What's next for MS Finger-Paint</h2>\n<p>Improved Leap Motion accuracy, </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/leap-motion\">leap-motion</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/pygame\">pygame</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/aehoppe/freerealestate/blob/leapMotion/LeapSDK/lib/pygametest.py\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/aehoppe/freerealestate/blob/leapMotion/LeapSDK/lib/pygametest.py\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on cursor movement and Pygame canvas backend", "", "", ""]], ["Synthack", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<h2>What it does</h2>\n<p>The horizontal axis corresponds to frequency with the left side being for lower frequencies while the right side is for higher frequencies. The vertical axis corresponds to gain (or volume) with the top being for greater volume and the bottom being for lower volume. </p>\n<h2>How we built it</h2>\n<p>We built the webpage using HTML, CSS, and Javascript. JS was also used for the mulit-touch capabilites. The back-end processing was done using Microsoft .NET.</p>\n<h2>Challenges we ran into</h2>\n<h2>Accomplishments that we're proud of</h2>\n<h2>What we learned</h2>\n<h2>What's next for Synthack</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/d3-js\">d3.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/net\">.net</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://mcgrottys.github.io/HackHolyOke/Synthack/Synthack/D3WebAPI.html\" rel=\"nofollow\" target=\"_blank\" title=\"https://mcgrottys.github.io/HackHolyOke/Synthack/Synthack/D3WebAPI.html\">\n<i class=\"ss-icon ss-link\"></i>\n<span>mcgrottys.github.io</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["NewLyfe", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"NewLyfe \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/468/datas/gallery.jpg\"/>\n<p>\n<i>Feel the Sucess</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>NewLyfe</h1>\n<p>Created during #HackHolyoke</p>\n<p><strong>NewLyfe.</strong> </p>\n<p><strong>Inspiration</strong></p>\n<p><strong>Success from within</strong></p>\n<p>An Android App that helps motivate the user and to strengthen their mindset on life.</p>\n<h2>How we built it</h2>\n<p>We used Android Studio using Java.</p>\n<h2>Challenges we ran into</h2>\n<p>Getting through the learning curve of using Android Studio for the first time.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>OUR ENTIRE PROJECT. Specifically, a functioning and motivational app that we can call ours.</p>\n<h2>What we learned</h2>\n<p>Android Studio, Java, creating a working app from the ground up</p>\n<h2>What's next for NewLyfe</h2>\n<p>Adding daily/midterm/long-term goals and reminding the user of their accomplishments to motivate them in a different light</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Sarthak-Patel/NewLyfe\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Sarthak-Patel/NewLyfe\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on designing the layout of the pages, and more specifically on getting the layout to integrate more with the function, adding media to the resources, making sure variables are available, and helped Sarthak code a bit of the functionality. ", ""]], ["mumditation", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"mumditation \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/603/datas/gallery.jpg\"/>\n<p>\n<i>Login Screen</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"mumditation \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/604/datas/gallery.jpg\"/>\n<p>\n<i>Home Screen</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"mumditation \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/653/datas/gallery.jpg\"/>\n<p>\n<i>Suggestions</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"mumditation \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/606/datas/gallery.jpg\"/>\n<p>\n<i>Baby Goat Video</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"mumditation \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/435/607/datas/gallery.jpg\"/>\n<p>\n<i>Soothing Music</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>We all know stress is not healthy, but in the case of expecting mothers it's even more important as you can affect the health of your baby if you're too stressed too often. So we created mumditation, an app that tracks your heart rate through a Fitbit Surge and performs statistical analysis via the RMSSD method to detect when your stress levels are high. The app has a few suggestions for how to reduce stress when you find yourself at high levels, as well as the ability to alert a significant other by text if your stress level has risen too high.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/react-native\">react-native</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/fitbit\">fitbit</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/thaingnguyen/mumditation\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/thaingnguyen/mumditation\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]]]