[["AudHub", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>AudHub aims to seize the means of musical production for the masses. No longer shall the gentle partygoer suffer under the oppressive yoke of the host's music choices. By utilizing AudHub's custom media server everyone at a party can have a say in what gets played.</p>\n<h2>What it does</h2>\n<p>AudHub has three components: the soundsystem, the server, and the clients. The soundsystem is whatever is going to be playing the output (in this case it's a Bluetooth speaker). The server is a phone running AudHub connected to the soundsystem that houses the music library and gets the final say in what is played. Finally, the clients are phones running AudHub that connect to the server and can vote on what gets played and when.</p>\n<h2>How we built it</h2>\n<p>We wrote AudHub using Android Studio so getting the app's frontend to work was relatively straightforward. The backend is a cobbled-together mix of Android's Bluetooth interface, MediaPlayer controls, and the tears of the damned. The final app is capable of working as either the server or the client depending on what options the user selects.     </p>\n<h2>Challenges we ran into</h2>\n<p>Welp. It's been an uphill battle the whole way. Neither of us had used Android Studio before so we had a lot of fun trying to figure out its quirks. Most of the first night was spent just getting the blasted thing to sync to GitHub. Once that herculean task was accomplished we worked on getting the app to actually connect to things via Bluetooth. That's where the real hurdles came in. We really wanted to write our own methods for connecting to a Bluetooth speaker so that we could broadcast to multiple of them at once. After many hours of attacking the problem we ended up with a solution that yielded fantastic error messages but otherwise no real results. In the end we just had to drop that feature and move onto figuring out how to get the client-server relationship set up (which wasn't much easier).  </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>The high point of this whole competition was when we finally were able to get the client phone to send commands to the server phone. Our implementation certainly cannot be described as \"elegant\" or \"completely functional\" but man am I proud of what it can do.</p>\n<h2>What we learned</h2>\n<p>GitHub is a fickle mistress. Android Studio has terrible error handling. No matter what anyone else might say the problem clearly lies with the professionally developed and tested API and not with our slapshod code written at 2AM. </p>\n<h2>What's next for AudHub</h2>\n<p>In its current state AudHub serves as a wonderful proof of concept, but we aren't planning on stopping until we can get it to 100%. I'm confident that with some more time (and possibly some outside help) that we can solve our Bluetooth woes. The bottom line is that we came into this competition with a vision of stress-free dinner parties with egalitarian music control and we will not rest until that dream is a reality. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bluetooth\">bluetooth</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/africanwarrrior/AudHub.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/africanwarrrior/AudHub.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on backend mechanics and functionality to bring our fantastic UI together. This included working with the android Bluetooth API to manage connections and mediate remote control.", "I worked on designing and building the app frontend, integrating its media server with our controls, and the way that the client and server communicate commands."]], ["Penultimate", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Penultimate \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/504/datas/gallery.jpg\"/>\n<p>\n<i>Bash running under Penultimate</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Penultimate \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/596/datas/gallery.jpg\"/>\n<p>\n<i>Persistent state under Penultimate</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p><img alt=\"Penultimate\" data-canonical-url=\"https://raw.githubusercontent.com/qguv/penultimate/master/logo.png\" src=\"https://res.cloudinary.com/devpost/image/fetch/s--BB5Kt76i--/https://raw.githubusercontent.com/qguv/penultimate/master/logo.png\"/></p>\n<p><em>Penultimate</em> is a re-imagined command line interface inspired by chat clients. It's a terminal emulator for the Web as a platform designed and programmed over the course of about seven hours.</p>\n<p>Like in a chat client, the user uses an input field at the bottom of the page to issue commands. A set of panels on the right provides a live-updating view of the current directory, git index, and anything else the user wants to track (WIP).</p>\n<p>Users can issue commands to a persistant forking shell process, preserving environment variables, current directory, and other state.</p>\n<p>You could use this as a way to securely use a shell on a remote machine through a browser. If the domain is set up with TLS/SSL/HTTPS and .htaccess support, this project also serves as ssh in a browser.</p>\n<h2>Installation</h2>\n<p>Clone the repo and <code>cd</code>. <code>npm install</code>. Then <a href=\"http://nwjs.io/\" rel=\"nofollow\">download <code>nw.io</code></a> to the penultimate directory and run it.</p>\n<h2>How it's different</h2>\n<h3>Separated input and output</h3>\n<p>Traditional terminals muddle up input and output. Penultimate color-codes and visually separates the two.</p>\n<h3>No floating input</h3>\n<p>Traditional terminals put the edit cursor any old place depending on how tall the last command's outputs were. Penultimate keeps your cursor at the bottom all the time.</p>\n<h3>Persistent \"status blocks\"</h3>\n<p>Persistent <em>status blocks</em> along the right side of the screen keep up-to-date information about the current directory, git index, and anything else the user wants to track (WIP). No more <code>clear &amp;&amp; ls</code> habit.</p>\n<h3>Status display</h3>\n<p>Commands are marked with a checkmark if they succeed; i.e. their exit code is zero. (graceful failure is, as always, WIP)</p>\n<h3>Host doesn't have to be the client</h3>\n<p>You can use this as a remote shell, even a secure one if .htaccess and SSL are properly configured. (In this case, just run as a regular node app, ignoring nw.js a.k.a. node-webkit.)</p>\n<h2>Inspiration</h2>\n<p>Today's terminals are a relic of the serial <code>tty</code>s and <code>vt</code>s of early UNIX. Terminal emulators still start with an empty screen, with a prompt at the top. Command-line input and output are dropped into the same framebuffer, making it difficult to track where output ends and the next line of input begins.</p>\n<p><img alt=\"DEC VT100\" data-canonical-url=\"https://upload.wikimedia.org/wikipedia/commons/thumb/9/99/DEC_VT100_terminal.jpg/270px-DEC_VT100_terminal.jpg\" src=\"https://res.cloudinary.com/devpost/image/fetch/s--7Tn3QwrF--/https://upload.wikimedia.org/wikipedia/commons/thumb/9/99/DEC_VT100_terminal.jpg/270px-DEC_VT100_terminal.jpg\"/></p>\n<p>Besides interactive terminal applications and GUI terminal emulators, the command-line user experience hasn't changed much since the late '70s.</p>\n<h2>How we built it</h2>\n<p>Penultimate is a cross-platform (Linux/OS X/Android/Web) node-webkit application.</p>\n<h2>Challenges and Accomplishments</h2>\n<p>We interact with the user's shell by opening a <code>child_process</code> and keeping it alive. We send each the user's commands into their shell and collect <code>stdout</code> and <code>stderr</code> to print in the correct place on the webpage.</p>\n<p>It is surprisingly difficult to determine when a shell (e.g. bash) has finished running a command. Because command-line utilities don't always spit out all output at once, and because bash keeps running (to preserve environment variables and other state) between commands, we had to resort to more creative methods to determine whether bash is ready to accept another command.</p>\n<p>Low-level shell interaction across unix pipes also presented some difficulty.</p>\n<h2>What we learned</h2>\n<p>Quint brushed up on his node.js, process management, and flexbox styling (pre-2015 flexbox is entirely different than today's standard). Will found out just how little <code>child_process</code>es are willing to tell their <code>parent</code>s.</p>\n<blockquote>\n<p>\"Is there anything you'd like to tell me, <code>bash</code>?\"\n\"No, <code>node</code>.\"</p>\n</blockquote>\n<h2>What's next for Penultimate</h2>\n<p>Penultimate's source is available <a href=\"https://github.com/qguv/penultimate\" rel=\"nofollow\">on Github</a>. We built penultimate because we want to build a better CLI experience, so Patches are very much welcome.</p>\n<p>Some items on the penultimate wishlist:</p>\n<ul>\n<li>support user-configurable status blocks (currently <code>ls</code> and <code>git status</code> are displayed on the right)</li>\n<li>support more user customization, especially with color</li>\n<li>experiment with alternative layouts\n\n<ul>\n<li>try inverting the order that outputs are entered</li>\n<li>try moving the input bar to the top</li>\n</ul></li>\n<li>ssh login (needs ssh-client on node server)</li>\n<li>color support with <a href=\"https://github.com/echicken/node-ansi\" rel=\"nofollow\">node-ansi</a> or <a href=\"https://github.com/rburns/ansi-to-html\" rel=\"nofollow\">ansi-to-html</a></li>\n<li>use <a href=\"https://github.com/jezen/is-thirteen\" rel=\"nofollow\">is-thirteen</a> to test for enter keypresses (keycode <code>13</code>)</li>\n</ul>\n<p><img alt=\"Persistent state bash under penultimate\" data-canonical-url=\"https://raw.githubusercontent.com/qguv/penultimate/master/bash_state.png\" src=\"https://res.cloudinary.com/devpost/image/fetch/s--o53e4WX8--/https://raw.githubusercontent.com/qguv/penultimate/master/bash_state.png\"/>\n<img alt=\"Another bash session under penultimate\" data-canonical-url=\"https://raw.githubusercontent.com/qguv/penultimate/master/bash.png\" src=\"https://res.cloudinary.com/devpost/image/fetch/s--_y681Sph--/https://raw.githubusercontent.com/qguv/penultimate/master/bash.png\"/></p>\n<h2>Soylent Art</h2>\n<p>We <a href=\"https://twitter.com/reggae_snacks/status/716427863910653952\" rel=\"nofollow\">tweeted</a> @Soylent with our Soylent art. They re-tweeted it!</p>\n<p><img alt=\"Art on a bottle of Soylent\" data-canonical-url=\"https://raw.githubusercontent.com/qguv/penultimate/master/soylent_art.jpg\" src=\"https://res.cloudinary.com/devpost/image/fetch/s--Wv9qHe-A--/https://raw.githubusercontent.com/qguv/penultimate/master/soylent_art.jpg\"/></p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bash\">bash</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/qguv/penultimate\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/qguv/penultimate\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Drone Goals", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to enter the drone competition because 1) we think drones are cool, and 2) because we wanted to enter a specific prize that would essentially allow us to play with a fairly quality drone over the course of 32 hours. </p>\n<h2>What it does</h2>\n<p>It can do somersaults as well as other acrobatic feats in response to voice commands. It also has the ability to recognize and track images up to a 85% confidence interval.</p>\n<h2>How we built it</h2>\n<p>The official SDK for the drone is currently deprecated, thus we refactored an older, third party SDK in order to write programs for the drone. We wrote two separate, independently operated programs. The first is an image tracking program that runs concurrent programs in order to lock onto a target. It involves image based visual servo control such that the drone responds to movements of the target. The second program uses python speech recognition to take input and respond to voice commands, essentially rendering operation of the vehicle to be voice controlled. </p>\n<h2>Challenges we ran into</h2>\n<p>The SDK for the AR Drone 2.0 was deprecated and had compatibility issues out the wazoo with the 64-bit version of Linux and with modern versions of Linux. As such, it took a while to get it to work, and when we downloaded the tracking software, it also had issues. After resolving those issues, we realized how the documentation was not the greatest, the authors stated how it was incomplete. We didn't know how to use the learning option because it printed it on the terminal of the 7th child process. A large part of the time was spent trying to test the tracker software, but this proved challenging mostly because of the limited time we got to test due to the very short battery life of the drone. After which, we wanted to add functionality to it, but most of the problems were just small, programming errors.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Getting everything to work to the extent that it does is a feat that I, personally, will remember for the rest of my days.</p>\n<h2>What we learned</h2>\n<p>We learned the importance of backwards compatibility in software, and that the pace at which software advances often makes it extremely difficult to keep up to date with advancements in current technologies. We ran into many issues where software </p>\n<h2>What's next for Drone Goals</h2>\n<h1>dronesquadgoals.</h1>\n<p>The next goal for Drone Goals would be to improve the precision and add more routines. Right now, our drone can only flip to the right and the left but we would like to be able to make it do other aerial stunts such as figure 8s and loop-de-loops. After that, the next goal would be fully autonomous tracking and following. We began to mess with visual tracking with the drone but were unable to master full autonomous tracking and following.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c\">c</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ar-drone\">ar.drone</a></span></li></ul>\n</div>\n</div>", ["", "", "", ""]], ["Skynet", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h3>The AidData \u201cSkytruthiness\u201d Challenge</h3>\n<p>One of AidData\u2019s flagship data products is the Tracking Underreported Financial Flows (TUFF)\nChinese Aid to Africa dataset. The data is collected using a method which relies heavily on third-party\nreporting of aid projects from China to African nations. One of the harder problems to solve is whether\nor not these aid projects actually have occurred or are occurring. There are two potential ways to verify\nthat the projects have occurred. The first is <strong>ground truthing</strong>: actually sending someone to verify the\nproject occurred. Obviously, this can be expensive! The second is <strong>sky truthing</strong>: using satellite imagery\nand remote sensing to see if we can pick up the signature of these development projects without putting\nboots on the ground. Say for example, we have found some indication using TUFF that a stadium was\nbuilt in Uganda, we have shown we can skytruth these stadiums using Google Earth. Read more here:\n<a href=\"http://aiddata.org/blog/the-skys-the-limit-using-satellite-imagery-to-track-development-financeprojects-in-africa\" rel=\"nofollow\">http://aiddata.org/blog/the-skys-the-limit-using-satellite-imagery-to-track-development-financeprojects-in-africa</a></p>\n<p>However it remains a tricky and perhaps labor intensive problem! This Challenge is all about\nattempting to automate this process.</p>\n<h5>THE CHALLENGE:</h5>\n<p>Given the following items:</p>\n<ol>\n<li>A set of latitude and longitude pairs which represent some Stadiums in Ghana;</li>\n<li>A set of latitude and longitude pairs which represent some Dams in Ghana;</li>\n<li>An export of Open Street Map (OSM) data of Ghana in Shapefile, sqlite and PBF formats (available at: <a href=\"ftp://ftp.aiddata.wm.edu/tribehacks\" rel=\"nofollow\">ftp://ftp.aiddata.wm.edu/tribehacks</a>);</li>\n<li>the Google Maps API (<a href=\"https://developers.google.com/maps/\" rel=\"nofollow\">https://developers.google.com/maps/</a>)</li>\n</ol>\n<p>Create an application which:</p>\n<p>A) Takes each of the data points in (1) above and finds the nearest object in the OSM data. For example if the row is:</p>\n<p>5.5515, 0.1919, Stadium</p>\n<p>It would find the nearest Stadium in the OSM file for Ghana for that latitude and longitude. Then..</p>\n<p>B) Use the location of the nearest object of found in (A), Save the most detailed satellite image from Google Maps. For example above, it would be the Accra Sports Stadium, and your image would look something like:</p>\n<p><a href=\"https://www.google.com/maps/place/Accra+Sports+Stadium/@5.5514127,-0.1927612,454m/data=!3m1!1e3!4m5!1m2!2m1!1sstadium+ghana!3m1!1s0xfdf9085f7383c39:0x7c72cdef39372119\" rel=\"nofollow\">https://www.google.com/maps/place/Accra+Sports+Stadium/@5.5514127,-0.1927612,454m/data=!3m1!1e3!4m5!1m2!2m1!1sstadium+ghana!3m1!1s0xfdf9085f7383c39:0x7c72cdef39372119</a></p>\n<p>NOTE: We only want the satellite image! Not the screen capture of the Google Maps page. You should probably be using the Google Maps API to retrieve your satellite tiles.</p>\n<p>C) Your final output should at minimum be a CSV with the original latitude, longitude, object type, as\nwell as six new columns: 1) the OSM node id of the nearest matching object, 2) distance in km of the nearest found matching OSM object, 3) the latitude of the closest OSM object of the same type, 4) the longitude of the nearest OSM object of the same type and 5) the name of the saved image file of the satellite view of the object (please store the files in a single folder), and 6) the URL of the satellite image</p>\n<p>D) Please issue a pull-request to this repo with your solution (in a seperate folder). Winning entries must contain all code, contain build instructions and generally be nice to work with. Judging criteria are: completeness of solution, code quality, an innovation (feel free to add cool features we havent thought of).</p>\n<h5>BONUS POINTS</h5>\n<p>E) Extend your application to arbitrary object mappings. By this we mean, given a source file with one\nobject type in it, say railroads, ask the user which OSM tags map to that object types.</p>\n<p>F) DOUBLE AWESOME BONUS POINTS: Integrate CesiumJs (<a href=\"https://cesiumjs.org\" rel=\"nofollow\">https://cesiumjs.org</a>) into your application.</p>\n<h5>HINTS:</h5>\n<p>1) The stadium and dam object tags the source data maps to a very specific OSM tag.</p>\n<h6>Stadium:</h6>\n<p><a href=\"http://wiki.openstreetmap.org/wiki/Tag:building%3Dstadium\" rel=\"nofollow\">http://wiki.openstreetmap.org/wiki/Tag:building%3Dstadium</a></p>\n<h6>Dam:</h6>\n<p><a href=\"http://wiki.openstreetmap.org/wiki/Tag:waterway%3Ddam\" rel=\"nofollow\">http://wiki.openstreetmap.org/wiki/Tag:waterway%3Ddam</a></p>\n<h6>Questions? Email Scott Stewart (<a href=\"mailto:sstewart@aiddata.org\" rel=\"nofollow\">sstewart@aiddata.org</a>) or Alex Kappel (<a href=\"mailto:akappel@aiddata.org\" rel=\"nofollow\">akappel@aiddata.org</a>).</h6>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/stuharvey/AidData-TribeHacks-Challenge-2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/stuharvey/AidData-TribeHacks-Challenge-2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Verb Pattern +", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Verb Pattern + \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/435/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Verb Pattern + \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/436/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Verb Pattern + \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/437/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Verb Pattern + \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/438/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Verb Pattern + \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/439/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Verb Pattern + \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/440/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Verb Pattern + \u2013 screenshot 7\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/443/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Verb Pattern + \u2013 screenshot 8\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/444/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Verb Pattern + \u2013 screenshot 9\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/445/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Verb Pattern + \u2013 screenshot 10\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/446/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Verb Pattern + \u2013 screenshot 11\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/447/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Verb Pattern + \u2013 screenshot 12\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/448/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Verb Pattern + \u2013 screenshot 13\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/449/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Verb Pattern + \u2013 screenshot 14\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/450/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>What it does</h2>\n<p>The program analyzes a paragraph of text, uses the nltk library to separate the paragraphs and sentences. Then, it use Stanford dependecies parser to find the subject, object, and the verbs of a particular sentence, and the frequency/ score of verb of different categories.</p>\n<h2>How I built it</h2>\n<p>We used Python as our implementation language, as we are most comfortable with language and it offers more methods with string. We used the NLTK extensively and studied its documentation, while using parser to accomplish the parsing functionality that NLTK library lacks. </p>\n<h2>Challenges I ran into</h2>\n<p>\u2022Separate paragraphs with blank line and title (all upper case)\n\u2022Divide sentences by dots, and sometimes by line break\n\u2022Delete irrelevant sentences and paragraphs\n\u2022Find and implement a parser to identify subjects and objects\n\u2022Export result into a .csv file elegantly</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Get it done. Separate the paragraphs and sentences elegantly, even in very strange scenarios. </p>\n<h2>What I learned</h2>\n<p>How to take out things inside parentheses and the logic behind it. How to utilize NLTK and parser API. How does a computer analyze natural language</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/nltk\">nltk</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/natural-language-processing\">natural-language-processing</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/hyy369/Verb-Pattern\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/hyy369/Verb-Pattern\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["CobbleDrone", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/AZBrnPRTynw?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Drones are cool and crowd-sourcing is cool, therefore crowd-sourced drones must be really cool. This idea came when trying to find an interesting input source for the drone. Why do just one input source when you can do many?</p>\n<h2>What it does:</h2>\n<p>Focusing on the Parrot AR.Drone, our project utilizes user input from a variety of devices.  Typically speaking, a single user is confined to a particular method of unmanned system manipulation.  Our software eliminates this conundrum,  utilizing multiple devices from multiple pilots. The immense selection of devices capable of controlling the device provides the user with an increased variety of options to control the unmanned system.</p>\n<h2>How The Device Was Constructed</h2>\n<h3><strong>Language Utilized</strong></h3>\n<p><em>Python</em> because its easy. Who doesn't love a language you can run right in your terminal?</p>\n<h3><strong>Sources of Input</strong></h3>\n<h4><em>Wii Remote:</em></h4>\n<p>Functionality: The Wii remote further enhances the user's ability to  control the pitch and yaw of the Parrot Quad-Copter. The user can control the drone using either the D-Pad or the accelerator of the WiiMote.</p>\n<h4><em>WiiFit Balance board:</em></h4>\n<p>Functionality: The WiiFit Balance Board controls the pitch and yaw of the drone based upon how the user stands on or touches the board.. </p>\n<h4><em>Twitter</em></h4>\n<p>Functionality:\nTwitter shall serve as an interface that responds to audience input. When the user enters the prompted hashtag the vessel will preform a flip. This feature was not fully implmented, but a somewhat sassy bot can be found <a href=\"http://twitter.com/twittydrone\" rel=\"nofollow\">@twittydrone</a></p>\n<h2>Challenges we ran into</h2>\n<ul>\n<li>Connectivity with everything: Bluetooth connections to the WiiMotes and Wii balance board proved problematic and system dependent. A change in software helped to fix most of this issue. Also, connectivity to the Drone was initially difficult and unstable due to a lack of transparent documentation.</li>\n<li>Libraries: Some initial libraries proved to be difficult or lacked the required functionality, but libraries were found that met the project requirements</li>\n<li>Bugs: A significant amount of our time was spent in bug fixing. Bugs were found throughout the entirety of the code, from first input to drone control.</li>\n</ul>\n<h2>Accomplishments that we're proud of</h2>\n<ul>\n<li>Programmatically controlling the drone.</li>\n<li>Multiple input sources</li>\n<li>One sassy, although incomplete, Twitter bot</li>\n</ul>\n<h2>What we learned</h2>\n<ul>\n<li>Bluetooth SUCKS!</li>\n<li>With the right library, the work is significantly more simple.</li>\n<li>With enough caffeine, all bugs are shallow</li>\n</ul>\n<h2>What's next for CobbleDrone</h2>\n<p>Future improvements might include more finish the Twitter api to control the drone.  More control and input from the WiiMotes.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">wii-balance-board</span></li><li><span class=\"cp-tag\">wii-remote</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twitter\">twitter</a></span></li><li><span class=\"cp-tag\">parrot-uav</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://cobbledrone.com\" rel=\"nofollow\" target=\"_blank\" title=\"http://cobbledrone.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>cobbledrone.com</span>\n</a></li>\n<li><a href=\"https://github.com/legonigel/wii-drone-on\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/legonigel/wii-drone-on\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://legonigel.github.io/wii-drone-on\" rel=\"nofollow\" target=\"_blank\" title=\"https://legonigel.github.io/wii-drone-on\">\n<i class=\"ss-icon ss-link\"></i>\n<span>legonigel.github.io</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I designed the web-cite and assisted with the Devpost. ", "I utilized the 'cwiid' library to interface with the Wiimotes, including both accelerometer and button input, and the accelerometer data from the sensors in the Wii Balance Board to create a way to control the Parrot AR Drone.", "I wrote the twittyDrone twitter API. It takes in user mention commands and returns valid commands for the drone, along with tweeting messages at users during certain events.", "I wrote the drone interface code, utilizing the libardrone and extending it to meet the needs of the project. I also wrote the code to provide an abstract interface for the input sources to push to.  It was difficult to control the drone and I squashed a ton of bugs, but I learned a ton about multi-threaded python code and how difficult it is."]], ["BThere", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"BThere \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/553/datas/gallery.jpg\"/>\n<p>\n<i>Label your alarm however you want</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"BThere \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/554/datas/gallery.jpg\"/>\n<p>\n<i>The screen you'll be seeing the most often - alarm view</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"BThere \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/555/datas/gallery.jpg\"/>\n<p>\n<i>Another alarm view</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"BThere \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/556/datas/gallery.jpg\"/>\n<p>\n<i>Picking out your desired location, drag a pin or select a landmark</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"BThere \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/558/datas/gallery.jpg\"/>\n<p>\n<i>Change your alarm ringtone</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"BThere \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/559/datas/gallery.jpg\"/>\n<p>\n<i>Select a landmark</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"BThere \u2013 screenshot 7\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/560/datas/gallery.jpg\"/>\n<p>\n<i>Pick your time with a beautiful clocklike interface</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>I usually have a reminder or alarm before each of my classes.\nSometimes I'm not that far from class, so an alarm 10 minutes before is bound to be ignored. I'll get sidetracked, and next thing I know, I'm late to class.</p>\n<h2>What it does</h2>\n<p>This app creates geographically based alarms so all you need to enter is a location and what time to be there - we'll take care of the rest.</p>\n<h2>How I built it</h2>\n<p>The Android application was built using Java in Android Studio.\nThe web app and backend was created using HTML, CSS, SASS, PHP, and other tools.</p>\n<h2>Challenges I ran into</h2>\n<p>Programming in Android and interacting with hardware is always a beast. I've never done much work with geolocation in Android, and that requires maintaining and managing multiple services and callbacks that adds an extra layer of complexity.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>The UI is very clean and there is a consistent interface across the web apps and the UI. The Android application itself is completely functional - not a mockup, and we are proud that we were able to make everything work in 32 hours.</p>\n<h2>What I learned</h2>\n<p>I learned that oftentimes the simplest apps can often be the best.</p>\n<h2>What's next for BThere</h2>\n<p>We will soon deploy to the Google Play Store, buy a domain, and deploy the web app on the internet. An iOS version of this application is rumored to be under development.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/michaeldarr/bthere\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/michaeldarr/bthere\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["aigeo.me", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1><a href=\"www.aigeo.me\" rel=\"nofollow\">aigeo</a></h1>\n<h2>here's the pitch</h2>\n<p>Banner ads are crap. <a href=\"http://blog.hubspot.com/marketing/horrifying-display-advertising-stats\" rel=\"nofollow\">Nobody</a> reads them on purpose, and they aren't relevant to users, and yadda yadda they suck. Map based ads are only heavily used in <a href=\"https://biz.waze.com/\" rel=\"nofollow\">Waze</a> (owned by google). They are <strong>super relevant to users, not intrusive, native to the content they are looking at, and all around better!</strong> The goal of this project is to figure out how to make a doubleclick type ad exchange where advertisers can buy campaigns based around locations, and applications or web services with map views can display the ads inline for revenue. Users see the content they are looking for, and get ads highly targeted at something they've explicitly expressed interest in as they express that interest. If you look at a map view, it tends to be because that's where you are, where you're going, or somewhere you're interested in. </p>\n<h2>what works</h2>\n<p>I've got a domain with github pages hosting the client content (an angular web app). I spun up a linode linux box to run a <a rel=\"nofollow\">json server</a>, that can hold some basic information. \nIndependently I got Bootstrap, Angular, and a sample map from mapbox to display. \nwhich leads to </p>\n<h2>whats horribly broken</h2>\n<p>I wanted to be able to display a marker on the mapbox app from a geo json object from the json server, and dynamically inject that using Angular. That did not work as I hoped. When you put the map inside an angular directive breaks everything. That's what I spent the whole time trying to fix, and if I had finished that the next step would be an input for someone going to the site to be able to input a lat-long and information that would be inserted preferably with 2 way data binding, or on reload if dataservices were needed. </p>\n<h2>what I learned</h2>\n<p>New ways that angular and booststrap interact, and most importantly geo-json. I didn't know that that was a format that exited. That makes the entire idea much easier. the map-box api is powerful (and finicky) and i need to spend a good soul to soul with it to understand what it wants. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/angular-js\">angular.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag\">linux-server</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mapbox\">mapbox</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/excenter/aigeo\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/excenter/aigeo\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"http://www.aigeo.me\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.aigeo.me\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.aigeo.me</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I did all the things"]], ["Zagger", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Zagger \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/507/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<h2>What it does</h2>\n<p>Zagger is a mini game app that runs on Android, iOS, web-based, and Facebook app. All scores and points are stored and updated live cross-platform.</p>\n<h2>How I built it</h2>\n<p>Unity3d</p>\n<h2>Challenges I ran into</h2>\n<p>Server logic to provide user data across all platforms\nSingle man team</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Managed to get done backend, Facebook api, shop, UI, and cross platform support done</p>\n<h2>What I learned</h2>\n<p>Facebook api, php</p>\n<h2>What's next for Zagger</h2>\n<p>Zagger is going to be part of a multi app game network. The currency will work across apps across every platform. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li></ul>\n</div>\n</div>", [""]], ["mail2vec", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"mail2vec \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/494/datas/gallery.jpg\"/>\n<p>\n<i>Landing Page</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"mail2vec \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/499/datas/gallery.jpg\"/>\n<p>\n<i>Application Doing Work</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Email has often been categorized manually, ex. the common Gmail folders. Traditional email search is very narrow and limited, usually boiling down to term matching. Semantic analysis and automated categorization could be implemented by the use of neural networks to automatically sort and categorize using vector analysis. </p>\n<h2>What it does</h2>\n<p>Lets you select a term and determines which emails, utilizing a massive vector representation of common terms, should be categorized under that term.</p>\n<h2>How we built it</h2>\n<p>word2vec python library running on a python server and nodeJS server as middleware between our web application and the python server.</p>\n<h2>Challenges we ran into</h2>\n<p>Using Gmail API on a Node.js server was a pain, so we had to port it over to the client side and restructure our entire application flow upon this.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Everything, from running a python server to successfully using Google's Gmail API for Javascript. </p>\n<h2>What we learned</h2>\n<p>Even with extensive planning, there were a lot of unexpected challenges with the logistics and problems with API calls.</p>\n<h2>What's next for mail2vec</h2>\n<p>For mail2vec specifically, we want to create vector models from runtime that incorporates email text and expand the vocabulary to words that may be specific to one's email. In addition, mail2vec can easily be applied beyond emails such as large databases of any form of text. There is an untapped potential of NLP commercial based applications and vector-based NLP such as word2vec can fill this niche.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">word2vec</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag\">zerorpc</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-gmail-oauth\">google-gmail-oauth</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/indigowhale33/Mail2vec\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/indigowhale33/Mail2vec\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["HelloWorldScream", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>HelloWorldScream</h2>\n<p><strong>Inspiration:</strong> Ever get tired of HelloWorld? Well, neither do we! Now you can shout it out for the world to hear!</p>\n<p><strong>What it does:</strong> Enter HelloWorldScream, where anything is possible. Click around and see what happens. Featuring multiple moods and personalities.</p>\n<p><strong>What's next:</strong> Add in recording custom audio from the user, and adding your own photos and multiple backgrounds.</p>\n<p><strong>Built with Java, blood, sweat, and tears.</strong></p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/eclipse\">eclipse</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xml\">xml</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/nathanchen13/HelloWorldScream\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/nathanchen13/HelloWorldScream\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Testing, sorted out some android kinks, layout support, bug fixes", "I came up with the concept and worked on the layout. I also supported the other members' efforts. Voice actor and model.", "I worked on much of the coding. I was responsible for coding how the app works and for getting it to work. I also set up the background images. Voice actor and model.", "Testing, audio manipulation,\nvoice acting and modeling."]], ["ForwardParrot", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"ForwardParrot \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/426/datas/gallery.jpg\"/>\n<p>\n<i>Targeting screen</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"ForwardParrot \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/427/datas/gallery.jpg\"/>\n<p>\n<i>Targeting screen</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"ForwardParrot \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/502/datas/gallery.jpg\"/>\n<p>\n<i>Targeting screen</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>Problem:\n    Forward observation for artillery is a critical, but very dangerous task. Use of a drone allows forward observers to call for artillery fire without exposing themselves. In order for a drone to be useful for forward observation, soldiers will require that it have a Milliradian reticle, and the ability to measure an azimuth in Milliriadians. The ability to display location using the Military Grid Reference System would also be convenient, but is not necessary because observers will already be equipped with a GPS. The drone must also be intuitive to use.</p>\n<p>Current state of implementation:</p>\n<ol>\n<li>Ease of use: ForwardParrot is a modification of AR FreeFlight 2.0, retaining the ease-of-use of a recreational App.</li>\n<li>Milliradian reticle: Fully implemented.</li>\n<li>Azimuth Measurement: Azimuth conversion, display, calibration are fully implemented. Azimuth readings are currently calculated from gyroscope readings on the controlling device. The next stage of development is to draw these gyroscope readings from the drone's navdata.</li>\n<li>Military Grid Reference System: Conversion and display are implemented, but a full implementation will require GPS data from AR's FlightRecorder hardware, which is purchased seperately.</li>\n</ol>\n<p>Business Plan:\n    The end goal is not to sell the software itself, but to use the software to open up civilian drones to the military market. Advantages to military customers are decreased cost, weight, and training requirements compared to purpose-built military drones. The Ardrone 2.0 is a very low-cost solution, but it is limited in terms of camera resolution, endurance, and wind stability. This business plan can also easily be applied to more powerful drones such as the Draganflyer. These drones are more powerful than the AR Drone and can be sold for a much higher price, while still remaining significantly cheaper than purpose-built military drones.</p>\n<p>Lessons Learned:</p>\n<ol>\n<li>The AR Drone SDK 2.0 has not been updated since 2012, and is not easily compatible with current tools such as Android Studio and Gradle. Simply building the project was a significant challenge that improved the team's understanding of Gradle.</li>\n<li>The team learned to use threading to update and display real-time data, asynchronously from the camera feed and flight controls.</li>\n<li>The team learned to work with C libraries embedded in an Android project.</li>\n<li>The team became more familiar with all aspects of creating a real-time UI for Andriod.</li>\n<li>Became familiar with open source software and how to modify it</li>\n</ol>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ar-drone\">ar.drone</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag\">ar-drone-2.0</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/ShadowRonin/ForwardParrot\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ShadowRonin/ForwardParrot\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["LogApps Challenge", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We were inspired to take on this challenge after spending the first day failing miserably on our first mobile application idea, ChickenTinder (we're not giving up hope though--we will be developing in the near future).</p>\n<h2>What it does</h2>\n<p>This project decomposes paragraphs and categorizes words in sentences of texts files (specifically the Global Differential GPS System) by their part of speech and assigns values to certain words. </p>\n<h2>How we built it</h2>\n<p>We used python, NLTK and our sanity. </p>\n<h2>Challenges we ran into</h2>\n<p>This was both of our first hackathons, and only one of us has taken a class in software development. AKA we struggled a lot. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We were very proud when we finally figured out how to remove tabs, whitespace, and the unnecessary words/numbers (while preserving the original sentence) in order to more easily tokenize the real sentences. It excited us so much, we took a dance break. And we survived our first hackathon.</p>\n<h2>What we learned</h2>\n<p>Since we utilized and delved into many lists, we realized the importance of organization and keeping track of the various lists we used, as well as the importance and benefits of good naming for functions and objects. We learned now to use the Natural Language Toolkit and how to use some of its methods. Most importantly, we learned that coding for 32 straight hours is not good for anybody. We would both recommend and not recommend.</p>\n<h2>What's next for LogApps Challenge</h2>\n<p>After working on this challenge, we are interested in learning more about natural-language processing and how it is able to analyze the nuances of human language (though in a more relaxed setting).</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/nltk\">nltk</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/natural-language-processing\">natural-language-processing</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python-package-index\">python-package-index</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/wguo96/logappschallenge\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/wguo96/logappschallenge\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["TribeLog", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>TribeLog aims to address the challenge posed by Logapps at <a href=\"https://github.com/ACMWM/Logapps-TribeHacks-Challenge-2016#part-1\" rel=\"nofollow\">https://github.com/ACMWM/Logapps-TribeHacks-Challenge-2016#part-1</a></p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/nltk\">nltk</a></span></li><li><span class=\"cp-tag\">nodebox</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/rfbonett/tribehacks/tree/master\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/rfbonett/tribehacks/tree/master\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["PlayMaker 2.0", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We are all on a sports team and our captain had trouble teaching strategies to the team.  This application will allow him to teach everyone the strategies while allowing them to see their role. </p>\n<h2>What it does</h2>\n<p>Play Maker 2.0 combines the traditional play book with a simulator.  Users create plays in stages, allowing for movement at different teams by different team members.  Once created, a play can be saved and loaded for later modification or instruction. A key feature of Play Maker 2.0 is its ability to simulate individual parts of a play.  If certain team members are struggling to understand their role on the field, this application will visual their exact role.</p>\n<h2>How we built it</h2>\n<p>Eclipse was the sole development environment for this application.  We spent the first few hours planning out the exact process and steps we were going to take.  Once a plan was made, we began splitting up the work among the group members. As members finished their parts, it was added to the master copy.   Towards the end of the project, we were all forced to work off one computer as it became a group collaboration effort trying to figure out multi-threading of the Swing class.</p>\n<h2>Challenges we ran into</h2>\n<p>Multi-threading of Swing classes.  We were forced to use Swing Workers; however, those only helped so much.  Once figuring out that Swing Workers are only useful once (you can only execute them once), we were able to figure out how to perform the animation.  Another large obstacle we encountered was pointers.  A variable that was accessed 20 lines earlier was changed.  The debugger was very useful in figuring this out.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We bonded together to complete an application that we WILL use in under 32 hours.  None of us knew how to do the majority of things in this application but we continued to persevere, learn, and solve all the problems.</p>\n<h2>What we learned</h2>\n<p>Agile development is the key to life (and version control).  Also, talking out issues, code, and asking for help will avoid 4 hour road blocks which we had a few of.</p>\n<h2>What's next for Play Maker 2.0</h2>\n<p>We are looking into cleaning up the Java Application and plan on developing it for the Android and iOS platforms. This will allow coaches of all sports and levels to teach their kids like never before. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag\">swing</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/eclipse\">eclipse</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/dragon-slayer/playmaker\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/dragon-slayer/playmaker\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I helped brainstorm the original idea for a play simulation program, based on our shared connection to ultimate frisbee. I hadn't worked with  Java for a while, so my biggest coding contributions were helping to set up the main screen and figuring out bugs in the  code as a group. This program was a great refresher on Java for me, experience I'll now have for future projects.", "", "", ""]], ["QSport", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Two of our team members were eating at a dining hall late at night. While they were eating some fattening food, they talked about how hard it is to find a pickup game whenever they want to play basketball. Then they thought how awesome it would be if there was an app for that. So we made QSport.</p>\n<h2>What it does</h2>\n<p>This application gives people an easy way to play pick up sports. This web (iOS coming soon) application allows people to create or join a session of any sport with any sort of description, criteria, filters, etc. This app is really good for team sports such as basketball, soccer, cricket, etc... because it allows people to meet other random people who are interested in playing the sport. Even for 1v1 sports, it allows the same functionality.</p>\n<h2>Challenges we ran into</h2>\n<p>We ran into some challenges with implementing some of the custom UI elements. We ended up prioritizing the ones that we wanted and scrapped the ones that we didn't have time for. We also ran into challenges with the FourSquare API because it does not always return relevant information. Getting the user location to the server was a challenge because it was hard to find a way to send it through headers or something of that sort.</p>\n<p>For the mobile application we ran into design issues. During the hackathon, we had to reimplement one of the tableview for the application. We also ran some issuess into network authentication for the mobile application. Also while implementing one of the tableviews, there were little nit picky issues with UI. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>One of the things that we are proud of is finishing the web application of this project and making good progress on the mobile side. This was a very big idea and there were a lot of things to implement. Another thing we are proud of is implementing the project with the FourSquare and MapBox API. Both of these APIs were very crucial in implementing the core functionality of our application. We are also proud of our fully functional backend and it is successfully integrated with the project schema. We also implemented some custom UI elements that make the website more pleasant to interact with.</p>\n<h2>What we learned</h2>\n<p>Our team learned the kinks of Express and how to properly incorporate a backend to an application. We learned how to use the FourSquare and MapBox API with our own application. One person on the team learned how to make custom UI on the application and Jade which is a mark-up language. While working with the mobile application, we learned network authentication and getting/posting to the server. Another thing we learned during mobile development was protocols, extensions, delegates, custom views, stack views, and custom tableviews.</p>\n<h2>What's next for QSport</h2>\n<p>Right now we have a very basic implementation of QSport. Our ideas for the future is to finish the mobile application and make the mobile application more user friendly. We also want to make the GUI for the web application better and add more customization to the GUI. For implementation features, we have a lot of ideas. Our first idea would be applicable if the FourSquare API doesn't get a court or a location to play on. We want to allow the user to enter his/her own location of interest and create a session there. Once the user creates the session, this location would be saved on our main database and now whenever a user searches that specific court they will see that location in the application. We also want to implement group messaging and friends in our application. So whenever the user joins a session they will have the ability to message others and talk to them.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jade\">jade</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/foursquare\">foursquare</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mapbox\">mapbox</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/swarajd/qsport-tribehacks\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/swarajd/qsport-tribehacks\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the backend and parts of the frontend", "I worked on the front-end for mobile ios. \n", "I worked on the iOS application. ", "I developed a good portion of the front end."]], ["rideHacks", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"rideHacks \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/395/datas/gallery.jpg\"/>\n<p>\n<i>The pins all show hackathons through the months of April and May.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"rideHacks \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/396/datas/gallery.jpg\"/>\n<p>\n<i>Plots the shortest path to the hackathon, so one can see if anyone is near the route.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"rideHacks \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/449/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"rideHacks \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/429/datas/gallery.jpg\"/>\n<p>\n<i>List of hackathon events one has pinned.</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Joe, Noah, and Quentin were all frustrated by the four hour drive to get to tribeHacks. We figured others must feel the same, and created a solution to this problem!</p>\n<h2>What it does</h2>\n<p>It will allow hackers to drop pins on a map for whichever hackathons they are attending, and see others who have dropped pins. Each pin offers an email address, and whether or not the person is looking for a ride, or offering to drive others nearby. In this version, people will email each other to set up carpools. </p>\n<h2>How I built it</h2>\n<p>Javascript/HTML/Bootstrap/google maps api was the front end, while firebase stored all the info. We kept it simple with only three pages- login, sign up, and the main map page. The login system through firebase compliments this minimalist approach nicely. Once the basic pin placement was working, we simply kept adding features until we needed to sleep! </p>\n<h2>Challenges I ran into</h2>\n<p>Using the google maps api was a bit tricky, and there were subtle problems with the pin dropping, such as the info windows that popped up, as there was conflict with how Javascript processes and saves information. Also, due to the amounts of calculating, the scripts got unwieldy and they needed to be restructured sometimes. There is a lot of data needed, and organizing it in a clean enough manner was difficult.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>This project was much better than our previous hackathon's project, and we stuck with it and completed as much as we could. We all agree that this is very demoable, and gets our main intent across quite nicely. We also all had a lot of fun, enjoyed making it, and are proud of our work. We created an effective database structure, something that tripped us up in the past. Also, two of our members had no knowledge in JavaScript, and learned a bunch in the process. We also ended up very happy with the layout of the site, despite our earlier concerns.</p>\n<h2>What I learned</h2>\n<p>There was much learned about google maps api, as all three of us never used it before. Quentin learned a lot about Javascript as he never had used it before. Noah learned some Javascript, but mainly learned more HTML and how to use w3 mixed with Bootstrap. Joe learned more about Javascript, as well as Firebase organization. Overall, we're very happy with how we did.</p>\n<h2>What's next for rideHacks</h2>\n<p>The next step will be removing and moving pins. Next, we hope to implement features such as allowing users to send email requests by clicking on the info windows, drawing paths that will say how far out of the way picking someone up would be, and make the project more aesthetically pleasing overall. Also, security is a definite must looking forward, due to the nature of the information being stored. Calculating route distances, to determine who is and is not out of the way within a reasonable margin, as well as revenue calculation would all be great features to add. </p>\n<p>To sign into the website, either create your own account, or you can use:\nemail: <a href=\"mailto:tester@judge.com\" rel=\"nofollow\">tester@judge.com</a>\npassword: p </p>\n<p>Happy pinning!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-maps\">google-maps</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://www.ridehacks.me\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.ridehacks.me\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.ridehacks.me</span>\n</a></li>\n<li><a href=\"http://noaharmiger.github.io/HomePage.html\" rel=\"nofollow\" target=\"_blank\" title=\"http://noaharmiger.github.io/HomePage.html\">\n<i class=\"ss-icon ss-link\"></i>\n<span>noaharmiger.github.io</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on JavaScript, Firebase, google Maps' api, and the connection between all three.", "I worked on the back end with Javascript which mainly involved using google-maps API and Firebase.", "I was in charge of the overall layout of the website. I worked mostly on html, debugging, and formatting . "]], ["Effici", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Effici \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/353/datas/gallery.jpg\"/>\n<p>\n<i>Animated logo</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Effici \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/356/datas/gallery.jpg\"/>\n<p>\n<i>Options page</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Effici \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/357/datas/gallery.jpg\"/>\n<p>\n<i>Default pop-up</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Effici \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/358/datas/gallery.jpg\"/>\n<p>\n<i>Pop-up with blacklisted sites</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>For more effici(ent) study sessions.</p>\n<h2>What it does</h2>\n<p>The pop-up from the chrome extension icon brings up a field where the user can input URLs of websites they do not want to access during their study session. After clicking \"start work mode\", a timer should increment every time the active tab URL matches an URL on the blacklist. Once the timer reaches a certain point (either hard-coded or user-specified, we did not get around to it), a gentle, easily dismissible notification will appear that reminds the user to stay on track. (We did not have sufficient time to implement the timer and notification)</p>\n<h2>How we built it</h2>\n<p>HTML, CSS, Javascript, Photoshop and ImageReady</p>\n<h2>Challenges we ran into</h2>\n<p>Learning the basics of how every file in element interacts with one another since this was our first contact with web development.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Beautiful UI and everything else that we successfully implemented!</p>\n<h2>What we learned</h2>\n<p>The basics of everything, how to google, how to test sample codes</p>\n<h2>What's next for Effici</h2>\n<ul>\n<li>Make sure user types valid URL (check for \".\" ) </li>\n<li>Change URLs to regex with <em>name.com</em></li>\n<li>Individual blacklist URL removal links (x) </li>\n<li>End work mode resets timer </li>\n<li>Extra popup section at top displaying gentle notification</li>\n<li>Implement a timer that works</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/aygao/Effici\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/aygao/Effici\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Verb Catcher ", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Verb Catcher  \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/893/datas/gallery.jpg\"/>\n<p>\n<i>find Verb flowchart</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Verb Catcher  \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/414/datas/gallery.jpg\"/>\n<p>\n<i>find Actual Verb flowchart </i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Verb Catcher  \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/412/datas/gallery.jpg\"/>\n<p>\n<i>find Subject flowchart</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>This project was inspired by the concept of implementing Natural Language Processing (NLP) and string searching algorithms. It mainly aimed towards to solve Logapps LLC's challenge to extract Key Words from the given input .txt file. In this process, The Natural Language Toolkit (NLTK) allows symbolic and statistical NLP for the Python programming.  NLP has a huge potential in a direct real-world application in many different fields, including linguistics, cognitive science, artificial intelligence, and machine learning. </p>\n<h2>What it does</h2>\n<p>Our program takes a .txt file as an input and extracts sentence structures,including subject, verbs, actual verbs, and objects (remaining), from each sentence. Here, actual verbs mean verbs that actually carry meanings in a sentence. For example, in a sentence \"she is loved,\" subject is \"she,\" verb is\"be,\" and actual verb is \"love.\" Furthermore, using the given table of Key Word scores, the program also presents the sum of Key Word score of each sentence. Finally, the program arranges collected data in .csv file output. </p>\n<h2>How we built it</h2>\n<p>After reading and decomposing the paragraphs and sentences, it detects words from a sentence and convert each of them to its base form. Then each word is passed into appropriate functions ,verb passed into _ isVerb_ , to determine the correct form. In this process, it is important to distinguish noun-adjectives(ex. skillful) and verb-adjectives(ex. agreeable) from regular noun, verb, and adjective. To solve this problem, the program checks if the adjective suffix is in the word. </p>\n<p><strong>Simplified algorithm flowcharts are also attached above.</strong></p>\n<h2>Challenges we ran into</h2>\n<p>Enabling computers to derive meanings of human language was the biggest challenge. English sentences are not always as clear as \"subject-verb-objective,\" and enabling program to handle exceptions and extracting the word was complicated.  In addition, imperfection of NLTK part_of_speech tagging, such as detecting the word \"seamless\" as a verb instead of an adjective made it harder to correctly categorize the words . </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>The program demonstrates exceptionally high accuracy in extracting verbs and distinguishing actual verbs from regular verbs by handling various special cases thoroughly. For example, when a sentence contains several verbs linked by commas, it successfully detects all of the actual verbs. It also effectively extracts base nouns and verbs from adjective combinations without break the verb form, which is important as stemming function often modify the verb. Careful handlings on special cases improved the accruracy.  </p>\n<h2>What we learned</h2>\n<p>This project was challenging as none of the team members had prior knowledge in NLP. However, it only gave us more chance to learn about NLP and python programming. It was pretty impressive to see how difficult it is to solve the interaction between computers and natural human language.  </p>\n<h2>What's next for NLP (Natural Language Processing)</h2>\n<p>NLP program can be extended to many different directions. One of the key development points is to enhance the accuracy and be able to handle different exceptions in English sentence structure. The program can also be developed to handle sentence structures in different languages.</p>\n<p>Bird, Steven, Edward Loper and Ewan Klein (2009), Natural Language Processing with Python. O\u2019Reilly Media Inc.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/natural-language-processing\">natural-language-processing</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/nltk\">nltk</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/procramming/tribeHacksNLP/tree/master/tribehacksnltk\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/procramming/tribeHacksNLP/tree/master/tribehacksnltk\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]]]