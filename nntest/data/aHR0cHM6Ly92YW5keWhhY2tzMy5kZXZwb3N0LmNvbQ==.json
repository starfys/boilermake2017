[["St\u00fcckList", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://player.vimeo.com/video/191367241?byline=0&amp;portrait=0&amp;title=0#t=\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"St\u00fcckList \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/443/314/datas/gallery.jpg\"/>\n<p>\n<i>Logo</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"St\u00fcckList \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/336/datas/gallery.jpg\"/>\n<p>\n<i>Main Screen</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"St\u00fcckList \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/337/datas/gallery.jpg\"/>\n<p>\n<i>Adding an item</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"St\u00fcckList \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/339/datas/gallery.jpg\"/>\n<p>\n<i>Barcode Scanner</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"St\u00fcckList \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/338/datas/gallery.jpg\"/>\n<p>\n<i>Product Photo</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>St\u00fcckList started as an idea for a personal project, but between work and school we never seem to be able to get our own personal projects done. So why not spend 36 hours hacking away with your friends and accomplishing something that you will take home and use? We also won't stop developing when we get home, this project has the potential to allow us many more weekends of casual hacking. </p>\n<h2>What it does</h2>\n<p>St\u00fcckList was designed with ease of use in mind. We want you to be able to keep track of every item you have in the kitchen, so when you are out shopping or planning your next 5 star meal, you know what you have and what you might need. </p>\n<p>This is done by combining two fantastic programs Android Mobile Development and Amazon's Echo. The mobile application will allow you to see what products and quantity you currently have in your kitchen so while you are out shopping you know what you need before you get home. </p>\n<p>While you are cooking you don't want to fumble and mess with your phone. This is where Alexia will allow you to have hands free communication with your inventory. Allowing you to tell her what items you are using so you have the most accurate representation of what products are in your kitchen next time you go shopping.</p>\n<h2>How we built it</h2>\n<p>Using a combination of our teams knowledge and assets we were able to each take a very dedicated roles to help each other. Using Android Studio, Java, and SQLite we were able to design the application that we have always wanted! </p>\n<h2>St\u00fcckList was st\u00fcck, more than once</h2>\n<p>There were many difficult challenges along the way. Ranging from, database issues to Amazon Web Services documentation. But allowing ourselves to be flexible and jump from one service to another allowed us to learn about different services and see how they each interacted with our product, till we found a solution that fit or shifting our product to fit the new constraints. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>The team is very proud of our flexibility to adapt to situations as they came up. Not just sticking to one thing that we knew well, but allowing ourselves to explore new options that we may not have known existed. Allowing us to learn a multitude of new ideas, concepts and services. Thanks to the guidance of the sponsors and mentors that participated.</p>\n<h2>What we learned</h2>\n<p>Everyone on our team learned something new this weekend. Since we hit a few road bumps we were able to bounce from one service to another. None of which we were familiar with, allowing us to have a fantastic time learning together and overcoming those challenges. </p>\n<h2>St\u00fcckList's Distant Future</h2>\n<p>Unfortunately we weren't able to get all features working at once. Now that VandyHacks III is over and we had a blast that doesn't mean the end for St\u00fcckList. \nWe plan on:\n*Developing and flushing out all of our features for Android \n*Creating a Rest API using Python/Flask to allow Alexia, Android, and any other service that uses a HTTP request to use our product! \n*Possible iOS application\n*Using Google Home and Firebase, to replace Alexia or have them create the singularity </p>\n<blockquote>\n<h6>Open Source</h6>\n<p>Our team strongly believes in open source! Allowing others to trade ideas, concepts, and designs. Why try to reinvent the wheel when you can help contribute to something you love, or be able to use a design aspect that you haven't seen before. </p>\n</blockquote>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sqlite\">sqlite</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-alexa\">amazon-alexa</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/barcode-scanner\">barcode-scanner</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://cmawhinney.com/stucklist/\" rel=\"nofollow\" target=\"_blank\" title=\"http://cmawhinney.com/stucklist/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>cmawhinney.com</span>\n</a></li>\n<li><a href=\"https://github.com/lukemills/St-cklist\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/lukemills/St-cklist\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I was in charge of database design and implementation. We went through a few different products looking for one that would work for us. We tried Dynamodb, MySQL (restapi), Firebase, just to name a few.", "worked on integrating AWS into the project using amazon Alexa", "I performed the Android development and contributed to the overall aesthetic and functional design of the app."]], ["Visage", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/JUeWS9IIQYE?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Visage \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/804/datas/gallery.jpg\"/>\n<p>\n<i>Lmao we are out here</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Visage \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/777/datas/gallery.jpg\"/>\n<p>\n<i>I messed up</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Visage \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/446/074/datas/gallery.jpg\"/>\n<p>\n<i>Visage alerts you if someone tries to log in to your browser.</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<ul>\n<li><strong>600,000</strong> Facebook accounts are hacked every day [1].</li>\n<li>In May 2016, <strong>24 million</strong> Gmail accounts were hacked [2].</li>\n</ul>\n<p>String passwords aren't very secure, because anyone can type a password. But only you have your face!</p>\n<h2>What it does</h2>\n<p>Visage lets you log in to your social media accounts using your face as a password.</p>\n<h2>How we built it</h2>\n<p>The product is a Chrome extension which uploads images to a Node.js server hosted on AWS.</p>\n<p>Facial recognition is performed on the images using Python and OpenCV. For facial recognition we trained a logistical regression model on a dataset of eigenfaces generated from the AT&amp;T Database of Faces [3] as well as normalized images of Matt's face.</p>\n<p>When Visage verifies your face, a new tab opens for each of your social media sites. Login is done automatically by selecting text inputs and buttons with jQuery.</p>\n<p>We use Twilio to send an alert to the user if an intruder attempts to sign into their browser.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>It works!</p>\n<p>[1] <a href=\"https://techcrunch.com/2011/10/28/facebook-sees-600000-comprised-logins-per-day/\" rel=\"nofollow\">https://techcrunch.com/2011/10/28/facebook-sees-600000-comprised-logins-per-day/</a></p>\n<p>[2] <a href=\"http://www.reuters.com/article/us-cyber-passwords-idUSKCN0XV1I6\" rel=\"nofollow\">http://www.reuters.com/article/us-cyber-passwords-idUSKCN0XV1I6</a></p>\n<p>[3] <a href=\"http://www.cl.cam.ac.uk/research/dtg/attarchive/facedatabase.html\" rel=\"nofollow\">http://www.cl.cam.ac.uk/research/dtg/attarchive/facedatabase.html</a></p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/opencv\">opencv</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/ridoy/visage\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ridoy/visage\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Backend: image upload server, face recognition, twilio. Helped out with frontend design", "I helped with the Frontend. I focused on the automatic logins into social media sites and cleaning up the overall product."]], ["Spinthrift", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Spinthrift \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/446/245/datas/gallery.jpg\"/>\n<p>\n<i>Spinthrift - Home feat. Chat</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Spinthrift \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/553/datas/gallery.jpg\"/>\n<p>\n<i>#MakeShoppingFunAgain</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p><strong>Shopping isn't fun anymore.</strong></p>\n<p>Autobidding software is ruining eBay: scripts hosted on blazing-fast internet connections click 'bid' at the last moment, faster than a human possibly could. That's no fun.</p>\n<p>Penny auction sites are confusing: they often use 'bids' as a middleman currency, and have all sorts of restrictions. They offer very little transparency, and their inventory is limited to cheap items. That's no fun.</p>\n<p>All the above eCommerce platforms also have a fundamental flaw, from the user's perspective: bidding on an item effectively raises its cost. This can be abused by vendors. That's no fun!</p>\n<p>So how can we #MakeShoppingFunAgain?</p>\n<p><strong>Enter Spinthrift.</strong></p>\n<h2>What it does</h2>\n<p>The elevator pitch says it best. <strong>Pay 10% of the cost of an item for a 10% chance of winning it.</strong></p>\n<p>To elaborate a bit: multiple slots can be purchased by the same user. Once all ten slots have been purchased, the Spinwheel selects a winner at random. If no slots have been purchased by anyone yet, the  'Buy it Now' feature is available for the item.</p>\n<h2>How I built it</h2>\n<p><strong>Lots and lots of RAMEN!</strong> No, not the noodle-turned-programmer-fuel. I'm talking about my handcrafted software stack, the main components of which are React, Alt, MongoDB, Express, and Node. React is Facebook's brilliant view layer framework, and Alt is a kickass implementation of Facebook's Flux paradigm, courtesy of Airbnb's goatslacker. The analogy far from perfect, but React is the 'V' in 'MVC', while Alt covers the 'M' and 'C'.</p>\n<p>I've spiced up my RAMEN: it features universal (previously isomorphic) Javascript for improved initial page load, SEO, and support for browsers with Javascript disabled. I also use a custom view-layer navigation and page loading system to automatically handle authentication/authorization, as well as to ensure the data needed by the view layer has been retrieved and properly parsed for rendering.</p>\n<p><strong>On the backend, I've prioritized security and scalability.</strong> Sanitizing sensitive ObjectIds and rolling my own custom schema/model middleware for the Spinthrift API has enabled fine-grained control over (and tracking/analysis of) data transactions and security events.</p>\n<p><strong>Confession:</strong> I did something I shouldn't have, in the name of learning! I rolled my own salting and hashing, as well as my own session middleware augmented by Passport.js. To all you CTOs out there, I'm sowwy. ^_^</p>\n<h2>Challenges I ran into</h2>\n<p>This project gave me a valuable chance to engage with new technology. That implied some hiccups as I learned. Some of the more hiccup-ridden features are:</p>\n<ul>\n<li>Image hosting (AWS S3 integration)</li>\n<li>Websockets/push notifs (for Chat)</li>\n<li>Server-side cookie forwarding</li>\n<li>React animations/transitions</li>\n<li>Custom SVG clip-path (used for the Spinwheel)</li>\n<li>Cryptography (for salting &amp; hashing)</li>\n</ul>\n<h2>Accomplishments that I'm proud of</h2>\n<ul>\n<li><strong>Taught my little brother to code and brought him to his first hackathon!</strong></li>\n<li>Improved my RAMEN recipe by learning and incorporating a bunch of new 'best practices'.</li>\n<li>Created a pluggable chat sidebar widget, complete with 'Recent' and 'Search' tabs and an intuitive chat thread UI.</li>\n<li>Finished something tangible. Glad to be able to spare the judges a bunch of console printouts and wireframes!</li>\n</ul>\n<h2>What I learned</h2>\n<ul>\n<li>To teach is to learn.</li>\n<li>I need to find a mentor.</li>\n<li>It never hurts to think like a hacker!</li>\n<li>Implementation is everything.</li>\n<li>Effort should not be confused with achievement.</li>\n<li>Everything listed under 'Challenges I ran into'</li>\n</ul>\n<h2>What's next for Spinthrift</h2>\n<p>Trajectory:</p>\n<ul>\n<li>MSP (minimum saleable product) within two weeks.</li>\n<li>Port app to mobile via React Native or Xamarin within a month.</li>\n<li>Then...</li>\n</ul>\n<p><strong>#MakeShoppingFunAgain!</strong></p>\n<h2>Shoutouts</h2>\n<p>None of this would have happened without my sensei, Daniel-San, who I first encountered on a rock in the middle of the Pacific. He remains a valuable source of wisdom and entertaining texts. I cannot overstate the importance of the latter.</p>\n<p>All of this would have happened without Nutella, but the world would be a sadder place without it. So thank you, Nutella. Please always exist.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/react\">react</a></span></li><li><span class=\"cp-tag\">alt</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li></ul>\n</div>\n</div>", ["I built Spinthrift.", ""]], ["Spendle", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Spendle \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/443/971/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Spendle \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/443/974/datas/gallery.jpg\"/>\n<p>\n<i>Sign up screen</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Spendle \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/443/976/datas/gallery.jpg\"/>\n<p>\n<i>Location Tracking is done in the background</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Spendle \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/443/977/datas/gallery.jpg\"/>\n<p>\n<i>A sample text a user receives from Spendle</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>In today's world, money management plays a huge part in our lives, from simple things like saving up for a fun purchase to planning for retirement.  Every day becomes increasingly more difficult to handle personal finances with all of the positive reinforcements associated with impulse spending and consumerism.  We feel that current budgeting tools lack the ability to tie spending data with location data -- this is where Spendle comes in.</p>\n<h2>What it does</h2>\n<p>Spendle tracks your location and spending habits.  Whenever you approach an area close to a bad spending habit, Spendle will send a text message to you to help you break away from your habit.</p>\n<p>For example, if you order at a coffee shop daily, Spendle will send you a text message when you approach the coffee shop that you order at -- encouraging you to save the money and spend your day away from your spending habit.</p>\n<h2>How we built it</h2>\n<p>Spendle was built from the ground up using Objective-C and the iPhone SDK to produce a responsive, beautiful application.  On the back end, Spendle is run on a Python Heroku server using Flask, Postgresql, and the Twilio and Capital-One APIs (go Nessie!).  The two communicate through JSON formatted POST requests.</p>\n<h2>Challenges we ran into</h2>\n<p>The first main challenge that we encountered was generating the purchase data for our test customers.  Nessie provided the framework for hosting the data, but we had to generate all of the necessary details to make the data valid, including creating customer accounts, customer details, and purchase history.</p>\n<p>Another challenge we found ourselves with was designing a system for flawless communications between two different applications.  To coordinate our backend Python server with our iPhone application, we had to carefully design a simple API that would allow us to communicate all the necessary details while still being as concise as possible.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Our stack includes a lot of elements, and getting everything to work together seamlessly was no small feat!  We are really proud of how well all of our moving parts work together, and our team did a fantastic job of voicing concerns and joining together to form a solution whenever we struggled getting two elements to work together.</p>\n<p>On a less technical side, we are very proud of our idea.  While everyone might have a favorite budgeting application, no one's uses location data to help the user better manage their money.  We are very happy to be able to share this idea with you today, and we are all so proud of how well our idea transitioned into a product.</p>\n<h2>What we learned</h2>\n<p>Going into this project, our team lacked a lot of the technical experience with the stack we used.  While we are all seniors at the University of Alabama, our experience is very varied, and we each chose parts of this project to work on that were outside of our area of expertise.  Doing this let each of us learn new parts of the stack while still having immediate access to another member who was much more familiar with the material.</p>\n<h2>What's next for Spendle</h2>\n<p>The next steps for Spendle mainly focus around generating a better algorithm to determine bad spending habits.  Ultimately, using machine learning to learn the habits of each customer would be the ideal scenario.  Along with a better algorithm, creating an Android app and moving our backend to a more scalable solution such as AWS will help Spendle grow into the premier smart budgeting solution we know it can be.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/iphone-sdk\">iphone-sdk</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/objective-c\">objective-c</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/postgresql\">postgresql</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/capital-one\">capital-one</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/heroku\">heroku</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/jzarob/spendle-ios\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/jzarob/spendle-ios\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/jzarob/spendle-api\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/jzarob/spendle-api\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on generating data using the Nessie API and Twilio integration. I've never used APIs this in depth before, and this was my first time using Twilio. I learned a lot about REST and communicating a ton of different services with each other!", "I worked on getting the iOS app to send location data to the server endpoint. Tried to make it as elegantly designed as possible.", ""]], ["Paktly", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Paktly \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/274/datas/gallery.jpg\"/>\n<p>\n<i>OneTime registration page</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Paktly \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/273/datas/gallery.jpg\"/>\n<p>\n<i>Add Pakt Screen</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Paktly \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/272/datas/gallery.jpg\"/>\n<p>\n<i>QR Code for pairing to pakt</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Paktly \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/275/datas/gallery.jpg\"/>\n<p>\n<i>Apps list to pick for blocking</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Paktly \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/276/datas/gallery.jpg\"/>\n<p>\n<i>App select screen</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Paktly \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/278/datas/gallery.jpg\"/>\n<p>\n<i>Active Pakts</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Paktly \u2013 screenshot 7\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/279/datas/gallery.jpg\"/>\n<p>\n<i>Break Pakt!</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>If you notice yourself sliding into the sinkhole of distraction for example Facebook, Twitter, WhatsApp apps when you should be focusing on more important tasks, then \"Paktly\" is the app for you. The app allows a friend to lock your Smartphone, to surpass your uncontrolled self actions!</p>\n<h2>What's a Pakt?</h2>\n<p>Pakt is a mutual electronic agreement between two users to lock apps that could cause distraction on each others smartphones. The pakt is made for a time which is mutually decided upon by the users at the time of the formation of the pakt. A pakt can be broken, doing so however causes the breaker of the pakt to accumulate a small penalty. </p>\n<h2>How we built it</h2>\n<p>We used Android Studio for making the Android application. The application also uses a Java server that manages the pakt and also handles the transactions with the Capital One's Nessie API. We make use of the Nessie API for giving the user a small penalty when a pakt is broken. </p>\n<h2>Challenges we ran into</h2>\n<p>we ran into some issues when trying to use Capital One's Nessie API to update rewards. . </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>At first we were working on a tangential idea when this idea suddenly struck us. We, started working on this idea in the last 8 hours. However, we were able to reach a satisfactory level of completion.\nThis app we feel would resonate with a lot people who wish to cope up with their distractions.</p>\n<h2>What we learned</h2>\n<p>Learning is a continual process. In this Project we learnt what it means to collaborate and meet deadlines with minimal distractions.</p>\n<h2>What's next for Paktly</h2>\n<p>We also plan to incorporate NFC phi-5 API, thereby enabling something like hifi / tap and pact. We also plan to revamp our UX with much more re-activeness. There is scope for offering lot more incentives in order to motivate our users. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://www.paktly.com/\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.paktly.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.paktly.com</span>\n</a></li>\n<li><a href=\"https://www.github.com/ak681443/Paktly\" rel=\"nofollow\" target=\"_blank\" title=\"https://www.github.com/ak681443/Paktly\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the android application and this was the first time I worked on interfacing via NFC so I learnt a lot. I also learnt a lot on managing time and getting a product out in small chunks. The presentation also taught me how to put your idea out into the world so that people can actually use and appreciate it.   ", "", "", ""]], ["resume-app", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>resume-app</h1>\n<p>Resume App for VandyHacks</p>\n<p>A webapp to make resume sharing faster and easier</p>\n<h2>Technology Used</h2>\n<ul>\n<li>Jade for templating</li>\n<li>Bootstrap for styling</li>\n<li>Node.js/Express for routing</li>\n<li>Heroku for deploying</li>\n<li>MongoDB for database</li>\n<li>Amazon Web Services as CDN</li>\n</ul>\n<h2>Install/Use Instructions</h2>\n<ul>\n<li>clone the repo <code>git clone git@github.com:emmy917917/resume-app.git</code></li>\n<li>go into resume-app directory <code>cd resume-app</code></li>\n<li>run <code>npm install</code> to install dependencies</li>\n<li>run either <code>node app.js</code> or <code>npm start</code> to run app locally</li>\n<li>go to localhost:3000</li>\n</ul>\n<h2>Team</h2>\n<ul>\n<li>Daniel Zheng - <a href=\"https://github.com/dan-zheng\" rel=\"nofollow\">https://github.com/dan-zheng</a></li>\n<li>Emmy Zhang - <a href=\"https://github.com/emmy917917\" rel=\"nofollow\">https://github.com/emmy917917</a></li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/heroku\">heroku</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://resume-app-vandy.herokuapp.com/\" rel=\"nofollow\" target=\"_blank\" title=\"http://resume-app-vandy.herokuapp.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>resume-app-vandy.herokuapp.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Routing, back-end", ""]], ["Gstr (Gesture)", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/mIVwasDgqzM?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Gstr (Gesture) \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/442/483/datas/gallery.jpg\"/>\n<p>\n<i>Demonstrating sign recognition</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Gstr (Gesture) \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/442/484/datas/gallery.jpg\"/>\n<p>\n<i>Hello!</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Gstr (Gesture) \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/442/486/datas/gallery.jpg\"/>\n<p>\n<i>Our webapp can also be used to learn sign language</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Gstr (Gesture) \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/442/487/datas/gallery.jpg\"/>\n<p>\n<i>Correctly doing the \"L\" sign</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Gstr (Gesture) \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/442/485/datas/gallery.jpg\"/>\n<p>\n<i>Incorrectly doing the \"L\" sign by doing an \"O\" instead</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Gstr (Gesture) \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/442/482/datas/gallery.jpg\"/>\n<p>\n<i>Having others try to spell \"Hello\"</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>What is our Inspiration</h2>\n<p>We were inspired to work with people with disabilities, Sydney has a neice that is developmentally disabled and she has always wanted the opportunity to integrate her love for the community and her love for programming so we came together as a team to make that dream a reality.</p>\n<h2>What we built</h2>\n<p>Machine learning is a topic of great interest in the tech community for quite some time and is something our team an members have been looking forward to working with. We built a web based application that recognizes sign language from visual input that we taught clarfai and outputs the text and audio corresponding with each letter.</p>\n<h2>How we built it</h2>\n<p>We used the Clarfai API to train our models to recognize some letters. We used over 1,000 points of data collected throughout the hackathon from various people as shown in the video. We then submit an image of our hands to the server to process the image and return the letter that bests resembles our models. We then print the text based on a confidentiality percentage with Javascript.</p>\n<h2>Challenges we ran into</h2>\n<p>Effectively collecting data points for our various models and being able to parse through the results to retrieve the correct letter. </p>\n<h2>What we learned</h2>\n<p>Clarifai API, Neural networks, Artificial intelligence, and image recognition technology.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/machine-learning\">machine-learning</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag\">bcrypt</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li></ul>\n</div>\n</div>", ["Worked mainly on the front end pages and linking the Clarifai with our webapp. This included sending requests and receiving requests and being able to interact with it. I also worked on some of the back end on Node for page routing and logins.", "Trained the Clarifai model using the images that were collected by my teammates using Node.js as well as the Clarifai GUI. ", "", ""]], ["Ransome: Giving You A Run For Your Money", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We like the <strong>idea</strong> of fitness. But as we all know, it's hard to convince ourselves to work out on a consistent basis. We wanted an app that was insanely motivational, so we decided to blend two daunting motivators: losing money and having your friends know how lazy you actually are. We figure having financial and social investments will help you reach your fitness goals as you run toward becoming a more active you.</p>\n<h2>What it does</h2>\n<p>Enter Ransome, the motivational fitness app that takes your money. (No, really.) Put up some money as a \"ransome,\" and set a fitness goal you have to reach before you can get your money back. Invite your friends, and form groups so you can work on your goal alongside your friends. </p>\n<p>Want to start walking a mile a day? Find some friends who do too. Set a goal to walk a mile every day for a week, and get your money back at the end of the week if you meet your goal. Additionally, if you complete your goal, you get to split the ransoms of teammates who didn't meet the goal among those of you who did. If you don't meet your goal, your money is divided up among the friends in your group who met it. (Since they're your friends, you <strong>know</strong> they're not going to give your money back to you.) Put the work in, and get your ransome out.</p>\n<p>Ran some? Get your ransome. You owe it to yourself.</p>\n<h2>How we built it</h2>\n<p>What's in our wallets? We're using the CaptialOne API, Nessie, to simulate in-app payments.</p>\n<p>We look at your phone's health data to log your fitness activity in the app.  </p>\n<p>We are also using Ionic 2 and Angular JS 2 to create the app. We're using Typescript, ES6, and JavaScript.</p>\n<p>Our backend is using Flask, Python, Postgre SQL, and SQL Alchemy.</p>\n<h2>Challenges we ran into</h2>\n<p>We're 3 backend engineers and a graphic designer, and we're not frontend app developers by any means. We stayed consistently challenged at trying to make our app everything we hoped and dreamed it could be.  </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>...and we're really proud that we've learned so much about how to make apps using Ionic 2.</p>\n<h2>What we learned</h2>\n<p>We've learned a lot about Javascript this weekend. </p>\n<h2>What's next for Ransome: Giving You A Run For Your Money</h2>\n<p>We'd love to keep moving along to make it more well-designed/skinned, now that the key functionality is in place. </p>\n</div>\n</div>", ["Built the iOS/Android mobile app with Ionic 2, Angular 2, TypeScript, and JavaScript ES6 (with Parker Diamond)", "Worked on the backend", "", ""]], ["MedCheck", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/O1rgYC2ir5M?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"MedCheck \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/443/435/datas/gallery.jpg\"/>\n<p>\n<i>The echo, and pill enclosure with the web app running on a desktop.</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>MedCheck</h1>\n<h2>A friendly reminder to take your medicine</h2>\n<h1>What it does</h1>\n<p>MedCheck Is a medication adherence utility that runs primarily through the Amazon Echo, Echo Dot, and other Alexa enabled IOT Devices. The app uses scheduled events and persistent updates through firebase to remind the user to take any daily medications as well as keep track of whether or not certain medications have been taken for the day/on schedule. Additionally, the app is linked to a daily hardware pill planner with LED indicators to designate whether or not medications for a particular day need to be taken (the current day will be highlighted blue if medication for the day has been taken). The pill planner was made using a raspberry pi, LEDs, and a store-bought pill container. Additionally, using the Telegram API, Medcheck will send a reminder to the user's web-enabled device to take medication, presenting a use case for personal reminders as well as care takers who need to keep track of what meds they are administering. The user or caretaker can ask the Echo at any time how many of a certain medicine is remaining, how many days until the next available refill, and whether or not there are any refills remaining, and whether or not you've taken a certain dosage for the day. Their is also a web component that allows the user to get, at a glance, a view of any and all medications, the ability to refill them through their preferred pharmacy, as well as a countdown-timer for the next dosage of any medications.</p>\n<h1>Inspiration for this project</h1>\n<p>CJ had come up with the idea for a medication adherence app from having several daily medications that were at times hard to keep track of. As he put it, the only thing worse than forgetting to take your meds is forgetting whether or not you took your meds. MedCheck presents itself as having the potential not only for individual uses to better manage their medication routine, but also for caretakers needing to keep up with their dependents' medical needs effectively.</p>\n<h1>Problems we ran into</h1>\n<p>Amazon Web Services had a big learning curve for us. None of us had ever used any of the services and didn't have tons of experience with nodejs. There was a lot of documentation to wade through to get exactly what we wanted.  The Alexa voice API in particular was lacking key built-in features that we had to come up with creative solutions to get past. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag\">lambda</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag\">cloud9</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/TheRobotCarlson/MedCheck\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/TheRobotCarlson/MedCheck\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the C++ code for the Raspberry Pi.  Using a library called TgBot, the code I wrote provides a text interface with the project using Telegram.  The code also updates the Firebase  database for use by the Amazon Echo.", "I worked on the circuit that interfaced the pill scheduler with the Raspberry Pi.  The Raspberry Pi can check if one of the pill scheduler lids was opened by the circuit disconnecting.  The Raspberry Pi can then perform an action based on that event, e.g. notifying a caretaker if their person in care took their medicine.", "I setup and wrote the code for the Lambda Amazon Web Service that we used for interfacing with our Firebase database and Amazon Alexa, both of which I got up and running. I helped bring together all the different components into one unified and working project.", ""]], ["UNAFRAUD", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"UNAFRAUD \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/443/633/datas/gallery.jpg\"/>\n<p>\n<i>An example graph we created to demonstrate the implementation of a topology like the one used in our project</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"UNAFRAUD \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/443/665/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>What do we do?</h2>\n<pre class=\"language-nolang\"><code>We want to make sure that our banking customers have no fear! We monitor purchases and transactions made on a customer\u2019s account, looking for anomalies that could indicate fraudulent purchases. We alert our customers via text message in order to get the potential issue resolved as quickly as possible, allowing them to remain unafraid of fraud. \n</code></pre>\n<h2>What challenges did we face?</h2>\n<pre class=\"language-nolang\"><code>One of our biggest challenges was Python. We previously had limited Python experience, and even though we picked up pretty well, our unfamiliarity definitely caused a few hiccups.\nWe also struggled quite a bit using Twilio\u2019s API, specifically in the transition to import the specific messages to send. This is a place our code could even still be streamlined and smoothed out; regardless, our automated text messages are still a success!\nNessie had a pretty big learning curve, and caused some hold-ups early on in our project. However, once we got on the other side of that curve, it went much more smoothly and really made our project what it is today (and most of yesterday)!\n</code></pre>\n<h2>What did we learn, and what are we proud of?</h2>\n<pre class=\"language-nolang\"><code>We are really excited for how this project came out! We got to make something that we can point to with pride as something that, although not even comparably secure or reliable to what a large company would be capable of, has a clear real-world purpose and application. We also got the opportunity to learn a lot about implementing APIs and coding Python and to meet some pretty cool people along the way!\n</code></pre>\n<h2>How did we do it?</h2>\n<pre class=\"language-nolang\"><code>We used CapitalOne\u2019s API, Nessie, to simulate customers, their accounts, and transaction data.\nWe then analyzed this data, looking for atypical transaction behaviors of our customers, using a graph based anomaly detection, or GBAD for short.\nOnce we found those anomalies, we want to alert our customers, so we send them text alerts using Twilio\u2019s API\n</code></pre>\n<h2>What\u2019s next for Unafraud?</h2>\n<pre class=\"language-nolang\"><code>The next step for Unafraud would definitely be to account for more types of transactions. We started small, doing only money transfers between our customers, but we would love to be able to include purchases from other merchants, withdrawals from ATMs, etc. \nWe would also love to expand our customer base and the duration of data collection. We intentionally kept numbers small while working out the kinks, so now that it\u2019s working (and once we get other transaction types implemented), it\u2019ll be about time for us to grow!\nFinally, we would like to create a website and/or phone service (accessible via the text message) that allows customers a more detailed look at the atypical behaviors so that they can approve or deny it. However, that would come way later in the development process\n</code></pre>\n<h2>Can we believe how ridiculously scripted my questions are?</h2>\n<pre class=\"language-nolang\"><code>Honestly, no.\n</code></pre>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">nessie</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/capital-one\">capital-one</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li><li><span class=\"cp-tag\">no-sleep</span></li><li><span class=\"cp-tag\">anomaly-detection</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/chrisdean258/gbad-cap1.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/chrisdean258/gbad-cap1.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Worked with the Twilio API to send messages to the phone. I had to write python, which I've never user before. I also helped with debugging of the other python classes to help make everything run smoothly.", "", ""]], ["Holmes", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Ever wanted to have a butler <strong>AND</strong> a watchman but didn't have the money to afford either? Well, we did and so we built Holmes, your very own intelligent home assistant. </p>\n<h2>What it does</h2>\n<ol>\n<li><p>Captures photos of all incoming people at the door of the house and verifies their identity against a pre-populated database of recognized individuals using the Microsoft Cognitive Services API. If verified, the name is added to the Initial State database with the following keys: Name, Status (inside or outside), Recognized (yes or no), Time of entry, Number of people in the house. It also has the ability to add the recognized image to the database to further train itself and become 'smarter'. If the individual at the door is not recognized, a text message with an image of the unidentified individual is sent to the owner via Twilio.</p></li>\n<li><p>Tracks the total number of people inside the house at any given point of time by tracking both incoming and outgoing traffic.</p></li>\n<li><p>Once a person is granted entry into the house, he/she is greeted (by name) by Alexa and asked for choice of music to play. </p></li>\n<li><p>The owner can monitor all said data in real time on his/her Initial State dashboard.</p></li>\n</ol>\n<p>The entire program runs on Intel-Edison i.e. the Edison works as the main computer for the execution. </p>\n<h2>How we built it</h2>\n<p>Used Python as our main language and installed the latest version on Edison for compatibility. The program runs entirely on Edison and works remotely too. </p>\n<h2>Challenges we ran into</h2>\n<ol>\n<li>Finding a room to begin our hack.</li>\n<li>Compatibility issues with the Edison.</li>\n<li>Connecting the camera to Edison and making it capture images in a fixed interval of time.</li>\n<li>Producing text to speech output on Alexa</li>\n</ol>\n<h2>Accomplishments that we're proud of</h2>\n<p>Since it was our first time hacking on hardware, we were quite excited about how we would go about it. We are especially proud of how we managed to integrate 3 hardware devices (Intel-Edsion, Camera, and Amazon Echoand 4 APIs (Microsoft Cognitive Services, Bing Text to Speech, Initial State, and Twilio).</p>\n<h2>What we learned</h2>\n<ol>\n<li>Integrating hardware with our programs and scripts.</li>\n<li>Converting text to speech and producing the output on Alexa. </li>\n</ol>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/shell\">shell</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/intel-edison\">intel-edison</a></span></li><li><span class=\"cp-tag\">microsoft-cogntive-services-api</span></li><li><span class=\"cp-tag\">logitech-webcam</span></li><li><span class=\"cp-tag\">initialstate-api</span></li><li><span class=\"cp-tag\">bing-text-to-speech-api</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-alexa\">amazon-alexa</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li><li><span class=\"cp-tag\">iot</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/akarshh/Holmes\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/akarshh/Holmes\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Crystal Ballin", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Crystal Ballin \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/446/796/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>Crystal Ballin' is a program using the <a href=\"https://www.stattleship.com/\" rel=\"nofollow\">Stattleship</a> API and genetic algorithms to make predictions on the outcome of NBA games. It then offers you information from SeatGeek for upcoming game information, including average ticket price. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/seatgeek\">seatgeek</a></span></li><li><span class=\"cp-tag\">seatgeek-api</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/osillyscope/CrystalBallin\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/osillyscope/CrystalBallin\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the SeatGeek integration. I learned a lot about using public API's and genetic algorithms! ", "I wrote code that queries the stattleship API in Python. It mainly involved figuring out how to break down the data we were getting back and sending it to other parts of code.", "I developed the Genetic Algorithm that was used to process the previous seasons'  stats and produce a formula to predict the outcome of upcoming games based on those statistics.", ""]], ["Cyberbully Flagger", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Cyberbullying is becoming an increasing problem on social media and it is hard to make people change their online behavior.  Individuals feel as if they are actually hurting anyone with the content that they post on social media sites, but in reality it can have a major impact on cyberbully victims.</p>\n<h2>What it does</h2>\n<p>Our program searches the tweets of the user and the users friends to find if they have aggressive or negative language patterns that insinuate cyberbullying patterns, then it flags those users and returns their names at the end with a percentage of how many of their tweets are considered mean. </p>\n<h2>How I built it</h2>\n<p>We used the Twitter API and the Watson Natural Language Classifier API to gather and filter through the Twitter information. Using the Watson API, we were able to scan through the tweets to find cyberbullying patterns in the tweets.  Before scanning the tweets,  we had to \"train\" the Watson API to recognize cyberbullying behavior.  If cyberbullying patterns were found, we flagged the friend and when the program finished we returned a list of the users friends that were considered cyberbullies and the percentage of mean tweets from that friend.</p>\n<h2>Challenges I ran into</h2>\n<p>We had trouble figuring how to get the Twitter data, and how to properly train the Watson Natural Language Classifier API.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We are proud that we have a working model, and that the Cyberbullying Finder solves a real issue and can make a true impact on individuals.</p>\n<h2>What I learned</h2>\n<p>How to use API's in python, how to query Twitter data using their API, machine learning techniques, and how to use the Watson API.</p>\n<h2>What's next for Cyberbully Flagger</h2>\n<p>Next we want to make it scaleable for a website, so that anyone around the world can use it.  Also to make it useable for other platforms besides Twitter.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twitter\">twitter</a></span></li><li><span class=\"cp-tag\">watson-api</span></li><li><span class=\"cp-tag\">watson-natural-language-classifer-api</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/sambartek/Cyberbully-Finder\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/sambartek/Cyberbully-Finder\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on extracting the data from Twitter, and filtering out the user from his/her friends. I then filtered out their individual tweets and sent them to the Watson Natural Language Classifier to determine if the tweet was considered bullying or not.  I then created an algorithm to determine if someone was flagged as a cyberbully based on how many mean tweets they had.  I did this using the Twitter API and I used python to sort and configure the data. I also helped create the data to train the Watson API, and I formatted the output so it was easy for the user to understand.", "I worked on training the Watson Natural Language Classifier and implementing the API queries. I had to compile data in CSV format and classify various key phrases as derogatory or not. Using this data I trained the the Watson  Natural Language Classifier API to distinguish between the two classifications. I then implemented various query commands in our python file that pulled the algorithm from the Watson API. This facilitated all the checking of the users tweets and his or her friends tweets."]], ["Sensor Spot", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Sensor Spot \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/477/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Sensor Spot \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/478/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Sensor Spot \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/479/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Sensor Spot \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/480/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Sensor Spot \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/488/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Sensor Spot \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/915/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>When seeking limited resources, such as a parking spot, washer/dryer in a laundromat/dorm, or desk in a library, tracking down the resource and checking its availability can be anything from a minor nuisance to a time drain on the magnitude of hours. The power of the Internet Of Things can allow users to check all of this easily and quickly.</p>\n<h2>What it does</h2>\n<p>The variety of distance, temperature, humidity, pressure, and infrared sensors transmit signals to a local machine via Bluetooth. After relaying interpretations of those signals to a database and an Initial State Data Bucket, the user can check availability of spaces on our website. Moreover, users and administrators can view a dashboard to see current traffic, traffic over time, apparent temperature, and other descriptive statistics about the room to plan optimizations to the flow of traffic. This insight would be impossible without real-time data from continuously running sensors and is very convenient to use.</p>\n<h2>Use Cases</h2>\n<p>We have two distance sensors that can detect people sitting at desks, parked cars, etc. and tell the user which spaces are open via the website and dashboard. We also detect apparent temperature and overall traffic of the room. </p>\n<p>Two strain gauges can be placed in elevators to determine if it is quicker to take the stairs or the elevator. A strain gauge could also function as a pressure pad in a hallway to measure foot traffic through a specific point.</p>\n<p>The Initial State API allows the user not only to see the current state of floors and rooms in a building, but also a graph of the history of the conditions so that the user can have a more informed experience.</p>\n<p>This system would be excellent for planners at events like hackathons where there is limited space. Hackers could freely stake out space while automatically letting everyone who has access to the web app know what spots they have claimed, saving time.</p>\n<h2>How I built it</h2>\n<p>The sensors are connected to Arduino nano boards and transmit signals via Bluetooth. A local machine running a Python script and multiprocceses continuously listen for all signals to send to a database and the Initial State API. A website allows users to quickly view available spaces and the dashboard. They can also submit pictures to know exactly which space is occupied/available. </p>\n<h2>Challenges I ran into</h2>\n<p>Calibrating the specificity of the distance sensors was an arduous trial and error process because they react differently with the Bluetooth module and can interfere with one another. </p>\n<h2>What I learned</h2>\n<p>The team learned about the workflow of a project like this and how to incorporate API\u2019s like Initial State\u2019s into their project.</p>\n<h2>What's next for Smart Sensors</h2>\n<p>If we were to continue this project we would add different types of sensors to collect more data about conditions. We would also improve on how occupied spots our sensed so that we could have better accuracy.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag\">vex</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://vingkan.github.io/vandyhacks2016/\" rel=\"nofollow\" target=\"_blank\" title=\"https://vingkan.github.io/vandyhacks2016/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>vingkan.github.io</span>\n</a></li>\n<li><a href=\"https://github.com/varoonp123/VandyHacks2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/varoonp123/VandyHacks2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/varoonp123/VandyHacks2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/varoonp123/VandyHacks2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I designed and created all of the circuits and digital logic. I soldered many protoboards for the ultrasonic sensors and the amplifier adc for the strain gauges.", "I created the web page to browse open rooms and integrated the phone's rear camera to allow users to add photos of the workspace.", "I worked on the back end including transmitting sensor data to a database and to the Initial State API. I also implemented multiprocessing so all sensors could continuously push data. "]], ["Lactic Acid Real-Time Spectroscopy (LARS)", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Lactic Acid Real-Time Spectroscopy (LARS) \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/443/797/datas/gallery.jpg\"/>\n<p>\n<i>LARS MK I</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Dr. Susan Eagle of Vanderbilt Medical Center's Division of Cardiothoracic Anesthesiology challenged us to develop a technique for measuring lactic acid concentration in a patient in real-time without drawing blood. As undergraduates in Vanderbilt's Biomedical Engineering program we resolved to apply concepts we had learned in class as well as the intensive work ethic developed during our time at the university in order to take on this far-reaching, critical issue.</p>\n<h2>What It Does</h2>\n<p>This prototype serves as a proof of concept for a device which uses phototransistors to detect wavelengths of light in the Infrared Spectrum and outputs usable data. </p>\n<h2>How We Built It</h2>\n<p>After spending the first 9 hours of the Hackathon conducting research and putting together a theoretical design, we directed our energy towards proving a foundational principle of our design: detection of light in IR wavelengths can be accomplished inexpensively in in real-time. We started with a sketch on a whiteboard which quickly allowed us to identify the components we needed: an arduino microcontroller, LED, IR light source, and a photoresistor. With the help of Major League Hacking we were able to obtain all the parts we needed, and, after some critical IT support from MLH coordinator Shy, get the arduiono connected to a laptop. After overcoming an initial learning curve and some functionality issues in our LED we hit the ground running and wrote a simple, but highly sensitive program for detecting low-energy light (i.e. infrared light). Once we had everything up and running it was time to put our device to the test. Our code was designed to turn on an LED when the photoresistor detected near darkness; therefore, the LED would only turn off if the photoresistor experienced a blast of light energy. Sitting in darkness we ran the code and aimed our IR source, a Samsung Galaxy S6, at the photoresistor. We activated the beam and sent several pulses of invisible light at the device, and, to our excitement and relief, the LED blinked off and on in sequence! We conducted dozens of additional trials controlling for other sources of light until we were certain that stimulation from the IR source alone was causing activity in the photoresistor. Once this was proven, all that was left was to build the housing for the device, and begin dreaming up the next iteration of LARS. </p>\n<h2>Challenges We Ran Into</h2>\n<p>One of the greatest challenges we encountered was identifying the ideal wavelengths of light absorbed by lactic acid. Although this is an incredibly common and well studied chemical in medicine, the literature of UV-vis spectroscopy of lactic acid is limited. These ideal wavelengths (i.e. the \"LARS wavelengths\") were actually discovered by a team in Spain conducting spectroscopic analyses on compounds found in wine; luckily for us, lactic acid is one of those compounds so we were able to obtain two unique peak absorption wavelengths in the IR spectrum. The entire project hinged upon the discovery of these wavelengths. </p>\n<p>Other problems from faulty connections and broken diodes, to coding errors and upload issues presented significant and frustrating time delays, but were thankfully corrected with more than a little help from our gracious VandyHacks hosts. </p>\n<h2>Proudest Accomplishment</h2>\n<p>Although there are existing products which make use of light spectroscopy to obtain lactic acid concentration, none of these devices do so directly. All current devices obtain measurements for other molecules in the body such as hemoglobin and then rely on an algorithm to ascertain and estimate lactic acid concentration. We have identified a technique which allows for direct measurement of lactic concentration without drawing blood and without presenting large cost or time barriers. </p>\n<h2>What We Learned</h2>\n<p>Research is everything. This entire project was made possible through the identification of the LARS wavelengths, an endeavor which was only accomplished after 9 hours of pouring over scientific journals and databases. </p>\n<h2>What's Next for L.A.R.S. - Lactic Acid Real-Time Spectroscopy</h2>\n<p>The next iteration of LARS will take the form of a wearable wristlet implenting a Adafruit Trinket - Mini Microcontroller along with LARS wavelength infrared strip LEDs, and indium-gallium-arsenide photodiodes in order to collect a lactic acid absorption spectrum directly from the blood vessels in the wrist. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag\">led</span></li><li><span class=\"cp-tag\">galaxys6</span></li><li><span class=\"cp-tag\">photoresistor</span></li><li><span class=\"cp-tag\">vanderbilthealthcarehackathon</span></li></ul>\n</div>\n</div>", ["I", ""]], ["Capital One for the younger Generation", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>Since we were being provided with fake data, i thought it would be beneficial to use that platform to help high school students and other individuals that have a passion for banking or being a teller to gain some fundamental knowledge of how transactions are done and that data are being used. Therefore, i created an interface with data generated from the Capital one API  that allows students to create and view customers As well as, perform basic transactions such as withdrawals deposits.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/frantz101/vandyHacks\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/frantz101/vandyHacks\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Nightmare", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>I always wake up late</p>\n<h2>What it does</h2>\n<p>makes you even more scared of waking up late by sending random terrifying messages to random people in your contact list</p>\n<h2>How I built it</h2>\n<p>android/Java</p>\n<h2>Challenges I ran into</h2>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<h2>What's next for Nightmare</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/joffei/Nightmare2\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/joffei/Nightmare2\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["WhosHungry", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Delta Squad has set their sights on another humanitarian project. \"Who's Hungry\" will help companies and people alike by cuting down on the unused food restaurants, grocery stores, and individuals throw out. With a touch of a button people can now share all their left over food. Use of this app will help cut down on the 133 billion pounds of food thrown out per year by grocery stores alone. Also cuts down on the normal charity process by going right from provider to consumer. Users will be able to select \"share\" or \"eat\" to pick if they are giving food away or coming to pick food up. \"Who's Hungry\" provides you with the addresses of the nearest \"shares,\" shows you how to get there, and will help plan your route using your gps location.</p>\n<h2>How we built it</h2>\n<p>React-Native, Javascript, mobile platforms, google-maps-api, mongodb, aws</p>\n<h2>Challenges we ran into</h2>\n<p>New tech stack, time constraints, project scope, sleep deprivation</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Great idea, good planning, learning new techs, front end and getting the UI functional</p>\n<h2>What we learned</h2>\n<p>A lot!!!</p>\n<h2>What's next for WhosHungry</h2>\n<p>Continue developing the app and getting it in the worlds hands, start reducing food waste, feeding the hungry!!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/react-native\">react-native</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-maps\">google-maps</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/azzurolilc/WhosHungry\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/azzurolilc/WhosHungry\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/azzurolilc/WhosHungry\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/azzurolilc/WhosHungry\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/azzurolilc/WhosHungry\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/azzurolilc/WhosHungry\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["HooDat", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>I was on a very busy bus one day and saw a girl in the back of the bus that was breathtaking. I was not able to talk to her even though I wanted to. So I had to come up with a solution that would allow people to meet for the first time.</p>\n<h2>What it does</h2>\n<p>It get's the UUID, which is a string of characters that uniquely identifies a device, of the device that the user is currently using to log into their account and uses their UUID to identify them over a Bluetooth network. as well as identify different users around you. Users are not communicating through Bluetooth LE but through a good old internet connection. </p>\n<h2>How we built it</h2>\n<p>We were able to prototype the User Interface that will enable people to see who is around them and communicate</p>\n<h2>Challenges we ran into</h2>\n<p>There are some privacy issues that we have ran into. Therefore we have decided to give users the option to control how certain types of information is displayed.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We were able to design and code a small prototype that allows people to visualize a minimal user experience</p>\n<h2>What we learned</h2>\n<p>We learned how to learn quickly in order to build our own solution in an environment where there is a time constraint.</p>\n<h2>What's next for HooDat</h2>\n<p>Build out the 3 features that we have designed and launch and see. If there are people that would love or hate this app</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/magicianthee/HOODAT\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/magicianthee/HOODAT\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Space Simulator", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Space Simulator \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/744/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Unity Tech Talk</p>\n<h2>What it does</h2>\n<p>Simulates our Solar System with Space ship to navigate</p>\n<h2>How I built it</h2>\n<p>Unity 3D</p>\n<h2>Challenges I ran into</h2>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Plant Distance and Sizes are all to scale</p>\n<h2>What I learned</h2>\n<p>Scripting in C#, Unity 3D</p>\n<h2>What's next for Space Simulator</h2>\n<p>Clean up Physical Boundaries and implement respawning and in game objectives</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/jmurp7385/spaceSim/upload/master\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/jmurp7385/spaceSim/upload/master\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["staysafestayclean", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"staysafestayclean \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/536/datas/gallery.jpg\"/>\n<p>\n<i>listview</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"staysafestayclean \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/537/datas/gallery.jpg\"/>\n<p>\n<i>app drawer</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"staysafestayclean \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/538/datas/gallery.jpg\"/>\n<p>\n<i>home screen</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"staysafestayclean \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/539/datas/gallery.jpg\"/>\n<p>\n<i>login screen</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We were inspired by the Medical Innovation track. Literally.</p>\n<h2>What it does</h2>\n<p>Lets you keep track of diseases in the area and a lot more. We're running out of time here so come talk to us for more!</p>\n<h2>How we built it</h2>\n<p>By sacrificing a lot of sleep. </p>\n<h2>Challenges we ran into</h2>\n<p>With mobile apps, fixing one problem breaks 10 other things. We pivoted from iOS to web to Android, and it was one crazy journey.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>It works!</p>\n<h2>What we learned</h2>\n<p>You must NEVER embed a listView inside of a ScrollingActivity.</p>\n<h2>What's next for staysafestayclean</h2>\n<p>Fixing the Android app, adding more data points and implementing some sort of deep-learning algorithm. We also want to enable some amount of crowdsourcing.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://staysafestayclean.me\" rel=\"nofollow\" target=\"_blank\" title=\"http://staysafestayclean.me\">\n<i class=\"ss-icon ss-link\"></i>\n<span>staysafestayclean.me</span>\n</a></li>\n<li><a href=\"https://github.com/vivekvaidya/staysafestayclean\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/vivekvaidya/staysafestayclean\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the frontend.", "I parsed through the JSON data and used jupyter notebook to construct color maps using the time weights and the pollen time weights (written in python) to blend over the map of Nashville.", ""]], ["Study Buddy", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Study Buddy \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/501/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<h2>What it does - helps you to study</h2>\n<h2>How we built it</h2>\n<h2>Challenges we ran into - many many errors</h2>\n<h2>Accomplishments that we're proud of - it looks pretty cool</h2>\n<h2>What we learned</h2>\n<h2>What's next for Study Buddy</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-calendar\">google-calendar</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-single-signon\">google-single-signon</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["DigitalClean", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>DigitalClean</h2>\n<p>DigitalClean project for 2016 VandyHacks</p>\n<h2>The Mission</h2>\n<p>Every year patients suffer from hospital related infections that directly put their health at risk and unfortunately result in death. This is largely due to low hand sanitation compliance, an issue we felt was easily solved. </p>\n<h2>The Object</h2>\n<p>Create a system that would encourage and track hand washing compliance related to patient interactions. This can be boiled down to whether or not a health care employee is sanitizing their hands before and after interacting with a patient. </p>\n<h2>The Method</h2>\n<p>We wanted to create a proof of concept tracking system that would track to a database user input around a hand sanitizing center. This would entail a button (replaced by more advanced tracking later) that would trigger a system to add to a web hosted database. This could then be accessed publicly through our [link] [digitalclean.org] domain.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/aworts18/vandyhacks\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/aworts18/vandyhacks\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Worked with potential hardware options for cloud communication between fingerprint sensor and backend", "", ""]], ["Early Detection of Pulmonary Embolism", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Early Detection of Pulmonary Embolism \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/693/datas/gallery.jpg\"/>\n<p>\n<i>Embolus with other structures</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Early Detection of Pulmonary Embolism \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/710/datas/gallery.jpg\"/>\n<p>\n<i>Vessel and Embolus isolated as region of interest</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>Inspired by the differnce we can make in the lives of people and the economic impact.\nAIMED helps detect pulmonary embolism early</p>\n<p>We use image preprocessing techniques and macros to create classifiers</p>\n<p>Real huge amount of patient data requires IRB approval and that requires time so we still waiting on training the neural network fully.</p>\n<p>We can extract just the vessel and embolus and the radiologist can only focus on those two.</p>\n<p>We are waiting on IRB approval so that we can get the 40000+ real patient data and outcome to train our neural network to predict our logistics automatically</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">fijiimage-j</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/matlab\">matlab</a></span></li></ul>\n</div>\n</div>", [""]], ["Ask Mitch", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<h2>What it does</h2>\n<h2>How I built it</h2>\n<h2>Challenges I ran into</h2>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<h2>What's next for Ask Mitch</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-alexa\">amazon-alexa</a></span></li><li><span class=\"cp-tag\">lambda</span></li></ul>\n</div>\n</div>", ["", ""]], ["Vanderbilt Medical Patient Care", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/X7QtVJxdJYw?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n</ul> </div>\n<div>\n<p>Attending the Healthcare Hack Week organized by the Vanderbilt Medical Innovation Lab (VMIL), we came across Dr. Robert Cronin and Dr. Kendra Parekh, who pitched an idea to solve the problem of patient dissatisfaction during their medical center visits. After the narrative about patient wait times in the ER and how they often feel neglected during inpatient visits, a potential solution revolving around an easy portal for live feedback seemed like a great idea. The mobile platform implied in the conversation would serve to improve communication between the patients and the providers in the hospital, improving patient satisfaction within the medical center. By allowing patients to voice their opinions and concerns in a real-time monitored system, healthcare provides can modify their approach and reflect on any potential changes in treatment, thereby giving the patients a more holistic and fruitful experience. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">invision</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/photoshop\">photoshop</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/iphone-sdk\">iphone-sdk</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/adobe-illustrator\">adobe-illustrator</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["Matt - A Machine Learning Schizophrenia Helper", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Matt - A Machine Learning Schizophrenia Helper \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/494/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Schizophrenia is a scary disorder. I saw a video that simulates it and was absolutely terrified with what I witness. I wanted to create an app that helped those with it in some way and so Matt was born. He is a trustworthy friend that will tell you if a person (you are talking to or see) is real or not. I spoke with a doctor about the app and he suggested making it similar to a human friend that the patient can trust because that is how most therapy works for the disease in real life.</p>\n<h2>What it does</h2>\n<p>It acts like a friend that tells people if someone is real or not. Using machine learning it confirms (via facial detection for now) whether there is actually a person there or not.</p>\n<h2>How I built it</h2>\n<p>Swift + Google Cloud Vision API</p>\n<h2>Challenges I ran into</h2>\n<p>Haven API wasn't good.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>It works. Someone who worked at Google said it was the best use case of their API they had heard of, that made me really happy.</p>\n<h2>What I learned</h2>\n<p>The technology is really awesome, I can't wait to see where we take it.</p>\n<h2>What's next for Matt (My Schizophrenia Helper)</h2>\n<p>Give to doctors and iterate/test.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag\">google-cloud-vision</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/chrisr22/matt\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/chrisr22/matt\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["AnalyticsOne", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"AnalyticsOne \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/594/datas/gallery.jpg\"/>\n<p>\n<i>Customers List</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"AnalyticsOne \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/593/datas/gallery.jpg\"/>\n<p>\n<i>Customer View</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Our inspiration was Nessie (Capital One's API). It gave us the idea to give a simple yet reliable data visualization web app to give companies some insight as to customer status.</p>\n<h2>What it does</h2>\n<p>It collects data from the API, represents it as a clickable list, which leads you to that customer's financial information</p>\n<h2>How we built it</h2>\n<p>We used the Nessie API to create and collect dummy data (customers, accounts and transactions)\nA python script runs within a controller in web2py and parses the json data obtained from the API\nOh, and Nessie also served as a database for our customers (Yes, Nessie is that cool)</p>\n<h2>Challenges we ran into</h2>\n<p>We ran into a huge challenge with web2py, which doesn't support python 3. So we had a hard time debugging the whole system only to find that out. Then we needed to delete python 3 and replace it with python 2 to be successful.\nThe second challenge was to implement the data from the api in actual charts</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We're very proud of the handling of the API, which we thought was going to be our biggest challenge but turned out to be the easiest part of the project _ eventually _. We're also proud of getting the website to run the main page successfully.</p>\n<h2>What we learned</h2>\n<p>This was a good opportunity to practice python, some nice web development, and even learn API's handling in general since it is a big part of programming nowadays. </p>\n<h2>What's next for AnalyticsOne</h2>\n<p>It would be pretty cool to implement a machine algorithm to predict the spending trends of the customer (yeah ... we are far from that, but still love the idea)</p>\n<h2>What's next for the team</h2>\n<p>We are working on future projects together in software development to further our knowledge of it and get experience for possible internships/job opportunities. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">web2py</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag\">chartist.js</span></li><li><span class=\"cp-tag\">capital-one-nessie</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/DeleteTheCookies/AnalyticsOne\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/DeleteTheCookies/AnalyticsOne\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["API connectivity, json data parsing, web2py controllers and views, and assisted in building a front end with HTML Flex Boxes", "I worked on the API connectivity to the controller of the webpage, created data with the API, and did some debugging on conflicts with the programs we used.", "I worked on the front end creating a page layout with HTML and CSS. "]], ["Analytics on 911 Emergency Calls", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Facilitate better response to 911 Emergencies by providing goverment bodies with useful analysis on historical data to be better prepared for future emergencies.</p>\n<h2>What it does</h2>\n<h2>How we built it</h2>\n<p>It's built on django and makes use of pandas library to handle data wrangling. The frontend is developed using HTML 5 </p>\n<h2>Challenges we ran into</h2>\n<h2>Accomplishments that we're proud of</h2>\n<h2>What we learned</h2>\n<h2>What's next for Analytics on 911 Emergency Calls</h2>\n<p>Currently is work in progress. Facing some issues with prototype</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/django\">django</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n</div>", ["I worked on the frontend in HTML5", "", ""]], ["User Distribution", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Capital One Api</p>\n<h2>What it does</h2>\n<p>Show the map of where all customers are</p>\n<h2>How I built it</h2>\n<h2>Challenges I ran into</h2>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<h2>What's next for User Distribution</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n</div>", [""]], ["NeuralTrex", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>I have always wanted to learn how to do machine learning, but had never done it before. I was inspired to create this by a video where a programmer taught a computer how to play Super Mario World. I chose google's T-Rex runner to teach the computer how to play.</p>\n<p>I originally planned on using a neural network to teach it how to play, but found it to not be possible since it required supervised learning, which requires you to know that the output is to further train the model. Because of this, I decided to go with a Genetic Algorithm which uses unsupervised learning to find a solution.</p>\n<p>This program was able to produce a player that achieved a score higher than 1000 points in just 9 short generations, which is better than most people who play the game.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/JoeyVinyard/NeuralTrex\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/JoeyVinyard/NeuralTrex\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["SHIFT |Stopping Harassment, Inspiring Futures Together", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"SHIFT |Stopping Harassment, Inspiring Futures Together \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/323/datas/gallery.jpg\"/>\n<p>\n<i>Main Code</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"SHIFT |Stopping Harassment, Inspiring Futures Together \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/347/datas/gallery.jpg\"/>\n<p>\n<i>Text Message Example</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to learn new things so we decided to play around with the Twilio API because it looked cool so we decided it would be great to write a python script using it. We also wanted to reduce the severity and frequency of online harassment by putting good vibes out in the world. </p>\n<h2>What it does</h2>\n<p>The program sends a positive message to a phone number to help make the recipient \"feel good\" about themselves. It reduces the severity and frequency of online harassment by sending inspirational quotes to people, and improving the quality of mood in each individual.</p>\n<h2>How we built it</h2>\n<p>We looked up Twilio documentation and used it to help us learn how to use their API. We also learned some basic Python by reading documentation and watching youtube videos on it. </p>\n<h2>Challenges we ran into</h2>\n<p>We are new to programming, and had <em>no</em> idea how to start. We spent the first 6 hours unsure of where to begin, or what idea was too big or too small, trying to find a project to finish in 36 hours. Trying to figure out how we can stop online harassment and the best way to implement it.</p>\n<h2>Accomplishments that we are proud of</h2>\n<p>We made something with code, which is new for us, since we had very little programming experience. We are excited to make new things and come back next year with an even better project, perhaps expanding on what we worked on! By sending good vibes out, we are improving the mood that gets put out there and spreading positivity. </p>\n<h2>What I learned</h2>\n<p>We learned how to program, how to interface with API's using Python, how to upload a repository on GitHub, how to start small and expand, and how to work together as a team. That online harassment is a very pertinent issue, and has to be addressed. </p>\n<h2>What's next for SHIFT | Stopping Harassment, Inspiring Futures Together</h2>\n<p>A few cool features to implement in the future would be:\nAllow text message responses\nInterface with other APIs \nAsk for a new inspirational quote\nScheduled inspirational quotes\nPersonalized inspirational quotes</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/ronyschutz/Hackathon\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ronyschutz/Hackathon\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Co- developed the code and idea", ""]], ["VandyDivvy", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>My roommates and I needed to split grocery bills every week based on preferences we had already set. This application allows us to do that.</p>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/RahulN97/VandyDivvy\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/RahulN97/VandyDivvy\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["NoteLab", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>VandyHacks | NoteLab</h1>\n<p><strong>Learn, Listen, and Make Music all in one place; the NoteLab.</strong></p>\n<h2>INSPIRATION:</h2>\n<p>We're all music lovers in this team, and also have a passion for artificial intelligence and machine learning.  We wanted to build a web interface that allows users to\nlisten to, learn, and play songs, while at the same time exploring genetic algorithms for music generation.</p>\n<h2>WHAT IT DOES:</h2>\n<p>Users can watch their favorite songs be visualized in midi form, and even play along to learn that song. NoteLab is intended to be a better alternative to sheet music, and therefore\na way to motivate future musicians to learn music.  The end goal is to allow users to record and upload the songs\nthey themselves play, and then the machine learning algorithm will write music in the same style as what the user played. To facilitate the learning process, we use\nparallel processing to distribute the job amongst 20 Odroids.</p>\n<h2>HOW WE BUILT IT:</h2>\n<p>Each of our four members was assigned a different job to get to our end goal.  The front end was built in Javascript, PHP, HTML, and CSS and designed to run entirely\nin the browser with a single midi device connected via USB.  The genetic algorithm was written in Python and had two parts: the test of fitness and the breeding/mutation technique.  The test of fitness\nuses a modified K-means with standard deviation to plot a 'location' of the average center of the training song.  The breeding technique merges measures and notes of well-fit\nsongs together and random mutations allow variety in the population.  And finally, a method was devised to distribute processes amongst 20 Odroids to lighten the learning load.</p>\n<h2>CHALLENGES WE RAN INTO:</h2>\n<p>The entire project was possibly too ambitious for a single weekend, and with only one man per job, it was tough to get everything to come together.</p>\n<p>Once the genetic algorithm was generating music, we realized we needed smoothing algorithms to help the newly-generated song to converge, and this took some time to both design conceptually\nas well as implement.</p>\n<h2>WHAT WE LEARNED:</h2>\n<p>We learned how to better work as a team under pressure and with very little sleep.  We also learned how to coordinate source control to ensure we didn't step on each other's toes.</p>\n<h2>WHAT'S NEXT FOR NOTELAB:</h2>\n<p>We have many features we'd like to implement, such as an entire social network for users to create profiles and interact with each other, a way to upload songs and save them to play later (or \nshare with friends), a way to generate new music based on what users have played or even have in their 'favorites' library.  There are a lot of different avenues to go with this central platform,\nand we can't wait to work on them more after the hackathon. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://notelab.io\" rel=\"nofollow\" target=\"_blank\" title=\"http://notelab.io\">\n<i class=\"ss-icon ss-link\"></i>\n<span>notelab.io</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I wrote the genetic algorithm save for the test of fitness. I also smoothed the output of the genetic algorithm using pitch-shifting and key-matching.", "I created the web application that allows users to learn and record music. This involved designing our app to interface directly with midi instruments so that users can learn music in an interface similar to guitar hero. I also designed and developed the visual representation of the music.", "Helped with the new fitness feature in the Genetic Algorithm to generate new songs.  Setup the Odroid server rack and developed the parallel processing tool used to distribute the genetic algorithm across the 20nodes to speed up the training.", "I did algorithm design and implementation for test of fitness against genetic algorithm.  I also did data cleaning, organization, and analysis. "]], ["Income Visualization", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Income Visualization \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/785/datas/gallery.jpg\"/>\n<p>\n<i>WebGL in live action!</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Our inspiration for this idea came from the scope of mock Customer data present in Capital One's API. With 50,000 people spread to the ends of the globe, our first thought was \"How would this data look if it was plotted globally?\". Naturally, we did not want to plot the latitude, longitude, and magnitude (income) of each customer individually, so we created an application that does it for us.</p>\n<h2>What it does</h2>\n<p>Income Visualization utilizes the mock Customer data present within Capital One's API and WebGL to create a 3D globe with customer location and income represented visually, with a persons given balance in their account as the data's magnitude. You could apply this method of data visualization to a variety of data sets and represent the data in a variety of different formats.</p>\n<h2>How we built it</h2>\n<p>We first obtained our data from Capital One's Customer API, which returned a customer ID and address information. We then used the ID to map the address to that customer's balance, which was found by the Accounts API. From there, we plugged the address into Google's Geocoding API which returned longitude and latitude data. Once we obtained that, we were able to loop through all accounts to obtain a JSON containing user location and balance data, and fed that into the WebGL 3D globe visualization.</p>\n<h2>Challenges we ran into</h2>\n<p>For the data gathering side of the project, the main challenge was obtaining any significant amount of data from Google's Geocoding API, as there was a requests per second limit, normally around ten. For some reason, our project had an unusually low limit, so even when exceeding two requests per second we got denied further requests, and as a result were not able to obtain all ~57000 addresses. We ended up getting only around 700 people in the Northeast in the end.\nWhen it came to plotting the data with WebGL, we came across many problems including the readme not working initially, lack of online support for the project, scaling problems with the magnitude of the data, and the data on the globe not being changed even when replaced with a different JSON. Overall, it took around twelve hours to get everything in order with the globe visualization.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We're proud of linking several different API's together to obtain a solid output, as well as being able to utilize WebGL to give a stylish representation of our data.</p>\n<h2>What we learned</h2>\n<p>How to fully utilize a given API, how WebGL's library can be used for visualization, and how to properly use Google Developer Console. Working around API request limits was also very informative.</p>\n<h2>What's next for Income Visualization</h2>\n<p>We are currently working on integrating Income Visualization with Microsoft Face API. The result would be an application that can identify a customer and retrieve their data using only the customer's face. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/markdown\">markdown</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/opengl\">opengl</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/webgl\">webgl</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/three-js\">three.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/shell\">shell</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/terminal\">terminal</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mac\">mac</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/capital-one\">capital-one</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/webgl-earth\">webgl-earth</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/sahilb2/vandyhacks2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/sahilb2/vandyhacks2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I used the Capital One data given to me by Alex and used Google Chrome WebGL source code to implement the data visualization. I also scaled the data accordingly in order to make the data visually pleasing, without distorting the impact and reliability of the data. Go data visualization!", "I did all of the data gathering and API work with CapitalOne's Reimagine Banking site as well as Google's Geocoding API to obtain customer's account balance and determine their current longitude and latitude to be put onto a 3d globe visualization.", "I helped visualize the methodology for interaction with the Capital One API and constructed a mock front-end environment for Income Visualization.", ""]], ["WiseElect", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"WiseElect \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/364/datas/gallery.jpg\"/>\n<p>\n<i>WisElect</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Being able to exercise your voting right is the most important part of democracy. We often form a hype for high-level politicians, but don't think about our state representatives and other local political contest. Our friend informed that he voted for a representative only because their name had Mailman in it. Is that fair?</p>\n<h2>What it does</h2>\n<p>Our tool harnesses the power of machine learning and sentiment analysis to rank politicians based on key issues. </p>\n<h2>How we built it</h2>\n<p>We used the flask web framework to form a web-enabled application  that uses IBM watson sentiment analysis to find out what a politician's stance is</p>\n<h2>Challenges we ran into</h2>\n<p>Trying to integrate two different API into a single platform and make them play well was the biggest challenge that we had.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We were finally able to get sentiment analysis working using web scraped data and produced relevant information for the user.</p>\n<h2>What we learned</h2>\n<p>how to use web API's, and Developing web applications.</p>\n<h2>What's next for WiseElect</h2>\n<p>We want to train the sentiment analysis algorithm to more accurately predict the politician's stances on different issues</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jinja\">jinja</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-civic-information\">google-civic-information</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ibm-watson\">ibm-watson</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bluemix\">bluemix</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sqlite\">sqlite</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/machine-learning\">machine-learning</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sentiment-analysis-online\">sentiment-analysis-online</a></span></li><li><span class=\"cp-tag\">scraping</span></li><li><span class=\"cp-tag\">visualization</span></li><li><span class=\"cp-tag\">materialize</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/agarwali/vandyhacks\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/agarwali/vandyhacks\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["derp-engine", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>Derp Engine:</h1>\n<p>Derp engine is my Vandy Hacks III project!</p>\n<h1>What are you doing?</h1>\n<p>We are writing a search engine from scratch!</p>\n<h1>Why?</h1>\n<p>Why not?</p>\n<h1>What's special about this engine?</h1>\n<p>I am writing it, and I am special. Therefore, vicariously, so is this engine.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li><li><span class=\"cp-tag\">qmake</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mysql\">mysql</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/qt\">qt</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/allenh1/derp-engine\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/allenh1/derp-engine\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I mainly wrote the sql stuff, the thread stuff, and the webcrawler.", "I wrote the http server part, html and html parser."]], ["Escape To Space", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Escape To Space \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/443/721/datas/gallery.jpg\"/>\n<p>\n<i>Chase to the UFO</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Escape To Space \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/443/736/datas/gallery.jpg\"/>\n<p>\n<i>Layout of the space station</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Escape To Space \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/443/737/datas/gallery.jpg\"/>\n<p>\n<i>Level 02</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Escape To Space \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/443/747/datas/gallery.jpg\"/>\n<p>\n<i>enemy robots</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Star Wars 4. Our lead character, an alien, is trapped at a space station just like Princess Leia. </p>\n<h2>What it does</h2>\n<p>It is a desktop first-person shooter game. Our objective is to help our alien friend unite with his world again. We rush towards the UFO killing all the robot enemies on the way.</p>\n<h2>How we built it</h2>\n<p>We used Unity3D with C# to build it.</p>\n<h2>Challenges we ran into</h2>\n<p>We had issues with our box collider and the rotation of the robo spiders.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>This is our first 3D game. We tried this for the first time.</p>\n<h2>What we learned</h2>\n<p>We learnt how to make an FPS shooter 3D game</p>\n<h2>What's next for Escape To Space</h2>\n<p>We just have 2 levels in this game. We will add more levels and instead of 2 rooms, we will have an entire building we have to escape with riddles and mazes.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li></ul>\n</div>\n</div>", [""]], ["Yeah Boi", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Yeah Boi \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/441/445/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Yeah Boi \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/443/832/datas/gallery.jpg\"/>\n<p>\n<i>A view of the app</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Long ago, well actually only about a month or so ago but whatever, a new internet video swept the nation. From the darkest corners of Youtube, the \"Longest Yeah Boy Ever\" was born. Many questioned why such a video was made, or even what a \"yeah boy\" even is, but we recognized the natural beauty of such a thing and thus began our quest to share the \"yeah boy\" with the world. </p>\n<p>Enter Boi.</p>\n<h2>What it does</h2>\n<p>Boi is a revolutionary new app where you can compete against your friends for the recognition and glory of having the longest yeah boy ever. Our minimalist design, and adherence to the material design guidelines principles makes it easy for anyone to get started in the world of competitive yeah-boying.</p>\n<p>Simply press down on the \"YEAH BOI\" button and listen as an eruption of celebration emanates from your phone speaker. </p>\n<p>Any of your friends who hear your \"yeah boi\" can choose to respond to the battle cry with a \"yeah boi\" of their own, and thus a sweeping radius of success encompasses the area, like glory shouted down from Valhalla. </p>\n<h2>How we built it</h2>\n<p>Through an intensive process of sleep deprivation and rapid development, we were able to produce our app in android studio. The program itself is written in Java, while the markup and design is written in xml.</p>\n<h2>Challenges we ran into</h2>\n<p>On the quest for the longest yeah boy ever, the largest hurdle is to overcome the human barrier of lung capacity. To solve this, we had to figure out how to loop the audio file of the yeah boy to finally push the limit of yeah boy potential ad infinitum</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Smashing the record of the longest yeah boy ever.</p>\n<h2>What we learned</h2>\n<p>Audio manipulation is tricky.</p>\n<h2>What's next for Yeah Boi</h2>\n<p>First VandyHacks, next, the world.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xml\">xml</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/gradle\">gradle</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/alcott/boi\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/alcott/boi\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I developed the algorithm to make the Yeah Boi go on forever.", ""]], ["Slack Dad Jokes", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Slack Dad Jokes \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/495/datas/gallery.jpg\"/>\n<p>\n<i>Demo</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Slack Dad Jokes \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/331/datas/gallery.jpg\"/>\n<p>\n<i>Slack Dad Joke</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>The Slack channel was looking kinda boring and the <code>/giffy</code>'s where getting annoying. Time for a classic dad joke to lighten the mood!</p>\n<h2>What it does</h2>\n<p>Add Slack Dad Joke as a Slack integration to enable the <code>/dadjoke</code> slash command. This will grab a dad joke from Reddit's r/dadjokes.</p>\n<h2>How I built it</h2>\n<p>I build two apps in a Django project: one for the API and the other for the landing page. Django was used in order to host both the site and api in separate apps and to allow easy access to python libraries for building the recommendation system portion. When a user submits feedback, the user's preference of joke topic is saved, and they will receive a similar joke next time. If they dislike it, they will receive a joke that belongs to a different topic.</p>\n<h2>Challenges I ran into</h2>\n<ul>\n<li>Getting enough joke data from Reddit.</li>\n</ul>\n<h2>Accomplishments that I'm proud of</h2>\n<ul>\n<li>Creating a REST API in Django</li>\n<li>Integrating machine learning algorithms for the improving which jokes are sent (not just random)</li>\n</ul>\n<h2>What I learned</h2>\n<ul>\n<li>How to use the Django ORM to interact with a relational database</li>\n<li>How to seed a database with data from an external API via task scheduling and multithreading</li>\n<li>How to apply a Linear Discriminant Analysis classifier to implement a basic recommendation system</li>\n</ul>\n<h2>What's next for Slack Dad Jokes</h2>\n<ul>\n<li>Unit Tests</li>\n<li>Submission to the Slack App Directory</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/django\">django</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/slack\">slack</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/reddit\">reddit</a></span></li><li><span class=\"cp-tag\">gulp</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://dadjoke.samrose3.com\" rel=\"nofollow\" target=\"_blank\" title=\"https://dadjoke.samrose3.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>dadjoke.samrose3.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Eyeris", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Eyeris \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/443/838/datas/gallery.jpg\"/>\n<p>\n<i>3D Scan of room </i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<pre class=\"language-nolang\"><code> The inspiration behind this product was to allow individuals an easier way to navigate. This project would allow for the visually impaired to easily navigate town and campus. \n</code></pre>\n<h2>What it does</h2>\n<p>Eyeris uses 3 dimensional scans and area learning to find its location. The users' destination will then be represented as dots along the path or beeps within the ear.</p>\n<h2>How we built it</h2>\n<p>We used project tango's SDK within unity to assist with area learning, motion tracking and augmented reality. In addition we used mesh construction when to create an object that could be exported into additional software.</p>\n<h2>Challenges we ran into</h2>\n<p>Initially we programmed the tango to use area learning for navigation however upon testing we found that using the constructor application on the tablet made development simpler. Additionally we had difficulty integrating arduino with unity.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Motion tracking, arduino integration </p>\n<h2>What we learned</h2>\n<p>Our group learned how to use project tango and integrate it with hardware such as arduino and software such as Unity. We also furthered our understanding in C#, C++, and electronic circuits. </p>\n<h2>What's next for EyeRis</h2>\n<p>Finding a different approach in terms of technology used for navigation </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/project-tango\">project-tango</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/keishon104/Eyeris\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/keishon104/Eyeris\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the backend with the coding using c++ and c#", ""]], ["Split-Game", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Split-Game \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/294/datas/gallery.jpg\"/>\n<p>\n<i>Split, do you have what it takes?</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We were inspired by the thought of moving a ball and changing its velocity by  splitting into two masses.</p>\n<h2>What it does</h2>\n<p>It's  an IOS game where in order to read a destination you must use your understanding of physics to move a ball based on momentum.</p>\n<h2>How we built it</h2>\n<p>Unity and C#</p>\n<h2>Challenges we ran into</h2>\n<p>some issues we ran into are: buttons not showing up in the right place on unity, designing and implementing scripts to split the ball and change its velocity and mass.</p>\n<h2>What we learned</h2>\n<p>we learned about ios development and the challenges associated with using unity.</p>\n<h2>What's next for Split-Game</h2>\n<p>we want to implement more features such as controlling chunks of mass that were</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/brandongeren/Split-Game\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/brandongeren/Split-Game\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Created UI design components. Integrated UI components with JavaScript in Unity.", "I stayed up deep into the night and cleaned things up", "I worked on scripts to implement movement and other functions. I also Demoed the project.", "UI scripting in C# and level design, UI wire framing"]], ["Vesta", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Vesta \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/260/datas/gallery.jpg\"/>\n<p>\n<i>Screenshot of our demo website</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>\"Saving is a great habit but without investing and tracking, it just sleeps\" - Manoj Arora</p>\n<p>Many Americans don't engage with the stock market. In fact, according to CNN, less than half of all Americans had money invested in the market in 2015. </p>\n<p>A significant factor in this decision to stay away from the market is a lack of security. To many, looking at the seemingly arbitrary numbers and graphs as they fluctuate over time is simply unintelligible, or even discouraging. The average citizen doesn't have the time or interest to really study what these numbers mean relate it to their more concrete experiences, and hiring an investment firm to manage investments can be an expensive ordeal in itself. As it stands, Americans face too great of a barrier to entry to get into the stock market.</p>\n<p>Vesta lowers the barrier to entry for potential investors by making large amounts of data easy to digest. Groups that may not yet have had opportunity to explore long-term investments, such as the young and socioeconomically disadvantaged, are the primary audience for Vesta.</p>\n<h2>What it does</h2>\n<p>Vesta is a fairly simple concept. Our website allows users to select a stock and select a time frame. Vesta then generates a time graph of the stock price overlaid with headlines of the most prominent events of the day, which provides a fast and easy way for the user to find out what happened in the real world and, simultaneously, what happened in the market.</p>\n<p>Vesta empowers the user to ask, for example, \"what happened when that stock took such a steep dip last week?\" and find real-world, qualitative answers that might help explain what he/she sees. Using a New York Times API with articles published from the 1850s to the present day (continuously updating), Vesta is able to provide valuable historical perspective as well as current data to the user in an intuitive way.</p>\n<h2>How we built it</h2>\n<p>First, we created a retrieval file in python that interfaces with the New York Times API and returns usable article data. From this data, we removed all of the boring words (\"as\", \"the\", \"and\") and then conducted a sentiment analysis on the remaining words in the first paragraph of the article. </p>\n<p>While working on this substantial retrieval file, we also employed and created the necessary tools for properly plotting the stock data in a visually appealing format.</p>\n<p>With the stock plotting and article analysis capabilities completed, we then began integrating the two and deciding when to actually add the title of the NYT article to the graph. We decided to trigger this addition by detecting a percent change that exceeds a given threshold. If the stock changed more than, say, 2% on the day for example, then Vesta would label that specific area in the graph with the most popular article of that day.</p>\n<h2>Challenges we ran into</h2>\n<p>One of the biggest challenges we faced during this hackathon was physical. Everyone on the team struggled to stay engaged after being awake for 24 hours, and trying to strike a good balance between working through the grogginess and taking time to recharge was tricky. </p>\n<p>On a technical side, every step along the way had its own set of challenges. Interfacing between the JS front end and the Django back end was particularly difficult, and getting everything to cooperate took much longer than expected.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are very proud of how much Red Bull we drank during this hackathon. </p>\n<p>Also, this project turned out to be much more technically challenging than anticipated. We didn't reach as many final goals as we originally aimed for, but we are proud of how we worked together as a team and stayed the course through each new road block that came up. </p>\n<h2>What we learned</h2>\n<p>Jay: \nI learned a lot about Django and working in a team, and I think I picked up some Python website scraping as well. I also finally understood how Git works. </p>\n<p>Duke:\nI learned about the fundamentals of back-end web development and worked on refining my skills in web scraping and data analytics. I also learned about how to improvise code on the fly and how to debug in a multi-programmer, \ndynamic work environment.</p>\n<p>Aria:\nI learned a lot about sentiment analysis, web scraping, and visualizing data in the back end using the data science libraries. The hardest challenge though was linking the back-end to the front-end.</p>\n<p>Tawm:\nVandyHacks 3 was my first hackathon, and I learned a ton about how CS gets done in the real world. Before VandyHacks, I had taken CS classes and had a tenuous grasp on computer logic, but being immersed in this challenging environment was completely different from anything I had seen before. I learned that getting programs to run properly is a tough job, and it's the little victories throughout the project that keep you going.</p>\n<h2>What's next for Vesta</h2>\n<p>We would like to improve the quality of visualizations and make them more interactive for the user. Next steps might include adding support for multiple stocks on the same graph, aesthetic adjustments, and including a better UI for down-selecting the data that the user wants to see. </p>\n<p>Another next step for Vesta is to include a sentiment analysis of the news articles and finish out the display for the qualitative information. We have made a great deal of progress towards this goal but were unable to work out the last few bugs before the end of the hackathon. </p>\n<p>Finally, we would like to create a user login service so users can create personalized pages to track the stocks that they are most interested in.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/django\">django</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/beautiful-soup\">beautiful-soup</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/new-york-times\">new-york-times</a></span></li><li><span class=\"cp-tag\">yahoo-finance</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/warut-vijit/VandyHacks\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/warut-vijit/VandyHacks\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Worked on sentiment analysis, backend search functionality, and stock market visualizations. ", "Worked on data analytics and frontend web development, APIs", "Worked on the deployment server and making the back-end python work with the front-end of the website.", ""]], ["Visual Capital", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to learn new things and combine API's from the sponsors</p>\n<h2>What it does</h2>\n<p>It gets lots of mock data from the Capital One API and then uses the gmaps.js to show off the data in a nice way.</p>\n<h2>How we built it</h2>\n<p>We spent a lot of time on the capital One API</p>\n<h2>Challenges we ran into</h2>\n<p>Lots. and lots.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Getting the mock data complete.</p>\n<h2>What we learned</h2>\n<p>simple things can turn out to be much more complicated than you expect.</p>\n<h2>What's next for Visual Capital</h2>\n<p>we will see where the road take us. For now though, lots and lots of sleep.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ajax\">ajax</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["Hack The Planet", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>To inspire kids to learn about new emerging technologies while learning about different countries in the world</p>\n<h2>What it does</h2>\n<p>Uses AR/VR technology to take live video of a map. It them shows this map in a VR environment that educates people about the world. This is done with AR virtual objects</p>\n<h2>How we built it</h2>\n<p>Using Unity and Vuforia SDK and APIs. Also google cardboard and samsung s7 as hardware.</p>\n<h2>Challenges we ran into</h2>\n<p>Bringing together AR and VR. Both are new fields and are hard to develop at this stage.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Everything</p>\n<h2>What we learned</h2>\n<p>Unity, c# and collaboration with github</p>\n<h2>What's next for Hack The Planet</h2>\n<p>adding new virtual objects to other physical object. A map is just the beginning</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/vuforia\">vuforia</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-cardboard\">google-cardboard</a></span></li><li><span class=\"cp-tag\">samsung-s7</span></li></ul>\n</div>\n</div>", ["", "", ""]], ["Greenwire", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>The day before this hackathon, I sold 3 football tickets to a person. I was worried he may not have the cash with him and that I would have lost $40 from buying other people's tickets to sell. If this app were to be widespread, I would be more confident that I would get my money, and I would be able to receive that money as easily as handing over cash.</p>\n<h2>What it does</h2>\n<p>The app prompts the user for their CapitalOne login information. After, it displays a list of their account with which they can transfer money with. The screen then changes to a numpad, a number display, and a switch. The switch is to select whether the person is sending or receiving money, and the numpad is to input the amount to be transferred. The user then pulls down on the number display, and the number slides down the screen. The two people touch phones, the person sending the money beams to the other phone, and the transfer occurs.</p>\n<h2>How we built it</h2>\n<p>For our web backend, we used Node.js and MongoDB to keep track of the user data and display the changes occurring. The app runs using Java on two Amazon Fire phones and takes advantage of NFC. </p>\n<h2>Challenges we ran into</h2>\n<p>Challenges included finding and agreeing on an idea, getting started on the Android app, getting started with NFC, attempting to install (and giving up on) React Native on Windows, integrating each team members' parts, and putting the UI together.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We managed to get the NFC to transfer strings, which is what we needed for our purposes.</p>\n<h2>What we learned</h2>\n<p>We learned some of the newer JS syntax, the structure of an Android app, how to delegate, and how to create UIs for apps.</p>\n<h2>What's next for Greenwire</h2>\n<p>Getting a truly functional app that communicates between the phones and the server.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/MichaelChan-Pong/GreenwireApp\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/MichaelChan-Pong/GreenwireApp\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Riders Block", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Riders Block \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/443/634/datas/gallery.jpg\"/>\n<p>\n<i>Home_Page</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Riders Block \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/443/642/datas/gallery.jpg\"/>\n<p>\n<i>All_Active_Bills</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Riders Block \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/159/datas/gallery.jpg\"/>\n<p>\n<i>Bill_View</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We would like to see more transparency in all levels of government. In the past few days alone there has been a cry for transparency and reform of the political system. Modern technology allows for us all to bring about such changes from a grassroots level.</p>\n<h2>What it does</h2>\n<p>Parses through all active congressional bills currently on the floor of the House and the Senate, searching for spurious language which could indicate additional legislation which is unrelated to the bill.</p>\n<h2>How we built it</h2>\n<p>Riders Block is a web-based python system using the Flask framework backed by an SQLite database. Information regarding the bills was scraped from govtrack.us using the python BeautifulSoup library. Information is then parsed using the Google Natural Language API, to generate a neural network to retrieve the textual saliency of the bill. Using the textual saliency, any spurious language can be discovered. Bills with potential riders are flagged by the front end, at the appropriate section, in a clear way for a user to interpret.</p>\n<h2>Challenges we ran into</h2>\n<p>Over the last 36 hours, a variety of challenges arose. These challenges pushed us to learn a variety of new tools and skills, but we were ultimately successful in overcoming them.\nThese challenges were (but not limited to):\n    - Natural Language Processing\n    - Data Scraping from HTML\n    - Utilization of Google API</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Jesson: \"Developing technical queries and parsing it's returned value into complex data structures.\"\nKye: \"Designing and instantiating a relational database holding all active bills and their saliency\"\nZach: \"Successfully incorporating the Google Natural Language API into the system.\"\nDavid: \"Scraping data off of congressional websites.\"</p>\n<h2>What's next for Riders Block</h2>\n<p>Not all bills have a government provided comprehensive summary, without a summary we are unable to generate a saliency for them. We built out the functionality to summarize bills using the python Sumy library. The problem was Sumy did not accurately summarize the document. In the the future we would like to implement a neural network using TensorFlow to more accurately summarize the bill. This will allow our system to be able to parse all bills regardless of whether they contain a goverment summary.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jinja\">jinja</a></span></li><li><span class=\"cp-tag\">peewee</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sqlite\">sqlite</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/beautiful-soup\">beautiful-soup</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/natural-language-processing\">natural-language-processing</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/nltk\">nltk</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/eykrevooh/Legislative_Parser\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/eykrevooh/Legislative_Parser\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on integrating the Google Cloud Natural Language API, as well as some front end work.", "I worked on the API and web scraper which we use to get data about bills.", "", ""]], ["Crystal Ball: Real-time navigation & 3D visualization", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/giCfUk8G6hw?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration &amp; What it does</h2>\n<p>Our project opens the possibility for real-time navigation with 3D visualization. With indoor navigation as our starting point, we decided that navigation interface that users see on their screen should match the environment they experience around them for better guidance.</p>\n<h2>How we built it</h2>\n<p>First we use Project Tango to map a 3D environment and export the reconstruction as mesh layers. Next we clean up and smooth out the mesh layers with MeshLab. Finally we import the refined mesh into Unity and give it physical properties especially mesh collider. To provide navigation for any user, a small probe represented by a sphere will locate its target only through areas we defined as \u201cwalkable\u201d while leaving a trail for the user to follow. The user could change the probe\u2019s target at will in runtime with as simple an input as a keystroke or tap on the screen.</p>\n<p>Now that we have the user features implemented, we started looking at the back end. In order to process the enormous point clouds, we mocked up a data structure with a Master, a Scene, and a Point level to efficiently add, remove, retrieve, and most of all correlate the data. The retrieval of the data will be directed by Euclideon Unlimited (<a href=\"http://www.euclideon.com\" rel=\"nofollow\">www.euclideon.com</a>) , which provides the most efficient point cloud search engine.</p>\n<h2>Technology &amp; Acknowledgement</h2>\n<p>We use Project Tango to reconstruct 3D environments and MeshLab to smooth it out before importing it into Unity. With Unity, we add physics to the mesh, create navigation guide, add the probe, associate physics with the probe, implement navigation script, and implement UI script. CLion (Jetbrain product) is used to mock up the back end data structure.</p>\n<h2>What's next for Crystal Ball: Real-time navigation &amp; 3D visualization</h2>\n<p>The inspiration is first sparked by our idea to provide navigation in large indoor spaces such as malls or airports, but soon we realize the potential of this project including real-time combat navigator, virtual reality tour, and so on. Of course, our development is quite primitive; in fact, none of us had Unity experience before! Therefore, we know there are many improvements to be made. \nHere\u2019s a few short term development goals from where we are:</p>\n<ol>\n<li>Compress mesh objects by decreasing poly count without sacrificing resolution</li>\n<li>Implement and test mesh storage</li>\n<li>Explore Euclideon Unlimited algorithm</li>\n<li>Smooth out interaction between camera and environment </li>\n</ol>\n<p>Here\u2019s a few long terms goals we\u2019d like to achieve</p>\n<ol>\n<li>Automating mesh export and import</li>\n<li>Automating mesh clean up and repair</li>\n<li>Successful mapping and navigating of an entire building\nIf you have any question, any suggestion for improvement, or any interest to partner with us, please do not hesitate to contact us! Contact information can be found at the very end.</li>\n</ol>\n<h2>Team Members</h2>\n<p>Mark Jung\nMark is a writer, of both code and stories. He is a freshmen engineering student in Northwestern University, majoring in Computer Science. He has never hacked before, and Vandyhacks is his first hackathon. Having experience in C, C++, python, HTML, and CSS, Mark is soaking up tools and languages day by day to become hacker capable enough to realize his child-like creativity and audacity. Mark also loves to eat. He can chomp up 40 wings, alone.</p>\n<p>Harrison Yan\nA hard-working genius (officially recognized by Mark Jung), where his concentration will amaze you once more after his nimble mind. Harrison is a sophomore at Vanderbilt, majoring in Mechanical Engineering with minors in Computer Science and Engineering Management. He has never hacked before and Vandyhacks is his first hackathon, but he has experience from various labs and his technical background. Despite Harrison\u2019s rigorous living style, he never lets go of his sense of humor and wild sparkles of creativity. Harrison cannot eat 40 wings alone, but he can eat boiled brocolli, a feat Mark can never pull off.</p>\n<p>Harrison Yan    <a href=\"mailto:harrison.yan@vanderbilt.edu\" rel=\"nofollow\">harrison.yan@vanderbilt.edu</a>\nMark Jung       <a href=\"mailto:gujung2022@u.northwestern.edu\" rel=\"nofollow\">gujung2022@u.northwestern.edu</a></p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag\">mesh</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://drive.google.com/drive/folders/0BxqgbRJiezoIM194SWEyR0N6OFk?\" rel=\"nofollow\" target=\"_blank\" title=\"https://drive.google.com/drive/folders/0BxqgbRJiezoIM194SWEyR0N6OFk?\">\n<i class=\"ss-icon ss-link\"></i>\n<span>drive.google.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Crox", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Crox \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/504/datas/gallery.jpg\"/>\n<p>\n<i>Example 1</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Crox \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/506/datas/gallery.jpg\"/>\n<p>\n<i>Example 2</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Crox \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/558/datas/gallery.jpg\"/>\n<p>\n<i>Main page</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Crox \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/559/datas/gallery.jpg\"/>\n<p>\n<i>Tutorial Example</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>Crox Game App</h1>\n<p>This is a repository for the VandyHack 2016.\nAll work here is finished with Dempsy95</p>\n<h2>Inspiration</h2>\n<p>We came up with this idea from chess game</p>\n<h2>What it does</h2>\n<p>This is an iOS board game we developed during the Vandy Hackathon in Fall 2016. The rule is pretty simple: each player plays alternatively till one wins. Player playes by choosing an edge in the board that has not been colored. Red edges represent player 1 and blue edges represent player 2.</p>\n<p><img data-canonical-url=\"./Chess/Chess/Assets.xcassets/tutorial1.imageset/tutorial1.png\" src=\"https://res.cloudinary.com/devpost/image/fetch/s--EqM-di1D--/v1/./Chess/Chess/Assets.xcassets/tutorial1.imageset/tutorial1.png\"/></p>\n<p>The color of a dot indicate the color of its neighboring edges. The winning condition is also pretty simple: Player 1 wins by connecting the top border with the bottom border, and Player 2 wins by connecting the right border with the left border.</p>\n<p>For example, in the following board, player 1 wins.</p>\n<p><img data-canonical-url=\"https://github.com/kenyangzq/Hackathon2016/tree/master/Chess/Chess/Assets.xcassets/tutorial2.imageset/tutorial2.png\" src=\"https://res.cloudinary.com/devpost/image/fetch/s--e8Ckw3Z0--/https://github.com/kenyangzq/Hackathon2016/tree/master/Chess/Chess/Assets.xcassets/tutorial2.imageset/tutorial2.png\"/></p>\n<p>You can even win by blocking your opponent's way. Like this: </p>\n<p><img data-canonical-url=\"./Chess/Chess/Assets.xcassets/tutorial3.imageset/tutorial3.png\" src=\"https://res.cloudinary.com/devpost/image/fetch/s--ySBS82Er--/v1/./Chess/Chess/Assets.xcassets/tutorial3.imageset/tutorial3.png\"/></p>\n<p>In the above board, player 2 wins by blocking player 1's way. </p>\n<h2>How we build it</h2>\n<p>We implement Crox with xcode using swift 2.3 with xcode. We store points to represent each player's edges. We also used the idea of union find to combine connecting edges. To determine whether the game is over, we first check whether a player has connected his borders; then we test whether the whole board is full; finally, we check whether the board has been blocked. </p>\n<h2>Challenge we ran into</h2>\n<p>The difficulties of this app are the UI interface and the algorithm to check whether the board has been block. For the UI, we literally create hundreds of button in the board. For the algorithm, we perform a BFS from the starting points and check whether they can reach the other end. </p>\n<h2>Accompolishment we are proud of</h2>\n<p>Eventually we implement everythin we plan to. </p>\n<h2>What we learn</h2>\n<p>We are much more famillar with the UI interface design of iOS. We also learned to use union find within swift.</p>\n<h2>What's next for Crox</h2>\n<p>We may develop an AI for the single player mode. We may need to use mechine learning to do this.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/makefile\">makefile</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/objective-c\">objective-c</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/kenyangzq/Hackathon2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/kenyangzq/Hackathon2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I wrote the core code for the board to work, e.g checking when the game is over. I also made the tutorial part of the app. ", ""]], ["Dreamr", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>One of our team members wanted to learn the practice of lucid dreaming and got an app Lucidify, which did notification reality-checks, but the interface did not make it easy for the app help teach the self-discipline required to perform persistent dream checks. We took it upon ourselves to handle this aspect of dream checks.</p>\n<h2>What it does</h2>\n<p>Dreamer is a great auxiliary app used for those who are interested in practicing their lucid dreaming school but lack the agency and the willpower to perform daily reality checks and do not want another reason to have to check their phone 7 times/day. Dreamr schedules reality checks throughout the day according to the user-set wakeup and sleep times, allowing for minimal battery usage with a simple interface. Dreamr will ask the user two reality-check observation questions with only a \u201cYes\u201d and \u201cNo\u201d response, after which the screen will display a message indicating if the user is dreaming.</p>\n<h2>How we built it</h2>\n<p>Dreamr was built using the Pebble C API, and most of the coding was done on Pebble\u2019s own IDE, CloudPebble, which made it easy to add resources and new files. Using the WakeUp module, we were able to allow the app to schedule app launches, and then learned how to handle events so we could discern between the user actually opening the app or the app calling itself for later. </p>\n<h2>Challenges we ran into</h2>\n<p>Learning how to use the Pebble C API proved to be quite the challenge, as none of us had even heard of a Pebble watch prior to this weekend. In addition to this, none of us had ever had experience with front-end development before. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We were most successful in delegating tasks to complete this project--there's a lot of work to be done when you have a day to learn how to use an unfamiliar API and then try to implement your idea from scratch. By dividing our work between improving the UI and developing and testing functionality, we were extremely successful in pulling together the final product as a group. </p>\n<h2>What we learned</h2>\n<p>Generally, we learned how to approach the process of approaching an unfamiliar platform in order to execute an idea in the most effective manner possible. Additionally, we learned how to incorporate multiple APIs into one project without sacrificing consistency. This project was an excellent introduction to the process of solving a problem collaboratively and procedurally. </p>\n<h2>What's next for Dreamr</h2>\n<p>To expand the functionality and capability of Dreamr, we hope to utilize the health metric API. The detection of deep sleep can hopefully be used along with the accelerometer to induce a lucid dream with a light vibration.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">pebble-c-api</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/goldbepa/VandyHacks3\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/goldbepa/VandyHacks3\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://cloudpebble.net/ide/project/377445\" rel=\"nofollow\" target=\"_blank\" title=\"https://cloudpebble.net/ide/project/377445\">\n<i class=\"ss-icon ss-link\"></i>\n<span>cloudpebble.net</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["SuperFlight VR", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"SuperFlight VR \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/456/074/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"SuperFlight VR \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/456/075/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"SuperFlight VR \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/456/076/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>The Iron Man suit. Because, who wouldn't want to try it after all?</p>\n<h2>What it does</h2>\n<p>The project consists in two separate applications: the Android controller app to input the hand positions, and the Unity VR experience in Oculus Rift. The player is controlled by tilting the arms, and the AI provides many missions to test your new skills</p>\n<h2>How we built it</h2>\n<p>Storing the accelerometer information of the mobile phones in Firebase, we were able to design a flexible way to input data into VR experiences without the need to buy additional hardware. Once that was set up, we divided the roles to pack as many features as possible inside our demo. Some of us spent most of the time developing the assets and crafting the visuals, while others focused more on the user experience and fun factor.</p>\n<h2>Challenges we ran into</h2>\n<p>Getting the Oculus Rift to connect to the computer, creating the city, programming the physics, connecting an Android app to a Unity game in realtime, exporting the textures from Blender 3D to Unity.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>The experience that we were able to design and develop this weekend. Having a dynamic sound system with an integrated voice assistant that guides the user throughout the game.</p>\n<h2>What we learned</h2>\n<p>How to set up Unity for the Oculus Rift and other VR platforms. To work with Blender 3D in conjunction with Unity.</p>\n<h2>What's next for SuperFlight VR</h2>\n<p>Improving the city, adding missions with interactive components that could affect the scene.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/blender\">blender</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li></ul>\n</div>\n</div>", ["Worked on the controller app and its connection to the VR game. Coded the physics for the player based on the input and head position, the missions system and UI.", "", ""]], ["Nutshell News", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Nutshell News \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/215/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Nutshell News \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/218/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Nutshell News \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/531/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to create a news reader that presented news from many top sources and today's weather in one convenient place. </p>\n<h2>What it does</h2>\n<p>Nutshell News takes articles from many different places, like the BBC, CNN, and Time, and presents them all on one page for the user to browse through. It also takes weather for the user's location and present that, along with a 5 day forecast.</p>\n<h2>How we built it</h2>\n<p>We used newsapi.org to get a JSON object containing all of the news articles, parsed it using jQuery, and then used HTML and CSS with Bootstrap to build the website around it.   </p>\n<h2>Challenges we ran into</h2>\n<p>Getting the CSS to scale properly and display everything correctly was our biggest challenge. Other things we ran into were getting the APIs to work and updating the pages with jQuery.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are proud of being able to use jQuery to create a dynamic website that can pull news from the API and update the page quickly.</p>\n<h2>What we learned</h2>\n<p>We learned how to work with CSS to create scalable, responsive sites, how to pull data from APIs, and how to dynamically update a page using jQuery.</p>\n<h2>What's next for Nutshell News</h2>\n<p>We want to provide more personalized content, allowing the user to select their sources, as well as their location for weather.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag\">newsapi.org</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/openweathermap\">openweathermap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/adobe-illustrator\">adobe-illustrator</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/dreamweaver\">dreamweaver</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://nutshellnews.me\" rel=\"nofollow\" target=\"_blank\" title=\"http://nutshellnews.me\">\n<i class=\"ss-icon ss-link\"></i>\n<span>nutshellnews.me</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the front end and helped with the CSS. I modified a bootstrap template to serve our purposes, and helped with layout/alignment.", "I worked in javascript as well as using jquery to get the data from the api's and parse it to display on the website. I also created the logo and color scheme.", "I worked on the front-end, helping to design and create the website using HTML, CSS, and Javascript."]], ["eyeMAZEing... iMAZEing... Eye Feel aMAZEing? ", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"eyeMAZEing... iMAZEing... Eye Feel aMAZEing?  \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/066/datas/gallery.jpg\"/>\n<p>\n<i>The easy mode: only one hole to win or lose with</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"eyeMAZEing... iMAZEing... Eye Feel aMAZEing?  \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/065/datas/gallery.jpg\"/>\n<p>\n<i>The harder mode: traps galore!</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"eyeMAZEing... iMAZEing... Eye Feel aMAZEing?  \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/067/datas/gallery.jpg\"/>\n<p>\n<i>A spiffy homescreen, featuring the logo of the best hackathon ever.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"eyeMAZEing... iMAZEing... Eye Feel aMAZEing?  \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/099/datas/gallery.jpg\"/>\n<p>\n<i>This is you.</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>A Biomedical Engineering major, a non-engineer, and a part-time student/full-time worker walk into a tech talk about Unity. That sounds like the start of a bad joke, and it might explain why this oddball trio--two first-time hackers and a more experienced guy they had never met before--decided it was a good idea to try and build a 3D game instead of a traditional app or webpage. </p>\n<h2>What it does</h2>\n<p>The premise is simple: a tilt maze, not unlike the ones you might have played as a child. The experience is complicated by the fact that dim lighting obscures some of the path, and you can't always see where you are going until the ball, which has its own light source, gets there. For another twist, in its harder mode, the maze is riddled with \"trap\" holes that make you automatically lose if you fall into them. </p>\n<h2>How we built it</h2>\n<p>We used Unity to generate the majority of the game. Our primary goal was to create something that worked and had a defined beginning and end, so the project started as a simple plane that rotated around its center based on user keyboard input. We then created a plane with walls and a hole in the bottom using Fusion 360  and imported this as an asset to replace the simple plane. The ball was created by simply generating a sphere object and manipulating its gravity to roll with the movement of the plane. We placed triggers at the bottom of the hole in the map so that the falling ball would cue a win screen upon collision. </p>\n<p>With the basic win condition established, we modified the main map to contain a full maze (built in Fusion 360) to navigate while guiding the ball to the final hole. After that, we built two more separate scenes, one of which functioned as a homepage, and the other of which contained the same maze but with additional holes added at some of the dead ends. From there, adding triggers for losing under these new holes was a relatively simple task, and the rest of our time just involved manipulating colors, lighting, and lens flares to make the game aesthetically pleasing.</p>\n<h2>Challenges we ran into</h2>\n<p>None of us had ever used Unity before, so there was a bit of a learning curve to figure out how to make the physics and camera angles work. For an embarrassingly long time, the ball kept falling through the bottom of the stage, and that's really all that needs to be said there.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Well, the ball doesn't fall through the stage anymore, so that was kind of a big deal. </p>\n<p>In all seriousness, though, our single biggest accomplishment was managing to overcome our lack of knowledge and produce a workable product within the time constraints of the weekend. We came in with literally no idea what we wanted to build, so being able to create, plan, and execute a course of action was a victory in and of itself. As far as technical elements, we were proud of our decision to build the map in Fusion 360 and import it as an asset, which allowed us to capitalize on skills we already had while navigating an otherwise unfamiliar environment.</p>\n<h2>What we learned</h2>\n<p><em>The Big One:</em></p>\n<p>How to use Unity</p>\n<p><em>The Details</em></p>\n<ul>\n<li>Implementation of simple physics</li>\n<li>Textures/meshes</li>\n<li>Collision detection/triggers</li>\n<li>Basic game design elements such as win/lose conditions and level building</li>\n</ul>\n<h2>What's next for eyeMAZEing... iMAZEing... Eye Feel aMAZEing?</h2>\n<p>From a play perspective, the easiest next step is the generation of more mazes, with varying levels of complexity, to provide a wider range of gameplay. In addition to levels where the mazes are easier or harder, we had the idea of a \"wormhole\" level, where falling into one of the trap holes causes the ball to respawn next to one of the other holes, selected at random. We considered implementing a score counter as well, to keep track of how many times you won or lost the game. </p>\n<p>In terms of display, we would like to have a nicer menu (possibly with a spiffy logo) and more engaging win/lose screens. Adding sound effects or background music would also enhance the user experience.</p>\n<p>And finally, though the current version is just for Mac, we hope to create versions that are playable on PC, mobile, and tablet platforms as well.</p>\n<h2>Why the ball looks like an eye</h2>\n<p>Hell if we know. It just seemed fun.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/autodesk-fusion-360\">autodesk-fusion-360</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/meganoholm/iMAZEing\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/meganoholm/iMAZEing\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Spending pattern of Capital One customers", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Spending pattern of Capital One customers \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/432/datas/gallery.jpg\"/>\n<p>\n<i>Nashville</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Spending pattern of Capital One customers \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/443/829/datas/gallery.jpg\"/>\n<p>\n<i>World</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Spending pattern of Capital One customers \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/443/854/datas/gallery.jpg\"/>\n<p>\n<i>Rewards</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Spending pattern of Capital One customers \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/443/866/datas/gallery.jpg\"/>\n<p>\n<i>Spending category</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>A bank typically gives rewards program to its card holders. People who sign up for the rewards program for some card are more likely to use that card. By looking at the past spending pattern of it's card users, a bank can tune it's rewards program so that it's card members are more likely to sign up for rewards and thus increase it's card usage.</p>\n<h2>What it does</h2>\n<p>We look at the spending pattern, where consumers go, and what products and business establishments are card members more likely to frequent.</p>\n<h2>How I built it</h2>\n<p>We downloaded JSON files using CapitalOne API. We used jupyter notebook to do the exploratory data analysis. We used folium package to integrate with OpenStreetMap.</p>\n<h2>Challenges I ran into</h2>\n<p>We were initially planning to use some machine learning techniques to cluster data, build customer/merchant networks, and make predictions about the data. However, ran into trouble downloading the JSON file from the start. We then tried to use MicroStrategy API to make some visualizations but that did not pan out. We had no time to invest on applying ideas from machine learning.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Successfully integrated consumer data with geo locations using leaflet API. </p>\n<h2>What I learned</h2>\n<p>Learn from data, explore data first before making assumptions.</p>\n<h2>What's next for Spending pattern of Capital One customers</h2>\n<p>Data provided by Capital One has a rich set of features that one can further explore. We did not touch upon time-series, ATM, branches, and many other topics that could add lot more value to what we want to model. One can use past data to find fraudulent/suspicious incidents, send alerts to users based on merchant location, etc.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/leaflet-js\">leaflet.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li></ul>\n</div>\n</div>", ["", "", "", ""]], ["MoneyMissionControl", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We not only provide you with the Money Control interface, but also provide best discount deals.</p>\n<h2>What it does</h2>\n<p>It plots the expenditures and current balance of an account and suggests some cheaper deals with respect to the expenditures of the customer</p>\n<h2>How we built it</h2>\n<p>We created the graphical representations of balance and expenditures of bank accounts and used the Capital One's API to access the Bank Account Data. Then we implemented an SVM that suggested cheaper rates of commodities that were available to the customer while he/she was paying more.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Submitting a Project!\n<img alt=\"meme3\" data-canonical-url=\"https://uncommongeek.files.wordpress.com/2014/08/achievement-unlocked-template.jpg\" src=\"https://res.cloudinary.com/devpost/image/fetch/s--QXXcUaU1--/https://uncommongeek.files.wordpress.com/2014/08/achievement-unlocked-template.jpg\"/></p>\n<h2>What's next for MoneyMissionControl</h2>\n<p>This web app can be implemented by Bank Companies so that Customers don't have to end up paying more than they should. It can be used as a tool to save money effectively.\n<img alt=\"meme3\" data-canonical-url=\"http://beebom.redkapmedia.netdna-cdn.com/wp-content/uploads/2014/06/3.gif\" src=\"https://res.cloudinary.com/devpost/image/fetch/s--Q2NfjgzU--/http://beebom.redkapmedia.netdna-cdn.com/wp-content/uploads/2014/06/3.gif\"/></p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/barnyardfoosball/vandyhacks\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/barnyardfoosball/vandyhacks\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Built API???", "", "", ""]], ["CardSlack", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/6shGFo-lZ58?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"CardSlack \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/109/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"CardSlack \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/112/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"CardSlack \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/116/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"CardSlack \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/118/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Sean, a classmate of ours, pitched an idea in our Tech Entrepreneurship class to help his mom pay for an insurance deductable. We believed in what he was trying to do, and who he was trying to help.</p>\n<p>We want to make sure that nobody misses a special event again. Birthday? No problem. Graduation? We got you. New baby girl? You better believe it.</p>\n<p>What's more personal than a handwritten card? Nothing.</p>\n<h2>What it does</h2>\n<p>CardSlack allows you to easily register through Facebook and instantly schedule card orders for the events you don't want to miss in your life six months down the road. Once you let us know, we'll handle the rest. Two weeks before the event we'll mail you the card and a pre-stamped envelope.</p>\n<p>In an effort to make this day as special as possible, if you're planning for a birthday or congratulating someone we'll make event recommendations. If there's a Mariah Carey concert that day, you'll know!</p>\n<h2>How we built it</h2>\n<p>We used React to make a single page application that seamlessly integrates with Facebook authentication to make a truly simple user experience. On the backend, we used Node.js with Express.js and MongoDB to create easy-to-use endpoints for availability and security. We support persistence on the front- and back-ends with smart sessions.</p>\n<p>In general, we designed our app to be able to scale, because this project does not end at VandyHacks. We created a well-architected application that allows for extensibility and reusability. We created more APIs than we needed to allow for scaling the application in a meaningful way.</p>\n<h2>Challenges we ran into</h2>\n<p>react-router (at points) was a nightmare. We couldn't figure out where we our routes were directing. Turns out we were missing two slashes.\n<img alt=\"Doh!\" data-canonical-url=\"https://media0.giphy.com/media/TwtXMS5EnKDBK/200_s.gif\" src=\"https://res.cloudinary.com/devpost/image/fetch/s--s69D4rVO--/https://media0.giphy.com/media/TwtXMS5EnKDBK/200_s.gif\"/></p>\n<p>It also turns out that it's really hard to authenticate with Facebook using Postman. That was a blocker for a while, and we couldn't figure out why. Cookies and redirection are hard when it's not in a browser.\n<img alt=\"Ugh.\" data-canonical-url=\"http://webchutney.pk/content/uploads/2015/11/ugh.gif\" src=\"https://res.cloudinary.com/devpost/image/fetch/s--sZUN3LqF--/http://webchutney.pk/content/uploads/2015/11/ugh.gif\"/></p>\n<h2>Accomplishments that we're proud of</h2>\n<p>The whole thing! We are extremely happy that this application has the potential to live on past VandyHacks III and help Sean and his family. More specifically, we love:</p>\n<ul>\n<li>Beautiful user interface</li>\n<li>Facebook Authentication</li>\n<li>SeatGeek recommendations</li>\n<li>Secure session support</li>\n</ul>\n<h2>What we learned</h2>\n<ul>\n<li>We're much better at react-router.</li>\n<li>We have a stronger understanding of MongoDB and integration with Express.js and Mongoose.</li>\n<li>SeatGeek's awesome APIs!</li>\n<li>Design implementation.</li>\n<li>Facebook Authentication.</li>\n</ul>\n<h2>What's next for CardSlack</h2>\n<ul>\n<li>Admin support</li>\n<li>Payment support</li>\n<li>Notification and cancellation support</li>\n<li>Editing and deleting orders</li>\n<li>Visualizing potential cards</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/react\">react</a></span></li><li><span class=\"cp-tag\">webpack</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongoose\">mongoose</a></span></li><li><span class=\"cp-tag\">morgan</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/facebook-login-api\">facebook-login-api</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/seatgeek\">seatgeek</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/ethanlook/cardslack/tree/seatgeek\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ethanlook/cardslack/tree/seatgeek\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["In general, I worked on the backend while Ethan worked on the frontend.  To create endpoints, I used Express and Node.Js.  I used MongoDB as my server.  I used express-session for server persistence and authentication.  I used passport for Facebook authentication.  I used morgan for logging.  In all, I wrote 12 functioning and tested endpoints.", ""]], ["Music-Maker", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Music-Maker \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/007/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>Music Maker takes in a dat file and allows you to make changes to the file. You can either reverse the song, slow it down, speed it up, add pauses, or remix it.</p>\n<p>Instructions:</p>\n<ol>\n<li><p>When prompted for file, add name of file + .dat.\nEx - Enter the name of the input file: \"heart.dat\"</p></li>\n<li><p>Choose name of the output file. (has to be a .dat file)\nEx - Enter the name of the output file: \"heartRemix.dat\"</p></li>\n<li><p>Pick the type of remix.</p></li>\n<li><p>Use sox to convert .dat to .wav. Or other converter to convert .dat to file type of choice.</p></li>\n<li><p>Enjoy!</p></li>\n</ol>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li><li><span class=\"cp-tag\">cmake</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/maxengel99/Music-Maker\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/maxengel99/Music-Maker\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Foodcider", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We often waste so much time trying to decide where to eat.</p>\n<h2>What it does</h2>\n<p>This application searches restaurants nearby based on specific search preferences. You can then select from a list, or have the application randomly select one for you. Directions to this place will then be printed.</p>\n<h2>How we built it</h2>\n<p>We used a Python package to access the Google Maps APIs.</p>\n<h2>Challenges we ran into</h2>\n<p>Working with JSON objects obtained from the APIs</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We have a working application!</p>\n<h2>What we learned</h2>\n<p>How to work with APIs</p>\n<h2>What's next for Foodcider</h2>\n<p>Visualization! Maybe a web site or iOS app</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-maps\">google-maps</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-directions\">google-directions</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-places\">google-places</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-geocoding\">google-geocoding</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/janetcfang/Foodcider\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/janetcfang/Foodcider\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["SensesAid", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>I (Shane) wanted to create a product with social impact, but I also wanted to create a software project that used advance technology--preferably AR/VR. While brainstorming on the bus to VandyHacks, that's when it hit me: using AR/VR to help the legally deaf.</p>\n<h2>What it does</h2>\n<p>SensesAid is mobile app that allows the blind to see what the person in front of them is saying in almost real-time. Furthermore, they can choose to view the world in 2D; 3D Augmented Reality; or disengage visually with Virtual Reality, but still see what the person is saying.</p>\n<h2>How I built it</h2>\n<p>We used Android Studio to build the app, Google Speech Recognition to achieve speech to text with custom algorithms to enhance performance, as well as Vuforia with Google Cardboard integration for Augemented and Virtual Reality.</p>\n<h2>Challenges I ran into</h2>\n<p>Vuforia is horribly underdocumented, and there were many different software that had to be incorporated. Not to mention Google Cardboard was not originally meant for AR.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We're proud of being able to achieve our first VR/AR application, gain experience in Unity, and learn more about Android OS.</p>\n<h2>What I learned</h2>\n<h2>What's next for SensesAid</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/vuforia\">vuforia</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google--2\">google</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/speechapi\">speechapi</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/machine-learning\">machine-learning</a></span></li><li><span class=\"cp-tag\">ai</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-cardboard\">google-cardboard</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Austrie/SensesAid-VandyHacks-P1\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Austrie/SensesAid-VandyHacks-P1\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/Austrie/SensesAid-VandyHacks-P2\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Austrie/SensesAid-VandyHacks-P2\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"http://SensesAid.com\" rel=\"nofollow\" target=\"_blank\" title=\"http://SensesAid.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>SensesAid.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["looked at ways to add augmented reality to a speech-to-text engine", "", ""]], ["PolyPlaster", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"PolyPlaster \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/443/989/datas/gallery.jpg\"/>\n<p>\n<i>Creepiness distilled. ;)</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"PolyPlaster \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/290/datas/gallery.jpg\"/>\n<p>\n<i>guess who this is</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>There was something like this in C# I ran into a while back.</p>\n<h2>What it does</h2>\n<p>It reconstructs images using polygons</p>\n<h2>How I built it...</h2>\n<p>Genetic evolution algorithm, randomized selective evolution, gradient descent optimization, tried to use DeltaE color difference scheme, Javascript Canvas for the win (and the super bad performance)...</p>\n<h2>Challenges I ran into</h2>\n<p>Everything. Such as the fact that you have to press a button exactly seven times on android to enable dev mode for usb debugging. And the fact that tango's java api has such low-level drawing based on open-gl. And that Gradle throws errors faster than Tom Brady throws footballs.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Submitting stuff. Also, getting to know other people.</p>\n<h2>What I learned</h2>\n<p>Getting stuff to work is really hard. Also 75% of hackathons are fixing bugs, configuration, and using Stack Overflow to look up what is causing errors.</p>\n<h2>What's next for PolyPlaster</h2>\n<p>Implement better color accuracy difference testing</p>\n<h3>CAN COMPUTERS PAINT AS WELL AS DA VINCI???? <em>GASP</em></h3>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://greenlantern101.github.io/PolyPlaster\" rel=\"nofollow\" target=\"_blank\" title=\"https://greenlantern101.github.io/PolyPlaster\">\n<i class=\"ss-icon ss-link\"></i>\n<span>greenlantern101.github.io</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["messed around"]], ["DrawRandy", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/c_jp1-6GIjo?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"DrawRandy \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/441/660/datas/gallery.jpg\"/>\n<p>\n<i>What we thought this weekend was going to be like...</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"DrawRandy \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/441/666/datas/gallery.jpg\"/>\n<p>\n<i>...but what it was really like</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Bob Ross at 1AM</p>\n<h2>What it does</h2>\n<p>Lets you paint happy little trees</p>\n<h2>How we built it</h2>\n<p>We used Android Studio</p>\n<h2>Challenges we ran into</h2>\n<p>Technology hated us this weekend.We rose in victory at the crack of dawn on the last day of this Hackathon.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>The fact that we have not ruined any hardware at the risk of spilling orange juice all over our working station.</p>\n<h2>What we learned</h2>\n<p>That we can survive a whole weekend on coffee and prayers.</p>\n<h2>What's next for DrawRandy</h2>\n<p>motion sensing and more memes.:)</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li></ul>\n</div>\n</div>", ["", "", ""]], ["The Narrator", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>The Narrator</h1>\n<hr/>\n<h2>Description</h2>\n<p>This is a collection of text based puzzle/adventure games implemented to be accessed through the <a href=\"https://developers.facebook.com/docs/messenger-platform\" rel=\"nofollow\">Facebook Messenger Platform</a>. The backend will be implemented using <a href=\"http://vapor.codes\" rel=\"nofollow\">Swift Vapor</a> and hosted on a <a href=\"http://herokuapp.com\" rel=\"nofollow\">Heroku</a> or <a href=\"http://openshift.com\" rel=\"nofollow\">Openshift</a> server. This will provide additional experience working with a non-iOS Swift-based platform, while being able to explore the Facebook Messenger API. </p>\n<h2>Usage</h2>\n<p>To generate an XCode project, use <code>vapor xcode</code></p>\n<h2>Access</h2>\n<p>API endpoint is located at <a href=\"https://dont-shoot-the-messenger.herokuapp.com\" rel=\"nofollow\">https://dont-shoot-the-messenger.herokuapp.com</a></p>\n<h2>Collaborators</h2>\n<ul>\n<li>Chris Nagy</li>\n</ul>\n<p>Interested in contributing? Either fork the repo or contact me at <a href=\"mailto:schrismartin@me.com\" rel=\"nofollow\">schrismartin@me.com</a></p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/schrismartin/dont-shoot-the-messenger\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/schrismartin/dont-shoot-the-messenger\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Multiathlete Timer", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Multiathlete Timer \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/245/datas/gallery.jpg\"/>\n<p>\n<i>Results Screen</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>I've always been annoyed at having to use multiple stopwatches to record my teammates' mile or lap splits at races.</p>\n<h2>What it does</h2>\n<p>The application is a chronograph that allows one to record splits for multiple runners.</p>\n<h2>How I built it</h2>\n<p>I used the Android SDK with Android Studio to produce the application.</p>\n<h2>Challenges I ran into</h2>\n<p>Working with a GUI API with which I was not familiar.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Implementing a simple but very overlooked idea.</p>\n<h2>What I learned</h2>\n<p>The Android XML scheme, the Android Java API, and GUI development skills.</p>\n<h2>What's next for Multiathlete Timer</h2>\n<p>Allowing coaches to addtionally set specific points in advance, labeled with distances, at which they will take athletes' splits and use said splits to determine athletes' paces throughout the race.</p>\n<p>Storage of athlete names for reuse.</p>\n<p>Scoring Features: allow coaches to record when each of their athletes or an athlete of a named, opposing team crosses the finish line, and use the order of athletes' finishes to determine the score for each team according to a specific scoring scheme. For example, one popular scoring scheme for Track races is 10 points, 8 points, 6 points, 4 points, 2 points, and 1 point for first through sixth place, in that order.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n</div>", [""]], ["VandyBank", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We were inspired to make a simple and clean looking banking app using Capital One's API. None of us have much experience working with HTTP requests, so we were excited to gain experience with using API's. We really wanted to make a good-looking interface.</p>\n<h2>What it does</h2>\n<p>It manages your bank accounts. You can create, edit, merge, transfer, etc any bank accounts. It keeps track of your transaction history and bills.</p>\n<h2>How we built it</h2>\n<p>We used Java in eclipse, and used apache HttpClient to make HTTP requests to the Capital One Nessie API. We used JSON parsers to parse the Capital One API's output. We used lwjgl to help with the rendering.</p>\n<h2>Challenges we ran into</h2>\n<p>It was challenging to get the API integrated into our program. We had trouble setting up put and delete http requests, \nand there were various problems getting the rendering side to interact with the logic side.</p>\n<h2>What we learned</h2>\n<p>How to use an API, specifically Capital one's, as well as JSON parsers.</p>\n<h2>What's next for VandyBank</h2>\n<p>We will probably work to finish up the Bills, Location, and Settings sections of the application. We also would be like to add passwords to accounts.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/eclipse\">eclipse</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/github\">github</a></span></li><li><span class=\"cp-tag\">lwjgl</span></li><li><span class=\"cp-tag\">capital-one-api</span></li><li><span class=\"cp-tag\">apache-commons</span></li><li><span class=\"cp-tag\">apache-http-client</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/jmbuck4/VandyHacks2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/jmbuck4/VandyHacks2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Asteroid Harvester", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>What's the biggest threat to our lives, our childrens' lives, and domestic and international security as we know it?</p>\n<p>The perpetual fear that an asteroid strike is imminent. </p>\n<p>We wanted to do something pertaining to space and data, and wanted to a game as well, and thought we could do an intersect of the two. Now you can blast away asteroids and save the earth (while making some money on the side from mining their materials)!</p>\n<h2>What it does</h2>\n<p>Asteroid Harvester is a new take on the classic 80s arcade game, integrating real data from NASA's asteroid databases such as:</p>\n<ul>\n<li> distance from Earth on the closest collision course</li>\n<li> diameter </li>\n<li> relative velocity</li>\n<li> price index of the value of the elements composing the asteroid</li>\n</ul>\n<h2>How we built it</h2>\n<ul>\n<li>Frontend site: HTML, CSS, JS (TypeIt.js)</li>\n<li>Game: Python (pygame)</li>\n<li>API Requests: Python</li>\n</ul>\n<h2>Challenges we ran into</h2>\n<p>We were unable to extract the information from the API calls in time to add them to the game.</p>\n<h2>What we learned</h2>\n<p>We learned quite a bit about astronomy, especially how much certain asteroids are priced at (many are valued over $100 <em>trillion</em> each!)</p>\n<h2>What's next for Asteroid Harvester</h2>\n<p>Fully integrating the components together, and making the game 3D &amp; VR-compatible.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/pygame\">pygame</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/andrewlloydcartwright/vandyhacks3/\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/andrewlloydcartwright/vandyhacks3/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I made all of the front-end using HTML/CSS, JS, Atom and GitHUb.", "I worked on programming the game and developing game logic into the program in order to create the ultimate gaming experience.", ""]], ["EchoChamber", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/uTCJuVvHzjA?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"EchoChamber \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/443/824/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p><strong>EchoChamber</strong> is a content recommendation algorithm that encourages diverse thought by suggesting content that deviates from the user's preferences.</p>\n<h2>Inspiration</h2>\n<p>The inspiration for this project came from the recent election cycle. Many analysts attributed the divisiveness of the masses to the echo chamber effect. Essentially social media have honed their recommendation systems to an extent where a user's experience is entirely influenced by their preferences. This means that users end up seeing <em>what they want to see</em>. This leads to lesser cross communication between netizens and more vitriol.</p>\n<p>My aim with this project was to create a recommendation system where the user is encouraged to explore topics that are measurably different from user history. The hope is that users will be able to get a perspective on the content they consume online which will lead to better social/political discourse.</p>\n<p>Some sources:  </p>\n<ul>\n<li><a href=\"http://www.dailydot.com/via/internet-echo-chamber-2016-election/\" rel=\"nofollow\">Daily Dot</a></li>\n<li><a href=\"https://www.theguardian.com/technology/2016/nov/10/facebook-fake-news-election-conspiracy-theories\" rel=\"nofollow\">The Guardian</a></li>\n</ul>\n<h2>What it does</h2>\n<p><strong>EchoChamber</strong> is based on <a href=\"https://imgur.com\" rel=\"nofollow\">imgur's</a> API as a demonstration of the algorithm. First, it generates a space where imgur posts (or any textual content) can be represented with maximum distinction. Then it follows a user's browsing history across multiple posts and suggests topics that deviate from their past preferences. It proceeds as follows:  </p>\n<ul>\n<li>Parse textual content (imgur post comments) for training (using the 'political' tag),</li>\n<li>Preprocess data (filter out common words etc.),</li>\n<li>Use Principal Component Analysis to reduce dimensionality of data points.</li>\n<li>Generate axes using Principal Components that best distinguish posts,</li>\n<li>Download/Parse/Preprocess random <em>imgur</em> content for testing,</li>\n<li>Project testing data/posts to axes previously calculated and obtain coordinates,\n\n<ul>\n<li>Generate a Markov chain where the next recommendation depends on maximizing a distance metric from previous choices (i.e. obtain contrasting content).</li>\n<li>For each choice, update Markov chain and provide recommendation.</li>\n</ul></li>\n</ul>\n<h2>How I built it</h2>\n<p><strong>EchoChamber</strong> was built using python on top of <a href=\"https://github.com/hazrmard/imgurPCA\" rel=\"nofollow\">imgurpca</a>. <em>imgurpca</em> is a modular and extensible machine learning library for <em>imgur.com</em> that I am developing. For VandyHacks III, I forked the repository, made modifications to core libraries, and wrote <code>echochamber</code> and <code>get_axes</code> scripts. </p>\n<h2>Challenges I ran into</h2>\n<p>I ran into multiple developmental and theoretical challenges:</p>\n<ul>\n<li>I had to upgrade <em>imgurpca</em> library from python2 to python3 which required significant rewriting of code.</li>\n<li>Initially I approached this problem using a Feed Forward Neural Network which I wrote in its entirety (link below). However given bandwidth restrictions from the imgur API, I did not have sufficient data to train the network. So I switched to unsupervised learning.</li>\n<li>I had several options on the operation of the Markov chain that provides recommendations. <strong>EchoChamber</strong> works with arbitrary dimensions in the data. My first distance metric was the Cartesian distance between the hyperplane defined by a user's previous choices/browsing history and the rest of the projected points. A hyperplane is a line in 2 dimensions and a plane in 3 dimensions with known formulae for distance. However it becomes computationally expensive in higher dimensions. My second choice was to get Cartesian distances of points from the centroid generated from weighted past choices of posts by the user.</li>\n</ul>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Over the weekend I read up on neural networks and wrote my own network from scratch for the first time.</p>\n<h2>What I learned</h2>\n<p>I learned about the utility of various machine learning methods while approaching this problem. From a development standpoint I learned about the importance of keeping compatibility/performance in mind.</p>\n<h2>What's next for Echo Chamber</h2>\n<p>The algorithm can be further improved through natural language processing to get a better idea of the user's preferences. I am interested to see how it would perform if recommendations are based on classification methods (like logistic regression) for similar/different content. In addition it can be ported to other APIs besides imgur.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/numpy\">numpy</a></span></li><li><span class=\"cp-tag\">matplotlib</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/hazrmard/imgurPCA/blob/dev/examples/echochamber.py\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/hazrmard/imgurPCA/blob/dev/examples/echochamber.py\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/hazrmard/imgurPCA/blob/dev/imgurpca/macros/gen_axes.py\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/hazrmard/imgurPCA/blob/dev/imgurpca/macros/gen_axes.py\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/hazrmard/imgurPCA/blob/dev/imgurpca/base/neural.py\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/hazrmard/imgurPCA/blob/dev/imgurpca/base/neural.py\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Dylan's Bad Day", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/BVJ0ZxUGbEQ?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Dylan's Bad Day \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/443/752/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>After the stress of the election and the stress of a long week of classes, this team was having a difficult time preparing for VandyHacks. We were all very excited for the event, but sometimes, after a stressful week, even the most enjoyable things seem hard.</p>\n<p>It was out of this shared sentiment that Dylan's Bad Day was born. The game addresses a heroic challenge, but not the slaying of a dragon or the rescuing of a princess. Dylan's Bad Day is a game that celebrates the heroic effort it takes to get out of bed in the morning, participate in social activity, and do the work you have to do just to make it through the day. It is the depiction of what it means to battle your own fears and inhibitions in order to truly live. </p>\n<p>It is time we start heroizing what it means to participate and try in life because that, in itself, is heroic. So we hope you enjoy Dylan's Bad Day, and we hope you know that everything is going to be okay. </p>\n<h2>What it does</h2>\n<p>Dylan's Bad Day places you in the shoes of college student Dylan. Dylan awakes in his own bed one morning, but he soon finds that it is very difficult to get out of bed. In order for Dylan to make it out of bed he must collect enough dopamine! He then finds himself challenged with meeting a friend for lunch and writing an essay. In each case, Dylan must overcome his own social anxieties and fears in order to make it through the day.</p>\n<h2>How we built it</h2>\n<p>We used the Python 3 scripting language in conjunction with pygame modules to create an immersive game experience. Multiple mini-games were created and embedded into the main game so that the play-through is seamless and each mini-game adds to the overall narrative. </p>\n<h2>Challenges we ran into</h2>\n<p>Only one of our team members had worked with the pygame library before, so there was a learning curve for the rest of the team to actualize our ideas in the scope of the pygame library. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are proud of being able to finish an entire video game in the span of a weekend, starting from the ground up. Also we are proud of our use of the pygame library, and how we embedded the mini-games into the overall narrative. </p>\n<h2>What we learned</h2>\n<p>We learned how to use the pygame library, and how to make video games within video games and deal with the error associated with nested update steps.</p>\n<h2>What's next for Dylan's Bad Day</h2>\n<p>We already have a plethora of ideas for expanding and editing Dylan's Bad Day. We would like to see the \"brain games\" become more visual and involved, and we are already working on including more brain physiology into the game's concept. </p>\n<p>We would like to add more levels with more complex \"brain games\" to expand the game's play time. </p>\n<p>We also want to incorporate the current research that links relaxation to certain musical tones. We would like to pair the game with music that creates a relaxing atmosphere in which to play the game. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">english</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/pygame\">pygame</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/thefunguys/dbd\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/thefunguys/dbd\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Made games. Snake and Space Invaders.", "", "", ""]], ["Gargoyle", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>After the october cyber attacks that included targets such as US DNS servers and the country of Liberia, I knew something had to be done.</p>\n<h2>What it does</h2>\n<p>Since these attacks were handled by botnets consisting of thousands of hacked iot devices, I wanted to make a program that could monitor and respond to iot devices connected to it.</p>\n<h2>How I built it</h2>\n<h2>Challenges I ran into</h2>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<h2>What's next for Gargoyle</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li></ul>\n</div>\n</div>", [""]], ["CAN'T STUMP", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/ga7__01qHFQ?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to work with Augmented Reality and was inspired by the game Slenderman and how cool it would be to play in your own house or backyard. Incorporating Augmented Reality with horror games would improve virtual horror.\nSince the election was last Tuesday we decided that instead of Slenderman, we could have an equally terrifying monster following the player around, Mr. President Elect Donald Trump.\nWe decided to make our own rules and make our own horror game.</p>\n<h2>What it does</h2>\n<p>Through Tango's AR functionality, you can explore your location try to collect film so you can take pictures of Donald Trump. Once you take 3 pictures of Trump, the game ends in a win. If Trump touches you, you lose the game, and he will always follow you around. Whenever you see him, he says a random quote. </p>\n<h2>How we built it</h2>\n<p>Using the Tango Software made by google, we used Unity with its Tango AR Camera and 3D models to piece together the game.\nWe wrote scripts in C# and attached them to different objects within the game.\nWe used Blender to create our own Donald Trump 3D model. \nWe used Audacity to cut out audio clips and Github to collaborate on the project.</p>\n<h2>Challenges we ran into</h2>\n<p>None of us have used Unity Before\nWe had to learn how to set certain events to trigger and had to create our own Donald Trump 3D model because the ones online were being sold for at least 50$ each so we had to recolor a free texture.\nThe Tango itself is a very buggy product, with the director of the Tango Workshop even mentioning that crashes are not common. The demo itself will not be stable enough, but it's mainly issues on the development kit end.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We managed to create an AI that follows a script so Trump continues to follow you around no matter where you go in your augmented reality. \nWe managed to trigger events that give different quotes during your encounter with Donald Trump.\nWe finished a very good prototype.</p>\n<h2>What we learned</h2>\n<p>Tango Software, Unity, Android SDK development, C# implementation, How wonderful Hattie B Fried Chicken is, how expensive 3D models are</p>\n<h2>What's next for CAN'T STUMP</h2>\n<p>Improved graphics, walking animations, figuring out ways for it not to crash when moving too quickly, making multiple levels, more layers of complexity to the game, user-generated experience, perhaps mods to allow you to change who is your pursuer and the things you are collecting and the quotes being said, being able to set levels of how quickly you are being pursued</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/project-tango\">project-tango</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li></ul>\n</div>\n</div>", ["I used Blender and Python to create the 3D model. I used UV mapping to wrap the texture to the models properly", "I worked on the Game Function and Game UI with Unity, making use of Tango API and Tango script to incorporate the AR aspect.", "The game was my idea. ", ""]], ["Pixel Plotter", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Before the competition, our group had a massive brainstorming session about what kind of project we wanted to tackle at this competition. Each of us wanted to learn something new and test our abilities, so we decided to play to the strength of all of our members' abilities. One member, Paul, has done VEX robotics for several years and wanted to build something using the materials he had handy. Our other two have recently been introduced to the world of microcontrollers and wanted to learn how to create something using them. Hence, Pixel Plotter was born.</p>\n<h2>What it does</h2>\n<p>Our initial idea for the project was to take any pixel art image and draw it using our plotter. As the competition evolved, we choose to take away the color aspect and instead our project draws an outline of a pixel art image.</p>\n<h2>How we built it</h2>\n<p>Initially, we created python scripts to read in an image, create edge points that designated outlines of different colors, and then communicate with our VEX 2-axis plotter with a raspberry pi to draw the image. Throughout the competition, we decided to instead use a VEX controller to create the paths and draw an image. </p>\n<h2>Challenges we ran into</h2>\n<p>Our group came into this competition with a slight disadvantage with having to drive all the way from Lakeland, FL and dealing with the lack of sleep that came with it. Throughout the competition, we realized we did not have a critical component for the Raspberry Pi to control the motors and had to scrap the idea completely. As well, the construction of the 2-axis plotter came with its own challenges </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>The fact that our team was able to travel and participate in this competition is an accomplishment in itself. In terms of our performance, interfacing with a microcontroller and controlling motors with one was a concept completely new to all of us and having a functional plotter is amazing.</p>\n<h2>What we learned</h2>\n<p>We mainly learned how to interface with microcontrollers and the problems that arise with building hardware during a competition like this.</p>\n<h2>What's next for Pixel Plotter</h2>\n<p>When we get back to our university, we plan to get the parts that we were missing initially and reconfigure the motor controls through a raspberry pi as opposed to the VEX controller. In doing this, we will also have the ability to draw more complex art using the python code we created during the beginning of this competition.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">vex</span></li><li><span class=\"cp-tag\">robotc</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li></ul>\n</div>\n</div>", ["Initially I created a python script using opencv which interpreted pixel art images and created a set of coordinates for the plotter to outline. After moving away from using the pi, I helped calibrate the plotter and created a simple outline of our school mascot for it to trace. This project furthered my understanding of microcontrollers and image processing.", "My portion of the project was to build the actual plotting mechanism. Using vex robotics components, I designed and constructed a 2 - axis plotter. My strengths are in robotics programs, having been in VEX robotics for about 6 years now. \n", ""]], ["SPEEDBOYS", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p><a href=\"https://www.youtube.com/watch?v=xlpByUfVGHY\" rel=\"nofollow\">All that is necessary</a></p>\n<h2>What it does</h2>\n<p>Projects a holographic DRIFT MISSILE into your very reality. Get ready to attack hairpins with the best while Eurobeat fills your ears. Its an RC car, but a hologram! </p>\n<h2>How we built it</h2>\n<p>idk we just messed around in unity for like 2 days.</p>\n<h2>Challenges we ran into</h2>\n<ul>\n<li>Learning to program</li>\n<li>Forgetting how to program</li>\n<li>Relearning how to program</li>\n<li>Microsoft Documentation (including lies)</li>\n<li>Sleep deprivation\n## Accomplishments that we're proud of\nThe car plays sick Eurobeat.\n## What we learned \nYou never know what's gonna come through that door.\n## What's next for SPEEDBOYS</li>\n<li>Buildable tracks</li>\n<li>More powerful environment recognition</li>\n<li>Different car models</li>\n<li>Multiplayer</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/microsoft-hololens\">microsoft-hololens</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag\">vs</span></li></ul>\n</div>\n</div>", ["", "", "", ""]], ["confero", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<h2>What it does</h2>\n<p>It provide a safe environment for people to debate topics with some who has the opposite opinion.</p>\n<h2>How I built it</h2>\n<p>I build this app using node js and express js. I spent the first few hours creating the backend and then the front end. I then spent the rest of my time hooking everything together.</p>\n<h2>Challenges I ran into</h2>\n<p>I haven't worked much with socket io, so i spent quite a bit of time trying to figure out the a way to get it to do what i want</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Though it's far from complete, what I have right now really represents what I was going for for this project.</p>\n<h2>What I learned</h2>\n<p>I learn a bit more about socketio</p>\n<h2>What's next for confero</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/socket-io\">socket.io</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/angular-js\">angular.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mean\">mean</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://10.67.252.44:8080\" rel=\"nofollow\" target=\"_blank\" title=\"http://10.67.252.44:8080\">\n<i class=\"ss-icon ss-link\"></i>\n<span>10.67.252.44</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["ios jojo", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"ios jojo \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/443/780/datas/gallery.jpg\"/>\n<p>\n<i>J</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<h2>What it does</h2>\n<h2>How we built it</h2>\n<h2>Challenges we ran into</h2>\n<h2>Accomplishments that we're proud of</h2>\n<h2>What we learned</h2>\n<h2>What's next for ios jojo</h2>\n<p>We just wanted to learn iOS development and like jojo bizarre adventure </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li></ul>\n</div>\n</div>", [""]], ["Cnct", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Cnct \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/443/406/datas/gallery.jpg\"/>\n<p>\n<i>Initial app page</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Cnct \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/443/408/datas/gallery.jpg\"/>\n<p>\n<i>sorted list of attendees based off of similar interests</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Cnct \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/443/410/datas/gallery.jpg\"/>\n<p>\n<i>Interest selections for event attendees</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Cnct \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/443/407/datas/gallery.jpg\"/>\n<p>\n<i>The messages page for people you have matched with and can now directly message and network.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Cnct \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/443/409/datas/gallery.jpg\"/>\n<p>\n<i>Role/occupation selection</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Cnct \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/443/411/datas/gallery.jpg\"/>\n<p>\n<i>Working dynamic searching form to check in to an event</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>One of the most important things about attending various professional conferences is the new networks and connections that can be established at these events. Being able to connect with someone who shares interests similar to yours can lead to a meaningful connection that can benefit both of you immensely. However, most conferences tend to have upwards of 200 people and it would be very hard if not impossible to speak to everyone and find people with matching interests. The idea for Cnct (pronounced Connect) came out of a desire to establish these connections quickly and efficiently resulting in meaningful networks being formed.</p>\n<h2>What it does</h2>\n<p>Once you log in with Facebook, you pick your occupation and are then redirected to a search page. Here, you search for an event and if the organizer has it created on Cnct, you can check in. After this, you pick your interests at the event from a list of tags. These tags were created by the event organizer and should be representative of the major interests  of attendees expected at the event. Once the tags are done, you will then be provided with a list of profiles of attendees that is sorted based off of how your interests and theirs match with the ones with similar interests being seen first. We believe that meaningful connections should be made without any bias beforehand and as such we intentionally chose to hide someone's profile picture and company. This is in an effort to make potential matches as bias free as possible. Once you express interest in chatting with someone and they do the same for you, then direct messaging is opened up between you two and you can then start a conversation or even set up a meeting.</p>\n<h2>How we built it</h2>\n<p>We built this mobile app for the iOS platform and if the product grew, we would be able to build an Android version. We first used Sketch to mock out the designs of what we wanted to build and get a visualization of the product. We then used Xcode as the IDE for all our development in both Swift and Objective C. We used Firebase to handle the realtime messaging and the main database for the app. We used Facebook as the log in provider for creating new accounts. We used JSQMessaging + Firebase to build out the UI and backend functionality of the chat.</p>\n<h2>Challenges we ran into</h2>\n<p>One big thing for us was deciding what idea to work on in the first place and differentiating enough from existing products in the market.\nBuilding out the ability to trigger remote notifications using the Apple Push Notification Service.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We came into this Hackathon looking to do more than put a hack together but to build a product that is solving a need that can be put out into the world for people to benefit from. In that regard, we are very proud of how much we were able to achieve because we managed to build ~80% of the app in this very short period while still maintaining the goal of working on something meaningful and worthwhile. As a team we were able to efficiently work through all the big challenges and talk through all the features with equitable division of labor.</p>\n<h2>What we learned</h2>\n<p>We learned problem solving from both a software engineering standpoint and more in general in conceptualizing a product.</p>\n<h2>What's next for Cnct</h2>\n<p>We plan on wrapping up and polishing the  remaining ~20% of the app and then uploading to the app store within 2 weeks. There are numerous conferences happening around the Nashville region and they would provide an ideal testing bed for the app once it's live.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/iphone-sdk\">iphone-sdk</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/objective-c\">objective-c</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag\">jsqmessages</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/facebook\">facebook</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xcode\">xcode</a></span></li></ul>\n</div>\n</div>", ["", "", ""]], ["Muse Code", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Muse Code \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/029/datas/gallery.jpg\"/>\n<p>\n<i>App Screen</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to do something cool with hardware none of us had used before</p>\n<h2>What it does</h2>\n<p>Using an Android phone paired with a Muse headband through bluetooth, we can communicate in Morse code by blinking (dots) and clenching jaw muscles (dashes). The app converts these signals into letters</p>\n<h2>How we built it</h2>\n<p>We used Android Studio (Java) and the Muse headband API.</p>\n<h2>Challenges</h2>\n<p>Timing of signals being sent and synchronization of detection, as well as imperfect signals from hardware.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We solved these issues in pretty cool, sometimes unorthodox, ways.</p>\n<h2>What we learned</h2>\n<p>We learned how to interface between the Android device and the headband, and how to process a constant stream of signals</p>\n<h2>What's next for Muse Code</h2>\n<p>Make a prettier UI, and incorporate multi-device support</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag\">muse-headband</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/yunhua98/muse-code\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/yunhua98/muse-code\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["GunHacker", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/kf5SHPKW63w?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"GunHacker \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/443/712/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>This game was inspired by both the success of  \"____ Simulator\" games on the VR platform, as well as a love of customization. </p>\n<h2>What it does</h2>\n<p>GunHacker provides a shooting range with a variety of of customize/hackable guns. Upon being loaded into an in-game interface, the guns can have their type (laser vs projectile), power, color, and other settings/behaviors modified.</p>\n<h2>How We built it</h2>\n<p>We built GunHacker in unity with help from some free asset packs providing the terrain for us, as well as the models for the guns, and a toolkit called VRTK providing a framework for using the tracked motion controllers with the in-game world.</p>\n<h2>Challenges I ran into</h2>\n<p>Neither of us have too much experience with developing VR, so we were slowed down by the strange, at least to us, way that the framework wanted us to do things.</p>\n<h2>Accomplishments that we are proud of</h2>\n<p>Creating an in game interface that can change the behavior of the guns.</p>\n<h2>What we learned</h2>\n<h2>What's next for GunHacker</h2>\n<p>The current demonstration version has a very limited number of changeable settings, and basically no feedback on when settings are changed. In future versions, we would have to increase the number of changeable behaviors/settings, as well as allowing a limited form of programming new behaviors from the in game interface.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag\">steamvr</span></li><li><span class=\"cp-tag\">vrtk</span></li><li><span class=\"cp-tag\">vive</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/nmccarty/hackergun\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/nmccarty/hackergun\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Stroke", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Stroke \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/443/295/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Why fumble with a pencil and that paper score card, when you could seemlessly use your smart watch to keep track of your golf game! We wanted to build an app that made it easy for people with AndroidWear to keep their strokes counted and their game, their best. </p>\n<h2>What it does</h2>\n<p>Stroke allows you to enter the amount of strokes it take you to complete each hole in a round. Once entered and the round is completed, it sends the total amount to your smartphone for easy recording and management. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-wear\">android-wear</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n</div>", ["I worked on the functionality Android and Wear app and communication between the wearable and handheld.", "I did the overall design of the AndroidWear App as well as the branding. "]], ["caVR", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Virtual reality is known to be a bit inaccessible due to its high equipment costs. The Samsung Gear is already considered a low-budget VR setup, but the Gear (as well as most other VR headsets) still come with a downfall. VR-headsets typically only have one or two buttons, meaning that games that require complex inputs aren\u2019t supported without buying an external gamepad/controller that pairs specifically with the VR-headset. Google Cardboards don't have any buttons at all!</p>\n<p>We brought with us a USB adapter and 4 controllers that we originally intended to play Super Smash Bros. with during breaks, but instead we were able to use those to set up a low-latency input streaming system, allowing up to four players to connect and play at once. </p>\n<h2>What it does</h2>\n<p><strong>caVR</strong> (pronounced <em>\u2018Caviar\u2019</em>), or \u2018Cheap Accessible Virtual Reality\u2019, allows users to effortlessly deploy a single server that can stream input to multiple separate game clients. Instead of buying a set of brand-new expensive controllers that are specifically made to pair with their VR headsets, users can play with any old controllers that they have lying around. For example, we used GameCube controllers from 2001!</p>\n<p><img alt=\"Play testing\" data-canonical-url=\"http://i.imgur.com/NuTIIZa.jpg\" src=\"https://res.cloudinary.com/devpost/image/fetch/s--sUMeOwH9--/http://i.imgur.com/NuTIIZa.jpg\"/></p>\n<h2>How we built it</h2>\n<p>For the server, we used <a href=\"http://expressjs.com/\" rel=\"nofollow\">Express</a> and set up web-sockets to establish a persistent real-time connection between the server and the clients (portable VR headsets). For a four-player setup, five clients are used\u2014one to capture and emit signals from the controllers, and one client for each VR headset. We were able to use the <a href=\"https://www.npmjs.com/package/gamecube\" rel=\"nofollow\">gamecube</a> package as an interface to map inputs from the Gamecube controllers into plaintext signals, which are sent from the input client to the server. The server generates packets from the input signals, and broadcasts the packets wirelessly to each of the clients. </p>\n<p>We also created a simple demo game in <a href=\"https://unity3d.com/\" rel=\"nofollow\">Unity 3D</a> to demonstrate the signal broadcasting capabilities. As a final note, this hack was originally intended for the Google Cardboard (making VR even more accessible), but we were only able to get our hands on Samsung Gears. </p>\n<p><img alt=\"Our demo game\" data-canonical-url=\"http://i.imgur.com/QmMGvmH.jpg\" src=\"https://res.cloudinary.com/devpost/image/fetch/s--kAGNPPc1--/http://i.imgur.com/QmMGvmH.jpg\"/></p>\n<h2>Challenges we ran into</h2>\n<p>Our biggest challenge was getting Unity 3D to work with web sockets. We originally wanted to use <a href=\"http://socket.io/\" rel=\"nofollow\">Socket.io</a>\u2019s web socket implementation, but quickly found that the only Unity 3D protocol that would interface with Socket.io was extremely outdated. Attempts were made to patch the encoder and decoder classes ourselves, but to no avail. We eventually made our project work with a different web socket package, with some tweaks. \nOn day 2, we also ran into a small issue in which a single controller could control all of the players\u2019 units at once\u2014we were broadcasting our signals correctly, but the signals were being accepted by all units without discrimination. This was quickly resolved by adding unique identifiers to each unit and each signal source. \nFinding time to sleep was (is) also hard. It\u2019s currently 6:32 AM\u2026</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We're extremely happy with how effective the idea of using a single server to stream packets to separate VR clients ended up being. We had our doubts at first as to whether or not the latency would be absolutely horrid, but it ended up being okay.</p>\n<h2>What we learned</h2>\n<p>Many people on our team had experience developing API's in the past, but had less experience with sockets. This experience was an excellent learning opportunity for both server-side development, as well as a huge crash course for everyone in Unity to build our demo.</p>\n<h2>What's next for caVR</h2>\n<p>Currently, the server is set up on one of our personal laptops, and the clients all had some setup that had to be done. We'd like to make the <strong>caVR</strong> system more distributable and easily deployable with just a single command, because we think this can actually be huge for people who want to play games on their Gear or Google Cardboard, and potentially disruptive for the VR accessory industry. </p>\n<p><img alt=\"Smash bros\" data-canonical-url=\"http://i.imgur.com/FpzQqLB.jpg\" src=\"https://res.cloudinary.com/devpost/image/fetch/s--gdd9TXEt--/http://i.imgur.com/FpzQqLB.jpg\"/></p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/websockets\">websockets</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/love\">love</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/lesseradmin/duckgame\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/lesseradmin/duckgame\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Mainly worked on the back-end. I did most of the initial server set-up and websocket functionality. I attempted to help out on the Unity end but it was too spooky for me. Oh, and also this writeup!", "", "", ""]], ["GuardBot - A Notifier for your Front Door!", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"GuardBot - A Notifier for your Front Door! \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/442/554/datas/gallery.jpg\"/>\n<p>\n<i>GuardBot Example!</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>GuardBot</h1>\n<h2><strong>Convolutional Neural Networks</strong>, <strong>Video Livestreaming</strong>, and <strong>Image Modeling/Processing</strong>....and a <strong>GroupMe Bot?</strong></h2>\n<h3>How could these <em>possibly</em> fit together? Let us explain.</h3>\n<p>This project has quite a few bits and pieces that work together to form the basics of a security system - or more simply, a simple notifier for any visitors you may have at your front door. Better yet, you don't need any new software to get the notifications, as our product integrates directly with a GroupMe group in order to send notifications to a relevant group of people.</p>\n<h3>Step 1: Video Livestream</h3>\n<p>Our project begins with the collection of our data - which in this case is a <em>live feed from a computer's webcam</em>. We were able to use OpenCV in order to capture a direct stream of the input data received by a laptop's camera, and then used <em>a sample website created by Flask</em> in order to send this livestream to the cloud. A service called ngrok allowed us to easily host this video livestream and make it accessible to other devices.</p>\n<h4>Relevant files, services, &amp; credits (thanks for providing us with stuff!):</h4>\n<p>camera.py, main.py, index.html, ngrok, python3, random people on stack overflow</p>\n<h3>Step 2: Amazon EC2 and Convolutional Neural Network</h3>\n<p>Once our video stream was on the internet and available, we created an <em>Amazon EC2 instance</em> which is capable of intensive GPU related calculations. Like actually, that stuff is reeeeal nifty. We used our EC2 instance in conjunction with a <em>deep learning framework known as TensorFlow</em>, and it allowed us to quickly process frames from our video stream and detect the various objects present in said frames. We used specifically created a python script to parse the stream and save frames for further analysis - these frames then were sent through the TensorFlow framework.</p>\n<h4>Relevant files, services, &amp; credits (thanks for providing us with stuff!):</h4>\n<p>TensorFlow framework, Amazon EC2, python3, random people on stack overflow</p>\n<h3>Step 3: GroupMe Bot?</h3>\n<p>We wanted to provide our users with a simple yet elegant way to stay updated on their visitors, whether they be wanted or unwanted. Therefore, we decided to use the publicly available <em>GroovyAPI for Python3</em> to create a GroupMe Bot. This bot is capable of informing a group of users that a person is approaching the camera. GroupMe provided an elegant solution for this, as we are easily able to notify relevant individuals in any given scenario.</p>\n<h4>Relevant files, services, &amp; credits (thanks for providing us with stuff!):</h4>\n<p>Dude who made the Groupy API, Python3, Conor Joplin (thanks man)</p>\n<h2>So after all that....where does this leave us?</h2>\n<p>We made a camera that does a bunch of super fancy stuff to figure out when a person is present and can notify people using GroupMe. Ta-da! Sidenote: It's still being worked on.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">ngrok</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-ec2\">amazon-ec2</a></span></li><li><span class=\"cp-tag\">groupy</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/groupme\">groupme</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag\">tensorflow</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/opencv\">opencv</a></span></li></ul>\n</div>\n</div>", ["I was primarily in charge of the deep learning/ computer vision part of the project.  My main contribution was integrating the CNN with the bot and teaching the group about neural networks and how the model worked.  ", ""]], ["Leap Motion Passkey", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Searching for a more secure way to enter passwords or encryption keys.</p>\n<h2>What it does</h2>\n<p>Encrypts a text file using a key generated through gestures made with the Leap Motion Controller.</p>\n<h2>How we built it</h2>\n<p>Written completely in python using Leap Motion SDK.</p>\n<h2>Challenges we ran into</h2>\n<p>Consistent Reading from the Leap Motion Controller.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Personal cipher and grasp of Leap Motion API.</p>\n<h2>What we learned</h2>\n<p>How to interact with Leap Motion API in python.</p>\n<h2>What's next for Leap Motion Passkey</h2>\n<p>Porting to a python Flask web server using Javascript Leap Motion API.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/leap-motion\">leap-motion</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/boxerbaby30/VandyHacks---Leap-Motion-PassKey\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/boxerbaby30/VandyHacks---Leap-Motion-PassKey\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["BabuFi", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<h3>The Original Plan</h3>\n<p>We originally wanted to work on a project involving soldering, which we found out was not allowed.\nInstead, we took the opportunity to come up with a cool idea with our resources.</p>\n<h2>What it does</h2>\n<p>It revolutionizes network traffic analysis by offering a global scale visualization that can be utilizes as an SAS.</p>\n<h2>How we built it</h2>\n<p>We used console commands to access data usage at specific points in time. We then logged data in a database. Finally, we used a variety of languages to display and represent the aggregated data. </p>\n<h2>Challenges we ran into</h2>\n<p>We originally planned to work with soldered LED lights, but we were unfortunately not able to. We then spent several hours deliberating on an idea to work on. Once we settled on this project, we attempted to use the Initial State API but ran into several problems while attempting to visually represent the data. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Although we were unable to follow through with the original idea we came here with, we are proud that we were able to deliver a finished product that we are proud of in a timely manner. We completed our project with a minimal use of APIs while also using a plethora of coding languages and techniques. </p>\n<h2>What we learned</h2>\n<p>We learned how to delegate tasks to people that are best fit to finish to complete them in an efficient, timely manner. We also learned more about each others' strengths and weaknesses.</p>\n<h2>What's next for <strong>BabuFi</strong></h2>\n<p>We plan to add bluetooth routing features to the Raspberry Pi as well as to increase security features. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jsp\">jsp</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/linux\">linux</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/maven\">maven</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mysql\">mysql</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/webgl\">webgl</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/markdown\">markdown</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/scala\">scala</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mac\">mac</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xml\">xml</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/vim\">vim</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/github\">github</a></span></li></ul>\n</div>\n</div>", ["", "", ""]], ["Detrumpinator 2016", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Detrumpinator 2016 \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/442/006/datas/gallery.jpg\"/>\n<p>\n<i>Wikipedia</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Detrumpinator 2016 \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/442/007/datas/gallery.jpg\"/>\n<p>\n<i>Twitter</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Detrumpinator 2016 \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/442/008/datas/gallery.jpg\"/>\n<p>\n<i>Google search</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We came into this hackathon aiming to create a lighthearted Chrome extension that helps people take life less seriously! We considered a lot of topics targeting various phenomena on the internet \u2013 memes, clickbait, spambots, cyberbullying, etc. \u2013 but eventually settled on politics, which we're sure has been on everyone's mind in light of recent events. Our aim was to build something that would find comedy in the oversaturation of the 2016 Presidential election all over the internet without getting too political.</p>\n<h2>What it does</h2>\n<p>The <em>Detrumpinator 2016</em> replaces all mentions of \"Donald\" with a random adjective, all mentions of \"Trump\" with a random noun, all mentions of \"Make America Great Again\" with a random wholesome catchphrase, and all mentions of \"#maga\" with a random popular Instagram hashtag.</p>\n<h2>How we built it</h2>\n<p>We used <a href=\"https://9to5google.com/2015/06/14/how-to-make-a-chrome-extensions/\" rel=\"nofollow\">this template</a> as a foundation for our extension, but modified it significantly to incorporate libraries of nouns and adjectives (which we created from scratch), as well as code to choose random items from these collections of words.</p>\n<h2>Challenges we ran into</h2>\n<p>After we decided to build this extension, we realized we didn't really know how to implement a lot of the features we had envisioned. Just one example: when the extension finds the string \"donaldtrump\" on the page (e.g. in URLs or usernames), it successfully replaces the term with a correctly-formatted string (all lowercase, with spaces removed). However, in Twitter handles like @IvankaTrump, we haven't thought of a way to detect that and replace her last name with a correctly formatted noun yet. Also, the extension doesn't work on certain websites, such as the homepages of Buzzfeed and Facebook, and it doesn't work on the Google search page for Donald Trump until you toggle Safesearch on/off. We hope to find out why, and fix these problems in the future.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We think this extension accomplishes its goal \u2013 to make people laugh. We hope seeing headlines like \"Protesters vow to fight Grumpy Yogurt Cup presidency\" and \"7 Reasons Motherly Dumpling Won The Presidential Election\" give you a chuckle, no matter who you voted for. We wanted to turn this tension-filled time in American politics into something we can all find some humor in, and I think we succeeded.</p>\n<h2>What we learned</h2>\n<p>Before this hackathon, I had never attempted to make my own Chrome extension, and I knew very little JavaScript. If nothing else, this project helped me get a better grasp on JSON, HTML, and JavaScript, and opened my eyes to possible features we could implement in the future, and even possible projects we could build at future hackathons.</p>\n<h2>What's next for Detrumpinator 2016</h2>\n<p>We hope to think up some more features, maybe find a way to incorporate larger libraries of nouns and adjectives, or to make the extension customizable, so users can replace other people's names with ridiculous phrases.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/chrome\">chrome</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["Alexa To Watson", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Alexa To Watson \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/442/035/datas/gallery.jpg\"/>\n<p>\n<i>bluemix node-red flow chart </i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Alexa To Watson \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/442/036/datas/gallery.jpg\"/>\n<p>\n<i>Alexa API Intent Schema</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Alexa To Watson \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/442/037/datas/gallery.jpg\"/>\n<p>\n<i>Alexa English to French translation output</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration: Have 2 powerful AI's team up to perform a simple, hands-free, task.</h2>\n<h2>What it does: Translates what you tell Alexa to french (translation done by IBM Watson) and Alexa repeats french translation back.</h2>\n<h2>How I built it: I used the Alexa Skill Kit API and hooked it up, via http, to an IBM bluemix application, running on Node.js, which I built using IBM's node-RED interface.</h2>\n<h2>Challenges I ran into: Understanding Amazon's API, not being able to use a storage service in bluemix (mongodb) because it costs money, and a lot of other stuff.</h2>\n<h2>Accomplishments that I'm proud of: Putting together a working final product that actually accomplishes a task I had set out to do, even if it wasn't the \"dream\" goal but more of a \"checkpoint\" .</h2>\n<h2>What I learned: API's can be very frustrating, vague, lacking in online tutorials.</h2>\n<h2>What's next for Alexa To Watson: Presentations and more translations!</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/alexa\">alexa</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bluemix\">bluemix</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ibm-watson\">ibm-watson</a></span></li><li><span class=\"cp-tag\">node-red</span></li></ul>\n</div>\n</div>", [""]], ["Shapable Arrangements", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/YTxjNesMSQE?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>The Leap Motion's unique hand tracking technology allows for the opportunity to create new ways of interacting and interfacing with a game. Utilizing this technology in an interactive, two-player format adds to the experience through an immersive and novel approach to gaming. </p>\n<h2>What it does</h2>\n<p>The game relies on Leap Motion as an input device to build 3D-shapes using specific hand gestures. The conditions of the game involve providing one player with a random word and having the player construct the item using the Leap Motion. The other player attempts to guess what the constructed shape is supposed to represent. </p>\n<h2>How we built it</h2>\n<p>The game was built using Unity at its core. Leap Motion API and networking were utilized for the input and the two-player aspect of the game. </p>\n<h2>Challenges we ran into</h2>\n<p>Networking and syncing the two clients together simultaneously was troublesome. Creating the unique gesture language and mapping them to specific actions also proved to be a challenge.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Learning how to use Leap Motion in conjunction with Unity was a big success for us. </p>\n<h2>What we learned</h2>\n<p>How to create a game using Unity and Leap Motion with networking (multiplayer) components. </p>\n<h2>What's next for Shapable Arrangements</h2>\n<p>Having more than two players, rotation of player turns for drawing, more gestures mapping to more actions, further refined gesture language, and add more customizable shapes</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/leap-motion\">leap-motion</a></span></li><li><span class=\"cp-tag\">networking</span></li><li><span class=\"cp-tag\">desktop</span></li><li><span class=\"cp-tag\">game</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/jpanda109/shelter\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/jpanda109/shelter\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["MedVector", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"MedVector \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/441/874/datas/gallery.jpg\"/>\n<p>\n<i>Screenshot of the MedVector program</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to help clean up the inefficiencies in hospitals, which potentially impact people's lives. We wanted to help make sure people got the best care possible at hospitals by helping mitigate delays.</p>\n<h2>What it does</h2>\n<p>This an Eclipse-based program that looks for and matches similar medical records using a weighted term vector algorithm, groups them into blocks, and lets the user browse the data according to how closely data pairs match. </p>\n<h2>How we built it</h2>\n<p>This program was built in Eclipse using Java and Apache libraries. The GUI was built using Processing libraries. We used Febrl, available at <a href=\"https://sourceforge.net/projects/febrl/\" rel=\"nofollow\">link</a> to randomly generate sample medical records.</p>\n<h2>Challenges we ran into</h2>\n<p>We quickly realized that the algorithm had a very slow runtime, and we helped improve this by implementing phonetic algorithms and by taking advantage of blocking.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We cut the problem down into steps and ended up creating a nice UI for the project.</p>\n<h2>What we learned</h2>\n<p>We learned more about how to handle large amounts of data and how to split up tasks to multiple people.</p>\n<h2>What's next for MedVector</h2>\n<p>This algorithm gets improved for more efficiency and gets used for even larger amounts of data. In terms of this submission, the focus was mostly placed on the implementation of the algorithm. Future distributions may have more work on the usability, flexibility, number of features, and user experience.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/processing\">processing</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/apache\">apache</a></span></li><li><span class=\"cp-tag\">computers</span></li><li><span class=\"cp-tag\">febrl</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/eclipse\">eclipse</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/tgmeow/VandyHacks3\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/tgmeow/VandyHacks3\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["QBuildr", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"QBuildr \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/441/668/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>While I love being DJ and sharing my music with other people, it's a big time commitment to find the right songs. Oftentimes, I have a long playlist that I want to play certain songs from, but I want to be able to pick and choose what songs I listen to without scrolling back and forth through the entire playlist. Other times, I have a list of songs in my head, but it takes time to have to search each one individually. QBuildr makes it easy to create a new playlist with all the songs you want, and none of the ones you don't.</p>\n<h2>What it does</h2>\n<p>It creates a new public playlist within your Spotify account, and proceeds to populate it with songs. There are 2 ways to do this:</p>\n<p><strong>Directly</strong></p>\n<p>You can list as many song titles as you want within a single input, and it will add each one to the playlist. Pretty straightforward.</p>\n<p><strong>Through a playlist</strong></p>\n<p>You select an existing playlist, and then each song is presented to you one at a time in random order. The songs are opened in a window where the cover art, song title, and artist are all visible. You select songs by pressing 1 of 4 different buttons, inspired from the UI of Tinder. \"Swipe Left\" to skip, \"Swipe Right\" to add it to the playlist, \"Swipe Up\" to add it to the top of the playlist, and a \"Stop\" button to exit.</p>\n<h2>How I built it</h2>\n<p>Using the spotipy module, which is a lightweight library for the Spotify Web API. The entire application runs within a single file.</p>\n<h2>Challenges I ran into</h2>\n<p>I had never worked with JSON objects before, so parsing through them was difficult at first. The Spotify API was also far more limited than I expected, so I had to pivot and modify my initial idea quite a few times before coming to an end result that was similar to what I initially wanted. The buttons, which were created using the tkinter module, gave me a lot of trouble because they are usually not meant to close the application. It ended up being surprisingly difficult to find a way to get the buttons working properly. Finally, it was a challenge for me to find a way to display the cover art without downloading the file. I wasn't able to do that, so I will need to figure out a better solution to this later.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I came into VandyHacks expecting this to be a relatively simple and straightforward project, which is why I decided to do it solo. It ended up being a lot more involved than I initially expected, but at the end of the day I'm proud to have built something that I would actually want to use frequently, and all from the ground-up and on my own.</p>\n<h2>What I learned</h2>\n<p>This was my first time working on a substantial, independent project so I learned quite a lot. This was my first time using any sort of API, so for starters I learned how to read through the documentation and use the tools provided to me. I also learned how to create my own local website, which I needed for the authentication token. Finally, I learned how important it is to be able to search for your own solutions to problems that come up. I would estimate that well over half of my time spent building this was simply looking for solutions to problems that arose, which I would now know how to solve.</p>\n<h2>What's next for QBuildr</h2>\n<p>I would like to implement some more functionality such as the ability to add entire albums, or an undo button to delete songs you accidentally added. The album art is also displayed in such a way that it would currently only work on my local computer. After those issues are fixed, I would want to get it on a server through an application like Heroku so that anybody can access it.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/spotify\">spotify</a></span></li><li><span class=\"cp-tag\">api</span></li></ul>\n</div>\n</div>", [""]], ["Chat Insights", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We're nerds and we love numbers. We're also voracious users of Facebook Messenger with around 200k messages in the service each, we've accumulated a lot of data (one might even call it BIG data). For us, understanding our Messenger habits would give us huge insights into our communication patterns.</p>\n<h2>What it does</h2>\n<p>Our app places a little chat bot inside whatever group chats the user chooses. It then provides a dashboard for that chat with analytics on their activity. This dashboard includes data on any potential cyberbullying going on in the chat.</p>\n<h2>Tech Stack</h2>\n<p>The bot and the analytics are both written in <code>node.js</code>, hosted on an AWS EC2 instance. Each group chat thread is stored as an item in a table in Amazon DyanamoDB.</p>\n<h2>Challenges we ran into</h2>\n<p>We don't have any super experience Javascript developers and this was all of our first time's with node.js so we struggled a lot to get to know node.js. One of our team members was especially frustrated by Javascript's policy of never failing and never crashing. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>It's neat: it does a good job of telling us about our own chats. Additionally, the Natural Language Processing that it does to analyze bullying does a good job of recognizing aggressive behavior. It successfully differentiates between passive aggressive comments like \"...\" and fully aggressive comments like \"f*** you\". Additionally, we're pleased with the pluggability of the database - it'd be super trivial to swap out another chart. </p>\n<h2>What we learned</h2>\n<p>The aforementioned teammate that complained about Javascript's lack of exceptions and pauses has learned to adore JavaScript. We also learned a lot about the traditional frontend-backend-database structure and how to make sure they work well together. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-dynamodb\">amazon-dynamodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-ec2\">amazon-ec2</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://www.benc.io/Chat-Insights/\" rel=\"nofollow\" target=\"_blank\" title=\"https://www.benc.io/Chat-Insights/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.benc.io</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I setup the DynamoDB database and wrote node.js code for John and Ray to quickly and easily push data to the tables. ", "I worked on the backend for acquiring and processing the Facebook Messages using Node.js, and also calculated the time differences in between certain messages for later analysis.", "I wrote the natural language processing component of the backend in Node.js, which differentiated between bullying and nonbullying messages.", ""]], ["SuperZhangBall", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"SuperZhangBall \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/441/349/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>David Zhang decided to play Super Monkey Ball.</p>\n<h2>What it does</h2>\n<p>Experience the world through the eyes of Zhang.</p>\n<h2>How we built it</h2>\n<p>Zhang rolled his face on a keyboard with Unity open.</p>\n<h2>Challenges we ran into</h2>\n<p>Not being fat enough made it hard to roll. We had to break the Zhang laws of thermodynamics in order to achieve perfect rolling simulation.</p>\n<p>Zhang vomited on David's keyboard and had to buy a new one.</p>\n<p>David Yang temporarily exploded due to Zhang touching his monitor.</p>\n<p>Osu is very distracting.</p>\n<p>Oculus only installs on computers it deems worthy of its Godlike presence.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Becoming video protagonists.</p>\n<h2>What we learned</h2>\n<p>5 shots = 5 points.</p>\n<h2>What's next for SuperZhangBall</h2>\n<p>10 shots, 10 points</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/oculus\">oculus</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/nulltitleexception/SuperZhangBall\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/nulltitleexception/SuperZhangBall\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I created the super.", "I was the zhang.", "I correctly capitalized and combined the disparate parts into one cohesive whole.", "I worked on the ball portion."]], ["Repugraph", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Repugraph \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/163/datas/gallery.jpg\"/>\n<p>\n<i>Main screen of application</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Repugraph \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/227/datas/gallery.jpg\"/>\n<p>\n<i>Notifications when you are rated</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>After watching the episode Nosedive from Black Mirror, we wanted to make a similar app as the one demonstrated in the show. Basically, the premise is that every single social interaction is rated, and people's cumulative ratings can have impacts on their lives (what jobs they can get, their interest rates on loans, the neighborhood they can live in, etc). </p>\n<h2>What it does</h2>\n<p>Repugraph uses Bluetooth to creatively find nearby phones with it installed, and then allows users to rate each other when they are close like in the TV show. Ratings are sent to my server and then pushed to the person being rated.</p>\n<p>Repugraph also lets you see ratings of people you are physically close to.</p>\n<h2>How I built it</h2>\n<p>We used the AltBeacon API for Android and a custom frequency analysis function to determine whether or not devices are close enough to rate. Push notifications are handled via Firebase and the server-side logic is written in Node.js.</p>\n<h2>Challenges I ran into</h2>\n<p>Tweaking the Bluetooth Low Energy settings and our frequency analysis function to reliably determine proximity was the hardest part. The second hardest part was getting Google's braindead Firebase dependencies and Gradle plugins to work properly.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I'm proud of figuring something out about signal strength and reliability analysis, as well as finally figuring out how to properly do push notifications in Android.</p>\n<h2>What I learned</h2>\n<p>I learned how to use newer Android frontend libraries like Butterknife and Volley, and also finally realized the utter unreliability of Bluetooth.</p>\n<h2>What's next for Repugraph</h2>\n<p>I want to eventually implement a proper avatar uploading system, sounds for receiving ratings, and proper security.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/nginx\">nginx</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bluetooth\">bluetooth</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://yunyul.in/repugraph/\" rel=\"nofollow\" target=\"_blank\" title=\"http://yunyul.in/repugraph/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>yunyul.in</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["CyberSpaceMT", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/JkD9OU3QIt8?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"CyberSpaceMT \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/443/699/datas/gallery.jpg\"/>\n<p>\n<i>Gameplay</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to prove that a procedurally generated game can be fun despite being rushed. Take that, Sean Murray!</p>\n<h2>What it does</h2>\n<p>Procedurally generates terrain and enemies dynamically. Utilizes VR in a way that prevents motion sickness entirely.</p>\n<h2>How we built it</h2>\n<p>We used the Unity game engine. </p>\n<h2>Challenges we ran into</h2>\n<p>Unity does all of its pathfinding before runtime, so programming the AI to find the player while in game was difficult.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Coordinating pathfinding and procedural generation.</p>\n<h2>What we learned</h2>\n<p>How to procedurally generate terrain in constant memory using Perlin noise.\nUsing A* pathing in a dynamic environment.</p>\n<h2>What's next for CyberSpaceMT</h2>\n<p>We plan to port it to the HTC vive, and open source it for others to enjoy!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://www.dropbox.com/s/as2bgtuyvrzsvgt/CyberspaceMT.7z?dl=0\" rel=\"nofollow\" target=\"_blank\" title=\"https://www.dropbox.com/s/as2bgtuyvrzsvgt/CyberspaceMT.7z?dl=0\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.dropbox.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Added procedurally generated enemies and had them use an A* path finding algorithm to traverse the procedurally generated terrain.", "I set up procedurally generated terrain, and integrated all the different parts together.", ""]]]