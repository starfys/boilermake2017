[["Markovsky", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We love music and we love computers.  Let's make our computers make music.  </p>\n<h2>What it does</h2>\n<p>Markovsky uses MongoDB and Markov models to analyze and imitate harmonic trends across genres, artists, and eras. </p>\n<h2>How we built it</h2>\n<p>We used primary Java and MongoDB with MIDI for sequencing.  </p>\n<h2>Challenges we ran into</h2>\n<p>Github always holds it own special little challenges.  </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Coming up with this idea in the evening and finishing it by the morning</p>\n<h2>What we learned</h2>\n<p>A ton about MIDI and a ton about MongoDB ... oh and Java, too. </p>\n<h2>What's next for Markovsky</h2>\n<p>Let's make music. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/midi-js\">midi.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/github\">github</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/nightCapLounge/MarkovHarmony\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/nightCapLounge/MarkovHarmony\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked mostly on the database part along with other parts of the application", "I worked on the UI", ""]], ["Tremor Tracker", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Doctor's have used a subjective scale to track the progression of Parkinson's. People with Parkinson's typically visit their neurologist two to four times a year. This app makes communication between patients and their doctors easier by allowing self-tracking of a patient's disease.</p>\n<h2>What it does</h2>\n<p>Tracks the tremors and their volatility over a period of time. Graphs the results and allows you to submit the data to your health care provider after filling out an online form.</p>\n<h2>How I built it</h2>\n<p>Used a Leap Motion sensor to measure shaking of individual fingers in addition to the overall hand. The Processing language and various graphing API's were used to obtain and visualize the data in a user-friendly way.</p>\n<h2>Challenges I ran into</h2>\n<p>The Leap-Motion has lots of noise that could be mistaken for tremors. We needed to devise an algorithm to mitigate the noise levels and track only the important movements.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>The algorithm to extract the volatility over time borrowed techniques from analyzing stocks. The math turned out to be simple but not obvious in its implementation.</p>\n<p>The user interface is attractive.</p>\n<h2>What I learned</h2>\n<p>Gathering precise data (within millimeters) is difficult on a sensor that markets for less than $100 USD. But we did it!</p>\n<p>Parkinson's is a disease that is tracked over very long periods of time. There are not many consistent ways of tracking a patient's progression on a daily basis. It is a medical field that can really benefit from innovative software development.</p>\n<h2>What's next for Tremor Tracker</h2>\n<p>Continue the development of the web front end to allow the tracking of different kinds of symptoms of Parkinson's. Specifically, posture and facial tremors could be detected using a sophisticated camera such as a Kinect. The Leap Motion could further be used to perform grip tests. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/processing\">processing</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/leap-motion\">leap-motion</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag\">graphing-api's</span></li></ul>\n</div>\n</div>", ["Came up with the idea.\nOh and I programmed...\neverything.", "I worked on understanding how the geometry of the sensor, and the hand together can be eliminated in order to establish a relative coordinate system to the hand, rather than to the sensor. I worked on the mathematics of the averaging and the standard deviation and made sure everything made sense. By mapping each tip of the finger to its corresponding first knuckle the fingers are measured independent to any orientation of the hand, allowing near perfect measurement of tremor amplitude. A palm to tip measurement does not work because each of the fingers move independent of the palm. ", ""]], ["iSight", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"iSight \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/550/datas/gallery.jpg\"/>\n<p>\n<i>Our computer's interaction with the RPi(Not including the microthreading system[Still Volatile])</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"iSight \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/876/datas/gallery.jpg\"/>\n<p>\n<i>ReadBox</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We were inspired to pursue the feat of creating an accessibility system for the blind due to something we noticed in every piece of tech there is. There are accessibility systems in place to help the visually impaired, the hearing impaired, the deaf, and even people who can't move... but there is nothing that can allow those without the precious gift that is sight to utilize the extremely valuable resource that is the internet and computers.</p>\n<h2>What it does</h2>\n<p>iSight uses computer vision via tesseract, which takes any image file, and extracts the text from it. By taking this text and replacing it with string arrays associated with the motors in the ReadBox, we can take this seemingly simple picture that was until now inaccessible to the visually deprived, and turning the text within it into a format that now brings it within their reach, braille. This allows people who cannot see, including students, to be able to educate themselves with a plethora of new resources literally right at their fingertips.</p>\n<h2>How we built it</h2>\n<p>We used tesseract as our CV platform, terminal interface on the computer, raspberry pi as a signal hopper via ssh, and Arduinos used to process the data sent to it, and convert it into step-motor movement. The housing for the BlindBox was 3D printed, along with the rack and pinion systems within it. These produce a very simple yet effective transduction from image text to braille. Additionally we have a volatile version in which we used IBM Watson as a voice recognition utility to control the output of iSight to the preferences of the individual as well as producing potential for a system that allows a user to not only read text from image files that have been saved previously, but also from live images of their computer screen, allowing them to navigate the computer, and potentially the internet.</p>\n<h2>Challenges we ran into</h2>\n<p>Some of the challenges we ran across were the vast amount of hardware issues that were a result of faulty motors and Arduino pins, and a more than a few issues with wire maintenance due to the excess number of wires than the amount of pins available on an Arduino uno(We ended up using two).</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>One of the things we are very proud of is our back-end, and the fairly effective hardware system we designed despite our lack of experience(AT ALL) working with hardware. Our back end works quite well, utilizing tesseract(slightly modified to suit the purposes of the product, the logic circuits we worked through, and consistently, accurately, and efficiently transmitting data between computer, raspberry pi, Arduino, and step motors. The hardware system despite its lack of wire management is something we are very proud of, given our lack of experience, further reinforced by all the malfunctioning materials we came across, yet still pulling through and creating a working product.</p>\n<h2>What we learned</h2>\n<p>We learned that hardware fails... a lot... and when i say a lot, i mean a lot. We also learned how to interface different systems between each other, as well as micro-threading processes in a way that maintains the efficiency of the hardware output, while not straining any system involved in the chain too much. One of the most important lessons we learned however was that when it comes down to it, even when you are about to pass out because it is 5:30 am your code won't compile, your motors won't turn, and your body has more energy drinks in it than water, if you work hard, and keep at it, you can do anything.</p>\n<h2>What's next for iSight</h2>\n<p>What's next for iSight? We plan to further develop this product into a better polished system that will enable the blind people across the world to access a technology they had been previously excluded from in an open source platform, as our way of giving back to those who need us most, our community, and the world.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/opencv\">opencv</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/tesseract\">tesseract</a></span></li><li><span class=\"cp-tag\">paramiko</span></li></ul>\n</div>\n</div>", ["I worked on the interfacing between the different systems(computer, terminal; raspberry pi, ssh middleman/memory offload; and arduino, stream reading along with text processing). In addition to this I worked on making microthreads to allow for balanced processing power, and prevent anything from overloading as it is handling too much information.", "Breadboarding and wires. Worked on the Arduino step-motor control. ", "I worked on the image to text to braille processing with python, and putting together the servos "]], ["RUCourseMaps", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"RUCourseMaps \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/578/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"RUCourseMaps \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/580/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"RUCourseMaps \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/581/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"RUCourseMaps \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/583/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>This is a tool for students of Rutgers University to see all of the courses in any particular department along with their  prerequisites, constructed from the fall 2016 schedule.\nJust go to:</p>\n<p><a href=\"rucoursemaps.com\" rel=\"nofollow\">link</a></p>\n<p>This is a web flask application.\nGraphs were generated with the Cytoscape API.\nFull application will be hosted on Heroku soon.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag\">batchfile</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/shell\">shell</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/git\">git</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/beautiful-soup\">beautiful-soup</a></span></li><li><span class=\"cp-tag\">cytoscape</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/roopeshkom/RUCourseMaps\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/roopeshkom/RUCourseMaps\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on Backend. Flask structure of app. Joining all the code together.", "Frontend - JavaScript + HTML + CSS, worked directly with the Cytoscape API to implement the graph to function dynamically.", "I worked on scraping and parsing the JSON that we got from the web. The code was implemented in Python, and served to receive user input, and output a file that could be used to call the graph visualization API."]], ["dreamphone", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>Dream Phone</h1>\n<p>This hack is based off a board game from the 90s called Dream Phone. Imagine Clue, but instead of a murder mystery, it's the more dramatic issue of figuring out your secret admirer!</p>\n<p>This project was built with the Twilio API and Python.</p>\n<h2>Members:</h2>\n<p><a href=\"https://github.com/nickgirardo\" rel=\"nofollow\">Nick Girardo</a>, <a href=\"https://github.com/json\" rel=\"nofollow\">Sam Son</a>, <a href=\"https://github.com/jromer94\" rel=\"nofollow\">Josh Romer</a>, <a href=\"https://github.com/JosephSKennedy\" rel=\"nofollow\">Joe Kennedy</a></p>\n<h2>Shout-outs</h2>\n<p>Thanks to the following people for providing voice work:\nShahan Ahkter,\nBiggie Emmanuel,\nLars,\nRich Tran,\nSam Agnew,\nTobias Perelstein,\nMike Swift,\nEric Bronner, who deserves a special thanks for helping the voicework process along,\nand Ed Choi, who also deserves a special thanks for providing back-up voice work.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/nickgirardo/dreamphone\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/nickgirardo/dreamphone\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Sustenance Supervisor", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Sustenance Supervisor \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/435/datas/gallery.jpg\"/>\n<p>\n<i>OMNOMNOMN</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Sustenance Supervisor \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/436/datas/gallery.jpg\"/>\n<p>\n<i>479 days without anaccident!</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>I was inspired by the unhealthy eating habits of children in the United States of America. I thought \"what better way to get people to eat healthy than to associate unhealthy eating with fear and disgust?\"</p>\n<h2>What it does</h2>\n<p>It reconditions unhealthy palettes.</p>\n<h2>How I built it</h2>\n<p>I created three dimensional models and then used Pythons to give them life.</p>\n<h2>Challenges I ran into</h2>\n<p>It didn't work on windows and then it did.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>It's not as bad as Ian's project.</p>\n<h2>What I learned</h2>\n<p>Cholesterol is best fought with green slime.</p>\n<h2>What's next for Sustenance Supervisor</h2>\n<p>Two words: Steam Greenlight</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/blender\">blender</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/dshwab/Sustenance_Supervisor\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/dshwab/Sustenance_Supervisor\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I did all of it. Every loop of annoying music and every sound effect. Every model, every piece of code, every texture was made from scratch within the 24 hours. "]], ["CasualRifting", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>I wanted to create a game with parkour elements while using the Oculus Rift. Realizing that the amount of time I had was limited to 18 hours by the time I started, I pivoted to use a more controlled environment for the player to interact with. This being a single slope level that is contained within walls, rather than an open world to reduce the amount of testing in the end.</p>\n<h2>What it does</h2>\n<p>This game places the user on a ride down a long slope to take down a flying object before reaching the end of the track. The user has to avoid obstacle walls and collect coins using only an Oculus Rift to turn and aim, as well as a single button from a gamepad/keyboard to fire at the flying object.</p>\n<h2>How I built it</h2>\n<p>This project was built with Unity-3D, Oculus DK2 API, C#, and using the Oculus Rift DK2 hardware to control steering using both yaw, and roll of your head. All rotational axes of a human user is used to aim the crosshair.</p>\n<h2>Challenges I ran into</h2>\n<p>The toughest challenge was calibrating the cross-hair and firing angle. The user's point of view angle in Unity skewed the actual projection of any projectile sent from the user, away from the drawn crosshair on the user's UI.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I'm most proud of the amount of work I've accomplished in the allotted time given. This includes cross-hair calibration, random level generation, speed/acceleration calibration, asset development, environment creation, user-head tracking, and Virtual Reality UX design to minimize motion sickness, a common side-effect of using virtual reality.</p>\n<h2>What I learned</h2>\n<p>UX design is absolute essential to make this game usable, and enjoyable. I spent an enormous amount of time on calibrating the user's camera, level design, and speed/acceleration calibrating to minimize motion sickness.</p>\n<h2>What's next for CasualRifting</h2>\n<p>As I will no longer have access to an Oculus Rift, I won't be continuing development on this project. Once I do, I will consider rebuilding the game to be playable on a much larger plane, thus giving the player more mobility. This will also change the current UX that exists, as motion sickness is a big factor on usability. </p>\n<p>Project is too large to be hosted on GitHub. Please E-Mail me at <a href=\"mailto:richard.p.tran@gmail.com\" rel=\"nofollow\">richard.p.tran@gmail.com</a> for source code, and assets. If there are a large number of requests, I will upload my entire project to a web host for download, and provide a link here.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/oculus-gear-vr\">oculus-gear-vr</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/visual-studio\">visual-studio</a></span></li></ul>\n</div>\n</div>", ["Solo hack"]], ["JFPG", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Frustration with GPG's ridiculous complexity. Also inspired by last year's project, but written totally from scratch.</p>\n<h2>What it does</h2>\n<p>JFPG attempts to be a very small, simplified replacement for GPG, but with modern crypto.\nIt currently does encryption, decryption, signing, and verification. It uses Ed25519, Curve25519 and Xsalsa20-Poly1305 as its crypto primitives. </p>\n<h2>How I built it</h2>\n<p>I used Tweetnacl, a very small crypto library written by Dan Bernstein. This means that JFPG doesn't require any dependencies to compile and run on Unix. Everything it needs is in the code.</p>\n<h2>Challenges I ran into</h2>\n<p>I wrote this on OpenBSD, so portability with Linux is a pain because glibc doesn't include many secure C functions that OpenBSD has. All of these had to be provided. </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>It covers the basics of GPG/PGP, but uses much less code, much more secure ciphers, and a better source of random numbers. </p>\n<h2>What I learned</h2>\n<p>I learned how to fix lots of little memory handling issues and write more portable C code. </p>\n<h2>What's next for JFPG</h2>\n<p>Add forward secrecy</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c\">c</a></span></li><li><span class=\"cp-tag\">tweetnacl</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://www.github.com/an0dos/jfpg\" rel=\"nofollow\" target=\"_blank\" title=\"https://www.github.com/an0dos/jfpg\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Crubber", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Crubber \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/875/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>Our idea was to make a web application in which people can help each other. Crubber allows workers to 'bid' for a job put out there by a client. For example, if a person needed a plumber to fix their sink, toilet and etc., that same person will send out an alert of who exactly they need and their location will also be provided which is done through the Google API. Then, the plumbers/contractors will check on the web application to see if there are available jobs to bid for, and if there are, they will upload how much they are expecting to be paid, and who they are. Afterward, the client will choose who they believe is the best candidate to perform the service they want to get done. In order to create this web app, we used CSS, HTML, and JavaScript. We also used Amazon Relational Database Service provided by Amazon Web Services. Our team decided to host our app on the AWS EC2 server to appropriately adjust to the user traffic, whether it increases or decreases.\nThe reason why we decided to create Crubber was because we wanted the service to come to the client, and relieve the stress that comes with trying to find an efficient and reliable contractor.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-maps\">google-maps</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-rds-relational-database-service\">amazon-rds-relational-database-service</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/angular-js\">angular.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google--2\">google</a></span></li><li><span class=\"cp-tag\">rds</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mysql\">mysql</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/MSaIim/HackRU\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/MSaIim/HackRU\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", "", ""]], ["CLI-Hack", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/dG4iQBcJe0o?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"CLI-Hack \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/889/datas/gallery.jpg\"/>\n<p>\n<i>Main screen</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"CLI-Hack \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/890/datas/gallery.jpg\"/>\n<p>\n<i>Youtube streaming</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>This project is a Command Line Hack for Social Utilities and Entertainment.\nSince running common tasks on GUI is too main stream, we wanted to play around with the terminal to \ntry and perform as many common tasks via the command line without lifting your hands of the keyboard.</p>\n<h2>What it does</h2>\n<p>CLI-Hack is a command line utility in the form of a terminal window that is split into multiple panes, each running a unique task. We implement the following functionalities via command line:</p>\n<ol>\n<li>Sending SMS to a contact on your Google Account</li>\n<li>Automatically send Birthday Wishes via SMS to people having birthdays on the current day</li>\n<li>Stream spotify music with play, pause, next, previous controls.</li>\n<li>A pac-man game for whiling away time</li>\n<li>Gmail inbox with all functionalities</li>\n<li>Play a video from youtube in ASCII </li>\n</ol>\n<h2>How we built it</h2>\n<p>We used tmux to combine all the individual terminal hacks. The Birthday wisher is built using Twilio and Google Calendar and Contacts APIs. We sync the contacts from the google account of the user and wish people having their birthdays today. The user can send texts as well like a normal messaging App from terminal using Twilio. We used Spotify API to stream online music and control it via terminal. We used Youtube to stream online video in an ASCII format on the terminal in an additional pane. The terminal utility also allows user to control their entire Gmail account with full functionality via terminal using Google APIs. As a fun add-on, we have also implemented and integrated a Pac-Man game using C/C++ that can be played on the terminal. </p>\n<h2>Challenges we ran into</h2>\n<p>Configuring tmux and invoking the different scripts to run simultaneously on each of the panes. \nA major challenge was to interface with the various APIs using command line statements and shell scripting. This involved parsing different formats and types of incoming data streams. In particular, the youtube video stream had to be piped to a player in real-time and then convert to ASCII. \nUnderstanding the twilio and google apis to effectively sync user contacts and extract information and actuate messages via Twilio. Configuring vim editor to incorporate the gmail inbox and load it completely was another challenge we ran into.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Assembling all the bits and pieces of individual hacks and successfully providing 6 different functionalities in 1 terminal in 18 hours.</p>\n<h2>What we learned</h2>\n<p>Hands-on experience with different APIs, and every aspect of the project was new to us.</p>\n<h2>What's next for CLI-Hack</h2>\n<p>Many more functionalities that could not be included because of time constraints can be added.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c\">c</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/shell\">shell</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-contacts\">google-contacts</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-calendar\">google-calendar</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/spotify\">spotify</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/youtube\">youtube</a></span></li><li><span class=\"cp-tag\">tmux</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/arsheth/CliHack\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/arsheth/CliHack\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the twilio interface for sending SMS via command line and also cleaned up the ASCII rendering of video. Also integrated the spotify API with the tool.", "I worked on tmux and integrating the individual functionalities. I also implemented the Gmail inbox functionality and a bit of video streaming. ", ""]], ["Tracker", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<h2>What it does</h2>\n<p>The Intel Edison has a PIR sensor which, when triggered, will turn on the webcam and will take a picture. From there, it can do one of two things (or both!). As a security device. it can send the picture to your Verizon Cloud Storage so that you can get pictures of the thief or whomever is there directly on your phone. The other function of our project is that it can be used as an advertising platform. When it takes a picture it sends the picture to the Clarifai API to help us identify what's in the picture, including logos. This can be useful information for advertisers, for example, if this device was installed in a billboard, it can identify that someone walks past with a starbucks cup and if, for example, Dunkin Doughnuts wants in on the action, they can advertise DD on the billboard the next day at the same time!</p>\n<h2>How we built it</h2>\n<p>On the hardware side, we used the Intel Edison with a PIR sensor attached with a USB Logitech camera connected directly into the unit.</p>\n<p>From the software standpoint, we used Python 2.7 to interact with the Clarifai API, USB Camera, PIR Sensor and to communicate with Verizon's API.</p>\n<h2>Challenges we ran into</h2>\n<p>This was the first time we were using OAuth so it was challenging (and confusing!) but thanks to some mentors at the Hackathon, we pulled it off!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/intel-edison\">intel-edison</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/verizon\">verizon</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon\">amazon</a></span></li></ul>\n</div>\n</div>", ["", "", ""]], ["SmartFindr", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/FwfY6rYgcos?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"SmartFindr \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/032/datas/gallery.jpg\"/>\n<p>\n<i>Searching an article with SmartFindr</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"SmartFindr \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/042/datas/gallery.jpg\"/>\n<p>\n<i>An example of SmartFindr finding a synonym and presenting it to the user</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>SmartFindr</h2>\n<p>SmartFindr is a google chrome extension that helps students, researchers, professors, avid readers, and many more people quickly and easily target the important concepts that they need to learn from dense material. </p>\n<h2>Function 1: Keyword Identification</h2>\n<p>Many times we find ourselves looking through dense material in search of specific concepts that we want to learn. However, while we can easily search for words using functionality such as ctrl+f provided by most browsers, we can't search for <em>concepts</em> or <em>ideas</em>. That's where IBM's Watson Cognitive APIs come in. IBM's groundbreaking research in machine learning and the use of supercomputers has provided the world with many powerful tools that they can use to create solutions to problems like these. Using the AlchemyLanguage natural language processing API (specifically Keyword Extraction), we run pages that users want to learn more about through a Node.Js server which we hosted via the next generation cloud platform Bluemix, which is based on IBM's Open Cloud Architecture and Cloud Foundry. We send the user's page to the server and use the API to find the most important keywords in the article. Then, we highlight the most relevant of these keywords on the webpage and allow the user to quickly click through them. This allows the user to quickly and easily find the most important <em>concepts</em> that they are interested in, and through this method they are no longer limited to only looking for words or phrases and can quickly extract vital information from dense readings. </p>\n<h2>Function 2: Synonym Find</h2>\n<p>Even when people <em>are</em> looking for certain phrases or words in an article, it's easy to forget what they're searching for and it's limiting to only be able to see the exact word that they want and not similar words that they didn't realize were also in the article. Our second feature provides a smarter version of the ctrl+f functionality provided by most browsers in order to help users find things that they didn't know how to explicitly looking for. In the Node.Js server that we hosted via IBM Bluemix, we've also stored an extensive database of synonyms. Whenever a user searches for a word, Smartfindr not only shows them the instances of that word in the webpage but also synonyms of the word. In this way, users can find information in the page that they would have otherwise skipped over due to the fact that they didn't know how to look for it. </p>\n<h2>Problems We Ran Into</h2>\n<p>Chrome extensions have three separate and distinct environments, each of which has certain capabilities and restrictions. We were initially confused as how to get these environments to cooperate. Furthermore, we had trouble getting the Node.Js server to feed the IBM Watson API the correct syntax. We solved this by passing in the URL as a query parameter.</p>\n<h2>Future Plans</h2>\n<p>We plan to continue to work on this extension in the future. After refining, we hope to release a final, stable version to the app market that students like us can use to facilitate their research.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ibm-watson\">ibm-watson</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/alchemyapi\">alchemyapi</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Xenograph/smartfindr\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Xenograph/smartfindr\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I created the Chrome Extension framework, including the manifest, html, and script files. I also helped with extension-to-server and extension-to-API communications.", "Built the back-end API server using NodeJS, Princeton WordNet, IBM Alchemy API, ExpressJS, and IBM Bluemix deployment tools. Provides a RESTful API to give data about keywords and synonyms to the client-side extension.", "I created the process for searching through the webpage for words and synonyms once the synonym array was fetched from the NodeJS server, along with designing the UI and making sure that the front-end was seamlessly integrated with the main functionality of SmartFindr"]], ["CloudVision", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"CloudVision \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/600/datas/gallery.jpg\"/>\n<p>\n<i>Cloud Vision</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Imagine yourself visiting a friend's house. You use their new soap and instantly fall in love with it and want to buy it. The problem is, however, that your friend doesn't remember the name of the brand anymore. What do you do? What can you do? And what if your friend does know the name, but doesn't know where they got it from?</p>\n<h2>What it does</h2>\n<p>This problem became the inspiration for my app. With this smartphone/tablet app, your entire world is augmented with data like never before. By using the special camera in the app, and simply pointing your device at that soap, you get back information about the product's manufacturer and you also have a way to order that good straight from the device.</p>\n<h2>How I built it</h2>\n<p>Built the app for Android. Used Google's Vision Cloud API for image recognition, WalMart API for showing the price of sleected item and CapitalOne API for purchasing the item.</p>\n<h2>Challenges I ran into</h2>\n<p>Using Google Vision Cloud API. Before developing this hack, I had no experience how image recognition actually works.  </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Learning to use Google Vision Cloud API and CapitalOne API.</p>\n<h2>What I learned</h2>\n<p>How to leverage the power of third party APIs to easily perform otherwise complex tasks. </p>\n<h2>What's next for VisionCloud</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/walmart-open\">walmart-open</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-cloud\">google-cloud</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/capital-one\">capital-one</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/devangsinha/Cloud-Vision\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/devangsinha/Cloud-Vision\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Transactr", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Credit cards provide users with credit card statements, something that helps you keep track of everything from where you made a purchase to much money you spent. As high school students, we don't have credit cards, and use cash on a day to day basis, but can't keep track of how much money we spend.</p>\n<h2>What it does</h2>\n<p>We use a pebble inside your wallet to track when your wallet is opened. When it is, you get a text on your phone asking if you made a transaction, and how much you spent, to show you how much cash you are spending, which in turn is relayed on a webapp that shows you where, when, and how much cash you are spending.</p>\n<h2>How we built it</h2>\n<p>We used the pebble accelerometer data to detect when the wallet is opened, used the verizon cloud api to create our webapp, used a node server to send twilio texts to your phone, and used aws to host our website to show what our app does.</p>\n<h2>Challenges we ran into</h2>\n<p>Getting pebble accelerometer data to work through calibration took a lot of trial and error to get working correctly, since a wallet dropping and similar events should not trigger the text.</p>\n<h2>What we learned</h2>\n<p>We learned JS to use the Pebble SDK, and learned how to use the Verizon cloud API.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/verizon\">verizon</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/pebble\">pebble</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/angular-js\">angular.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li></ul>\n</div>\n</div>", ["I made the entire pebble part, using acceleration data to figure out values given when the wallet is opened. Also, I worked on part of the Verizon cloud API.", "I developed the backend in Node.js and worked with the Twilio API to send and receive texts regarding transactions. I also worked with the CapitalOne API emulate a bank account with one's wallet.", "I worked on the website to display the capabilities of our revolutionary hack. I also worked on the verizon api.", "I helped work on the Verizon API and helped to get the pebble accelerometer data to work"]], ["Learn2Web", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>There are not any great tools to help with web developing. </p>\n<h2>What it does</h2>\n<ul>\n<li>Provide an editor that allows students to program in and get immediant responses and allows teachers to create speccialized educational games. \n## How I built it\nWe used the following tools:</li>\n<li>NodeJS</li>\n<li>ExpressJS</li>\n<li>MongooseJS</li>\n<li>MySQL</li>\n<li>MongoDB</li>\n<li>Ace Editor</li>\n<li>JQuery Terminal</li>\n<li>JQuery</li>\n<li>JQuery UI\n## Challenges I ran into</li>\n<li>Saving user generated code to the backend. \n## Accomplishments that I'm proud of</li>\n<li>Building the whole thing in a NodeJS stack. \n## What I learned</li>\n<li>Learning how the node stack works. \n## What's next for Learn2Web</li>\n<li>Make the framework for more modular for different frameworks.</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mysql\">mysql</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag\">ace</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://104.236.121.221:4000\" rel=\"nofollow\" target=\"_blank\" title=\"http://104.236.121.221:4000\">\n<i class=\"ss-icon ss-link\"></i>\n<span>104.236.121.221</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["quarqi", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>One of our passions is creating smart embedded devices. What we don\u2019t love, however, is having to work with low level undocumented hardware and software that doesn\u2019t facilitate collaboration. We wanted to create a platform that would allow us to develop just about any embedded device using only a few lines of code and a standardized hardware package that costs almost nothing. We also wanted to create a platform that would let us collaborate seamlessly during development.</p>\n<h2>What it does</h2>\n<p>Quarqi is a cloud-based platform for data analysis and embedded devices programming. Whereas most programming requires code to be written to the physical device every time the program is changed, our platform does all analysis in the cloud, so updating a program is as simple as changing a database entry.\nThe Quarqi chips collect all relevant data, then send it up to the cloud in pre-determined intervals. This information is then separated into channels which can be listened for by a script on our cloud platform. New data channels can then be made which combine and analyze information from other channels. By using these synthetic channels we create a comprehensive data analysis platform which requires almost no code to be written by the end user. Analysis is simple and intuitive - writing an interaction script across multiple devices takes about as much code as an Arduino needs to blink an LED.</p>\n<h2>How we built it</h2>\n<p>Quarqi is built on top of the ESP8266, a WiFi SoC  which delivers the essentials for wireless communication in a small package, and for under $2 wholesale. By harnessing the power of cheap commodity hardware like this we hope to make a platform that anyone can make and use regardless of their resources. The ESP8266 connects to a python servlet which does initial processing of the data and dumps it into various channels on a Redis server. Another python script runs the user\u2019s code on top of an advanced but simple-to-use API layer which abstracts the analysis of the data streams to just a few lines of code.</p>\n<h2>Challenges we ran into</h2>\n<p>We designed Quarqi to abstract away all of the problems with coding embedded devices, and to do that we had to face all of those problems head on. The ESP has a limited WiFi stack, so we had to use a UDP system to ensure enough throughput. This means that we have a decent amount of packet loss and so have to deal with somewhat broken data channels from time to time.\nBecause we have multiple Quarqi devices connecting to each other, and we have many users editing data simultaneously, we had to create a backend which could transmit data everywhere it needed to get efficiently. To solve this problem we used Redis, an open source memory database. Its publish-subscribe features allow us to pass data seamlessly between all parts of our application, even on separate servers. Because redis is the only part of our backend that can\u2019t be scaled up infinitely, its high performance even under extremely heavy message load makes it a great candidate for a scalable backend.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We\u2019re proud that we were able to get multiple devices working together, and the implications that has for the effectiveness of our data model. Our examples include sketches which take input from one device and output to any number of other devices. Because our information is sent entirely via redis channels this abstraction is easy for the end user to implement. Data pins are also abstracted the same way. We view all data as time-based data channels, and while we initially had some doubts about the efficacy of such a method, it turns out to be very effective for collecting, analyzing, and distributing data.</p>\n<h2>What we learned</h2>\n<p>We worked a lot with real-time networking in this hack. From the web frontend to the hardware implementing a small network stack, performance mattered across the board. We learned to take advantage of all available resources to make all components work as efficiently as possible. Even our most basic design contains at least five computational components working perfectly in harmony, so this focus on efficiency was important.</p>\n<h2>What's next for Quarqi</h2>\n<p>We aim to make hackathon projects we would actually want to use. Quarqi is no exception. We plan to expand the software stack to be usable for routine data collection as well as for more complex assignments. There is also commercial potential, as Quarqi is a much stronger tool for data analysis than a lot of the more commonplace devices today. Arduinos lack built in wifi at a decent price and photons require repeated hardware programming just to get a prototype built. Compared to Quarqi these platforms seem obsolete, and we will likely want to pursue Quarqi as a replacement.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/socket-io\">socket.io</a></span></li><li><span class=\"cp-tag\">form-2</span></li><li><span class=\"cp-tag\">solidworks</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/redis\">redis</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/canvas\">canvas</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag\">ace</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://quarqi.com\" rel=\"nofollow\" target=\"_blank\" title=\"http://quarqi.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>quarqi.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["ReginaG", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"ReginaG \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/829/datas/gallery.jpg\"/>\n<p>\n<i>Demo on Facebook messenger</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"ReginaG \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/529/datas/gallery.jpg\"/>\n<p>\n<i>Demo on SMS </i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Through direct experience, we are educating the bullies and the people how it feels to be bullied. </p>\n<h2>What it does</h2>\n<p>Users will talk to our bot, bully simulator ReginaG to find and learn more effective way to stand up to a bully verbally. Analysis at the end of conversation will determine the level of confidence in user's texts and either suggest a better way or compliment your achievement. After the Analysis, the bot recommends few options where to look for more information on bullying. </p>\n<h2>How we built it</h2>\n<p>We have used machine learning to train ReginaG to use certain kind of speech with similar level of average threats. Using Twillio API, we added text-exchangeability to ReginaG. The server runs on AWS. Through numerous tests, we were able to make the bot converse with users. Tone analysis from IBM-Watson cognitive services provided valuable insights on confidence level. We are on Facebook messenger as well! </p>\n<h2>Challenges we ran into</h2>\n<p>We have changed our approach few times completely. And once we settled on the current method, one of the challenges we faced was trying to balance the educational point and exposing to full experience of getting bullied.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>It works. </p>\n<h2>What we learned</h2>\n<p>We researched different methods of standing up to a bully, how bullies attack victims, and where to look for more help.</p>\n<h2>What's next for ReginaG</h2>\n<p>More variety to be added on speech/text.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/api-ai\">api.ai</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ibm-watson\">ibm-watson</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/machine-learning\">machine-learning</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/ellieseoejung/ReginaG\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ellieseoejung/ReginaG\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["AxAttack", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>A close friend suffered from Anxiety Attacks and we wanted to help them</p>\n<h2>What it does</h2>\n<p>It detects when a person is having an Anxiety Attack through the built in heart sensor and motion sensor. Once detected the device feeds the user with breathing techniques, music, calm pictures, and the opption to text a friend for support. </p>\n<h2>How I built it</h2>\n<p>I used xcode </p>\n<h2>Challenges I ran into</h2>\n<p>Dealing with the brand new features which came out with the new Watchos </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>The look of the app and the breathing coach</p>\n<h2>What I learned</h2>\n<p>To better manage time </p>\n<h2>What's next for AxAttack</h2>\n<p>We are going to integrate a log and show patterns in Anxiety Attacks </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/iphone-sdk\">iphone-sdk</a></span></li><li><span class=\"cp-tag\">apple-watch</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/tusharma97/AxAttack\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/tusharma97/AxAttack\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["SocialGoals (SOGO)", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"SocialGoals (SOGO) \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/000/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"SocialGoals (SOGO) \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/001/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"SocialGoals (SOGO) \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/999/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>The whole point of social networks are to bring together people. But we feel that the current shift of technology has led to the opposite phenomenon. Users tend to procrastinate, spend unproductive time, and feel a false sense of connectedness due to social app habits. If the average college student spends 6-8 hours on a computer device, then we believe this time should be constructive! </p>\n<h2>What it does</h2>\n<p>Users specify their interests and when in close proximity with a similar user, they will be notified and have the opportunity to connect with each other. </p>\n<h2>How we built it</h2>\n<p>We used Android Studio to develop the application and Firebase to store user data. Using the android location API, each client will iterate through the database to find similar users close by.</p>\n<h2>Challenges we ran into</h2>\n<p>We were mostly unfamiliar with Android Studio, so it was difficult being exposed to so much new information. Additionally, when retrieving data from FireBase, we realized we needed to \"force\" a dataChange so the event handler would be provoked.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>That we managed to get the GPS working using Firebase's Geofire API and learned how to use Android Studio in a short time span.</p>\n<h2>What we learned</h2>\n<p>Android and learning on the go.</p>\n<h2>What's next for SocialGoals (SOGO)</h2>\n<p>Completing the UI and finishing the profile page. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/decreaseme/SoGo\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/decreaseme/SoGo\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Designed input forms and stored information in the Firebase database. ", "Constructed Firebase backend, worked on GPS component, and helped with the frontend application itself. It was both of our first times working with Android so I am happy how it turned out in the end!"]], ["Tax Information Assistance for Undocumented Immigrants", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Talking with Brendon, and understanding the problem with undocumented workers, and how to give them a path back into society.</p>\n<h2>What it does</h2>\n<p>It provides information about how to navigate around paying taxes legally especially with a complicated tax code.</p>\n<h2>How I built it</h2>\n<p>I primarily used HTML</p>\n<h2>Challenges I ran into</h2>\n<p>Simply understanding the complex tax code</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Using HTML for my first time</p>\n<h2>What's next for Tax Information Assistance for Undocumented Immigrants</h2>\n<p>Providing a log in and tracking system in the case of deported immigrant for them the make a defense that they paid taxes, therefore they should stay, or a refund incase they did pay into the system.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li></ul>\n</div>\n</div>", [""]], ["Text-to-Translate", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Text-to-Translate \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/905/datas/gallery.jpg\"/>\n<p>\n<i>Text-to-Translation in Action</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Text-to-Translate \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/006/datas/gallery.jpg\"/>\n<p>\n<i>More examples of translations</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>At first we were unsure of what to do since this was our first HackRU experience. After speaking to the different sponsors and learning about their API's, the idea came to us to utilize Twilio and IBM Watson in a cohesive fashion.</p>\n<h2>What it does?</h2>\n<p>This app is basically a text-to-translate service. A server we created receives texts to a specific number (732-624-6140), and based on formatting translates the message between any two of a set of languages (English, Spanish, French, and Arabic) on prompt, and then sends a return text containing the translated token. If theres no prompt for origin language, the app detects it automatically.</p>\n<h2>How we built it?</h2>\n<p>We utilize Twilio, and IBM Watson API's, as well as a custom server.</p>\n<h2>Challenges we ran into.</h2>\n<p>This was our first time working heavily with APIs, so it was a learning process figuring out how to implement them. Plus each API needed to be implemented in a different fashion that took time to learn and find proper documentation for. Setting up a server was another first, as well as having to learn how to code in javascript, use Node.js, and temporarily Maven. A lot of collaboration with sponsors and mentors really helped guide us through this.</p>\n<h2>Accomplishments we are proud of.</h2>\n<p>We finished our first HackRU! We found working successfully with sponsor API's to be very gratifying, as well as setting up the server.</p>\n<h2>What we learned.</h2>\n<p>-Twilio API<br/>\n-IBM Watson API<br/>\n-Maven<br/>\n-Javascript for client side<br/>\n-Ngrok<br/>\n-Node.js for server side  </p>\n<h2>What's next?</h2>\n<p>Using the IBM Watson API further to add in speech translation through the speech-to-text and text-to-speech tools, so by induction also adding phone call support that translates speech in real time. Add in a website that also interacts appropriately through online translations for speech and text.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/mre56/HackRU_Alex_Matt\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/mre56/HackRU_Alex_Matt\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["FireFighter Simulation", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>After having a fire close to my house, we wondered how these firefighters were trained. Understanding that hands on training is important, we reasoned to develop a way for firefighters to be educated in a \"hands-off\" yet real world fashion.</p>\n<h2>What it does</h2>\n<p>An innovative technological virtual reality simulator for firefighters being educated in realistic training. </p>\n<h2>How I built it</h2>\n<p>We used unity, c#, occulus rift, javascript, node.js, mongodb, gitbut, and amazon web services</p>\n<h2>Challenges I ran into</h2>\n<p>We had to learn how to adapt to the occulus rift which was new to us</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We finished in time, as it was an arduous project</p>\n<h2>What I learned</h2>\n<p>Technology could be applied in many feilds, especially to educate firefighters who risk their lives saving us </p>\n<h2>What's next for FireFighter Simulation</h2>\n<p>We are looking into Police Simulations for training in that sector.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/oculus\">oculus</a></span></li><li><span class=\"cp-tag\">occulus-rift-dk-2</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/github\">github</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li></ul>\n</div>\n</div>", [""]], ["Buddy", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>A popular belief is that necessity is the mother of invention and we feel that the father is probably laziness. Buddy was born from hearing about IBM - Watson's speech processing capabilities and our own laziness when it came to simple tasks (i.e. fetch and deliver). We envisioned a personal assistant or helper hand to aid humans in our daily routines.</p>\n<h2>What it does</h2>\n<p>Buddy has microphones that listen for any instructions through a PS3 eye. When a user gives a fetch-and-deliver command such as \"buddy, give Greg a pepsi\", the robot will look around for Greg and give him a can of pepsi. This is very limited deonstration of the robot. As we didn't finish all that we set out to do, the robot could have also looked for a requested object first, and then delivered it to a desired location. </p>\n<h2>How I built it</h2>\n<p>The robot itself was already a built system beforehand. We used the hackathon to accomplish a Watson speech processing interface, a method of object recognition, and inverse kinematics for the arm in order to grab a detected object. Unfortunately, we pursued a nueral network approach for the object detection which did not lead to much progress. We resorted to using fiducial markers called CHILI-tags which were used to classify and approach humans. Although we were able to get a model for the kinematics of the robot arm, we didn't have the time to test and finish the implementation and decided that we would just start the robot off with a can of soda. </p>\n<h2>Challenges I ran into</h2>\n<p>Caffe, the deep learning framework that we hoped would allow us to classify objects, was not cooperating with any attempts of training. Time was a big challenge as we did not have enough time to work on grabbing objects and programming a more complex AI. </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We were able to implement speech processing on an Raspberry Pi and convey those commands to a robot. We learned how to use caffe to classify objects. </p>\n<h2>What I learned</h2>\n<p>Time management and parallel execution of work were both the key takeways from this project. We found that it was beneficial to have subteams with concurrent tasks because, just as we experienced, if one of the teams' part did not work, then we may still be able to have some finished project with the contributions from the other parts. </p>\n<h2>What's next for Buddy</h2>\n<p>Buddy will soon have a complete kinematic model as well and a more robust method of recognizing objects. Next, we will incorporate a more complex AI architecture that has the ability to localize and plan more intricate paths. At the end of the day, buddy will be a personal assistant system as we expand upon the speech recognition capabilities through nlp.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ibm-watson\">ibm-watson</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/opencv\">opencv</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li><li><span class=\"cp-tag\">robot</span></li><li><span class=\"cp-tag\">chilitags</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/ajay/Buddy.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ajay/Buddy.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Trump Sprite Game", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Trump Sprite Game \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/955/datas/gallery.jpg\"/>\n<p>\n<i>Be a real american!</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Trump Sprite Game \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/960/datas/gallery.jpg\"/>\n<p>\n<i>Defeat the communist Sanders!</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Trump and Memes go well together</p>\n<h2>What it does</h2>\n<p>Makes people laugh</p>\n<h2>How I built it</h2>\n<p>I learned RPGMaker</p>\n<h2>Challenges I ran into</h2>\n<p>I didn't know RPGMaker</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I learned RPGMaker</p>\n<h2>What I learned</h2>\n<p>RPGMaker</p>\n<h2>What's next for Trump Sprite Game</h2>\n<p>More DLC</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">rpgmaker-mv-and-photoshop</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://www.dropbox.com/sh/8jq4eaf2rt7t5po/AAC4JVZJU5uEyXNQXkYDf9wna?dl=0\" rel=\"nofollow\" target=\"_blank\" title=\"https://www.dropbox.com/sh/8jq4eaf2rt7t5po/AAC4JVZJU5uEyXNQXkYDf9wna?dl=0\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.dropbox.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I coded and made expert level memes", "Graphics"]], ["<3 Survey", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Boredom.</p>\n<h2>What it does</h2>\n<p>Lets you take a &lt;3 second survey.</p>\n<h2>How I built it</h2>\n<p>With much pain and suffering (Flask tutorials are not great).</p>\n<h2>Challenges I ran into</h2>\n<p>Lack of  understanding of how Flask works.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Understanding flask (eventually).</p>\n<h2>What I learned</h2>\n<p>Flask, how web apps work.</p>\n<h2>What's next for &lt;3 Survey</h2>\n<p>Finishing all the parts I never got to. Add an api for geotagging answers and displaying the answers, marked by location, using  Google Maps's API.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li></ul>\n</div>\n</div>", [""]], ["Plover", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Plover \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/018/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Plover \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/019/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We went out for a break and were yelled at by a Plover bird. The more closer we came to the bird, the more it would tweet. This gave us the idea to make a productivity extension that would give you warnings as you came closer to your deadlines.</p>\n<h2>What it does</h2>\n<p>The Plover extension allows a Google Chrome user to input their tasks and then rate them out of 5 for how much weight they want to give to the particular task. Then the user will input the number of hours that they have to complete their tasks. Our extension will use the user's ratings of each task to determine how much time they should spend on them.</p>\n<h2>How we built it</h2>\n<p>We used JavaScript, HTML, CSS, and Bootstrap.</p>\n<h2>Challenges we ran into</h2>\n<p>It was difficult for us to create a chrome extension that would interact with the functions in our JavaScript file. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We were able to create a functional chrome extension.</p>\n<h2>What we learned</h2>\n<p>We learned how to create Chrome extensions, Bootstrap, and more of JavaScript.</p>\n<h2>What's next for Plover</h2>\n<p>We want to be able to have our extension learn the user's activity and tailor the extension to the user's pace of productivity.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/chrome\">chrome</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/jamesw8/plover2.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/jamesw8/plover2.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Ocean Wave Compression", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Ocean Wave Compression \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/968/datas/gallery.jpg\"/>\n<p>\n<i>SolidWork model of our system</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Trying to reduce the use of electricity in the united states by providing a green alternative to the compression system used in industrial refrigerators.</p>\n<h2>What it does</h2>\n<p>Take\u2019s advantage of the rise and fall of the ocean waves in order to compress the working fluid in the refrigeration cycle.</p>\n<h2>How we built it</h2>\n<p>Building an actual model of our system has proven to be difficult and it would take a long time to 3-D Print, however a model was created in SolidWorks which has been included below</p>\n<h2>Challenges we ran into</h2>\n<p>Trying to find enough research on the energy consumption of industrial refrigeration in the United States was a problem and finding a suitable system that would replace the compressor also proved to be a problem we ran into. \nThere was also a lot of calculations and research that had to be done with data that isn\u2019t too readily available, and one other problem we ran into was modeling our system in SolidWorks proved to be more difficult then originally anticipated.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Actually being able to model our system and show some representation of our idea. \nAnother accomplishment was being able to find real world numbers to work with and seeing how our system to compensate and provide the required pressured at the required mass flow of the system.</p>\n<h2>What we learned</h2>\n<p>Through this project we learned more techniques for designing a compressor through the use of wrapping and cutting in SolidWorks. We also learned how hard it can be to find data on real world system and how to implement a direct alternative that what is already there but would still work the same way.</p>\n<h2>What's next for Ocean Wave Compression</h2>\n<p>Taking our model to the next level by taking our current model to our local 3-D printing lab at our university and creating a usable G-code that we can successfully 3-D print and display.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">solidworks</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://docs.google.com/presentation/d/1chTyS-a-bJXyXQppYX6HoBHASWTBooZIAfy_aievXcw/edit?usp=sharing\" rel=\"nofollow\" target=\"_blank\" title=\"https://docs.google.com/presentation/d/1chTyS-a-bJXyXQppYX6HoBHASWTBooZIAfy_aievXcw/edit?usp=sharing\">\n<i class=\"ss-icon ss-link\"></i>\n<span>docs.google.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Busy Biggies", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Biggie, tomagachi pets, fitness aps and pedometers. The need to be healthy and active.</p>\n<h2>What it does</h2>\n<p>You manage a \"Biggie\" avatar that is constantly in health decline. In order to keep him alive and well, you must stay active and meet goals you set for yourself. </p>\n<h2>How we built it</h2>\n<p>Built in android studio using java and XML, also incorporates capital one API and use of Mongodb for geo-JSON</p>\n<h2>Challenges we ran into</h2>\n<p>Animating sprites in android studio\nNone of team know android dev\nXML is weird</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We built it ground up, and it works!</p>\n<h2>What we learned</h2>\n<p>Android, and not to use it.</p>\n<h2>What's next for Busy Biggies</h2>\n<p>Animating sprites, adding additional features, and improving visuals.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/capital-one\">capital-one</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["The Mom Friend", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We figured that there are certain \"panic mode\" situations concerning our colleagues and alcohol. The type of panic that is usually calmed down by the \"mom friend\". In the case that the \"mom friend\" needs help, or isn't there, we made this app.</p>\n<h2>What it does</h2>\n<p>Given a certain situation, the Mom Friend will tel you the best course of action.</p>\n<h2>How I built it</h2>\n<p>Weebly and HTML</p>\n<h2>Challenges I ran into</h2>\n<p>Configuring APIs.\nWe wanted to use the Facebook API to acquire information about nearby friends, but we had trouble implementing it.\nWeebly widgets are only  available for mobile apps.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We finished!\nWe are both beginners who finished with low levels of experience (and low wifi).</p>\n<h2>What's next for The Mom Friend</h2>\n<p>We plan on configuring the Facebook friends API to create an innovative way to find rides.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://themomfriend.weebly.com/\" rel=\"nofollow\" target=\"_blank\" title=\"http://themomfriend.weebly.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>themomfriend.weebly.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["The adventures of Derpy Ghost and Whiz", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Coding is cool and games are fun</p>\n<h2>What it does</h2>\n<p>Play a Game</p>\n<h2>How I built it</h2>\n<p>Built it in Java 2D with friends</p>\n<h2>Challenges I ran into</h2>\n<p>Java 2D</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Making a game in Java 2D</p>\n<h2>What I learned</h2>\n<h2>What's next for The adventures of Derpy Ghost and Whiz</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/upSheep/HackRuWiz2\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/upSheep/HackRuWiz2\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Scarlet Bowling", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/XGiiaFvX4FU?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Scarlet Bowling \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/970/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Scarlet Bowling \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/971/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Scarlet Bowling \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/972/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Scarlet Bowling \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/973/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Scarlet Bowling \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/974/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We were inspired by the capabilities of the Leap Motion device and combined them with our memory of our first \"VR\" game: Wii Bowling. </p>\n<h2>What it is</h2>\n<p>Have you ever wanted to punch a bowling ball at 30 meters per second? Have you ever wanted to play a bowling game with no rules and an inability to pick up the ball? Regardless, now you can!</p>\n<h2>How we built it</h2>\n<p>We built a complete environment with Unity and wrote scripts in C# and Javascript to interact with it using the Leap Motion device as a user interface.</p>\n<h2>Challenges we ran into</h2>\n<p>Internet issues for the first 24 hours were a significant challenge, but I think managed to pull through. We also had issues with Unity's physics engines, but clever thinking and analysis overcame this. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We've created a game that we enjoy playing, and we hope you can, too.</p>\n<h2>What we learned</h2>\n<p>How to troubleshoot internet connectivity issues and how to use Unity</p>\n<h2>What's next for Scarlet Bowling</h2>\n<p>Scarlet basketball, and more.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/leap-motion\">leap-motion</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://drive.google.com/folderview?id=0B77jNK7FnDvkYTN4NnpsUkRWOTg&amp;usp=sharing\" rel=\"nofollow\" target=\"_blank\" title=\"https://drive.google.com/folderview?id=0B77jNK7FnDvkYTN4NnpsUkRWOTg&amp;usp=sharing\">\n<i class=\"ss-icon ss-link\"></i>\n<span>drive.google.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["businessCard", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>businessCard</h1>\n<p>The application allows user to take picture of business cards. It retrieves info from the card such as name, last name, company name, phones , address etc. Then it creates a new contact with all that information and allows user to check it out later. Convenient way to store business cards </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/objective-c\">objective-c</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/shell\">shell</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/nvrcght/businessCard\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/nvrcght/businessCard\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Paz2", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Paz2 \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/951/datas/gallery.jpg\"/>\n<p>\n<i>Map (gray blob is player character).</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Paz2 \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/958/datas/gallery.jpg\"/>\n<p>\n<i>You encounter a seal</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Paz2 \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/959/datas/gallery.jpg\"/>\n<p>\n<i>You encounter a pig </i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Paz2 \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/962/datas/gallery.jpg\"/>\n<p>\n<i>Game Over.</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Paz2 is based off greyalien502's Paz, a text based game. We modeled the gameplay and ideas from the original Paz. \nIn Paz, you are a human with some level of fat and muscle. You encounter animals of varying masses, and can choose to try attacking them or fleeing them. The player must consider the probability of being defeated by the animal, given the animal's mass. Additionally, the player can not just continuously flee from battles, or they will eventually run out of 'fat'. Gluttony is also punished.</p>\n<h2>What it does</h2>\n<p>It's a 2 dimensional game. Animals randomly take a step every time you take a step. Colliding with an animal enters the battle stage ('A' for attack, 'R' for run).</p>\n<h2>How we built it</h2>\n<p>We built it using Python and Pyglet to render images and for event handling.</p>\n<h2>Challenges we ran into</h2>\n<p>Cleanly separating game states in an object oriented manner. In the end, a lot ended up in one class.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>It runs, and you can play it!</p>\n<p>Flexibility of parameters - a lot of features such as screen resolution and difficulty are easily changeable using the parameters.py file. </p>\n<h2>What we learned</h2>\n<p>Ways not to organize game states (and ways not to organize classes).</p>\n<p>Pyglet</p>\n<p>Making a graphical game with minimal tools, rather than using a more featured game library.</p>\n<h2>What's next for Paz2</h2>\n<p>Music</p>\n<p>Non Player Obstacles on the game map</p>\n<p>Displaying player stats during the game \nBetter graphics </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/pyglet\">pyglet</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/ewilliams96/paz2\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ewilliams96/paz2\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Collision checking, Player, animal and obstacle classes, parts of battle phase, random animal movement and generation, debugging, background tiles, class design", "I worked on drawing the sprites, displaying things in the non-battle mode, spawning new animals, class design, also graphics."]], ["Rutgers Website", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Rutgers Website \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/906/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We were inspired by HackRu and the community here to create a website promoting Rutgers.</p>\n<h2>What it does</h2>\n<p>It is a website promoting Rutgers.</p>\n<h2>How we built it</h2>\n<p>We learned HTML at the hackathon and applied it to our site.</p>\n<h2>Challenges we ran into</h2>\n<p>Learning how to use HTML.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are proud of learning HTML and applying it to a project within the time limit.</p>\n<h2>What we learned</h2>\n<p>How to use HTML and the importance of time management.</p>\n<h2>What's next for Rutgers Website</h2>\n<p>More tabs with more detailed explanations of each point that we made.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://grylis.github.io/\" rel=\"nofollow\" target=\"_blank\" title=\"http://grylis.github.io/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>grylis.github.io</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on formatting parts of the website as well as finding information to put into the website.", ""]], ["Duplicate Image Finder", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Duplicate Image Finder \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/864/datas/gallery.jpg\"/>\n<p>\n<i>Launcher</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Duplicate Image Finder \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/877/datas/gallery.jpg\"/>\n<p>\n<i>Config page</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Duplicate Image Finder \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/878/datas/gallery.jpg\"/>\n<p>\n<i>Select directory</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Duplicate Image Finder \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/879/datas/gallery.jpg\"/>\n<p>\n<i>Show similar images</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Lots of duplicate images after travelling.</p>\n<h2>What it does</h2>\n<p>It will check all image files in a directory provided by user and find duplicate image. If a duplicate image is detected, it will show both images together and let user decide whether to delete one of them or keep both.</p>\n<h2>How I built it</h2>\n<p>IntelliJ</p>\n<h2>Challenges I ran into</h2>\n<p>Images may have different resolution. Pixel to Pixel comparison cannot be applied easily.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Adjust variables to make program run better.</p>\n<h2>What I learned</h2>\n<p>How to use 3rd party java libraries. More javafx components. Use of <a rel=\"nofollow\">fx:root</a></p>\n<h2>What's next for Duplicate Image Finder</h2>\n<p>Better UI, better algorithm, faster speed</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/mkiderek/Duplicate-Image-Finder\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/mkiderek/Duplicate-Image-Finder\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["un perdedor soylent", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"un perdedor soylent \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/750/datas/gallery.jpg\"/>\n<p>\n<i>chair</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<h2>What it does</h2>\n<p>Provides 2 player, 2 dimensional, 2-sp00ky carnage</p>\n<h2>How we built it</h2>\n<p>We sought out to utilize the Myo armband gesture control device, but by the end deviceorientation and simple buttons were required to get the functionality needed.  It's made mostly of redis and html canvas.</p>\n<h2>Challenges we ran into</h2>\n<p>Myo doesn't support linux, which is natural consequence of an aiming for developer adoption.  Latency was also too high for the game to be enjoyable.</p>\n<h2>Accomplishments that we're proud of</h2>\n<h2>What we learned</h2>\n<p>Lots about bluetooth and using </p>\n<h2>What's next for un perdedor soylent</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/redis\">redis</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/strangesast/hackru2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/strangesast/hackru2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the Moyu device and health bar program.", ""]], ["Financial Data API", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>The main financial data API is Bloomberg, which is great, but the only problem is that it is very expensive. My solution was to build an API where people can scrape their own financial data and then store it on the API which ado generates documentation for how that data can be accessed, and individuals anywhere in the world can now access that information. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n</div>", [""]], ["Wikilio", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Wikilio \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/080/datas/gallery.jpg\"/>\n<p>\n<i>Explore the possibilies!</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Wikilio \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/081/datas/gallery.jpg\"/>\n<p>\n<i>Sections within!</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Wikilio \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/082/datas/gallery.jpg\"/>\n<p>\n<i>In depth content of subject!</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Wikilio \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/083/datas/gallery.jpg\"/>\n<p>\n<i>Looking for images!</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Wikilio \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/084/datas/gallery.jpg\"/>\n<p>\n<i>Looking up summaries!</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Wikilio \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/086/datas/gallery.jpg\"/>\n<p>\n<i>Need help?</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Don't have a smartphone and want easy access to Wikipedia content, then Wikilio is here for you!</p>\n<h2>What it does</h2>\n<p>Uses Twilio to send text messages or images of content that you are searching for.</p>\n<h2>How we built it</h2>\n<p>We used Python as the foundation of our program while Wikipedia and Wikia provides the content for user searches.</p>\n<h2>Challenges we ran into</h2>\n<p>Large content loads slowly, but summaries and other search features are avaliable for a quick glance.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Not only do we have text, we also added image search features without the use of internet.</p>\n<h2>What we learned</h2>\n<p>We learned that internet is not always needed to access content often accessed on smartphones. The ability to explore and discover an encyclopedia and a plethora of topics do not require internet. This brings about new possibilites that have been overlooked in promoting learning and education for all users with any kind of phone.</p>\n<h2>What's next for Wikilio</h2>\n<p>We hope to ensure that page numbers for larger content will be displayed in order for users to make it easy to read! In addition, we hope to bring new databases beyond Wikipedia and Wikia!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/wikipedia\">wikipedia</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/wikia\">wikia</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/ServePeak/hackru-s16\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ServePeak/hackru-s16\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Founder", "", ""]], ["Cheers", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Cheers \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/880/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>Cheers integrates your Pebble, your Android smartphone and a web app.</p>\n<p>We wanted to encourage people to work out and keep fit while adding some fun.\nFriends and family usually say \"Cheers\" and cling glasses to celebrate. \nCheers brings that celebration into fitness.</p>\n<p>Two users wear their Pebble as usual to track certain health metrics. When they meet up, they bump their Android phones and through NFC, they initialize the app. Now, these two friends start competing for who can achieve the most number of steps until they bump phones again. The competition ends when they bump phones again, and the person with less steps will automatically transfers money to the winner. There's a web app that tracks metrics and transactions.</p>\n<p>It's a fun way to keep fit and socialize with friends and family!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/pebble\">pebble</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ajax\">ajax</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/helenawuhw/BumpMe\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/helenawuhw/BumpMe\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Web UI+UX & Pebble.", ""]], ["ClapCam", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>With the growing popularity of smartphones, it is becoming easier and easier to capture life in a new perspective through high quality photographs. However, it is often challenging for a user to quickly and appropriately adjust their camera to the environment.</p>\n<p>In order to simplify and enhance the quality of photos, we created an iOS app, ClapCam, that takes the lighting and temperature of the setting into account when taking the picture. The brightness of the picture is modified when the lighting in the environment changes, while the temperature of the setting varies the tint in the photo. A rotary sensor can also be adjusted to change the flash. </p>\n<p>For some, it may be difficult to press the camera button when taking photos. Whether their hands are full or they want to be fully in the picture, the user can't press the button. With ClapCam, their photography capabilities aren't limited. By clapping or make a loud noise, the user can set off a three second timer to take the photo.</p>\n<p>With these four variables, the user can strengthen the quality of their photograph without having to personally make any adjustments. </p>\n<p>In the future, we would like to further enhance the sound variable by giving it multiple functions based on the number of times the user claps. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/intel-edison\">intel-edison</a></span></li></ul>\n</div>\n</div>", ["", "", "", ""]], ["Gains", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Werblin Recreational Center</p>\n<h2>What it does</h2>\n<p>Calculates user BMI and uses this along with user entered input to direct the user to a personalized workout and diet plan</p>\n<h2>How I built it</h2>\n<p>My team used android studio with Java and XML.</p>\n<h2>Challenges I ran into</h2>\n<p>Managing this large project while learning version control.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Nearly completing a large app with many activities with various attributes.</p>\n<h2>What I learned</h2>\n<p>Better Android development skills.</p>\n<h2>What's! next for Gains</h2>\n<p>Using API's to fetch data from bodybuilding websites like bodybuilding.com.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xml\">xml</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/SamuelBWasserman/GainzApp.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/SamuelBWasserman/GainzApp.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Worked on the first second and third activities XML and Java.", ""]], ["Time and PUNishment", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>One of the sad truths of life is that one must, on occasion, be a productive member of society. For those times when you've got a lot to do and no motivation for it, we've built Time and PUNishment, a chrome extension which allows you to set a timer of productivity. Once time is up, it'll check your search history - and if you've been a lazy bum on time wasting websites, you will be spammed with the rudest of puns. This project uses JavaScript and Twilio; we ran into challenges marrying the chrome activities with the messaging components, but learned a lot about chrome and Twilio's APIs along the way, as well as how to use GitHub. Once we polish the interaction between components, Time and PUNishment will get a database to track user successes and failures over time, ensuring a lifetime of punderful insults and well-earned praise if you're getting  things done!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/chrome\">chrome</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li></ul>\n</div>\n</div>", ["", "", ""]], ["HackRU2016", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"HackRU2016 \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/803/datas/gallery.jpg\"/>\n<p>\n<i>Let's Accumulate!</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>My inspiration was to create a cloudy future more organized and tangibly accessible.</p>\n<h2>What it does</h2>\n<p>It accumulates time that a user predicts that they will spend in that particular activity.</p>\n<h2>How I built it</h2>\n<p>I built it using only java and my limited knowledge of programming.</p>\n<h2>Challenges I ran into</h2>\n<p>Making it more complex and visually appealing.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I actually completed my first hackathon.</p>\n<h2>What I learned</h2>\n<p>If you hate an idea, NEVER pursue it.</p>\n<h2>What's next for HackRU2016</h2>\n<p>Who knows?</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/sujaygami/HackRU2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/sujaygami/HackRU2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["HackRUX", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"HackRUX \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/799/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>HackRUX</h1>\n<p><a href=\"speechtonest.firebaseapp.com\" rel=\"nofollow\">speechtonest.firebaseapp.com</a></p>\n<p>Speech to Nest: </p>\n<p>Input client audio command, convert to speech with Google Web Speech \nAPI. Send text to Scriptr which uses Wit.AI to understand intent and \nkeywords and then use the Nest API to change the temperature.</p>\n<p>Watson Text to Speech API is used to vocalize temperature changes and \noutput to the user. </p>\n<p>Built by Arpit Shah, Wael Ayadi, and Waseem Khan.\n--with help from Ed Borden</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag\">scriptr.io</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ibm-watson\">ibm-watson</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-web-speech-api\">google-web-speech-api</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/arpitshah101/HackRUX\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/arpitshah101/HackRUX\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Designed internal structure and directed usage of various API's. ", "frontend + firebase\n", ""]], ["soycasino", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"soycasino \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/422/datas/gallery.jpg\"/>\n<p>\n<i>Logo</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"soycasino \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/425/datas/gallery.jpg\"/>\n<p>\n<i>Registration Screen</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"soycasino \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/584/datas/gallery.jpg\"/>\n<p>\n<i>Log In Screen</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"soycasino \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/671/datas/gallery.jpg\"/>\n<p>\n<i>Blackjack</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p><strong>Card Games X Banking.</strong> Coming into HackRU not knowing much, we had one thing in common. Our group was brought together by a love for card games. Coupled with a desire to utilize the touted power of APIs, the idea came about to utilize book keeping APIs to help manage the hectic and numerous exchanges of money that occur during most card games.</p>\n<h2>What it does</h2>\n<p><strong>Always see your finances.</strong> soycasino is part of the new frontier of card games that have permeated the world wide web. As games become more competitive and serious, it is increasingly necessary to have the ability to manage users funds within the gaming application and to have it accessible for them. And so, soycasino was born as an integration of Capital One's Nessie API and the online casino environment.</p>\n<h2>How we built it</h2>\n<p><strong>Without Sleep.</strong> We built soycasino using Java 8, and the most up to date Maven. Also used was Javascript, HTML, CSS, and Capital One's Nessie API, which served as a cloud data service that helped us manage currency. The tool used to write the code was Eclipse.</p>\n<h2>Challenges we ran into</h2>\n<p><strong>First-Timers.</strong> As beginners, we found it hard to pick up all the information that was necessary to develop the idea we had in our minds. We had little to no experience with many of the languages and tools that we ended up using. Particularly challenging was the organization of user financials and the communication of this data to the Nessie API. Nonetheless by the crack of dawn, we overcame these challenges and produced something we were happy with.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p><strong>Experience, Reliability, and Enjoyment.</strong> Over the course of the project, we overcame obstacles, allowing the project to exceed expectations in each of these categories. Moreover it was our initial lack of knowledge that led to greater pride in the end. The implementation of various lines of CSS and game logic allowed for visually appealing and amazingly fun moments throughout the whole experience. After hours of no sleep, the reliability of the final product to execute as planned was the proudest moment.</p>\n<h2>What we learned</h2>\n<p><strong>Literally Tons.</strong> From formatting to game logic to API utilization, soycasino represented a culmination of three separate skills that had to be learned in order to make the final product. For formatting, we had to learn HTML and CSS. In order to make the pages for dynamic and communicate with APIs, we needed to learn JS, JQuery, Maven, in addition to Capital One's Nessie API. Finally on the back-end, for the game design, java had to be learned and was heavily depended on.</p>\n<h2>What's next for soycasino</h2>\n<p><strong>Reality and Growth.</strong> soycasino is much like its inspiration, soylent. Both have the potential to grow and gain a wider demographic. In particular, soycasino has a whole litany of games which could be added to its repertoire to attract greater numbers of people. As well on the back-end, soycasino will be capable of holding its users' balances and exchanging these funds to and fro the banks.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag\">capital-one-nessie-api</span></li><li><span class=\"cp-tag\">java-8</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/maven\">maven</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/eclipse\">eclipse</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/jcao219/soycasino.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/jcao219/soycasino.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://j.mp/soycasino\" rel=\"nofollow\" target=\"_blank\" title=\"https://j.mp/soycasino\">\n<i class=\"ss-icon ss-link\"></i>\n<span>j.mp</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the backend and helped tie everything together.", "", ""]], ["Rock, Paper, Scissors, Leap", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Rock, Paper, Scissors, Leap \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/845/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Rock, Paper, Scissors, Leap \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/846/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Rock, Paper, Scissors, Leap \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/847/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Rock, Paper, Scissors, Leap \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/848/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Rock, Paper, Scissors, Leap \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/849/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to use motion control to initially help people communicate using a new medium. Our project helps show that natural human gestures, which do not need to be translated, can be sent over the internet.</p>\n<h2>What it does</h2>\n<p>Our project allows two users to play a game of rock, paper, scissors over the web. </p>\n<h2>How we built it</h2>\n<p>Each user's gestures are read by the Leap motion sensor which is feed into the browser. The browser, using Leap's javascript SDK, figures the gesture made by the user and is sent to the server which takes both inputs and determines the winner.</p>\n<h2>Challenges we ran into</h2>\n<p>Figuring the Leap motion's Javascript SDK, creating a small chat client to exchange and determine the gestures information, and deploying the service remotely.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Making the project actually work, being able to fairly accurately detect the correct gesture the user made, and deploying successfully to a remote host.</p>\n<h2>What we learned</h2>\n<p>Sending and receiving messages through Nodejs, gesture detection, and translating physical movement into data.</p>\n<h2>What's next for Rock, Paper, Scissors, Leap</h2>\n<p>Improve the accuracy and speed at which our project recognizes gestures. Put in support for American Sign Language and have text to speech to read the input out loud.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/leap-motion\">leap-motion</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/heroku\">heroku</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/saiarvindg/hackru2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/saiarvindg/hackru2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on getting the heroku server up and running with right ports listening. ", "I worked on getting the LEAP Motion sensor to communicate and interface with the Javascript code running in a web browser. I also developed the front-end for the main webpage, working with sending/interpreting data to/from the back-end server."]], ["EasyA", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"EasyA \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/163/datas/gallery.jpg\"/>\n<p>\n<i>EasyA Trimester</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"EasyA \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/175/datas/gallery.jpg\"/>\n<p>\n<i>EasyA Quarter</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>As a high school senior, I am getting lazy. I want to do the minimum work required in a class to get the grade I want. This is where EasyA comes handy. </p>\n<h2>What it does</h2>\n<p>In my high school, we have 3 trimesters, and it is the final trimester now. Students put in their first two trimester grades, and the minimum grade they want to finish of the year. The web app then calculates the minimum 3rd trimester grade to get the yearly final grade. This also includes a quarter system for students who has that.</p>\n<h2>How I built it</h2>\n<p>I used HTML, CSS, JavaScript, and JQuery in creating this app.</p>\n<h2>Challenges I ran into</h2>\n<p>I add ran into a challenge of using JQuery to gather the information from the website, why having a great User Experience that didn't require any extra clicks.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Using JavaScript and JQuery to create something that is useful for my friends and me.</p>\n<h2>What I learned</h2>\n<p>I furthered my knowledge in JavaScript and JQuery and I feel more comfortable using these languages.</p>\n<h2>What's next for EasyA</h2>\n<p>I create an Android version of this app in my free time prior, so the next step would to create an IOS version of this app.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://sagargarg.io/EasyA2/\" rel=\"nofollow\" target=\"_blank\" title=\"http://sagargarg.io/EasyA2/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>sagargarg.io</span>\n</a></li>\n<li><a href=\"https://github.com/sagargarg/sagargarg.github.io/tree/master/EasyA2\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/sagargarg/sagargarg.github.io/tree/master/EasyA2\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://play.google.com/store/apps/details?id=com.sagar.grade\" rel=\"nofollow\" target=\"_blank\" title=\"https://play.google.com/store/apps/details?id=com.sagar.grade\">\n<i class=\"ss-icon ss-link\"></i>\n<span>play.google.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["MagicalDearthOfLogic", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>Inspiration: I wanted to make an rpg akin to Mario &amp; Luigig: Partners in Time / Bowser's inside story.</p>\n<p>What it does: This is a very barebones comb at simulation for my future game. </p>\n<p>How I built it: I built it in java, using Java 2D.</p>\n<p>Challenges: Just about everything. Biggest challenge was probably reading my code and understanding it at 3 AM for the combat menu.</p>\n<p>Accomplishments: I'm proud of just getting it so far. I didn't know I could make a game with a working combat menu, target select and rudimentary animations for taking damage.</p>\n<p>What I Learned: How to use bits and pieces of Java2D, and that menus are really complicated and need a lot of prethought to be streamlined.</p>\n<p>Next Step for MagicalDearthOfLogitc: Rewrite some parts of the code to be more legible and more understandable, and then streamline the way that the menus work.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/MeTheRattata/MagicalDearthOfLogic\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/MeTheRattata/MagicalDearthOfLogic\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Only member, Only contributor. Wrote all the code, created all the sprites."]], ["Rutgers Bus Simulator", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Rutgers Bus Simulator \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/676/datas/gallery.jpg\"/>\n<p>\n<i>Full Capacity</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Rutgers Bus Simulator \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/677/datas/gallery.jpg\"/>\n<p>\n<i>In motion</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Rutgers Bus Simulator \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/678/datas/gallery.jpg\"/>\n<p>\n<i>Empty</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Rutgers Bus Simulator \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/679/datas/gallery.jpg\"/>\n<p>\n<i>Waiting</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Rutgers Bus Simulator \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/680/datas/gallery.jpg\"/>\n<p>\n<i>Meme</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Taking Rutgers buses every day</p>\n<h2>What it does</h2>\n<p>Simulate Rutgers buses virtually</p>\n<h2>How we built it</h2>\n<p>Javascript, HTML, CSS</p>\n<h2>Challenges we ran into</h2>\n<p>No sleep and art</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Finished initial product</p>\n<h2>What we learned</h2>\n<p>Funny programming and domain registration (and memes) </p>\n<h2>What's next for Rutgers Bus Simulator</h2>\n<p>More accurate simulation in further version\n(Stan, the LX bus driver, DLC)</p>\n<p>(SATIRE) </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag\">domain.com</span></li><li><span class=\"cp-tag\">funny</span></li><li><span class=\"cp-tag\">satire</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://kerblaster.github.io/rutgersbussim/\" rel=\"nofollow\" target=\"_blank\" title=\"http://kerblaster.github.io/rutgersbussim/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>kerblaster.github.io</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Fitiquick", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Fitiquick \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/897/datas/gallery.jpg\"/>\n<p>\n<i>No nonsense fitness tracker. Quick and painless</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Fitiquick \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/896/datas/gallery.jpg\"/>\n<p>\n<i>Home screen,swipe up</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Fitiquick \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/898/datas/gallery.jpg\"/>\n<p>\n<i>Swipe left or right to pick reps,swipe up again to choose weights</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Fitiquick \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/900/datas/gallery.jpg\"/>\n<p>\n<i>Pick weights by swiping left or right again, swipe up to choose exercise</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Fitiquick \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/895/datas/gallery.jpg\"/>\n<p>\n<i>Swipe left or right to choose exercise,swipe up to finish your log entry</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Lets face it, fitness trackers have made a bad reputation for being very obstructive in the process of capturing information. Fitiquick tries to solve this problem of bad user experience by eliminating  any hassle that prevents the user from focusing on their workouts.</p>\n<h2>What it does</h2>\n<p>Its a fitness tracker that does one thing best : make sure you focus on your workouts. There are no keypads,long boring forms or boring UI. The app helps user directly take their numbers whilst they are working out, all by simply swiping up,down, left and right. It takes 3 seconds to pop open your phone make an entry and put it back in.</p>\n<h2>How I built it</h2>\n<p>Using iOS SDK</p>\n<h2>Challenges I ran into</h2>\n<p>Being solo, I had to manage all aspects of development</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Being able to finally spend some time on polishing the UI</p>\n<h2>What I learned</h2>\n<p>24 hours ain't much </p>\n<h2>What's next for Fitiquick</h2>\n<p>Improving it a tad further : add your own exercises,edit previous entries. Later I will put it on the app store</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/iphone-sdk\">iphone-sdk</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ios\">ios</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/core-data\">core-data</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/nikhilnxvverma1/fiti-quick\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/nikhilnxvverma1/fiti-quick\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Worked on the frontend and the backend."]], ["PTVR", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We were inspired by our friend, Joey, who had a stroke when he was a baby and lost motor skills in his right hand. We learned that he has spent hundreds of thousands of dollars on physical therapy sessions and thought we could make a  new form of treatment that was less costly. Therefore, PTVR was created. </p>\n<h2>What it does</h2>\n<p>PTVR, which stands for Physical Therapy in Virtual Reality is an application that allows the user to strengthen their motor skills through it's interactive exercises. The user can use their own hands to play several of the exercises that include connect-the-dots, darts, etc. At the end of each level, a text message is sent (through the Twilio API) to the patient's physical therapist to track their progress. </p>\n<h2>How we built it</h2>\n<p>We used Unity and C# to build for the Oculus Rift + Leap Motion. Also we used a Python web server with the Twilio API to send the patient's progress to his/her doctor.</p>\n<h2>Challenges we ran into</h2>\n<ul>\n<li>Connecting and setting up the Oculus Rift + Leap Motion</li>\n<li>Creating a server to run the Python code</li>\n<li>Sharing code between team members</li>\n<li>Creating Hand Collisions with UI elements in Unity</li>\n</ul>\n<h2>Accomplishments that we're proud of</h2>\n<ul>\n<li>Getting all three levels to be functional</li>\n<li>Configuring the Twilio API with query parameters so that the message changes based on the level.</li>\n<li>Implementing a scoring system based on a Stopwatch timer in C#. </li>\n</ul>\n<h2>What we learned</h2>\n<ul>\n<li>A whole bunch of Collisions and Object Interactions in Unity.</li>\n<li>Integrating the Leap Motion objects properly. </li>\n<li>AWS is more annoying than we thought. </li>\n</ul>\n<h2>What's next for PTVR</h2>\n<p>We plan to make more detailed score reports that are sent to the patient's therapist using email as well as text message. We also want to make the UI a little more appealing, with ease of movement through the levels. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://akshayadinesh.github.io/PVRT\" rel=\"nofollow\" target=\"_blank\" title=\"https://akshayadinesh.github.io/PVRT\">\n<i class=\"ss-icon ss-link\"></i>\n<span>akshayadinesh.github.io</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I initially came up with the idea. I developed the Main Screen's UI, as well as some basic scripting for scoring, etc. I helped with design and making the website. Also, I tried to work on the Python script. ", "", "", ""]], ["Tappy Bird", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Tappy Bird \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/684/datas/gallery.jpg\"/>\n<p>\n<i>TAPPY BIRD!</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Tappy Bird \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/781/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Tappy Bird \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/782/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We like flappy bird.\nWe like rhythm games.\nWe like puns.</p>\n<h2>What it does</h2>\n<p>Simple Three Lane Collect The Coins Game.</p>\n<h2>How we built it</h2>\n<p>Java, blood, sweat, and tears. And a ton of caffeine (and fun). </p>\n<h2>Challenges we ran into</h2>\n<p>Original ideas failed because of overly ambitious use of hardware.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Getting the game to work, and including graphics and audio!</p>\n<h2>What we learned</h2>\n<p>Learned how to overcome challenges and manage time better.</p>\n<h2>What's next for Tappy Bird</h2>\n<p>The sequels, Slappy Bird, Clappy Bird and Crappy Bird.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag\">sweat</span></li><li><span class=\"cp-tag\">tears</span></li><li><span class=\"cp-tag\">creativitiy</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/love\">love</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/jandeancatarata/TappyBird\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/jandeancatarata/TappyBird\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked heavily on the game engine and mechanics as well as the music!", ""]], ["TwitterTime", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<h2>What it does</h2>\n<p>filters Twitter feed for time to read</p>\n<h2>How I built it</h2>\n<h2>Challenges I ran into</h2>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<h2>What's next for TwitterTime</h2>\n</div>\n</div>", ["", "", ""]], ["taskl", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We often forget, or are not even aware that we need to do things when we are certain places. Our app fixes that. We hope to make people more efficient, and happier overall. </p>\n<h2>What it does</h2>\n<p>Allows users to put in tasks tagged with a location which we store. Then when they, or a friend, goes to this place it texts them of the task that they want to do, or their friend wants them to do. For example, if Ishan wants potatoes he would tag a supermarket and when his friend Lawrence goes to one he would be alerted of this. It also would work if Ishan went as well. It would work if Ishan went to the market himself as well.</p>\n<h2>How we built it</h2>\n<p>We built the app in Swift for iOS which gets the users location and provides the ability for them to make tasks and tag a location. Then we send a request to our scriptr script which creates the entry in the database (mongoDB) if the user is creating a task. A user is defined by his phone number which has locations with various tasks. Then when a user goes to a previously defined location, we send a request to another scriptr script which uses twilio to alert the person it needs to alert by text message. </p>\n<h2>Challenges we ran into</h2>\n<p>Getting the front end to work, and using Twilio with scriptr. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We have made something we would actually use and be useful.</p>\n<h2>What we learned</h2>\n<p>Virtually everything in this hack was new to us. We never used scriptr, mongo, aws, swift or twilio. A lot was learned.</p>\n<h2>What's next for taskl</h2>\n<p>We want to polish the front end up a lot. We also want to introduce groups of people to add tasks. Also the ability to tag types of locations so that we can understand where our users are going and create alerts for other locations.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ios\">ios</a></span></li><li><span class=\"cp-tag\">scriptr</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-calendar\">google-calendar</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["Mini League of Legends Experiment", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Traditional 2D platforms and influence from old-school styles, as well as modern League of Legends as a light template.</p>\n<h2>What it does</h2>\n<p>You can control a character where minions move with you to kill other minions an enemy NPC. The goal is to destroy the enemy base.</p>\n<h2>How we built it</h2>\n<p>Used Java and ran libgdx as our package to help us properly program a game, as well as using Gimp and Tiled to create visual assets for sprites.</p>\n<h2>Challenges we ran into</h2>\n<p>Properly coordinating a two-player mode, problems involving struggling with minion loop errors, health, etc.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We managed to fix issues regarding camera and character focus, and created our own grid of how many pixels per block (128) and created a traversable platform.</p>\n<h2>What we learned</h2>\n<p>Maybe not to make too ambitious goals for a short amount of time. Also learned how to experiment with new ways to interact with libgdx and artistic assets.</p>\n<h2>What's next for Mini League of Legends Experiment</h2>\n<p>Fixing out the bugs to make the demo more interactive and playable, changing sprites, etc.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/libgdx\">libgdx</a></span></li><li><span class=\"cp-tag\">lwjgl</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://drive.google.com/a/scarletmail.rutgers.edu/folderview?id=0B6ml0OF4tvmNam9IdldMVGNwSFE&amp;usp=sharing\" rel=\"nofollow\" target=\"_blank\" title=\"https://drive.google.com/a/scarletmail.rutgers.edu/folderview?id=0B6ml0OF4tvmNam9IdldMVGNwSFE&amp;usp=sharing\">\n<i class=\"ss-icon ss-link\"></i>\n<span>drive.google.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["PixelBattles", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"PixelBattles \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/672/datas/gallery.jpg\"/>\n<p>\n<i>Nexus</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"PixelBattles \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/673/datas/gallery.jpg\"/>\n<p>\n<i>Nexus</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"PixelBattles \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/674/datas/gallery.jpg\"/>\n<p>\n<i>Trees</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>With half of our team being inexperience with coding and a fourth of it leaving, we didn't have many resources. However, we wanted to get something published, so we created a very basic game where a team attempts to destroy the other team's nexus without getting its own destroyed. The players can either attack the enemy players or the nexus. Once a nexus is destroyed, game over. We all learned javascript for the first time (and for one of our teammates, coding for the first time), so that took up a majority of our time. Also, image editing was also a setback. But we are proud of what we are presenting today.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/IshanArya/PixelBattles\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/IshanArya/PixelBattles\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Placeholder Game", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>An attempt at a networked multiplayer pong-like game</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/kevin-zh/LOGC\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/kevin-zh/LOGC\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["BusHack", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"BusHack \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/661/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"BusHack \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/662/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"BusHack \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/663/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>As first year students, we found the Rutgers bus system to be complicated, so we wanted to make an app to make it easier to traverse.</p>\n<h2>What it does</h2>\n<p>This app lets a user input their location and where they want to go, and it outputs the bus stop and bus they should use.</p>\n<h2>How we built it</h2>\n<p>We built it using a mixture of CSS, HTML, Javascript and Jquery.</p>\n<h2>Challenges we ran into</h2>\n<p>We had a hard time storing the data in a database for later use.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are proud of the final layout of the website.</p>\n<h2>What we learned</h2>\n<p>We learned HTML, Javascript, CSS and Jquery.</p>\n<h2>What's next for BusHack</h2>\n<p>Mobile devices and being able to input entire schedules.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://drive.google.com/drive/u/0/folders/0B615DvCOby4xRXBjdTRqOVZNTm8\" rel=\"nofollow\" target=\"_blank\" title=\"https://drive.google.com/drive/u/0/folders/0B615DvCOby4xRXBjdTRqOVZNTm8\">\n<i class=\"ss-icon ss-link\"></i>\n<span>drive.google.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Blow It Up", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Dance pad</p>\n<h2>What it does</h2>\n<p>blow stuff up</p>\n<h2>How we built it</h2>\n<p>dance pad</p>\n<h2>Challenges we ran into</h2>\n<p>dance pad</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>blowing stuff up with dance pad</p>\n<h2>What we learned</h2>\n<p>how to dance pad</p>\n<h2>What's next for Blow It Up</h2>\n<p>more dance pad</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/libgdx\">libgdx</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/fwumdesoft/blow-it-up\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/fwumdesoft/blow-it-up\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Protopy", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>The main objective was to construct something that can be used to program in python through the use of blocks. It's main aim is to facilitate programming instruction and rapid prototyping of python programs.</p>\n<h2>What it does</h2>\n<p>The program facilitates programming instruction and rapid prototyping of python programs through a drag and drop interface. </p>\n<h2>How we built it</h2>\n<p>Constructed primarily with node-webkit and python for compilation. </p>\n<h2>Challenges we ran into</h2>\n<p>Parent to child communication and choosing the proper data structure to use to represent the data. Parsing the JSON was almost impossible and brought many tears to our hackers and caused raging meltdowns. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Managed to take a graph and turn it into legitimate python through the use of a directed graph and BFS.</p>\n<h2>What we learned</h2>\n<p>Data structures are cool.</p>\n<h2>What's next for Protopy</h2>\n<p>Make it run smoother and more efficient.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/R-a-y-Zhang/vertex\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/R-a-y-Zhang/vertex\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["iStuffMgmtTool", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"iStuffMgmtTool \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/619/datas/gallery.jpg\"/>\n<p>\n<i>Flask local server running</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"iStuffMgmtTool \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/620/datas/gallery.jpg\"/>\n<p>\n<i>ngrok running</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"iStuffMgmtTool \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/622/datas/gallery.jpg\"/>\n<p>\n<i>View nearest ATMs in SMS</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"iStuffMgmtTool \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/623/datas/gallery.jpg\"/>\n<p>\n<i>Add a new customer</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"iStuffMgmtTool \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/624/datas/gallery.jpg\"/>\n<p>\n<i>Bill payment</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"iStuffMgmtTool \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/625/datas/gallery.jpg\"/>\n<p>\n<i>Add an organization</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>People end up spending more time managing and making multiple payments on different platforms than actually use it for productive things. In order to save this time and automate tasks, my application allows user to create account with <strong>CapitalOne</strong>, linking it with multiple payment partners like gas companies, electricity providers, internet service providers, shopping malls etc and provide real time sms feedback. </p>\n<h2>What it does</h2>\n<p>This application allows user to setup account with <strong>CapitalOne</strong>, make use of multiple services - make pending bill payments, setup recurring bill payments, quick lookup of nearest ATMs, add organization (only for admins) for user to avail its (organization's) service. It also provides real time feedback about status of the service availed via <strong>SMS</strong>.</p>\n<h2>How I built it</h2>\n<p>I built the whole application around <strong>CapitalOne's API</strong> making it a primary API portal for managing customers and their accounts and <strong>Twilio's RESTApi</strong> and <strong>Markup Language(ML)</strong> as sms service provider. I created local database using <strong>sqlite3</strong> to store customer's login credentials and other useful information. Local database also stores bills payable (both recurring and non-recurring) and organization details to automate payment process without requiring customer to login into different portals. In order to provide nearest ATMs to customer, I used <strong>geopy</strong> API for geocoding, where customer sends city and state via sms and geopy converts it into latitute and longitude. We use these coordinates to fetch ATMs from CapitalOne's API. In order to read sms from customer, I set up a local server using <strong>Flask</strong> and tunneled it with public internet using <strong>ngrok</strong>. I used <strong>JSON</strong> and <strong>urllib2</strong> packages for sending GET/POST requests and receive responses.</p>\n<h2>Challenges I ran into</h2>\n<p>I had basic understanding of Python 2.7. However, I faced challenges to deal with APIs as this was completely new to me. I spent some time learning and running test codes, making extensive use of CapitalOne's API. It was challenging to install new packages in the system as few dependent libraries were missing; so had to remove errors from scratch. Eventually it worked. I also had hard time understanding <strong>ngrok</strong> and <strong>Flask</strong>, as it lacked some intricate details in documentation, which I figured out later and got the code running.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I am proud to have learnt dealing with API, tunneling and software development. I appreciate the fact that I could talk to sponsors and know more about the companies that I wasn't aware of! I made some friends as well.</p>\n<h2>What I learned</h2>\n<p>I learned developing applications using multiple APIs, aggregate data, develop modules to clean and store the raw data in final tables and then later transfer it on cloud.</p>\n<h2>What's next for iStuffMgmtTool</h2>\n<p>Upcoming modules coming up in <strong>iStuffMgmtTool</strong> are:\na. Integrating VoIP to provide voice services to customers and improve user experience.\nb. Integrate the code with external payment parties' API in order to provide many features that we are missing in this fundamental module.\nc. Transfer the sqlite3 database on cloud - mongodb/ AWS.\nd. Create GUI for improving look and feel of tool.\nand many more to come...</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/capital-one\">capital-one</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag\">geopy</span></li><li><span class=\"cp-tag\">ngrok</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li><li><span class=\"cp-tag\">rest</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sqlite\">sqlite</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/10bottomsup/hackru_iStuffMgmtTool\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/10bottomsup/hackru_iStuffMgmtTool\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I developed the whole project - including backend, console application, and communicating with cloud using different APIs."]], ["WatsonEchoFusion", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Personal Assistant</p>\n<h2>What it does</h2>\n<p>Fetches a user image, uses AlchemyAPI to figure out age of user and play song depending on user's age by a trigger to Amazon Echo.</p>\n<h2>How we built it</h2>\n<p>Used DynamoDB database and Amazon S3 to store image files. The front-end to fetch user details is built using Bootstrap and Javascript and backend is built with J2EE.</p>\n<h2>Challenges we ran into</h2>\n<p>Finding the perfect file format for songs that should be compatible with Amazon Alexa, figuring out age with AlchemyAPI and figuring out how Speech To Text works on Amazon Echo.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Getting output from Amazon Echo and running the whole project using Amazon Web Services.</p>\n<h2>What we learned</h2>\n<p>AlchemyAPI, Bootstrap, Using AWS, Using Amazon Echo</p>\n<h2>What's next for WatsonEchoFusion</h2>\n<p>Figuring out what songs to play with emotions and age.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag\">s3</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-ec2\">amazon-ec2</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-dynamodb\">amazon-dynamodb</a></span></li><li><span class=\"cp-tag\">echo</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/alchemyapi\">alchemyapi</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://52.38.86.14:8080/test/register.jsp\" rel=\"nofollow\" target=\"_blank\" title=\"http://52.38.86.14:8080/test/register.jsp\">\n<i class=\"ss-icon ss-link\"></i>\n<span>52.38.86.14</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Cram Time", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration: It's difficult to find practice problems with step-by-step solutions, and that often means spending more time searching for study material than actually studying the material.  The solution to this is our teaching app.</h2>\n<h2>What it does: The app generates calculus problems with user parameters that also gives step by step solutions.  These solutions are not just textbook sentences. The app acts as a personal tutor; it gives solutions to problems through animations that clearly show how to solve the problems through each step. Practice problems, with varying difficulties, enable the user to understand the methods of solving problems with a quick, swiping user interface.  The idea is to teach strictly methodology that builds a quick memorable logic for calculus.</h2>\n<h2>How we built it: We used java and android-studio to create problems, answers, and animations.</h2>\n<h2>Challenges we ran into: Ryan is a first-time user of java; his only coding knowledge coming into this is from his engineering courses on Matlab. Java is obviously very different, so learning and executing on the spot was a challenge.  A major difficulty was creating the animations, especially because we decided on creating and learning how to create animations right when the hackathon started; the animations were assigned to Ryan while the rest of the heavily math-involved programming and guidance was Goz's doing.</h2>\n<h2>Accomplishments that we're proud of: The basic idea of this app isn't very new to us, but this is certainly the farthest we've gotten to creating a usable product.</h2>\n<h2>What we learned: Aside from learning a whole lot about programming in general, we found that this app is capable of much faster development than we previously expected.  For a while, we were expecting to use photoshop .gifs for our animations, but we were able to make a more generalized and useful form of animation, just using android-studio. We also learned Ryan can use java.</h2>\n<h2>What's next for Cram Time: We plan to make Cram Time into an app or set of apps that can teach all of Calculus, more than just Calculus 1. Ryan is pursuing a minor in math in addition to his engineering; this will allow a good front end and back end to the development of teaching students math. A deep understanding of calculus ensures the accuracy of the interactive math in the app. This is Goz's last semester here, and he plans to devote his time after graduation to the quick development of the app.  This will be more than just derivatives in the near future.</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://erikgoz@bitbucket.org/erikgoz/cramtime2\" rel=\"nofollow\" target=\"_blank\" title=\"https://erikgoz@bitbucket.org/erikgoz/cramtime2\">\n<i class=\"ss-icon ss-link\"></i>\n<span>bitbucket.org</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["BWAI", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Years of playing Starcraft.</p>\n<h2>What it does</h2>\n<p>It plays as an AI in a Brood War Starcraft game.</p>\n<h2>How I built it</h2>\n<p>I used the BWAPI to create my brood war AI.</p>\n<h2>Challenges I ran into</h2>\n<p>Creating a smart AI that can adapt to its situation and make good decisions is very difficult.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>When the code works well, there is a decent win rate against a cpu opponent and it will also probably beat an unaware human player.</p>\n<h2>What I learned</h2>\n<p>AI's are act</p>\n<h2>What's next for BWAI</h2>\n<p>I aim to make BWAI a fully functional AI that can not only perfectly cheese, but integrate machine learning and other features to make it a challenging opponent to both humans and computers.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://drive.google.com/open?id=0B1D3tbo4cU80U1J0eVB6cVp0VDA\" rel=\"nofollow\" target=\"_blank\" title=\"https://drive.google.com/open?id=0B1D3tbo4cU80U1J0eVB6cVp0VDA\">\n<i class=\"ss-icon ss-link\"></i>\n<span>drive.google.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["One man army ftw."]], ["Words of a nation", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Words of a nation \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/566/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration a short conversation before the event got us thinking of how language connects (and divides us)</h2>\n<h2>What it does it's two parts, first a program to search for the relations between words, across different scripts and alphabets, secondly, it's a web program to display that information in a thought-provoking and simple manner</h2>\n<h2>How we built it java and selenium were used for the desktop portion, JavaScript and html for the web portion</h2>\n<h2>Challenges we ran into while many APIs provide translation, few provide the phonetic version that can be easily compared to those using the Latin alphabet</h2>\n<h2>Accomplishments that we're proud of - it's finished</h2>\n<h2>What we learned how to effectively get information from websites and connect that information to the real world</h2>\n<h2>What's next for Words of a nation no idea</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["Where2Hang", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>In college, there have been many times when people have asked us to quiet down because they want to study, or we have to leave because others are too loud (and these can happen in the same location). We want a solution that helps us decide where to go to study or socialize, before we even get there. In other words, if we want to study, we should be sent somewhere where most people are studying, but if we want to socialize, we should be sent where most people are socializing</p>\n<h2>What it does</h2>\n<p>This app keeps track of ambient noise, light, and temperature in various locations around Rutgers campus (essentially anywhere people generally like to hang out to study or just chill). With this data, it determines how many people are in an area and how loud they are. Users can then access this data from our website, so they can see exactly where they need to go if they want quiet to study or liveliness to socialize. This way, people don't need to worry about quieting others or hunting for different spots to study.</p>\n<h2>How we built it</h2>\n<p>We built this by using an arduino to collect sensor data from a sounds sensor, light sensor, and temperature sensor. We would ideally post to a server straight from there, but since we don't have networking capabilities on this Arduino, we connected it via serial to our computer, which then uses a small python script to post to the server. Then, our website gets data from the server based on which location was requested, informing the user how loud/hot/bright the room is and whether or not it is a good place to be to study or socialize.</p>\n<h2>Challenges we ran into</h2>\n<p>Our biggest challenge was the hardware available to us, because we didn't have anything that connected to the internet easily (we couldn't get our hands on a Pi and the Intel Edison simply would not work with the wifi). We had to settle for a serial connection to an internet-connected computer. We also ran into challenges trying to display the various location options, but we used the Google Maps API to show that nicely.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are proud of our Google Maps viewer, which zooms and scales and responds to mouse clicks very easily and effectively. We are also proud of the fact that we worked around our physical limitations to finally get a board that we could connect to the internet.</p>\n<h2>What we learned</h2>\n<p>We learned about using hardware with Arduinos and connecting them to servers. We also learned about web development, mostly on the javascript end. Finally, we learned how annoying it can be to install certain things.</p>\n<h2>What's next for Where2Hang</h2>\n<p>Where2Hang is easily scalable, and the obvious next choice would be to cover more ground on the Rutgers Campus, literally. We also want to store more information over time, to provide data on which to find patterns and perform analytics to better determine whether it would be a good idea to hang out in a certain location. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-maps\">google-maps</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/rc97/Where2Hang\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/rc97/Where2Hang\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["TidBits", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>There are so much information around us, but we do rarely gather knowledge from them.  So consuming little at a time \non regular basis is a better strategy to keep up with the running world.</p>\n<h2>What it does</h2>\n<p>Tidbits lets users create account and choose the topics they want updated news on a routinely basis. And for now user \ncan get the message as text message on their mobile device.</p>\n<h2>How I built it</h2>\n<p>Tidbits is a web application built in angular js, html and css. Mongobd mLab is used to store user data and node server is to\ncommunicate between angular from client side and mongo db from server side. Twilio api is used to send the news content to the users\u2019\nphone number.</p>\n<h2>Challenges I ran into</h2>\n<p>AWS was not working so only one machine was able to make get, post request and get it displayed on the web app. </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Making an application that fully able to host a server and send data based on what user wants!</p>\n<h2>What I learned</h2>\n<p>We gaining a better understanding of node server, AWS, and the connection between web app language angular, \nlocal server side language node and online database such as mongo bd.</p>\n<h2>What's next for TipBits</h2>\n<p>Users can choose how often they want the news update get sent on their phone; also whether they want it as text, email or voice call.</p>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/tehjawn/tidbits\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/tehjawn/tidbits\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I helped a little bit with the front end stuff. Used html, javascript, and Angular Js. Also helped with the topics in Tidbits.", "", "", ""]], ["LightCode", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/EWrIfvM7MCg?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We like pretty colors</p>\n<h2>What it does</h2>\n<p>Converts strings into binary data. Then it procedures to flash colors corresponding to the ones and zeros. A light sensor reads the colors and interprets it back into its binary form. The binary can then be converted back into a string.</p>\n<h2>How we built it</h2>\n<p>Arduino and AdaFruit LightSensor - intercepting and interpreting the light signals</p>\n<p>GitHub Pages, HTML, CSS, JavaScript - to create a webapp to convert strings -&gt; binary -&gt; the pretty colors</p>\n<h2>Challenges we ran into</h2>\n<ul>\n<li>Various Micro-controllers with poor documentation</li>\n<li>Driver issues with the micro-controllers</li>\n</ul>\n<h2>Accomplishments that we're proud of</h2>\n<ul>\n<li>Our first hardware hack</li>\n<li>It's pretty neat</li>\n</ul>\n<h2>What we learned</h2>\n<ul>\n<li>3D printing</li>\n<li>Soldering</li>\n<li>Programming with Micro-controllers and sensors</li>\n</ul>\n<h2>What's next for LightCode</h2>\n<p>We could take the concept and work with lasers and a more accurate method of transferring data from long distances</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c\">c</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag\">wires</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag\">metal</span></li><li><span class=\"cp-tag\">steel</span></li><li><span class=\"cp-tag\">plastic</span></li><li><span class=\"cp-tag\">board</span></li><li><span class=\"cp-tag\">ink</span></li><li><span class=\"cp-tag\">usb</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/hardware\">hardware</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://tinyurl.com/bl1nk3r\" rel=\"nofollow\" target=\"_blank\" title=\"http://tinyurl.com/bl1nk3r\">\n<i class=\"ss-icon ss-link\"></i>\n<span>tinyurl.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["chappi", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"chappi \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/560/datas/gallery.jpg\"/>\n<p>\n<i>Chappi</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>chappi-messenger-bot</h1>\n<p>This is a Facebook messenger bot that uses BotKit library and is hosted by local tunnel with Node.js in the backend. </p>\n<h1>Inspiration</h1>\n<p>Facebook just launched the messenger bot this week and we wanted to build something cool with it. So we thought of building a bot that will be interactive and let's you buy bunch of stuff from Internet. \nThis messenger bot can have simple conversations from asking you name and remembering it, to responding to the requests like \"Chappi i wanna buy a pizza\" and populating a list of the specific pizza that you requested. </p>\n<h1>How we built it</h1>\n<p>The idea started with recognizing the messages from the user and responding logically to them. So we build a bot in Node.js that reads the input and output messages from the webhook on Facebook messenger. So the backend controller reads the incoming messages and responds as per the requests. First we run the facebook_bot.js and host it in local tunnel to get the URL which is used by webhook to make postback calls from the Messenger bot. This gives us the easy access to receive the request and serve them accordingly.</p>\n<h1>Challenges we ran into</h1>\n<p>Due to the fact that the messenger bots were just released recently, the amount of documentation and the lack of the community for the bots hindered our ability to quickly run the bots. Actually running the webhook took a while to set up. We decided to use Heroku at first as most developers suggested using that. However, we figured that using the localtunnel is a much better option. Another challenge we faced was actually recognizing the keywords within the user's input. This made it difficult to understand what the user ideally wanted out of the conversation it exchanged with the bot.</p>\n<h1>Accomplishments that we're proud of</h1>\n<p>We're really excited that we have implemented a clean bot messenger as compared to the buggy chat bots out there. Another accomplishment is that we did not use the Wit.AI supervised module, instead we build our own input recognition bot.</p>\n<h1>What we learned</h1>\n<p>We learned how to work with the Facebook Messenger bot by using node.js + webhooks. It exposed us to new technologies that we were not truly comfortable with prior to the hackathon. </p>\n<p>And we'd definitely look into implementing more features that could make the bot more flexible in practical real world situations. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag\">botkit</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/facebook-chat\">facebook-chat</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/SaurabhPalaspagar/chappi-messenger-bot\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/SaurabhPalaspagar/chappi-messenger-bot\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/neil1023/Chappi\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/neil1023/Chappi\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the Node.js backend and on the sentence recognition", ""]], ["Helpful-Henry", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Helpful-Henry \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/557/datas/gallery.jpg\"/>\n<p>\n<i>Helpful Henry Rutgers</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>Helpful-Henry</h1>\n<p>A helpful chat bot for the students of the Rutgers-New Brunswick community.  </p>\n<p>The future of Microsoft is <a href=\"http://www.bloomberg.com/features/2016-microsoft-future-ai-chatbots/\" rel=\"nofollow\">chatbots</a>. So as we look forward to the future of User Experience and the \"Conversational User Interface,\" I thought I'd help Rutgers make the leap forward.<br/>\nAs an homage to the famous Rutgers App, I've created a Rutgers chat bot that can serve the various needs of the student population here at Rutgers through a dead-simple chat interface that is accessible through their phone's SMS, the web and some of their favorite communication apps (Slack, Skype, GroupMe, etc....NOT Facebook).<br/>\nThis first prototype, although dreadfully limited in scope to simple transportation service, manages to be <em>robust and innovative</em> in that it puts a useful new twist on the classic waiting game/headache-in-the-making that is the Rutgers-New Brunswick transportation system. Rather than just tell you when the next buses are coming, it thinks about the actual schedule of class periods on each of the different campuses and gives you advice on when to leave in order to get to your destination and avoid traffic (both vehicular and foot) if possible.<br/>\n<em>Say hello to Helpful Henry,</em> the new personal assistant of Rutgers-New Brunswick students!</p>\n<p><strong>To test on your local machine</strong>, download this tool (<a href=\"http://docs.botframework.com/connector/tools/bot-framework-emulator/#navtitle\" rel=\"nofollow\">http://docs.botframework.com/connector/tools/bot-framework-emulator/#navtitle</a>) and ensure that you have npm installed and \"npm --install\" the following modules into the same directory as app.js: \"<em>botbuilder</em>\" and \"<em>restify</em>\"</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag\">microsoft-bot-framework</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/brandon8000/Helpful-Henry\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/brandon8000/Helpful-Henry\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["TravelAgent Sam", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"TravelAgent Sam \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/697/datas/gallery.jpg\"/>\n<p>\n<i>The \"My Trips\" tab displays all trips and destinations recommended by our algorithm. Sam saves these destinations for easy access.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"TravelAgent Sam \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/698/datas/gallery.jpg\"/>\n<p>\n<i>The application is designed with intuition in mind. Google's Material Design concept allowed us to easily design a clean interface.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"TravelAgent Sam \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/695/datas/gallery.jpg\"/>\n<p>\n<i>Talking to TravelAgent Sam is engaging and natural. Travel recommendations appear naturally in conversation. </i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"TravelAgent Sam \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/694/datas/gallery.jpg\"/>\n<p>\n<i>TravelAgent Sam saves user data regarding home location, transportation preferences, and name.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"TravelAgent Sam \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/696/datas/gallery.jpg\"/>\n<p>\n<i>TravelAgent Sam learns your travel preferences while displaying destinations from around the world in the \"Discover Places\" tab.</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Cognitive Computing is a powerful technology which can help to solve everyday problems efficiently and intelligently. We wanted to make this technology accessible to everyone. Therefore, our team designed and developed TravelAgent Sam. We thought of the idea for this application while struggling to plan a trip. We decided to make an application which leveraged the power of Cognitive Computing services such as IBM's Alchemy API to help make decisions like these easier and more intelligent.</p>\n<h2>What it does</h2>\n<p>TravelAgent Sam is a virtual travel agent that converses with the user to gain preference insights and make intelligent travel suggestions using Cognitive Computing. Our application learns and gathers information about the user's preferences in order to provide travel recommendations and showcase beautiful destinations from around the world.</p>\n<h2>How we built it</h2>\n<p>TravelAgent Sam was built using a number of advanced web and cognitive technologies. At its core, our application leverages the Ruby on Rails framework to organize views, algorithms, and data into a simple and intuitive website. This part of our website is responsible for communicating with IBM's powerful cognitive computer in order to learn from the user and adapt to his or her preferences. Additionally, this backend is combined with a custom Bootstrap-based frontend which was inspired by Google's Material Design specifications. Google's specifications allowed us to design a clean and intuitive user interface using intelligent design metaphors. Together, these technologies work efficiently and elegantly to help the everyday user incorporate Cognitive Computing into their lives.</p>\n<h2>Challenges we ran into</h2>\n<p>We encountered difficulty developing an algorithm that would encompass the specificities of each unique location and its defining attributes. The world is a large place, and developing a database which circumscribes it was a large task given the time constraint of the hackathon.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We were able to successfully integrate Cognitive Computing in a friendly and accessible way.  Talking to Sam feels natural and engaging to the user while providing intelligent travel insights.</p>\n<h2>What we learned</h2>\n<p>Our team gained invaluable exposure to the cutting-edge technologies in the field of Cognitive Computing and Machine Learning throughout this project. We are excited to use these new skills to bring intelligent computing closer to the average user.</p>\n<h2>What's next for TravelAgent Sam</h2>\n<p>TravelAgent Sam will hopefully join a larger family of projects surrounding Cognitive Computing and Machine Learning. We hope to develop a platform with which all users can integrate these new technologies into their everyday lives.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ruby-on-rails\">ruby-on-rails</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ibm-watson\">ibm-watson</a></span></li><li><span class=\"cp-tag\">cognative-computing</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/machine-learning\">machine-learning</a></span></li></ul>\n</div>\n</div>", ["I acted as the team's full-stack developer and user experience engineer. My contributions include front & backend code as well as UI/UX design.", "I acted as project manager and helped with data input as well as algorithm development.", "I worked on developing the algorithm used for relating user preferences to locations, and worked on the UI design.", "I worked on the frontend using HTML and CSS do design the UI. I also built the image database used by TravelAgent Sam's algorithm."]], ["emoticonnect", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"emoticonnect \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/554/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>.</p>\n<h2>What it does</h2>\n<p>.</p>\n<h2>How I built it</h2>\n<h2>Challenges I ran into</h2>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<h2>What's next for emoticonnect</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ibm-watson\">ibm-watson</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/socket-io\">socket.io</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://52.90.245.99/\" rel=\"nofollow\" target=\"_blank\" title=\"http://52.90.245.99/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>52.90.245.99</span>\n</a></li>\n<li><a href=\"http://emoticonnect.me/\" rel=\"nofollow\" target=\"_blank\" title=\"http://emoticonnect.me/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>emoticonnect.me</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Crash Canary", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>Get email notifications when your long-running python script dies unexpectedly. No dependencies, no API keys, minimal config: just two lines at the top of your script.</p>\n<pre class=\"language-python\"><code>import crashcanary\ncrashcanary.init('example@gmail.com')\n\nprint('Doing dangerous things...')\nprint(4/0)\n</code></pre>\n<p>Produces:</p>\n<p><img alt=\"Sample Email\" data-canonical-url=\"https://raw.githubusercontent.com/revan/crashcanary/master/crash.png\" src=\"https://res.cloudinary.com/devpost/image/fetch/s--f0_WE1PK--/https://raw.githubusercontent.com/revan/crashcanary/master/crash.png\"/></p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sendgrid\">sendgrid</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://revan.github.io/crashcanary\" rel=\"nofollow\" target=\"_blank\" title=\"http://revan.github.io/crashcanary\">\n<i class=\"ss-icon ss-link\"></i>\n<span>revan.github.io</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Deep Mind Trance VR", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Deep Mind Trance VR \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/535/datas/gallery.jpg\"/>\n<p>\n<i>This is the fractal View</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Deep Mind Trance VR \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/536/datas/gallery.jpg\"/>\n<p>\n<i>This is the Darth Buddha View</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Deep Mind Trance VR \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/537/datas/gallery.jpg\"/>\n<p>\n<i>This is the VR view</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Deep Mind Trance VR \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/538/datas/gallery.jpg\"/>\n<p>\n<i>This is the gallery view</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Deep Mind Trance VR \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/539/datas/gallery.jpg\"/>\n<p>\n<i>This is our logo</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<h2>What it does</h2>\n<p>Completely RESTful VR panoramic application</p>\n<h2>How we built it</h2>\n<h2>Challenges we ran into</h2>\n<h2>Accomplishments that we're proud of</h2>\n<h2>What we learned</h2>\n<h2>What's next for Deep Mind Trance VR</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/gimp\">gimp</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://play.google.com/store/apps/details?id=com.dmt.vrtoolkit.cardboard.samples.simplepanowidget\" rel=\"nofollow\" target=\"_blank\" title=\"https://play.google.com/store/apps/details?id=com.dmt.vrtoolkit.cardboard.samples.simplepanowidget\">\n<i class=\"ss-icon ss-link\"></i>\n<span>play.google.com</span>\n</a></li>\n<li><a href=\"https://github.com/nisargap/deepmindtrance\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/nisargap/deepmindtrance\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Help!", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Help! \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/531/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Our hack was inspired by our desire to put less effort into contacting others. The idea of a hack that enabled us to put less effort into calling the police was appealing because calling the police is typically a situation in which we put the most effort into.</p>\n<h2>What It Does</h2>\n<p>Our hack makes safety more easily accessible. In certain scenarios calling the police is not always a possibility. A combination of  amazon cloud and android voice recognition APIs makes the community safer. Calling the police has never been as quick, as efficient, or as easy. Family members and friends are also texted a custom warning with the last recorded location on your mobile device. The location of crimes are then uploaded to amazon cloud in order to aid police in finding locations where crime is likely to occur.  </p>\n<h2>How We Built It</h2>\n<p>We split the project into multiple sub-projects. Those sub-projects included: a voice recognition project, a sms and phone calling project, a front end project, and an amazon cloud project. After those sub-projects were completed the final project was finished as a combination of those sub-projects.</p>\n<h2>Challenges We Ran Into</h2>\n<p>We struggled to incorporate hardware components of our hack. We originally planned to use the pebble smart watch, but voice recognition with android API rather than pebble API proved to be more feasible. We also struggled to combine amazon cloud with both the sms and phone calling projects.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Using voice recognition and relatively simple APIs we were able to produce a hack that we genuinely feel is useful to communities all across the globe. Crime exists in all areas, so creating something that could potentially mitigate the effects of a world wide problem is something that we are proud of.</p>\n<h2>What We Learned</h2>\n<p>We not only learned about the APIs that we used, we also learned about how to split up a project efficiently. How to work together as a team, how to help each other as a team, and how to use our time in the most efficient way possible.</p>\n<h2>What's Next For Help</h2>\n<p>We plan on adding additional features to enhance Help!. We currently have not yet implemented the ability to import contacts, leave a voice message for the police, and we also hope to improve our user interface. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/verizon\">verizon</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/GatesWang/PebbleAndroid\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/GatesWang/PebbleAndroid\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Big Data Chess", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We decided it was about time that we built Ultron for Chess</p>\n<h2>What it does</h2>\n<p>Plays Chess and learns from data gathered from existing games </p>\n<h2>How we built it</h2>\n<p>We built a system that takes input data from moves made in response to specific moves</p>\n<h2>Challenges we ran into</h2>\n<p>the wifi\nlack of documentation for apis we wanted to use</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>none</p>\n<h2>What we learned</h2>\n<p>sleep is a necessity </p>\n<h2>What's next for Big Data Chess</h2>\n<p>Ultron for world domination</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bash\">bash</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Kerryliu/BigDataChess\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Kerryliu/BigDataChess\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Created the scripts to fetch different chess matches from online ", "", ""]], ["HackRU Test", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Test, 1, 2, 3.</h2>\n</div>\n</div>", [""]], ["Pic our Project", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Data should be more than just electricity and numbers.</p>\n<h2>What it does</h2>\n<p>One can take an mp3, mp4, excel spreadsheet of Netflix shows to watch, an album of digital photos and run it through this program, and have all the data stored on a piece of paper. You can store your entire ITunes collection of music in a single binder of paper.\nOur project convert bytes of data into an array of graphical representations of information. It uses geometry and simple math to change data into the graphics, and back again to its original form. This allows a poster to store a song or a person to download a movie in a minute from a projector.</p>\n<h2>How we built it</h2>\n<p>We designed the separate systems to read and interpolate an image of the graphical representation, generate the graphics based on raw binary data, and reconstruct a file from the graphic storage.</p>\n<h2>Challenges we ran into</h2>\n<p>Designing a way to effectively compress the data into a visual form was the biggest obstacle, as it was the core concept of the project. </p>\n<h2>What we learned</h2>\n<p>We gained exposure to applying mathematical and creative solutions to a problem, while trying to keep the concept practical.</p>\n<h2>What's next for Pic our project</h2>\n<p>We'd like to develop the idea to accommodate multiple uses such as mass public use and consistent functionality.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/opencv\">opencv</a></span></li></ul>\n</div>\n</div>", ["", "", ""]], ["RU Broke", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration - I'm broke</h2>\n<h2>What it does - make you not broke</h2>\n<h2>How we built it - with love, we move fast and broke things</h2>\n<h2>Challenges we ran into - being poor</h2>\n<h2>Accomplishments that we're proud of - still poor</h2>\n<h2>What we learned - were broke</h2>\n<h2>What's next for RU Broke - venmo</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/capital-one\">capital-one</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bash\">bash</a></span></li></ul>\n</div>\n</div>", ["", "", ""]], ["Clippy2.0", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Clippy2.0 \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/481/datas/gallery.jpg\"/>\n<p>\n<i>Clippy2.0 Poster</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>Clippy2.0</h1>\n<p>The even MORE useless remake of the Microsoft Word Assistant. Frustration and rage guaranteed. Created for the 2016 HackRU hackathon.</p>\n<p>The compiled jar file: <a href=\"https://drive.google.com/file/d/0B7huftm2VHb5SjMwV013UDRVTlU/view?usp=sharing\" rel=\"nofollow\">https://drive.google.com/file/d/0B7huftm2VHb5SjMwV013UDRVTlU/view?usp=sharing</a> (142 MiB)</p>\n<p><strong>Details</strong></p>\n<p>Computer Vision aided \"personal assistant\", designed to use the display as terrain. Proof of Concept system.</p>\n<p>Built With:\nJavaCV Computer Vision Library, Apache 2.0 Licence\nBalloon Tip Library, 3-Clause BSD Licence</p>\n<p>Compiled In Eclipse IDE, Java Version 1.80_77-b03</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/2ASIAN4U/Clippy2.0\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/2ASIAN4U/Clippy2.0\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["The mastermind, the java programmer, the researcher, and the downfall of this project."]], ["Tetris Holographic 3D Projection Game", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Tetris Holographic 3D Projection Game \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/500/datas/gallery.jpg\"/>\n<p>\n<i>The hologram projector</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Tetris Holographic 3D Projection Game \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/501/datas/gallery.jpg\"/>\n<p>\n<i>The setup</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to redesign modern games to have a more interactive and high-tech feel to them. With the development of this hologram projector, we felt we could bring tetris to life by presenting it in 3D!</p>\n<h2>What it does</h2>\n<p>The hologram projector pyramid will display a game of 3D Tetris developed in unity that the user interacts with using an Arduino Controller. The user can control the direction (up down left right) of the block's movement, or the rotation of the block around 2 axes using buttons. It is a simple yet extremely difficult game of tetris viewed through a hologram.</p>\n<h2>How we built it</h2>\n<p>We used Unity to develop the tetris game. Standard libraries and tools were used to develop it. The hologram projector pyramid was made using acrylic plastic, hot glue and cardboard. By using hot glue to seal the acrylic pieces together, and the cardboard to provide a frame for the contraption, we developed a device which allows us to mount a computer screen facing downward and project a hologram inside the pyramid, such a live game of tetris.</p>\n<h2>Challenges we ran into</h2>\n<p>We ran into difficulty when Unity decided it didnt want to work with us, and crashed when we tried to spawn new objects. Also, the limited view and size capabilities of the holographic medium forced us to cut a couple of corners such as: no next block preview or score.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Being able to play tetris through a holographic projector is something I never would have thought to do a few years ago.</p>\n<h2>What we learned</h2>\n<p>How to use unity and tie it in together with Myo, and how to create cool contraptions with everyday tools.</p>\n<h2>What's next for tetris-hologram</h2>\n<p>After HackRU, we want to sort out any bugs the code may have, and clean up the actual hardware and the projector.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/vanstorm9/tetris-hologram\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/vanstorm9/tetris-hologram\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Made the controller for the pyramid as well as the Tetris game in Unity.", "", ""]], ["Verideals", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Verideals \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/002/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Verideals \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/005/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Verideals \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/007/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>What it does</h2>\n<p>Verideals uses your text message history to find deals and products that you might be more interested in, allowing for better directed advertising.</p>\n<h2>How we built it</h2>\n<p>The application starts by going through all text messages and collecting the words that are used. It is then filtered through multiple layers of NLP to remove words that wouldn't matter to advertising, such as most verbs, adverbs, and adjectives. It also combines singular and plurals so as not to double count words. A frequency evaluation is then done to determine if any words are used much more frequently than they would be in the English language. These are the words the advertisers might focus on. The words are then put through a separate test to find any specific brands or products in the messages. These data sets are then combined and analyzed to find products and ads the user might be interested in.</p>\n<h2>Challenges we ran into</h2>\n<p>Accessing text messages</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Accessing text messages</p>\n<h2>What we learned</h2>\n<p>How to access text messages</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/verizon\">verizon</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ebay\">ebay</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Derrreks/Verideals\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Derrreks/Verideals\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["The Patient Medical Assistant", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"The Patient Medical Assistant \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/489/datas/gallery.jpg\"/>\n<p>\n<i>Homepage</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"The Patient Medical Assistant \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/490/datas/gallery.jpg\"/>\n<p>\n<i>Medicine Compatablity</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"The Patient Medical Assistant \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/491/datas/gallery.jpg\"/>\n<p>\n<i>Resources</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"The Patient Medical Assistant \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/492/datas/gallery.jpg\"/>\n<p>\n<i>Scheduling wizard</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>I had a particular interest in doing a healthcare hack this year, for a lot of different reasons.:\nI had recently made the decision that after my graduation next year, I would no longer pursue a business career, and instead go back to school to pursue a degree in healthcare (specifically, patient care). That was my primary inspiration in this project. Not only to create a healthcare app, but I decided to go a different route and create a healthcare app specifically to help patients undergoing long term treatment or taking different sorts of medication.</p>\n<p>This is a solo hack.</p>\n<h2>What it does</h2>\n<p>The Patient Medical Assistant (\"PMA\") is a web suite that has various features designed to help patients organize their treatments and medications. It has 6 primary features in total:</p>\n<p>1) A function that allows the user to enter information to make an appointment with a doctor, which then saves the appointment information to a text document for future reference</p>\n<p>2) A function that allows the user to track their weekly intake of medicine (checkboxes to be checked once the user has taken their medication for the day, and then to be reset at the end of the week... kind of like a virtual pillbox)</p>\n<p>3) A medicine compatibility search: Some medicines can cause severe reactions when mixed with the wrong medications. A local database search allows the user to select the medication they are using, which brings up basic information about the medication, including what it cannot be mixed with.</p>\n<p>4) Medical office search. The google maps API is integrated into the website, in the case that a user wanted to search for the nearest office or hospital, while still staying within the platform.</p>\n<p>5) Online medical file retrieval: This was originally supposed to contain a call for the Merck API, but this did not work out (more on that later). Instead, I created an external link that would securely display the information for the current user</p>\n<p>6) A list of general resources. Phone numbers, hotlines, and websites that respond to people who may be abusing drugs, victims of abuse or sexual assault, contemplating suicide, or other at-risk individuals, to give patients any resources they may need.</p>\n<h2>How I built it</h2>\n<p>With the exception of the google API (which was almost entirely handled by google) I built the majority of the functions using ASP.NET. A mix of HTML, CSS, and Javascript made up for a vast majority of the interface, although some functionality was supported by visual basic running in the backend. </p>\n<h2>Challenges I ran into</h2>\n<p>The biggest challenge I ran into was integrating the API's that I felt were necessary for the project. This was actually my first time ever working with an API, and although only one of the two worked, it added a great amount of functionality to the website.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Considering this is the first project I ever worked on alone, I am incredibly proud of the entire website. I worked very hard, and to complete a project for a cause that I feel personally drawn to makes me very happy that I chose this one.</p>\n<h2>What I learned</h2>\n<p>APIs are difficult, but enough fiddling with the code and something good will eventually happen</p>\n<h2>What's next for The Patient Medical Assistant</h2>\n<p>Because a good portion of the PMA is already built, I would love to launch it to the public, eventually. I feel like this app help a lot of people, and make something that can make someone's life very stressful much easier.</p>\n<p>** PLEASE NOTE that my databases are local. They will NOT work on the github repository!!!**</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/asp-net\">asp.net</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-maps\">google-maps</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/visual-basic\">visual-basic</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag\">healthcare</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/BRANDONFROMIT/WebSite5\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/BRANDONFROMIT/WebSite5\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Solo Hacker"]], ["Synesthesia", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>SongShape</h1>\n<p>Makes shapes using the 'super formula' from a song file.</p>\n<p>The general idea is that this program can be fed a song file (.mp3, .wav, etc) and pump out 6 variables.\nThese are then fed into the superformula as defined here: <a href=\"https://en.wikipedia.org/wiki/Superformula\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Superformula</a>\nThe result is a list of [x y z] coordinates that can be plotted to make a shape.</p>\n<p>First the run the matlab file songShape with an input variable that is the song file location in the form of a string. \nThen run the python file to turn the resulting text file into a .stl file which can be imported into programs like blender.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/matlab\">matlab</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/dakota002/Synesthesia\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/dakota002/Synesthesia\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["ClariBuy", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"ClariBuy \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/471/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>To make the most lit hack</p>\n<h2>What it does</h2>\n<p>You take a picture on your phone of any object that you want to buy. Text it to a Twilio phone number that creates a link for the image and then sends it to Clarifai for image recognition. After figuring out what the image is, ClariBuy scrapes amazon.com to find a link for you to purchase this object or something related to it. Link is emailed to you using Sendgrid</p>\n<h2>How we built it</h2>\n<p>Python/Flask, Twilio, Clarifai, Sendgrid</p>\n<h2>Challenges we ran into</h2>\n<p>Twilio not sending links back to the user through text which meant we had to use Sendgrid for email notification instead</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Making a lit hack</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sendgrid\">sendgrid</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/asaddar/ClariBuy\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/asaddar/ClariBuy\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["BeerMe", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"BeerMe \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/426/datas/gallery.jpg\"/>\n<p>\n<i>Logo</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Love for craft beers. </p>\n<h2>What it does</h2>\n<p>Recommends beer to the user by taking the result of the user's previously experience beers into a choice of filtered list of the Beer's attributes such as IBUs (International Bitterness Units) and ABVs (Alcohol by volume) that best matches the user's experience.</p>\n<h2>How we built it</h2>\n<p>Each of the members used Swift to develop this IOS Application.</p>\n<h2>Challenges we ran into</h2>\n<p>We were all beginners with Swift, so we constantly ran into multiple syntax and compilation errors as we found out about more parts of Swift programming. This was really time consuming because we had to study what we were doing and what the error causes were simultaneously.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Nicholas Dry - Came up with the original idea, Gathered raw (beer) data from the web, designed application architecture, helped her members learn swift, and implemented multiple application functionalities.</p>\n<p>Hemil Patel - Implemented multi-layered designs, and gathered raw web data.</p>\n<p>Paul Kim - Implemented basic arithmetic functions for results data and contributed in debugging the application, and gathered raw web data.</p>\n<p>We all had significant amount of research on Swift that helped us understand how syntax and functionality transitions are, to our current programming skills.</p>\n<p>We're really proud of what we came up with (fully functional IOS mobile application) as a result, and though it doesn't involve actual data manipulation nor any data usage, we believe that the idea of BeerMe is significant by itself and will be continued to be better regardless of the event it was made in. </p>\n<h2>What we learned</h2>\n<p>We learned that if we wanted to learn a new language, we had to better understand our current language. In another words, it's not the language thats important, its the concept of the language thats important.\nWe also learned million ways that doesn't work in Swift, and awesome ways that do.</p>\n<h2>What's next for BeerMe</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xcode\">xcode</a></span></li></ul>\n</div>\n</div>", ["", "", ""]], ["2Cents", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration- Originally, we planned on creating a 1 on 1 platform called SpeedDebater, but we got stuck on the use of concurrent users and setting that up. Me (Siena) and Jessica were working on it and we hit a lot of bumps due to the fact that we were novice hackers and did not know how to efficiently execute HTML or any programming language, thus we changed directions.</h2>\n<h2>What it does- Now, we changed the website from SpeedDebater to 2Cents because we highly believe in the importance of an individual's opinion. Anything is debatable and with enough information and sufficient support, a person can ultimately change a person's perspective. By allowing democrats, members of our liberal government system, express themselves and their 2Cents on certain topics, ideas can spread and lead to the birth of organizations and influential movements.</h2>\n<h2>How we built it- Well, with many many many tears and the abandoning of almost completed projects, we finally decided to go with something simple, yet complex in its meaning. Needless to say, we went through a lot of crappy ideas just to end up with this non-intricate website. We just started learning HTML yesterday, so we used some of that jazz and the webpage maker called Wix to put this all together. Shout out to Wix for the help, kinda.</h2>\n<h2>Challenges we ran into- Not to put a debby-downer on us novice hackers, but we were pretty much ignorant and not the kind of ignorance that's blissful. I, (Siena), just putting out my 2Cents, internally sobbed many times. I did not know how to make the site redirect to another site from HTML, so hit me up if you know how to man.</h2>\n<h2>Accomplishments that we're proud of- We built a web server (shoutout to the sponsor at scriptr for the help) and I didn't cry so much towards the end of the competition. Despite not being able to redirect one page to another, save all the data and comments, and execute javascript well, we went pretty far with the SpeedDebater idea. I mean it was great. Being able to learn HTML and some javascript as noob hackers, we found it very interesting and fun. Whenever we were able to code something difficult, we all jumped up and high-fived both hands. Learning to code is not an easy thing, that's why events such as HACKRU is something people should not miss. It gives young students the opportunity to learn, explore, and discover code in the environment of other new hackers too. Well done you guys!!!!</h2>\n<h2>What we learned- We learned some HTML, some Javascript - codeacademy is where it's at, and that it is okay to cry (sometimes, I mean sophomores in high school just learning yeah).</h2>\n<h2>What's next for 2Cents- We're (obviously) going to win some random award and go home with like $10(00) in Amazon money and the pride to build up the site to worldwide popularity then get sued for something and end up making no profit by the end. Or you know, we can go down in history for being little high schoolers being able to develop the idea and most of the mechanics for a debate website and still have enough time to scrap all that for a site revolving around opinions. I mean who doesn't care for opinions? Or 2Cents - if you get my drift.</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://speeddebater.firebaseapp.com/\" rel=\"nofollow\" target=\"_blank\" title=\"https://speeddebater.firebaseapp.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>speeddebater.firebaseapp.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I tried my best to code the home page with html and use bootstrap as well. I had never programmed before this, so it was a very interesting experience. I am excited to use what I have learned this weekend for future projects and practice with HTML. ", ""]], ["SBUCourseBot", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>At Stony Brook, many classes students want to take fill up quickly. This leaves them constantly refreshing the status page to see if a seat opened up. We created a chatbot that monitors courses for students, and sends them a message when their class opens up.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">kik-api</span></li><li><span class=\"cp-tag\">facebook-messanger-platform</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/shaansheikh/SBUCourseMonitor\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/shaansheikh/SBUCourseMonitor\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Mirror Mirror", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Mirror Mirror \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/433/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We were inspired to build this mirror after seeing similar but less sophisticated versions of it online. We upgraded some of its functionality. </p>\n<h2>What it does</h2>\n<p>Mirror Mirror displays all of the information you may need to jump start your day right on your mirror. With things like google calendar integration, Weather updates, and New York Times headlines. It also responds to some commands via voice</p>\n<h2>How I built it</h2>\n<p>We built mirror mirror with a raspberry pi a monitor and some one way mirror film. Overlaying the film on the monitor we were able to display information underneath a mirror. Using PHP, and Javascript we were able to have the pi communicate with a laptop acting as a microphone.</p>\n<h2>Challenges I ran into</h2>\n<p>Challenges we ran into included problems with voice recognition, as well as microphone input. We forgot a microphone for the pi so we had to improvise by using a laptop to record and recognize the audio then send the transcript to the pi which would process all of the input and respond.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I am proud of the microphone work around I created and how it worked so well.</p>\n<h2>What I learned</h2>\n<p>I learned a lot about various apis including open weather map, and google calendar</p>\n<h2>What's next for Mirror Mirror</h2>\n<p>Whats next is to build a permanent version of the mirror and to continually upgrade its functionality</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mysql\">mysql</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n</div>", ["All the things", "I made the responses and questions for the voice activation."]], ["Smart Money", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>It is always hard for people to keep track and manage their money in a timely and intelligent fashion. This app makes it convenient for bank users to estimate how much extra money they can spend without overspending. </p>\n<h2>What it does</h2>\n<p>By directly accessing the user's bank account balances, and keeping track of the user's weekly income and expenditures, as well as estimating the amount of money put aside for various savings accounts, it can project what their future disposable incomes are for the upcoming week. </p>\n<h2>How we built it</h2>\n<p>Using Android Studio and the Nessie API, coded with java and xml. </p>\n<h2>Challenges we ran into</h2>\n<p>Learning how to use the API as well as implementing it with Android development was a very new skill for us developers. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>The fact that we finished was a great step up from last year.</p>\n<h2>What we learned</h2>\n<p>A lot about Android Development and interactions with Nessie API, as well as the complications and steps to designing a mobile application. </p>\n<h2>What's next for Smart Money</h2>\n<p>Support for other platforms and increased interaction between the user and the API, to enhance the user's experience. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag\">nessie</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xml\">xml</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/poetienshul/smartMoney\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/poetienshul/smartMoney\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Theia", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/LxQLsSWnoUQ?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Theia \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/439/datas/gallery.jpg\"/>\n<p>\n<i>Screenshot from Glass</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Theia \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/438/datas/gallery.jpg\"/>\n<p>\n<i>Screenshot from Glass</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Theia \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/440/datas/gallery.jpg\"/>\n<p>\n<i>Screenshot from Glass</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Theia \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/441/datas/gallery.jpg\"/>\n<p>\n<i>Screenshot from Glass</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Theia \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/513/datas/gallery.jpg\"/>\n<p>\n<i>Screenshot from Glass</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Theia \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/514/datas/gallery.jpg\"/>\n<p>\n<i>Screenshot from Glass</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Theia \u2013 screenshot 7\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/515/datas/gallery.jpg\"/>\n<p>\n<i>Screenshot from Glass</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Theia \u2013 screenshot 8\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/516/datas/gallery.jpg\"/>\n<p>\n<i>Screenshot from Glass</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Theia \u2013 screenshot 9\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/517/datas/gallery.jpg\"/>\n<p>\n<i>Screenshot from Glass</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Theia \u2013 screenshot 10\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/518/datas/gallery.jpg\"/>\n<p>\n<i>Screenshot from Glass</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>Theia (<em>noun</em>): Titaness of Sight.</p>\n<h1>Inspiration</h1>\n<p>Visually impaired people do not have the same opportunities as other people to experience the beauty and variety of their surroundings. We wanted to build an app that would bridge this gap and give them a chance to visualize the things around them.</p>\n<h1>What it does</h1>\n<p>Theia is a Google Glass app that helps visually impaired people see what is in their environment. It captures a live stream of whatever the user is looking at, and it automatically dictates what objects are in the environment using natural language.</p>\n<h1>How we built it</h1>\n<p>We built the app in Android Studio, coding in Java. We're sending images from Glass to the Clarifai API, where it performs an image recognition search and returns words describing the image. Then we structure the words into a sentence and dictate it using Android's Text To Speech.</p>\n<h1>Challenges we ran into</h1>\n<p>We had trouble setting up the camera and making Clarifai API requests, which we were eventually able to overcome through the use of ingenuity, documentation, and Stack Overflow.</p>\n<h1>Accomplishments that we're proud of</h1>\n<p>We're proud of creating an app that recognizes images with decent accuracy. We're proud of creating something that will be very useful to the visually impaired.</p>\n<h1>What we learned</h1>\n<p>We learned how to develop for Glass applications, how to use the Clarifai API to recognize images and get the results, and how to set up a video stream using the Android API.</p>\n<h1>What's next for Theia</h1>\n<p>We're planning on developing Theia for mobile devices and moving beyond the discontinued Google Glass hardware into building our own proprietary hardware in order to optimize the experience.\nWe would also like to make it more accurate by training our own neural network with large data sets so it can generate better captions.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-glass\">google-glass</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/churichard/theia\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/churichard/theia\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"http://churichard.me/theia\" rel=\"nofollow\" target=\"_blank\" title=\"http://churichard.me/theia\">\n<i class=\"ss-icon ss-link\"></i>\n<span>churichard.me</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Dictate", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to build a platform that automatically transcribed your meeting into text, because in the past we have had problems with meeting minutes not being accurate enough for our meetings. </p>\n<h2>What it does</h2>\n<p>Dictate Transcribes audio from a conversation onto the screen, into a file for easy instant meeting minutes for users. It works especially great in Interview scenario's Where a question and answer format it easy to display.</p>\n<h2>How we built it</h2>\n<p>The main chat uses the Web Speech API built-into webkit that allows us to translate our voice into text. By combining this with WebRTC, we are not only able to convert our voice to text, but also be able to stream our video and audio to different people. This can then be combined with Socket.IO to manage different \"rooms\" for meeting user to user, conferencing, or other uses.</p>\n<h2>Challenges we ran into</h2>\n<p>We had a tough time setting up AWS, and WebRTC took us the longest time to set up of the libraries/api's thatwe used. Also, defining punctuation, and sentence endings were really hard for us, and something we would like to improve on in the future.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are proud that we were able to successfully display mostly correct text to a users screen during a call. Since using WebRTC was something we are all new with it was fun playing with it to get it to work.</p>\n<h2>What we learned</h2>\n<p>We were able to learn how to use WebRTC along with sockets, and node.js. We also got to play with setting up an AWS. </p>\n<h2>What's next for Dictate</h2>\n<p>We would like to continue development of Dictate, and expand it to do what we couldn't finish here and expand the use of this past what it currently is. This includes implementing different chats, allowing for more user options as well as possible recording and other features that we would consider valuable.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/postgresql\">postgresql</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/webrtc\">webrtc</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-web-speech-api\">google-web-speech-api</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/smenon18/dictate\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/smenon18/dictate\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://dictatechats.herokuapp.com\" rel=\"nofollow\" target=\"_blank\" title=\"https://dictatechats.herokuapp.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>dictatechats.herokuapp.com</span>\n</a></li>\n<li><a href=\"https://dictatechats.com\" rel=\"nofollow\" target=\"_blank\" title=\"https://dictatechats.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>dictatechats.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["SynchroTabs", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"SynchroTabs \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/418/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We grew frustrated with leaving an incomplete form, article, or manga chapter. To regain full connectivity between devices, we created SynchroTabs.</p>\n<h2>What it does</h2>\n<p>It syncs an exact tab state between devices. This includes information such as type fields and page scroll position.</p>\n<h2>How we built it</h2>\n<p>We developed it as a Google Chrome extension. The front-end was developed using HTML/CSS while the back-end was developed using Javascript.</p>\n<h2>Challenges we ran into</h2>\n<p>We ran into issues getting the proper device to be the save state creator while the other device retrieves the content along with the save state creator status. Connection issues made functionality testing difficult since some save states might not have been updated and devices were loading older save states.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We built a practical app that we will use in the future.</p>\n<h2>What we learned</h2>\n<p>We learned about chrome extension development and the use of sync capabilities.</p>\n<h2>What's next for SynchroTabs</h2>\n<p>Polishing it and publishing it to the chrome extension store.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/chrome\">chrome</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/ericsong/SyncATab\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ericsong/SyncATab\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["AR Wizard Duel", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>What it does</h2>\n<p>This is an AR-based game in which two people can have a fake wand duel between them. Person A's phone camera tracks person B's wand in order to determine the direction of person B's spells, so that they may be displayed on both players' viewports. The Myo armband registers the sending of a spell when the user's grip tightens on his or her wand, and a continuous speech recognition service recognizes which spell the person intended. As of now, the only spell currently in the wizarding arsenal is \"Stupefy\", and all it does is shoot a big beam of light. </p>\n<h2>What's next</h2>\n<p>I expect to add actual game controls and more spells later; this is a prototype to demonstrate feasibility. Also, due to time constraints I could not split the Camera view across two duplicate views to produce a VR headset (i.e. cardboard)-based AR experience, which is another immediate concern. Finally, I intend to get rid of the Myo armband altogether eventually, and replace it with pure OpenCV.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/opencv\">opencv</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/speechapi\">speechapi</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/myo\">myo</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/tanishqaggarwal/wizardduel\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/tanishqaggarwal/wizardduel\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Carb Count", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>I have diabetes, I count carbs to keep my blood sugar under control. Apps like myfitnesspal are inaccurate for carbs often so I wanted a way to ensure that the information was accurate but also simple and only did what I needed.</p>\n<h2>What it does</h2>\n<p>Counts carbs, shows your total compared to your goals.</p>\n<h2>How we built it</h2>\n<p>Flask, python, javascript, mongodb, bootstrap, css, html</p>\n<h2>Challenges we ran into</h2>\n<p>MongoDB was challenging to get set up.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>The website looks nice and runs pretty seemlessly</p>\n<h2>What we learned</h2>\n<p>Databases can be complicated and we learned how to create paths through clicking through a site to different pages.</p>\n<h2>What's next for Carb Count</h2>\n<p>More features- stats with graphs, net carb calculations, text alerts with twilio when you're approaching your carb or calorie limit</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://github.com/kaitcov/carbCount\" rel=\"nofollow\" target=\"_blank\" title=\"http://github.com/kaitcov/carbCount\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Mapped Capital", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Mapped Capital \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/388/datas/gallery.jpg\"/>\n<p>\n<i>Login</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Mapped Capital \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/387/datas/gallery.jpg\"/>\n<p>\n<i>Main Screen</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Mapped Capital \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/385/datas/gallery.jpg\"/>\n<p>\n<i>Filtering Options</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Mapped Capital \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/389/datas/gallery.jpg\"/>\n<p>\n<i>Purchase Summary Page</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Mapped Capital \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/386/datas/gallery.jpg\"/>\n<p>\n<i>Selecting Marker For More Info</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Mapped Capital \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/384/datas/gallery.jpg\"/>\n<p>\n<i>Using Social Media to Share A Vendor's Info</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Mapped Capital \u2013 screenshot 7\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/390/datas/gallery.jpg\"/>\n<p>\n<i>Sending A Friend Some Venmo Info</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p><strong>What It Does</strong>\nWhen we started this project, we wanted to find a way for users to get more use from the data they generate from their purchases. Our application has a user sign into their Capital One account and then provides them with a map that has the various vendors that they have made purchases at. Markers are colored differently depending on how frequently they are used (red meaning frequently and green meaning infrequently). Users can use this information to see their shopping trends and become more informed of their spending. Users are also able to long press on any of the vendors they have shopped at and quickly share that vendors information through multiple social media outlets.</p>\n<p>We provided the ability to sort the displayed purchases by cost of the purchase, by a date range, or by purchase type (food,entertainment,etc.). The user can also go to the summary page of their app where it will tell them what merchant the user goes to most frequently, what merchant the user spends the most money at, which purchase cost the user the most, and the total money the user has spent.</p>\n<p>By combining our filtering with our summary the user can do useful things like figure out their favorite place to eat by filtering by the food category and seeing which vendor they frequent the most. Another example is the user can filter by date and see how much they spent since their last paycheck.</p>\n<p><strong>Our Biggest Challenges</strong>\nOne major problem we had was figuring out how to cache data in our application so we wouldn't have to make so many requests to the API every time we needed data. Once we figured out how to store the data, our app worked much better without as many network requests. We are also proud of all the filtering we can do on the map because we believe it provides a lot of potential use to the users. It took us a while to figure out how to make the app user friendlyBesides that, just figuring out the Capital One API and how to make an android application that utilized maps was challenging.</p>\n<p><strong>Future Work</strong>\nIn the future, we see this application using machine learning to understand a user's purchases so it can provide suggestions similar to what the user already uses.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/capital-one\">capital-one</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/aorsini11/MappedCapital\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/aorsini11/MappedCapital\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["sopMVC", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>sopMVC</h1>\n<p>A full stack web framework!</p>\n<p>Backend devs: Don't forget to ignore your IDE files when committing to GitHub.</p>\n<p>Join Trello if you want to work on issues. Contact Patrick on github.</p>\n<p>Interested in backend dev? Contact Orens on github.</p>\n<p>How to run the project?</p>\n<p>go to the sopMVC directory:\n~ java sopMVC startproject [address]</p>\n<p>by default, it will create a project in ~/sopMVC/</p>\n<p>if that directory exists already, then it will overwrite the existing project (a.k.a. pls specify an address)</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/oxhagolli/sopMVC\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/oxhagolli/sopMVC\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Made the CSS framework, and also made the profile template.", "", ""]], ["snackr", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"snackr \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/357/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"snackr \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/358/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"snackr \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/359/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>When living in an apartment with many other people, it can be a hassle to figure out when something was bought or who's it is. </p>\n<h2>What it does</h2>\n<p>snackr requires a grocery store to output a QR code on the customer receipt representing the information about the items purchased. Using a QR scanner, a client can use our web app to update a live inventory of their digital pantry online, see what they have left (instead of digging through the freezer), and update what they've eaten. It also gives nutritional values for the foods you have digitized. </p>\n<h2>How we built it</h2>\n<p>snackr is build in flask with an html/js/css frontend. In the backend, all data is stored on mongodb. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://snackr.herokuapp.com\" rel=\"nofollow\" target=\"_blank\" title=\"http://snackr.herokuapp.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>snackr.herokuapp.com</span>\n</a></li>\n<li><a href=\"https://github.com/gabeochoa/snackr\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/gabeochoa/snackr\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["TrackRunnr", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"TrackRunnr \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/802/datas/gallery.jpg\"/>\n<p>\n<i>TrackRunnr</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>TrackRunnr <a href=\"https://travis-ci.org/ZacBlanco/TrackRunnr\" rel=\"nofollow\"><img alt=\"Build Status\" data-canonical-url=\"https://travis-ci.org/ZacBlanco/TrackRunnr.svg?branch=master\" src=\"https://res.cloudinary.com/devpost/image/fetch/s--Dy1WBmES--/https://travis-ci.org/ZacBlanco/TrackRunnr.svg%3Fbranch%3Dmaster\"/></a></h1>\n<p>TrackRunnr was developed by Zac Blanco and Richard Ahn at HackRU in Spring of 2016.</p>\n<p>The aim of <em>TrackRunnr</em> is to build a modern, scalable web app for advanced runners to track and log their training. We've built the app from the bottom up using modern web technologies and good software engineering practice.</p>\n<p>The backend of TrackRunnr is  built on <a href=\"http://nodejs.org\" rel=\"nofollow\">Node.js</a> and <a href=\"http://expressjs.com/\" rel=\"nofollow\">Express</a>.  The database backend is provided by <a href=\"http://mongodb.org\" rel=\"nofollow\">mongoDB</a> and <a href=\"http://mongoosejs.com/\" rel=\"nofollow\">mongoose</a>. We used <a href=\"https://www.npmjs.com/package/ejs\" rel=\"nofollow\">EJS</a> for templating. Otherwise known as the <strong>MEEN</strong> stack.</p>\n<p>Here's a list of tech used in the Project</p>\n<ul>\n<li><a href=\"http://nodejs.org\" rel=\"nofollow\">NodeJS</a></li>\n<li><a href=\"http://expressjs.org\" rel=\"nofollow\">Express</a></li>\n<li><a href=\"https://www.npmjs.com/package/ejs\" rel=\"nofollow\">EJS</a></li>\n<li><a href=\"http://mongodb.org\" rel=\"nofollow\">MongoDB</a></li>\n</ul>\n<h2>Start Developing TrackRunnr Now</h2>\n<h2>Getting your own copy of TrackRunnr</h2>\n<p>TrackRunnr is open source! simply execute the <code>git clone</code> to get your own copy.</p>\n<pre class=\"language-bash\"><code>git clone https://github.com/ZacBlanco/TrackRunnr\n</code></pre>\n<h2>Developer Quick-Start Guide</h2>\n<p>Getting up and running with TrackRunnr on your local machine is simple. Unix is recommended. Windows may require extra configuration.</p>\n<h3>Pre-Requisites</h3>\n<ul>\n<li><a href=\"http://nodejs.org/en/download\" rel=\"nofollow\">nodejs</a> installed v5+</li>\n<li><a href=\"http://nodejs.org/en/download\" rel=\"nofollow\">npm</a> installed</li>\n<li><a href=\"https://www.mongodb.org\" rel=\"nofollow\">MongoDB</a> installed</li>\n</ul>\n<p>Once you've got a copy of the repository using <code>git-clone</code> run the following command to install dependencies:</p>\n<pre class=\"language-bash\"><code>npm install\n</code></pre>\n<p>Now run the tests to make sure that the build works on your system:</p>\n<pre class=\"language-bash\"><code>npm test\n</code></pre>\n<p>If all the tests pass then your system is ready to begin devlopment! You can now start your own local copy with </p>\n<pre class=\"language-bash\"><code>npm start\n</code></pre>\n<h2>Project Reflection</h2>\n<p>Richard and I both had very, very little experience when it comes to full-stack development. This entire project has been a learning experience for the both of us. I had never actually built an entire web-application before. I think that over the course of HackRU we've gained a <strong>ton</strong> of knowledge on best practices for many, many different areas of the technology stack. We've learned best practices in user authentication and user models. We dabbled in some security and encryption. We also learned some of the best ways to build an API with our <strong>MEEN</strong> stack. Then on top of that we both learned the EJS templating engine for Express and I even had some time to toy around with d3.js</p>\n<p>We've both learned that making a modern scalable web application is no easy feat. But I'm proud of what we've achieved in the past 24 hours. Our app is capable of hooking up directly to any MongoDB cluster, and can easily be run behind an nginx loadbalancer. It could instantly scale to at least a few hundred users before we have the possibility of hitting any trouble.</p>\n<p>Overall I think this project was a fantastic learning experience for the both of us. We learned from the ground up how to work with a wide variety of technology and apply it to make something that has the potential to be very useful and cool!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/shell\">shell</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/passport\">passport</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ejs\">ejs</a></span></li><li><span class=\"cp-tag\">chai</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/travis-ci\">travis-ci</a></span></li><li><span class=\"cp-tag\">mocha</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/d3-js\">d3.js</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/ZacBlanco/TrackRunnr\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ZacBlanco/TrackRunnr\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Worked together with Richard to help build our entire technology stack.", ""]], ["FallingBalls", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>This is a game I made using Java's Applet and Graphics libraries</p>\n<p>HOW-TO: \nRun Server-\n    Run the ServerRun\n    start server</p>\n<p>Run Client-\n    Edit IP in code (around line 80)\n    Run ClientRun, (make sure server is active) \n    Click on the Applet. Enter your username. \n    You should be connected now.</p>\n<p>Playing the game-\n    WASD to move\n    R to Ready up (will start the game when 100% of players are ready) (this starts/resets the game)\n    SPACEBAR to use skill (automagicly assigns teleport to player, teleports to shadow character under mouse)\n    ENTER to start a message, Enter again to send. </p>\n<p>Hack-Harassment- Uses a trie tree to determine if a bad word was said. (search time of logn) If something bad was said, it factors it into the user rating. if user rating gets too high, it notifies the user \"Please try to be nicer, or else!\" Each bad word has a multiplier, and effects the user rating differently. It also multiplies higher the more you do it each day, as well as a separate multiplier for consecutive days of harassment. It has a VERY high multiplier for continues harrasement against a particular person. (Utilizes wat.ai to parse the information and find intent and subject). </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/lifedistroy/FallingBalls\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/lifedistroy/FallingBalls\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["UNessie", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Will edit later</p>\n<h2>What it does</h2>\n<h2>How we built it</h2>\n<h2>Challenges we ran into</h2>\n<h2>Accomplishments that we're proud of</h2>\n<h2>What we learned</h2>\n<h2>What's next for UNessie</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/intel-edison\">intel-edison</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/phynom/HackRU_2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/phynom/HackRU_2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the front end and API connections on the android application of the project.", ""]]]