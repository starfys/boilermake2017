[["Spin to Win", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/6dSABwcAYv8?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Spin to Win \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/255/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Spin to Win \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/259/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>What does it do?</h2>\n<p>It takes an object and scans it to a 3d file.</p>\n<p>Using an 10c reflective IR led pair, Spin to Win scans a 3d object from the side by continuously rotating it and changing the scan height. Then we map out these points to a 3d map using WolframAlpha and generate a file that you could use to 3d print an object of your own.</p>\n<h2>Is it really under $20?</h2>\n<p>Yup. $7 for the top servo, $0.10 for the reflective ir, $3 for the dc motor on the bottom, the cardboard is free, breadboard is barely used, could get a small cheap $1 one, arduino clones are anywhere from $3 to $20, generally around $10 for those with the same microcontroller, and the gears came in a $3 kit with way more than these. Electrical tape can be bought for $1 per 2 rolls at dollar tree.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/wolfram-technologies\">wolfram-technologies</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/CyrusRoshan/scanduino\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/CyrusRoshan/scanduino\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Made the hardware and wrote the code for the arduino and the portion of the node instance that interfaces with it", ""]], ["Windsong", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://player.vimeo.com/video/161357094?byline=0&amp;portrait=0&amp;title=0#t=\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Windsong \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/757/datas/gallery.jpg\"/>\n<p>\n<i>Score Screen</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Windsong \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/758/datas/gallery.jpg\"/>\n<p>\n<i>Game in Action</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Windsong \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/759/datas/gallery.jpg\"/>\n<p>\n<i>Welcome Screen</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Windsong \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/760/datas/gallery.jpg\"/>\n<p>\n<i>Training Mode</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Windsong \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/037/datas/gallery.jpg\"/>\n<p>\n<i>Song Selection Menu</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Our team enjoys rhythm games such as <a href=\"https://itdelatrisu.github.io/opsu/\" rel=\"nofollow\">opsu!</a>, and thought that it would be an interesting idea to create a rhythm game based around the Leap Motion. This led to the idea of a rhythm game based on a three by three grid in the air that could be simulated by a Leap Motion. Our name was inspired by the fact that the game and its UI felt very zen like.</p>\n<h2>What it does</h2>\n<p>Windsong is a rhythm game where you match the beat of the music by using a Leap Motion to tap the right squares on three by three grid.</p>\n<h2>How we built it</h2>\n<p>We wrote our game using Slick2D, a Java game library around OpenGL/OpenAL.  We also created most of the graphics by ourselves in Inkscape and Paint Shop Pro 7.</p>\n<h2>Challenges we ran into</h2>\n<p>Our biggest challenge was properly mapping the Leap Motion sensors to the in-game grid and getting the sensors to properly recognize a \"hit\" without recording extraneous movement as hits. Besides that, the main challenge of the program was that it had to incorporate many different \"parts\" (song selection, the Leap Motion detection, sound and visual effects for the grid, timing-based scoring, a grading system, etc.) to make a fully functionally game, and all of these parts also had to be part of a cohesive UI.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Our proudest accomplishment is that we managed to get the Leap Motion to track the grid accurately enough to make the grid tapping mechanics usable and enjoyable. We're also proud that we managed to design a cohesive and elegant UI.</p>\n<h2>What we learned</h2>\n<p>The Leap Motion, while usually able to report hand positions with decent accuracy, was at time difficult to work with due to its limited range (attempting to hit a square on the side often meant the user moved his/her hand out of the Leap Motion's \"view\"). Even when the Leap Motion did deliver accurate position / speed reports, it was tricky to translate those coordinates into \"actions\" (especially when hitting the corner squares), so most of our learning experience with this project dealt with working around the limitations of the hardware to get a good software interpretation of its results.</p>\n<h2>What's next for Windsong</h2>\n<p>Our primary goals for Windsong are better \"hit detection\" from the Leap Motion (the corners of the grid can still be iffy at times) and more advanced motion detection. For example, currently the rhythm game is based off of tapping grid squares, but using the Leap Motion we could implement more complicated motions, such as a sweep in a line or a \"tap and hold\" motion to make the game play more varied.  We could also build interactive or competitive features into the game, such as online matches against other players.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/maven\">maven</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/inkscape\">inkscape</a></span></li><li><span class=\"cp-tag\">paint-shop-pro-7</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/leap-motion\">leap-motion</a></span></li><li><span class=\"cp-tag\">slick2d</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/itdelatrisu/windsong\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/itdelatrisu/windsong\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Moralit.ai", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Moralit.ai \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/291/datas/gallery.jpg\"/>\n<p>\n<i>Mobile conversation with moralit.ai</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Moralit.ai \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/292/datas/gallery.jpg\"/>\n<p>\n<i>Desktop conversation with moralit.ai</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>About</h2>\n<p><a href=\"https://moralit-ai.herokuapp.com/\" rel=\"nofollow\">Moralit.ai</a> is an artificially intelligent personal assistant which uses natural language processing and machine learning to perform moral decision making. By adhering to <a href=\"https://en.wikipedia.org/wiki/Deontological_ethics\" rel=\"nofollow\">deontological principles</a> surrounding murder, suffering, adultery, and deception, moralit.it determines the ethical permissibility of performing action requests from the user.</p>\n<h2>Inspiration</h2>\n<p>If you hold to the material nature of the world around us, AI with true AMA could mean an end to the problem of conscious life and could bring about ethical obligations to these rational \"persons.\" With AI performing ever larger feats of intelligent processing, artificial moral agency (AMA) is becoming a topic of discussion among many philosophers, computer scientists, and layman alike. Inspired by recent moral dilemmas faced by developers of artificially intelligent software (Tay.ai at Microsoft, self driving car software at Tesla, etc), the aim of this project is to explore the means by which an AI which can rationalize its own moral decisions.</p>\n<h2>How we built it</h2>\n<p>First, we created four Kantian universals to feed our AI that it is absolutely unable to participate in or act on:</p>\n<ol>\n<li>Murder</li>\n<li>Creating suffering</li>\n<li>Adultery</li>\n<li>Deception</li>\n</ol>\n<p>We then used api.ai for natural language processing which allowed us to understand the domain of the users speech. Based upon the domain, intent, and original user text, we process ethical reasoning where necessary. In certain cases such as completing math functions, asking for the time, and authorizing/opening software applications, we bypassed any ethical processing. When the text didn't fall into one of those domains, we compared it to the AI's current knowledge of the 4 forbidden universals. When running into an ethical problem, the AI defers to denying the user's request or refusing to answer the question.</p>\n<p>The second portion of ethical reasoning (which has not yet been connected, but was developed to 90%) uses machine learning to train our AI about further censoring of topics in its realm of work. For example, when a user requests to search the web for \"how to build a bomb,\" there is an obvious ethical intersection with our first Kantian universal. The AI uses an API to grab the main context in a sentence and ranks its relevance to our four principles using ML and after that point, we compare the users request with a constant value which we deem \"permissible.\" If the relevance score is below our constant permissible score value, we return the answer (in this case, a web search), and if it is not, we deny the users request.</p>\n<h2>What's next for Moralit.ai</h2>\n<p>We would like to finalize the connection with our machine learning ethical reasoning in order to expand upon the personal assistants capabilities. Currently, it is more restrictive than it should be in some situations as a precaution, as with deontological ethics it is better to be safe than sorry. Additionally, expanding upon our understanding of NLP would allow us to differentiate between active and passive verbs (ex: \"I'm going to kill x\" versus \"X said I he/she was going to kill me\").</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/api-ai\">api.ai</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mysql\">mysql</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://moralit-ai.herokuapp.com/\" rel=\"nofollow\" target=\"_blank\" title=\"https://moralit-ai.herokuapp.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>moralit-ai.herokuapp.com</span>\n</a></li>\n<li><a href=\"https://github.com/Moralit-ai/Moralit-beta\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Moralit-ai/Moralit-beta\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["PTeach", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/OGY5WTlyNTw?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"PTeach \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/299/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"PTeach \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/297/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"PTeach \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/298/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Two years ago I got injured lifting weights because I wasn't completing the exercise correctly. I ended up hurting my back so badly that I was unable to lift any more weights for 3 months. </p>\n<h2>What it does</h2>\n<p>PTeach tells users whether or not they are performing an excercise or a motion correctly. For this hackathon we focused on the motion of curling when performing single arm bicep curls. </p>\n<h2>How we built it</h2>\n<p>Using the programs listed down below</p>\n<h2>Challenges we ran into</h2>\n<p>To complete this project on time we had to do each part piece by piece. This involved creating a front-end without having any data from the back-end. This made it incredibly hard to integrate them all together towards the end. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Calibrating the Myo band to consistently read data. Having the myo band understand if a user is performing an exercise correctly.</p>\n<h2>What we learned</h2>\n<p>Myo can be incredibly hard to work with due to its inaccuracies and sensitivity. We learned to work with hardware that is proprietary.</p>\n<h2>What's next for PTeach</h2>\n<p>PTeach is not gonna be just limited to a myo armband or lifting weights. In the future, PTeach will be able to teach people how to have a fluid golf swing, how to throw a perfect spiral, and even how to kick a soccerball.  We have the scripts, we just need to link them. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag\">htm</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/django\">django</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/myo\">myo</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/JaiGhanekar/HackPrincetonExercises\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/JaiGhanekar/HackPrincetonExercises\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Helped with calibration and testing. Main presenter. ", "Coded algorithm that detected whether or not exercises are correct, linked Myo SDK", "I worked on the backend, REST API, and making pages dynamic", "Worked on the frontend, integrating the backend data"]], ["Free-Space", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Free-Space \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/719/datas/gallery.jpg\"/>\n<p>\n<i>Complete battery powered module</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Free-Space \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/737/datas/gallery.jpg\"/>\n<p>\n<i>Screenshot of our web UO</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Free-Space \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/716/datas/gallery.jpg\"/>\n<p>\n<i>Sound (left) and light (right) sensors</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Frustrated by time after time of having difficulty finding open study carrels in the library, we set out to build a new platform for us students to intuitively visualize open spots. Inspired by the Laundry view, a service within the laundry system which tracks the state of washers and dryers all across campus, we created Free Space, combining both hardware and software in an easy to use and easy to adapt system not only for tracking study carrel openings, but to find free space anywhere, such as music practice rooms, with just the switch of a sensor.</p>\n<h2>What it does</h2>\n<p>On the hardware side, our current implementation allows users to decide between using light or sound to determine whether or not the space is occupied. A key feature of our devices is that it is extremely easy to switch sensors and subsequently see those changes updated online, allowing for flexible usage. The particular kind of sensor attached is automatically detected by our software and immediately updated on the user interface to reflect these changes.</p>\n<p>On the software side, users can currently visit our website and see which study carrels are occupied and which are free. They can also mouse over individual carrels to see other information, such as how long the carrel has been in its current state and how long ago the carrel's state was checked.</p>\n<h2>How we built it</h2>\n<p>On the hardware side, Free Space uses the Electric Imp platform to connect our sensors to the internet. The hardware is split into parts: the main module and the sensor. The main module includes the Electric Imp and associated data and power input lines, while the sensors have power input connections and data out lines. Any sensor capable of transmitting its information over one line is a potential candidate for use with the module and subsequently our software platform, providing flexibility unmatched by any single-sensor system.</p>\n<p>On the software side, we used Javascript, HTML, and CSS with the Meteor framework to build a reactive site. </p>\n<h2>Challenges we ran into</h2>\n<p>None of us had worked with electric imp or done webdev before, so just getting started was a challenge. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We did it! We actually were able to complete our goal of linking the sensors to markers on the library map and update the data in real time. </p>\n<h2>What we learned</h2>\n<p>Hackathons are great. </p>\n<h2>What's next for Free-Space</h2>\n<p>We believe that our site has the potential to be a helpful tool for students, so we'd love to collaborate with the libraries on campus and give it a trial run. In addition, we wrote the code and built the hardware with flexibility in mind, so anyway can tweak our hardware and software to suit their needs. For example, free-space can easily be used to check the availability of music rooms using sound sensors. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/meteor-js\">meteor.js</a></span></li><li><span class=\"cp-tag\">electric-impjav</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://free-space.herokuapp.com/\" rel=\"nofollow\" target=\"_blank\" title=\"http://free-space.herokuapp.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>free-space.herokuapp.com</span>\n</a></li>\n<li><a href=\"http://free-space2.herokuapp.com/\" rel=\"nofollow\" target=\"_blank\" title=\"http://free-space2.herokuapp.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>free-space2.herokuapp.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the software side of the project, contributing to the Javascript App logic and HTML & CSS frontend design/structure.", "I designed and built all of the hardware. This was my first hackathon, and my first time using an electric imp, and it was an awesome experience.", ""]], ["Billy The Fast", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Billy The Fast \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/461/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>TBD</p>\n<h2>What it does</h2>\n<p>He is a robot that follows paths</p>\n<h2>How I built it</h2>\n<p>Lots of &lt;3</p>\n<h2>Challenges I ran into</h2>\n<p>Solo hardware hack is hard</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>First time solo hacking!</p>\n<h2>What I learned</h2>\n<p>DONT SOLO HACK HARDWARE+SOFTWARE</p>\n<h2>What's next for Billy The Fast</h2>\n<p>Add IMU for feedback (PID) so he actually moves in the path i want him to move</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">particle-photon</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag\">vex-robotics</span></li></ul>\n</div>\n</div>", [""]], ["sVRf", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/yzainHL1EBI?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"sVRf \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/336/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"sVRf \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/337/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"sVRf \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/338/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Motivation</h2>\n<p>Today, many companies and institutions hold large relational data sets that are so massive in size and scale that they are nearly impossible to visualize and understand. What if we could explore the data sets by traveling through a magical 3D world where only the imagination sets the limits? What if we could do this with only a few lines of code for any dataset? With sVRf and the Oculus we are closer than ever to achieving this.</p>\n<h2>What it does</h2>\n<p><strong>sVRf gives users the ability to surf graphs effortlessly.</strong> Using Oculus Rift, sVRf users can navigate through a series of relational data placed in a three-dimensional world. By simply looking in the direction of a video, the user moves through space and sVRf automatically positions the user for an optimal viewing experience. </p>\n<h2>How we built it</h2>\n<p><strong>Unity provides ample tools and effects to allow us to craft the perfect 3D world for our purposes.</strong> To implement two of our three main goals, virtual presentation and user experience, we needed Unity in order for us to position the screens exactly where we wanted and create custom camera controls to allow users to move through their media seamlessly. \nFor the purpose of HackPrinceton, we have built integration with YouTube and a subset of the entire database. But sVRf can be applied to any graph: visualize your family's genealogy, your movie collection, or your social media connections with sVRf's simple API.</p>\n<h2>Challenges we ran into</h2>\n<p><strong>Optimizing camera controls, rendering multiple tiles of information, and arranging them so they're more organized</strong>\nIt was a challenge optimizing the \"snapping\" feature of sVRf which has to recognize user movements and decide which video to zoom in on. Luckily, we were able to overcome that challenge and create a reliable system that handles all kinds of user inputs smoothly. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p><strong>The major features of sVRf are data acquisition, virtual presentation, and user experience.</strong> Within each we had our shining moment of pride. For data acquisition, it was the ability to scrape multiple layers of videos connected by a common theme. For virtual presentation, the crowning achievement was the ability for the program to generate the layers of videos in an interconnected web as it receives them from a source. Finally for user experience, the proudest moment came during the final run through the Oculus Rift, showing the seamless integration of all the navigation components that the user has to explore.</p>\n<h2>What we learned</h2>\n<p><strong>A whole lot!</strong> From knowing little to nothing about how Oculus Rift works, we used our prior knowledge of C# to explore the possibilities that Unity has for virtual reality. Conversely, in order to obtain the media, we learned how to design a scraper to mine multiple layers of videos based on parameters like keywords and duration.</p>\n<h2>What's next for sVRf</h2>\n<p><strong>Our demo showcases the potential sVRf has to change the way we interact with online media</strong> Not just limited to the scope of YouTube, sVRf has potential for a number of diverse applications, including sports and social media. Beyond what is seen in the demo, sVRf can visualize multiple streams from sports games or videos off the live feeds from your favorite sites like Facebook, Instagram, and Twitter. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/christianmat/sur4.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/christianmat/sur4.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["lit", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/DYuQNuG5y3A?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Imagine yourself, slumped in bed, after several hours of working. You want to sleep badly, but the only problem is that the light is still on. It may not seem like much of a deal now as you're reading this, but we all know that it would take an earthquake to make you get up to turn off that light. But what if you could just flick your wrist and the lights would turn off?</p>\n<h2>What it does</h2>\n<p>Makes your life easier by enabling you to turn the light off and on just by a flick of the wrist, even if the switch is all the way across the room, or all the way across the world. Music and navigation, among other things, are also only a few flicks away. To name a few applications, our technology can be easily extended to lock your house remotely, turn off a stove when you are not home, or preheat your shower before you even reach the bathroom.</p>\n<h2>How we built it</h2>\n<p>The first day was spent almost entirely on exploring the variety of hardware available to us (Oculus, Myo, Raspberry Pi, Arduino, Particle Photon, Leap Motion, etc.), and we eventually decided upon the latter two based on their relevance to our project idea and our team members' preferences. Subsequently, we divided the project into 2 major parts: the first was the hardware portion, which involved hooking up the necessary circuits, motors, power sources, etc. used to automate home appliances (e.g desk lamps, door knobs, shower handles, etc). The second portion was the software interfacing with the Leap Motion, which not only had to recognize the appropriate gestures, but also communicate with the hardware (via HTTP and IFTTT in our case). In the end, we managed to complete the hardware portion and even make it portable by eliminating the need for a breadboard/power outlet, and managed to complete the software portion using a variety of tools, including Node.js, Arduino, IFTTT, and the Leap Motion API.</p>\n<h2>Challenges we ran into</h2>\n<p>The major roadblock we faced involved learning how to work with the hardware, as nobody in our team had experience wiring up circuits, calculating voltages and resistances, soldering, or the like. As such, we spent a lot of time perusing the internet for tutorials, as well as consulted the hardware mentors to guide us. Furthermore, the Leap Motion API as well as the Leap Motion itself proved to be somewhat unpredictable with how gestures are recognized, and so we spent a significant amount of time figuring out the optimal way to program the Leap Motion to work nicely with the motors we built. Gluing the two together was relatively seamless with HTTP + Particle Photon and IFTTT, although IFTTT at times proved to be less versatile than what we had expected.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>All of us had zero knowledge of electrical engineering at the start of the hack. All but one are first time hackers. We came into the hack ready to build a webapp we had in mind for months, but successfully switched to hardware, came up with an idea, learned about all the hardware, and implemented the idea, all within the allotted time. </p>\n<h2>What we learned</h2>\n<p>That hardware is equally or more applicable to life compared to software. Collaboration and independence is key to efficiency and happiness. Hacks are heaven!\nAnd on the technical side, we learned how to solder, use breadboards, particle photon microcontrollers HTML, JavaScript, Arduino, and many more software and hardware components.</p>\n<h2>What's next for flick</h2>\n<p>Look forward to our shower and door products! It was difficult to demonstrate this at the hack given the lack of shower handles and door locks, but had we been provided with the materials we would have built them!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/erasaur/flick\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/erasaur/flick\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Wrote HTML and JavaScript to link information sent by Leap Motion to Particle Photon, co-programmed Particle Photon, all applications for music and navigation", ""]], ["LOOK", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Childhood.</p>\n<h2>What it does</h2>\n<p>Allows you to play with strangers/friends safely with the use of facial recognition and distract your opponents to level up in the rankings</p>\n<h2>How we built it</h2>\n<p>We used ionic framework as it was more comprehensive for us. We used Kairos's API for facial recognition and cordova's camera API. </p>\n<h2>Challenges we ran into</h2>\n<p>Getting the video streaming</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Learning about ios/android dev even though we've never done it. Finished the views quickly. </p>\n<h2>What we learned</h2>\n<p>ios/android dev using ionic framework</p>\n<h2>What's next for LOOK</h2>\n<p>making it better</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ionic\">ionic</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag\">kairos</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/iphone-sdk\">iphone-sdk</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/alexlovescoding/Look.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/alexlovescoding/Look.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["EyePhone", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/prDynB1n9MI?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"EyePhone \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/224/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"EyePhone \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/229/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"EyePhone \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/981/datas/gallery.jpg\"/>\n<p>\n<i>Edge Detection through Canny</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"EyePhone \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/226/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Our eyes are the mirror to the outside world and are arguably the most important of the five senses. More than 20 million people suffer from blindness due to a disease known as cataract. These people are deprived of their sense of perception due to -- (a) untimely detection, (b) lack of quick solutions, and (c) lack of basic awareness. Cataract is the root cause for 5% of the United States population, and 60% of the African and South American population suffering with blindness. Although, cataract has often been termed as a disease striking the elderly population, but it has affected unto 40% of the children in developing nations. We believe any step that can safeguard the human vision is a vital step. EyePhone is one such smart step that tries to predict the existence of cataract in the human eye.  EyePhone empowers its user with a simple application that helps to detect the presence of cataract in their eyes at a cost of a single picture of their eye !</p>\n<h2>What it does</h2>\n<p>EyePhone aims at early detection of cataract so that quick remedial measures can be taken, in order to avoid unprecedented blindness. EyePhone also tries to provide quick solutions to its user, if they are detected in the cataract prone zone. EyePhone also tries to forewarn its users about the possibility of cataract if their results fall in the false positive set. All in all, EyePhone is a smart and sophisticated machine learning application (powered by android) the tries to use the best of both the worlds. This application can be downloaded and used, by any user, to check for the presence of cataract in their eye-lens, get educated about the causes and symptoms of cataract, and access quick remedial solutions.</p>\n<h2>How we built it</h2>\n<p>We designed EyePhone using a bottom-up approach with two separate modules, one targeting the Machine Learning and the other Android Application development. After performing unit testing of these individual components we did a system integration to launch an android application that detects cataract. Since the machine learning component required the data to be in a better quality, we used some image enhancement techniques to preprocess our data. We could not get any annotated data online, so we collected the data ourselves from Google Images. We took a dataset of 60 patients (30 cataract infected and 30 normal healthy people). We divided this dataset into 40, 10 and 10 patients for Training, Development and Testing purposes. The most important feature for this study was the whiteness of the small ring of the eye. In Cataract images, the inner surface of the cornea is more whitish as compared to that of normal images. We also took into account the Big Ring Area of the eye. In cataract images, the outer surface of the cornea images is bright in color as compared to that of the normal patients' image. Also, we took into account the Edge Pixel Count. Canny method is the most powerful edge detection method among them. It uses two different thresholds (to detect strong and weak edges), and it includes the weak edges in the output only if they are connected to strong edges. In the computation of EPC, we counted the number of white pixels in the output of the edge detection. Now, with all these features, we chose the Unsupervised K-means clustering algorithm as out baseline Machine Learning algorithm. The reason behind that was having access to only non-annotated data. The algorithm divides the datapoints into two sections (or clusters) which are separable. The test datapoint can be incorporated with the cluster to which its closer (Euclidean distance). </p>\n<p>From the Android side, we used Material Design concepts to bring together a clean and sleek UI that helps to minimize stress when dealing with diseases. We provide educational materials along with out ML backed algorithms to deliver information in a straightforward manner. Users would get to know more about how to deal with cataracts. To ease users into the app, plenty of animations were implemented to guide users around the app, making sure that buttons are reused and minimal learning is required.</p>\n<h2>Challenges we ran into</h2>\n<p>We could not find any publicly available annotated dataset for eye images affected with Cataract. The idea behind having a labeled dataset was the ease of usage of powerful supervised learning algorithms. Since, we were not able to get the labeled data, we scraped images from Google Image Search manually and built a non-annotated dataset, for Machine Learning purposes. \nWe also tried to extend this work over another eye disease Conjunctivitis, but we could not get good results owing to the dataset that we had. Since this is a Health hack and we do not want to recommend random suggestions to the patients, we decided not to include it with EyePhone.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are happy to present an application that tries to positively impact the lives of the people. Our application is at a one-click launch able stage. We believe our application would be a useful tool not only for the general population but also to the medical industry. We also believe that EyePhone is not only capable of detecting cataract at an early, but also acts as an interactive tool that helps to educate the general population. </p>\n<h2>What we learned</h2>\n<p>We learned a lot about Computer Vision techniques and ways to play with image-related datasets. We also realized how important it is to do image preprocessing and image enhancement before we use Machine Learning algorithms to train and test the data. </p>\n<h2>What's next for EyePhone</h2>\n<p>We plan to launch EyePhone on the Google Play Store soon. We also plan to extend the EyePhone to incorporate other diseases such as Glaucoma and Conjunctivitis.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/machine-learning\">machine-learning</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li></ul>\n</div>\n</div>", ["", "", "", ""]], ["The Tank", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"The Tank \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/261/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We are Electrical Engineers with an interest in robotics, and thought it would be a fun project to work on.</p>\n<h2>What it does</h2>\n<p>It is a tank that can drive around and fire rubber bands using a moveable turret.</p>\n<h2>How we built it</h2>\n<h2>Challenges we ran into</h2>\n<p>At the last minute, our microcontrollers completely burned out and everything stopped working. We would like to be considered for the last minute flop award.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Literally everything except the last ten minutes of this competition.</p>\n<h2>What we learned</h2>\n<p>Minimal functionality before fancy features.</p>\n<h2>What's next for The Tank</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c\">c</a></span></li></ul>\n</div>\n</div>", ["", "", ""]], ["Smart Scope", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>When working in an electronics lab there are rarely enough hands on deck. From holding probes to manipulating circuits, every task seems to pull full attention away from the others, the only real way to focus on your work is to have an assistant do the busy work for you. But what if that assistant were a computer? This is what we thought about as we designed our hack.</p>\n<h2>What it does</h2>\n<p>Smart Scopes is a combination hardware/software hack, combining electrical engineering equipment with consumer electronics to allow the most common tasks in the lab to be done automatically. Commands are spoken to an Amazon Echo, which listens intently and then quickly solves problems, provides answers, or even performs data analysis.</p>\n<h2>How we built it</h2>\n<p>Oscilloscopes often times have a serial port on the back, designed to be connected to a remote interface. We have brought this decades-old technology back to the present by integrating voice control. Our commands run as subcomponents of one omniscient Alexa voice control skill, capturing relevant input from the user while ignoring conversation. While the Echo helps with its solid voice recognition api, a significant amount of post processing makes our interface perfectly tuned for use in a lab.</p>\n<p>Commands from the echo are processed by an AWS Lambda process, reducing high overhead server costs and making our platform scalable to an arbitrary number of users. The lambda process communicates with slave devices through a high throughput redis instance, which facilitates bidirectional communication even through proxies and unreliable networks while ensuring security through its industry standard practices.</p>\n<h2>Challenges we ran into</h2>\n<p>Most of our challenges came from interfacing devices. We are utilizing 9 separate computational units in this hack (Oscilloscope, FGEN, Raspberry Pi, AWS Lambda Instance, Redis Instance, Image Proxy Server, User display laptop, Octopart Servers, Wolfram Servers) and every synapse is a place for complication.</p>\n<p>One of the hardest problems we faced was utilizing the Echo\u2019s voice capabilities. While it comes with the necessities to make a basic command system it lacks the processing to be able to listen constantly while filtering out non-targeted speech with a high degree of accuracy. We wanted to avoid the dreaded hotword as much as possible, so fine tuning this system was essential.</p>\n<p>Another issue we had was interfacing with the test equipment. The oscilloscope and function generator we brought are decades old, and so require care to interface with properly. Even standard RS-232 serial cables were not compatible, and so we had to partially fashion our own cable out of breadboards and jumper wires.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>One thing which we are especially happy with is how responsive the test equipment interface is. Thanks to the real-time bi-directional communication provided by redis we are able to push updates to the Oscilloscope and FGEN before the echo has finished saying its first word. In a lab environment people don\u2019t have time to wait for yet more technology, and so reaching the point where our hack actually makes things simpler was an achievement.</p>\n<p>In our hacks we try to be budget friendly as well as creative. While for development purposes we limited ourselves to budget of a few hundred dollars, the system is designed to be able to scale down to just a few dollars in chips. This gives it potential even for the hobbyist, who is often strapped for cash after buying big ticket items such as oscilloscopes and function generators.</p>\n<h2>What we learned</h2>\n<p>While we had a little experience working with voice recognition coming into this event, spending 36 hours interacting and developing with a state of the art voice control device gave us a better understanding of where the technology is and how best to use it to create effective offerings to consumers.</p>\n<h2>What's next for Smart Scope</h2>\n<p>We are all electrical engineering majors, and some of us teach EE labs where students often have trouble finding joy in the grind of lab. We hope to integrate this into our electronics experimenting, and to use it to get students more involved in electrical engineering.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag\">lambda</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/alexa\">alexa</a></span></li><li><span class=\"cp-tag\">echo</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li><li><span class=\"cp-tag\">wires</span></li><li><span class=\"cp-tag\">oscilloscope</span></li><li><span class=\"cp-tag\">function-generator</span></li></ul>\n</div>\n</div>", ["", "", ""]], ["Lapras", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Lapras \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/834/datas/gallery.jpg\"/>\n<p>\n<i>Sign In</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Lapras \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/833/datas/gallery.jpg\"/>\n<p>\n<i>Sign Up</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Lapras \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/188/datas/gallery.jpg\"/>\n<p>\n<i>Dashboard</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Lapras \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/194/datas/gallery.jpg\"/>\n<p>\n<i>Bank Statements 1</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Lapras \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/193/datas/gallery.jpg\"/>\n<p>\n<i>Bank Statements 2</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Lapras \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/220/datas/gallery.jpg\"/>\n<p>\n<i>Messages</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Lapras \u2013 screenshot 7\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/245/datas/gallery.jpg\"/>\n<p>\n<i>Talk To Lapras</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Lapras \u2013 screenshot 8\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/253/datas/gallery.jpg\"/>\n<p>\n<i>Loading Screen</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>The domain the Nessie API is hosted on is called \"reimaginebanking.com\". Through Lapras, we've created a unique experience that allows users to communicate and obtain vital information about their personal finance, which is both more convenient and engaging that simply accessing information from mundane tables.\nWe named the project Lapras because of our admiration for the Pokemon Lapras, and also because of its similarities to Nessie. </p>\n<h2>What it does</h2>\n<p>Lapras is a web robot that utilizes Capital One's Nessie Hackathon API, and emulates interactions that can be made with personal bankers. Lapras can make queries to filter transaction activity between a set time frame, and make predictions based on spending patterns. </p>\n<h2>How we built it</h2>\n<p>Lapras is powered by PHP. The frontend was designed in HTML and CSS, which was then embedded into the PHP backend. Transitions often utilize JavaScript. All graphic elements, including icons and sprites have been designed on Adobe Photoshop, Illustrator and After Effects. </p>\n<h2>Challenges we ran into</h2>\n<p>Building a web robot makes us enter the broad realm of Natural Language Processing. Making a script understand what the user desires from just a string is a difficult parameter to base your script upon. Nonetheless, we used keyword searches and identified ways to implement features that we recognized were essential to making this finance bot. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We're proud of how we have created this tool without any prior experience in building bots or related scripts. In addition, we're also happy with how the user interface has come along, and seamlessly integrated with the backend. </p>\n<h2>What we learned</h2>\n<p>We were not sure about processing times related to making requests, but the well-documented Nessie API helped us understand how requests could be made to it and what parameters could be evaluated. We also looked at different ways of implementing primitive language processing, and we're definitely going to explore this in the future. </p>\n<h2>What's next for Lapras</h2>\n<p>As we've mentioned earlier, Lapras needs to continue expanding it's memory. Our goal is to make it understand more sentence structures, and develop scripts that automate this learning process for it. In addition, we would also want to include more predictions and projection based queries. Finally, we also need Lapras to be able to make transactions of its own, and in the future, we hope to utilize more of the API to enable this.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/photoshop\">photoshop</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/adobe-illustrator\">adobe-illustrator</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mysql\">mysql</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["VisioVR", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"VisioVR \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/263/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to develop an application that enabled users to get directly into the visuals and graphs that they could generate in software such as Wolfram and Mathematics, providing an entirely new venue for data visualization and learning.</p>\n<h2>What it does</h2>\n<p>It is a VR app that lets you fly around, with nothing more than your hand, in a setting where all of the objects in the scene were created using Wolfram's API.</p>\n<h2>How I built it</h2>\n<p>First, objects were created using Wolfram's API, and then included in the game scene. Then, the game was developed to support input from the Oculus Rift and Leap Motion.</p>\n<h2>Challenges I ran into</h2>\n<p>It was difficult to optimize the code so that all of the graphics were fluent and responsive, resulting in a minimum level of discomfort to users who may otherwise struggle with virtual reality.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>There was a large amount of effort put forth by our team to make the experience as natural to the user as possible. Judging from the feedback of our peers who reviewed our work during the Hackathon, we think that we succeeded.</p>\n<h2>What I learned</h2>\n<p>We learned that there are a lot of difficulties inherent to integrating numerous hardware peripherals with software systems.</p>\n<h2>What's next for VisioVR</h2>\n<p>We would like to create a pipeline of tools that have the ability to computationally and automatically generate terrain with Wolfram Alpha, so that we could build a game world that is vastly complex with minimal code.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/wolfram-technologies\">wolfram-technologies</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/leap-motion\">leap-motion</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/oculus-gear-vr\">oculus-gear-vr</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/roopeshkom/Hack-Princeton\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/roopeshkom/Hack-Princeton\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Lucy", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/KJaB6FO3wIs?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n</ul> </div>\n<div>\n<p>There are hundreds of millions of people around the world who have physical disabilities that prevent them from using a mouse or keyboard. In 2011, the UN declared internet access as a basic human right and the World Wide Web Consortium has made considerable efforts in improving accessibility to the internet\u2014all without much progress.</p>\n<p>We wanted to build a solution that could use existing technologies and fit seamlessly into the existing structure of the World Wide Web. In the past, speech recognition has been used for transcribing text and basic operating system commands, but there hasn't been any significant progress into developing a true solution that integrates speech with web navigation. We solved this problem with Lucy.</p>\n<p>Lucy enables you to navigate the web hands-free with natural language. Ask Lucy to \"go to CNN\", \"click on the article about Tesla's new car,\" or even \"search for HackPrinceton.\" Open and close tabs and scroll up and down web pages. </p>\n<p>We solved several technically-challenging problems with Lucy. One of Lucy's best features is her ability to discern specific parameters from any phrase and to identify a user's intent even from the most basic request.  For example, Lucy is able to find the relevant news article on the New York Times website from \"show me the article about Trump's debate last night.\" Using machine learning, we built Lucy to accommodate the endless variety of requests that a user can give her.</p>\n<p>Lucy provides internet accessibility to the tens of millions of people around the world living with a physical disability. Our vision for Lucy is an internet browser that provides full functionality through speech recognition.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/api-ai\">api.ai</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-web-speech-api\">google-web-speech-api</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/chrome\">chrome</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/machine-learning\">machine-learning</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/AndrewNg/Lucy\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/AndrewNg/Lucy\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Focused on browser-based speech recognition and natural language processing integration. Heavy javascript programming. ", "", ""]], ["Chrono | Emergency", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Chrono | Emergency \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/145/datas/gallery.jpg\"/>\n<p>\n<i>Logo</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Chrono | Emergency \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/155/datas/gallery.jpg\"/>\n<p>\n<i>Screenshot</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Help those who are disabled or need extra help to feel comfortable moving around more freely.</p>\n<h2>What it does</h2>\n<p>It allows the wearer to use an Apple Watch as a tool to communicate with others in case of an emergency. It can also track if the user has fallen.</p>\n<h2>How we built it</h2>\n<p>We built a cloud database to store users and their contacts. We next built an iOS application and WatchOS application short after</p>\n<h2>Challenges we ran into</h2>\n<p>Getting a non relational database to behave like one when we needed it.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are able to capture information when we think the user has fallen and prompt the user if they would like help.</p>\n<h2>What we learned</h2>\n<p>We learned how to create WatchOS apps and how to work with accelerometers.</p>\n<h2>What's next for Chrono | Emergency</h2>\n<p>To notify nearby hospitals or emergency vehicles to respond to help.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/iphone-sdk\">iphone-sdk</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sketch\">sketch</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-dynamodb\">amazon-dynamodb</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/jasperdavey/HackPrinceton2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/jasperdavey/HackPrinceton2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Engineered the iOS and WatchOS application as well as design the logo and slogan.", "Worked on the Android app. Created and deployed Twilio SMS script on AWS Lambda.", "Developed AWS Lambda function scripts and Dynamo nosql database modeling and AWS API manager in creating secure application communication."]], ["VoiceCook", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"VoiceCook \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/159/datas/gallery.jpg\"/>\n<p>\n<i>Main Screen</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"VoiceCook \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/160/datas/gallery.jpg\"/>\n<p>\n<i>Bar-code Scanner</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"VoiceCook \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/177/datas/gallery.jpg\"/>\n<p>\n<i>PC Version</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We're a team of engineering students, but more importantly, we're broke and always looking for ways to save time and money. We definitely don't have time to prepare and cook our own meals. This app was born from a desire to save money by cooking our own food, while not having to fret about how to cook it, with a chance that it might actually taste good.</p>\n<h2>What it does</h2>\n<p>VoiceCook is a web application that asks the user for their available ingredients and foodstuffs and returns a list of recipes that they can cook with these items. The main appeal of VoiceCook over other similar apps is that it minimizes the user's interaction with their device's screen or keyboard, taking voice commands and reading recipes out loud to decrease greasy screens. The app also allows the user to scan barcodes and take pictures of produce to add to their ingredient list. With VoiceCook, you can spend less time fussing over a recipe, and more time actually cooking and eating.</p>\n<h2>How we built it</h2>\n<p>The backbone of our application is Node.js and Express.js. We used a Bootstrap template for front-end, and Javascript/jQuery for scripting. We made use of Google's Web Speech API for speech synthesis (text-to-speech) and speech recognition (speech-to-text), spoonacular's Nutrition, Recipe and Food API for the recipes and ingredients databases, and OpenCV for bar-code processing and image recognition.</p>\n<h2>Challenges we ran into</h2>\n<p>Many, many times our server crashed unexpectedly. Beyond this, we lost the ability to use the domain that we made, had major difficulties choosing a speech API that actually worked (and had bare success in getting it working, and spent hours trying to scan bar-code after bar-code.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>None of us have too much experience in web-dev, so it was a great opportunity for us to gain experience in both front-end and back-end. The best parts were when we finally got an API or two to work.</p>\n<h2>What we learned</h2>\n<p>Not every API is to be trusted, web development is now the bane of our existences, and overall, there are probably more efficient ways to use your time during a hackathon.</p>\n<h2>What's next for Voice Cook</h2>\n<p>The most exciting feature that we would like to implement next is a zero-touch experience. Once the app is running, it can be operated entirely by voice or image/bar-code scanning. We would also like to make the UI more appealing for next time.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/linode\">linode</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/opencv\">opencv</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/linux\">linux</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://github.com/peterl328/chef\" rel=\"nofollow\" target=\"_blank\" title=\"http://github.com/peterl328/chef\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"http://voicecook.com\" rel=\"nofollow\" target=\"_blank\" title=\"http://voicecook.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>voicecook.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the back-end implementation for VoiceCook. The back-end is written in Nodejs with the express framework that handles the web application. I used openCV to read barcode imformation and make API call to grab food information and have them connect to the front-end for this application.", "", ""]], ["gitPush", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"gitPush \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/132/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>gitPush</h1>\n<p>by <a href=\"https://github.com/aliu139\" rel=\"nofollow\">Austin Liu</a>, <a href=\"https://github.com/annieyuan\" rel=\"nofollow\">Annie Yuan</a>, <a href=\"https://github.com/TTongLian\" rel=\"nofollow\">Tongtong Lian</a>, and <a href=\"https://github.com/mahsu\" rel=\"nofollow\">Matthew Hsu</a></p>\n<h2>Overview</h2>\n<p>\"Updates were rejected: use the --force\"\n--<a href=\"https://github.com/EugeneKay/git-jokes\" rel=\"nofollow\">Eugene E. Kashpureff Jr.</a></p>\n<p>Why are we still coding with computers? Since the advent of mobile technology and wearables, we've started to explore the possiblities of using more natural actions to control the digital world around us. Suddenly, the boundaries between daydreams and reality has diminished. So again... why are we still coding with computers?</p>\n<p>Enter gitPush. Just like many other kids out there, we wanted to be able to code like a Jedi, able to move walls of code with a mere push. Many hackers have the phrases \"git add / git commit / git push\" in their muscle memory, so why not do that with the flick of a wrist? We used the LeapMotion API to turn the ordinary coder into a code Jedi. When you open your hand above the LeapMotion, you add all the code that you've modified. When you close your hand, you commit all of the changes you've made. Finally, git push just like you'd guess: with a push. </p>\n<p>Once you git push, you never go back.</p>\n<h2>Technologies Used</h2>\n<ul>\n<li><a href=\"https://developer.leapmotion.com/\" rel=\"nofollow\">LeapMotion</a></li>\n<li><a href=\"https://www.python.org/download/releases/2.7/\" rel=\"nofollow\">Python 2.7</a></li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/leap-motion\">leap-motion</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/aliu139/gitPush\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/aliu139/gitPush\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["freelo builds", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"freelo builds \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/678/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Wanting to create a useful program that can help players of all levels in League of Legends.</p>\n<h2>What it does</h2>\n<p>Java desktop program that helps users in League of Legends determine what item to build next using a database of winrates by situtation (determined by current user item build and enemy item builds). League of Legends is an online game based on combat where certain items will provide certain useful attributes or functions. We aim to use statistics to help determine which item is best by situation.</p>\n<h2>How we built it</h2>\n<p>An sql database was constructed using python by analyzing data from many past games using the Developer API from Riot Games. Linode servers were utilized to speed up data collection and analysis. The database contains situations and build paths sorted by winrate for each situation, where a situation is determined from a mathematical function incorporating the user's current item builds and the enemy's item builds to account for dynamic item build paths. When the user inputs a request for an item by holding tab and pressing \"\\\", the program takes a screenshot of the user's scoreboard. Using image recognition software, the program determines the item builds of everyone in the game to calculate the situation that the user is in. It then searches the database for the closest situation and the best build path for the user given the situation. The program then uses text-to-speech to say the name of the best item to build next so the user never has to divert attention away from the game to determine what to build next.</p>\n<p>freelo.tech domain name registered by .tech, with website written in html and css hosted by Amazon Web Services.</p>\n<h2>Challenges we ran into</h2>\n<p>Getting image recognition to work: we had to restrict the workable resolution to 1920x1080 in order to properly recognize items in-game.\nBuilding the database: determining a mathematical function to identify situations and collecting/analyzing all of the data and building a workable database from the data</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Developing a full program with website, launchable application, and doing data analysis and making an independent database to use.</p>\n<h2>What we learned</h2>\n<p>How to interact with data in json files provided by the Riot Games API, building a database in python, front-end development in form of website and application.</p>\n<h2>What's next for freelo builds</h2>\n<p>Refining image recognition to work for all resolutions and to work faster.\nRefining data analysis methods and database building to provide more accurate data and to ensure best build paths are given.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/linode\">linode</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag\">.tech</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/riot-games\">riot-games</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://freelo.tech/\" rel=\"nofollow\" target=\"_blank\" title=\"http://freelo.tech/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>freelo.tech</span>\n</a></li>\n<li><a href=\"https://github.com/deltice/freelo-builds\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/deltice/freelo-builds\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Watchr", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Watchr \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/391/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Watchr \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/393/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Watchr \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/394/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Watchr \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/390/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Watchr \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/392/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Watchr \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/412/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Watchr \u2013 screenshot 7\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/501/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Watchr \u2013 screenshot 8\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/526/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Watchr \u2013 screenshot 9\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/529/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>In light of recent events such as the Paris, Brussels and Lahore attacks, people are uneasy about crowded public spaces. Having watched a few interviews after the Brussels incident and noticed that most people did not know how to react in such situations. Watchr is a web application which uses connected mobile devices to gather information on a wi-fi network. The mobile application component is mostly a background service (to collect data on surroundings) with simplistic UI which allows simple messages to be transmitted to said devices (such as evacuation instructions). </p>\n<h2>What it does</h2>\n<p>Watchr uses the often publicly available wi-fi in crowded spaces in order to connect mobile devices to security authorities. Watchr runs in the phone's background and tracks the device's location as well as the nearby sound levels. Watchr uses spikes in ambient noise to identify suspicious activity and determines their coordinates using an adapted algorithm of the inverse square law for sound. The web application displays the coordinates of all devices connected to the wi-fi network and the coordinates of suspiciously loud noises on a map. From the browser, security authorities are able to send alerts such as evacuation directives (route optimized by the device's coordinates) to each connected device.</p>\n<h2>How we built it</h2>\n<p>By leveraging the power of friendship.</p>\n<h2>Challenges we ran into</h2>\n<p>Aggregating and synchronizing data from multiple sockets and namespaces, understanding wave physics academic papers, and pinpointing sound origin locations using relative distance, sound levels and approximations.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Figured out how to aggregate data from multiple sockets (by also using REST), greatly limiting false positives of suspicious activities (by setting tested thresholds)</p>\n<h2>What we learned</h2>\n<p>Teamwork, delegation, sockets and synchronizing sockets, sound intensity drops by 6dB when the distance from the source doubles.</p>\n<h2>What's next for Watchr</h2>\n<p>Refining our sound pinpointing algorithm, optimizing evacuation route pathing, predictive analysis.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/socket-io\">socket.io</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/marwanad/Watchr\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/marwanad/Watchr\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/lucyyu24/cassandre-server\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/lucyyu24/cassandre-server\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the front end of the web component and the design and geolocation aspects of the android app. ", "Worked on the server and sockets, as well as Google Maps integration for the front end visualizations", "", ""]], ["Cliqur", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Cliqur \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/867/datas/gallery.jpg\"/>\n<p>\n<i>Splash-page</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Cliqur \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/916/datas/gallery.jpg\"/>\n<p>\n<i>Interface 1</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Cliqur \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/915/datas/gallery.jpg\"/>\n<p>\n<i>Interface 2</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Cliqur \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/914/datas/gallery.jpg\"/>\n<p>\n<i>Interface 3</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Cliqur \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/913/datas/gallery.jpg\"/>\n<p>\n<i>Interface 4</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Cliqur \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/917/datas/gallery.jpg\"/>\n<p>\n<i>Interface 5</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Cliqur \u2013 screenshot 7\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/918/datas/gallery.jpg\"/>\n<p>\n<i> Interface 6</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Cliqur \u2013 screenshot 8\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/920/datas/gallery.jpg\"/>\n<p>\n<i> Interface 7</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Cliqur \u2013 screenshot 9\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/935/datas/gallery.jpg\"/>\n<p>\n<i> Interface 8</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Cliqur \u2013 screenshot 10\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/919/datas/gallery.jpg\"/>\n<p>\n<i> Interface 9</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Cliqur \u2013 screenshot 11\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/926/datas/gallery.jpg\"/>\n<p>\n<i> Interface 10</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Cliqur \u2013 screenshot 12\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/921/datas/gallery.jpg\"/>\n<p>\n<i> Interface 11</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Cliqur \u2013 screenshot 13\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/936/datas/gallery.jpg\"/>\n<p>\n<i> Interface 12</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Cliqur \u2013 screenshot 14\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/925/datas/gallery.jpg\"/>\n<p>\n<i> Interface 13</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Cliqur \u2013 screenshot 15\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/932/datas/gallery.jpg\"/>\n<p>\n<i> Interface 14</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Cliqur \u2013 screenshot 16\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/922/datas/gallery.jpg\"/>\n<p>\n<i> Interface 15</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Cliqur \u2013 screenshot 17\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/937/datas/gallery.jpg\"/>\n<p>\n<i> Interface 16</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Cliqur \u2013 screenshot 18\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/923/datas/gallery.jpg\"/>\n<p>\n<i> Interface 17</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Cliqur \u2013 screenshot 19\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/934/datas/gallery.jpg\"/>\n<p>\n<i> Interface 18</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Cliqur \u2013 screenshot 20\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/924/datas/gallery.jpg\"/>\n<p>\n<i> Interface 19</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>Cliqur (Pronounced \"Clicker\")</h1>\n<p>The original intention of building this web app was derived from our own experiences when sitting in a large classroom. It is difficult enough to communicate with the lecturer when there's more than thirty people sitting in the room, it is almost impossible when the classroom size </p>\n<h2>Inspiration</h2>\n<p>The inspiration came from the difficulties of communicating with the professors in a large classroom setting. While many classrooms may choose to use clickers as temporary solutions, they prove to be highly inefficient and expensive to replace. Thus, came the idea of building a modern and innovative solution for millions of students across the world.</p>\n<h2>What it does</h2>\n<p>Cliqur allows instructors to create virtual sessions and invite students to participate in the session with an unique session ID. Students are able to ask questions, input multiple choice responses and visualize the results of the classroom performance. On the other hand, instructors can take advantage of our neat attendance verification system, which lets the instructors print out a pre-formatted attendance sheet with accurate record of attendance for that session. </p>\n<h2>The \"Push\" and Clicker</h2>\n<p>Another main component of Cliqur was to completely redesign the clicker used in classrooms all over the world. Everyone carries an iPhone, laptop, tablet, etc. which allows for a wide array of applications that are curated to serve the user. Cliqur works together with the professor through an web interface and allows real-time opinion based response methods. \n\"Push\" was a feature that we really wanted to push above and beyond. Cliqur is made up of three basic \"screens.\" A student can \"Push\" a question to the professor, the professor can then choose to \"Push\" the question (on an administrative level) and display it publicly on a projector with a simple \"Push\" of a button.\nCliqur hopes to revolutionize the way you ask questions, voice opinions, and interact in a classroom all with a simple push.</p>\n<h2>How it was built</h2>\n<p>Cliqur was primarily built on Meteor stack. The front-end was created using HTML, CSS, and JS.</p>\n<h2>Challenges we ran into</h2>\n<p>A major challenge we faced was learning something completely new to us. Meteor was something new to all of us. We had developed applications using PHP and Python as backends but nothing like that of Meteor. \nWe faced many sleepless nights, two of our back-end developers only slept 2 out of the 36 hours because of the urge to keep learning and of course finishing the project. Meteor is an incredible framework and allows for a wide-array of useful tools as well as really pushes the limits of development on both ends.</p>\n<h2>What we learned</h2>\n<p>We learned that learning a new language and really starting fresh at a Hackathon is a tough task but is well worth it in the long run. We pushed ourselves to really learn the language, express it, and create something that we hope everyone will enjoy.</p>\n<h2>What's next for Cliqur</h2>\n<p>Incorporating more features as time progresses as well as a larger user base. We hope to have messaging, file transferring, and quick and easy remote voice conferences with a push of a button.</p>\n<hr/>\n<h2>Support &amp; Documentation</h2>\n<p>Meteor documentation can be found at <a href=\"http://docs.meteor.com/\" rel=\"nofollow\">http://docs.meteor.com/</a></p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/coffeescript\">coffeescript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/meteor-js\">meteor.js</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/NatanTechofNY/Cliqur\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/NatanTechofNY/Cliqur\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"http://cliqur.com\" rel=\"nofollow\" target=\"_blank\" title=\"http://cliqur.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>cliqur.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the backend as well as cleaned up and helped with front end development. ", "I worked on front end development and design ", "Oversaw development. Worked on the back-end and the front-end rendering from data sent from the server.", "I initiated and oversaw the project as well as steered the team to push out a MVP."]], ["Meme Dreams", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Snapchat is one of the most popular apps on the store today. Regardless of what phone you use, you\u2019ve either used it or heard of it. There\u2019s one crucial aspect that this app is missing, something that our team hopes to fulfill - memes. </p>\n<h2>What it does</h2>\n<p>It turns you into a meme by utilizing the iPhone\u2019s camera and face recognition API.</p>\n<h2>How we built it</h2>\n<p>We used the Swift 2 language using the Xcode IDE along with the AVFoundation framework.</p>\n<h2>Challenges we ran into</h2>\n<p>Formatting was a big obstacle in our app. There were many icon assets that we had to fit on a small screen. Also, there many constraints that came with each asset which made it a little confusing. Furthermore, we had to find ways to </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>The debugging process itself yielded many accomplishments. As two of three in the team are new hackers, just fixing the logical errors we had in the app felt very rewarding. As we were unfamiliar with the AVFoundation framework, navigating through obscure documentation was an adventure in itself.</p>\n<h2>What we learned</h2>\n<p>That people can in fact, be the memes they dream to be. Also, we learned much more about using Swift frameworks and phone functionalities.</p>\n<h2>What's next for Meme Dreams</h2>\n<p>A golden age for the memelennials. Our team believes that a community submitted database of the latest memes could possibly be a huge breakthrough for the future of humanity.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://www.github.com/jamesw8/memedreams.git\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.github.com/jamesw8/memedreams.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Snooze Wars", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>There are a lot of apps that try to motivate you to stay away from your snooze button to promote wakefulness, and none of them seem to have gained any traction, so we wanted to put our spin on it.</p>\n<h2>What it does</h2>\n<p>The app pairs two users who set alarms for the same time so that when one user snoozes their alarm, the other's alarm goes off and vice versa. The back-and-forth snoozing ends with one user declared the \"winner\" after snoozing a certain number of times.</p>\n<h2>How we built it</h2>\n<p>We made an Android app, with a Python server script back-end to manage pairing users</p>\n<h2>Challenges we ran into</h2>\n<p>Our team had limited experience with back-end programming and working with Android, so almost every feature added took a substantial amount of time to implement.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Everything. We all learned new skills and made a product that we think looks pretty good.</p>\n<h2>What's next for Snooze Wars</h2>\n<p>Integrating with social media to challenge friends would be a good next step.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/AdamHe17/SnoozeWars.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/AdamHe17/SnoozeWars.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I jumped between working with the app and working with our back-end scripts.", "Developed the functional alarm application using Android Studio that was linked with the back-end python system.", "", ""]], ["Get With the Program", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>tl;dr Suzhen wanted to make a dating sim with programming languages and fun coding challenges. But there wasn't a lot of time, and coding is hard.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/matlab\">matlab</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://drive.google.com/folderview?id=0ByW4bx_8AfPFRU1vMy1QNkdfT2s&amp;usp=sharing\" rel=\"nofollow\" target=\"_blank\" title=\"https://drive.google.com/folderview?id=0ByW4bx_8AfPFRU1vMy1QNkdfT2s&amp;usp=sharing\">\n<i class=\"ss-icon ss-link\"></i>\n<span>drive.google.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I wrote the dialog and coding questions to be used. ", ""]], ["Rocket Wee", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Rocket Wee \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/266/datas/gallery.jpg\"/>\n<p>\n<i>Default Screen</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Rocket Wee \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/282/datas/gallery.jpg\"/>\n<p>\n<i>Sketch!</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>I love drawing.</p>\n<h2>What it does</h2>\n<p>This allows the the user to choose different drawing colors and clear the board.</p>\n<h2>How I built it</h2>\n<p>I used demos on Youtube to learn the basics of Swift as well as the framework for this project.</p>\n<h2>Challenges I ran into</h2>\n<p>I was challenged by learning about constraints.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I am proud that this app is calibrated for any Mac device.</p>\n<h2>What I learned</h2>\n<p>I learned the basics of Swift!</p>\n<h2>What's next for Rocket Wee</h2>\n<p>I will be working on different background colors and different colors colors on the same screen.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li></ul>\n</div>\n</div>", [""]], ["CanMan", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Fill in later...</p>\n<h2>What it does</h2>\n<h2>How I built it</h2>\n<h2>Challenges I ran into</h2>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<h2>What's next for CanMan</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li></ul>\n</div>\n</div>", [""]], ["TheVRGameWithNoName", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>As we are all first time hackers we were mainly interested in working with new technology we normally can't get our hands on. Our goals were to learn something new and let our curiosity for computer science run wild! </p>\n<h2>What it does</h2>\n<p>Users are able to immerse themselves into Virtual Reality with limited equipment.</p>\n<h2>How we built it</h2>\n<p>We attached a Leap Motion Sensor to the Oculus dk2  headset to eliminate keyboard control and instead utilize hand motion. To build the program we used Unity3D. </p>\n<h2>Challenges we ran into</h2>\n<p>Every step of this project was a new challenge as we have never worked with this technology and software before. We continuously had to search for tutorials and the most efficient way to accomplish what we envisioned. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are all very proud that in such a short amount of time we were able to learn entirely new hardware and software. We arrived at HackPrinceton eager for a learning experience and we accomplished just that even if our program isn't polished or fully functional. </p>\n<h2>What we learned</h2>\n<p>Through countless amounts of trial and error, we learned how to use the Oculus dk2, Leap Motion Sensor, and Unity3D </p>\n<h2>What's next for TheVRGameWithNoName</h2>\n<p>Being such a simple game, we can build and build on it. We thought of an extensive amount of cool and innovative features that we had to scale back due to the time constraint and lack of experience. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/oculus\">oculus</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/leap-motion\">leap-motion</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li></ul>\n</div>\n</div>", ["", "", ""]], ["Wheel of Torture", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Wheel of Torture \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/265/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Wheel of Torture \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/310/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Wheel of Torture \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/329/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>Behold the Wheel of Torture!\nEver felt yourself procrastinating ALL your work? Ya same.</p>\n<p>Well, worry not! Wheel of Torture provides a dynamic (and fun) way to get your life together. \nSimply add the tasks on your agenda to the pretty list (#tableview #iOSstuggles) and their priorities. Add as many as you please. We may or may not judge you. </p>\n<p>THEN we will synthesize your life stuggles into a pie chart. And THEN (drumroll plz) you get to spin the Wheel of Torture (read: Fortune).</p>\n<p>Spin away, friends!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ios\">ios</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xcode\">xcode</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/christinaahuang/wheel\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/christinaahuang/wheel\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["The Lockness Monster", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"The Lockness Monster \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/315/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"The Lockness Monster \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/316/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>After facing the continuous problem of losing our bicycle lock keys and forgetting the combinations, The Lockness Monster was born. While keys and locker combinations are easily misplaced or forgotten, smartphones, due to their widespread use and mass appeal are much less likely to be lost. Even if lost, these phones are easily found with the new GPS technologies. Realizing the power of these devices, we pursued a solution using the new IoT technologies.</p>\n<h2>What it does</h2>\n<p>Currently, we have a prototype capable of locking and (almost) unlocking a bicycle. It uses a third-party app, available for iPhone and Pebble to provide seamless lock and unlock of use bicycles. </p>\n<h2>How we built it</h2>\n<p>In theory, the idea of a \"smart\" bicycle lock is easy as it is just a locking mechanism combined with a circuit board to eliminate user input. However, it is much more complicated than that as many specific parts are needed. For our project, we used an Electric Imp IoT kit, 3D printed parts, motors, and a variety of different electrical tools to build the physical device. The motors and power supply connected to the Electric Imp kit so we could use internet capable devices to control the enabling of these devices. To physically construct the lock, we used 3D printed parts that we CAD-ed ourselves. In the end, we combined both the 3D parts and the IoT parts to create a functioning lock. On the software side, we used Squirrel, Swift, and Javascript to build the backend, an iPhone app, and a Pebble app. </p>\n<h2>Challenges we ran into</h2>\n<p>Throughout the entire process, we were burdened with new challenges. First, it was with the 3D printed parts as we didn't know if it was viable to expect them to finish within a day, but we lucked it out! We had issues with circuitry, physical connections, hardware choices, but step-by-step everything slowly came together. In the last hours, we ran into issues with our main motor which turned out to have a huge resistance, and making out project unworkable. However, by the end, we were able to take apart a few motors and fix our lock!</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are hugely proud of getting through the different challenges we faced on every step, whether mechanical, electrical, or programmatic. And, we are proud of working as a team to make something cool!</p>\n<h2>What's next for The Lockness Monster</h2>\n<p>Bicycles are just the start. We plan for different applications for the Lockness Monster in the home, the car, and maybe one day, even your space ship!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/electric-imp\">electric-imp</a></span></li><li><span class=\"cp-tag\">super-glue</span></li><li><span class=\"cp-tag\">electric-tape</span></li><li><span class=\"cp-tag\">lead-(with-tin-mixed-in)</span></li><li><span class=\"cp-tag\">motor</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/mayankmmmx/The-Lockness-Monster\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/mayankmmmx/The-Lockness-Monster\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["LikeFund", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"LikeFund \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/530/datas/gallery.jpg\"/>\n<p>\n<i>Overview</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"LikeFund \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/542/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"LikeFund \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/543/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"LikeFund \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/544/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>\u201c1 Like = $1 Donated to Charity.\u201d Everyone has seen these viral posts on their newsfeeds with pictures of sick children or the aftermath of a natural disaster, and many of us are even guilty of believing that our social media efforts are capable of raising more than awareness. We\u2019d all love to donate to a good cause, but few of us are willing to go out of our way to do so. Now with LikeFund, you don\u2019t have to.</p>\n<p>LikeFund makes charity a part of your daily routine by putting charitable opportunities right in your newsfeed and sending the organization a microdonation of just a few cents from your checking account with each \u201cLike\u201d. These microdonations are so small that you won\u2019t have to think twice before donating, but for a viral post with millions likes, they can add up to hundreds of thousands of dollars!</p>\n<p>In recent years, it\u2019s hard to find anyone who hasn\u2019t seen something go viral on the internet. These instances can range from funny clips of animals to important information regarding the state of the world we live in. We\u2019ve all seen the power of awareness - just knowing of the suffering around the world can change the way a person or a nation makes choices. In many cases, people may want to help but aren\u2019t comfortable enough make a call and donate to charities even if they support a cause. We wanted to make it so that (useful) viral information does more than just make people aware, but also gives them an accessible way of providing tangible aid to people in need. </p>\n<h2>What it does</h2>\n<p>Allows Facebook users to actually donate a small amount of money along with liking a post - to give instead of show support to those in need around the world.</p>\n<h2>How we built it</h2>\n<p>We built the project as a Google Chrome extension.</p>\n<h2>Challenges we ran into</h2>\n<p>Most of the major issues we ran into involved the security constraints of Chrome extensions. We originally wanted to incorporate more technologies into the extension for both processing and data visualization, but we after hours of trying to find workarounds to the constraints we finally decided to scale back. In some cases this introduced the need to rework a large portion of our plans, since we were no longer able to make use of core APIs like the Facebook and Google Maps interfaces.</p>\n<h2>Accomplishments that we're proud of</h2>\n<h2>What we learned</h2>\n<p>A lot about web development and practical programming including how to use NoSQL databases such as Firebase, how to utilize a financial API like Captial One\u2019s Nessie, and much more.</p>\n<h2>What's next for LikeFund</h2>\n<p>We think that LikeFund is definitely an idea that can take off. The next steps for LikeFund would be to work with Facebook to integrate the extension with their site, rather than scraping information from the HTML and building on top of it. This way, we would be able to show users charities most relevant to them the same way Facebook shows users relevant ads. These native charitable opportunities would be more seemlessly integrated into a user\u2019s Facebook newsfeed.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/chrome\">chrome</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/kevkloud/Like2Fund\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/kevkloud/Like2Fund\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Designed UI/UX ", "", "", ""]], ["Intersect", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Intersect \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/007/datas/gallery.jpg\"/>\n<p>\n<i>Home page</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Intersect \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/008/datas/gallery.jpg\"/>\n<p>\n<i>Hover over menu</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Intersect \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/011/datas/gallery.jpg\"/>\n<p>\n<i>List of events</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Intersect \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/015/datas/gallery.jpg\"/>\n<p>\n<i>Event page</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Intersect \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/032/datas/gallery.jpg\"/>\n<p>\n<i>Social networking feature</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Intersect \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/034/datas/gallery.jpg\"/>\n<p>\n<i>Communicating with other user</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Meeting new people can be difficult when moving to a new area. Organizing activities can be a hassle when a social circle is limited and schedules conflict. We aim to help people become more socially active in their area through creating activities for them based on similar interests and schedules.</p>\n<h2>What it does</h2>\n<p>Intersect uniquely creates and organizes events for users based on similar time preferences, budgets and interests. Once events are created, targeted users are invited to those events. </p>\n<h2>How I built it</h2>\n<p>We used Node, AngularJS , Ionic framework, Firebase and Github in the profes. It was our first time using these technologies hence we had a great deal of struggle to build our app. \nFirst we focused on the UI to help us visualize the layout of the app. Our next goal was to populate every page and make them function properly; we achieved that by dividing tasks amongst the team. Then we focused on collecting data from users i.e. sign up, preferences etc. and finally merged everything together to build the app.  </p>\n<h2>Challenges I ran into</h2>\n<p>The first and foremost challenge was incorporating multiple technologies into the project; we had not previously had much experience with Ionic framework or Firebase. Collaboration was another roadblock because the app has many dependencies; dividing work between working on different pages was quite challenging. Thirdly, it was a challenge to design the pages in the app to be responsive enough to support hybrid (mobile and web app) platforms. We were fairly successful in leveraging Ionic framework for this. Due to its\u2019 asynchronous nature, the Facebook login was a challenge to implement as well.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>The Facebook login works successfully. Our web app is responsive and has a fairly modern design \u2013 it can be ported to mobile (Android, iOS) as well. Furthermore, the form on the settings page is able to retrieve all relevant user data for passing into our Firebase instance. We\u2019re happy with our progress considering the 36 hour time constraint and about the fact that we attended HackPrinceton.</p>\n<h2>What I learned</h2>\n<p>The ionic framework is a powerful tool to create quick and easy mobile web apps - perfect for a short development period such as this. It is easy to test and run the app on a local server with live updates, as well as port the app to a native device for further testing. AngularJS is an effective framework that allowed us to create a smooth transitioning web app. CSS libraries - such as Materialize - provided visually appealing and easy to implement components, further accelerating the front end design process so we could focus on back end functionality.</p>\n<h2>What's next for Intersect</h2>\n<p>Rewriting the app as a native application for both iOS and Android to take advantage of native app's memory access, caching, interactional, and offline capabilities.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/angular-js\">angular.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/github\">github</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ionic\">ionic</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/facebook-graph\">facebook-graph</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/facebook-login-api\">facebook-login-api</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://devinheld.github.io/princetonhack/www/index.html#/app/home\" rel=\"nofollow\" target=\"_blank\" title=\"http://devinheld.github.io/princetonhack/www/index.html#/app/home\">\n<i class=\"ss-icon ss-link\"></i>\n<span>devinheld.github.io</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["It was my idea :-)", "I set up the Facebook login functionality. Also I contributed to hooking up Firebase to the Angular controllers. In addition, I helped with responsive UI design and app routing configuration. ", "I set up the base ionic application for development, wrote the majority of the front end and controller code, and set up the FireBase database."]], ["WhichWolf", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"WhichWolf \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/284/datas/gallery.jpg\"/>\n<p>\n<i>Which Wolf</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"WhichWolf \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/285/datas/gallery.jpg\"/>\n<p>\n<i>NoSeeWolf</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Imagine. You are out exploring the wilderness when suddenly you hear a noise in the distance. You quickly turn around to see a large harry humanoid creature come bounding out of the forest! You knew it! The sasquatch was real! You quickly pull out your phone to snap a photo but you only manage to get a blur of the elusive beast. You show the picture to your friends but surprisingly you are met with mockery. You are furious! You knew you are right but you had no way to prove yourself! If only there was a way...</p>\n<h2>What it does</h2>\n<p>No longer will you live in doubt of what is around you. With Which Wolf, you are able to take a photo and quickly identify a type of animal and pull relevant data which would then be dictated. Its main purpose is to allow younger children who are not capable of reading to easily take a picture of an interesting animal around them and be entertained. This is mainly a learning tool for young audiences but is also helpful for flora and fauna enthusiasts.</p>\n<h2>How I built it</h2>\n<p>Our team used an Android application to take pictures. This picture would then be uploaded to our server for later use. Then, using the Wolfram Cloud API, we would use those photos and run them against their image search algorithm. Wolfram would then send back relevant information back to the Android app via json.</p>\n<h2>Challenges I ran into</h2>\n<p>We couldn't authenticate ourselves in the anime server provided to our very accommodating sponsors :(.\nCouldn't directly send an image to Wolfram Cloud, had to take a back-route.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We learned how to make an android app in one day and we got the anime server running :).</p>\n<h2>What I learned</h2>\n<p>Backend really toasted me in the backend</p>\n<h2>What's next for Which Wolf</h2>\n<p>Animals are only the beginning for Which Wolf. We plan to expand into everyday objects such as identifying types of cars to different types of drinks. One day, you could walk into an Ikea and correctly identify a POANG from a EKTOROP. The possibilities are endless. Papa Bless.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ubuntu\">ubuntu</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/apache\">apache</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/wolfram-technologies\">wolfram-technologies</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xml\">xml</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/ushalin/HackPrinceton\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ushalin/HackPrinceton\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["NASDANK", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"NASDANK \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/089/datas/gallery.jpg\"/>\n<p>\n<i>A continuously updating graph of drug prices that is filtered and sorted by type, quantity and quality</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"NASDANK \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/090/datas/gallery.jpg\"/>\n<p>\n<i>Cover page to introduce our site's purpose to the user in a seamless and responsive way.</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>We all understood the contentious but popular view that legalizing certain drugs, such as marijuana, in some states would make it safer for people to consume it because they would not have to resort to illicit or lucrative measures and put their physical and mental health in danger. Knowing this, we thought it would be an interesting project to be able to provide the statistics of legislative and social impact on drug demand and </p>\n<p>Our tool is a web app that provides statistical information about fluctuating drug prices on the dark net market. We compiled day-to-day information in the form of live \u201cstock market\u201d-like updates by using bot crawlers to scrape prices, types, quantity and quality. </p>\n<p>In order to make this web app, we used our past knowledge and learned about web dev, regex, MySQL databases, page scraping, bypassing CAPTCHA codes, web servers, etc. We definitely had challenges bypassing CAPTCHA codes in order to get the data we needed, and then we also had to learn how to create a database and graph the data. </p>\n<p>Our tool has future implications as an informative resource of statistical data. For example, if a certain state cracks down on the sale and purchase of a type of drug through legislation or if a certain drug becomes more popular, users will be able to track the effects of that on our site and use the data proactively. As a resource for the public, people in government and economics seeking to implement social changes will be able to use this data.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php5\">php5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mysql\">mysql</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/LetheNull/NASDANK\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/LetheNull/NASDANK\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"http://www.nasdank.tech/website/\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.nasdank.tech/website/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.nasdank.tech</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Wrote the back-end. ", "", ""]], ["FaceBot", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"FaceBot \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/204/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"FaceBot \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/207/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Our Inspiration</h2>\n<p>Facebook Messenger chats are a convenient and popular way to keep in touch with your friends, family, and peers. However, unlike other messaging apps, Facebook chats aren't very customizable. Users can't add custom commands or create chat bots to execute special instructions (unlike, for example, Slack). All that changes now.</p>\n<h2>Our Goal</h2>\n<p>We aim to change the way the average person communicate over Facebook. Instead of the boring, regular Facebook chats of old, people will now be able to create chat bots to enhance their chat experience. These bots will allow users to execute a wide range of customizable commands, from checking stock prices to turning on their lights.</p>\n<h2>What It Does</h2>\n<p>Our platform lets users easily create a new Facebook chat bot and add any desired commands they wish their bot to support. First, the user will create a new Facebook account that will be used by the bot. This is the account the user will later add to their Messenger chats. Then, the user will add the desired chat modules to that bot. They can even create custom commands using HTTP GET requests. Then, you're done!</p>\n<h2>How We Built It</h2>\n<p>Our hack is an <a href=\"http://expressjs.com/\" rel=\"nofollow\">Express.js</a> app. We used <a href=\"https://www.npmjs.com/package/facebook-chat-api\" rel=\"nofollow\">facebook-chat-api</a> to monitor the users' Facebook messages and interpret them as commands for our bots. We incorporated some built-in recipes using API's from Google News, Yahoo Weather, and IBM's Alchemy (for sentiment analysis).</p>\n<h2>Challenges We Ran Into</h2>\n<p>OAuths for Facebook and Twitter were tough to get working, but once we did, it greatly enhanced the app's functionality and versatility.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag\">squirrel</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/electric-imp\">electric-imp</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ejs\">ejs</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/oauth\">oauth</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/abhisuri97/facebook-bot-maker\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/abhisuri97/facebook-bot-maker\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"http://evening-stream-79023.herokuapp.com/\" rel=\"nofollow\" target=\"_blank\" title=\"http://evening-stream-79023.herokuapp.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>evening-stream-79023.herokuapp.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Backend and Frontend and added ability for users to specify their own actions. Worked with Express, Node, Passport, and several APIs to make this happen. Reverse engineered Messenger endpoints to receive data.", "Provided built-in Facebook chat bots such as /weather, which gives you the weather in your current city, and /sentiment, which analyzes previous messages for connotation.", "", ""]], ["GestureLead", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"GestureLead \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/114/datas/gallery.jpg\"/>\n<p>\n<i>Fist</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"GestureLead \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/144/datas/gallery.jpg\"/>\n<p>\n<i>Center Fist Gesture</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"GestureLead \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/196/datas/gallery.jpg\"/>\n<p>\n<i>Up Open Hand Gesture</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>GestureLead</h1>\n<p>_Created by Andrew Wang , Chetan Velivela, Jeff Alvarex, Dominic Reid</p>\n<h2>Inspiration</h2>\n<p>Those that work in the line of action when working with others must often use gestures to communicate as sound could give away their location or if there are loud background noises that make it hard to hear others talking. By using gestures to communicate hands are also kept free so that engagement is easy if an unexpected situation arises (E.G. if an unexpected enemy soldier suddenly appears). By creating a gesture to sound program this communication is made more efficient as it is not necessary to be able to see the gestures (can be long distance away or behind physical obstructions) and it is not necessary to focus on the hands of the gesturer so that those listening can be more aware of their surroundings.</p>\n<h2>What it does</h2>\n<p>It uses the capabilities of the myo armbands to read any gestures that are made and then a python program utilizes a text to speech library to convert each gesture to a command sound that is stored in a text file. Pre-made text files for various occupation classes can be downloaded through our website so that the output sound for each gesture can be changed. Custom classes can also be created from our website so that the user can decide exactly what sound output they want for each of the recognizable gestures (other than unlocking and locking the myo which we have set to down fist and down open hand).</p>\n<h2>How we built it</h2>\n<p>Using the python library for myo we created the parameters for each command and then used the text to speech library gTTS to create a mp3 of the sound that should be generated for each of the commands. The website contains premade txt files that represent a usage class and custom txt files can be made that contain commands for each supported gesture. The python file calls that txt file when it must generate each sound.</p>\n<h2>Challenges we ran into</h2>\n<p>Creating the parameters for each gesture on the myo was quite difficult as was reading through the documentation for utilizing python with myo.</p>\n<h2>Accomplishments that we are proud of</h2>\n<p>Creating the parameters for each gesture correctly and enabling the user to be able to create custom sounds for each gesture.</p>\n<h2>What we learned</h2>\n<p>How to utilize the data from myo in python and how to subsequently create a sound event for each instance of a gesture.</p>\n<h2>What's next for GestureLead</h2>\n<p>Creating more recognizable gestures and building an iOS app that can connect to myo and generate sound for each gesture and can also assign custom sounds to be played at each gesture.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/myo\">myo</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/qema/gesture-sound\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/qema/gesture-sound\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"http://wanganzhou.com/gesturelead\" rel=\"nofollow\" target=\"_blank\" title=\"http://wanganzhou.com/gesturelead\">\n<i class=\"ss-icon ss-link\"></i>\n<span>wanganzhou.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["GetFlocked", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Well we had a Twitter API that we really wanted to base our project around, and something about Capital One's API stood out to us.</p>\n<h2>What it does</h2>\n<p>Connects consumer twitter accounts and banking accounts to detect potential fraud transactions occurring on the users bank account. </p>\n<h2>How we built it</h2>\n<p>The Nessi API provides us with Customer Names and Banking Accounts, and from there we added to the API producing a fake phone number, twitter account, and status of the account. Based on that we check the location of their most recent tweet and then compare it to the location of the transaction. If the two don't correspond within a parameter of time and distance, using Twilio's API a text is sent to the bank account owner alerting them of the transaction at which they can reply yes and continue with their banking experience or click no and have their bank account frozen and fraud department alerted. </p>\n<h2>Challenges we ran into</h2>\n<p>Well the Nessi API didn't provide much information so we had to create our own purchases, transactions and other consumer information. Along with the connection of all the different ends of the projects.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are proud of the entire project, the team members were great and it was a fun time for everyone.</p>\n<h2>What we learned</h2>\n<p>We learned how to use .json file. We learned to work as a team better, how to incorporate everyone's ideas without having anyone felt under appreciated.</p>\n<h2>What's next for getflocked</h2>\n<p>Incorporate other social media/factors to determine potential fraud. To pivot towards a mobile app versus text notifications, due to the fact that most fraud occurs over seas and thus consumers might not always have cellular service.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php5\">php5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/phpmyadmin\">phpmyadmin</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mysql\">mysql</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twitter\">twitter</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag\">nessi</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/photoshop\">photoshop</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag\">junit</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/AtotheY/Lockation.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/AtotheY/Lockation.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I created the website's back-end using PHP, MySQLi, phpMyAdmin.", "Worked with CapitalOne API Nessie. Created a Java program that can extract info from Nessie into Java objects and push info onto Nessie.", "I worked mostly with the different API calls such as Twilio, Twitter, and Capital One's Nessie. I also worked on server development, as well as putting all the modules together.", "I created the website's front-end using HTML, Bootstrap, CSS, Adobe Photoshop, and Adobe Illustrator."]], ["Filmein", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Filmein \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/216/datas/gallery.jpg\"/>\n<p>\n<i>Facebook login</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Filmein \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/217/datas/gallery.jpg\"/>\n<p>\n<i>Main/Login page</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Filmein \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/218/datas/gallery.jpg\"/>\n<p>\n<i>Main menu</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Filmein \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/231/datas/gallery.jpg\"/>\n<p>\n<i>Sample profile with movies and analytics chart</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Filmein \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/232/datas/gallery.jpg\"/>\n<p>\n<i>Main menu with additional icons</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Filmein \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/233/datas/gallery.jpg\"/>\n<p>\n<i>Sample movies populating the tiled areas of the screen</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Last.fm and other social media websites that analyze what you (and plausibly your friends) like to do for entertainment and the trends with which you do so. Our inspiration was almost entirely to do this on the analysis of which movies the person (and his Facebook friends) have watched, enjoy watching, and would like to watch in order to better understand what kind of person they truly are.</p>\n<h2>What it does</h2>\n<p>It scrapes data on movies from relevant movie database APIs, parses said data, and organizes it into tiled regions at the user's will. The app also primarily relies on the user's Facebook profile to parse the data on what movies they have watched and what movies they may watch in the future. Due to this \"predictability\" engine, there is a high degree of statistical inference going into the project and shows some great promise on the front of data mining and clustering techniques, were we to take it further in development.</p>\n<h2>How I built it</h2>\n<p>We first built the UI and molded the idea of how the idea and proof of concept would work. Next, we introduced ourselves to the APIs relevant to this project (Facebook, The MovieDatabase, OMDb, etc.) and saw what types of things we could create and build upon from there. With that, we set upon coding and experimented with many different ways of doing things and learning more about Angular.js, which we came to rely upon heavily in this competition.</p>\n<h2>Challenges I ran into</h2>\n<p>The Facebook API was sometimes very burdensome and hard to understand. Building a responsive UI was also quite challenging to do with all of the backend processing we had to perform in tandem. In addition, the requirement of many different platforms working together was daunting as well and fluidity could not easily be reached due to the amount of tasks we wanted our app to perform. However, I would say overachieving or being overambitious were not challenges in this project in the least, which may appear somewhat surprising.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We finished the majority of our final goals in the end and surpassed our initial expectations by far. I am proud of how quickly we could do things that we thought would take us much longer to accomplish, such as the UI and integration with different APIs.</p>\n<h2>What I learned</h2>\n<p>Many, many things. We learned a lot of new things about JavaScript (especially Angular.js) and developing a medium-sized, API dependence-heavy application with a novel approach to entertainment. We learned also how to better collaborate with using Git (most of the team had never done a project with 4 people on one repository) and produce efficient commits, pushes, and pulls to better serve us.</p>\n<h2>What's next for Filmein</h2>\n<p>Keep customizing and producing new features. First will be further integration with Facebook, including integration with friends lists and comparisons of what and how many movies are seen of each director, genre, etc. After that, we intend to perhaps branch into different spheres of personal data analysis as well.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/angular-js\">angular.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/SheynD/HackPrincetonSP2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/SheynD/HackPrincetonSP2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Love.ly", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Love.ly \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/198/datas/gallery.jpg\"/>\n<p>\n<i>Landing page</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Love.ly \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/199/datas/gallery.jpg\"/>\n<p>\n<i>Dashboard</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Love.ly \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/201/datas/gallery.jpg\"/>\n<p>\n<i>Contact Addition</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>In a world where being friends isn't what it used to be, people tend to lose touch with their closest friends and family.  We created Love.ly to help people communicate with the people that want to connect with the most, but keep forgetting or putting it off. </p>\n<h2>What it does</h2>\n<p>Love.ly is a personal relationship management platform (PRMP).  It is an easy way to manage the connections you care most about.</p>\n<h2>How we built it</h2>\n<p>We used Flask for the server.\nHTML, CSS, and JavaScript for the front-end.\nMongoDB for the back-end.</p>\n<h2>Challenges we ran into</h2>\n<p>Learning new technologies like databases. UI and UX decisions.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>The amount of polish and functionality we managed to create for a product in such a short amount of time.</p>\n<h2>What we learned</h2>\n<p>The technology needed to create a web app from scratch from front to back.</p>\n<h2>What's next for Love.ly</h2>\n<p>We plan on pitching the idea to venture capitals and receive funding.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag\">full-stack</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/shnidly/lovely\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/shnidly/lovely\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", "", ""]], ["Sign Language Interpreter", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<h2>What it does</h2>\n<p>When a gesture is performed, raw EMG and accelerometer data is collected using a Myo armband, passed through digital filtering, and fed to an Azure-based supervised machine learning algorithm. After a large set of sample data, the algorithm is able to predict the identity of a gesture based on it's EMG and accelerometer signature. This allows for custom Myo gestures to be created. </p>\n<p>We trained the armband by repeatedly performing American Sign Language gestures on it hundreds of times. After the training stage, the armband recognized gestures with 80% accuracy. </p>\n<h2>How I built it</h2>\n<h2>Challenges I ran into</h2>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<h2>What's next for Wearable Machine Learning Sign Language Translator</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/machine-learning\">machine-learning</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/azure\">azure</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/myo\">myo</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li></ul>\n</div>\n</div>", ["", "", ""]], ["DisVis", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>Data visualization effort using Python's bokeh package to display epidemiological data in an interactive way. We obtained data for the major pandemics of the 21th century, such as TB, Malaria, and HIV, and presented the country-specific mortality rates by plotting on a Google Maps layout. We visualized the data through the last 15 years, with each page of the website corresponding to that corresponding year.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">bokeh</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/yashpatel5400/DisVis\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/yashpatel5400/DisVis\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["GroupThink", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"GroupThink \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/150/datas/gallery.jpg\"/>\n<p>\n<i>Dorm Room Fund GroupThink</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>GroupThink</h2>\n<p>GroupThink sources news articles and trending topics from a community of Twitter users, displaying the results in a weekly digest.</p>\n<p>Check out the examples for <a href=\"https://group-think-app.herokuapp.com/list/yasyf/dorm-room-fund\" rel=\"nofollow\">Dorm Room Fund</a>, <a href=\"https://group-think-app.herokuapp.com/list/KPCBFellows/kpcb-fellows\" rel=\"nofollow\">KPCB Fellows</a> and <a href=\"https://group-think-app.herokuapp.com/list/MITstudents/mit-students\" rel=\"nofollow\">MIT Students</a>.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ruby\">ruby</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/coffeescript\">coffeescript</a></span></li><li><span class=\"cp-tag\">rail</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twitter\">twitter</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://group-think-app.herokuapp.com/\" rel=\"nofollow\" target=\"_blank\" title=\"https://group-think-app.herokuapp.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>group-think-app.herokuapp.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["MathematicaVR", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"MathematicaVR \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/009/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"MathematicaVR \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/016/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"MathematicaVR \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/070/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"MathematicaVR \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/133/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>The Inspiration</h2>\n<p>We noticed that it was quite difficult for several of our classmates to adequately visualize 3D models in classes such as calculus, physics, and chemistry. We wanted to tackle this solution by making something that anyone could use to better see how 3D functions looked in space. </p>\n<h2>What it does</h2>\n<p>Our product can input a query in Mathematica and output a 3D model of the representation requested into a Unity environment that can be displayed on the Oculus Rift, and navigated through using the Myo Armband.</p>\n<h2>How we built it</h2>\n<p>We built our product by linking the Mathematica kernel with Unity's C# codebase through Wolfram's Native .NETLink. This allowed us to submit queries to the Mathematica kernel and act upon the result in Unity. For example, loading most 3D models requires us to </p>\n<ol>\n<li>Fetch the user's desired query</li>\n<li>Format it for Mathematica queries and export format</li>\n<li>Save the file to disk (.OBJ and .MLT).</li>\n<li>Pass saved file location to Unity]</li>\n<li>Load the saved file utilizing a self-modified .OBJ and .MTL file importer for the 3D data</li>\n</ol>\n<h2>Challenges we ran into</h2>\n<p>We ran into several bumps along the way mainly due to system requirements. For starters, the Oculus Rift DK2 was not compatible with the current version of the Mac Oculus Runtime. In fact, we had to install a version of the runtime that was over a  year out of date in order for the Rift interface with the mac. Also, since the Mathematica kernel was only made to link with the .NET framework, we realized that we had to run a partition of Windows 10 on one of our macs to run our program. After we got the dual boot to work, there were even further system issues. At first the, Rift was not connecting with the latest Windows Runtime for Rift DK2. It would always turn off within 10 seconds of being plugged in. We realized that we had to downgrade the runtime to 0.5.0.1 in order for our project set up to work. After that happened, we had to then re-install the appropriate and corresponding Myo and Unity packages, and graphics driver for the Rift. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We're really proud of being able to interface Mathematica with the Rift. There were several complexions that made this a difficult project to implement, but this was definitely a great learning experience. This was our first time working with VR in any capacity, and it is definitely something that has caught our interest and challenged us greatly. </p>\n<h2>What we learned</h2>\n<p>We learned a lot about the Mathematica language, complexions with creating VR applications, and how we can interface the Myo armband with various applications.</p>\n<h2>What's next for WolframVR</h2>\n<p>Going forward, we hope to make WolframVR something with as many features as possible. There are endless possibilities with Mathematica, and we believe that WolframVR could be a powerful tool for teaching mathematics, physics, and several other subjects more effectively to students. We hope to expand the capabilities of our application and try to directly help students that can benefit from our product.  </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">mathematica</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/myo\">myo</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/oculus\">oculus</a></span></li><li><span class=\"cp-tag\">mathmaticalink</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/J0Nreynolds/WolframVR\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/J0Nreynolds/WolframVR\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked primarily with interfacing the Myo Armaband with our project. I also was heavily involved with creating prompts for our program to input and pass on to the Mathematica kernel for the graphs and other 3D objects we were able to pull.  ", "", ""]], ["Self-Driving Car", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to test the upper limits of what was possible at a hackathon. Inspired by the trend in autonomous vehicles, we decided we wanted to create a self-driving car in 36 hours. It was a stretch, a dream, a moonshot but we were willing to put in the effort and try to pull this off.\nWe fell short of this goal. \nWe have a PowerWheels car that can turn and drive programatically. \nWe have a ton of computer vision.\nBut we lack integration and did not have time to debug, as well as lacking necessary hardware.\nThe car is a wobbly mess of wires, but it works, kind of. We aimed for the stars, but crashed and burned.\nIn the end, at least we learned a lot.</p>\n<h2>What it does</h2>\n<p>It can drive autonomously based on an Arduino program.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/opencv\">opencv</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li></ul>\n</div>\n</div>", ["Image recognition and leap motion integration. Set up streaming data between multiple devices. ", "GPS and accelerometer data", ""]], ["Mesh", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Mesh \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/854/datas/gallery.jpg\"/>\n<p>\n<i>App opening</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Mesh \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/855/datas/gallery.jpg\"/>\n<p>\n<i>Example profile</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Mesh \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/856/datas/gallery.jpg\"/>\n<p>\n<i>Example contact collection</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>As busy students, we often miss out on opportunities at career fairs, club fairs, and similar events. We wanted to make an application to make these social/learning events much more accessible. </p>\n<h2>What it does</h2>\n<p>Our app is designed to help people at events develop more personal relationships much more efficiently. The mobile app essentially acts as a beacon or receiver. One group will be sending out signals and the other will be receiving. When the receiver recognizes a signal, the phones will automatically swap information and store it. This allows for a quick exchange of information to avoid crowds and wasting time in line. </p>\n<h2>How we built it</h2>\n<p>We built the app for iOS using Swift, Linode, and Parse. Swift was used to develop the actual application and to set up the beacon/receiver bluetooth interaction. Information is also inputted through the swift application. The information is stored on a Linode server running Parse. When signals were detected, the information between the two users was swapped.</p>\n<h2>Challenges we ran into</h2>\n<p>We had difficulties getting iBeacon to work completely. In an ideal situation, we would have the app running in the background and still functioning 100%. We were eventually able to get it working, but we had to work around the issue by having the app be actively receiving/emitting signals. One of us had to learn Swift, so it was a bit slow at times.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>First iOS application. </p>\n<h2>What we learned</h2>\n<p>We learned about iBeacon, iOS app development, and the power of Haribo. </p>\n<h2>What's next for Mesh</h2>\n<p>Further developing the user interface to make it more user friendly. We would also like to include more features such as resume drops, interest tags, data analytics, etc. There are many possible applications and extensions for this application and we would love to develop this more. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/linode\">linode</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/parse\">parse</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/2amp/Mesh\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/2amp/Mesh\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Discourse", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Discourse \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/051/datas/gallery.jpg\"/>\n<p>\n<i>Spread messages phone by phone</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Discourse \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/052/datas/gallery.jpg\"/>\n<p>\n<i>Watch your message's network expand</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>The world is growing disillusioned with the media. People seek new forms of communication, free of targeted advertising, political bias, and censorship. Discourse provides the people with a novel form of finding content, based on transfers between users who are in geographic proximity. \"The people\" decide who's messages spread.</p>\n<h2>What it does</h2>\n<p>Users submit content to Discourse, and other users receive their content when they come in close proximity to each other. Any user can swipe a message to determine whether or not they will automatically forward it to other discourse users, or halt it's expansion. Users can also tap messages to see a map of where the message originated and where all of the necessary transfers took place so that they might find it in their discourse inbox. Finally, users can save messages that they've forwarded on and track how they continue to spread. </p>\n<h2>How we built it</h2>\n<p>We developed an android app in android studio and a django back-end to handle message and transfer-location storage. We used the Google Maps API to create our network graphs, and we hosted out django back-end on and apache server running on linode's hosting service.</p>\n<h2>Challenges we ran into</h2>\n<p>My computer BSOD'd 3 times during the night. We also planned on using wolfram alpha, but encountered discrepancies between the current version and the documentation, so we had to switch to using google maps for plotting data.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Almost all of us were working with technologies for the first time. Alan and Patrick hadn't done Android before, and Henry and I hadn't built back-ends on django/linode either.</p>\n<h2>What we learned</h2>\n<p>We learned a lot about android, web hosting, and the google maps API.</p>\n<h2>What's next for Discourse</h2>\n<p>We want to work on optimizing our message storage mechanics, and on figuring out other interesting ways of visualizing transfer data.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/django\">django</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/linode\">linode</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/aringlein/MessageInBottleBackend\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/aringlein/MessageInBottleBackend\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/AlanLiu96/message-in-a-bottle\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/AlanLiu96/message-in-a-bottle\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Arzaal", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Arzaal \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/244/datas/gallery.jpg\"/>\n<p>\n<i>The minimalist interface</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Typing contacts is slow</p>\n<h2>What it does</h2>\n<p>Uses discovery on LAN wifi to broadcast contact</p>\n<h2>How we built it</h2>\n<p>Painfully</p>\n<h2>Challenges we ran into</h2>\n<p>We tried NFC but found some issues with implementation.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Having the whole app happen in one click. To share your contact with someone on your wifi, simply open the app, make sure the other person has the app open, and click share. They contact will go right into their phone!</p>\n<h2>What we learned</h2>\n<p>Don't try to learn so many new technologies</p>\n<h2>What's next for Arzaal</h2>\n<p>Add security so you can be more selective who gets your info, or blast to an entire network!</p>\n<p>PS Do note that master is not the latest branch. Use working-branch</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/bob0007/arzaal/tree/working-branch\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/bob0007/arzaal/tree/working-branch\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Turky Market", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Turky Market \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/512/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We have had previous experiences selling products on Ebay, and have had a few unfortunate sales and purchases involving arbitration by Ebay employees.  We were considering a way to automate the process of arbitration, and determined that it was not feasible to do algorithmically, due to how subjective the process is.  Thus, we settled on a different solution: use a democratic approach by asking multiple people using mechanical turk to decide, then choosing only the best.</p>\n<h2>What it does</h2>\n<p>The majority of the site frontend is a sales site processing sales in a similar manner to Ebay's 'buy it now' option.  However, when resolving a dispute, instead of alerting site administrators, the site instead polls mechanical turk users based upon the evidence submitted by the interested parties as to which side appears more truthful.  This allows for dispute resolution without requiring the arbitrators working for an auction/market site to be unbiased.  For a significant amount of responses, it becomes more likely that the correct outcome will be reached.</p>\n<h2>How we built it</h2>\n<p>The site is running on a linode running a python server and a mongodb instance.  We had originally intended and completed the work necessary to perform escrow using the ethereum blockchain, but ran into major problems with deployment and so instead used the nessie api to simulate an escrow service.  </p>\n<h2>Challenges we ran into</h2>\n<p>As stated, we spent a large amount of time working on creating the entire auction functionality on the ethereum blockchain.  However, saturday afternoon, it became apparent that we would not be able to overcome our implementation difficulties, and pivoted instead to a server based solution.  The original goal was to have an auction system which had as little counterparty risk as possible by preventing the server from running at any one location.</p>\n<p>As a result, we were unable to make a solution using the ethereum testnet, and were limited by the fact (both in our escrow implementation and with mechanical turk) that to actually implement these processes would require us to spend significant sums of money in testing.  As such, we are operating in the developer environment of mechanical turk, where we can complete our tasks but they will not be picked up and performed anonymously, although a one line change in the codebase could make this live.</p>\n<h2>What we learned</h2>\n<p>How to interact with mechanical turk jobs for one.  Also, it was a good experience to practice python programming with a time constraint.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-mechanical-turk\">amazon-mechanical-turk</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag\">capital-one-api</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/linode\">linode</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/dpcollin/turky_market\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/dpcollin/turky_market\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Chroma", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Chroma \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/080/datas/gallery.jpg\"/>\n<p>\n<i>1 - Intro</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Chroma \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/072/datas/gallery.jpg\"/>\n<p>\n<i>2 - Main Screen</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Chroma \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/076/datas/gallery.jpg\"/>\n<p>\n<i>3 - Swatch Browser</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Chroma \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/074/datas/gallery.jpg\"/>\n<p>\n<i>4 - Swatch Browser (2)</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Chroma \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/073/datas/gallery.jpg\"/>\n<p>\n<i>5 - Color Selector</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Chroma \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/078/datas/gallery.jpg\"/>\n<p>\n<i>6 - Share</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Chroma \u2013 screenshot 7\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/079/datas/gallery.jpg\"/>\n<p>\n<i>7 - Share</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Chroma \u2013 screenshot 8\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/075/datas/gallery.jpg\"/>\n<p>\n<i>8 - App Icon on Homescreen</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>What it does</h2>\n<p>A robust theme and palette generation utility designed from the ground up with the designer in mind. We built a product that allows designers to fluidly and easily generate color palettes and themes for their projects. From websites and apps to documents and presentations, Chroma provides a quick and simple way to get started.</p>\n<h2>How we built it</h2>\n<p>We first designed the application in Sketch and then we built the application in Objective-C for iOS devices. We leveraged Apple\u2019s NSKeyedArchiver to store the color swatches on the user\u2019s phone. Everything else was fairly standard and we used the built-in iOS libraries to implement all the features for this application.</p>\n<h2>Challenges we ran into</h2>\n<p>Color conversions were not as simple as we thought (especially CYMK and HSL). There were many different formulas for HSL that were offered online -- each slightly different from the other and then there was CYMK, which technically didn\u2019t even have a standard formula (see \u201cwhat we learned\u201d). Otherwise, the UI was somewhat painful to implement as we tried to create our own theme instead of using the built-in iOS elements. As usual, auto-layout was not very fun to work around, but we finally made it work.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We got the app to work well and to convert the colors accurately. We were also proud of the export feature that allows users to export a small image that has all the swatch colors which can be easily shared via text, email, etc.</p>\n<h2>What we learned</h2>\n<p>Converting from RGB to CYMK is non-trivial as it\u2019s dependent on color spaces and there aren\u2019t perfect 100% mappings between them and thus our numbers may be inaccurate at times. We also learned that there are multiple ways of calculating tetradic colors (square or rectangular).</p>\n<h2>What's next for Chroma</h2>\n<p>We will be releasing wake to the app store soon. Stay tuned! We are thinking of also adding a feature where it can create a color palette from an image instead of having you manually select it yourself. We're also looking to change the UI a little bit (by using different fonts, etc.) but we haven't really nailed down the details yet. Also, we didn't have the time to successfully add in search and filtering for the swatches nor add in any animations, but those were not as high-priority on our todo list so we're probably going to implement those before we submit the app to the app store.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/objective-c\">objective-c</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sketch\">sketch</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://getchromaapp.com/\" rel=\"nofollow\" target=\"_blank\" title=\"http://getchromaapp.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>getchromaapp.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["ThisNThat", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>People are constantly faced with the problem of comparing two things. Our project is just for this purpose. We want to develop an APP so that people can directly see the comparison between two things in one shot, as opposed to searching for each of the two things and make summary about their differences. Also, people can see how other people feel about the comparison with our APP.</p>\n<p>In our APP, users can act as either one of two roles: askers and answerers. If one user has any question about a specific comparison between two things, they will act as askers. To be specifically, they will first see a direct and objective comparison of the two things, with regard to the difference of the attributes of the two things. After that, they will see the survey of the comparison among other users. If one user want to answer other people's questions, they act as the answerers. In that case, they will see a list of questions. And this order of the list for every answerer is customized using recommendation system algorithm(to be specific, matrix decomposition) so that the questions the users are more likely to answer will be ordered at higher rank. </p>\n<p>We have used Jax-rs to build the restfull application in java and flask to build restfull app in flask. Wolfram alpha api has been used to retrieve comparable information about the questions asked by the user.Rest calls also exist to create new question and submitting responses for a question. Matrix reduction has been used to get the recommended tasks for the user based on previous submitted responses.</p>\n<p>We learned machine learning algorithms, Flask, using the Wolfram alpha API and language in this project. </p>\n<p>The next for ThisNThat is to integrating the UI and backend server. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">jax</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/numpy\">numpy</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/scikit-learn\">scikit-learn</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/react\">react</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/redux\">redux</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/dikshay/hackprinceton\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/dikshay/hackprinceton\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Who Dat Face?", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>I am really bad at remembering names, but Facebook seems to have an uncanny ability to recognize my friend's faces. Wouldn't it be awesome if we could use that technology for the greater good? Well, wait no longer! By combining Google Glass with said technology, we can create a powerful facial recognition device. We carefully reverse engineered the Facebook API and created a system that allows you to upload photos via html POST requests to remind yourself of people's names.</p>\n<h2>What it does</h2>\n<p>It takes a picture with Google Glass and uploads that photo to a server that we setup via Linode. This server then uses saved project credentials to load the image through a Facebook account and then runs Facebook recognition on that account. As long as you are friends with that Facebook account it should be able too recognize your face. A timetile is then displayed back to the user.</p>\n<h2>How we built it</h2>\n<p>We built WhoDatFace using Node, Google Glass, Linode, GDK, the Android API and other features. We carefully analyzed Facebook's upload process to discover the hidden endpoint used for facial recognition and utilized that to run the facial recognition service.</p>\n<h2>Challenges we ran into</h2>\n<p>Once we had the Facebook facial recognition working, integrating it with Google Glass proved rather difficult as the API is no longer officially supported and virtually no support can be found through more common means such as StackOverflow. We had to debug all the issues we encountered on our own, with minimal resources.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We were able to reverse engineering the Facebook Facial Recognition API and construct a native Google Glass app that took advantage of the Glass hardware (touchscreen, camera, etc).</p>\n<h2>What we learned</h2>\n<p>We learned to reverse engineer APIs and how to make card and immersive apps for Google Glass through Android Studio and the Glass Mirror API.</p>\n<h2>What's next for Who Dat Face?</h2>\n<p>Bring support to more devices and making the network connection slightly more stable between the app and the server.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/linode\">linode</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag\">rest</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://l.facebook.com/l.php?u=https%3A%2F%2Fgithub.com%2Fakashlevy%2FWhoDatFace&amp;h=fAQFZkxPE\" rel=\"nofollow\" target=\"_blank\" title=\"https://l.facebook.com/l.php?u=https%3A%2F%2Fgithub.com%2Fakashlevy%2FWhoDatFace&amp;h=fAQFZkxPE\">\n<i class=\"ss-icon ss-link\"></i>\n<span>l.facebook.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["TigerLook", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>There's a face you keep seeing on campus, but you don't know the person's name. Perhaps it's been long enough that it'd be awkward to ask. Regardless, you can use this webapp to figure it out--select the most-similar faces to the one you have in mind and we can help you put a name to that mug. </p>\n<h2>What it does</h2>\n<p>The app starts you off with a lineup of images of Princeton students. After you pick the image most similar to the appearance of the student you're looking for, we then supply you with another five images similar to the image you picked. A few more clicks like that, and you'll soon have spotted the student you're looking for. </p>\n<h2>How we built it</h2>\n<p>At the foundation of this app is a graph search algorithm that finds the nearest faces to the user's specified face.  The information is hosted in a MongoDB database over a Linode server.</p>\n<h2>Challenges we ran into</h2>\n<p>It was difficult to figure out how to best look through the graph to find the nearest faces and also how to build it so that it wouldn't take a very long time (there were 5000+ faces to go through).</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are proud of being able to handle some 5000+ faces and millions of relationships that characterize them.</p>\n<h2>What we learned</h2>\n<p>How to recognize faces.</p>\n<h2>What's next for TigerLook</h2>\n<p>An even algorithm that randomizes the results a bit and uses better initial training set to generate the graph (currently each face has three dimensions (based on their differences from three sample faces from another set), which makes the recognition very crude, so adding more basis faces would greatly improve relevance of faces).</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/meteor-js\">meteor.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag\">openbr</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/rfblue2/TigerLook\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/rfblue2/TigerLook\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Wrote the front end specifically website look and feel and interactivity.  Used Meteor and Blaze with Bootstrap, JQuery.", "Wrote nearly all of the client code for querying the database of \"relationships\" between faces and choosing the next faces to display. Also automated running the facial recognition model on our whole photo bank to output similarity ratings between the Tiger faces and our basis \"eigenfaces\". ", "Worked on backend, wrote Python scripts to fetch user data and parse information. Ran analyses and trained data through OpenBR API and constructed vectorized format of face similarity pairings through comparison with set of image eigenbasis.", ""]], ["LetMeTrumpThat", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"LetMeTrumpThat \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/055/datas/gallery.jpg\"/>\n<p>\n<i>Main page of the Twitter profile.</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p><strong>Donald Trump</strong></p>\n<h2>What it does</h2>\n<p>Every 30 minutes, checks for any new tweets by @realDonaldTrump and (comically) \"translates\" it to <a href=\"http://www.twitter.com/LetMeTrumpThat\" rel=\"nofollow\">@LetMeTrumpThat</a>.</p>\n<h2>How we built it</h2>\n<p>Using the Tweepy API in Python, we scrapped the data from Donald Trumps' last 200 tweets and found his most used words. Then replaced with words or phrases we thought were funny and worked well.</p>\n<p>Running on a localhost, we check every 30 minutes for new tweets by him, and \"translate\" them, then tweet them out on our Twitter account.</p>\n<h2>Challenges we ran into</h2>\n<p>We never made anything with any sort of Twitter API, especially Tweepy, so learning that took a while due to poor documentation.</p>\n<p>Python also does not support specific symbols used in Trumps' tweets, so parsing through his tweets and outputting strings we couldn't handle gave us some problems.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Creating a running Twitter Bot.\nLearning the Tweepy API.</p>\n<h2>What we learned</h2>\n<p>How to use the Tweepy API.\nMore on how Twitter works in their backend.\nFurther advanced skills with Github.</p>\n<h2>What's next for LetMeTrumpThat</h2>\n<p>Listening for and replying to mentions.\nDM support.\nBetter \"translation\".</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">tweepy</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://www.twitter.com/LetMeTrumpThat\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.twitter.com/LetMeTrumpThat\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.twitter.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Handling of Trump's tweets. Creating scrapping tool. Timed tweeting and checking of Trump's new tweets on a  timely basis.", ""]], ["SlothSure", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"SlothSure \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/038/datas/gallery.jpg\"/>\n<p>\n<i>Slouchy representing his pride</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>SlothSure is an Arduino project that detects changes in orientation at the shoulders to determine if the back of the user is slouching, and alerts them to fix their posture. It also keeps track of the number of times the user attempts to slouch in a predetermined duration of time.</p>\n<p>This project was inspired by the observation that people typically slouch while sitting at a desk/table. This bad habit can be detrimental for long term help effects, and constant back pain.</p>\n<p>Good posture is linked with better health, and having confidence. SlothSure ensures that the user is notified when they are slouching in order to correct their posture. When the session is ended by the user, they are able to see the changes in posture.</p>\n<p>SlothSure wants to provide the user an experience that creates awareness of their current posture habits, and encourages them to improve it.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/processing\">processing</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/kug3lblitz/SlothSure\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/kug3lblitz/SlothSure\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the data visualization and contributed to the back-end (Flask) which allowed the data to be sent to the user's web page!", "", "", ""]], ["Fridge Shopping", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Fridge Shopping \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/208/datas/gallery.jpg\"/>\n<p>\n<i>Get the list of stuffs you don't have in your home - when you're away from home!</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<ul>\n<li>When out for shopping, sometimes we realize that we forgot most of the things that we really should have bought and spent ton of money on what was already in the fridge. There are manual ways to fix this -- some people just create a \"to-shop\" list beforehand. But what if our smartphone or smartwatch could seamlessly keep track of all the supplies in our fridge, our kitchen, home and office? What if they could inform us, accurately, what's in the fridge at any given instance? That's where \"Fridge Shopping\" fits in!</li>\n</ul>\n<h2>What it does</h2>\n<p>Fridge Shopping keeps an eye on (literally) food supplies inside your kitchen. When you're around a shopping center or grocery store, it automatically send you a list of all the items you currently have in your home. The list of items appears on your Pebble smartwatch which is easily accessible on your wrist. The automated smart list is with you the entire time you're out shopping, making sure you don't miss a thing on your \"to-shop\" list.</p>\n<h2>How we built it</h2>\n<ul>\n<li>Set of cameras in your home take photos of food items in your kitchen, or fridge.</li>\n<li>Using IBM's Visual Recognition, we \"recognize\" what the food times are in real time, creating a list of those items.</li>\n<li>The list is then pushed to cloud database on Firebase.</li>\n<li>Your smartphone is notified and downloads the updated list from Firebase - which is then transmitted to the Pebble watch via Bluetooth.</li>\n<li>Whenever you're outside your home - using Geo-location and Google Places For Web API - your smartphone suggests probable shopping destinations and displays them on your Pebble. You can browse the list of items that you have in your kitchen while you shop - being confident that you're only buying the right items in right quantity.</li>\n</ul>\n<h2>Challenges we ran into</h2>\n<ul>\n<li>None of us had ever used or hacked Pebble before. As a result, hours went by just to figure out where we should start from. We had some mentors who helped us. We learned to use CloudPebble, which was simple to use but really full of glitch. Also we mashed up many smaller ideas we had to build a bigger product.</li>\n</ul>\n<h2>Accomplishments that we're proud of</h2>\n<ul>\n<li>Most of our time was invested in troubleshooting Pebble bugs. We're glad we learned and solved most of those glitches.</li>\n</ul>\n<h2>What we learned</h2>\n<ul>\n<li>How to build stuffs with Pebble. </li>\n<li>A bit more of Node.</li>\n<li>Mashing up entirely different things into an almost coherent hack.</li>\n</ul>\n<h2>What's next for Fridge Shopping</h2>\n<ul>\n<li>A dedicated mobile app that fits perfectly with Pebble.</li>\n<li>Multiple cameras, multiple images from multiple angles to accurately recognize the items.</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/pebble\">pebble</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ibm-watson\">ibm-watson</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag\">google-places-for-web-api</span></li><li><span class=\"cp-tag\">visual-recogniition</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/anik266/PrincetonHack\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/anik266/PrincetonHack\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on both the backend and front end. I used JavaScript. The application was built on Pebble Time. The backend used was Firebase. I used IBM's visual recognition API. I also used google places API. Node server was used to capture images from web cam and sent to Firebase. Real time update was received in Pebble watch. Also if you were near grocery store the watch alerted you with the name of the grocery store. ", "", ""]], ["Glome", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Glome \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/996/datas/gallery.jpg\"/>\n<p>\n<i>Glome</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p><strong>Have you ever read an article with multiple obscure references that leads you to jump from one Wikipedia article to another?</strong> Glome is a chrome extension that saves you time by telling you everything you need to know about a word, name, or phrase! Imagine everything you need to know about any term - including definitions, summary, locations, history, and much more - available at the click of a button. Whether it is news articles, post, forums, or Wikipedia pages, we promise that Glome will revolutionize the way you interact with information in your browser.</p>\n<p>P.S: Glome was named after a 4D sphere, because when you combine it with what you are reading you have 4 dimensions of information.</p>\n<h2>What it does</h2>\n<p>After you install it, all you need to do is highlight a word and click the Glome icon at the top of your Chrome browser. We will provide you with all the useful information you might need from Google, Wikipedia, and WolframAlpha. Our response is concise but thorough. Even we have learned a lot in the process of testing it. Now it's your turn.</p>\n<h2>How we built it</h2>\n<p>Glome is built as a chrome extension in HTML and Javascript. It sends http request to a server which is maintained by a Node.JS module with Express.JS and the WolframAlpha npm plugin. It uses smart scraping algorythms to provide you with the highest quality of information.</p>\n<h2>Challenges we ran into</h2>\n<p>We wanted to implement more APIs into the project but we ran short on time :(</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>It works even better than anyone on the team could have imagined. Additionally, it combines three sources of information that are bound to cover anything you throw at it - including <strong>mathematical calculations</strong>.</p>\n<h2>What we learned</h2>\n<p>We learned how to make chrome extensions - which can be surprisingly difficult. But it was a very useful and rewarding experience.</p>\n<h2>What's next for Glome</h2>\n<p>We are planning to release it on the Chrome Store! So look out for it in the following weeks. We want to see how large of an impact it can have, and how it changes the way you browse the web.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/wolfram-technologies\">wolfram-technologies</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/chrome\">chrome</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/linode\">linode</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://www.glome.aboutJuan.com\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.glome.aboutJuan.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.glome.aboutJuan.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["NutriTrack", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"NutriTrack \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/927/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"NutriTrack \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/928/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"NutriTrack \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/929/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"NutriTrack \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/930/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"NutriTrack \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/931/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Realizing how much sugar I actually eat on a daily basis.</p>\n<h2>What it does</h2>\n<p>It allows users to easily keep track of what they eat by determining the nutrients you consume based on pictures you would take of your food. It then organizes and presents the data in a intuitive way for the user to easily understand.</p>\n<h2>How I built it</h2>\n<p>Android for almost everything, and node.js backend to store data and stuff.</p>\n<h2>Challenges I ran into</h2>\n<p>Trying to add machine learning to it.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Being able to accomplish this as a solo hack.</p>\n<h2>What I learned</h2>\n<p>Don't undersestimate the difficulty of implementing machine learning</p>\n<h2>What's next for NutriTrack</h2>\n<p>Who knows.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mobile-java-push\">mobile-java-push</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/AlstonLin/NutriTrack\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/AlstonLin/NutriTrack\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["SmartKiosk", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<h2>What it does</h2>\n<p>Convert coins into bitcoins, buy, sell, request bitcoins and view current price and transaction history.</p>\n<h2>How I built it</h2>\n<p>Nodejs</p>\n<h2>Challenges I ran into</h2>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<h2>What's next for Coins to Bitcoins</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag\">bitcoins</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/steveandrewwong/coinstobitcoins\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/steveandrewwong/coinstobitcoins\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["ExploreSafe", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"ExploreSafe \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/873/datas/gallery.jpg\"/>\n<p>\n<i>This photo shows an area of New York City with red dots of varying intensities, the darker ones of places where more assaults have occurred.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"ExploreSafe \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/891/datas/gallery.jpg\"/>\n<p>\n<i>A closer up of two dots, with the darker one showing frequency of assaults</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We wanted a way for people new to a city to be able to explore safely, with information about where the highest crime rates happened so that they would know where to walk and how to get places safely. So, we created an Android App to help users with this. </p>\n<h2>What it does</h2>\n<p>This app allows users to navigate a map of where they are in New York City, marking locations where sexual assaults have happened based on data from the New York Police Department website. The marks are indicated using red dots. The transparency of the red dots are based on the number of occurrences that have happened in this location. </p>\n<h2>How we built it</h2>\n<p>We built this app using Android Studio and Java. We collected data from the NYPD, parsed the data into a JSON file with the latitude and longitude of occurrences and the number of occurrences per location. We created red dots at the locations where assaults have occurred, with varying intensity/transparency, based on the number of occurrences. </p>\n<h2>Challenges we ran into</h2>\n<p>One challenge was figuring out how to most effectively layer the NYPD data onto the map and getting through the JSON data. Another challenge was using Firebase for our backend database. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are really proud of finally being able to connect the pieces of the data with our red dots - integrating this was challenging! </p>\n<h2>What we learned</h2>\n<p>We learned how to parse through JSON files, work through intricacies of Android Studio, use the Google Maps API to put the circles onto maps, integrate other APIs with our code, and how to work with databases. </p>\n<h2>What's next for ExploreSafe</h2>\n<p>More data from other cities, other types of crimes beyond sexual assault with different colors, and a feature to be able to plan the safest route to get to a given location. We also want to add locations for nearest police stations, as well as a feature for the user to be able to quickly send their current location to a nearest police station if they needed help and did not feel it was safe to call. </p>\n<p>In the end, we want ExploreSafe to help people explore freely, safely, and knowledgeably!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/ranijaiswal/ExploreSafe\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ranijaiswal/ExploreSafe\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["MemeDB", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We love memes and we love tech</p>\n<h2>What it does</h2>\n<p>Gives the best memes tailored to each person</p>\n<h2>How I built it</h2>\n<p>Flask and Markov Models</p>\n<h2>Challenges I ran into</h2>\n<p>Handling buttons </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>The \"next\" button</p>\n<h2>What I learned</h2>\n<p>Flask is my bff</p>\n<h2>What's next for hackPrinceton2016</h2>\n<p>Onwards unto victory</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/shell\">shell</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/source09/hackPrinceton2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/source09/hackPrinceton2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["EmoType", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"EmoType \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/706/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2><strong>Inspiration</strong></h2>\n<p>For too long, computers have appeared cold, unfeeling, and inaccessible to those unfamiliar with them. We decided to change that. <strong>What if your computer felt the same emotions you did?</strong> While computer feelings may be far off, we can create that illusion. By making it seem like your machine empathizes with your current mood, technology <strong>becomes more accessible, with wide-ranging applications from education to the elderly</strong>. Many who don't use computers today are intimidated, feeling that such cold, \"judging\" </p>\n<h2><strong>What it does</strong></h2>\n<p>Five years ago, artificial intelligence seemed like science-fiction. Today, with the enormous advances made by the field of machine learning, the future doesn't seem so far off. We as a team are fascinated with this power, and sought to use the power of natural-language processing, driven by machine learning, to build a deployable app.</p>\n<p>EmoType provides an empathetic partner for whatever mood you may be in. As you type, your words are analyzed and associated with different emotions, which we then reflect. If you're feeling down, the background will gracefully darken and EmoType will begin to play \"rainy day\" music along with you*. If you're full of joy in your writing, your screen will overflow with color as upbeat music fills your ears. No matter how you're feeling, EmoType will empathize, bringing a warm and welcoming feel to what previously seemed like just a hunk of metal.</p>\n<h2><strong>How we built it</strong></h2>\n<p>EmoType is a text editor built as a Chrome extension, with a backend hosted on Heroku and written in Node.js. Styling and color control is completed using CSS, while audio is provided by Spotify. In order to detect emotions, our editor batch puts inputted text (delineated by punctuation) into the AlchemyAPI for natural language processing-based emotion analysis of that text. We then examine the emotion weights in order to determine a dominant sentiment, or choose a neutral one if none emerges.</p>\n<p>Once we know the mood of the user, the magic begins to come together. Information about the mood is sent to our CSS file for background coloring as well as to our cloud server for the creation of a custom Spotify playlist. We have a curated database of playlists to choose from, and select one based on the user's current mood. We then randomly select a song from this playlist, and add that song to the active play queue. When it all comes together, EmoType runs smoothly and gracefully, putting a more human face on the technology we use every day.</p>\n<h2>Challenges we ran into</h2>\n<p>This was a highly challenging and technically demanding project. Challenges we encountered and overcame included handling complex OAuth permissions requiring input from end-users, handling of malformed/poorly documented API returns, and theming/repainting based on emotions. All of these problems forced us to leverage both our creativity and problem-solving ability as we worked together towards our ultimate goal, and without the work we put into these areas, EmoType would not have been successfully deployed.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Some of our greatest accomplishments in the development of EmoType were the successful handling of theming and our integration with Spotify. The theming aspect was technically demanding, both in terms of theme selection and CSS transitions. Through careful attention to detail, we were able to craft solutions that melded well with detected emotions while providing a near-seamless UI. Spotify integration proved to be a challenge for different reasons. First, the Spotify node.js API included several significant errors that precluded the use of a traditional JSON parse, so we were forced to custom parse each returned dataset from the API. Second, playlist construction turned out to be a significant challenge, and we were proud to eventually successfully create and manipulate custom playlists that change dynamically with user moods. Further complicating matters, the Spotify Web API was inconsistent in its handling of permissions errors, resulting in a mysterious bug that took us several hours to chase down. Overall, however, we are proud that in 36 short hours we were able to generate a working application that we believe has the potential to impact those around us in a tangible way.</p>\n<h2>What we learned</h2>\n<p>All of us learned a great deal on this project. While our previous hackathon experience varied widely, we all gained something out of building EmoType. Whether new languages (like node.js), new APIs, or new debugging techniques, EmoType tested all of our abilities to their fullest. In addition, we learned techniques for optimizing our API calls, handling large JSONs, and batch putting text. No matter the challenge at hand, we loved the opportunity to delve into and solve a problem we observed in the world.</p>\n<h2>What's next for EmoType</h2>\n<p>*as of 8:52AM pending new access to original Heroku site/fix to Spotify API (requires original site, which we are currently locked out of)</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/alchemyapi\">alchemyapi</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/spotify\">spotify</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/machine-learning\">machine-learning</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/heroku\">heroku</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/calvinytong/emotype\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/calvinytong/emotype\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://drive.google.com/file/d/0B6nqMP9X1gUiZEdhSzBfUHgzRG8/view\" rel=\"nofollow\" target=\"_blank\" title=\"https://drive.google.com/file/d/0B6nqMP9X1gUiZEdhSzBfUHgzRG8/view\">\n<i class=\"ss-icon ss-link\"></i>\n<span>drive.google.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the backend (app.js) using node.js and handled the integration of Spotify. This was my first time using node - I spent much of the hackathon running our emotion-analysis scripts locally and hunting bugs", "I worked primarily on the logic and frontend of the chrome extension. Used javascript and CSS to apply themes based on emotion-analysis. I spent the majority of my time ensuring our javascript frontend communicated with our node.js backend properly.", "I worked on creating the integration between Alchemy and the text editor to try link certain CSS files with moods provided by Alchemy, and creating majority of the graphics used in this project.", ""]], ["RoomEase", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"RoomEase \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/533/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"RoomEase \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/531/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"RoomEase \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/532/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"RoomEase \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/537/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Coordinating rent payment is a <strong><em>chore</em></strong>. One of many chores that you and your roommates have to take care of to peacefully coexist. Nobody wants to clean the bathroom or take out the trash, but it has to get done. </p>\n<h2>What it does</h2>\n<p>RoomEase lets users define what chores have to be done and how frequently. These chores get randomly distributed amongst all the roommates. If you get a chore you particularly dislike, you can propose to trade with your roommate. You can swap it for another chore, offer to pay someone money to do it for you, or both! At the end of the month, our scheduled job runner checks how much each user has to pay for rent after factoring in many exchanges, and automatically transfers money from each of your roommates to whoever pays the rent. This saves you from having to remind your buddies that they owe you money if they do not have the right amount on them. It's completely automatic, and happens as a part of your normal rent payment so it's very convenient.</p>\n<h2>How we built it</h2>\n<p>Our project relies on two behind-the-scene mechanics in order to smoothly keep track of chore assignments as well as charge everyone the correct amount. We used Firebase in order to have a fast database easily accessible from both the web and our native iOS application, as well as our cron server. We used React in order to write very similar code for both of our client platforms. We used React-Router and Redux in order to write modular, organized code. In order to automate payments, we used Nessie's API to transfer funds between peers at the end of each rent cycle.</p>\n<h2>Challenges we ran into</h2>\n<p>Firebase is a great database for quick, synchronized interactions between many concurrent users, but lacks a degree of structure that other databases like SQL or Mongo offer. We had anticipated being able to whip up a quick Firebase server, and then devote ourselves entirely to the front end user experience and the back end automation. Instead we commonly found ourselves making mistakes through minor typos and inconsistencies with names, which would have thrown an error in another database. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We all feel like we learned a lot about the technologies that we used, which was our primary goal coming into this hackathon. We were also able to divide our workload pretty well, and continually had all three of us working on something, never waiting on another team member in order to be productive. We even managed to extrapolate a lot of our database interaction logic into a single file full of useful functions, allowing one person to work on functionality and testing that functionality, while the other two developed the separate front ends that interacted with the same back end. We were able to use our time well, and really make the most out of this hackathon.</p>\n<h2>What we learned</h2>\n<p>This was our first project using React, React-Native, Redux, and cron, as well as our first large project using Firebase. We are glad that we were able to learn so much in a single weekend to be able to make a fullstack application that actually has a purpose.</p>\n<h2>What's next for room-ease</h2>\n<p>There is admittedly a lot of improvement for web UI improvability, as well as general polishing that could be improved. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/react\">react</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/react-native\">react-native</a></span></li><li><span class=\"cp-tag\">cron</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag\">react-router</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/redux\">redux</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/everett980/room-ease\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/everett980/room-ease\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I built the iOS app using React Native. It was a ton of fun, and I sold my sleep to the devil for it. I'd learnt how to use React Native the week before just for this hackathon. It was tough. I used Redux to some degree (it wasn't that useful when using Firebase), React Fire and some other stuff.", "", ""]], ["Fin", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Fin \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/359/datas/gallery.jpg\"/>\n<p>\n<i>Android</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Fin \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/376/datas/gallery.jpg\"/>\n<p>\n<i>Web: Tasks</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Fin \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/377/datas/gallery.jpg\"/>\n<p>\n<i>Web: User Authentication</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Fin \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/409/datas/gallery.jpg\"/>\n<p>\n<i>Pebble: Ended Task</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Fin \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/410/datas/gallery.jpg\"/>\n<p>\n<i>Pebble: Start Task</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Fin \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/423/datas/gallery.jpg\"/>\n<p>\n<i>Pebble: Launch Screen</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We're students. We've got a lot of things on our plate and it gets really difficult to manage everything from our health to studies to work. So, we decided that we would make an app that would not only help us manage our time but would also give us data visualization stats so that we would not only be able to allocate time but also see our allocations and get recommendations on how to better manage time and be more productive.</p>\n<h2>What it does</h2>\n<p>Fin is a time-management platform that allows users to track their daily activities through the use of pebble, android and web interfaces. Users can simply hit the 'start' button on their pebble, phone or in the web app when they begin the activity, and when they finish, they hit the 'stop' button. Information about when and how long the user did each activity is stored on an online database, and this information is used to create beautiful visualizations on the online platform. These data visualizations provide users with valuable insight about how they are spending their time; allowing the user to learn from their behaviors and to ensure that they are managing their time most effectively. </p>\n<h2>How we built it</h2>\n<p>Fin uses three separate platforms, Pebble, web and Android. We used an array of IDEs and software to build it. For the web, we used AngularJS, jQuery, HTML/CSS and D3Js. For the Pebble watchapp, we used the CloudPebble IDE and wrote it in Pebble.js. For the Android app, we wrote it in Java on Android Studio.</p>\n<h2>Challenges we ran into</h2>\n<p>Our team struggled with the implementation of three different platforms. We built on Pebble, Web as well as Android so being able to port everything and have it consistent was a challenge.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Our team was able get everything from different points to a common endgoal. Everything was able to come together from the three different platforms into a unified system. </p>\n<h2>What we learned</h2>\n<p>We learned how to be able to connect Firebase onto web app, Android app and Pebble app. </p>\n<h2>What's next for Fin</h2>\n<p>Next steps include working with the data provided by the users through fin to create more in-depth visualizations. We would like to analyze correlations between activities in order to provide the user with suggestions to best manage their time. For example, if the data suggested that users spent less time doing homework after spending time on social media, Fin could suggest that the user should make an effort to check social media <em>after</em> they spend time on their homework.</p>\n<p>After spending some time fine-tuning Fin's code and improving the UX/UI, we would like to expand fin to other wearable devices, including the apple watch and android wear. This also means potentially developing an ios app for Fin. </p>\n<p>*** Note: this project registered the domain techfin.net from domain.com for use of this project</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/pebble\">pebble</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/angular-js\">angular.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/d3-js\">d3.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/joanna-chen/princetons16\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/joanna-chen/princetons16\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["BlockLearn", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/wc5eh1ma_30?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to create something which made you aware of the time you spent on webpages, while being educational, and a deterrent for those webpages. Most people agree that they spent too much time on websites; however, completely blocking them doesn't work. </p>\n<h2>What it does</h2>\n<p>On our website, individual users can make a \"login account\", which identifies them in our database. This allows them to create an individualized list of restricted websites, which they input, in our database. When the user visits those websites, after a period of time, virtual \"flashcards\" will start to cover the page in regular intervals. This restricts access to the page as well as act as a counter for how long they are there. If the user clicks on a flashcard, they can input an answer in the popup box. If this answer is correct, the flashcards disappear. The time period between the flashcards can be inputed, eventually, as well as the content itself. We give a demo list on our website for vocabulary. There is also a table on the website which tracks how much time the user has wasted on those websites daily.</p>\n<h2>How we built it</h2>\n<p>We took basic css files from w3school.com for the style of our website, and created html files for the webpages themselves. We used javascript to link the inputs on the website to a database hosted by firebase. We created an extension which tiles the selected webpages in Chrome. </p>\n<h2>Challenges we ran into</h2>\n<p>We currently cannot connect our database to the extension because we have to insert a script into the webpages our extension runs on, and we are having trouble doing that. However, all our functions for the extension works so it is just a matter of integrating it with the database. Additionally, we had problems with integrating Wolfram Alpha's algorithm system so we decided to not use that for our information.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are proud to have learnt the execute script command for the extension because it was an integral part which we struggled with. We also dynamically created all the elements of the extension. On the website, we are generally proud of being able to link the list of blocked sites with our database and how we managed to set up that data structure. As a group without much experience in web development, we are generally proud of how we furthered our understanding of Javascript in general. </p>\n<h2>What we learned</h2>\n<p>As mentioned, we learnt a lot about Javascript as a group, since all of our members had very little experience in that. We integrated a lot different elements (database, extension, webpage etc) into a functioning project, and it was interesting seeing how they complimented each other. Working with a bunch of new-to-us software and api, we also felt that we improved our ability to read other's work.</p>\n<h2>What's next for BlockLearn</h2>\n<p>We want to link our database to Google Accounts since this is a chrome extension, and make it work multiple users. We also need to to work out some bugs in our implementation, and link our database. Once everything works smoothly, we will try to add more methods of data analysis and possibly add a visual representation of our data. Additionally, we want to randomize to flashcard order so that the user gets a variety.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/VPoint/BlockLearn\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/VPoint/BlockLearn\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I contributed to the webpage development portion of this project. As a new hackathon participant, working on BlockLearn was also the first time I had significantly used HTML and CSS. The experience I gained in coding with these languages helped to achieve both practical and aesthetic effects.", "", ""]], ["Mindful Money", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Mindful Money \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/745/datas/gallery.jpg\"/>\n<p>\n<i>Home Icon</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Mindful Money \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/746/datas/gallery.jpg\"/>\n<p>\n<i>Log In</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Mindful Money \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/750/datas/gallery.jpg\"/>\n<p>\n<i>Log In 2</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Mindful Money \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/858/datas/gallery.jpg\"/>\n<p>\n<i>Historical log of purchases</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Mindful Money \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/860/datas/gallery.jpg\"/>\n<p>\n<i>Example Comparison 1</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Mindful Money \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/861/datas/gallery.jpg\"/>\n<p>\n<i>Example Comparison 2</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>For us, financial literacy isn't about knowing why oil is down or even that it is. It's about being good at poker (just kidding). Financial illiteracy is a significant barrier to those of lower social economic status, and particularly in political years, we are reminded from the increased advertisement enough to be cognizant of this fact. Our simple goal is that every one should have the opportunity to gauge their financial decisions against the general population, to see if they're on the right track, and how they can improve.</p>\n<h2>What it does</h2>\n<p>We've designed an Android app that has access to the roles of a bank. In particular, we emulate tracking one's purchases by giving users a complete list of their historical purchases. Furthermore, given their data, and data gathered from an entire network of vendors and customers, we average each person's spending at certain vendors and show a comparison.</p>\n<h2>How we built it</h2>\n<p>Being an Android App (which you can definitely try out in our GitHub below (just type in \"<a href=\"mailto:swag@gmail.com\" rel=\"nofollow\">swag@gmail.com</a>\" for the username as a shortcut :P)), Mindful Money was built entirely in Java with the use of Capital One's Nessie API. As you might check out for yourself, our main Android activities are split between the log-in page, main page for history, and a side page for statistical comparison. </p>\n<h2>Challenges we ran into</h2>\n<p>The biggest challenge of Android dev for us this hackathon was the use of asynchronous functions, necessitated by the HTTP requests from the Nessie API. This required callback functions be used elegantly; we did not use them elegantly :/. Our second largest struggle came from manually assembling HTTP requests as we were not aware a java API was available for us... </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Accomplishment 1: Please, if you are in the mood for a laugh, check out the structure of our code in our MainActivity and DisplayStats classes. (Hint; they relate to how we did not use callback functions elegantly or, <em>eh-hem</em>, at all.) But I am personally very proud of stashing a 13,000 long list of merchants into one View tag :D.</p>\n<h2>What we learned</h2>\n<p>We learned that we should learn asynchronous functions, that coding rocks, and damn do we miss sleep.</p>\n<h2>What's next for Mindful Money</h2>\n<p>We'd like to finish our original ambitions of linking this up to our own server to make open up a variety of more statistics we could apply, and to have a more fully functional log-in page. And who knows; Google might buy us out soon.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag\">nessie</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag\">jdk1.8</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/gson\">gson</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/notepad\">notepad++</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sublime-text\">sublime-text</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/eclipse\">eclipse</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/HwangH/HackPrincetonSpring16.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/HwangH/HackPrincetonSpring16.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Bite in a Bit", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Bite in a Bit \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/640/datas/gallery.jpg\"/>\n<p>\n<i>Login authentication screen</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Bite in a Bit \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/641/datas/gallery.jpg\"/>\n<p>\n<i>Restaurants in the area</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Bite in a Bit \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/642/datas/gallery.jpg\"/>\n<p>\n<i>Menu for selected restaurant</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Bite in a Bit \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/657/datas/gallery.jpg\"/>\n<p>\n<i>Map with current location</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>I was inspired by companies like Uber that took daily services to a more personal level. Not only did they make it easier for us to get access to these services, but they also allow us to get involved in the services themselves. Becoming an uber driver, for example, is a very accessible way to make some extra money. I thought it was about time to extend this functionality to everyone's favorite service: food delivery.</p>\n<h2>What it does</h2>\n<p>After you sign into your app using a username and password to authenticate your account, you will be taken to a map screen. Using your current location, the app creates a list of restaurants near you. You can either place an order to be delivered to you from one of these restaurants, or choose to deliver someone else's order. To place an order, you simply select the restaurant you want to order from and select the menu items you would like. Each order includes a delivery fee which is paid to the deliverer, resulting in a fast, accessible way to get food delivered and a low commitment source of some extra income.</p>\n<h2>How I built it</h2>\n<p>I used redis to create a database to store information about restaurants and customers. To make this information accessible by multiple devices, I used linode cloud servers to host our redis database. With a database created to store information, my partner and I needed a user interface to interact with this data: an iPhone app. We built an app in swift that could access the redis database through the linode server.</p>\n<h2>Challenges I ran into</h2>\n<p>Initially, we didn't know how to store the information in a way that would be easily populated and able to be accessed across multiple devices. We also had some issues with our iOS app with generating some of the elements of the app, such as the menu table.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I am proud that I managed to create an app that could use location services to get current location, as well as interact with data that was not directly stored in the phone's memory. Another achievement is using iOS elements for other functionalities, like using a TableView to present information in multiple columns.</p>\n<h2>What I learned</h2>\n<p>I learned how to use a cloud server to access data, as well as how to create a database and manipulate data within it, even when it was on the cloud server. Additionally, I learned how to install and use pods as packages for use with swift code, which allowed me to get greater functionality in this iOS app than other iOS apps I have worked on.</p>\n<h2>What's next for Bite in a Bit</h2>\n<p>Next steps for Bite in a Bit would be implementing the delivery side within the app. We are currently able to handle orders in the cloud database, but as of yet do not have a screen to accept/get these orders within the app.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/redis\">redis</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/linode\">linode</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["Pizza Timer", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Pizza Timer \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/496/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Pizza Timer \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/500/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>How many times have you placed a pizza in the oven, then walked into the living room and an hour of The Walking Dead later, you only remember your pizza by the burnt smell wafting from your kitchen? It is too late to salvage the black and shriveled pizza now. If only you had a quick and easy to use timer... now you do! No more fiddling with the clunky, ugly pre-set Android timer! No unnecessary and confusing buttons!</p>\n<h2>What it does</h2>\n<p>Pre-selected timers or enter your own. Currently, you can only enter minutes once deleting all the current numbers/zeros including the colon. Also, the start/stop feature works for one timer at a time; for some reason pressing 30 min then 45 min and trying to stop/start 45 doesn't quite work.</p>\n<h2>How I built it</h2>\n<p>Android Studio</p>\n<h2>Challenges I ran into</h2>\n<p>Using Android, graphics, mechanics....everything was a challenge</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I'm proud of finishing my first ever app and programming project.</p>\n<h2>What I learned</h2>\n<p>I learned an introduction to programming and Android app development.</p>\n<h2>What's next for Pizza Timer</h2>\n<p>More debugging and some graphic design and I will release it in the Playstore! Then, HW timer, washing machine timer... there are many important timers we need in our lives.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/cstamps/pizzatimer\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/cstamps/pizzatimer\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["My first ever cos project and hackathon. I learned a lot about various aspects of code, android dev and the trial and error process of development in general. It was a fun learning experience and I hope to improve my project with more time! "]], ["Zenith Algorithm", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Zenith Algorithm \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/434/datas/gallery.jpg\"/>\n<p>\n<i>Homepage, including user registration and login.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Zenith Algorithm \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/435/datas/gallery.jpg\"/>\n<p>\n<i>Tutorial, which briefly introduces users to Zenith, their Zenith Score and the activity selection process.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Zenith Algorithm \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/436/datas/gallery.jpg\"/>\n<p>\n<i>Your Zenith Score, which is your overall wellness meter based on your daily activity.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Zenith Algorithm \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/437/datas/gallery.jpg\"/>\n<p>\n<i>In Depth Data Analytics, which forecasts future scores, stress and wellness levels based on data inputs processed by our algorithm.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Zenith Algorithm \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/438/datas/gallery.jpg\"/>\n<p>\n<i>User Reported Data, which is processed by the algorithm along with healthkit on your iphone and any wearables during activity selection.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Zenith Algorithm \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/439/datas/gallery.jpg\"/>\n<p>\n<i>Activity Session, which includes researched guiding audio made by us to lead users through activities in an optimal fashion.</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We know people need Zenith because our friends are stressed out of their minds. Stress is everywhere \u2013 in people's offices and homes \u2013 and we want to help solve it.</p>\n<h2>What it does</h2>\n<p>Zenith is a mobile app that analyzes health data to provide personalised action plans that improve users\u2019 well-being. We integrate data from your phone, wearables and user-reported emotion data to predict future well-being and suggest the activity that will best reduce stress and increase mental alertness. Example activities include: guided meditation, stretching, aerobics, power nap, reading (we\u2019ve got a list of 20). Users complete the activity by following our guiding audio track. Over time, Zenith\u2019s feedback loop adapts the algorithm to respond to what activities work best for each individual user. The algorithm is also used to forecast future scores, stress and energy levels providing more in-depth data analytics.</p>\n<p>At HackPrinceton, we built the entire backend algorithm and almost all of the key features of the app. We did start designing and implemented a few, much more rudimentary features over the past couple of months.</p>\n<h2>Zenith's unique value proposition</h2>\n<p>At the moment, when people want to relieve stress, people just choose ad-hoc activities, staying with what they already know how to do. Zenith applies data analysis bringing science to help people make the best choices, and it provides audio content to guide them through it. Unlike existing solutions targeting stress or physical fitness, Zenith uses the body to eliminate stress and fatigue in the mind.</p>\n<h2>How we built it</h2>\n<p>The algorithm designed was based on discussions with Professors in the Princeton Molecular Biology Department and Neuroscience Institute as well as the independent study of a number of research papers in the field. We then coded the entire iOS app in Swift with some Objective C and C. We recorded tailored audio in house based on our research. We worked through numerous design mockups to make the UI as flawless as possible.</p>\n<h2>What's next for Zenith</h2>\n<p>We will submit to Apple later today (3 April 2016). We are then planning to hustle to get as many users as possible next week. We will then push an update with new features that users want based on our market research insights. This may involve improving our algorithm as well as a bird\u2019s-eye-view web dashboard. We also hope to build our enterprise dashboard by the middle of the month so that we can launch our agreed partnership with the Princeton HR department towards the end of April. We will be focusing on the following methods to accelerate growth:</p>\n<p>Early adoption on Princeton campus to get evidence that our system works. To reach wider markets, online marketing and promotion through health influencers' blogs.</p>\n<p>We are reaching out to Princeton alums to break into the enterprise market. We will first start with individual teams, then expand across whole businesses.</p>\n<p>To accelerate growth, we are designing social gamification features, such as Zenith score leaderboards.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are really proud to have create a market ready product that will start to make a difference in peoples' lives next week! We are also pleased with the accuracy and sophistication of the algorithm. Finally, we worked really hard to design the perfect UI and are very happy with the final product.</p>\n<h2>Challenges we ran into</h2>\n<p>Modelling and forecasting future health is tricky. However, our research and discussions with Professors in the Princeton Molecular Biology Department and Neuroscience Institute helped us to bring real science to mental wellness.</p>\n<h2>What we learned</h2>\n<p>We learnt so much, which is always one of our key aims at any hackathon. Mostly, we realised that making the UI sleek takes a lot of iterations, which take time to implement.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/objective-c\">objective-c</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c\">c</a></span></li></ul>\n</div>\n</div>", ["I worked on the high level planning and design. I wrote a lot of the content for the app.", "I worked with Josh to dream up the core of the algorithm.", "Helped design the core algorithm and debug the Swift implementation", ""]], ["Focus Film", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Focus Film \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/481/datas/gallery.jpg\"/>\n<p>\n<i>Muse Headset</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>I took a flipped lecture course last semester, where all the lectures were on youtube, and would frequently watch the videos at 3 times speed. After a few minutes, I would find my concentration wavering and then I would have to go back and find the last part I understood. I wanted a way that I could have the video speed set proportionally to how hard I was concentrating. </p>\n<h2>What it does</h2>\n<p>My project using a Muse Headband to speed up a video when concentrating and slow it down otherwise.</p>\n<h2>How I built it</h2>\n<p>I use an EEG to measure low frequencies, Alpha, Beta, Delta, Gamma, and Theta brainwaves at 4 different locations on the user's forehead. Then I trained a support vector machine (SVM) with concentration and idle data with 24 features. I can then determine if the user is concentrating or not. If they are, the video will go up to 2x speed. Otherwise, it will slowly drift down to normal playing speed.</p>\n<h2>Challenges I ran into</h2>\n<p>The hardest part was trying to determine if the user is concentrating. I am still working on making an accurate metric for that. </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I'm proud of finishing an entire project by myself in a weekend. I'm glad to have been able to apply what I've learned in class to an entire project.</p>\n<h2>What I learned</h2>\n<p>I learned a lot about python and machine learning. I was able to interface with many different API's and a Muse headset. </p>\n<h2>What's next for Focus Film</h2>\n<p>Optimize the machine learning algorithm to make it more reliable. Use blink detection to determine how tired the user is to pause the video. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/muse\">muse</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/machine-learning\">machine-learning</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/jamilm/Focus-Film\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/jamilm/Focus-Film\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Marauder's Map", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Reminders based on proximity to friends you want to talk to.</p>\n<h2>What it does</h2>\n<p>Users share their router MAC addresses with a server, which returns names of other users on the same router.</p>\n<h2>How we built it</h2>\n<p>With lots of effort and help (thank you JD from Linode!).</p>\n<h2>Challenges we ran into</h2>\n<p>Interfacing between all the components, learning new languages and tools.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>It works (sort of!).</p>\n<h2>What we learned</h2>\n<p>php, android studio, sql</p>\n<h2>What's next for Marauder's Map</h2>\n<p>Only relay nearby friends with preset reminders.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/linode\">linode</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag\">lemp</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sql\">sql</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php5\">php5</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://173.255.232.132/index.php?name=Jiahuang&amp;mac=9c:1c:12:da:2f:b0\" rel=\"nofollow\" target=\"_blank\" title=\"http://173.255.232.132/index.php?name=Jiahuang&amp;mac=9c:1c:12:da:2f:b0\">\n<i class=\"ss-icon ss-link\"></i>\n<span>173.255.232.132</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Worked on back end, learned some php and mysql in the process!", "Worked on back end. Learned some php and sql, and how to use servers.", "Worked on front end."]], ["SafeWalk", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Originally We wanted to do something educational with a web app. This later evolved into an Android app and Web app working together to ensure safety of children who are walking anywhere. When we were thinking educational we wanted to gear something towards middle school aged kids, and even though the idea evolved away from education we still wanted to include this demographic as our target.</p>\n<h2>What it does</h2>\n<p>SafeWalk is a two part system. On the Android side, the user will be able to drop a pin on where they are going. The app then calculates how long the walk is and how long it should take on average and send it to the Web server through an api call. The Web side will then process that data and notify people that the android user has connected with that they have done so. Then at the estimated time the server will run a script to see if the android user has arrived. And notify accordingly based on what is returned.</p>\n<h2>How we built it</h2>\n<p>We used Django to create our web server, and heroku to deploy it. We created a web front end for registration and logging in, and an api to handle all of the data processing. The api takes in specific calls and responds in specific ways with HttpResponse codes to let the device know what has happened. The device in this case is an Android device that takes in a start (current) location, and a chosen end location and sends it to the api which allow people you have related with your account to get updates on whether you are ok or not.</p>\n<h2>Challenges we ran into</h2>\n<p><strong>Django:</strong> We had trouble with setting up staticfile handlers for production but but found one that finally worked after a lot of troubleshooting. We also had trouble integrating celery with this web app in the way that we wanted.</p>\n<p><strong>Android:</strong> We were all very new to Android, so the initial setup and getting packages to work together was very hard for us. We ran into countless problems with packages not working with versions of Android, or just not wanting to cooperate. Though it all started to come together bit by bit in the end.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are all pretty proud of the fact that we got both the django web app and android app up and running. Along with the fact that they were able to work together, although not 100% where we wanted.</p>\n<h2>What we learned</h2>\n<p>We learned all learned a lot about Android, and api calls through it. We also learned a lot about what goes into the setup of django, and what packages work well with it.</p>\n<h2>What's next for SafeWalk</h2>\n<p>Next we would like to finish taking it to where we had the planned to be at the end of this, then expand it to fully have a web interface of the map created by the start and end location given by the android app. Then, we would like to go back though the project and clean it up to make it more understandable for us, before deciding where to go with this project from their.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/django\">django</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/heroku\">heroku</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://www.github.com/smenon18/SafeWalk-Web\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.github.com/smenon18/SafeWalk-Web\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.github.com</span>\n</a></li>\n<li><a href=\"http://www.github.com/smenon18/SafeWalk-Android\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.github.com/smenon18/SafeWalk-Android\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.github.com</span>\n</a></li>\n<li><a href=\"http://safewalk-web.herokuapp.com\" rel=\"nofollow\" target=\"_blank\" title=\"http://safewalk-web.herokuapp.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>safewalk-web.herokuapp.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on both the front end and the back end of the mobile app.", "", "", ""]], ["MyoLander", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"MyoLander \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/472/datas/gallery.jpg\"/>\n<p>\n<i>Start screen</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>We wanted to explore the Myo Armband's capacity to advance modern space travel and we figured this would be a good first step. This webapp was built using JavaScript, HTML, and Thalmic's Myo.js framework. Still has a few issues with input lag (making it difficult to win the game), but we have something that works the way we envisioned.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://www.myolander.xyz\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.myolander.xyz\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.myolander.xyz</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["NessieVIS", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"NessieVIS \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/459/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We saw a cool visualization of Venmo paper-trail data and decided to use Capital One's Nessie API to simulate customer behavior and purchasing decisions with hierarchical Bayesian modeling.</p>\n<h2>What it does</h2>\n<p>Simulates and generates data about customers and which types of products they purchase. Analyzes data and uses LDA clustering to rediscover the underlying connections between different merchants.</p>\n<h2>How we built it</h2>\n<p>We used Capital One's Nessie API in Python to write a variety of functions for adding and measuring purchases between customers and merchants. Using the random module in num.py, we generated purchase data. We then used the gensim package to fit the data. Finally, we used d3.js in Javascript to create visualizations of the purchase data.</p>\n<h2>Challenges we ran into</h2>\n<p>We had no data, so we had to figure out a reasonable model for simulating interesting and realistic data.\nImproving runtime when processing large amounts of data was also a challenge.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Developing functions for generating random names of people and of stores\nCreating realistic results that measure the connectedness between merchants</p>\n<h2>What we learned</h2>\n<p>We gained a better understanding of scripting in Python and writing modules between a variety of different data types. We also learned a lot about interactive data visualization in Javascript.</p>\n<h2>What's next for Nessie Vis</h2>\n<p>We'd love to apply our model to a real data set and showcase some discoveries about real-world customers and merchants!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag\">nessie</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/d3-js\">d3.js</a></span></li><li><span class=\"cp-tag\">gensim</span></li></ul>\n</div>\n</div>", ["Backend and Python", "Capital one API and Python", "principal data scientist", "datavis in d3 js, interface in html/css"]], ["EIR", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p><strong>Emergency Medical Response</strong> is <strong>not something to take lightly</strong>; a few minutes in delayed response time, or a few omitted pieces of crucial information, can <strong>tip the balance of life and death</strong> to its more tragic end.</p>\n<p>Our service, <strong>EIR</strong>, is designed to <strong>augment the traditional 911 emergency response model</strong>, by</p>\n<ul>\n<li><p>Better informing medical personnel with more detailed descriptors, via <strong>Video</strong>, <strong>Graphics</strong>, and <strong>Geolocation</strong>, about exactly where, and what, occurred in an accident.</p></li>\n<li><p>Providing medical personnel with an easier, more panic-proof way of giving instructions to those at the scene, via our diagrammatic Canvas and a simple text interface.</p></li>\n</ul>\n<p><strong>EIR</strong> helps those in grave medical emergency.  We intuitively aide the <strong>Essential Communication</strong> between <strong>Caller</strong> and <strong>Responder</strong> by opening a line of communication among the person reporting the incident, the emergency dispatcher, and the paramedics via <strong>Graphical</strong>, <strong>Visual</strong>, <strong>Textual</strong> and <strong>Auditory</strong> means.</p>\n<h2>What it does</h2>\n<p><strong>EIR</strong> offers a new way for people in emergency situations to <strong>better communicate</strong> with <strong>Medical Personnel</strong>.</p>\n<ul>\n<li>Our <strong>Canvas</strong> feature allows emergency responders to <strong>illustrate</strong> critical first aid techniques <strong>quickly</strong> and <strong>clearly</strong>, allowing panicked individuals to see exactly what they need to do, when, and how. </li>\n<li>Our <strong>Messaging</strong> feature allows instructions to be seen in a textual way on the smartphone screen, doing away with the imprecision of memory ubiquitous in times of crisis.</li>\n<li>Our <strong>Video</strong> feature allows <strong>First Responders</strong> to see firsthand the accident in question; the clarity of this picture can be worth a thousand words.</li>\n</ul>\n<p>In order to make the process of illustrating complex tasks possible in a very short amount of time, we planned on adding a feature that automatically recommends relevant illustration setups to the emergency responders, so that they can find the right information for the right task in the shortest time possible with minimum manual searches. We were going to implement this feature using IBM's Speech-to-Text API, popularized by the <strong>Watson</strong> machine. This API allows us to predefine a set of indicator keywords that allows the algorithm to quickly classify relevant information.</p>\n<p>Our implementation of this last feature was hampered by the difficulty of cloning the <strong>AudioStream</strong> component of a <strong>VideoStream</strong> in Android in real time. Given more time, we will implement this feature, and use it to ensure that <strong>Medical Responders</strong> are reminded of relevant queries they need to know; from this, improved patient outcomes will inevitably result.</p>\n<h2>How we built it</h2>\n<p>The application itself consists of an <strong>Android App</strong>, for someone at the scene of an accident to call for help, and a <strong>Web Application</strong>, made in <strong>HTML/CSS/JS</strong>, which is designed for a medical responder to communicate with the caller more effectively than is possible through traditional, voice-only communication in a 911 call.</p>\n<p>These two applications communicate through <strong>HTTP GET</strong> requests, via a <strong>Django Server</strong> on the <strong>Linode</strong> hosting service. Our audio and video calling is implemented through the <strong>Sinch API</strong>, and the <strong>Canvas</strong> drawing system is implemented through our implementation of <strong>HTML5's Canvas Element</strong> alongside the <strong>Literally Canvas</strong> plugin.</p>\n<h2>Challenges we ran into</h2>\n<p>We ran into some struggles implementing our server on <strong>Linode</strong>, because we had some issues installing the software when it came to that. Additionally, we had troubles implementing our foray into the <strong>IBM's Watson API</strong>, mostly streaming from the fact that we would have been required to separate an audio stream from a video stream on the fly in real time on the Android device.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are proud of the fact that we were able to implement two features inexplicably absent from emergency response today: <strong>Graphical Advice Giving</strong> (implemented through the Canvas) and <strong>Video Streaming from the Scene</strong> (implemented through Sinch). We feel that these two additions will have a tangibly beneficial effect on patient outcomes in regards to emergency response.</p>\n<p><strong>Socially conscious hacking</strong> is important to us; too often is innovation ignored, at least when it comes to projects with limited revenue potential at first glance. We believe that the tried-and-true Silicon Valley way of tackle old problems with distruptive software solutions should be applied to the public sector for the public good, and we are proud to have followed our beliefs up with action.</p>\n<h2>What we learned</h2>\n<p>Before this Hackathon, we as a group had very little experience with the <strong>Django</strong> platform, let alone implementing a server on a remote Ubuntu host like <strong>Linode</strong>. This Hackathon allowed us to grow our Back-End skillsets, by getting our hands dirty implementing code directly upon a hosted machine with <strong>root access</strong>.</p>\n<h2>What's next for EIR</h2>\n<ul>\n<li>Fine tune <strong>Speech-to-Text API</strong> from <strong>IBM</strong>, fixing the <strong>AudioStream</strong> separation issue.</li>\n<li>Implement an <strong>Unsupervised Machine Learning Algorithm</strong> that recommends previously utilized illustrations given specific speech inputs, to speed up the work of the dispatcher and the paramedics</li>\n<li>More Extensive Research on the mechanisms of current EMS system; we will <strong>Iteratively Design</strong> our System to take this research and apply it in the field. </li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/django\">django</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ibm-watson\">ibm-watson</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sinch\">sinch</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/linode\">linode</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/canvas\">canvas</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/lacoperon/Eir\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/lacoperon/Eir\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the android client for the application using the sinch api. The application allows users to place emergency calls and get video feedback from the responder.", "I worked on the backend allowing the communication between webapp and android app.", "I worked on the Front-End, integrating our various requesting procedures into a sensical HTTP Get request mechanism. Additionally, I implemented the Sinch video client into our page, and cleaned up what was a HTML/CSS nightmare into a sensical UI/UX experience. ", "I came up with the original idea of an improved emergency response system, and I've designed the layout of the UI over the weekend. Additionally, I also integrated IBM Watson's speech-to-text API and set up the recommender system."]], ["deepjazz", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"deepjazz \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/550/datas/gallery.jpg\"/>\n<p>\n<i>logo</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h3>Using Keras &amp; Theano for deep learning driven jazz generation</h3>\n<p>I built <a href=\"http://deepjazz.io\" rel=\"nofollow\"><em>deepjazz</em></a> in 36 hours at a hackathon. It uses Keras &amp; Theano, two deep learning libraries, to generate jazz music. Specifically, it builds a two-layer <a href=\"http://deeplearning.net/tutorial/lstm.html\" rel=\"nofollow\">LSTM</a>, learning from the given MIDI file. It uses deep learning, the AI tech that powers <a href=\"https://deepmind.com/alpha-go.html\" rel=\"nofollow\">Google's AlphaGo</a> and <a href=\"https://www.ibm.com/smarterplanet/us/en/ibmwatson/what-is-watson.html\" rel=\"nofollow\">IBM's Watson</a>, <strong>to make music -- something that's considered as deeply human</strong>.</p>\n<p><a href=\"https://soundcloud.com/deepjazz-ai\" rel=\"nofollow\"><img alt=\"SoundCloud\" data-canonical-url=\"https://jisungk.github.io/deepjazz/img/button_soundcloud.png\" src=\"https://res.cloudinary.com/devpost/image/fetch/s--3huh7z87--/https://jisungk.github.io/deepjazz/img/button_soundcloud.png\"/></a><br/>\nCheck out deepjazz's music on <strong><a href=\"https://soundcloud.com/deepjazz-ai\" rel=\"nofollow\">SoundCloud</a></strong>!</p>\n<h3>Dependencies</h3>\n<ul>\n<li><a href=\"http://keras.io/#installation\" rel=\"nofollow\">Keras</a></li>\n<li><a href=\"http://deeplearning.net/software/theano/install.html#bleeding-edge-install-instructions\" rel=\"nofollow\">Theano</a> (\"bleeding-edge\" version on GitHub)</li>\n<li><a href=\"http://web.mit.edu/music21/doc/installing/index.html\" rel=\"nofollow\">music21</a></li>\n</ul>\n<h3>Instructions</h3>\n<p>Run on CPU with command:  </p>\n<pre class=\"language-nolang\"><code>python generator.py [# of epochs]\n</code></pre>\n<p>Run on GPU with command:  </p>\n<pre class=\"language-nolang\"><code>THEANO_FLAGS=mode=FAST_RUN,device=gpu,floatX=float32 python generator.py [# of epochs]\n</code></pre>\n<p>Note: <code>preprocess.py</code> must be modified to work with other MIDI files (the relevant \"melody\" MIDI part needs to be selected). The ability to handle this natively is a planned feature.</p>\n<h3>Author</h3>\n<p><a href=\"http://jisungkim.com\" rel=\"nofollow\">Ji-Sung Kim</a><br/>\nPrinceton University, Department of Computer Science<br/>\n<a href=\"mailto:jisungk@princeton.edu\" rel=\"nofollow\">jisungk@princeton.edu</a> </p>\n<h3>Citations</h3>\n<p>This project develops a lot of preprocessing code (with permission) from Evan Chow's <a href=\"https://github.com/evancchow/jazzml\" rel=\"nofollow\">jazzml</a>. Thank you <a href=\"https://www.linkedin.com/in/evancchow\" rel=\"nofollow\">Evan</a>! Public examples from the <a href=\"https://github.com/fchollet/keras\" rel=\"nofollow\">Keras documentation</a> were also referenced.</p>\n<h3>Code License, Media Copyright</h3>\n<p>Code is licensed under the Apache License 2.0<br/>\nImages and other media are copyrighted (Ji-Sung Kim)</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">keras</span></li><li><span class=\"cp-tag\">theano</span></li><li><span class=\"cp-tag\">music21</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/git\">git</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/github\">github</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/numpy\">numpy</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://deepjazz.io\" rel=\"nofollow\" target=\"_blank\" title=\"http://deepjazz.io\">\n<i class=\"ss-icon ss-link\"></i>\n<span>deepjazz.io</span>\n</a></li>\n<li><a href=\"https://github.com/jisungk/deepjazz\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/jisungk/deepjazz\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://soundcloud.com/deepjazz-ai\" rel=\"nofollow\" target=\"_blank\" title=\"https://soundcloud.com/deepjazz-ai\">\n<i class=\"ss-icon ss-link\"></i>\n<span>soundcloud.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Built it!"]], ["Banklytics", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Banklytics \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/408/datas/gallery.jpg\"/>\n<p>\n<i>Average bank balances across the US.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Banklytics \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/409/datas/gallery.jpg\"/>\n<p>\n<i>Ratios of balances and rewards.</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Data is always better represented and understood visually. Sometimes big excel sheets of numbers don't reveal patterns that would otherwise be obvious in visual representations. This motivated us to use Capital One's API to fetch the data that would doesn't say much on its own, but when plotted in different ways through Wolfram Mathematica, clear patterns become obvious.</p>\n<h2>What it does</h2>\n<p>We built a python program that fetches data from the API. This data is then parsed by two other python programs. One of them correlates average balance in banks to states nationwide. Our representation is limited by the data provided but easily extensible. The other one shows a correlation between the balance and the reward points in various peoples accounts. </p>\n<h2>How I built it</h2>\n<p>We spent most of our time learning Wolfram Mathematica, but it was worth it. We were inspired by the tweetable programs so we wanted to make our code as efficient as possible - hence all our Mathematica programs are less than 10 lines long. Figuring out the correct visuals and truncating boundary values was also a challenge. </p>\n<h2>Challenges I ran into</h2>\n<p>Learning the API took some time, and then trying to integrate our data into Wolfram Mathematica was challenging. Finding the best the visualizations for the data took a lot of time because we sampled our data on various visuals.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We had two first time Hackers and we were able to build a project that we are proud of. We were all able to effectively contribute to the project by dividing the tasks between ourselves.</p>\n<h2>What I learned</h2>\n<p>We learned Mathematica which is probably going to be very useful for further projects in college. We also saw some interesting relationships between the datasets.</p>\n<h2>What's next for Banklytics</h2>\n<p>We are going to try and analyze real world data from various sources based on our platform. This will actually let us discover trends that affect bank transactions. We are also planning on extending our platform to start Princeton's first Fintech club. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/wolfram-technologies\">wolfram-technologies</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/TheParkar/Banklytics.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/TheParkar/Banklytics.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["BlockBallot", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<h2>What it does</h2>\n<p>A decentralized voting infrastructure for the 21st century.</p>\n<h2>How we built it</h2>\n<h2>Challenges we ran into</h2>\n<h2>Accomplishments that we're proud of</h2>\n<h2>What we learned</h2>\n<h2>What's next for BlockBallot</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">solc</span></li><li><span class=\"cp-tag\">ethereum</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/siddMahen/blockballot\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/siddMahen/blockballot\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["CashMap", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/5pupstg0isA?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"CashMap \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/401/datas/gallery.jpg\"/>\n<p>\n<i>General</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"CashMap \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/400/datas/gallery.jpg\"/>\n<p>\n<i>Filter by date / account</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"CashMap \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/402/datas/gallery.jpg\"/>\n<p>\n<i>Click bubbles to show more details</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Introduction</h2>\n<p>CashMap is a web application prototype that allows users to input their consumer identification number (an identification number linked to their Capital One account) and then view and analyze their purchasing habits as visualized on a map of the general surrounding area.</p>\n<h2>Features</h2>\n<ul>\n<li>CashMap visualizes purchasing data by displaying connections from purchase locations to the consumer location. Connection colors are dependent on the day to help differentiate day-dependent spending habits.</li>\n<li>Purchase locations are covered with bubbles with sizes correlating to the frequency of visits to the location.  Location bubbles also display frequency of visits and amount spent when clicked.</li>\n<li>Purchasing data can be separated by date. Users can then see spending habits on certain days or analyze their spending habits over the course of time.</li>\n<li>Purchasing data can be separated by account. Users can then see correlation of spending habits in particular locations with particular accounts. </li>\n</ul>\n<h2>The purpose</h2>\n<p>With this information, users are able to accurately depict their spending habits based on location. The data visualized shows where in the general area their spending usually occurs, on which particular days, and how it changes over the course of time - a single graph isn\u2019t able to depict all of this data at once.\nThe visualization of data allows for user recognition of how they make use of their money. Visualizing data on a map that depicts location and frequency is much easier to understand and analyze than numbers thrown on a graph. Relative size and location are easily understood and thus spending habits are easily defined.</p>\n<h2>Implementation</h2>\n<p>CashMap is built with JavaScript and uses Capital One's Nessie API (to aggregate data from a given consumer) and the Google Maps API (to visualize data on a map of the general area).</p>\n<h2>What's next for CashMap</h2>\n<p>Hopefully to implement more features to further visualize data in a hassle-free manner that allows for better analysis of spending habits.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">nessie-api</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag\">html/css</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-maps\">google-maps</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://cash.reticent.io/\" rel=\"nofollow\" target=\"_blank\" title=\"http://cash.reticent.io/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>cash.reticent.io</span>\n</a></li>\n<li><a href=\"https://github.com/WildAndrewLee/Cash-Map\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/WildAndrewLee/Cash-Map\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Implemented data processing behavior as well as map drawing. Wrote basic web server using Node.js Express.", ""]], ["Drunk Psychic", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Drunk Psychic \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/154/datas/gallery.jpg\"/>\n<p>\n<i>Warning! Stop Drinking!</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Drunk Psychic \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/346/datas/gallery.jpg\"/>\n<p>\n<i>Warning Screen (Pebble)</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Drunk Psychic \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/153/datas/gallery.jpg\"/>\n<p>\n<i>Automated Message to Friend</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Drunk Psychic \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/334/datas/gallery.jpg\"/>\n<p>\n<i>Welcome Screen</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Drunk Psychic \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/335/datas/gallery.jpg\"/>\n<p>\n<i>Straightforward Tutorial</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Drunk Psychic \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/349/datas/gallery.jpg\"/>\n<p>\n<i>Test In Progress</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Drunk Psychic \u2013 screenshot 7\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/158/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Drunk Psychic \u2013 screenshot 8\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/157/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>What if your phone and smartwatch can look out for you while you drink? You'd drink safely with a peace of mind. Not only will you be warned when you're drinking too much, but your bank account will be protected from unintended expenditures and your trusted friends notified too. </p>\n<h2>What it does</h2>\n<p>Drunk Psychic is an Android and Pebble Watch app that can tell when you're too drunk. When you're too drunk, Drunk Psychic puts a hold on your bank account, preventing you from spending beyond your intentions and means. In addition, Drunk Psychic sends SMS messages to friends who care.</p>\n<p><strong>How It Works</strong></p>\n<ol>\n<li>To determine sobriety, simply open the app on Android. The companion Pebble Watch app activates automatically. </li>\n<li>Stretch out your arms to the side and give the Pebble Watch a flick. </li>\n<li>Walk straight. Using the on-board accelerometer, the Pebble Watch determines the jerkiness and straightness of the walk. </li>\n<li>If you're too drunk, Drunk Psychic protects your bank account and drafts a message for you to send to your friends.</li>\n</ol>\n<h2>How we built it</h2>\n<p>We approached this hack from 3 angles: the Android app, the Nessie API from CapitalOne, and the Pebble Watch app. </p>\n<p><strong>Pebble Watch</strong>\nThe Drunk Psychic Pebble app is designed with a simple, friendly and pleasing user interface. The Pebble app makes use of the built-in accelerometer to determine the nature and characteristics of the user's walk. Raw measurements from the accelerometer are fed into a calibrated algorithm that reliably determines if the user's walk is regular or excessively alcohol-induced.</p>\n<p><strong>CapitalOne Nessie API</strong>\nWe used CapitalOne's Nessie API to determine the amount of money in a user's <em>Checking</em> and <em>Savings</em> account. This information is really useful for calculating how much money in <em>Checking</em> the app should help protect.</p>\n<p><em><strong>Android App</strong></em>\nThe Android app ties the various features and systems together. It's also the primary user interface - it's just as simple and friendly to use as the Pebble app, but it contains much more information. We designed the Android app such that when the sobreity test is requested, the Pebble app activates automatically, leading to a seamless transition between these 2 devices. At the end of a test, the Pebble app reports various performance metrics to the Android app. These metrics determine if further actions such as Checkings account protection and automated friend messaging are activated.</p>\n<h2>Challenges we ran into</h2>\n<p>3/4 of the team have never done Android app programming before, and none of us has used/programmed a Pebble watch before. We encountered a steep learning curve. In addition, we struggled with making the asynchronous calls to CapitalOne's Nessie API work. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We're really proud to have completed an Android+Pebble project since most of us have never programmed an Android app before. Programming the Pebble watch is also new to everyone on the team. Given that no one has even used a Pebble watch before, we're proud to have come up with an Android+Pebble experience that is seamless and not too far off from what great Android+Pebble apps offer.  </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/pebble\">pebble</a></span></li><li><span class=\"cp-tag\">pebble-time</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c\">c</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/capital-one\">capital-one</a></span></li><li><span class=\"cp-tag\">nessie</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/mohaiminalaoun/Drunkness-tester\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/mohaiminalaoun/Drunkness-tester\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Star Gazer", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Star Gazer \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/329/datas/gallery.jpg\"/>\n<p>\n<i>Our Constellation Locator for Ursa Major</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>The night sky conains infinitely many stars. With modern computation technology, our team dreamed of being able to identify any given constellation.</p>\n<h2>What it does</h2>\n<p>It is a picture game, where a user is prompted to look for a constellation in random, and upon using the camera to snap it, the app either confirms or rejects it to be correct.</p>\n<h2>How we built it</h2>\n<p>We used Android Studio to integrate the java back end algorithms. The algorithems themselves were built using depth first search in order to locate distinct stars. </p>\n<h2>Challenges we ran into</h2>\n<p>The only part we still need to expand on is the integration via a java server in order to proccess through our image. Android was not completely compatible with all of the custom classes we had imported.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Our depth first search algorithms produces a beautiful \"beaded\" picture of the nightsky.</p>\n<h2>What we learned</h2>\n<p>How to use Android Studio - this is our first hackathon</p>\n<h2>What's next for Star Gazer</h2>\n<p>Integrate a java server successfully. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/jysohn/PrincetonHack2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/jysohn/PrincetonHack2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Front end development\n", "Provided support on the back-end development of the application; brought forth multiple implementation suggestions as well as utilization of code previously written for integration with front-end.", "Back end development. Developing an image processing algorithm that can clean up a picture with many points of light into one that just shows the main bright points (stars in a constellation), and another algorithm that can use these light points to compare to a database of relative star angles to determine whether a user's picture is of a given constellation."]], ["athousandwords", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>athousandwords:</h2>\n<p>Created for HackPrinceton Spring 2016 by Kevin Wang and Valerie Morin</p>\n<p>Single-page web app that finds an inspirational quote for any picture you upload by providing an image url. Recommended usage on picking quotes for Facebook profile pictures or Instagram photos. Feed that basic part of you! </p>\n<p>Image processing via API by <a href=\"https://clarifai.com/\" rel=\"nofollow\">https://clarifai.com/</a> and word processing using Python's NLTK. We built a framework in between the match the image tags with an appropriate quote. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">plsql</span></li><li><span class=\"cp-tag\">jupyter-notebook</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/django\">django</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://athousandwords.herokuapp.com\" rel=\"nofollow\" target=\"_blank\" title=\"http://athousandwords.herokuapp.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>athousandwords.herokuapp.com</span>\n</a></li>\n<li><a href=\"https://github.com/skwang/athousandwords\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/skwang/athousandwords\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Accelduino", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/rq81r6WTtbA?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Accelduino \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/284/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to create something that had a motion detection aspect to it that would trigger some sort of response. Obviously there are countless applications, but we went with a fun and light hearted sounding music generator.</p>\n<h2>What it does</h2>\n<p>It uses an accelerometer to detect spatial acceleration in 3 directions and converts it to different frequencies, which are then played through a speaker. We used a Bluetooth modem to remotely output the values to a computer, which could further process the data extensively for other applications. We also got it to support a Bluetooth chat interface that can be used to both have conversations and manipulate the frequencies.</p>\n<h2>How we built it</h2>\n<p>We integrated different components together using an Arduino and breadboard. We connected parts we found useful to make it portable, such as by making it battery controlled with a switch and adding a Bluetooth module.</p>\n<h2>Challenges we ran into</h2>\n<p>The main challenge was learning how to use an Arduino for the first time. We also ran into challenges with the Bluetooth modem, such as being unable to open Serial port emulators in Matlab. Another challenge was a lack of parts, including a barrel connector and 9V battery connector, so we improvised using electrical tape and zip ties, and chose our accelerometer sensor out of those that were made available to us.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>This was our first hardware hack and we were able to play around with different sensors and Arduino features.</p>\n<h2>What we learned</h2>\n<p>Most of what we implemented was new to us, including Arduino, the various sensors, and the Bluetooth modem.</p>\n<h2>What's next for Accelduino</h2>\n<p>We want to add a machine learning component to Accelduino for detecting whether a person is, say, standing, walking, or running, falling, or jumping and then trigger a response accordingly. Since the accelerometer is extremely sensitive in all 3 spatial dimensions, we should be able to detect various actions of a wearer. We also want to add other sensors, which can expand our design space and allow us to implement new functions.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag\">bluetooth-modem</span></li><li><span class=\"cp-tag\">base-shield</span></li><li><span class=\"cp-tag\">wires</span></li><li><span class=\"cp-tag\">speaker</span></li><li><span class=\"cp-tag\">switch</span></li><li><span class=\"cp-tag\">battery</span></li><li><span class=\"cp-tag\">breadboard</span></li><li><span class=\"cp-tag\">resistors</span></li><li><span class=\"cp-tag\">electrical-tape</span></li><li><span class=\"cp-tag\">zip-ties</span></li><li><span class=\"cp-tag\">solder</span></li></ul>\n</div>\n</div>", ["", "", ""]], ["metagenome annotation script", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"metagenome annotation script \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/298/datas/gallery.jpg\"/>\n<p>\n<i>beast lab computer running my script, using 44 threads at once!</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>I am studying the human gut microbiome by sequencing all the bacterial DNA in people's poop. One of the experiments I'm running involves figuring out what proteins all the DNA code for, and seeing if any protein DNA sequences are relatively more abundant in the gut microbiomes of healthy people compared to the gut microbiome of people with disease. I previously built a reference library of bacterial sequences annotated with protein functions. Because most bacteria have not been sequenced, I was only able to determine what protein were encoded in the DNA for a third of my sequences. To figure out what proteins were encoded by my other sequences, I wanted to assemble my DNA into partial genomes, and query them with the SEED protein annotation database (<a href=\"http://www.theseed.org/wiki/Main_Page\" rel=\"nofollow\">www.theseed.org/wiki/Main_Page</a>).</p>\n<h2>What it does</h2>\n<p>The code takes sequences which have already been assembled by Trinity (<a href=\"https://github.com/trinityrnaseq/trinityrnaseq/wiki\" rel=\"nofollow\">https://github.com/trinityrnaseq/trinityrnaseq/wiki</a>), and uses the BLAST algorithm (through the command line tool <a href=\"http://www.ncbi.nlm.nih.gov/books/NBK279690/\" rel=\"nofollow\">http://www.ncbi.nlm.nih.gov/books/NBK279690/</a>) to compare the sequences with the SEED protein annotation database.</p>\n<h2>How we built it</h2>\n<p>BLAST is run on the command line through bash scripts, and the amalgamation and extraction of sequence data is done with Perl. Bash scripts were also used to run the annotation individually for each microbiome sample.</p>\n<h2>Challenges we ran into</h2>\n<ul>\n<li>Some of the sequences are quite long, but it is possible for the first hundreds of hits in the SEED database to annotate the same sequence. To account for this, I took the best non-overlapping protein matches, and if any of the unmatched sequence segments were 500 nucleotides or longer, I queried them against the SEED database again.</li>\n<li>I spent an inordinate amount of time debugging my code that checked if the positions of two protein matches overlapped. Flashback to my first mock interview, where I spent 45 minutes blanking on how to determine if two rectangles overlap. D:</li>\n</ul>\n<h2>Accomplishments that we're proud of</h2>\n<p>The code works!</p>\n<h2>What we learned</h2>\n<ul>\n<li>In Perl, use \"if ((x&gt;0 &amp;&amp; x&lt;10) || (y&gt;0 &amp;&amp; y&lt;10))\" rather than 'if ((x&gt;0 and x&lt;10) or (y&gt;0 and y&lt;10))\".</li>\n<li>If you are checking to see if two things overlap, don't forget to check the case where one thing is completely inside the other thing</li>\n</ul>\n<h2>What's next for metagenome annotation script</h2>\n<p>The BLAST is probably going to take a week to run. I need it to finish faster so I can write it up in my thesis!</p>\n<p>Note: The relevant part of the GitHub repository linked is under the heading \"Create fasta file for bowtie index\".</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/perl\">perl</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bash\">bash</a></span></li><li><span class=\"cp-tag\">blast</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/ruthgrace/exploring_nafld_assembly\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ruthgrace/exploring_nafld_assembly\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I wrote the script", "I worked on the moral support backend, as well as the moral support frontend, as well as the moral support API."]], ["Light controlled lock", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>How to keep a lock secure with sensors.</p>\n<h2>What it does</h2>\n<p>You can lock something. To open it, you open it with a light source.</p>\n<h2>How I built it</h2>\n<p>With Arduino.</p>\n<h2>Challenges I ran into</h2>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<h2>What's next for Light controlled lock</h2>\n<p>Make it pretty.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag\">locks</span></li><li><span class=\"cp-tag\">motor</span></li><li><span class=\"cp-tag\">photosensors</span></li></ul>\n</div>\n</div>", [""]], ["Late Meal Or Nah?", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Late Meal Or Nah? \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/255/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>As new Princeton freshmen, we were constantly checking the dining hall hours page to see if it was late meal. We wanted to make the process easier and quicker.</p>\n<h2>What it does</h2>\n<p>Simple as it may be, the webpage tells you whether it is currently late meal or not. It also tells you how much time until late meal begins or ends.</p>\n<h2>How we built it</h2>\n<p>We used HTML and JavaScript. The domain came courtesy of domain.com and hosting is through Linode.</p>\n<h2>Challenges we ran into</h2>\n<p>We had no prior experience in HTML, JavaScript, webpage domains, and hosting.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We successfully created a webpage that works(?).</p>\n<h2>What we learned</h2>\n<p>We learned the basics of HTML, JavaScript, webpage domains, and hosting.</p>\n<h2>What's next for Late Meal Or Nah?</h2>\n<p>Beta testing, and maybe usage by the next freshman class.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/linode\">linode</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://www.latemeal.org\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.latemeal.org\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.latemeal.org</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the backend.", "", ""]], ["RunningM8", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/fqXl15gdVl0?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"RunningM8 \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/638/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"RunningM8 \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/592/datas/gallery.jpg\"/>\n<p>\n<i>official logo</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"RunningM8 \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/783/datas/gallery.jpg\"/>\n<p>\n<i>RunningM8 app</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"RunningM8 \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/782/datas/gallery.jpg\"/>\n<p>\n<i>RunningM8 app while in use</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"RunningM8 \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/583/datas/gallery.jpg\"/>\n<p>\n<i>myo wearable</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"RunningM8 \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/585/datas/gallery.jpg\"/>\n<p>\n<i>shoe mountable light arrangement</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"RunningM8 \u2013 screenshot 7\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/587/datas/gallery.jpg\"/>\n<p>\n<i>raspberry-pi with connections</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Jogging the same path can get dull sometimes. We wanted to add a wearable that can help you revitalize jogging. </p>\n<h2>What it does</h2>\n<p>The RunningM8 wearable + mobile companion generates jogging routes based on how long you would like to run for. The mobile app generates navigation (powered by Google Maps API) for a randomly chosen path based on your location. The wearable is a Myo + LED/Audio shoe mount that provides gesture controlled LED headlights for night running, LED turn signalling, and a digital bell.</p>\n<p>LED lights keeps the runner visible at night and illuminate their path. There is also a buzzer that can be toggled with a Myo gesture that will alert pedestrians ahead of your path. In addition gestures such as \"to the left\" and \"to the right\" can trigger turning signals on the go! We plan to have the Android app toggle the LED turn signals based on turn-by-turn navigation. No need to stress over the route by looking at your phone!</p>\n<h2>How we built it</h2>\n<p>We used a Raspberry Pi for software relating to the light signals and Android for the maps mobile app. We used a open-source library called myo-raw to read the Myo directly to Linux. We were able train our program to understand the difference between 7 separate gestures. Once trained, a Python program determines which gesture is being performed and then reacts by turning on various ports connected to LEDs. Our android app uses the Google Maps API and built in Android studio, and chooses random destinations based on distance equations.</p>\n<h2>Challenges we ran into</h2>\n<p>Unfortunately there was no SDK for Unix for the Myo! This meant we had to hack away at a third-party library to manually configure gestures. We also were unable to locate a Wifi adaptor to match up an android app with the raspberry pi in order to get turn-by-turn LEDs changed by Navigation. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Being able to control turning signals with your arm muscles! Random path generation!</p>\n<h2>What we learned</h2>\n<p>How to work with a team :). Struggles of working with hardware debugging.</p>\n<h2>What's next for Running M8</h2>\n<p>Running</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/myo\">myo</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li><li><span class=\"cp-tag\">unix</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-maps\">google-maps</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag\">myo-raw</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/dxuprog/RunningM8\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/dxuprog/RunningM8\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Candidate Attack", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>CandidateAttack</p>\n<p>Project Type: Android Mobile Application - Arcade Game</p>\n<p>Purpose of the Project: Proof of Concept</p>\n<p>Explanation: We implemented basic object-oriented programming to create this game using skills learned in COS 126 and COS 226. The introcs library was used mainly for the access of the StdDraw and Stopwatch APIs. Microsoft Office was used to design the background images used in this game.</p>\n<p>Limitations: \n             a) To return to the Main Menu, one has to close and restart the Application\n             b) Design needs significant improvement\n             c) Product is lacking auditory characteristics\n             d) High Scores screen does not display properly\n             e) Product has not been converted to be compatible with Android devices\n             f) Some minor bug fixes\nThis product is not finalized. It is previewing the essential characteristics and basic mechanisms that the game \"Candidate Attack\" is going to have in its final version. We hope to use kd trees in the future to optimize the time it takes to search for different objects.</p>\n<p>Rules of the game:</p>\n<p>Bernie Sanders: click, 1 point\nHillary Clinton: hold down, 1 point\nDonald Trump: click, spawns two Angry Trumps each worth 2 points\nTed Cruz: game ends if clicked</p>\n<p>If any candidate, other than Ted Cruz, is on the screen for 3 seconds, the game will end. Ted Cruz will disappear after 3 seconds.</p>\n<p>Required Libraries:\nintrocs</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/pkushima/CandidateAttack.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/pkushima/CandidateAttack.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["All stages of development", "I worked on all stages of the development of the application", "Backend ", ""]], ["Reminisce", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>My inspiration for this project stems from my interest in accessing old memories with friends and family. With this application, I can look back to any date and read past messages with any person.</p>\n<h2>What it does</h2>\n<p>Purpose: Open any saved message from any date. Simply type in a date to begin. After reading over all the messages from that date, type in any unique part of the title to open all the messages with that phrase.</p>\n<h2>How I built it</h2>\n<p>This application was built using Bash and a GUI library called CocoaDialog.</p>\n<h2>Challenges I ran into</h2>\n<p>As a newcomer to shell-scripting, I found learning the language in a few hours to be quite challenging! I struggled with opening files with a particular name, but ultimately figured it out with the help of various documentation and other peers. Finally, I worked with a new library named CocoaDialog which gave me some interesting outputs from time to time, but was able to parse through them and achieve my intended result.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Learning shell scripting was difficult, but I'm proud I was able to create such a program and even develop a GUI for it. Furthermore, it was my first solo hack-- I worked along to create this application.</p>\n<h2>What I learned</h2>\n<p>Bash is an interesting language. It might be easier to do everything in Python!</p>\n<h2>What's next for Reminisce</h2>\n<p>Implementation in another language(such as Python) in order to add more GUI elements and parse through the titles of various messages.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bash\">bash</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/sanghavi1/Reminisce\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/sanghavi1/Reminisce\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["EmoFrontalLobe", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"EmoFrontalLobe \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/206/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"EmoFrontalLobe \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/195/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Human communication is a <strong>complex and powerful</strong> process. A thought or a feeling, shaped by the mental state of the person, translated into the language she speaks, and transmitted over a variety of media. To empower communication is to strength all parts of this process. Our goal is to prove how neuroscience and machine learning can improve the quality of our day to day communication.</p>\n<h2>What it does</h2>\n<p>We focus on leveraging two aspects to directly aid the communication - <strong>subtle brain context</strong> and <strong>natural language processing</strong>. In addition, this tool also incorporates real time speech to text and multi-language translation to facilitate communication in an increasingly globalized world.</p>\n<h2>How we built it</h2>\n<p>The audio data is recorded and converted to text to allow translation and sentimental analysis. Brain waveform of the communicator was measured by a Muse headband. This rich data was then processed with averaging techniques and frequency filtering to determine lethargic and active mental states. The sentiments of the message, couple with the mindset of the communicator, give a rich context to to the message conveyed. We demonstrate this by selecting specific emojis to best represent the tone of the message and the mental state of the speaker.</p>\n<h2>Challenges we ran into</h2>\n<p>The single greatest challenge is interfacing among many different pieces of technologies. From the Muse band to the sentimental analysis toolkit to build web-based tools on IBM BlueMix, it was not trivial to determine the most efficient way to move data from stage to stage and enable the integrated functionalities. We are able to conquer the challenge because of the diverse backgrounds of the team members from Computer Science, Information Management, and Electrical Engineering, with expertise in areas from hardware, neuroscience, and backend and frontend dev.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We have an equal representation of both genders in our team! We have a first time hacker! We come from four different cities across US and began working as a tightly knitted team instantly. We all worked on something new for the first time during this project and learned tons!</p>\n<h2>What we learned</h2>\n<p>Fancy new gadgets are also finicky to work with.\nProject planning and delegation are the most important step of a hackathon project.\nAlways take on a task we have not done before.</p>\n<h2>What's next for EmoFrontalLobe</h2>\n<p>We will refine our system and improve the integration of interfacing technologies. We strongly believe the most advanced technologies is only useful when they can benefit the most ubiquitous needs. We look forward to launch a mobile based tool enabled by our system as the new means of communication.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/muse\">muse</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bluemix\">bluemix</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/natural-language-processing\">natural-language-processing</a></span></li><li><span class=\"cp-tag\">neuroscience</span></li><li><span class=\"cp-tag\">signals</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ibm-watson\">ibm-watson</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://s2t.mybluemix.net/\" rel=\"nofollow\" target=\"_blank\" title=\"https://s2t.mybluemix.net/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>s2t.mybluemix.net</span>\n</a></li>\n<li><a href=\"https://analyzerr.mybluemix.net/\" rel=\"nofollow\" target=\"_blank\" title=\"https://analyzerr.mybluemix.net/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>analyzerr.mybluemix.net</span>\n</a></li>\n<li><a href=\"https://app.box.com/s/3pdgtm87tjfbcge4rsc5n4ugrd6detr7\" rel=\"nofollow\" target=\"_blank\" title=\"https://app.box.com/s/3pdgtm87tjfbcge4rsc5n4ugrd6detr7\">\n<i class=\"ss-icon ss-link\"></i>\n<span>app.box.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on interfacing with the Muse headband to collect, process, and analyze brain EEG waveforms to determine mental state of the user.", "I worked on implementing the 2 websites for speech to text translation, and the text analyzer website using Node.js, also worked on the Google Translation API for the text to speech portion using javascript/jQuery. I \nstyled the 2 websites using basic HTML/CSS. ", "", ""]], ["StockTalk", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"StockTalk \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/365/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"StockTalk \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/360/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"StockTalk \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/361/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"StockTalk \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/364/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"StockTalk \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/362/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"StockTalk \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/359/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"StockTalk \u2013 screenshot 7\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/363/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"StockTalk \u2013 screenshot 8\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/366/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>So we kind of have a Robinhood obsession. Robinhood is a stock trading app with no transaction fees, which makes it incredibly addicting. But when we started, we had no idea how to make educated decisions about when to buy and sell. (True story: one of our members once bought a stock that dropped 60% the next day). What's a stochastic? What's a moving point average? How do I not go broke?</p>\n<h2>What it does</h2>\n<p>Enter StockTalk, an iPhone app that lets you create your own algorithms and test them instantaneously on historic data. StockTalk shows a graph  plotting what your earnings/losses would have been over the time period. You can then compare your earnings with our metrics. Is your algorithm 0.03% as efficient as a random one? Maybe don't become a broker just yet.</p>\n<h2>How we built it</h2>\n<p>Our iPhone app allows the user to create a custom algorithm to determine when to buy/sell a stock of their choice. It then sends the ticker and algorithm request to our web API (built with Node.js), which requests historical stock data through the Yahoo Finance API, then runs through the user's algorithm and responds with a JSON string containing its performance based on the historical data, and various comparisons with our own algorithms. The iPhone app then takes the response from the web API and graphs the hypothetical algorithm's performance, along with the stock's historical prices. </p>\n<h2>Challenges we ran into</h2>\n<p>Getting started was a bit rough. Callback functions were totally new to us, and so setting up the infrastructure for communication took a bit. After we analyzed the data and sent it to mobile, we struggled with preloading data and asynchronous functions. </p>\n<p>Also, we ran into a lot of difficulty using the Robinhood API to gather user information. It turns out that the API might actually be depreciated, and we didn't have an authentication code that would allow the functions to work.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>None of us had any real experience using Node.js, let alone writing a web API with it and having it communicate with requests from iOS. We managed to pull stock data, run all sorts of data analytics on the historic charts, and display them in an intuitive way -- all using frameworks and APIs that we learned on site.</p>\n<p>We're also proud of how efficiently we worked together. </p>\n<h2>What we learned</h2>\n<p>When your algorithm buys every time the stock is about to go down, and sells every time it's about to go up, you don't make very much money.</p>\n<h2>What's next for StockTalk</h2>\n<p>We'd like to aim for more customizable algorithms, so that users can test out more types of algorithms. Along with that, we'd make a UI for users to make their own algorithms. Perhaps most importantly, we want to integrate with a platform to automate actual trading, so that once users have evaluated their algorithms, they can easily put them into practice. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag\">bemsimplelinegraph</span></li><li><span class=\"cp-tag\">yahoo-finance</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/annieechen/Brokerface\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/annieechen/Brokerface\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://stocktalk-dduan97.c9users.io/\" rel=\"nofollow\" target=\"_blank\" title=\"https://stocktalk-dduan97.c9users.io/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>stocktalk-dduan97.c9users.io</span>\n</a></li>\n<li><a href=\"https://github.com/jweinstein2/StockTalk\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/jweinstein2/StockTalk\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]]]