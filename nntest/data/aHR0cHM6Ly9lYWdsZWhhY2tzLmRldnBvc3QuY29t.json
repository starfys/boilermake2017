[["sample-hack", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<h2>What it does</h2>\n<h2>How I built it</h2>\n<h2>Challenges I ran into</h2>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<h2>What's next for sample-hack</h2>\n<p>YOLO </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://clover.me\" rel=\"nofollow\" target=\"_blank\" title=\"http://clover.me\">\n<i class=\"ss-icon ss-link\"></i>\n<span>clover.me</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["WhatsTheLine", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>WhatsTheLine</h1>\n<p>This app is community driven app based on not having to wait in line. Other users can check on the wait of restaurants that they are near or around so that you can check on their reports and decide whether or not it's worth it to wait in line. This app features a favorite system that allows you to keep track of your favorite places to eat. It also allows you to search for restaurants near you so you can find a quick bite to eat (Work in Progress). </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/dougiefresh1233/WhatsTheLine\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/dougiefresh1233/WhatsTheLine\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["StudyWebsite", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"StudyWebsite \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/686/datas/gallery.jpg\"/>\n<p>\n<i>For The Art Section</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>StudyWebsite</h1>\n<p>The process of building our website was to create a page where 10th graders in our school specifically learn their subjects based on the TEKS. With this website, students will be able to master their subjects in a quick and easy way. We plan to expand with a wider variety of subjects and grade levels that can help all the students in Texas. When we have a deeper understanding of scripting languages we would like to have more interactive activities likes quizzes.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/CoconutPrime/StudyWebsite\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/CoconutPrime/StudyWebsite\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Sigil", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Prizes We Are Entering For</h2>\n<p>We are entering for the GitHub statue. We build the shape recognition tool we use for determining what sigil matches what spell. The tool can be used for C# shape recognition of any 0 to 4 sided shapes. The GitHub link leads to the code for only this library, not the entire project.</p>\n<h2>Inspiration</h2>\n<p>I always used to dreamed of being able to cast spells like the wizards I saw on TV. With the leap motion, I realized that that is now possible.</p>\n<h2>What it does</h2>\n<p>Sigil creates an interface that allows you to cast spells by drawing out different arrangements of shapes, or sigils, with your hands.</p>\n<h2>How we built it</h2>\n<p>The entirety of the project was built in Unity, with two parts taking the majority of the importance. The first is the leap motion recognition, to ensure that the hand is tracked properly and as smoothly as possible. The other part is a shape recognition library that allows us to convert your handwork into a multitude of actual spells.</p>\n<h2>Challenges we ran into</h2>\n<p>Both of us have never used Unity nor C# to build a large project before, so we had to learn a lot about the two.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>A completely functional shape recognition library. The library itself was based of a college thesis, so it was no simple task.</p>\n<h2>What we learned</h2>\n<p>We both learned a lot of Unity and C#. In addition, the way we split the project required a lot of teamwork. So we learned more about how to integrate two projects into one product.</p>\n<h2>What's next for Sigil</h2>\n<p>We have a lot of plans in regards to virtual reality. We were not able to implement them at the hackathon because our laptops simply couldn't handle the Oculus Rift requirements.</p>\n<p>In addition, we would like to move from the leap motion to the Oculus Rift's upcoming hand sensors or the Manis Gloves to increase the accuracy of hand movements.</p>\n<p>Lastly, we would love to keep implementing new spells and building onto our shape recognition library.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/leap-motion\">leap-motion</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/glooga/CSharp-ShapeRecognition\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/glooga/CSharp-ShapeRecognition\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked in pattern recognition, level design, and asset creation. Specifically, I wrote the algorithm that simplified raw input from the Leap Motion into simpler shapes, and then decided what category the shape fall in. Then, I created a simple map, enemy a.i., and particle systems to demonstrate the magic system in.", ""]], ["Leap motion strategy game", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Previous project of Trevor Roach</p>\n<h2>How we built it</h2>\n<p>By using C# scripts, unity software and leapmotion APIs</p>\n<h2>Challenges we ran into</h2>\n<p>Getting the leapmotion to register as a variable, and making the APIs work the way we want to </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Made hand models appear in unity, and managed to shoot projectiles with them.</p>\n<h2>What we learned</h2>\n<p>How the leapmotion interacts with different software, and how to implement APIs into the game</p>\n<h2>What's next for Leap motion strategy game</h2>\n<p>We will complete the game with all features in the coming weeks/months/years</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li></ul>\n</div>\n</div>", ["", "", ""]], ["vrbl", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"vrbl \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/722/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"vrbl \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/701/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"vrbl \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/702/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"vrbl \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/695/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>I have known several brilliant people with autism or other speech disorders that have great ideas and would make fantastic entrepreneurs, but due to their disabilities, couldn't share or communicate with their peers. vrbl seeks to solve that problem by creating a software interface to give those people a voice.</p>\n<h2>What it does</h2>\n<p>vrbl utilizes pre-made phrases and words, sorted by type, to allow users to construct sentences and speak them using a synthesized voice.</p>\n<h2>How we built it</h2>\n<p>We used Xcode with Apple's AVFoundation framework to process input from phrase buttons and speak them using Apple's library of voices.</p>\n<h2>Challenges we ran into</h2>\n<p>The biggest problem when synthesizing voices is realism. The best solutions to voice synthesis are very expensive, so we used the best free library that we could.\nAnother challenge is UI design. It needs to be easy to use, with large fonts and buttons, but at the same time able to display lots of information. We opted for a very simplistic, friendly design.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Parsing the input from the user and feeding that into AVFoundation's AVSpeechSynthesis class. </p>\n<h2>What we learned</h2>\n<p>Realism is IMPORTANT. It's very hard to give a synth voice an identity, to attach it to a face. That technology requires serious advances before it will become seamless.</p>\n<h2>What's next for vrbl</h2>\n<p>\u2022 Expand further with iPad and Android apps.\n\u2022 Get the product into the mainstream, and establish it as a formidable opponent to the expensive solutions currently on the market.\n\u2022 Raise awareness about autism, Down's Syndrome, and other mental disabilities.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xcode\">xcode</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/avfoundation\">avfoundation</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["LEDisplay", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"LEDisplay \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/704/datas/gallery.jpg\"/>\n<p>\n<i>LED Display</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"LEDisplay \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/705/datas/gallery.jpg\"/>\n<p>\n<i>Arduino - HC-06 Bluetooth Chip</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"LEDisplay \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/706/datas/gallery.jpg\"/>\n<p>\n<i>Rear Design</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"LEDisplay \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/707/datas/gallery.jpg\"/>\n<p>\n<i>Arduino Uno r3 Micro Controller</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration - It all started back in Art History when our teacher Mrs. Blair introduced my partner Edward and me to the vivid imagery in the world around us. We decided we would like to share this random chaotic form of nature in what can be a aesthetically pleasing clock or a pumping electronic screen for a rave.</h2>\n<h2>What it does - It's multifunctional in that it can serve as a clock or as a \"painted\" screen constantly changing, flooding the room with warm and bright to dim and cold colors, illuminating the world around it.</h2>\n<h2>How we built it - Starting from scratch, we assembled a very eco - friendly design with recyclable cardboard, recyclable table cloth, and a bluetooth low energy system with power efficient LED's. The diamond pattern seen on the display when lit up was hand carved with a box cutter. The LED's were carefully integrated into the cardboard by wrapping around to form the circle base for the clock style design. A semi-translucent white table cloth was wrapped around to refract the light creating a brightly lit diamond design. Arduino and Android Studio were used to make an app for the LED Display to control the clock like faces.</h2>\n<h2>Challenges we ran into - Bluetooth Low Energy proved to be the most frustrating of challenges as sending information back and forth and trying to send multiple strands at different time intervals proved to be extremely difficult. The hardware design for the LED Strip used to power it without over or under powering while also being extremely fast and stable without random flickering took much trial and error.</h2>\n<h2>Accomplishments that we're proud of - Making this Design and just watching the lights fade in and out, spin and move in all directions was one of the most satisfying experiences for us.</h2>\n<h2>What we learned - We learned to not use Bluetooth Low Energy next time as it proves to be somewhat unreliable and generally difficult to properly use.</h2>\n<h2>What's next for LEDisplay - We would like to improve the patterns and have it sync with music to flash with the beat and also use a 3D printer instead of cut out cardboard.</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["MasterServer - Server/Client Database Manager", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>I've been making a game and came into the struggle and annoyance of port forwarding rules , public and private ip addresses and the works. I wanted to create a punch-through service that can be implemented into popular engines with almost no work to save time.</p>\n<h2>What it does</h2>\n<p>It stores IP addresses and anything else you might need(Custom Server Options, number of players) and uses them to connect players together.</p>\n<h2>How I built it</h2>\n<p>I built the base network code that shares the IP addresses and any custom data easily so game developers can then quickly build their complementing solution on their choice of game engine. Since Unity is built in C#, the language I used to build it , it is extremely easy to implement in.</p>\n<h2>Challenges I ran into</h2>\n<p>I built the whole server and client application for AWS EC2 using the socket class and when it didn't end up working I had to scrap the whole thing and use DynamoDB instead.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Tried many solutions to finally create a working product.</p>\n<h2>What I learned</h2>\n<h2>What's next for MasterServer - Server/Client Database Manager</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-dynamodb\">amazon-dynamodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-ec2\">amazon-ec2</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li></ul>\n</div>\n</div>", [""]], ["MLH Linux", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"MLH Linux \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/720/datas/gallery.jpg\"/>\n<p>\n<i>Splash Screen</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Complete and Utter Desperation for an idea lead to talking about creating a Star Wars OS but then we realized that none of us watched Star Wars so we decided on the first thing we saw which was MLH</p>\n<h2>What it does</h2>\n<p>It is an OS tailored for the Hackathon Host and Manager, It has customized designs as well as Notification Calendar, Tickets for Errors, Form.io based Task Manager and a fully functional ticket system. </p>\n<h2>How we built it</h2>\n<p>We took Ubuntu 14.04 with Gnome version 2 and we started from the bottom (the Splash Screen) which we created a NEW method of splash screen creation as well as implementation. We customized the Icons and Settings Tabs. We installed the necessary packages for notifications and the calendar which we then created a script (and a cron job to run it) to ping the Google Calendar IP every 30 seconds. I then edited a preexisting template on form.io which I configured on the Ubuntu end to check for changes on the website and update.</p>\n<h2>Challenges we ran into</h2>\n<p>Configuring the Splash Screen, writing the script to ping GC as well as getting Ubuntu to check for updates on the website.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>The Splash Screen as well as the Ubuntu Icons which we edited to meet the style of the OS. </p>\n<h2>What we learned</h2>\n<p>That GNOME2 is unnecessarily painful, The movement of config files is a serious pain and that cron jobs should not be set as root if not necessary</p>\n<h2>What's next for MLH Linux</h2>\n<p>Custom Scripts to run email requests for supervisors, prewritten messages for sponsors, and a logistics management system (base)</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ubuntu\">ubuntu</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/linux\">linux</a></span></li><li><span class=\"cp-tag\">plymouth</span></li></ul>\n</div>\n</div>", ["I gave moral support", ""]], ["Transcribe Space", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p><a href=\"http://transcribe.space/\" rel=\"nofollow\"><img alt=\"Demo GIF\" data-canonical-url=\"http://transcribe.space/demo.gif\" src=\"https://res.cloudinary.com/devpost/image/fetch/s--j_zA_0aU--/http://transcribe.space/demo.gif\"/></a></p>\n<h2>Inspiration</h2>\n<p>100% accurate verbatim notes*! Annoyed by professors you can't understand? Can't hear all the words? Wanted to ask a question without interrupting? Well, we set out to solve these problems.</p>\n<h2>What it does</h2>\n<p>Transcribe Space allows a speaker to host a room and have their spoken words transcribed in real-time and shared with others. Along with a chat room, you won't feel lost when you didn't catch something.</p>\n<h2>How we built it</h2>\n<p>Using the Web Speech API, we are able to transcribe text in real time. Node.js and Socket.io allow for easy two-way communication. A web front-end allows anyone to connect and join the talk.</p>\n<h2>Challenges we ran into</h2>\n<p>Learning new technologies (most of us used completely new technologies), and creating accurate transcriptions (and being able to fix them retroactively).</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are especially proud of the ability for any member to flag individual words for review. Also the domain name.</p>\n<h2>What we learned</h2>\n<p>A <em>lot</em> of new technologies, real-time communication using web sockets, basic web development, and a few of us discovered a new-found passion for computer science.</p>\n<h2>What's next for Transcribe Space</h2>\n<p>Expanding the user base, adding moderators, mobile apps, and personal messages.</p>\n<p><em>*once corrected by a human being</em></p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-web-speech-api\">google-web-speech-api</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/socket-io\">socket.io</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://transcribe.space/\" rel=\"nofollow\" target=\"_blank\" title=\"https://transcribe.space/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>transcribe.space</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["SpLifter", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"SpLifter \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/731/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"SpLifter \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/732/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We were inspired by an event that occurred to one of us. We noticed that a total stranger just happened to get in a lyft that was near an uber that we were getting in. Later on, we noticed that as we got off, they also got off at the same location. We realized that there is a potential for an application that can connect people who are looking to rideshare together!</p>\n<h2>What it does</h2>\n<p>Connects people to rideshare together.</p>\n<h2>How we built it</h2>\n<p>IOS front end with a PHP/Javascript backend, along with a webpage.</p>\n<h2>Challenges we ran into</h2>\n<p>We were unfamiliar with the backend and some other APIs, and struggled with some of the code.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We finished!</p>\n<h2>What we learned</h2>\n<p>We learned a lot regarding backend, and overall programming and development.</p>\n<h2>What's next for SpLifter</h2>\n<p>We plan on continuing to implement various functionality into the program and creating a better overall app.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/iphone-sdk\">iphone-sdk</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ios\">ios</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xcode\">xcode</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://www.splifter.com\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.splifter.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.splifter.com</span>\n</a></li>\n<li><a href=\"https://github.com/dingwilson/SpLifter\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/dingwilson/SpLifter\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on all the backend aspects of the application. Including: the firebase database structure and management; the backend aws server and main matching algorithms that interconnected firebase and the app (written in PHP and vanilla JavaScript)", "", ""]], ["Physercise", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>My mom works as an affiliate as a nurse for Parkland at Dallas County Jail and a recurring theme at the hospital is the inmates are not participating in the physical therapy because it hurts, and it is confusing. The hospital gives its inmates paper diagrams that are confusing. We are hoping to alleviate this complication through compiling videos off the internet. There is no program like this. </p>\n<h2>What it does</h2>\n<p>Comprehensive program that meets the needs for patients undergoing the exhausting and extensive physical therapy </p>\n<h2>How we built it</h2>\n<p>We were going to make a website on Domains.com, but we encountered a program when the servers were not working with us. </p>\n<h2>Challenges we ran into</h2>\n<p>We were split on ideas by the middle of the Hackathon but decided all our ideas are great and we should try to implement all of them so we did.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Made a website, learned JavaScript for the first time, and learned how to graphically design beautiful logos.</p>\n<h2>What we learned</h2>\n<p>What I personally learned is that working with a team is difficult when everybody has a great idea. I also learned that it is very difficult to start a feature in Java and finish in JavaScript is difficult in half an hour but it is feasible.</p>\n<h2>What's next for Physercise</h2>\n<p>I plan to make this website an app, and make it available on TVs for the Dallas County Jail workout rooms, and in Baylor Scott &amp; White Hospitals as the official physical therapy app.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/wordpress\">wordpress</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://physercise.wordpress.com/\" rel=\"nofollow\" target=\"_blank\" title=\"https://physercise.wordpress.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>physercise.wordpress.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I helped in the original design of the website as well as server start up", "", "", "", ""]], ["CSS to Sass/Stylus", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"CSS to Sass/Stylus \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/709/datas/gallery.jpg\"/>\n<p>\n<i>GIF of my package in action!</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>After being <strong>tired of translating CSS code</strong> into Sass and/or Stylus through removal of semi colons, colons, brackets, and more, I decided to make a Sublime Text 3 package to solve this problem.</p>\n<h2>What it does</h2>\n<p>My package <strong>magically</strong> changes the CSS to Sass or Stylus :)</p>\n<h2>How we built it</h2>\n<p>This package was coded in python and was developed <strong>by Sublime Text 3 users... for Sumblime Text 3 users...</strong></p>\n<h2>Challenges we ran into</h2>\n<p>None. I'mma straight up <strong>baller</strong>.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Being able to offer a <strong>fully working package</strong> for Sublime Text 3, having no previous experience creating packages for Sublime Text 3.</p>\n<h2>What we learned</h2>\n<p>I learned how to develop Sublime Text 3 packages.</p>\n<h2>What's next for CSS to Sass/Stylus</h2>\n<p>I plan on <strong>releasing this package</strong> on Package Control for free, to allow more people who have been plagued by this pandemic, to seek refuge, in my package's safe haven. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sublime-text\">sublime-text</a></span></li><li><span class=\"cp-tag\">package-control</span></li><li><span class=\"cp-tag\">package-manager</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/NeelSarwal/CSS-to-SASS-Stylus\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/NeelSarwal/CSS-to-SASS-Stylus\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", "", ""]], ["Pointly", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We were sick of the inundation of unoriginal task managers that had swept the world of technology in the last few years. We felt a burning desire to bring to life the one task manager to rule them all - one that actually made the users want to complete the tasks.</p>\n<h2>What it does</h2>\n<p>Pointly is an innovative web service that allows administrators to set tasks for their users with a certain point value for each task. Admins also set rewards at certain point values, which provide the users with an incentive to complete their otherwise mundane tasks.</p>\n<h2>How we built it</h2>\n<p>This project was built on the Meteor.js web framework. It used HTML5 and Stylus for CSS3.</p>\n<h2>Challenges we ran into</h2>\n<p>None</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We managed to set up a fully-functioning user profile system that displays tasks that are either completed or yet to be completed in real time. </p>\n<h2>What we learned</h2>\n<p>Meteor.js</p>\n<h2>What's next for Pointly</h2>\n<p>We plan on going into full web deployment soon.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/meteor-js\">meteor.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/stylus\">stylus</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sass\">sass</a></span></li></ul>\n</div>\n</div>", ["", "", "", "", ""]], ["Simple AWS VPN", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>I was <em>trying</em> to teach a FormIO workshop yesterday, when the worst possible thing happened - the school <strong>blocked the git protocol.</strong> </p>\n<h2>What it does</h2>\n<p>It's a VPN that runs on AWS EC2.</p>\n<h2>How we built it</h2>\n<p>We built it using AWS CloudFormat.</p>\n<h2>Challenges we ran into</h2>\n<p>This project was virtually challenge free due to my superior skills in web development.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Succesfully created a VPN running on AWE E2</p>\n<h2>What we learned</h2>\n<p>That restriction free access to any website is possible.</p>\n<h2>What's next for Simple AWS VPN</h2>\n<p>We plan to open source and write a guide on how to install this on an AWS Free Tier yourself.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag\">vpn</span></li><li><span class=\"cp-tag\">server</span></li><li><span class=\"cp-tag\">cloudformation</span></li></ul>\n</div>\n</div>", ["", "", "", "", ""]], ["EventSnap", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"EventSnap \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/684/datas/gallery.jpg\"/>\n<p>\n<i>LOGO</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"EventSnap \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/685/datas/gallery.jpg\"/>\n<p>\n<i>Demo Photo</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"EventSnap \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/694/datas/gallery.jpg\"/>\n<p>\n<i>Calendar Event</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Walking down halls in between classes, I find that I barely have enough time to make it to my next class, let alone, having the chance to look at flyers posted on bulletin boards. I just wish there was a way to create an event for a flyer in a SNAP...</p>\n<h2>What it does</h2>\n<p>Simple: creates calendar events for a given flyer in a SNAP </p>\n<h2>How we built it</h2>\n<p>We used Google's tesseract OCR to convert the image to text and used Python, with its regex library, to find text patterns such as date, time, and location to eventually create the content of the calendar event using a Google API and Google Authentication. To obtain the picture, we built an android app that integrates with form.io to upload a picture through a form, which is sent to our server.</p>\n<h2>Challenges we ran into</h2>\n<p>TOO many... Google OAuthentication, No experience with Android Programming, Dropbox OAuthentication, Wifi Stability, did I mention OAuthentication?</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Extremely proud of the teamwork displayed by all of us with completely different backgrounds; Overcoming complications and figuring out ways to circumnavigate these problems; Having a lot of fun while building something really cool</p>\n<h2>What we learned</h2>\n<p>Coding is tough to do well in a short amount of time. You're faced with design and functionality decisions. Sacrifices have to be made. Everything does not go according to plan, so always have a plan B.</p>\n<h2>What's next for EventSnap</h2>\n<p>Adding the ability for any user to use the service; also, augmenting the functionality to add contacts from a business card in a SNAP!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/tesseract\">tesseract</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">regex</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/oauth\">oauth</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://github.com/johnsonpk/eagleHax\" rel=\"nofollow\" target=\"_blank\" title=\"http://github.com/johnsonpk/eagleHax\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["UntitledMusic", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>The need to bring people and friends together with an interesting way of listening to music together. As well as the need to try something new and difficult for us</p>\n<h2>What it does</h2>\n<p>Invite your friends and suggest songs for others to listen to. \n    The colum on the left is the chat box where you can talk with other people in real time, and the column on the right is a list of music that's been played. \n    Type in a youtube link down near the action button, and everyone in the same chat room as you will be able to listen to the same music you play!</p>\n<h2>How we built it</h2>\n<p>Xavier Brown began the backpage of the website during that time, using only simple styling and Html.\n    -Chat Box was created using javascript and socket.io , It turned out to be very useful overall as it is already used in other chats like this.\n    -Music retrieval was implemented short after, using the Node javaScript libraries called Youtube Download Core in order to pull the audio from any youtube link and play it throughout all users.\n    Max Reyes was very involved throughout the back and front phases of the project.<br/>\n    -Coming up with many of the features it now holds, being the projects leader and debugging throughout the whole process\n    Samuel Zapote began with the front of the website during the second stage, after much of the basic back code was already implemented. \n    -The design was created and managed. \n    -Logo was created\n    -As well as making sure the whole front page of the website was well organized and positioned as a whole. \n    -Html organization, and Responsive styling was used throughout this process. Making sure everything worked accordingly with the JavaScript.</p>\n<h2>Challenges we ran into</h2>\n<p>Working with each others way of coding and implementing code we all would understand. As well as all of us having to learn something we've never done before.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Building a fully interactive chat along with building the Music Streamer, along with the overall design.</p>\n<h2>What we learned</h2>\n<p>To work patiently and accordingly, to make sure to learn the other programmers way of thinking and the way they tackle challenges, in order to work smoothly.</p>\n<h2>What's next for UntitledMusic</h2>\n<p>We hope to work on it until it is fully finished and are able to perfect every possible aspect of its function and design.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["Learn Morse Code!", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>A social studies class, filled to the brim with students nodding off. But ideas aren't meant to be convenient. And it came up with the mention of dying languages, only to exclude Morse code and its unique means of communication from the main discussion. From the dots and dashes that embody this communication system, it's far removed from society - unappreciated for its simplicity.\n<strong>By learning Morse Code, a whole world of communication opens up.</strong> </p>\n<h2>What it does</h2>\n<p>In order to provide a seamless user experience, we outlined a minimalist design interface. Simple functions from a Morse code keyer to communicate dots and dashes, a space button, and two boxes to spot the conversions from Morse to English characters in real time. The 'undo' at the top right hand corner will fix the little mess-ups that come with learning this language. In addition, a dictionary is provided to maximize efficiency, and you can also send messages in code to your friends with the touch of a button.</p>\n<p><strong>We didn't have enough time to finish the submission completely or upload our app, however we did finish our app, and we have it on our phones.</strong></p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n</div>", ["", "", "", ""]], ["Peak", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Peak \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/689/datas/gallery.jpg\"/>\n<p>\n<i>Peak on Android</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Peak \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/696/datas/gallery.jpg\"/>\n<p>\n<i>Peak on iOS</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Peak \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/697/datas/gallery.jpg\"/>\n<p>\n<i>Peak - Climb the World</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>More and more fitness apps are being acquired by big companies. Under Armour, Asics, and Nike, just to name a few, have spent millions of dollars investing in fitness apps to add to their arsenal. However, many of these apps are over complicated. Our market research has shown many people feel fitness apps on the market today are over-complicated, and include unnecessary features and measurements. This inspired us to create a simple fitness app, one for the people who just want an easy way to track what they're doing, without having to worry about any of the extra. </p>\n<h2>What it does</h2>\n<p>Peak counts the user's steps wherever they are, using the device's accelerometer. Using these measurements, Peak compares his or her activity to wonders of the world, whether it be K2, Denali, Mount Everest, or even the Great Wall of China, providing the user an easy way to visualize their progress and be proud of their accomplishments.</p>\n<h2>How we built it</h2>\n<p>For the iOS version, we used Swift and Apple's CoreMotion Framework.</p>\n<p>For Android, we used Android Studio to code our app in Java, using the built-in Android StepDetector sensors.</p>\n<h2>Challenges we ran into</h2>\n<p>The hardest part of creating this app was diving right into mobile development with no prior experience. Utilizing complex frameworks and sensor interactions proved to be much more difficult than expected, and caused the first few hours to be long and stressful.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Despite the lack of experience in mobile development, we are most proud of our ability to break the app down into its fundamental components and work through the app method by method, finishing the product in only 16 hours. We are also immensely proud of the attention to detail in the minimalist design of Peak, utilizing a healthy mix of blank space and objects to create a clean and intuitive user experience.</p>\n<h2>What we learned</h2>\n<p>Developing a mobile application can be hard at first, but time, perseverance, and passion allowed us to create an amazing app with extraordinary potential.</p>\n<h2>What's next for Peak</h2>\n<p>We hope Peak grows into something bigger than a hackathon project. Peak has the potential to bring awareness of human potential into our users' lives and be a successful fitness app people will enjoy. We plan on adding more levels, more monuments, and social sharing so our users can share their accomplishments with their friends.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag\">coremotion</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xcode\">xcode</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ios\">ios</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://getpeakapp.com\" rel=\"nofollow\" target=\"_blank\" title=\"http://getpeakapp.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>getpeakapp.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I helped design and develop the initial concept of Peak, and focused on the Android mobile version.", ""]]]