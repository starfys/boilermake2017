[["Professor Frank", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Teaching the next generation through an engaging medium</p>\n<h2>What it does</h2>\n<p>This teaches students about conceptual concepts in their classes. We can through textbooks, powerpoints, and other mediums to collect content for Frank.</p>\n<h2>How I built it</h2>\n<p>Using Microsoft HoloLens Frank comes to life and through IBM Watson we powered frank's brain.</p>\n<h2>Challenges I ran into</h2>\n<p>Working with new tools that haven't been tested and that don't have a large ecosystem was difficult </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We worked through bugs as a team</p>\n<h2>What I learned</h2>\n<p>Learned a lot about Unity and how to create a workflow from start to finish</p>\n<h2>What's next for Professor Frank</h2>\n<p>Frank will continue to grow it's portfolio of robust offerings meaning he will continue to learn about students and concepts with AI and soon Machine Learning. Also redoing the UI to be more user friendly is next in line. (Frank needs a makeover)</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bluemix\">bluemix</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ibm-watson\">ibm-watson</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/microsoft-hololens\">microsoft-hololens</a></span></li><li><span class=\"cp-tag\">ai</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/szm5707/HackPSU2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/szm5707/HackPSU2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", "", ""]], ["Smart Helmet", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>smart-helmet</h1>\n<p>This helmet is designed to alert users to potential concussions sooner, resulting in quicker treatment and fewer long-term brain injuries. In sports particularly, if a player receives a hard hit they can be removed from the game removing the likelihood of further injury. As more data is collected over time, users will be able to note what hits are more likely concussions and which are less likely. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/react\">react</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/npm\">npm</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/venividivici440/smart-helmet\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/venividivici440/smart-helmet\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Transmit", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>There is not currently a perfect solution for easily sharing files to a large group of people. </p>\n<h2>What it does</h2>\n<p>Uses an inaudible sound to quickly and easily connect devices for file sharing.  </p>\n<h2>How we built it</h2>\n<p>We used the quiet library to send  </p>\n<h2>Challenges we ran into</h2>\n<p>Different versions of the Quiet library had different sound profiles. </p>\n<h2>Accomplishments that we're proud of</h2>\n<h2>What we learned</h2>\n<h2>What's next for Transmit</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">electron</span></li><li><span class=\"cp-tag\">quiet.js</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag\">friendship</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["Pokemon Stadium CONSOLE", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Pokemon Stadium CONSOLE \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/481/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to do a pokemon game, only completely in a console. We wanted a super light weight version of our favorite game.</p>\n<h2>What it does</h2>\n<p>Basic game that allows you to choose a pokemon and battle them</p>\n<h2>How we built it</h2>\n<p>Pure C++ and ASCII Art</p>\n<h2>Challenges we ran into</h2>\n<p>C++ doe...</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>The art looks awesome and the game is pretty solid</p>\n<h2>What we learned</h2>\n<p>That console games still take a long time to make.</p>\n<h2>What's next for Retro Pokemon Console</h2>\n<p>More features probably.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li></ul>\n</div>\n</div>", [""]], ["SafeSpace", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>SafeSpace provides a way for users to block unwanted YouTube comments for the user and their family. This extension can be used for those who are sick of negativity and crude comments as well as a secondary filter for when their children are surfing the web.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Mthwate/SafeSpace\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Mthwate/SafeSpace\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["NuntAgri", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"NuntAgri \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/443/751/datas/gallery.jpg\"/>\n<p>\n<i>iOS FB-Messenger</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"NuntAgri \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/443/756/datas/gallery.jpg\"/>\n<p>\n<i>Android FB-Messenger</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"NuntAgri \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/082/datas/gallery.jpg\"/>\n<p>\n<i>Webpage</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"NuntAgri \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/111/datas/gallery.jpg\"/>\n<p>\n<i>Webpage Ted Talk Page</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>NuntAgri was conceived, designed, and prototyped during the fall 2016 HackPSU hackathon by a team of 5 students from Penn State Harrisburg. We decided to accept the challenge presented by Thought For Food, and started looking for improvement potentials for the world's food supplies and supply chains. The inspiration behind the manifestation of NuntAgri mostly lies in revolutionizing regional-based food distribution logistics through means of crowd-sourcing. The operation of this application consolidates the entire experience into one simple process to be used by food sellers, buyers, and the distributors in between.</p>\n<h2>What it does</h2>\n<p>NuntAgri would be a service offered anywhere through SMS, leading to a worldwide user market. All users start by establishing their personal accounts as either a seller, buyer. or transporter of food. Once established, sellers may send a text message which initiates a conversation with our chat-bot, and input their desires sell orders. Potential buyers may then initiate a text message conversation with our chat-bot to search these sell orders, and purchase them at will. Once a purchase has been made, the closest user classified as an intermediary will then receive a notification text message, with pickup details and delivery details. The intermediary will then act in a transporter role in order to fullfil these purchases.</p>\n<h2>How we built it</h2>\n<p>We first set up an EC2 instance on AWS and put a load balancer on top to handle our SSL Certificates. We then wrote Node.js backend code to connect facebook's api with our Wit.ai bot. Then we forwarded all sms and facebook messenger conversations to the bot which then preformed actions defined by us.  </p>\n<h2>Challenges we ran into</h2>\n<p>The first major blockade that we encountered was when we attempted to get SSL certificates to make our website an https site. The rest of the hackathon was plagued with wit.ai recognition issues. Most of the coding time spent on the chat-bot was in order to correct problems that the machine learning algorithms were causing.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are proud to have made an application that uses a machine learning bot, made with wit.ai, to assist food producers in the third world where the infrastructure may not already be available to facilitate this level of coordination. Producers, transporters, and distributors will now have a higher level of communication than ever before using readily available technology.</p>\n<h2>What we learned</h2>\n<p>We built a full stack all while learning how to manage a logistics tool to assist with agricultural problems in the third world. We also learned how to manage SSL certificates, and we took our first steps into machine learning techniques.</p>\n<h2>What's next for NuntAgri</h2>\n<p>The end goal for the project is to move away from Facebook messenger and use the intended SMS features that are available on all cellular phones. This will allow us to better reach our intended audience in poorer third world countries.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag\">https</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/wit-ai\">wit.ai</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag\">nosql</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/docker\">docker</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/facebook-chat\">facebook-chat</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/natural-language-processing\">natural-language-processing</a></span></li><li><span class=\"cp-tag\">chatbot</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/ThePBJain/nuntagri\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ThePBJain/nuntagri\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"http://nuntagri.com\" rel=\"nofollow\" target=\"_blank\" title=\"http://nuntagri.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>nuntagri.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Designed data architectures and data structures while the back end was being built, and then assisted in front-end development with Bootstrap.", "I helped write the back-end, particularly the js functions that take the desired actions  when users interact with our chatbot.", "Worked on backend. Node.js, Docker containers. NLU, Chatbot backend.", "Managed our Ubuntu EC2 instance, and routed our domain name through Route53. Set up SSL certificate to communicate with Facebook-Messenger. \nDesigned website using html, css, and bootstrap. ", "I designed the wit.ai chat-bot that interacted with our users through Facebook messenger. I also set up communications between our chat-bot and our back-end."]], ["Note Your Problem ", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Note Your Problem  \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/443/372/datas/gallery.jpg\"/>\n<p>\n<i>Note my Problem </i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Note Your Problem  \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/443/818/datas/gallery.jpg\"/>\n<p>\n<i>Login and Subscription Page</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Note Your Problem  \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/443/821/datas/gallery.jpg\"/>\n<p>\n<i>Course NoteBook Page</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Note Your Problem  \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/445/029/datas/gallery.jpg\"/>\n<p>\n<i>Sample Recording</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Note My Problem is the ultimate aid to students who would like to further their education past the standard course lecture. As students ourselves, we struggle to both understand concepts while taking detailed notes during course lecture. </p>\n<h2>What it does</h2>\n<p>Note My Problem enables students to record a complete lecture transcript that not only contains the material covered in the lecture, but enhances the material through embedded links. A student can manage multiple notebooks within their Note My Problem account, and at the beginning of a lecture, the student will start a new notebook page and begin recording. Utilizing IBM Watson, we record the lecture though any mic that is available to the student, translate speech to text and then Watson finds core concepts within the lecture. These concepts will have hyperlinks to additional information regarding the subject, which would aid the student if it is unfamiliar to them or they would like to learn more. The student is also able to browse additional concepts that Watson has inferred through the lecture material, and view books related to the subject matter.</p>\n<h2>How we built it</h2>\n<p>Note My Problem was made possible by both the IBM Watson Speech to Text and Alchemy APIs. The Speech to Text API enabled us to receive full and accurate transcripts that are recorded by the student's laptop microphone. The Alchemy API receives the transcripts and identifies the core concepts that have been expressed throughout the lecture. To enhance the course transcript we utilized the Wikipedia API and linked the core concepts noted by Watson, to their respective pages. We also linked the inferred concepts from Watson on the sidebar to their Wiki pages. In case the student continues to struggle and requires additional reading material, we incorporated the Amazon Product Advertisement API, to display a related text that the student may be interested in.</p>\n<h2>Challenges we ran into</h2>\n<p>Watson API usage limitations, Amazon API returning unrelated books, Picking a website color scheme  </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Implementing Watson APIs to improve something we do daily.</p>\n<h2>What we learned</h2>\n<p>tl;dr ALOT</p>\n<p>Watson, JavaScript, API usage, Web Design...</p>\n<h2>What's next for Note Your Problem</h2>\n<p>Finalizing features such as account handling, subscription purchases, and notebook management</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ibm-watson\">ibm-watson</a></span></li><li><span class=\"cp-tag\">babel</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/wikipedia\">wikipedia</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-product-advertising\">amazon-product-advertising</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/npm\">npm</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/andrejewski/hack-psu-fall-2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/andrejewski/hack-psu-fall-2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Pebble Activity Watch App (PACT)", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Pebble Activity Watch App (PACT) \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/921/datas/gallery.jpg\"/>\n<p>\n<i>The user prompt screen</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Pebble Activity Watch App (PACT) \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/922/datas/gallery.jpg\"/>\n<p>\n<i>The recording screen</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Pebble Activity Watch App (PACT) \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/923/datas/gallery.jpg\"/>\n<p>\n<i>The home screen </i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to create a solution which encourages physical activity through the use of time management and organization. Additionally, we incorporated many available APIs, while utilizing new technology through the Pebble watch.  </p>\n<h2>What it does</h2>\n<p>Our app provides the user with the optimal times to perform various types of activities, given a users schedule and future weather conditions. It allows the user to verbally request the best time to do an activity. This request is processed by the server, which returns a list of optimal times to be displayed by the watch.</p>\n<h2>How we built it</h2>\n<p>First, for the client side we created an app using the Pebble SDK. We utilized the Dictation library from Pebble in order to convert voice to text. For the server, we used Node.js which interacted with two APIs: AccuWeather and Watson Natural Language Processing.</p>\n<h2>Challenges we ran into</h2>\n<p>There was a steep learning curve for the Pebble watch, which took quite some time to learn. Our biggest hurdle was coming up with algorithms for sorting and ranking the best weather conditions for each specific outdoor activity. While functional, these algorithms will certainly require optimization in the future. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are proud that we were able to get the Pebble watch to correctly take in voice input, and then send it to the server to be processed.</p>\n<h2>What we learned</h2>\n<p>All of us were first timers with the Pebble watch so we all learned a lot about it. Also, several of us were new to Javascript so we learned a lot about that as well.</p>\n<h2>What's next for Pebble Activity App (PACT)</h2>\n<p>As previously stated, the algorithms for calculating optimal weather conditions will continue to need optimization. We would also like to add functionality and features which would go beyond weather while allowing for utilization through other devices. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/linux\">linux</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/machine-learning\">machine-learning</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xml\">xml</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/accuweather\">accuweather</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bluemix\">bluemix</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ibm-watson\">ibm-watson</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/pebble\">pebble</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/github\">github</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/git\">git</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Abdallahozaifa/PebbleApp\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Abdallahozaifa/PebbleApp\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked primarily on the server side using node.js. Also created Watson natural language classifiers using their services. Utilized accuweather APIs to provide meaningful information. Also developed and tested many of the algorithms. ", "I worked with the other members of the team in order to create optimal timing/ranking algorithms by utilizing the data pulled from the AccuWeather API. I helped with the UI by working on the transitions and the navigation in between different faces of the Pebble watch. Additionally, I created the logo for the app.", "", "", ""]], ["FoodKit", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"FoodKit \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/971/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>FoodKit was inspired by my constant struggle to watch what I eat.  It is hard to keep track of all the things I eat throughout the day.  FoodKit is designed to make keeping track easier.</p>\n<h2>What it does</h2>\n<p>Food kit keeps track of your diet by taking images of the things you eat.  It detects what food is on your plate and finds the nutritional info for it.</p>\n<h2>How we built it</h2>\n<p>We worked on an IOS and Android app concurrently while using IBM Watson and Nutritionix.</p>\n<h2>Challenges we ran into</h2>\n<p>Time.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Made an app for both platforms in 24 hours!</p>\n<h2>What we learned</h2>\n<p>I learned Android and Artemiy learned Watson image classification.</p>\n<h2>What's next for FoodKit</h2>\n<p>Detecting quantities and distinguishing multiple foods on one plate :) !!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ios\">ios</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xcode\">xcode</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ibm-watson\">ibm-watson</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/nutritionix\">nutritionix</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/josephhutch/HackPSUFall2k16\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/josephhutch/HackPSUFall2k16\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["GroupFit", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"GroupFit \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/500/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"GroupFit \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/507/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"GroupFit \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/515/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We want to solve the biggest problem when it comes to maintaining a healthy lifestyle: motivation. We believe nothing motivates people to continue to exercise and lead active lives quite like group activities. We wanted a way to facilitate this core concept of bringing people together to get fit and have fun, easily. </p>\n<h2>What it does</h2>\n<p>GroupFit gives users weather forecasts and estimates for the week to come, and makes activity suggestions for the user based on their geographic location, the local weather, and the presence and availability of other users who are ready and willing to get fit! The application will try to pair up individuals at parks for healthy outdoor activity based on the weather in the local region, and find the closes park to all such users. </p>\n<h2>How we built it</h2>\n<p>Our front-end is composed of an Android application written with Java and XML, utilizing Google Volley to make efficient and fast HTTP-based requests to the Node.js backend. The Android application stores personal user info in the Backendless service while event data, weather info, and local places of interest are stored on the server. The backend polls the Google Places API and the Accuweather API to get location and weather data, then processes all of this data with the available, logged in users to find the optimal places for people to meet and exercise. </p>\n<h2>Challenges we ran into</h2>\n<p>We ran into a very difficult establishing a connection between the Android device and the AWS Ec2 instance we spun up. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Coming up with an idea that really leverages the use of many different data sources, and actually implementing the code to consume the diverse APIs. </p>\n<h2>What we learned</h2>\n<p>ALWAYS set the Content-Type of an HTTP request so the server/client know what form of data is being communicated. </p>\n<h2>What's next for GroupFit</h2>\n<p>UI updates, better pairing algorithm, and more. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-ec2\">amazon-ec2</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag\">google-volley</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/accuweather\">accuweather</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-places\">google-places</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/backendless\">backendless</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xml\">xml</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li></ul>\n</div>\n</div>", ["I worked on provisioning the AWS EC2 instance, infrastructure, and back-end/server-side programming in Node.js; leveraging the Accuweather API, and integrating everyone's code into one unit", "", "", ""]], ["SmartGlobe", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Weather data is often times hard to visualize on a global scale. We wanted to keep everyone connected over the common language of the weather throughout the globe. Therefore we focused our efforts to create a cool and novel way people will be able and more importantly want to connect with each other from long distances away. </p>\n<h2>What it does</h2>\n<p>The SmartGlobe takes two inputs, the AccuWeather API data and a location to determine the weather.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://drive.google.com/open?id=0B3qeZrl-BxApWVRuLVRPVHRzYmc\" rel=\"nofollow\" target=\"_blank\" title=\"https://drive.google.com/open?id=0B3qeZrl-BxApWVRuLVRPVHRzYmc\">\n<i class=\"ss-icon ss-link\"></i>\n<span>drive.google.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["AbsentA's", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We can identify with the crazy hectic lifestyle of a college student. Places to go, people to see, code to write. The last thing on our priority list is actually attending class. This unfortunately will occasionally cause lots of conflict when it comes to getting the grades, especially when the professors don't upload their presentations.</p>\n<p>Enter AbsentA's. Leveraging IBM Watson's AI capabilities, we have created a web application that allows you to upload audio files and produces quiz questions based on the file.</p>\n<h2>What it does</h2>\n<p>It takes an audio input lecture file, and converts it into a .txt file. While in that state, it allows you to either download the .txt file or take one step further to use the .txt file to generate practice quizzes to get familiar with the materials. It then allows to recreate different set of questions or re-upload a different audio file.</p>\n<h2>How we built it</h2>\n<p>We split our group into two teams. Team UIPwnsAll built out the front end of the code. They used PHP, HTML, &amp; CSS to create a beautifully clean interface to upload files. They also created the classes necessary to save the files locally to then be analyzed by Watson or be viewed via text.</p>\n<p>Team Backend4Days used Node JS and the Watson API to develop a robust backend that implements speech to text and analyzes the text for keywords and entities. We created our own logic to use objects from the text as the subject for quiz questions.</p>\n<h2>Challenges we ran into</h2>\n<p>Quite a few. \nOne of the first was not knowing Node JS and not figuring out that implementing Watson with Node is easier than implementing Watson with CURL commands. \nWe also struggled with uploading the audio files through PHP to be interpreted by Watson and with other limitations Watson had that we couldn't customize.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Getting through this weekend. This was the first hackathon for a lot of our team members and we are really proud of how well we worked together. We are also really proud of our product that we have created.</p>\n<h2>What we learned</h2>\n<p>A dash of Node JS.\nA dollop of humility.\nA sprinkle of forcing PHP file downloads.\nA healthy dose of teamwork.</p>\n<h2>What's next for AbsentA's</h2>\n<p>To Infinity and Beyond. \nWe are looking forward to perfecting our product. \nBranching out to creating true or false questions, and short answer or fill in the blank questions. \nOne day we wish to be the go to quiz software for all those other absentees out there.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/alchemyapi\">alchemyapi</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ibm-watson\">ibm-watson</a></span></li><li><span class=\"cp-tag\">bluemix-speech-to-text</span></li></ul>\n</div>\n</div>", ["", "", "", ""]], ["PacMate", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/C1CnOW8UxZo?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"PacMate \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/443/558/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Nostalgia for a retro game that we wanted to bring into the real world with LabVIEW.\nWanting to combine a retro game with a more modern healthy approach.\n(Submitting for Club Cup as Drexel University d-Hac, Drexel Hackaton and Coding Club)</p>\n<h2>Location</h2>\n<p>We are located on the third floor for lighting reasons.</p>\n<h2>What it does</h2>\n<p>Allows you to play pacman by moving around in a physical grid as if you were pacman himself.\nA friend will provide directions on the game grid while you move around inside it.\n <a href=\"https://www.youtube.com/watch?v=M2DW--2_CGo\" rel=\"nofollow\">https://www.youtube.com/watch?v=M2DW--2_CGo</a></p>\n<h2>How we built it</h2>\n<p>Using LabVIEW for the vision processing / data filtering and python for the game rendering / control.\nUsed a TCP connection to pipeline data from Labview to Python.</p>\n<h2>Challenges we ran into</h2>\n<p>Lighting issues because color filters are absolutely horrible and the sun is my worst enemy. Would have used better image processing if I knew more LabVIEW but for a quick effort it works.\nGetting a TCP connection between the LabVIEW Windows machine and the Python Mac machine. \nFitting the grid of the real world into a pacman like game board.\nDetecting the color filtered shape with reasonable precision.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Being able to do vision processing with LabVIEW after not using it for almost 5 years.\nFinding intuitive ways to solve physical problems without necessary equipment (paper plates for tracking and paper sheets for measuring).\nBeing able to reverse engineer some ugly Python Pacman game we found on github so we could modify it for our purposes.</p>\n<h2>What we learned</h2>\n<p>Color filters are the absolute worst thing ever. I suggest things like keypoint matching even in a time constraint.\nColor filters can completely freak out by the slightest change in lighting condition, both sun and lamp.</p>\n<h2>What's next for PacMate</h2>\n<p>Modifying pacman so that it can be played in the full 3D environment the player is currently in. \nMaking it a 3 player game where the third is the ghost.\nAdding power ups for PacMate to fight the ghost. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">labview</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">webcam</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/pygame\">pygame</a></span></li><li><span class=\"cp-tag\">imaqdx</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/PiJoules/PacMate\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/PiJoules/PacMate\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["BrightBrain", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"BrightBrain \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/443/353/datas/gallery.jpg\"/>\n<p>\n<i>BrightBrain logo</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>When we saw all the health and wellness APIs and the challenges to help students improve their daily lives, I had an idea to fill in gaps where most wellness apps fall short. Having used wellness apps before, most of them are good at tracking, but don't do much to recommend changes. That's where BrightBrain comes in.</p>\n<h2>What it does</h2>\n<p>BrightBrain is a web application that allows a user to create an account, enter factors from their daily life like exercise, food, water, sleep, and some automatically scraped info like AccuWeather weather data, and find correlations to some results in their daily life, like their stress levels, sleep, athletic performance, and grades. When it finds strong correlations between some factor and result, it will recommend to the user different ideas and actions they can take, depending on if the correlation was positive or negative. </p>\n<h2>How we built it</h2>\n<p>BrightBrain runs as a web application in HTML/CSS and piped into a Django/Python backend server run as an AWS EC2 instance. The site allows the user to enter data from their daily lives which is stored in a SQLite database, thereafter when the user logs in, the server calculates correlations in the past week's activities to metrics we gathered via user input and Canvas score results and processed using NumPy's correlation() function. Results are then displayed back to the user on our site when they navigate back to their dashboard. In the future, more features will be added such as graphs and data visualisation for the user to understand their performance against our metrics, recommendations based on long term performance, and other lifestyle improvements.</p>\n<h2>Challenges we ran into</h2>\n<p>The main challenge was a lack of experience on the team. We had one experienced programmer and four brand new programmers. So the project was extremely ambitious compared to the timeframe given and the skill of the team. So many backend functions were not fully implemented despite the architecture being designed.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Our two newer front end web designers created a very elegant interface for the site despite being extremely new to web design and HTML/CSS. On the backend, the algorithm and architecture behind the idea is very solid and just needs time to be implemented, and would have been possible with more experienced coders.</p>\n<h2>What we learned</h2>\n<h2>What's next for BrightBrain</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/ShaneMalachow/BrightBrain\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ShaneMalachow/BrightBrain\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Worked as lead designer and created the algorithm behind the product.", "I worked on the front end of this project working with HTML/CSS. "]], ["HarvestHelper.org", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"HarvestHelper.org \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/442/542/datas/gallery.jpg\"/>\n<p>\n<i>Climate data on your location.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"HarvestHelper.org \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/442/546/datas/gallery.jpg\"/>\n<p>\n<i>Other people in you area growing food.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"HarvestHelper.org \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/442/549/datas/gallery.jpg\"/>\n<p>\n<i>Recipes using items that you want to grow.</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>Harvest Helper</h1>\n<p>Helping you plan to grow your own food right at home!</p>\n<p>Planning to become more agriculturally self-sufficient can be overwhelming.  But now, HarvestHelper.org brings all the data you need right to your finger tips.  Simply enter a location, and you'll get climate data, a list of suitable crops for your climate, and data on other people in your area (within 5 degrees of latitude and longitude) that are growing their own crops.  Furthermore, select what climate-suitable produce you want to grow, and instantly get numerous recipes using those items.  HarvestHelper.org makes growing and making your own food less complicated so people are more likely to begin the journey to a more sustainable future.</p>\n<p>First, we used the AccuWeather API for location autocomplete and for getting up-to-date climate-zone information on the location that the user enters.  Then, we used the GrowStuff.org API to get data on what other people are growing in your area and what recommendations/results they have.    Finally, we used the Food2Fork.com API to get numerous popular recipes that use the items that the user can grow in their climate.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/react\">react</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/accuweather\">accuweather</a></span></li><li><span class=\"cp-tag\">growstuff</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/food2fork\">food2fork</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/liampalmer43/harvest-helper\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/liampalmer43/harvest-helper\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"http://www.harvesthelper.org/\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.harvesthelper.org/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.harvesthelper.org</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["React web developer, web designer, and AccuWeather API integrator.", "Web developer, web designer, GrowStuff API integrator, and Food2Fork API integrator.", ""]], ["PSU Crime Scanner", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"PSU Crime Scanner \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/443/434/datas/gallery.jpg\"/>\n<p>\n<i>Penn State Crime Scanner Landing Page</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"PSU Crime Scanner \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/443/441/datas/gallery.jpg\"/>\n<p>\n<i>Crime Visualized on Map</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Crime is an inevitable part of any functioning society -- our goal is to monitor and predict it. The first step to this problem is by making it apparent to the masses, so we created an easy and accessible way to see crime activity at Penn State.</p>\n<h2>What it does</h2>\n<p>This project scrapes the Penn State Daily Incident Log, then stores the data to be visualized. In the map visualization, there are markers laid out that show where crimes happen, what status crimes are in, and the type of crime it is categorized as. Other visualizations provide ways to improve and add artistic diversity to our original idea.</p>\n<h2>How We built it</h2>\n<p>We scraped the Penn State website in python, using beautifulsoup to parse the data. Then, we store that data in a mysql database to log the crimes for visualization, RESTful API calls, and possibly machine learning. The data is visualized on a  map in bootstrap website. There is another page for more artistic representations of the data, which  we created the RESTful API  for to hopefully encourage other developers to contribute visualizations and new patterns for the community.</p>\n<h2>Challenges We ran into</h2>\n<p>The data was very unorganized coming into this. Our biggest issue was irregular data that needed to be translated. At first we had tried natural language processing to merge similar categories, but our efforts didn't yield any results. Clustering using the google maps api was a challenge for us, but we decided it would be best to create our own solution that used individual markers instead.</p>\n<h2>Accomplishments that We're proud of</h2>\n<p>Our team worked hard to practice what we didn't know. If a team member needed to learn a language or concept, they were put on that task, and the other teammates helped to constructively teach each other. We learned as a group, and produced a humanitarian product that we are all proud of.</p>\n<h2>What We learned</h2>\n<p>We learned how important a schedule is. If we would have had a structured schedule, the project would have had many less bumps in the road.</p>\n<h2>What's next for CrimeScanner</h2>\n<p>Machine Learning and Community Involvement! If enough people came up with cool ideas, and enough data sets were gathered, this project has the capability of predicting where crimes are likely to happen and what time they are most likely to happen.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/processing\">processing</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/needmorecowbell/CrimeScanner\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/needmorecowbell/CrimeScanner\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Worked on the integration of the Google Maps API as well as Geocoding  the scraped data", "Worked on web scraping, front end, RESTful, and visualization in processing"]], ["WhetherTheStorm", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Varying weather throughout the day.</p>\n<h2>What it does</h2>\n<p>Generates personalized suggestions for what to wear and what to bring based on when you will be out.</p>\n<h2>How we built it</h2>\n<p>Built in python using the AccuWeather api and integrated with the Google Calendar api to get schedules and provide the personalized results.</p>\n<h2>Challenges we ran into</h2>\n<p>AccuWeather hourly api does not include current hour.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>It works as intended.</p>\n<h2>What we learned</h2>\n<p>How to use the AccuWeather api and the Google Calendars api.</p>\n<h2>What's next for WhetherTheStorm</h2>\n<p>Add support for Accuweather MinuteCast and determine if the event is outside or not as well as include travel and event location.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/SVRobots/WhetherTheStorm\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/SVRobots/WhetherTheStorm\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["PandVi", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"PandVi \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/445/249/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>PandVi</h2>\n<p>Pandvi works with Amazon Echo's technology to track dietary information easily. It can help to maintain a healthy lifestyle by recommending recipe suggestions, providing nutritional information, and tracking dietary data. </p>\n<p><a href=\"www.PandVi.com\" rel=\"nofollow\">Website</a></p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/dekaido/hackingpsu\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/dekaido/hackingpsu\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Wrote all the AWS Lambda functions, helped with the Alexa Intents and utterances, and worked on NodeJS server.", "", "", ""]], ["Darude webstorm", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/_rm3ZRQ6Ggs?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>memes</p>\n<h2>What it does</h2>\n<p>finds a video using youtube api</p>\n<h2>How we built it</h2>\n<p>text editor</p>\n<h2>Challenges we ran into</h2>\n<p>css is a pain</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>dank memes</p>\n<h2>What we learned</h2>\n<p>How to use CSS and javascript</p>\n<h2>What's next for darude</h2>\n<p>Publishing the site</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/youtube\">youtube</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/zmaster587/darude\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/zmaster587/darude\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I owned the domain name, and I helped out with figuring out code and the YouTube search api.", ""]], ["CGV", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>As Penn State students and living in a highly advanced technological society, we pursue convenience at its peak. \nFollowing up with our GPAs and future prospects is one of the crucial college life that we can't lose out and it is quite tiresome to it all the time. So we have come up with the idea of a compact scheduler that one can monitor not only current and future GPAs, but also can monitor which Gen-Ed to fulfill the degree requirement along with exclusive PSU prof. review by comparing \"apple points\".</p>\n<h2>What it does</h2>\n<p>As upper classmen in Penn State, we have felt that that it is quite tiresome checking which Gen-ed courses are required for our majors with right hand, while scrutinizing our printed out degree audit back and forth with other hand. \nThen we said, how about creating an app or a program that allow us to show all of those aforementioned necessary components for students\u2019 sake. This compact and easy GPA tracking program will relieve burden off students shoulders, because all they have to do is select their majors, and CGV will sort required courses automatically; whether it is GS, GH, or GQ. </p>\n<h2>How I built it</h2>\n<p>We used C++ to create a program called pseudo code. If we had enough resources and time we would have utilized Xcode to conjugate an Iphone application. And if successful, we would distribute to PSU students for free. </p>\n<h2>Challenges I ran into</h2>\n<p>Since PSU has over 160 majors with insurmountable  required courses in each departments, it was quite hard to gather data which is quite behemoth. </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Since we are living in 21st century where people pursue quick and concise accommodation, our task as future engineers is to strive forward to make things computerized and very convenient to use. Making things easy to use is what computer science major inspiring us. \nComing up with this conglomerate GPA scheduler, we can make fellow Penn Staters lives much easier and highly protect their GPAs along with secured future. </p>\n<h2>What I learned</h2>\n<p>Even though we are living in technologically advanced world where plethora amount of  new apps or new programs get realized every single day, we had trouble making a simple application. We started to appreciate how hard it is to make a program and can't wait to jump in this field. </p>\n<h2>What's next for CGV</h2>\n<p>We are going to sharp our iron to maximize our potential.  If we had enough resources and time we would have utilized Xcode to conjugate an Iphone application. And if successful, we would distribute to PSU students for free. </p>\n<pre class=\"language-nolang\"><code>                                                                  CGV, a Compact Grade Verifier\n</code></pre>\n<p>It is evident that as Penn Staters, we are predetermined to check our grades and to blueprint our schedules in order to bring the full potential out of us. Having a college life in PSU in which has over 160 majors could be a quite abstruse to both freshmen and upper class due to complexity and magnitude of its data to be comprehended.\nTherefore, our team has come up with a concise and compact scheduler that is consisted of: GPA calculation, GPA prediction, semester planning, left over general education credit calculator and Gen-Ed type classifier, and last but not least daily updated class grades monitor.  Now we introduce CGV, a Compact Grade Verifier.  </p>\n<ul>\n<li>Why did we reach a decision to make CGV? </li>\n</ul>\n<p>As upper classmen in Penn State, we have felt that that it is quite tiresome checking which Gen-ed courses are required for our majors with right hand, while scrutinizing our printed out degree audit back and forth with other hand. \nThen we said, how about creating an app or a program that allow us to show all of those aforementioned necessary components for students\u2019 sake. This compact and easy GPA tracking program will relieve burden off students shoulders, because all they have to do is select their majors, and CGV will sort required courses automatically; whether it is GS, GH, or GQ. </p>\n<ul>\n<li>What impacts will CGV upon certain group of people?</li>\n</ul>\n<p>As we are notified to craft a program that can benefit certain group of people, we narrowed it down the focus to Penn State students. Our jobs as being students can be vigorous. Our main keyword was \u201cconvenience\u201d. It is true that majority of students check their professors online, such as ratemyprofessor.com or koofers, to figure out his or her teaching methods and styles for preparation. Then we thought what about creating PSU\u2019s own rating system that required to login with an actual PSU account but can write anonymously to evade privacy issues. Or simply show reviews from Student Rating of Teaching Effectiveness (SRTE) points indicating teaching styles \u201capple points\u201d to help upcoming students and current students. Overall, with CGV, students can easily pull up their academic status right away with a single click. They can monitor what classes are talking with the bracket indicating their Gen-Ed categories, how many more credits are left with which Gen-Ed to take, and manage each course\u2019s grade evaluations indicated via bars like Angel. </p>\n<p>Grade Point Average</p>\n<p>Sign up and log in</p>\n<p>Start with the selecting the majors</p>\n<p>After selecting majors, it would lead the page that we can all type the course and the grade that we had.</p>\n<p>After that it shows the cumulative GPA, we can also type and plan courses that user would take.(There is a link to Academic plan). And putting in targeting GPA and it shows cumulative GPA.</p>\n<p>After that it shows it tells you how much GS, GA, and classes user has to take. </p>\n<p>All the data will be in memory and when user comes back it would appear</p>\n<p>CODE:\nexample about computer science major, freshman, took math 140(4), cmpsc121(3), English 15(3), math 141(4), Music 007(3)</p>\n<p>Void data_for_majors(){\nComputersci\n}\nvoid data_for_classes(){</p>\n<p>}\nvoid calc_gpa(){</p>\n<p>}</p>\n<p>int main (){</p>\n<p>calculate the gpa with you already have with function calc_gpa</p>\n<p>ask for new input</p>\n<p>if inputing the new data and its grades</p>\n<p>else\n    return to link to academic plan</p>\n<p>show new data\u2019s predict GPA\n    return to academic plan with GS, GA and classes.</p>\n<p>}</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n</div>", ["", "", "", ""]], ["Walk me", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Walk me \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/445/000/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Our inspiration first began when we wanted to create something both fun and effective to improve the user's health. Some people are unable to own pets, so we decided to create an app where you can walk a virtual pet as you exercise.</p>\n<h2>What it does</h2>\n<h2>How we built it</h2>\n<h2>Challenges we ran into</h2>\n<h2>Accomplishments that we're proud of</h2>\n<h2>What we learned</h2>\n<h2>What's next for Walk me</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xcode\">xcode</a></span></li><li><span class=\"cp-tag\">switft</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mspaint\">mspaint</a></span></li></ul>\n</div>\n</div>", ["", "", ""]], ["Life Map", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>accuweather and health</p>\n<h2>What it does</h2>\n<p>organizes users life and helps them map what to do for the day and how to prepare for any weather</p>\n<h2>How we built it</h2>\n<p>gulp for task management, with browser sync for live reload. node.js and bower for packages. angular, bootstrap, as well as chart.js for graphs. </p>\n<h2>Challenges we ran into</h2>\n<p>trying to handle asynchronous requests.  trying to import libraries using node and bower. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>getting the ui to work</p>\n<h2>What we learned</h2>\n<p>programming in 24hrs is hard</p>\n<h2>What's next for Life Map</h2>\n<p>sleep</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/angular-js\">angular.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/accuweather\">accuweather</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/hdang-Git/HackPSU_Fall2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/hdang-Git/HackPSU_Fall2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Weather or Net", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We literally didn't bring jackets and are freezing.</p>\n<h2>What it does</h2>\n<p>Helps you prepare for the weather ahead by telling you what to wear!</p>\n<h2>How I built it</h2>\n<p>Notepad</p>\n<h2>Challenges I ran into</h2>\n<p>We only knew Python.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>It works!!!</p>\n<h2>What I learned</h2>\n<p>JavaScript, HTML, CSS, how to use APIs, good cloth-wearing habits</p>\n<h2>What's next for Weather or Net</h2>\n<p>Facial recognition to tie emotion to clothes style, give suggestions for activities based on the weather, parsing through personal closet for relevant suggestions, or to make suggestions for clothes to buy.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/alchemyapi\">alchemyapi</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ibm-watson\">ibm-watson</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/accuweather\">accuweather</a></span></li></ul>\n</div>\n</div>", ["", "", ""]], ["Crop Kinect", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>*<em>\"My Cabbages!!!!\" *</em>\nAgriculture is a very hard industry to get into. Successful farmers have access to generations of information and knowledge, usually from family members who passed the farm down to them. New people looking to get into the industry do not have access to this information. </p>\n<p>This is a big problem in countries where food is not readily available. Farmers need access to information to maximize their harvest and help feed their country. </p>\n<p>Our application aims to combat this problem.</p>\n<h2>What it does</h2>\n<p>Our application pulls weather data from accuweathers api, and runs that data through an algorithm of our creation. The algorithm then determines if planting a crop on a certain day will provide a successful harvest. </p>\n<p>The end user will input their location, the day they wish to plant their crop, and the crop they wish to plant. As of right now we are only allowing users to use cabbages as their crop of choice. This is because the accuweather data we have access to is only 45 days, and the time it takes to grow cabbages is 45 days. </p>\n<h2>How we built it</h2>\n<p>We used python to create the algorithm, and accuweathers API to pull our data. We are hosting our server using AWS (Amazon Web Services). We bought our domain through Domain.com. Currently the only working front end is built in swift, that is what we will use to show our demo. </p>\n<h2>Challenges we ran into</h2>\n<p>We lack front-end developers so we focused on the server and the algorithm for this project. We wanted to build a web-app but only had the knowledge to build an IOS application. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Our algorithm.</p>\n<h2>What we learned</h2>\n<p>Each team-member learned a bunch of new skills.</p>\n<h2>What's next for Crop Kinect</h2>\n<p>Eventually we would like to expand the application to be a live almanac of sorts, to allow for farmers to have access to a huge database of information. </p>\n<h1>Prizes we are trying for</h1>\n<p>General competition (Submitted using devpost)\nAccuweather Challange (We used Accuweathers API to pull our data)\nBest use of AWS (We used AWS to host our server)\nBest Domain (We registered a domain through Domain.com)</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag\">domain.com</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag\">ai</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag\">accuweather-api</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/annoytheworld93/CaptainPlanet\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/annoytheworld93/CaptainPlanet\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the front end User Interface portion of the program. I wrote all of the implementations in swift, which manifested itself into a mobile iOS application", "Worked on the Backend API. I built the API using Python Flask.This API pulls the weather data, processes and forms a metric that is used to make a prediction. ", ""]], ["FlashCard Generator", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"FlashCard Generator \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/445/514/datas/gallery.jpg\"/>\n<p>\n<i>Logo</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"FlashCard Generator \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/195/datas/gallery.jpg\"/>\n<p>\n<i>Home screen</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"FlashCard Generator \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/217/datas/gallery.jpg\"/>\n<p>\n<i>Flashcard Collection</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"FlashCard Generator \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/229/datas/gallery.jpg\"/>\n<p>\n<i>Adding a new flashcard to the set.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"FlashCard Generator \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/231/datas/gallery.jpg\"/>\n<p>\n<i>Flashcards in a set</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"FlashCard Generator \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/235/datas/gallery.jpg\"/>\n<p>\n<i>Viewing a flashcard.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"FlashCard Generator \u2013 screenshot 7\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/239/datas/gallery.jpg\"/>\n<p>\n<i>Rview screen</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"FlashCard Generator \u2013 screenshot 8\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/247/datas/gallery.jpg\"/>\n<p>\n<i>Reviewing a flashcard.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"FlashCard Generator \u2013 screenshot 9\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/252/datas/gallery.jpg\"/>\n<p>\n<i>Speech-To-Text command center.</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Flash cards are useful means of revision that many teachers recommend using it.However, it is time-consuming to write a set of flash cards while wasting a large amount of paper to write a small set of words, not to mention how annoying it is to manage different collections of cards without getting lost some or turning them into piles of mess.</p>\n<h2>What it does</h2>\n<p>Generates flash cards for students manually or through speech to text process.\nNeatly stores and manages flashcards or revision.\nHelp students review lessons through generating random flash cards.</p>\n<h2>How we built it</h2>\n<p>We used Android Studio to design and code the app in Java and XML and speech-to-text API from IBM Watson to create command which the app follows to make flash cards.</p>\n<h2>Challenges we ran into</h2>\n<p>One challenge we ran into was integrating the Speech To Text API into the app which was confusing and there were some bugs in the package probably due to lack of updates that we had to rewrite some API classes in order for the app to be compilable.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Successfully implemented the database to save the load flash cards.\nImplemented Speech-To-Text API for writing the text from speech.\nUnderstand and rewrite some code in Speech-To-Text API.</p>\n<h2>What we learned</h2>\n<p>We learned to use SQL to build a database. We learned how to integrate an API into an app.</p>\n<h2>What's next for FlashCard Generator</h2>\n<p>Have a way to schedule a time frame for studying a set of flash cards, In this period, the app will notify the user something like \"Hey, its time to study for your biology exams!\" We also want to utilize the text-to-speech API from IBM Watson to make the app speak the flashcard set to you.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ibm-watson\">ibm-watson</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sql\">sql</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xml\">xml</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/VietHTran/FlashCardGenerator\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/VietHTran/FlashCardGenerator\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked mainly on the front end of the app. I also helped to integrate the speech-to-text API into the app. It was the first time I was designing an Android app, so it was kind of exciting and intimidating. But we did it.", "", ""]], ["Mountain", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Mountain \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/819/datas/gallery.jpg\"/>\n<p>\n<i>Monthly view</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Mountain \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/821/datas/gallery.jpg\"/>\n<p>\n<i>Weekly View</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Mountain \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/827/datas/gallery.jpg\"/>\n<p>\n<i>Events view</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>The value of a top ranked university is more than just classes; it comes from the events held there.  These events are often crucial to attend to achieve the full value of your college experience, with a great example being HackPSU.</p>\n<p>These events are important for more than their intrinsic value; they also have social value by connecting people with similar interests.  These events is where some of the best of my friends were made.</p>\n<p>Events are crucial with an importance on the level of classes.  However, we aren\u2019t doing a great job of letting students know about these events.</p>\n<p>Events at Penn State are sent using a variety of mediums:</p>\n<ul>\n<li>Email: for most students it is one of the most effective ways to receive notices, but the number of emails quickly piles up.  It gets harder for students to keep up, and if the event is set far into the future, it can still be missed if it isn\u2019t added manually to a calendar</li>\n<li>Blogs are supposedly used by students to share events, with the idea that if everyone is reading the blog they will notice the events.  Unfortunately, not everyone reads these blogs; those who don\u2019t are never aware of the events in time.</li>\n<li>Social Networks are another useful means of  sharing events.  If the students are subscribed to the application, they will get notices.  However, not all students use these programs, and they may ignore or disable pop-ups regarding these events.</li>\n</ul>\n<p>So why use this one tool?  Because this program isn\u2019t designed simply to share events.  It draws on data from the technology stated before and compiles them into a single calendar program.  This way all events can be clearly seen when they\u2019re going to occur in an organized fashion.  No event is forgotten because it was only mentioned once, and all users will be able to check and particular date and time and see if there is an event scheduled for there. </p>\n<h2>Use Case</h2>\n<p>Users can use the system to assist in managing their times by informing them on events prior to the actually time of the event in an easier way of viewing.</p>\n<p>Users can also decide which events they would be willing to by showing the locations (How far would the event be from their residence or classroom.How long would it take to arrive? could they be late?) and temperatures (Would they be willing to travel through rain?) on the day of the event to prepare themselves. </p>\n<p>Users can now view the details of the events in an easier way to prepare for whatever it might be as well (Whatever was send/parse from the other mediums).</p>\n<p>Users can favor/filter the events that they want to view, out of the multiple that could be happening anything given day?</p>\n<p>University Clubs can now post to our system to manage their event details and keeping their club members informed.</p>\n<p>Future Use Case:</p>\n<p>Users can will have the capabilities to post their own personal events (class times, study times) to view from the system. </p>\n<p>Possible Mobile Application with Updates from the mail Calendar system  sent to the user.</p>\n<h2>Direct Usage</h2>\n<ol>\n<li><p>Go to the index.html page to navigate to the homepage</p></li>\n<li><p>Click on the calendar tab to view the calendar</p></li>\n<li><p>The link will take you to the events page displaying the details for the event you wanted!</p></li>\n<li><p>Scraping code folder contains the code used to scrape facebook events and parsing Compass and Academic Calendar websites' ics files</p></li>\n<li><p>Event_List_Compiler.py contains the code for rendering the template developed using Jinja2. event-temp forms the template for the page events</p></li>\n<li><p>index.html is the landing page designed using bootstrap and icalendar</p></li>\n</ol>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jinja\">jinja</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/pratik151192/CalendarAggregator\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/pratik151192/CalendarAggregator\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["duty round completer", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>As an RA, I need to complete a handwritten duty log every night that I am on duty. It is a very out of date system and  inefficient since staff members of the building cannot see what is happening in the building in real time. So, we created a sms service that allows RA's to text a service about what is going on in the hall that night and include mandatory information required by professional staff like maintenance issues and start times for rounds. Also, this system will allow staff members to access a database of duty logs so that we can see what has happened on a specific night and notice patterns throughout the building.   </p>\n<h2>What it does</h2>\n<p>This service takes texts sent by RA's and puts that information into the mandatory duty log. Information that it includes is interactions with residents, start and end times for rounds, maintenance issues, and any notes for professional staff members.</p>\n<h2>How we built it</h2>\n<p>We created this service by using Java, Mysql, and twilio. </p>\n<p>We were able to get a proof of concept working and able to complete a duty log along with storing them in the database. </p>\n<h2>What we learned</h2>\n<p>How to write html, learned post request, and work as a team! </p>\n<h2>What's next for dutyroundcompleter</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mysql\">mysql</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/gradle\">gradle</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag\">thymeleaf</span></li></ul>\n</div>\n</div>", ["", "", "", ""]], ["HacksMap", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>HacksMap</h2>\n<p>An application that lets you easily locate hackathons near you and fit them into your schedule.\nUses a custom built api that scrapes data about hackathons and then uses the collected data to display a map showing nearby hackahons.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Metruption/HacksMap\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Metruption/HacksMap\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/Metruption/hackathonscraper/\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Metruption/hackathonscraper/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I made an open source API to generate a dataset required by the app that didn't previously exist.", "I built the web server using aws and made it public.  "]], ["SunnyTrade", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration : It's very hard to find cheap textbooks</h2>\n<h2>What it does: Enables students to trade textbooks with each other for cheap prizes, since there is no middleman</h2>\n<h2>How I built it: Built using Watson's api, Canvas api, Java, android, xml</h2>\n<h2>Challenges I ran into: A lot of interesting bugs</h2>\n<h2>Accomplishments that I'm proud of: Actually finishing the project</h2>\n<h2>What I learned: Bugs are not your enemy</h2>\n<h2>What's next for SunnyTrade: Not quite sure</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xml\">xml</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://gitlab.com/hackpsu/sunnyapp.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://gitlab.com/hackpsu/sunnyapp.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>gitlab.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["hedge", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"hedge \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/062/datas/gallery.jpg\"/>\n<p>\n<i>Desktop Application View</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"hedge \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/063/datas/gallery.jpg\"/>\n<p>\n<i>iOS Mobile Application View</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"hedge \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/064/datas/gallery.jpg\"/>\n<p>\n<i>Hedge Alert Notification Example</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>We started by asking ourselves what frustrates us the most in today's world. We went on about the recent news about how Alexa had severe vulnerabilities and how a few months back a couple of Chinese hackers found a devastating gap in security in Tesla's IoT protocol. They were able to access components and sensors of the car without the driver even knowing. </p>\n<p>We thought, why isn't there a better solution, and we did some research. We actually dumped the idea as we found out is was too much for a 24 hour event (not kidding!!). After some speculation, and 2 hours in, we decided to go full steam ahead and do all the research we can to get a further understanding of the subject, and came out with an awesome solution, <strong>hedge</strong>! </p>\n<p><strong>hedge</strong> is a secure protocol that we developed for use on all, or mostly all, IoT devices. We wanted something that was centralized, yet extremely secure. We understood the risks of centralizing data, but with our solution, it is nearly impossible to gain access to IoT's on our network and architecture. We also developed the <strong>hedgehub</strong> which is the product we designed to handle our protocol.</p>\n<p>We have a very open mind about IoT's and decided to make our ecosystem an open one. We want people to use and mix and combine other IoT's to make their home and connection as personalized as possible. No longer are you restricted to one market or one companies ecosystem.</p>\n<p>With <strong>hedge</strong> everything is connectable!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sql\">sql</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xaml\">xaml</a></span></li><li><span class=\"cp-tag\">http</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/dovedevic/hedge\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/dovedevic/hedge\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["BLINK", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>There have been times when pulling out my phone and opening the camera app has taken too long that I miss out on capturing the moment. With BLINK you can take pictures immediately without having to wait. The photos are saved on your device and allowing for ease of access. I decided to use python and OpenCV as they were the best solution at the moment.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/opencv\">opencv</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/prajesh22/BLINK.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/prajesh22/BLINK.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Gov Talk", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>We build a website intended to help people connect with their representatives in Congress. The original plan included collecting data about what bills are currently debated in Congress and allowing users to comment on these bills and draft letters to their representatives.  </p>\n<p>We finished creating user accounts, which finds the user's representatives based on their street address.  After the user registers or logs in, they are taken to a dashboard page that displays identifying and contact information for their representatives.</p>\n<p>Demo should be up <a href=\"https://hackpsu-2016-congress-site-mattowens.c9users.io/\" rel=\"nofollow\">here</a>.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/django\">django</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/MattOwens/gov-talk\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/MattOwens/gov-talk\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["NI 84", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"NI 84 \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/596/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to make a calculator that could run full fledged data processing software such as Octave.</p>\n<h2>What it does</h2>\n<p>It allows for data collection, lab instrument control, calcuations, sensor data collection and anything else a linux computer should do.</p>\n<h2>How we built it</h2>\n<p>We salvaged a broken TI-84 calculator and mapped the keyboard matrix with an arduino. We hacked the case to fit all of the electronics and installed a Raspberry Pi 3 inside.</p>\n<h2>Challenges we ran into</h2>\n<p>The ethernet refused to work on our expansion connector, and also various other soldering and software challenges such as drivers not cooperating well.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Mapping the keyboard to the arduino. Fitting all of this hardware into cuch a small form factor. </p>\n<h2>What we learned</h2>\n<p>We learned how difficult it is to reverse engineer products to link them together in such unconventional ways.</p>\n<h2>What's next for NI 84</h2>\n<p>I would hope to get it fully functioning as it was to difficult to integrate the hardware with only a two man team.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">labview</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag\">ti84</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://bitbucket.org/WinWizard/hackpsu-f16-ni-84/\" rel=\"nofollow\" target=\"_blank\" title=\"https://bitbucket.org/WinWizard/hackpsu-f16-ni-84/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>bitbucket.org</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Textbook Trader", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Textbook Trader \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/508/datas/gallery.jpg\"/>\n<p>\n<i>Main UI for textbook trader</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Textbook Trader \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/516/datas/gallery.jpg\"/>\n<p>\n<i>Login UI</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Textbook Trader \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/534/datas/gallery.jpg\"/>\n<p>\n<i>Textbook Select UI</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>Group Members: Shane Kramer, Owen Marett, Eric Wineland</p>\n<h2>Inspiration</h2>\n<p>Students across the nation each semester buy or rent used textbooks from campus bookstores or online services such as Amazon. Students rarely have the opportunity to directly exchange textbooks with one another. Our idea came forth from this lack of service for simply trading textbook for textbook, cutting out the middle man.</p>\n<h2>What it does</h2>\n<p>Textbook trader is a Java applet built to be imbedded in our website <a href=\"http://www.textbooktrader.com\" rel=\"nofollow\">link</a>. Currently the website and application aren't live as we have just built a prototype applet given the time constraints on this project. Our applet serves as a login based service that allows students to browse textbooks listed by other users and exchange their own textbooks for the ones listed.</p>\n<h2>How I built it</h2>\n<p>We built our project in Java using Netbeans 8.2. Our group utilized the Derby database for SQL scripts.</p>\n<h2>Challenges I ran into</h2>\n<p>We ran into multiple challenges. One of our biggest issues was using github for sharing code. None of the group members had much experience with github.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We are proud of the our project and hope it can serve as a prototype for others to build and expand upon. </p>\n<h2>What I learned</h2>\n<p>We feel we learned how to work as a group efficiently. </p>\n<h2>What's next for Textbook Trader</h2>\n<p>For the future we hope to expand further on our website and potentially have it up and running by next year.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sql\">sql</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/derby-js\">derby.js</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/kramersd/TextbookTraderRound2\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/kramersd/TextbookTraderRound2\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Crawl-E", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Robotics.</p>\n<h2>What it does</h2>\n<p>Move.</p>\n<h2>How we built it</h2>\n<p>Arduino.</p>\n<h2>Challenges we ran into</h2>\n<p>Time.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>It working.</p>\n<h2>What we learned</h2>\n<p>A lot.</p>\n<h2>What's next for Crawl-E</h2>\n<p>World domination.</p>\n</div>\n</div>", [""]], ["Simply", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>News sites often bend research conclusions to present them in a certain light. I want to bring research directly to the consumer so that only facts are presented and people can read them without hassle! Science is important, so bring it to everyone!</h2>\n<h2>The aim of the app is to use IBM Bluemix retrieve and rank API to search through given research, extract portions of the research such as the abstract, introduction, conclusion as well as relevant graphs/tables and present them in a beautiful way to be read by people of all backgrounds.</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/proto-io\">proto.io</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bluemix\">bluemix</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://pr.to/BKS628/\" rel=\"nofollow\" target=\"_blank\" title=\"https://pr.to/BKS628/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>pr.to</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["leapduel", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"leapduel \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/280/datas/gallery.jpg\"/>\n<p>\n<i>It's time to d-d-d-d-d-d-d-d-duel!</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>HackPSU 2016</h1>\n<p>Most of us didn't sleep. </p>\n<p>That's ok though. We built an awesome throw-back to Yugioh using the LeapMotion Controller, a modern twist on a retro piece of nostalgia we all remembered from our childhoods. </p>\n<p><strong>The game controls are simple:</strong></p>\n<ul>\n<li>'Tap' as if on a keyboard to add a card from the deck to the hand.</li>\n<li>'Swipe up' on a card to add it to the Playing Field.</li>\n<li>'Jab at the screen' to change a monsters battle position, or flip a spell or trap card.</li>\n<li>'Tap' on cards in the field to send them to the Graveyard.</li>\n</ul>\n<p>We hacked through the night, at first expecting to incorporate Oculus Rift into an Immersive 3D real-time Card Game using the Leap Motion controller and it's advanced bone tracking. After hours of playing with both Leap Motion and Oculus' Libraries, we decided against hacking together a 3D application in the time we had, and instead spent our time creating the card game using just Leap Motion's Libraries.</p>\n<p>We hacked together the graphics using OpenGL, SDL2, and SDL2_image. We interpret Gestures captured by Leap Motion in order to direct the game according to the Players hand-motions, almost like a real card game.</p>\n<p>In the future, we hope to add networking using SDL2_net for a true Two-Player experience, add soundtracks, notifications for other player moves. Finally, going along with the original plan, incorporate the Oculus rift with a card-table, avatars, and different environmental settings for a truly immersive out-of-the-world awesome experience.</p>\n<p>Currently Availably Only on Linux......../#LinuxFTW</p>\n<p>Built By:\nJoseph LoManto\nAndrew Plaza\nRyan Corcoran</p>\n<p>From The University of Scranton\n#jesuitsTakin'Over</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/makefile\">makefile</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c\">c</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/YourNerdyJoe/leapduel\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/YourNerdyJoe/leapduel\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Worked on an early 'push' effort to integrate Leap Motion controls with Oculus rift, focusing mostly on how to use Leap Motion. Scrapping Oculus, I worked on interpreting Gestures for the card game, and smoothing/polishing the moves for the final product, as well as a 'Intro' soundbyte", "I mainly worked on the game logic and front-end. I inspired the project by being the only member with knowledge of yugioh. Also helped incorporate the the other member's work with the LeapMotion into the project.", "I worked on printing out information from the LeapMotion and early efforts to port the game over to Oculus. The Rift likes Windows and our game likes Linux, and thus we encountered problems."]], ["retroApp", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We were inspired by the game Zork.</p>\n<h2>What it does</h2>\n<p>Creates a story through text.</p>\n<h2>How we built it</h2>\n<p>We used Visual Studio 2015 to build this in C++.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Pretty much the entire thing.</p>\n<h2>What we learned</h2>\n<p>A lot of ways not to succeed.</p>\n<h2>What's next for retroApp</h2>\n<p>Possibly trying to integrate graphics.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/jokingfire/retroHack\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/jokingfire/retroHack\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Culture Shock Calculator", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>I have a friend studying abroad in Japan who wanted something like this.</p>\n<h2>What it does</h2>\n<p>It gives you a score for culture shock based on answers to a form.</p>\n<h2>How I built it</h2>\n<p>I made an html form and learned to do stuff with it</p>\n<h2>Challenges I ran into</h2>\n<p>I'm bad at web dev</p>\n<p>The internet didn't work</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>People say it don't do what it do;\nbut it do</p>\n<h2>What I learned</h2>\n<p>I still don't like web dev</p>\n<h2>What's next for Culture Shock Calculator</h2>\n<p>Make it gooder</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/love\">love</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/BLubez/CultureShockCalculator\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/BLubez/CultureShockCalculator\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Like 98.6%"]], ["target-acquired", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to do something that went in parallel with HackHarassment. On the the largest forms of medium that the prominent individuals in our society use is Twitter. People are use twitter know that usually they follow celebrities and prominent people or have friends that use twitter all the time. We wanted to make a hack that allowed you to analyze twitter profiles for hate speech and tweets containing derogatory terms. </p>\n<h2>What it does</h2>\n<p>Loads and runs the Twitter API, gives you a field where you input who you want to analyze. The script gets all the tweets made by the selected individual, parses them and calculates how frequently </p>\n<h2>How I built it</h2>\n<p>I wrote the script in python, made the word bank, retrieved data from the api, changed the format of the data from the api and then compared and counted the words that were present in the word bank and api data</p>\n<h2>Challenges I ran into</h2>\n<p>flaky crew members and the fact that we switched from idea to idea and back to some old ideas plagued our voyage. Also writing something that had to work and wasn't pseudo code was a challenge because my ability to stackoverflow and google was mediocre at best. </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I'm proud that I used the twitter API, wrote a script in python especially when I haven't done it for about 2 months. I'm proud that I was able to create a working project with results. The output from the API came out in a weird format that had other non English characters in it so I had to learn how to change it's encoding and how to turn dictionaries to strings, how to merge lists and how to problem solve from the mistakes I made.</p>\n<h2>What I learned</h2>\n<p>more familiarity with lists, dictionaries, encoding, formatting data and how to use the Twitter API</p>\n<h2>What's next for target-acquired</h2>\n<p>I want to incorporate statistics and the ability to create accurate graphs and representation of data. With options to sort an individual's tweets by month or by year, so you can see the growth of (or decline in) hate in an individual. I know there are some python packages that I can use to make pie charts and other graphs. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Nachozombie/target-acquired\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Nachozombie/target-acquired\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["HelloWorldNES", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>HelloWorldNES</h1>\n<p>'Hello World' Nes emulator file</p>\n<p>Team members: Christian Dunn,\n              Jared Washington,\n              Hannah Lane</p>\n<p>Language: C\nLibrary: cc65\nEmulator: fceux</p>\n<p>-&gt; To connect, download cc65 and fceux. Install accordingly and run batch file afterwards. Then open emulator and drag nes file into emulator.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c\">c</a></span></li><li><span class=\"cp-tag\">batchfile</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/cjd5551/HelloWorldNES\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/cjd5551/HelloWorldNES\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["StylizeBot", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"StylizeBot \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/151/datas/gallery.jpg\"/>\n<p>\n<i>Original Image</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"StylizeBot \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/444/153/datas/gallery.jpg\"/>\n<p>\n<i>Stylized Like Seated Nude by Picasso</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>deepart.io is cool but takes a while to get sent an image back and I thought it would be neat to hook directly into social networks and create a bot that stylizes images.</p>\n<h2>What it does</h2>\n<p>Send a picture to the bot on twitter with #Stylize @StylizeBot and it will reply with that photo painted like a famous painting.</p>\n<h2>How I built it</h2>\n<p>I used a keras model I found on github which is trained on imagenet using vgg16. A node js microservice searches twitter for mentions @StylizeBot with #Stylize and then using the keras model does a neural style transfer based off a famous painting then reuploads that image as a reply to the original tweet.</p>\n<h2>Challenges I ran into</h2>\n<p>Hosting the keras model. AWS kept running out of memory finally I got it working when hosted on azure.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Figuring out the memory issues to get it to work on a hosted server.</p>\n<h2>What I learned</h2>\n<p>A little more about the inside workings of keras theano and tensorflow. As well as using the twitter api.</p>\n<h2>What's next for StylizeBot</h2>\n<p>Tagging photos with say #monet and it sends back a stylized photo like monet instead of just using a random famous painting as the style image.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag\">keras</span></li><li><span class=\"cp-tag\">tensorflow</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/azure\">azure</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://twitter.com/stylizebot\" rel=\"nofollow\" target=\"_blank\" title=\"http://twitter.com/stylizebot\">\n<i class=\"ss-icon ss-link\"></i>\n<span>twitter.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["SmartWake", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"SmartWake \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/443/801/datas/gallery.jpg\"/>\n<p>\n<i>UI-1</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"SmartWake \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/443/802/datas/gallery.jpg\"/>\n<p>\n<i>UI-2</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"SmartWake \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/443/799/datas/gallery.jpg\"/>\n<p>\n<i>UI-3</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"SmartWake \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/443/800/datas/gallery.jpg\"/>\n<p>\n<i>Readme</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>Smart Wake</h1>\n<ul>\n<li><code>Light up a day!</code></li>\n</ul>\n<p>@ Puxin &amp; Yuheng</p>\n<h3>INSPIRATION</h3>\n<p>Has this ever happened to you ?: sometimes when you woke up in bed in the morning, instead of feeling refreshed, you felt tired and exhausted. Most of us choose to set alarm clocks according to our life schedules, i.e. going to class, meetings. Around 70% people forced themselves to wake up to meet social needs (Till Roenneberg). Meanwhile, some researchers (Charles Czeisler and Megan Jewett) found that it takes around two hours to recover from the exhausted status if you wake up at the wrong time.</p>\n<p>During a thousand years' process of evolution, human bodies got adapted to the environment and became sensitive to daylight. Smart Wake is a web app built with R Shiny that offers a way to determine the right time to wake up every morning.</p>\n<p>Let's set our alarm clocks according lights, not time.</p>\n<h3>WHAT IT DOES? (Challenge)</h3>\n<p>Inpired by the API from AccuWeather, we decided to utilize the weather data to provide a simple and easy-to-use solution in personal healthcare management. </p>\n<p>In the mean time, this app also takes the OPTUM's challenge which is to close the gap between personal healthcare management and technology in practice by collecting healthcare data.</p>\n<p>At last, of course, this is also for the PSU Hack general challenge.</p>\n<h3>HOW IT WORKS?</h3>\n<p>The user interface of this application was designed with Mobile First in mind. It is more convinient to collect health data as well as impact daily life on mobile devices after all.\nSmart Wake pulls weather data from AccuWeather and feeds into a model which takes solar radiance, whether it will be rainy and other related factors into account to estimate the level of intensity of sunlight in a specific city at a specific time and date. </p>\n<p><em>TL, DR</em>:</p>\n<p>Open Smart Wake, just drag the bar and choose to the level of sunlight to which you would like to wake up to. After setting an upper limit and a lower limit, it computes the corresponding time for the alarm clock.</p>\n<p>Moreover, with more and more data from the user, such as sleeping cycle, Smart Wake gets better and better at its job. The app will keep track of user feedback so that it can deliver better recommendation on when to wake up.</p>\n<h3>Application</h3>\n<p>Link: <a href=\"https://creatrol.shinyapps.io/SmartWake/\" rel=\"nofollow\">https://creatrol.shinyapps.io/SmartWake/</a></p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/r\">r</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Creatrol/SmartWake\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Creatrol/SmartWake\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["splash", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>splash</h1>\n<p>Splash is a fitness app that determines if it is safe to do cadio workouts outdoors.  It utilizes that AccuWeather API to get the current weather conditions for your location.  It also determines the daily required water intake and the amount of burnt calories based on your exercises.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Objective-Z/splash\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Objective-Z/splash\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Peter-the-Penguin-s-Quest-for-Fatherhood", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>The game will eventually use a weather API to affect the game environment. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/jlarisch123/Peter-the-Penguin-s-Quest-for-Fatherhood\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/jlarisch123/Peter-the-Penguin-s-Quest-for-Fatherhood\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["JustTrade", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"JustTrade \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/443/827/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"JustTrade \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/443/837/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>JustTrade</h1>\n<p>Automated Trading System</p>\n<h2>Our Motivation</h2>\n<p>Suppose you have a great trading idea and you want to see it's performance on historical market data and even turn it in to real money making strategy in real time market.<br/>\nJustTrade will exactly meet your needs.</p>\n<h2>What it does</h2>\n<p>JustTrade is an AI automated trading system with realtime and backtest features, using IBM Watson AlchemyLanguage and AlchemyDataNews api to predict the trend of the companies which you are interested in.</p>\n<h2>How We built it</h2>\n<p>We used Django as the web framework, and added our own event based loop market signal detection/brokerage order algorithm framework. Together we have integrated the IBM Watson APIs.</p>\n<h2>Accomplishment</h2>\n<p>We are so proud of our product, it will both serve private and business users.\nIt is just a prototype demo version right now...</p>\n<h2>Future</h2>\n<p>We will work on user experience and robustness of our product.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/makefile\">makefile</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/shell\">shell</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/wusimo/JustTrade\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/wusimo/JustTrade\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Stylecast", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Stylecast \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/443/953/datas/gallery.jpg\"/>\n<p>\n<i>It's as easy as entering your postal code...</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Stylecast \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/443/962/datas/gallery.jpg\"/>\n<p>\n<i>and tah-dah!</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We're all from the Erie campus and the weather would get so crazy there sometimes. It would be warm when the temperature was low, solely because the sun was out or cold because it was windy that day. This gave us the idea of building a web app that would benefit the people living in that area by telling them what to wear based on Real Feel Temperature.</p>\n<h2>What it does</h2>\n<p>Based on Accuweather's Real Feel Temperature, which considers multiple factors including the temperature, humidity, cloud cover, sun intensity, and wind to generate the actual temperature that we feel when outside, the program comes with suggestions for what we should wear out that day. The minimum and maximum forecast also provides us with a gauge of whether or not to bring out an extra coat that day just in case.</p>\n<h2>How we built it</h2>\n<p>By screaming at our computers. That and the use of Brackets to code the HTML and CSS, and script in Javascript. Data provided by the Accuweather APIs extracted and implemented via Javascript as well.</p>\n<h2>Challenges we ran into</h2>\n<p>Initially we coded in C++ because that was what we were all more familiar with and was not able to integrate our C++ code with our HTML and CSS codes properly so we switch to Javascript, which was completely new to us. We had a hard time extracting the weather data results from the APIs and debugging was a big issue but with the kind advices from seniors and organizers, we managed to pull through.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>That we actually got this to work and not let it be a pile of broken garbage. Although it is really basic now, we see the potential in it to be further improved.</p>\n<h2>What we learned</h2>\n<ul>\n<li>Javascript, the parts we needed</li>\n<li>How to implement APIs</li>\n<li>How difficult it is to actualize a product from its idea form</li>\n</ul>\n<h2>What's next for Stylecast</h2>\n<ul>\n<li>The system can be further refined to give more personalized suggestions such as remembering a user's gender, details and preferences for clothing</li>\n<li>Monthly forecast to give the user a sense of what they will be mostly wearing for those months so they can prepare ahead of time</li>\n<li>Collaboration with clothing brands to suggest to users actual products that the user may like and would be suitable for the climate.</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag\">accuweather-api</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/alexafoo/stylecast\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/alexafoo/stylecast\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I mostly worked on back end, trying to figure how to interpret and implement the data given by the APIs into our code. I also came out with the general basis/idea of our web app.", "I worked on both the front and back end, developing and engineering the JavaScript code for our web application. I also took part in deigning HTML layouts of the webpage and debugged our application once it was finalized.", "Front end of the project. Designed and developed the HTML and CSS code for the Stylecast web application. Worked and learned about Javascript and JSON to retrieve and use the AccuWeather API weather data. ", ""]], ["MedTracker", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>A lot of people forget about their medications and tend to miss them. Also, they do not know about the kind of medication they are in and have no idea if what they are taking. </p>\n<h2>What it does</h2>\n<p>The app analyzes the prescription bottle and changes it into text, giving out its information and setting reminders.</p>\n<h2>How we built it</h2>\n<p>We built the back end using Flask and used Microsoft cognitive services api to analyze the picture. The details received from the picture were then sent to the health APIs to get more information about their usage. We used Java to build the android app and swift to build an ios app.</p>\n<h2>Challenges we ran into</h2>\n<p>Finding proper data to compare the drug details received from the pictures.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Building the Flask back end for the first time. One of my team member was proud of developing first android app.</p>\n<h2>What we learned</h2>\n<h2>What's next for MedTracker</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">computervision</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/microsoft-project-oxford\">microsoft-project-oxford</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ios\">ios</a></span></li></ul>\n</div>\n</div>", ["I worked on the backend with Python and the iOS app.", ""]], ["SPACECAR", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>SPACECAR is a small physics simulator in which you navigate a car through planet gravitational fields. Currently, we have a proof of concept with a CAR that can travel forward and backward (left and right arrows) and move between two planets.</p>\n<p>Eventually, there will be sliders to adjust various aspects of the physics, like CAR weight, and planet mass &amp; gravitational force. This will be a game with multiple levels featuring chains of planets with a final target destination your CAR must reach. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/ElizabethMunz/planetary-racers\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ElizabethMunz/planetary-racers\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I came up with the idea in a Data Structures class, implemented the game assets in Unity 5, and worked to hook everything up from there. Most of my time was focused on creating/fine-tuning collider interactions and game design.", ""]], ["FlashCast", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"FlashCast \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/443/281/datas/gallery.jpg\"/>\n<p>\n<i>Get the forecasts that matter to you.</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>FlashCast</h1>\n<p>FlashCast is an API powering a suite of Amazon Alexa Flash Briefing skills corresponding to AccuWeather's <a href=\"http://developer.accuweather.com/list-available-daily-indices\" rel=\"nofollow\">Daily Indices</a>. Instead of a generic high/low and precipitation forecast, FlashCast provides a highly customizable daily briefing tailored just for you.</p>\n<h2>How to use it</h2>\n<p>The Lambda function in this repository is managed with the <a href=\"https://github.com/apex/apex\" rel=\"nofollow\">Apex</a> tool - you should install the tool if you want to deploy the function on your own account. Make sure to customize the <code>functions/skill/config-sample.json</code> file with your location and API key, and rename it to <code>config.json</code>.</p>\n<p>To connect the function to the Flash Briefing service, link it to an Amazon API Gateway GET endpoint, with a pass-through body mapping template. You are then free to spend an hour adding the 50-odd Flash Briefing feeds to your Amazon Developer dashboard, using a different <code>id</code> query string parameter for each one. Have fun! (You can also get a nice list of the available feeds by visiting the endpoint in your browser, without a query string parameter.)</p>\n<h2>Limitations</h2>\n<p>Due to restrictions on Amazon's part, Flash Briefing requests cannot be directly tailored to the individual user, and as such the location to retrieve forecasts for must be specified in the Lambda function. This project therefore serves as a proof of concept for a system that could be further integrated with the Alexa ecosystem.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag\">aws-lambda</span></li><li><span class=\"cp-tag\">amazon-api-gateway</span></li><li><span class=\"cp-tag\">accuweather-api</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/okofish/flashcast\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/okofish/flashcast\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Lion-Dry", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Lion-Dry \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/441/888/datas/gallery.jpg\"/>\n<p>\n<i>Our AWESOME Logo</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Lion-Dry \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/441/922/datas/gallery.jpg\"/>\n<p>\n<i>Login Screen</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Lion-Dry \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/441/923/datas/gallery.jpg\"/>\n<p>\n<i>Residence Hall Selection</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Lion-Dry \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/441/927/datas/gallery.jpg\"/>\n<p>\n<i>Displaying Washers and Dryers</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Having lived on campus for all of our time in University Park so far, the three of us have found ourselves frustrated when doing laundry.  Depending on where on campus you're living, laundry may be right across the hall from your dorm room, or it could be on a completely different floor.  This is annoying if you are lugging your laundry up the stairs and find when you arrive at the laundry room that there are no open machines.  </p>\n<h2>What it does</h2>\n<p>We've created a starter demo of the app.  It currently retrieves information on 6 washer and dryer machines stored in a DynamoDB table on Amazon AWS.  It displays whether or not the machine is in use according to that table.  We did not implement the trend graph or the reservation system. </p>\n<h2>How we built it</h2>\n<p>We used Android Studio and integrated AWS's DynamoDB to retrieve which machines were open.  </p>\n<h2>How to run</h2>\n<p>If you have an Android device, click the \"Download APK\" button on our Github page. When it finishes downloading on your Android phone, open it to install (you may need to allow installations from unknown sources). The application will ask for a psu email and password. It does NOT link to your access account at PSU. Instead, use these example credentials:</p>\n<pre class=\"language-nolang\"><code>Email: abc1234@psu.edu\nPassword: hello\n</code></pre>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xml\">xml</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://aquatints.github.io/lion-dry/\" rel=\"nofollow\" target=\"_blank\" title=\"https://aquatints.github.io/lion-dry/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>aquatints.github.io</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Fk Your Alarm", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>One of our roommates doesn't wake up for his alarm. It's getting kind of cold outside, so we don't want to leave our beds and go turn it off. He doesn't even plan on going to class, so why does he even set the alarm in the first place?</p>\n<h2>What it does</h2>\n<p>When an alarm goes off on one phone, another phone can turn that alarm off (or on again).</p>\n<h2>How we built it</h2>\n<p>Interface was with Android studio, and \"connecting\" the devices was done using firebase.</p>\n<h2>Challenges we ran into</h2>\n<p>The ringtone selector returns a random ringtone, so you can't really set it.\nThe person who sets the alarm can't turn the alarm off on his on phone.\nOriginally tried to use bluetooth, but ended up using firebase.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>The interface looks ok, and none of us have used android studio before, so we are pretty proud of that.</p>\n<h2>What we learned</h2>\n<p>Intents are extremely useful for conveying information. Firebase is very useful for instant communication + easy setup time.</p>\n<h2>What's next for Fk Your Alarm</h2>\n<p>Probably visual improvements, keeping track of the alarms, being able to turn the alarm off on your on phone, advertisements (?).</p>\n<p>Need android studio to run it on your phone.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/quabeeb/RoommateAlarm/\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/quabeeb/RoommateAlarm/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]]]