[["Khaled Cans", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Khaled Cans \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/753/datas/gallery.jpg\"/>\n<p>\n<i>main page</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Trash it is everywhere not for long</p>\n<h2>What it does</h2>\n<p>senses trashcans are full</p>\n<h2>How I built it</h2>\n<p>very carefully</p>\n<h2>Challenges I ran into</h2>\n<p>couldn't get cans to say dj khaled quotes</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>it works</p>\n<h2>What I learned</h2>\n<p>they don't want you to win</p>\n<h2>What's next for Khaled Cans</h2>\n<p>public schools</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/angular-js\">angular.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/alexa\">alexa</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li><li><span class=\"cp-tag\">ultrasonic-range-finder</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/heroku\">heroku</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/love\">love</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://scruffyswift.herokuapp.com/#/\" rel=\"nofollow\" target=\"_blank\" title=\"http://scruffyswift.herokuapp.com/#/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>scruffyswift.herokuapp.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Node.js backend, continuous deployment, detection algorithm and poisson simulation.", "", ""]], ["Cardian Angel", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Cardian Angel \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/768/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Cardian Angel \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/748/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Cardian Angel \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/749/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>There are over 6 million vehicles in the greater Los Angeles area. More than half the population owns at least one car in urbanized areas. Dashcams are growing in popularity to determine who is at fault in the event of an accident. However, they are generally only used when the car is on. There needs to be some way for to be monitored when the driver is not nearby in the event of hit-and-runs, tire slashing, window breaking, and the like.</p>\n<h2>What it does</h2>\n<p>Cardian Angel is a vehicle monitoring system that tracks when people attempt to perform unwanted acts on your cars. It uses an accelerometer to determine disturbances and takes photos of the nearby environment to alert the owner using Twitter.</p>\n<h2>How we built it</h2>\n<p>The accelerometer is attached to an Arduino, which constantly scans for a disturbance to the vehicle. The Arduino communicates with a Raspberry Pi with Python, and uses a USB webcam to take a picture of the environment (more importantly, the attacker). Afterwards, the Raspberry Pi will post the picture on Twitter.</p>\n<h2>Challenges we ran into</h2>\n<p>Timing problems with the Arduino pulling too much information at once. Utilizing the Arduino without the IDE it comes with. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>It works.</p>\n<h2>What's next for Cardian Angel</h2>\n<p>Twitter was a proof of concept technology, and releasing actual photos of people may lead to false positives. Using a more private service such as Twilio may be desired. We want to be able to have more cameras to take pictures all around the vehicle. Using something like a GoPro that can take a 360 degree photo could work in place of this. Potentially use a GPS in case the car is stolen to track where your car is.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c\">c</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twitter\">twitter</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/accelerometer\">accelerometer</a></span></li></ul>\n</div>\n</div>", ["", "", ""]], ["Vend", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Vend \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/343/505/datas/gallery.jpg\"/>\n<p>\n<i>Time distribution, age, and gender data presented for Skittles product.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Vend \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/343/506/datas/gallery.jpg\"/>\n<p>\n<i>Cover page for vendor web app.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Vend \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/343/523/datas/gallery.jpg\"/>\n<p>\n<i>More information about a product.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Vend \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/343/524/datas/gallery.jpg\"/>\n<p>\n<i>Selection options for products in vending machine.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Vend \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/343/525/datas/gallery.jpg\"/>\n<p>\n<i>Final confirmation of purchased item.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Vend \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/343/526/datas/gallery.jpg\"/>\n<p>\n<i>Captured image for approaching users.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Vend \u2013 screenshot 7\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/343/527/datas/gallery.jpg\"/>\n<p>\n<i>Indicating to user that their image is being processed.</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Our team has recently been exploring the applications of iOT in every day tasks.  We don't think about vending machines as a big part of our lives but they are always a reliable source for snacking during those late nights studying for a midterm or cramming in an essay due the next day.  We built a newly improved prototype for a vending machine that incorporates technology we use every day for the benefit of both the average consumer and corporate vendors.</p>\n<h2>What it does</h2>\n<p>As a user approaches one of our vending machine units, our facial recognition system analyzes their profile, uploading and retrieving certain data from the cloud.  If you have visited the vending machine before, it will recommend your previous purchase.  If you are a new visitor, the analyzer will recognize your age and gender and based on the preferences of people who fit in similar demographic categories, will recommend a food item you might be interested.  The user has the option to dismiss these suggestions and select their own purchase item.  Once the user has made their selection, our hardware system releases the given product after retrieving data from the cloud.  The user interaction occurs on an iPad embedded on the surface of the vending machine.</p>\n<p>The data stored on user preferences based on demographics is stored anonymously and sent to a web app accessible to corporate vendors.  We perform analysis on the data and present it in a manner that highlights the trends in consumer preferences that serve as recommendations to the vendors.  Vend is a useful tool for market analysis.</p>\n<h2>How we built it</h2>\n<p>The Kinect is used to capture snapshots of approaching users.  The image is stored in an Azure database and then analyzed with Project Oxford's API for matching faces previously stored in our database (coded in C#).  Recommendations were displayed on an iOS device which also allowed the user to make a selection for a specific food item (coded in Swift 2.0).  A specific user's associated purchase data was stored using a Parse database and then sent to the Javascript web app accessible by the vendors of the products. The specific purchase made at any given time was sent over a Firebase server which was then analyzed by a Python script which controls an Arduino which operates a configuration of servo motors that release the given purchased item.</p>\n<h2>Challenges we ran into</h2>\n<p>With so many different technologies working simultaneously, we had various technical challenges.  One of the most prominent was continuously trying to read users.  It was difficult to make sure both registered and new users were able to enter the database accurately and consistently.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>In technical considerations, we are excited about our optimization of the time it takes for the Kinect to capture a picture and then match that photo with those pre-existing in the database.  In addition, we worked with the geographical API, Ersi, which was unfamiliar to us while incorporating it in our data analytics package.  Lastly, we implemented a fully functional vending machine which was extremely challenging to physically engineer. </p>\n<p>This product was inspired by services we use in our daily lives and that is why we believe it can easily be assimilated into modern society.  For example, we implemented surge pricing during time periods of peak consumer traffic.  Another aspect we are proud of is our creation of an entire ecosystem including hardware, software, and the cloud based integration of the two. </p>\n<h2>What's next for Vend</h2>\n<p>Installing multiple of our units in key locations to optimize usefulness for both consumers and vendors.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">kinect-2.0</span></li><li><span class=\"cp-tag\">swift-2.0</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/parse\">parse</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/azure\">azure</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/microsoft-project-oxford\">microsoft-project-oxford</a></span></li><li><span class=\"cp-tag\">ersi</span></li><li><span class=\"cp-tag\">iot</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/sampurnabasu/vend\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/sampurnabasu/vend\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I created the vendor-facing market analysis web app using Javascript.  The various visual representations of the consumer data are updated real time by querying a Parse (cloud) database and transmitting JSON elements.  I discovered many exciting and helpful JS libraries throughout the course of building this product.", "I worked on Kinect and backend server data management. I used Kinect's color, depth, and body sensor to create background removal effect. I also programmed to take picture of the user for face recognition. I also worked on Firebase, Parse, and Azure server to complete the process of data management.", "I worked on the iPad app that allowed the user to pick a speicific snack. I also worked on connecting the iPad to our backend to save the results of the user's selection. I also worked on using Project Oxford to do face recognition on the kinect.", "I worked on the arduino and sending data to it from the computer running python. I worked with the ersi api to tell people when they should add vending machines. I also wrote a python script to generate data for the project."]], ["ClarifaiTickets", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Tech talks</p>\n<h2>What it does</h2>\n<p>Gives you links to top relevant ticket results based on your facebook activity and pictures</p>\n<h2>How we built it</h2>\n<p>Used python and facebooks api to gather a users recent pictures and ran those through clarifai to get tags, collected users recent posts and gathered tags from the text. We removed all articles such as \"I, the, a, etc\" which left us with important tags. From this list we sorted the tags in a dictionary so the most frequent tags appear at the top. Next we took the top 5 tags(plus an offset of 5 because clarify created numerous tags not relevant to ticketmaster) and one by one put the location and a key tag into tiketmasters api to return a listing of tickets in relation to those filters. Next Output those to an html file to be viewed in a browser.</p>\n<h2>Challenges we ran into</h2>\n<p>Connecting individual apis\nlearning how to implement the apis\nUsing the apis in a non-standard environment(python + facebook api)</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Putting all apis together and actually returning useful results</p>\n<h2>What we learned</h2>\n<p>Apis are fun, but very fragile</p>\n<h2>What's next for ClarifaiTickets</h2>\n<p>Output to html properly, optimize returned tags, further personalized output, Better interface</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/facebook-graph\">facebook-graph</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ticketmaster\">ticketmaster</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/git\">git</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/github\">github</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/curl\">curl</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://github.com/Original-heapster/Sandbox\" rel=\"nofollow\" target=\"_blank\" title=\"http://github.com/Original-heapster/Sandbox\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["DANK TANKS", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"DANK TANKS \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/345/185/datas/gallery.jpg\"/>\n<p>\n<i>2 DANK 4 ME</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to make games. Using cool new EA API</p>\n<h2>What it does</h2>\n<p>Tanks can move and shoot each other. The gun is a hold and charge system.</p>\n<h2>How we built it</h2>\n<p>We built it using Unity and C# scripting.</p>\n<h2>Challenges we ran into</h2>\n<p>Binding the controls with the API</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We have a solid game with good core mechanics.</p>\n<h2>What we learned</h2>\n<p>How to make websites and use CSS to display input buttons as well as map them using Electronic Arts' API</p>\n<h2>What's next for HACKPOLYTANKS</h2>\n<p>Multiplayer integration with EA API</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/love\">love</a></span></li><li><span class=\"cp-tag\">struggles</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag\">eapathing</span></li><li><span class=\"cp-tag\">csharp</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/2Chanz/HACKPOLY16\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/2Chanz/HACKPOLY16\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the core game mechanics such as scripting movement and actions, player input, and integrating the Electronics API into the control scheme.", "I worked on the controller interface. My job was to use EA's pathfinder API to build a connection from a smartphone to the Unity game engine. Even though I wasn't able to get the controller interface to work the first time through, my friend Danny and the EA mentors taught me how to use the API to make this happen. Through this project, I learned a little bit of C#, CSS, javascript.", ""]], ["fotolitic", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Remember the time when you wanted to look up that picture of yours from the beach 5 years ago and couldn't think of the folder, forget the name of that image - DSC_0808.jpg (Ewww!)? Sounds familiar? We all have a whole lot of pictures, from a few hundreds to even several thousands, making it difficult to track down a particular one. Pictures and videos are often associated with the memories of the places that they were taken at and if there was a tool that would help look them up easily, it would be dope! </p>\n<h2>What it does</h2>\n<p>Fotolitic imports pictures from your Facebook account and builds and generates a tag repository from your images, making them searchable without you having to tag them manually. It also helps you get an idea of the relative number of tags in your account by presenting some neat data visualizations. It helps you browse your gallery like never before.</p>\n<h2>How we built it</h2>\n<p>Technology stack - Python(Flask), D3.js and Elasticsearch. We used the Facebook OAuth API to authenticate a user and generate permissions to access the user's gallery. We retrieved images, used Clarifai's API to fetch tags from these images and indexed them using Elasticsearch. From this data, along with the geolocation metadata, we were able to generate some data visualizations using Esri's API as well as D3.js.</p>\n<h2>Challenges we ran into</h2>\n<p>We ran into some integration issues, the JavaScript code broke several times, forcing us to move some of our code to Python to complete the pipeline. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are proud of the reception of the idea and are very happy with the progress that we have made. </p>\n<h2>What we learned</h2>\n<p>We had a good time building our Flask and Elasticsearch skills. </p>\n<h2>What's next for fotolitic</h2>\n<p>Connect with other storage providers like Google Drive, Dropbox, etc. Work on the scalability and stability aspects of the application and of course release a beta version soon!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/d3-js\">d3.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/esri\">esri</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/elasticsearch\">elasticsearch</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://www.fotolitic.appspot.com\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.fotolitic.appspot.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.fotolitic.appspot.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Ideation, UX, Backend. Integrated the code on Python Flask backend and created the UX.", "", "", ""]], ["Carmmunity: Exotics", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>The world of car spotting is huge, and a significant amount of those who participate in this exciting hobby can earn some significant rewards from their video blogs and photography. We created a platform that allows this global community of car spotters more easily and conveniently share what they do with the world and to enable other aspiring car spotters to join in on the fun.</p>\n<p>To provide a proof of concept within a 24-hour time span, we've decided to focus on one popular field of car spotting: exotic cars.</p>\n<h2>What it does</h2>\n<p>Users can easily pin their location along with the manufacturer and model (if applicable) of an exotic car that they saw through their Pebble Smartwatch or an Android application. Other car spotters can then pull up a synced map powered by Esri from within the Android application to more conveniently plan their next spotting adventure.</p>\n<h2>How we built it</h2>\n<p>We built a Pebble Watchapp that allows a user to easily select the model and manufacturer (if applicable) of the exotic car they. Once the model is chosen, it calls the Esri API to post a pin within a map at the user's current location. We also developed an Android application, which displays this Esri map and all the pins marked. </p>\n<h2>Challenges we ran into</h2>\n<p>Being completely new to Android development, our Android developer faced an abundance of roadblocks during development. In addition, our entire team was new to the Esri API, so familiarizing ourselves with the necessary components proved to be quite a challenge, especially within the Android application. Likewise, no one had developed for the Pebble Smartwatch before and having used Pebble's latest beta SDK called Pebble.js, which is a new framework that allows development completely in JavaScript instead of the native C environment, our Pebble Watchapp developer had to explore a variety of approaches to integrate JavaScript components that are usually supported by the native language but isn't in the Pebble environment.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We have a working proof of concept. Although our Pebble Watchapp developer has been to 2 hackathons before, this project was a 1st-time submission for all 3 of us.</p>\n<h2>What I learned</h2>\n<p>We learned a lot of Pebble, Android, and back-end APIs. Our entire team was generally unfamiliar with all of these technologies, and learning it on-the-spot within 24 hours proved to be both challenging and fun.</p>\n<h2>What's next for Carmmunity</h2>\n<p>We bonded during the hackathon and we ended up spitting out ideas that made us believe in a vision beyond our initial proof of concept. Besides completing our initial design and polishing the UI, we see ourselves taking the next step to provide additional features, such as heat mapping to display hot spots for car spotting based on historical data points and using artificial intelligence to automatically identify the make, model, and color of a car simply by taking a photo of it. In addition, we see this project expanding into yet another global community, hence the name Carmmunity, and providing a platform for other genres of car spotters to join in on the action.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/pebble\">pebble</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/esri\">esri</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li></ul>\n</div>\n</div>", ["Having never worked on the Pebble Smartwatch before, I took on the primary task of connecting a Pebble Smartwatch to our system that synchronizes with a custom Esri feature service and an Android application. I created our unique Pebble Watchapp to allow users to directly record manufacturers and/or models (if applicable) of cars spotted by utilizing Pebble.js, which is currently a beta Pebble SDK that allows developers to develop Pebble applications completely in JavaScript instead of the native C-language environment. In addition to the interface, I spent the bulk of my time constructing the proper, back-end AJAX call to perform a HTTP request and post geometric and car information to our custom Esri feature service through the ArcGIS REST API. Overall, my main contribution demonstrated the ability to connect smart wearable electronics to our connected Internet of Things (IoT) system.", "", ""]], ["Helping Hand", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/J76CDNtJBc4?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Helping Hand \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/713/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>We wanted to create something not only useful to us, but other people as well. This program can act as an automatic door maid which you can interact with via your phone or Pebble watch. Another feature is through the data gathered from the Pebble watch and the Android phone, we can track where you go throughout your day and how much time you spend there.</p>\n<p>Resources used:\nAlgorithmia\nEsri\nClarifai\nMicrosoft Project Oxford\nPebble\nRaspberry Pi\nMentors</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n</div>", ["UX, Python, Raspberry Pi, Film", "Worked on both developing the base Android application as well as integrating the pebble watch into the Android base.", "The frontend of the pebble interface and the backend of it's apps. I came up with the concept for the project and whiteboarded everything that was supposed to belong on the pebble watch.", "I worked on the backend of the apps we created, oversaw and ran tests on the Pebble, and helped create the promo video,"]], ["Cat in the act", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Disciplining an animal requires consistent correction of negative behaviors. Cat in the act ensures that your feline is following the rules even when you are out of the house.</p>\n<h2>What it does</h2>\n<p>Cat in the act uses a PIR sensor to activate a web cam that is being ran off of Undoo. Once activated the web cam will take a snap shot of its environment. The snapshot will be compared against other cat image through the use of . If the camera does detect a cat it will emit a tone to drive it away from ever surface you choose.</p>\n<h2>How I built it</h2>\n<p>Linux embedded system, USB camera, and PIR sensor.</p>\n<h2>Challenges we ran into</h2>\n<p>Serial port communication was a huge hurdle to cross.</p>\n<h2>Accomplishments that were proud of</h2>\n<p>Personally we are proudest of our team's ability to integrate the Ubuntu and arduino interfaces.</p>\n<h2>What I learned</h2>\n<p>Serial port commo using assets located on the chip</p>\n<h2>What's next for Cat in the act</h2>\n<p>Extensive field training.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag\">pir</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li><li><span class=\"cp-tag\">udoo</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://www.catintheact.net\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.catintheact.net\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.catintheact.net</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on getting the Clarifai API up and running to recognize when the device was activated by a feline friend rather than some uninteresting biped.", ""]], ["Gifly", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Gifly \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/345/442/datas/gallery.jpg\"/>\n<p>\n<i>Get political</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Gifly \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/345/443/datas/gallery.jpg\"/>\n<p>\n<i>Get sexy</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Gifly \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/345/444/datas/gallery.jpg\"/>\n<p>\n<i>Fun, you have</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Sometimes in life, you just need to give that pitch or speech on the fly and you don't really have great supporting images. Modern day standards for good presentations dictate that the speech itself have more content than your powerpoint. No one wants to read your bulletpoints as you read them aloud. </p>\n<h2>What it does</h2>\n<p>Gifly generates relevant images for your presentation on the fly. </p>\n<h2>How we built it</h2>\n<p>We take your voice. We transcribe it with IBM Bluemix. We query GIPHY. We return that gif. You profit. </p>\n<h2>Challenges we ran into</h2>\n<p>Learning node.js as we went. Callbacks and such. So bloody annoying. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Learning node.js as we went. \nIn fact, learning javascript as we went. </p>\n<h2>What we learned</h2>\n<p>GIPHY API is, well, exactly what one would expect from GIPHY. </p>\n<h2>What's next for Gifly</h2>\n<p>It'll run fact checks and background checks, live relevant news on the fly also. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bluemix\">bluemix</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/giphy\">giphy</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://gifly.mybluemix.net/\" rel=\"nofollow\" target=\"_blank\" title=\"https://gifly.mybluemix.net/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>gifly.mybluemix.net</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["wrote node.js backend for IBM Bluemix's Speech to Text Recognition service and Javascript HTTP to query GIPHY. ", "Pitch master.", "", ""]], ["Picafai", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Picafai \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/803/datas/gallery.jpg\"/>\n<p>\n<i>Wow that design is ugly. Sorry</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>DSLR Camera</p>\n<h2>What it does</h2>\n<p>Uses the Clarifai API to determine objects being photographed and matches it up with the current level's topic.</p>\n<h2>How I built it</h2>\n<p>With love.</p>\n<h2>Challenges I ran into</h2>\n<p>Traffic on the 57 North.\nPaid for parking when I didn't have to.\nPushing the data into the endpoint. (Had to convert it to base64 string)\nDesign decisions. (Never fixed)</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I came back. (I was really lazy)</p>\n<h2>What I learned</h2>\n<p>57 North could get congested.</p>\n<h2>What's next for Picafai</h2>\n<p>Things. Big Things.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ios\">ios</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li></ul>\n</div>\n</div>", ["I did everything", "Moral Support"]], ["PiCo", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/lf2vY22sk-s?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"PiCo \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/859/datas/gallery.jpg\"/>\n<p>\n<i>high-five!</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Want to give a high-five to yourself in a picture, but you know nothing about Photoshop? PiCo comes to the rescue.</p>\n<h2>What it does</h2>\n<p>By only using three simple taps, as an intuitive iOS camera app, PiCo allows you to combine pictures creatively.</p>\n<p>The screen is split into two parts. Take one part of the photo first, and then take the other part, and you will get a combined picture in an instant. Also, you can save your picture to your photo library and post it to your favorite social media.</p>\n<h2>How We built it</h2>\n<p>We are using Swift to build PiCo and are mainly using its AVFoundation framework to customize our camera. </p>\n<h2>Challenges I ran into</h2>\n<ol>\n<li><p>Utilized iOS AVFoundation framework to customize device camera into 2 parts.</p></li>\n<li><p>Design the layer and set their constrains so that they can fit any device.</p></li>\n<li><p>Designed algorithm to efficiently combine 2 pictures.</p></li>\n</ol>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We made it as what we initially want it to be! </p>\n<h2>What I learned</h2>\n<p>This is our first time to attend Hackathon, we got almost nothing about iOS development. Through straight 24 hours hack, we did learn a lot.</p>\n<h2>What's next for PiCo</h2>\n<p>We can figure out many other combination styles. More further, we could add some social function which not only combine pictures but also connect people! </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ios\">ios</a></span></li></ul>\n</div>\n</div>", ["lead this team to go over this app's development life circle including planning,  analysis, design and implementation.", "1) Proposed efficient method to realize real-time and simultaneous photo-cutting preview and photo-taking\n2) Built the brief and clear UI for users to get the final picture in only three steps\n", "1) Named the App!!!!\n2) Design the overall structure for the app;\n3) Implemented two core functions for images processing, i.e., crop captured images and then merge two cropped images into one for future output and viewing;\n4) Designed icon--a camera with two shutter buttons--for Pico.", "worked on pictures capturing and front end view logic"]], ["Casticks", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Both developers are huge fans of rhythm games. We have planned countless games with numerous control types. This ranges from arcade games using touch screens to computer games using a standard mouse and keyboard. We felt that this was a great opportunity to try and give back to the community that gave so much to us. This is our attempt at using a new technology to make something we love better.</p>\n<h2>What it does</h2>\n<p>Casticks is a Myo-controlled rhythm game built using Unity3D. It applies the motion technology of the Myo with a simple rhythm game concept. The game has four lanes in which colored \"notes\" fly at you to the beat of the music. Your goal is to control the Castick in order to catch the beats before they hit you. </p>\n<h2>How we built it</h2>\n<p>We started out with a discussion about design. What kind of game did we want to make? Once we had determined that we wanted to create a rhythm game, we ran into the next question of what kind of mechanics the game should have. It was difficult trying to find innovative ways to make the genre more interesting and active. We then researched and applied what we found to create Casticks.</p>\n<h2>Challenges we ran into</h2>\n<p>This was our first time using Unity and the Myo bands. We decided that we wanted to challenge ourselves with new hardware and software. As a result, we ran into a lot of problems interfacing the two pieces of technology together in a coherent way. Many hours were spent slaving over a couple lines of code that were simply meant to capture the acceleration of the Myo bands. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Though we had minimal experience in Unity, we were able to produce a polished, feature-complete version of our rhythm game. The timing works very well and can theoretically support any songs. The visuals and interface make playing very accessible whether the user is new to rhythm games or a veteran in this genre.</p>\n<h2>What we learned</h2>\n<p>Many features we wanted to implement (e.g., swipe-based Myo gestures and utilizing EA Pathfinder API to utilize mobile device as a controller) seemed like they could enhance our game, but at the end of the day we decided to cut these out due to technical issues and time constraints. We learned to quickly decide whether implementing certain features was worth it. In addition to honing our existing programming skills, we learned/reviewed the C# language and working with the Unity IDE.</p>\n<h2>What's next for Hack_Poly_2016</h2>\n<p>Due to our exposure with both Myo and Unity, we plan on continuing on with our projects beyond the hackathons. Seeing what we could accomplish in twenty-four hours really got us motivated to push for greater things. We will definitely come back next year.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/glsl\">glsl</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/asp-net\">asp.net</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/ngwangsa/Hack_Poly_2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ngwangsa/Hack_Poly_2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["TagSpy", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"TagSpy \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/897/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"TagSpy \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/896/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"TagSpy \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/895/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"TagSpy \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/898/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Looking at the Clarifai API, we wanted to make an app that's simple and allow us to learn the API more. We thought of the game I-Spy, and decided to use the phone's camera to create a simple I-Spy game on the phone.</p>\n<h2>What it does</h2>\n<p>You can play I-Spy on the phone. One player will enter something they can spot on the text bar. The player must be facing the direction of the item they are looking at. Another player will be prompted to use a camera to take a picture of the item. Using Clarifai's API we can analyze the picture's tags to see if it is the object the first player was looking for. If it is, the second player is correct!</p>\n<h2>How we built it</h2>\n<p>We built this on android studio and coded it mainly in java.</p>\n<h2>Challenges we ran into</h2>\n<p>We started off with technical difficulties in the beginning of the hackathon. We also had a lot of trouble trying to display a high resolution photo onto the display right after a picture is being taken.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are fairly happy about getting into Android and Clarifai's API during the hackathon. Since we both did not have much experience with Android development, we are glad to have made this in 24 hours.</p>\n<h2>What we learned</h2>\n<p>We learned how to use the Clarifai API as well getting more into Android development. We found out how to use the camera and parse photo data onto the phone's screen.</p>\n<h2>What's next for TagSpy</h2>\n<p>Some plans for the game will include a competitive matchmaking system with points and more modes!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["TheLono", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"TheLono \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/858/datas/gallery.jpg\"/>\n<p>\n<i>TheLono</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"TheLono \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/876/datas/gallery.jpg\"/>\n<p>\n<i>design</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>The Drought</p>\n<h2>What it does</h2>\n<p>Builds sustainable water usage habits in the shower</p>\n<h2>How we built it</h2>\n<h2>Challenges we ran into</h2>\n<h2>Accomplishments that we're proud of</h2>\n<h2>What we learned</h2>\n<p>Nothings ever as easy as it seems.</p>\n<h2>What's next for TheLono</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">mplab</span></li><li><span class=\"cp-tag\">pic18</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["Space Adventure", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<h2>What it does</h2>\n<h2>How I built it</h2>\n<h2>Challenges I ran into</h2>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<h1>It'sawesome</h1>\n<h2>What's next for Space Adventure</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li></ul>\n</div>\n</div>", [""]], ["Unitale_HackPoly2016", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Unitale_HackPoly2016 \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/825/datas/gallery.jpg\"/>\n<p>\n<i>My hack on undertale</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>I always wanted to make a boss worthy of fighting in one of my favorite games of 2015, Undertale.</p>\n<h2>What it does</h2>\n<p>Its a game built on the unity engine then I scripted the fight through the Lua Language. </p>\n<h2>How I built it</h2>\n<p>Unity &amp; Lua, as well as creating custom sounds for the game using bfxr, and made some pixel art with mspaint.</p>\n<h2>Challenges I ran into</h2>\n<p>learning the syntax of Lua.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>To complete this project with how little I know Lua in the first place.</p>\n<h2>What I learned</h2>\n<p>Lua Language</p>\n<h2>What's next for Unitale_HackPoly2016</h2>\n<p>Would like to make the fight be about the struggles I face on a personal basis through the unique fighting mechanics undertale does.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/lua\">lua</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mspaint\">mspaint</a></span></li><li><span class=\"cp-tag\">bfxr</span></li></ul>\n</div>\n</div>", [""]], ["Tagmersive", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Tagmersive \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/862/datas/gallery.jpg\"/>\n<p>\n<i>Unity/Python interpreter setup on Alienware laptop</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Tagmersive \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/863/datas/gallery.jpg\"/>\n<p>\n<i>Edward with Oculus Rift on</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Tagmersive \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/938/datas/gallery.jpg\"/>\n<p>\n<i>tagging microwave in Unity scene</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Tagmersive \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/939/datas/gallery.jpg\"/>\n<p>\n<i>tagging apple in Unity scene</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Tagmersive \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/944/datas/gallery.jpg\"/>\n<p>\n<i>Python API program output/tagging dog in Unity scene</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Tagmersive \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/945/datas/gallery.jpg\"/>\n<p>\n<i>tagging car in Unity scene</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Tagmersive \u2013 screenshot 7\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/946/datas/gallery.jpg\"/>\n<p>\n<i>tagging tree in Unity scene</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Virtual reality</p>\n<h2>What it does</h2>\n<p>Tags 3D objects in virtual reality, gives short descriptions of objects that are within the frame of view</p>\n<h2>How we built it</h2>\n<p>Oculus Rift, Unity, Python &amp; Clairifai API</p>\n<h2>Challenges we ran into</h2>\n<p>Some technical difficulties regarding coding and compiling</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Use of clairifai API and Python Client</p>\n<h2>What we learned</h2>\n<p>Programming in C#, Python</p>\n<h2>What's next for Tagmersive</h2>\n<p>Tag objects in real life, implement text-to-speech of tags, use of color tags</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">clairifai</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/oculus\">oculus</a></span></li></ul>\n</div>\n</div>", ["I worked on the Python image processing & its interface with the clarifai API as well as some Unity development ", "Worked on virtual reality environment, helped with coding the API.", "", ""]], ["MemeOff", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"MemeOff \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/878/datas/gallery.jpg\"/>\n<p>\n<i>The One Meme To Rule Them All</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"MemeOff \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/885/datas/gallery.jpg\"/>\n<p>\n<i>Tinder Style Swipe Voting</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"MemeOff \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/886/datas/gallery.jpg\"/>\n<p>\n<i>Leaderboard</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"MemeOff \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/880/datas/gallery.jpg\"/>\n<p>\n<i>Upload From Camera Roll, or Use Device Camea</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"MemeOff \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/883/datas/gallery.jpg\"/>\n<p>\n<i>Google Oauth</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Everyone loves memes, everyone loves SnapChat, some people love Tinder.</p>\n<h2>What it does</h2>\n<p>MemeOff is a native ios and android game based around the concept of a reverse caption contents. Everyday, a new caption is announced and users can Snap a picture to match the caption, creating a meme. Then, users can vote for their favorite memes using a swipe left, swipe right style of voting.</p>\n<h2>How we built it</h2>\n<p>We used Angular + Ionic + AngularFire to write a pure javascript application. We then used Ionic to compile the app into native ios and android.</p>\n<h2>Challenges we ran into</h2>\n<p>Angular 1 makes databinding tricky when working with a real time library like firebase. Even AngularFire doesn't quite solve all the async issues with Angular 1's digest cycle.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We got it done!</p>\n<h2>What we learned</h2>\n<p>Slow and steady wins the race</p>\n<h2>What's next for MemeOff</h2>\n<p>The one meme to rule them all.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/angular-js\">angular.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ionic\">ionic</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag\">angularfire</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/siegelhorn/memeoff\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/siegelhorn/memeoff\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["GIMBAL, GPS, CELLULAR, Robot and Analog Synthesizer", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"GIMBAL, GPS, CELLULAR, Robot and Analog Synthesizer \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/755/datas/gallery.jpg\"/>\n<p>\n<i>Securing gimbal to RC car</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"GIMBAL, GPS, CELLULAR, Robot and Analog Synthesizer \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/739/datas/gallery.jpg\"/>\n<p>\n<i>This is our station we created from our own supplies</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"GIMBAL, GPS, CELLULAR, Robot and Analog Synthesizer \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/740/datas/gallery.jpg\"/>\n<p>\n<i>charging the custom batteries we soldered together. Took batteries from old laptops.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"GIMBAL, GPS, CELLULAR, Robot and Analog Synthesizer \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/743/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"GIMBAL, GPS, CELLULAR, Robot and Analog Synthesizer \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/744/datas/gallery.jpg\"/>\n<p>\n<i>Measuring lengths for supports we need to model and print</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"GIMBAL, GPS, CELLULAR, Robot and Analog Synthesizer \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/745/datas/gallery.jpg\"/>\n<p>\n<i>Assembling the gimbal</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"GIMBAL, GPS, CELLULAR, Robot and Analog Synthesizer \u2013 screenshot 7\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/747/datas/gallery.jpg\"/>\n<p>\n<i>Attaching supports to gimbal</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"GIMBAL, GPS, CELLULAR, Robot and Analog Synthesizer \u2013 screenshot 8\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/751/datas/gallery.jpg\"/>\n<p>\n<i>Setting up the GPS and cellular communtication</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"GIMBAL, GPS, CELLULAR, Robot and Analog Synthesizer \u2013 screenshot 9\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/759/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"GIMBAL, GPS, CELLULAR, Robot and Analog Synthesizer \u2013 screenshot 10\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/784/datas/gallery.jpg\"/>\n<p>\n<i>Designing the gimbal</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"GIMBAL, GPS, CELLULAR, Robot and Analog Synthesizer \u2013 screenshot 11\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/786/datas/gallery.jpg\"/>\n<p>\n<i>3D printing a gimbal ring</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"GIMBAL, GPS, CELLULAR, Robot and Analog Synthesizer \u2013 screenshot 12\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/788/datas/gallery.jpg\"/>\n<p>\n<i>Lab station</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration  for 3D PRINTED GIMBAL, GPS, CELLULAR, Robot and Synth</h2>\n<p>Our team had too many ideas going into Citrushacks.  Because of our drive and motivation to make the best of the weekend, we decided to build two projects.</p>\n<p>Using a broken RC car as inspiration, we wanted to build a robot out of the platform.  We challenged ourselves to build a gimbal platform that remained stable without using external actuators or motors, but only through physical mechanics.  We were also inspired by the sheer number of parts we assembled.  We decided to build an analog circuit to make use of all the transistors, ICs, and resistors we had.  We figured that an amazing way to showcase analog oscillations would be with a electronic music synthesizer.  </p>\n<h2>What it does</h2>\n<p><a href=\"https://goo.gl/photos/8zvshE9cpRfFiTFZ9\" rel=\"nofollow\">https://goo.gl/photos/8zvshE9cpRfFiTFZ9</a></p>\n<p>We called our robot the beverage buddy.  It delivers beverages to the user without spilling it by using a gimbal platform to keep it upright.  This gimbal is not powered by accelerometers or motors, and remains upright by taking advantage of angular momentum properties (in a special enclosure we designed!)  While traveling, the robot updates the user with GPS tracking updates through SMS text messages so that you can rest assured your drink arrives safely and quickly.</p>\n<h2>How we built it</h2>\n<p>We had to computer model, design, and 3D print the entire gimbal assembly.  Furthermore, we had to code protocols to communicate with RC, GPS, and SMS texting at the same time.</p>\n<p>For the synthesizer, we utilized a 555 timer chip in sequence with a capacitor and a resistor to create an oscillator circuit.  This oscillator was then routed and sequenced into other oscillator to create interesting sound waveforms similar to an old atari console (8 bit sounds).  We then passed the signal through a multiplexer and bit shift register to create a sequencer.</p>\n<p>A sequencer stores sound data into an array, which can then be played back by the user, creating a melody.</p>\n<h2>Challenges we ran into</h2>\n<p>Analog circuitry was very difficult because each pin of the microcnotroller was used up, and each pin required at least 2-3 wires.  This means we had to solder almost 50 wires!</p>\n<p>We also had no battery for the RC chassis, so we had to rig our own battery pack together using old laptop batteries.  We had to do lots of calculations to make sure we didn't blow anything up!</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>1) Designing and manufacturing the entire gimbal assembly  using solidworks, Cura, Pronterface, and a 3D Printing.  It is very difficult to print parts that have correct dimensions.  Furthermore, each part takes at least 5 hours to print.  Because the hackathon was only 24 hours long, we did not have room to make mistakes because then we wouldn't finish printing all the parts in time!</p>\n<p>We took extreme care to measure and assess each dimension so that the parts would mesh perfectly.</p>\n<p>2) Machining and drilling a enclosure box for the synthesizer that utilizes knobs, buttons, and LED array to display 8-step sequencing.</p>\n<h2>What we learned</h2>\n<p>We learned how to implement GPS and Cellular devices for the first time.  We were able to sync our robot with passing GPS satellites, which beamed location coordinates to us through SMS (through our own homebrew protocol).</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">3d-printer</span></li><li><span class=\"cp-tag\">gprs</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/gps\">gps</a></span></li><li><span class=\"cp-tag\">cellular</span></li></ul>\n</div>\n</div>", ["", "", ""]], ["Agar.io Remade", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Agar.io Remade \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/850/datas/gallery.jpg\"/>\n<p>\n<i>Title Screen</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Agar.io Remade \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/851/datas/gallery.jpg\"/>\n<p>\n<i>Gameplay 1</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Agar.io Remade \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/852/datas/gallery.jpg\"/>\n<p>\n<i>Gameplay 2</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>Controls : \n   Mouse - Follow\n   Space - Launch Self\n   C - Randomize Color</p>\n<h2>Inspiration</h2>\n<p>To be able to recreate a simple, but yet very addicting game</p>\n<h2>What it does</h2>\n<p>A 360 2D Scroller with the goal of becoming the biggest cell by capturing other cells</p>\n<h2>How I built it</h2>\n<p>Using Unity's Javascript, we were able to use its properties to build objects, circles, and interactions between objects.</p>\n<h2>Challenges I ran into</h2>\n<p>Camera usage on multiple objects, 360 Projectile Trig. Calculations, syntax, and multiple scenes.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Being able to understand the complexity of mathematical and logical thinking withing creating a game </p>\n<h2>What I learned</h2>\n<p>How to use the general functions within unity including creating objects, force and speed manipulation, joining objects together, and applying GUI's.  </p>\n<h2>What's next for Agar.io Remade</h2>\n<p>Multiplayer and modifications that would make it different from the original</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n</div>", [""]], ["AnimeUpdate", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>I wanted to make this as a gift to my girlfriend</p>\n<h2>What it does</h2>\n<p>Checks a website for new anime episodes</p>\n<h2>How I built it</h2>\n<p>Using Jsoup Api</p>\n<h2>Challenges I ran into</h2>\n<p>Fragments proved to be more of a difficult topic than I thought.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I finished almost everything that I wanted to get done</p>\n<h2>What I learned</h2>\n<p>That I can accomplish a lot with hard work</p>\n<h2>What's next for AnimeUpdate</h2>\n<p>Finish implementing all of the features I wanted to get done</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li></ul>\n</div>\n</div>", [""]], ["Viro", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/spdOuVCGjlE?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Viro \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/833/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Viro \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/834/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Viro \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/835/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We were inspired to build Viro to create safety for all. </p>\n<h2>What it Does</h2>\n<p>Think of Viro as an extension of yourself. Be at two places at the same time, or venture into unexplored environments off limits to humans.</p>\n<h2>How we Built Viro</h2>\n<p>We interfaced the tracking and accelerometer data from the Oculus Rift, as well as motion, tracking, and EMG data from the Myo to control the robot. Then we sent a live video stream back to our computers so we can see where the robot is going.</p>\n<h2>Challenges we Ran Into</h2>\n<p>Byte array data generated from the robot's camera was hard to parse into a image/video file. Still having troubles recreating images in real time from raw binary data, and incorporating frames into Oculus video. Furthermore, due to the nature of the Oculus environment, the virtual camera tracking using head movements virtually within the software is glitchy, and further implementations of a 3D camera mount on top of the robot may be needed to enhance user interaction.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Interfacing three different pieces of tech together, all while using the same programming language, and creating the necessary networking and framework was an accomplishment in itself. </p>\n<h2>What I learned</h2>\n<p>As first time hackathon contestants, we learned a lot of languages, the ability to collaborate and work together as a team, robotics, and virtual reality simulation.</p>\n<h2>What's next for Viro</h2>\n<p>Further implementations include the live stream of video directly into Oculus Rift, as well as automatic object recognition using external API's so that the robot may identify potential hazards and threats before the human.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/myo\">myo</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/oculus-gear-vr\">oculus-gear-vr</a></span></li><li><span class=\"cp-tag\">nao</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li></ul>\n</div>\n</div>", [""]], ["Fayble", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Fayble \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/864/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Fayble \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/865/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Fayble \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/866/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Fayble \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/867/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Fayble \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/868/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Fayble \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/869/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Introducing Fayble. A new way to furnish your home. Skip the dizzying shopping experience at Ikea and design customized furniture straight from your browser. Our streamlined web interface lets you pick a template furniture, customize the dimensions and style. We're bringing the design process to the user. Furniture that inspires.</p>\n<p>Using 3d modeling tools Rhinoceros3d and Grasshopper3d, we parametrically created furniture templates to be accessed and customized from a web interface.</p>\n<p>We decided to build a website to let users customize furniture and order it using our robotics software. We used the MEAN stack for the web development and designed the furniture as well as the robotics software needed to manufacture it.</p>\n<p>Challenges:</p>\n<p>We ran into challenges when we wanted to make the changes to the design in real time as the user edited it on the website. We did not anticipate the difficulties of connecting different servers and making sure the data is compatible.</p>\n<p>Accomplishments:\nWe built a very well designed website and pieces of furniture that we can view in a website as well as move around in our modern interface. We learned many new technologies and improved our technology skills. Also, we coded for 24 hours</p>\n<p>What's Next?\nFayble is developing a streamlined automated manufacturing process that brings the price point for customers down to an accessible level. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/three-js\">three.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/angular-js\">angular.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/photoshop\">photoshop</a></span></li><li><span class=\"cp-tag\">rhinoceros3d</span></li><li><span class=\"cp-tag\">grasshopper3d</span></li><li><span class=\"cp-tag\">v-ray</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n</div>", ["Lead the design efforts for the frontend design/development.", "", "", ""]], ["Pow", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Pow \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/685/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Accomplishments that we're proud of</h2>\n<p>We developed a server and client module with robust netcode for handling events and a 2D game engine both from scratch in under 24 hours. None of us had prior experience building netcode for a game.</p>\n<h2>What it does</h2>\n<p>Hosts a server and allows several clients to connect. Each player can move around the map and punch the others until health reaches zero.</p>\n<h2>How we built it</h2>\n<p>Programmed in Java. Server backend in java as well. Engine in java....everything in java</p>\n<h2>Challenges we ran into</h2>\n<p>Latency for sending packets. Found a few good solutions (flush and other methods).\nRemaining functional/efficient for over 24 hours with NO SLEEP.</p>\n<h2>What we learned</h2>\n<p>How a multiplayer game in java works and loopholes for efficient communication.</p>\n<h2>What's next for us</h2>\n<p>Continue to develop into a full game.</p>\n<h2>Inspiration</h2>\n<p>Fun multiplayer games. Mario Party.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/ksbdude/Pow\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ksbdude/Pow\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://drive.google.com/open?id=0B8hYna1R8jAZRjhrcDhoa1U3SDA\" rel=\"nofollow\" target=\"_blank\" title=\"https://drive.google.com/open?id=0B8hYna1R8jAZRjhrcDhoa1U3SDA\">\n<i class=\"ss-icon ss-link\"></i>\n<span>drive.google.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Never Forget", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>I tend to use one base password and then permutations of that for many sites that I register for. This isn't the most secure and with so many companies being exploited, I decided I wanted to be a bit more <strong>secure</strong> with my passwords. I didn't want to worry about remembering complicated passwords or having to keep a flash drive with all of them and so I came up with this.</p>\n<h2>What it does</h2>\n<p>This project hosts a single web server. That server is a proxy of sorts to \"<a href=\"http://www.google.com\" rel=\"nofollow\">http://www.google.com</a>\". As you log in to your Google account, instead of using your actual password, you just type \"password\". The server takes over from here and automatically fills in your password for you.</p>\n<h2>How I built it</h2>\n<p>I built it using C#'s HttpListener to handle HTTP requests to my server. The server takes the request and sends it out to Google. The response is a web page. That web page is automatically edited to work with the proxy and then sent over to the client. When you submit the form for logging in to your Google account, the server captures the form inputs and edits the password box to reflect your actual password. This updated form is then sent to Google for authentication and the proxy continues to handle the client from there.</p>\n<h2>Challenges I ran into</h2>\n<p>Web pages tend to be built around the fact that they are operating within the browser that the user is viewing them on. In order to edit data coming from the user, I had to break this convention and work around the implementation details that it entails. For example, cookies had to be continues between the server's requests to google and the users requests to the server. Headers for the requests to Google had to reflect an actual browser. And links had to be redirected to special paths that could be handled by the proxy server.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>There is a lot of conservation of data in this project and that has been a struggle for me in the past. There are also intuitive algorithms for patching the link system and cookie system.</p>\n<h2>What I learned</h2>\n<p>I learned a lot more about the process as a whole for viewing web pages.</p>\n<h2>What's next for Never Remember</h2>\n<p>The next big thing is allowing it to work for any account on any site and adding support for multiple users.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li></ul>\n</div>\n</div>", [""]], ["GeoTrends", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"GeoTrends \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/760/datas/gallery.jpg\"/>\n<p>\n<i>Seattle</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"GeoTrends \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/761/datas/gallery.jpg\"/>\n<p>\n<i>World View</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"GeoTrends \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/762/datas/gallery.jpg\"/>\n<p>\n<i>Ireland</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"GeoTrends \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/763/datas/gallery.jpg\"/>\n<p>\n<i>France</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"GeoTrends \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/836/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"GeoTrends \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/919/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>They say photos are worth a thousand words. We wanted to put those words to use.\nThese words, or tags, have become an important part of the digital world, as we rely on photo or video tags for image discovery, categories, inspiration, and search engine optimization. In many cases, marketing to target markets with unique demographics in certain regions of the world has been difficult. With GeoTrends, tags can be developed automatically and accurately.</p>\n<h2>What it does</h2>\n<p>GeoTrends take recent uploads from Flickr, as popular photography website, and uses machine learning software from Clarifai to develop relevant image and subject identification. Geographical data places these points on a map with ESRI's ArcGIS platform.</p>\n<h2>How we built it</h2>\n<p>Our application was built as a website.  The majority of the logic is written in javascript.  In the future, a more robust web application architecture will make more comprehensive use of the data.</p>\n<h2>Challenges we ran into</h2>\n<p>The Asynchronous nature of JavaScript made it difficult to ensure that the keywords associated with a particular picture and location actually populated the map correctly (having the correct keywords refer to the correct image)</p>\n<h2>Accomplishments that we are proud of</h2>\n<p>Making the keywords properly refer to the photos they were associated with was a milestone considering JavaScript's asynchronous nature. In addition, calling information from three different API's was an incredible accomplishment.</p>\n<h2>What we learned</h2>\n<p>We learned that it was very difficult to learn an API in less than 24 hours.  We have barely scratched the surface with the ESRI API, and I know that there are some great tools that can enrich this application.</p>\n<h2>What's next for GeoTrends</h2>\n<p>For every photo uploaded, tags relevant to the photos are automatically generated alongside it - providing ease of use and simplicity to experienced or inexperienced users. Clarifai's \"always learning\" algorithms will ensure GeoTrends will keep a competitive advantage in image subject identification while ESRI will give us an edge in displaying trend data analytics. The effective combination of the two technologies will be the role model for the tools in trend research, trend analytics, and trend prediction for target markets of all characteristics based on past and real-time data.</p>\n<p>Brought to you by:\nPhillip Sloan, Eric Hanamoto, Andrew Larke, and Emil Angelo Rodriguez</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag\">api</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flickr\">flickr</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/esri\">esri</a></span></li><li><span class=\"cp-tag\">gis</span></li><li><span class=\"cp-tag\">cloud</span></li><li><span class=\"cp-tag\">photograph</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://philsloan.ninja/\" rel=\"nofollow\" target=\"_blank\" title=\"http://philsloan.ninja/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>philsloan.ninja</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["vico", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"vico \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/774/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"vico \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/775/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"vico \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/776/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"vico \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/777/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>A good mutual friend of all team members has been colorblind his whole life, and has never seen the color purple.</p>\n<h2>What it does</h2>\n<p>The program takes a live feed from a phone's camera, and adjusts the hues and saturation to allow those who are colorblind to view objects as they truly are.</p>\n<h2>How we built it</h2>\n<p>We used Android Studio and OpenCV</p>\n<h2>Challenges we ran into</h2>\n<p>OpenCV had a lack of functionality with the android system as there was multiple bugs and system crashes throughout the process. Introduction and self teaching of android studio</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>To get started into a project that we seek to continue, as it will provide freedom and introduce never before seen images to 5% of the population.</p>\n<h2>What we learned</h2>\n<p>How to use OpenCV, and NOT to use OpenCV with android. Animation for icons, and further development of software that includes the phone camera in moble.</p>\n<h2>What's next for Vico</h2>\n<p>To provide a new view of life for colorblind individuals through an accessible apps, and a self built (or pay $3) for a VR google cardboard headset.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/opencv\">opencv</a></span></li></ul>\n</div>\n</div>", ["", "", ""]], ["HackPoly2016-Raymond", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>HackPoly 2016 project by Raymond Arias, Connor Haskins, Chris Cao, and Eric.</p>\n<p>Virtual DJ app for Android.</p>\n<h1>HackPoly2016</h1>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/RaymondArias/HackPoly2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/RaymondArias/HackPoly2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Worked with the YouTube API to create the dynamic search functionality. Implemented the YouTube video fragments and the UI design for the search activity.", "I wrote some of the client side code in the phone to phone connection by using Java sockets.", ""]], ["Iris", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Iris \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/799/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Iris \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/800/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Iris \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/801/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Many performance cars have acrylic engine covers to allow people to see the powerful engine under the hood. Similarly, many gaming PC cases come with a side window, and more often than not an LED strip to illuminate the components of the computer. We think that's great, but we wanted to improve upon it.</p>\n<h2>What it does</h2>\n<p>The light strips are plugged into a computer, so why not be able to control it via the computer rather than a remote, or buttons as so many others have? Our software allows you to create plugins (or use the built in plugins) which will react to music, temperatures, fan speeds, notifications, and whatever else you can think of. Plugins are meant to be extremely easy to create. They are written in JavaScript and placed in the users' Documents folder.</p>\n<h2>How I built it</h2>\n<p>There are several parts to the program:</p>\n<ol>\n<li>GUI</li>\n<li>Plugins</li>\n<li>Serial Communication (with Arduino)</li>\n<li>Arduino Code</li>\n<li>FFT and BeatDetect (Reactive Audio)</li>\n<li>Preferences</li>\n</ol>\n<p>Many of these steps were done in Node.js natively or with node modules. The program looks for and loads a plugin, (either based on preferences or a default) then sends an array of values over serial to the Arduino, which uses the Fast_SPI library to communicate with a series of LPD6803 chips on the RGB LED strip. </p>\n<h2>What's next for Iris</h2>\n<p>We plan to keep this open source, up to date, and easy to use for the pc gaming community. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["Guess The Tag", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Guess The Tag \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/827/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>What it does</h2>\n<p>Guess the Tags is a web-based guessing game developed for Cal Poly's Hackpoly 2016. It implements both Clarifai and Imgur's APIs in a simple yet amusing way that has players thinking on their feet!</p>\n<h2>How we built it</h2>\n<p>We used python with Flask to build all of out backend, and we used html, css, and bootstrap for out frontend.</p>\n<h2>Challenges we ran into</h2>\n<p>We ran into some beginner problems with how to setup a specific API and getting the database correctly setup, and how we can some of the frontend design like manipulating an image to only display part of it.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are very proud of our ability to make a web app of this level because we all are still very new to web development and dealing with API's.</p>\n<h2>What we learned</h2>\n<p>We learned so much, for example dealing with API's, dynamically updating information on a website, and creating a backend for the rest of the application to get information from. </p>\n<h2>What's next for Guess The Tag</h2>\n<p>We plan on polishing it up so it is more playable, implementing a high score system in the frontend, and maybe multiplayer in the future!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/imgur\">imgur</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sqlalchemy\">sqlalchemy</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Alackey/pictionary\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Alackey/pictionary\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Bronco QuickFit", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>I hate it when I make the trip to the gym only to find out that a group of four is switching off on a machine I was planning on using or when I go to play basketball and no one is at the court. It makes for an inefficient workout. I wanted to make an app that fixed that issue.</p>\n<h2>What it does</h2>\n<p>This app would give you an estimate of how many people are at the gym and where they are located. It does this by using the hourly headcount the Bric employees take to give the user an estimate of how busy/full the gym is. It is separated by Floors and machines to give you a more detailed look</p>\n<h2>How I built it</h2>\n<p>I couldn't get access to the Bric headcount information due to them being under contract with a company called GoBoard (the company they send the information too). I contacted GoBoard and they are happy to go through with sharing that data since they use it in a completely different way. Unfortunately, I contacted them the day before the hackathon so they were unable to do that in the time frame. </p>\n<h2>Challenges I ran into</h2>\n<p>Without access to the actual headcount I had to create false numbers in order to show the concept.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I learned HTML, CSS, and JavaScript during the Hackathon so for my first day it is not too terrible.</p>\n<h2>What I learned</h2>\n<p>That working in groups allows you to delegate responsibilities making it a little easier to get things done</p>\n<h2>What's next for BroncoBuffer</h2>\n<p>When I get access to the actual headcount information I plan on starting the actual app making process.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag\">api</span></li></ul>\n</div>\n</div>", ["I wrote the javascript portion and html portion", "I created the CSS for the HTML page, and edited parts of the HTML to optimize my CSS. I also cleaned up the JavaScript visually."]], ["Creative Visualizations of Audio signals.", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Creative Visualizations of Audio signals. \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/735/datas/gallery.jpg\"/>\n<p>\n<i>&lt;--- tryna sleep after a RedBull</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>I mostly just build this kind of stuff on my own on the weekends....</h2>\n<p>but it was nice to lose sleep over it this time I guess.</p>\n<h2>It makes cool animations</h2>\n<p>based on the Wave-forms + Frequencies of the mp3 data. also here is a pig --&gt;    (0(00)0)    <em>oink</em></p>\n<h2>How I built it</h2>\n<p>There is this magic stuff called JavaScript that everyone should take a look at if they have the chance sometime... or not. \n;-(</p>\n<h2>Challenges I ran into</h2>\n<p>turns out audio frequencies have very precise ranges in which they look interesting. It takes allot of linear \nand sometime extra-linear transformations to get them to co-operate  </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I made a thing! and it kinda works. yay! :P</p>\n<h2>What's next for Creative Visualizations of Audio signals?</h2>\n<p>A more Interactive experience could prove a more interesting product. (but in reality i'm probs just gonna work on something a little more challenging in the future)</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag\">my-brain</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Carter440/HackPolySite\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Carter440/HackPolySite\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Graphics Engine", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>This graphics engine was built with the intent of learning the underlying mathematics that takes place when making a 3D model appear on a screen.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/allegro\">allegro</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["PickWhich", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Yeah</p>\n<h2>What it does</h2>\n<h2>How I built it</h2>\n<p>With Android</p>\n<h2>Challenges I ran into</h2>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<h2>What's next for PickWhich</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li></ul>\n</div>\n</div>", [""]], ["ReciMe", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We were fuckin hungry</p>\n<h2>What it does</h2>\n<p>Finds recipes around the world</p>\n<h2>How we built it</h2>\n<p>Node and Express back-end API with a front-end consisting of jQuery and BootStrap to pull data from our Back-end and MongoDB</p>\n<h2>Challenges we ran into</h2>\n<p>Parsing JSON Data appropriately, and querying the database</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Slick UI</p>\n<h2>What we learned</h2>\n<p>Web Development</p>\n<h2>What's next for ReciMe</h2>\n<p>refining, polishing, and features.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://lets-grub.herokuapp.com/\" rel=\"nofollow\" target=\"_blank\" title=\"https://lets-grub.herokuapp.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>lets-grub.herokuapp.com</span>\n</a></li>\n<li><a href=\"https://github.com/weirdfishes/recime\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/weirdfishes/recime\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the back-end of the project with Alec, with the database and the Node/Express server. ", "I worked in developing the backend of the application. Towards the end of the project, helped finalize front end UX aspects", "I worked on the front end development and towards the end try to understand some back end", ""]], ["Mosaifai", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Mosaifai \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/779/datas/gallery.jpg\"/>\n<p>\n<i>Homepage</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Mosaifai \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/783/datas/gallery.jpg\"/>\n<p>\n<i>Original image</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Mosaifai \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/789/datas/gallery.jpg\"/>\n<p>\n<i>Generated mosaic</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Its cool that AIs are able to tell us what is in an image. Creating a mosaic of like images is also cool. Wow</p>\n<h2>What it does</h2>\n<p>Creates a mosaic of similar images from tags using your original image</p>\n<h2>How we built it</h2>\n<p>Clarifai API, flickr api, lots of javascript, couple of magical algorithms. Wow</p>\n<h2>Challenges we ran into</h2>\n<p>CORS, image processing took a long time to build the mosaic design</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are jquery masters now. Pixel art. Wow indeed</p>\n<h2>What we learned</h2>\n<p>Browser security is serious business. Javascript sandbox in browser is secure.</p>\n<h2>What's next for Mosaifai</h2>\n<p>Bury our code, it is not beautiful.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ruby\">ruby</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/digitalocean\">digitalocean</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://192.241.236.91/\" rel=\"nofollow\" target=\"_blank\" title=\"http://192.241.236.91/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>192.241.236.91</span>\n</a></li>\n<li><a href=\"http://192.241.236.91/render?job=BYPLESCR\" rel=\"nofollow\" target=\"_blank\" title=\"http://192.241.236.91/render?job=BYPLESCR\">\n<i class=\"ss-icon ss-link\"></i>\n<span>192.241.236.91</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I helped with the algotrithm and troubleshooting", "", "", ""]], ["nity", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We <strong>LOVE</strong> playing Cards Against Humanity, but carrying around the big black box is cumbersome.</p>\n<h2>What it does</h2>\n<p>Allows anyone to either create or join a public or private game with a limit cap of 7</p>\n<h2>How we built it</h2>\n<p>The game server and logic were written in es6 javascript, and powered by nodejs, express and socket.io. The client-side architecture was written with jade and stylus for html and css preprocessing respectively and our views were written with ReactJS.</p>\n<h2>Challenges we ran into</h2>\n<p>Most of our team consisted of first time web app developers, so the process of ramping up took longer than expected. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We got a simple MVP working! 95% of our UI was completed (minus styling and animations) and we were able to successfully create a simple game server using socket.io that allows users to create and join games.</p>\n<h2>What we learned</h2>\n<p>Teamwork makes the dream work</p>\n<h2>What's next for nity</h2>\n<p>A nice facelift. We also want to package the app as a cross-platform package using <a href=\"https://github.com/atom/electron\" rel=\"nofollow\">electron</a></p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/react\">react</a></span></li><li><span class=\"cp-tag\">es6</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/socket-io\">socket.io</a></span></li><li><span class=\"cp-tag\">alt</span></li><li><span class=\"cp-tag\">alt-router</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/stylus\">stylus</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jade\">jade</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://bitbucket.org/Shadeslayer345/nity\" rel=\"nofollow\" target=\"_blank\" title=\"https://bitbucket.org/Shadeslayer345/nity\">\n<i class=\"ss-icon ss-link\"></i>\n<span>bitbucket.org</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Worked across the stack, setup skeleton and pitched in where teammates got stuck.", "I worked on the front-end design/UI for our Nity game app", ""]], ["Bushy Tailed Terror", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/0vOuInaCowc?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Bushy Tailed Terror \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/808/datas/gallery.jpg\"/>\n<p>\n<i>The Bushy Tailed Terror Himself</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>As we are a team of mostly web developers, we thought it would be fun and interesting to get out of our comfort zones, and see how much we could accomplish in just 24 hours in a framework we are not too familiar with. So we decided to make a fun little retro styled game, following the adventure of a trigger happy squirrel with a bazooka.</p>\n<h2>What it does</h2>\n<p>Simply opens up a game for you to play Bushy Tailed Terror</p>\n<h2>How we built it</h2>\n<p>We used Unity, <a href=\"https://unity3d.com/\" rel=\"nofollow\">https://unity3d.com/</a>, for all of the Code and Project Implementation. And we also used Piskel, <a href=\"http://www.piskelapp.com/\" rel=\"nofollow\">http://www.piskelapp.com/</a>, for our pixel art, Bfxr, <a href=\"http://www.bfxr.net/\" rel=\"nofollow\">http://www.bfxr.net/</a>, for our sound effects, Tiled, <a href=\"http://www.mapeditor.org/\" rel=\"nofollow\">http://www.mapeditor.org/</a>, for our map generation, and lastly some Creative Commons music from <a href=\"http://ozzed.net/\" rel=\"nofollow\">http://ozzed.net/</a> for our main background song.</p>\n<h2>Challenges we ran into</h2>\n<p>Unity is beautiful in the way it makes cross platform development in both 2D and 3D accessible and easy to do. However, this leads to alot of questions and misunderstandings. So, our challenges involved mostly in the peculiarities of Unity.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We made a fun retro platformer in only 24 hours! What else could you ask for?</p>\n<h2>What we learned</h2>\n<p>Unity has this thing called edge colliders, that makes adding boundaries to a map extremely easy. And also, piskel, allows you to move just sections of the image, for easy tile set creation!</p>\n<h2>What's next for Bushy Tailed Terror</h2>\n<p>Hopefully some further development, multiple levels, and possibly multiplayer if the game is well received!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/julianpoy/HackPoly2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/julianpoy/HackPoly2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Did most of the functional programming as well as project Layout", "Created all of the art work and movements/animations of characters and background. ", ""]], ["Clock 'em Block 'em", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>BattleBlock Theater, Mario Maker, \"Let's Play\" ragers</p>\n<h2>What it does</h2>\n<p>Uses EA's API to immerse the gamer into the game with the ability to hot-swap players in and out via browser</p>\n<h2>How we built it</h2>\n<p>We used EA's API to send messages to the Unity Client.<br/>\nFor the power-ups we used a combination of saving the JSONObjects from the servers and re-playing them and\nsending \"disable\" messages to the handheld client to temporarily block feedback.\nWe added and listeners when we were expecting player feedback and removed them when the handheld clients were disabled.\nWe added a second field for the player's ID so that players can go to one single URL and sign in.</p>\n<h2>Challenges we ran into</h2>\n<p>our front-end development and node.js game was weak</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>It works, probably</p>\n<h2>What's next for hackpoly_game</h2>\n<p>Adding Assets to make the looks more polished\nAdjusting the handheld controller to be more fluid.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag\">batchfile</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/jldempsey9/hackpoly_game\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/jldempsey9/hackpoly_game\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Google reCAPTCHA 'Breaker' - Powered by Clarifai", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Google reCAPTCHA 'Breaker' - Powered by Clarifai \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/345/060/datas/gallery.jpg\"/>\n<p>\n<i>Should work on all sites using reCAPTCHA now</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Google reCAPTCHA 'Breaker' - Powered by Clarifai \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/671/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Google reCAPTCHA 'Breaker' - Powered by Clarifai \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/670/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Google not so recently started replacing their reCAPTCHA system with pictures instead of text. Sometimes the images are harder to read than the old text based system, so why not use image recognition to 'bypass' it?</p>\n<h2>What it does</h2>\n<p>It processes the images in Google' reCAPTCHA and attempts to programmatically click the right ones.</p>\n<h2>How I built it</h2>\n<p>C# code captures the screen and does initial image processing. The data is passed through to a python script that passes the data through to Clarifai. The python script also does the programmatic clicking based on Clarifai's return value(s).</p>\n<h2>Challenges I ran into</h2>\n<p>Python parsing</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>It actually works</p>\n<h2>What I learned</h2>\n<p>Clarifai is very accurate</p>\n<h2>What's next for Google reCAPTCHA 'Breaker' - Powered by Clarifai</h2>\n<p>Implementation of OCR API to read the prompt for full automation.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li></ul>\n</div>\n</div>", ["", "", "", ""]], ["omnipic", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"omnipic \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/691/datas/gallery.jpg\"/>\n<p>\n<i>Front Page</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"omnipic \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/849/datas/gallery.jpg\"/>\n<p>\n<i>Take Pictures</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"omnipic \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/853/datas/gallery.jpg\"/>\n<p>\n<i>Overlay them with friends, add cool background and glitchy effects.</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>OmniPic</h2>\n<p>The process works by having each user take a photo using a similar color background. Each user can then choose the layer they want their photo to be on, and by clicking the \"OMNIPIC IT\" button, omnipic will flatten the photos over each other in the specified order.</p>\n<h2>Making OmniPic</h2>\n<p>Our chroma keying system operates by taking a snapshot of your webcam and using the background as a chroma key for other photos to be layered behind it. A green screen or other solid color background works best. No background may be used, to varying results. Using the arbitrary background color, omnipic compares color values of all other pixels in the image to see if they match the chroma key, and makes them transparent if they do. We are then left with a cutout image of the user and no background, behind which other users can be rendered behind the cutout as a new background.</p>\n<p>The cool part about this project is that it's mostly done using pure javascript served to your browser, no APIs or plugins were used for this hack! This is thanks to the new RTC (Real Time Communications) standards being implemented by the IEEE in order to define a new standard of webcam/audio communication after years of mismatches between Adobe Flash and various other plugins.</p>\n<h2>The Future</h2>\n<p>In the future we would like to make omnipic a full fledged photobooth suite on the web, including color correction tools, airbrushing, and photo add-ons such as stickers and writable text to make photos taken on omnipic truly personal. We would also like to include a live video preview of the background for each user so that positioning is much more intuitive.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li></ul>\n</div>\n</div>", ["Front End", "Concept, Camera API backend, Chroma Keying"]], ["U-Park", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"U-Park \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/604/datas/gallery.jpg\"/>\n<p>\n<i>User menu options</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"U-Park \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/605/datas/gallery.jpg\"/>\n<p>\n<i>Main map</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"U-Park \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/614/datas/gallery.jpg\"/>\n<p>\n<i>Business Model</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Traffic in densely populated cities is a growing problem and obvious frustration and there aren't any great solutions. Driving around cities like Los Angeles, we noticed that there were many unused parking spots. What if homeowners, while out and about for the day, could rent out their unused parking space, whether its their drive way or garage, to make extra income? Then another person, who usually spends a lot of time and money looking for a parking spot, could use that space. U-Park was born.</p>\n<h2>What it does</h2>\n<p>Where AirBnb allows users to rent peoples homes, U-Park allows users to rent people's parking spaces. A user can search a location on the map, and find parking spaces around that area. They can then rent the spot hourly, weekly, or for an extended period. A user will be able to register their space within the app. </p>\n<h2>How we built it</h2>\n<p>Using Android Studio and Java to create the framework mobile application</p>\n<h2>Challenges we ran into</h2>\n<p>Using esri's API in which we did not have much experience in. Implementing esri's API effectively.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Figuring out how some of esri's API works as well what resources were available to help make it happen. Also figuring out workarounds for some API features (internet was unreliable at some moments for us). Overall, having a working application using Esri's API in the time allocated to us.</p>\n<h2>What we learned</h2>\n<p>The value of APIs and how much more can be done using them effectively. </p>\n<h2>What's next for U-Park</h2>\n<p>We plan on adding additional functionality to U-Park. </p>\n<ul>\n<li>Additional pages for the user profile and payment information. </li>\n<li>Filters so users can search by city, state, zip, address.</li>\n<li>5 star rating system similar to Uber.</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/esri\">esri</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li></ul>\n</div>\n</div>", ["", "", ""]], ["Laser-Can-On", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Laser-Can-On \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/601/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Wanted to do camera pitch/yaw integration with ioioboard, switch to raspberry pi and leap motion sensor. Can be used for image tracking if we replace the leap motion sensor with a camera</p>\n<h2>What it does</h2>\n<p>Takes hand position above leap motion sensor and calculates pitch and yaw of right hand and correlates the data obtained to servo radian position. </p>\n<h2>How I built it</h2>\n<p>Soda can and paper clip structure for support, laser pointer powered by GPIO pins on the raspberry pi which is enabled via Python script, communication over wifi using PutNub API to send data from computer with leap motion sensor to the raspberry pi. Motorshield allows for more servo capabilities.</p>\n<h2>Challenges I ran into</h2>\n<p>Intel Edison board did not allow for OS installation, IOIO board was difficult to develop with due to outdated API/Repositories, did not have wifi usb dongle for raspberry pi, attempted bridge connection amongst other methods of internet to raspberry pi connections, no arduino bluetooth sensor</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Innovative approach to servo mounting and hardware hacking for powersupply, motoshield connection, and learning how API usage works</p>\n<h2>What I learned</h2>\n<p>How to use APIs, Python, some Java, transistor connections to power high current devices, python debugging.</p>\n<h2>What's next for Laser-Can-On</h2>\n<p>OpenCV or a different computer vision application to do object tracking, adding projectile and possibly moving base with motor controls for WASD movement planned, but not achieved in the 24 hour window. More to come!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/leap-motion\">leap-motion</a></span></li><li><span class=\"cp-tag\">i2c-motor-shield</span></li><li><span class=\"cp-tag\">servos</span></li></ul>\n</div>\n</div>", ["Made the frame and secured the laser pointer. ", "Worked on servo integration, GPIO pins for raspberry pi using python, and soldering.", "", ""]], ["ShareRide", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We are inspired by the posts on the facebook that there are always some friends who don\u2019t have cars, and they need a ride to somewhere else.</p>\n<h2>What it does</h2>\n<p>Our application can match a person who is driving to somewhere and another person who is seeking for a ride.</p>\n<h2>How we built it</h2>\n<p>We used Esri ARCGIS Routing API in Java.</p>\n<h2>Challenges we ran into</h2>\n<p>the most difficult part is to understand how each part of the API works and to leverage the API to build the application.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>The matching is very accurate. The user will have a list of candidates to choose.</p>\n<h2>What we learned</h2>\n<p>How to read a whole new API document and its sample code.</p>\n<h2>What's next for ShareRide</h2>\n<p>Return the list of matching to the user. Recognize different user. Implement a mobile client.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/cjhjames89/ShareRide\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/cjhjames89/ShareRide\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["EyeMap", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"EyeMap \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/715/datas/gallery.jpg\"/>\n<p>\n<i>Slide 1</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"EyeMap \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/725/datas/gallery.jpg\"/>\n<p>\n<i>Slide 2</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"EyeMap \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/752/datas/gallery.jpg\"/>\n<p>\n<i>Slide 3</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"EyeMap \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/723/datas/gallery.jpg\"/>\n<p>\n<i>Slide 4</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"EyeMap \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/720/datas/gallery.jpg\"/>\n<p>\n<i>Slide 5</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"EyeMap \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/721/datas/gallery.jpg\"/>\n<p>\n<i>Slide 6</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"EyeMap \u2013 screenshot 7\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/717/datas/gallery.jpg\"/>\n<p>\n<i>Slide 7</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"EyeMap \u2013 screenshot 8\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/741/datas/gallery.jpg\"/>\n<p>\n<i>Slide 8</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"EyeMap \u2013 screenshot 9\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/722/datas/gallery.jpg\"/>\n<p>\n<i>Slide 9</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"EyeMap \u2013 screenshot 10\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/719/datas/gallery.jpg\"/>\n<p>\n<i>Slide 10</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"EyeMap \u2013 screenshot 11\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/706/datas/gallery.jpg\"/>\n<p>\n<i>Eye Tracking</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"EyeMap \u2013 screenshot 12\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/144/datas/gallery.jpg\"/>\n<p>\n<i>Gaze Map</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"EyeMap \u2013 screenshot 13\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/344/162/datas/gallery.jpg\"/>\n<p>\n<i>Eye Tracking</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>HackPoly-2016</h1>\n<p>An eye tracking program that was implemented in c++ and OpenCV.\nThis program was hard to work on as the theory involves a lot of matrices operations and image processing.\nQt interface is currently in progress.\nThanks to trishume and their webcam gazetracker which already had an existing pupil tracking implementation. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c\">c</a></span></li><li><span class=\"cp-tag\">cmake</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/shell\">shell</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/opencv\">opencv</a></span></li><li><span class=\"cp-tag\">linear-algebra</span></li><li><span class=\"cp-tag\">neural-networks</span></li><li><span class=\"cp-tag\">haar-cascade</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/qt\">qt</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/tacalvin/EyeMap\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/tacalvin/EyeMap\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Despite github saying I did everything... I didn't", "I improved an algorithm on eye detection by bringing it to OpenCV2 and then implemented the new and improved algorithm to find and use eye pupil and corners in order to find where the user is looking. The y coordinates depended on an eyelid algorithm that is a work in progress. Made the ability to generate odd looking gaze map which shows where the user looked.", "Worked on the code and gui design"]]]