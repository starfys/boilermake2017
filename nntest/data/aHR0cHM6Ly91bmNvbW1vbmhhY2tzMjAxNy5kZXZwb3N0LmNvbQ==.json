[["Emotion Assistant", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Over the summer, a few of our teammates learned about the Microsoft Emotion API, which detects emotions. <a href=\"https://www.youtube.com/watch?v=R2mC-NUAmMk\" rel=\"nofollow\">This YouTube video</a> provides the inspiration for our project. </p>\n<p>Put simply, we wanted to make a more affordable version of the glasses demonstrated in the video.</p>\n<h2>What it does</h2>\n<p>Emotion Assistant allows the blind to read facial expressions of people around them in real-time. Using a computer, users can take photos and get a read-out of expressions of others.</p>\n<h2>Challenges we ran into</h2>\n<p>Our initial idea involved a GoPro camera, which could then be mounted to a headband to gather facial images. This would have provided an intuitive experience: rather than moving a webcam to read people's emotions, one would simply have to move their head. </p>\n<p>The problem with the GoPro camera was that in order to wirelessly capture and process the image, we had to automatically transition between multiple wifi networks. Though trying workarounds with hotspots, network bridges, and Intel Edisons, we could not find a reliable solution.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We're proud to have successfully utilized the Cognitive Services API. It was an API we had all been interested in using since we first heard about it. Uncommon Hacks provided an excellent opportunity to try it out.</p>\n<h2>What we learned</h2>\n<p>We learned about the great difficulties of scripting hardware, namely cameras. We also learned how to use a couple of new Python and Ubuntu packages: <code>fswebcam</code> for scripting image capture, and <code>pprint</code> for JSON processing. </p>\n<p>We also learned a great deal of useless information about the annals of the GoPro.</p>\n<h2>What's next for Emotion Assistant</h2>\n<ul>\n<li><p>Cross-platform capability. We'd like to enable usage on OS X and Windows--we simply need to find libraries that can control web cameras on these OSes.</p></li>\n<li><p>Extended development of headset. Using a Raspberry Pi, we'd love to consolidate computational tasks to be self-contained to just the headset. By doing this, a laptop will not have to be around.</p></li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">microsoft-cognitive-services-api</span></li><li><span class=\"cp-tag\">pyttsx</span></li></ul>\n</div>\n</div>", ["", "", "", ""]], ["TableTalk", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>TableTalk</h1>\n<p><a href=\"https://penandlim.github.io/TableTalk\" rel=\"nofollow\">Click here to Demo (Use Chrome on iOS for best results)</a></p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/gps\">gps</a></span></li><li><span class=\"cp-tag\">ssl</span></li><li><span class=\"cp-tag\">mobile</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/penandlim/TableTalk\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/penandlim/TableTalk\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Worked on the frontend and the design of TableTalk. Eliminated dependencies of third party .js files to prioritize mobile performance by only using vanilla html5 geolocation API. The frontend js uses ajax requests to fetch necessary data from Larry's API.", "I built the API that TableTalk stores and gets its message. It uses node.js and the express router to take RESTful requests and return/store values in a mongo database", ""]], ["vReader", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"vReader \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/459/035/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We had the idea of creating an immersive experience for reading books. Readership is continually decreasing among our demographic each year. The problem we posed to ourselves is, how can we bring magic back to reading?</p>\n<h2>What it does</h2>\n<p>vReader is a virtual reality audiobook player. Using Unreal Engine 4, the app renders a 3D environment reflecting the story being read. Parts of the scenery will animate throughout the narration at key events in the plot.</p>\n<h2>How we built it</h2>\n<p>This demo scene was built from the ground up using Unreal Engine 4.14.2, tailored to the Oculus Rift virtual reality headset and the Oculus Touch Controllers. The excerpt we chose for our demonstration was a scene from Harry Potter and the Philosopher's stone, wherein the reader gets to experience Charms Class and the famous levitation scene. Sculpting and modeling the environment came from a combination of default Unreal Engine assets and Autodesk Maya. The animations for cued and scripted events were key-framed manually in the engine, as were the particle effects.</p>\n<h2>Challenges we ran into</h2>\n<p>Virtual reality integration in Unreal Engine 4.14 is brand new, and the Oculus touch controllers are even newer. We had little to no documentation to help us program our player controller and level blueprint. We had to improvise scripting methods, and hit several deads ends at times when what we wanted to have happen on screen was impossible with current technology.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We created something we feel could be a viable consumer product, and that we would be happy to buy and use. With a partnership from a publisher and the streamlined level design, we have the chance to perfect the shared reading experience. Improvements in mobile VR would make this prospect even more possible; children will be able to learn in a new way that's fun and engaging. Adults will be able to fall in love with reading again, and experience the stories they love as if for the first time. We had a vision and, with the tools and time we had to work with, we think we proved our point.</p>\n<h2>What we learned</h2>\n<p>We learned event scripting, animating static meshes, audio cues, motion controller input, and dynamic lighting in Unreal Engine.  We also learned about important design standards for making a virtual reality experience. vReader was a culmination of all the skills we've gained in our careers as computer scientists, combined with a new venture into unexplored territory.</p>\n<h2>What's next for vReader</h2>\n<p>If possible, we'd like to take vReader to a publisher or audiobooks distributor like Audible/Amazon and present this as a product that can feasibly be brought to market. Having the licenses to a great bevy of audiobooks with professionally done narrations already available (as well as having the business capital needed for a commitment like this), it's reasonable that this is something Amazon could distribute through a mobile Virtual Reality platform like the Google Daydream headset or the Samsung Gear VR. The experiences are self-contained scenes and settings -- no characters or anything besides the scene is depicted. This helps both with the suspension of disbelief, and also saves development time and funding that it would otherwise take to bring those to life for every scene in a book.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unreal-engine\">unreal-engine</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/oculus\">oculus</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/autodesk\">autodesk</a></span></li></ul>\n</div>\n</div>", ["I handled the design in Unreal Engine. I built the level and dynamic lighting, and programmed the blueprint for our first person character. I also wrote a level blueprint to sync audio cues with our scripted animations.\nCJ handled audio design, animations, and also made a couple of our assets in Autodesk.", ""]], ["GO GO Piano", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"GO GO Piano \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/458/997/datas/gallery.jpg\"/>\n<p>\n<i>Piano with Key Bounds</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"GO GO Piano \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/458/998/datas/gallery.jpg\"/>\n<p>\n<i>Example Sheet Music Output</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>go-go-piano</h1>\n<p>piano video image processing to convert to sheet music</p>\n<h2>What is it?</h2>\n<p>go-go-piano is designed to take videos of piano playing, determine what keys are being pressed using image processing, and then convert the pressed key data into a highly adaptable MIDI file which can easily be converted to sheet music and played back.</p>\n<h2>What does it use?</h2>\n<ul>\n<li>The raw frames of the videos are brought into Matlab, where the program is able to process and output to a CSV File</li>\n<li>CSV Data is imported into a python program which will determine what keys relate to what notes and convert the data into a MIDI file</li>\n<li>The MIDI file can then be imported into Musescore and played or LilyPond and converted into sheet music</li>\n</ul>\n<h2>How does it work?</h2>\n<ul>\n<li>An initial frame of the piano without anything blocking the keys (hands) is determine the bounds of the piano and each black and white key</li>\n<li>Data sets of hands on a piano are used to determine where the hands in the video are and the hands are masked out</li>\n<li>Each frame is compared to the first frame to watch for lighting differences on keys.  If it passes the threshold, the key is recorded as pressed</li>\n<li>The Middle C and Middle C# Key are determined based on location on the piano, and their indexes are recorded.</li>\n<li>Data is outputted into a CSV file, with the first two lines indicating the index of Middle C and Middle C#.  Additional lines are binary arrays of white and black keys for each frame, with a 1 indicating a key being pressed</li>\n<li>CSV data is imported into a Python program, where the program determines the note of the bottom-most key</li>\n<li>Keys are assigned MIDI note values</li>\n<li>Each frame is checked to find key presses and durations, and frames are converted to 1/16, 1/8, 1/4, 1/2, or whole notes.</li>\n<li>Notes are outputted into a MIDI file</li>\n</ul>\n<h2>Difficulties With the Project</h2>\n<p>Difficulties included determining the best method to filter out false positive and false negative key presses, not having enough data to reliably model hands, and lining up the MIDI score evenly</p>\n<h2>Future ideas</h2>\n<p>This technology could be further improved to analyze what fingers press what keys, and determine how good / bad hand posture is.  In addition, processing time could be decreased by only checking keys that are near the player's hands, rather than the entire keyboard every frame.</p>\n<h2>References</h2>\n<p>Algorithm was based off of the following research paper\n<a href=\"https://stacks.stanford.edu/file/druid:bf950qp8995/Suteparuk.pdf\" rel=\"nofollow\">https://stacks.stanford.edu/file/druid:bf950qp8995/Suteparuk.pdf</a></p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/matlab\">matlab</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">midiutil</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/mroseman95/go-go-piano\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/mroseman95/go-go-piano\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I made the Python program that takes the CSV data for white and black keys and convert it to a MIDI file.", ""]], ["math.floor(it)", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"math.floor(it) \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/458/991/datas/gallery.jpg\"/>\n<p>\n<i>Demo Input</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"math.floor(it) \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/458/993/datas/gallery.jpg\"/>\n<p>\n<i>Demo Result Part A</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"math.floor(it) \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/458/994/datas/gallery.jpg\"/>\n<p>\n<i>Demo Result Part B</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>math.floor(it)</h1>\n<h2>by Nick Crawford, Claire Dolin, Farai Gandiya, and Isha Mehrotra</h2>\n<h2>Inspiration</h2>\n<p>As a group of four enterprising college students who (mostly) met over the weekend, we all acknowledged the dread that comes with the daily commute. With that in mind, we asked ourselves, \"how much would it cost to miss every single red light and drive 20mph over the speed limit?\" While the obvious answer is \"a lot\", we decided to quantify it.</p>\n<h2>What It Does</h2>\n<p>Math.floor(it) is a web page that explores the benefits and drawbacks of speeding and missing red lights in the city of Chicago. Taking in two addresses, it will point out which cameras you passed, their respective fines and the time savings as a result of reckless driving. </p>\n<h2>How We Built It</h2>\n<p>Data on the location of the speed cameras and red light cameras was sourced from <a href=\"https://data.cityofchicago.org/\" rel=\"nofollow\">The City of Chicago's Data Portal</a> which was then exported as a CSV file. For the front end design, we made use of SaSS, jQuery, Google Fonts as well as SVG's and animations. On the back end, we made use of the Google Map API to display the map, provide search functionality, plot the waypoint with camera's that lie along the waypoint's edge as well as aid in calculating fines, and time savings given our reckless driving.</p>\n<p>Throughout the project, we encountered few problems. One problem was understanding the aynchronous nature of JavaScript which gave us problems when importing the JSON data. The Google Maps API also had a few issues with the <code>isLocationOnEdge()</code> function which had a few issues detecting if cameras where along the waypoint in addition to the friction that comes with understanding a new API, such as the need to have the right authorization to use an API token in various places (live site vs. localhost server).</p>\n<h2>Accomplishments</h2>\n<p>The greatest accomplishment in making Math.floor(it) would be the way we worked well together and our ability to learn quickly and be flexible. Whether it was understanding what each of us where doing, working with and around the Google Maps API in addition to throwing in various quirks, we are proud of the work we have done given our time constraints and the rather unfamiliar territory.</p>\n<h2>What we learned</h2>\n<p>During this hackathon, we learned a great deal about working with asynchronicity in JavaScript, sourcing and manipulating data, merging various unrelated branches of development and the intricacies of the Google Maps API. In regards to the Google Maps API, not only in terms of requesting certain information, but also in building on top of what the API gave us and filling in the gaps where it fell short (calculating the time of a certain waypoint given our lunatic driving for instance). Also, speeding's expensive yo. </p>\n<h2>What's next for math.floor(it)</h2>\n<p>While we got an MVP running, the first thing we would like to do is clean up the code...a lot since it's in one big <code>&lt;script&gt;</code> block as of now featuring lots of redundant code and tight coupling. We also plan on investigating the erratic behaviour of <code>isLocationOnEdge()</code> and might use <code>containsLocation()</code> which needs a polygon rather than a polyline. We might look into supporting other major cities, variable routing to pick which cameras to hit or miss and possibly reworking the user interface.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-maps\">google-maps</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sass\">sass</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/fgandiya/uncommonhacks2017\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/fgandiya/uncommonhacks2017\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the frontend developing and cleaning up the layout using with HTML, CSS, and Javascript.  I also worked in Adobe Illustrator to create graphics.", "I worked on parsing the found data in order to place the cameras onto the map in addition to help integrate the various code branches.", "I helped design the app and user interface. I also added some fun CSS Animations.", "I worked with the Google API to plot routes and compare them to existing traffic cameras."]], ["Zen.py", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/J4YH_Z4jHFw?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Straight from God.</p>\n<h2>What it does</h2>\n<p>Creates feelings of zen by drawing designs in sand </p>\n<h2>How we built it</h2>\n<p>Blood, sweat, tears, batteries, hot glue, arduino</p>\n<h2>Challenges we ran into</h2>\n<p>None of us are hardware engineers</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>It draws pictures that resemble real stuff</p>\n<h2>What we learned</h2>\n<p>Always bring lots of batteries </p>\n<h2>What's next for Zen.py</h2>\n<p>Go international</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://noticemezenpy.com\" rel=\"nofollow\" target=\"_blank\" title=\"http://noticemezenpy.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>noticemezenpy.com</span>\n</a></li>\n<li><a href=\"http://sheltered-tundra-18217.herokuapp.com/draw.html\" rel=\"nofollow\" target=\"_blank\" title=\"http://sheltered-tundra-18217.herokuapp.com/draw.html\">\n<i class=\"ss-icon ss-link\"></i>\n<span>sheltered-tundra-18217.herokuapp.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Designed the hardware and Arduino software.", "I built the drawing interface and back-end coordinate transfer code, and assisted in the hardware", "", ""]], ["Dorjak", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Dorjak \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/459/144/datas/gallery.jpg\"/>\n<p>\n<i>It is Dorjak time!</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Dorjak \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/459/145/datas/gallery.jpg\"/>\n<p>\n<i>In the heat of the moment!</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Dorjak, a Game for Everyone!</h2>\n<p>Welcome to Dorjak, a game about defending the sun from conveniently targeted asteroids! It is your mission to save the solar system, as just one of these packs enough punch to blow up the sun!</p>\n<h2>Goal</h2>\n<p>Simply put, you are not going to defend the sun forever! Instead, just try your best to destroy as many asteroids as possible by blocking them with the planets. Don't worry, the inhabitants of these planets won't mind! Scoring is simple, as every asteroid destroyed adds one to your score. You won't see your score until you lose, as it only appear once the sun blows up. Go solo, or split the orbits with a friend for some fast-paced co-op action!</p>\n<h2>Controls</h2>\n<p>P1 = Player One, P2 = Player Two, - = Key binding for action</p>\n<p>P1-W, P2-I: Adjust selected orbit outwards by one ring\nP1-S, P2-K: Adjust selected orbit inwards by one ring\nP1-A, P2-J: Accelerate orbit counter-clockwise\nP1-D, P2-L: Accelerate orbit clockwise</p>\n<h2>What We Used</h2>\n<p>This was our first attempt at a JavaScript program, none of us had ever used it before! This of course came with challenges, but a lot of the legwork physics-wise was handled by a great API name Box2D. This API allowed us to create shapes with various characteristics with ease, reducing the work load and allowing us to focus on the fun part.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/box2d\">box2d</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/jmbuck4/Uncommon-Hacks-2017\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/jmbuck4/Uncommon-Hacks-2017\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Telerelevations  ", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Telerelevations   \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/459/135/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>\u263a Dipsy loves to help people and make them happy. This time, he wants to tell you something about your future.</p>\n<h2>What it does</h2>\n<p>\u263a Dipsy doesn't work until it's getting paid by the user(by putting coins in the coin acceptor). </p>\n<p>\u263a Dipsy's eye can take picture of the users face to run image analysis through Microsoft's Cognitive Services Face API. Using the API, face rectangles are being detected and the results are used to run a mood analysis. Base on the mood analysis and Dipsy's mysterious power, he can make predictions about random aspects of a person's life. </p>\n<h2>How we built it</h2>\n<p>\u263a Dipsy is created with recyclable materials. It has a model type of body, two beautiful heads, and is wearing a stylish piece of clothing. It takes two inputs, one is through his eye that has a web cam built inside and the other is a coin acceptor. It expresses himself through two ways:  </p>\n<p>The vaping device attached to Dipsy's head consists of an e-cigarette, an adapter and a pump. The pump and e-cigarette are activated through separate relay circuits that are switched by signals from the Arduino.\nThe Other eye of Dipsy is a LED that will blink when user pays him money.</p>\n<h2>Challenges we ran into</h2>\n<p>problems with installation of openCV</p>\n<p>Arduino inputs and outputs</p>\n<p>Time management</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>integration of microsoft's API</p>\n<p>Dipsy's face</p>\n<p>Running into problems with raspberry pi but solved it by having a backup plan of using computer to talk to the arduino uno directly</p>\n<h2>What we learned</h2>\n<p>Time management</p>\n<h2>What's next for Telerelevations</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/opencv\">opencv</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/hardware\">hardware</a></span></li><li><span class=\"cp-tag\">coins</span></li><li><span class=\"cp-tag\">microsoft-cognitive-services</span></li></ul>\n</div>\n</div>", ["", "", "", ""]], ["Overly Attached Alexa", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/yInRh6moM8o?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Overly Attached Alexa \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/459/039/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>This video:</p>\n<p><a href=\"http://www.youtube.com/watch?v=8dmSE4vKL7k\" rel=\"nofollow\"><img alt='\"The Problem with Brogrammers\"' data-canonical-url=\"http://img.youtube.com/vi/8dmSE4vKL7k/0.jpg\" src=\"https://res.cloudinary.com/devpost/image/fetch/s--8PeFon3w--/http://img.youtube.com/vi/8dmSE4vKL7k/0.jpg\"/></a></p>\n<h2>What it does</h2>\n<p>It's either your mom or your lover. Or both. We don't judge.</p>\n<h2>How we built it</h2>\n<p>Alexa Custom Skill and Blockcypher API for the Bitcoin transaction.</p>\n<h2>Challenges we ran into</h2>\n<p>Computer Science was a Mistake.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We finished it.</p>\n<h2>What we learned</h2>\n<p>Blockchain API, Alexa Custom Skill</p>\n<h2>What's next for Overly Attached Alexa</h2>\n<p>Dad Jokes Alexa?</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-alexa\">amazon-alexa</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/blockchain\">blockchain</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/phqchau/mom-alexa/\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/phqchau/mom-alexa/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I helped with Blockcypher API and its integration in AWS Lambda.", "I helped build 2 custom skills for Alexa and all the intents/responses using Node.js (and eventually Python.) I also helped with deploying the codes on AWS using Lambda function", "I used blockcypher to write a couple of Python scripts to create blockchain wallets and transfer bitcoins from Alexa to a specified wallet.", ""]], ["Morse Tilt", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/dQw4w9WgXcQ?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Morse Tilt \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/458/977/datas/gallery.jpg\"/>\n<p>\n<i>Uh oh, the burglar is using Morse Tilt himself!</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Morse Tilt \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/458/978/datas/gallery.jpg\"/>\n<p>\n<i>Looks like he played himself</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Morse Tilt \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/458/979/datas/gallery.jpg\"/>\n<p>\n<i>Obligatory Vaporwave</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>An alarming amount of calls to 911 turn out to be accidental, around 30% in some areas of the United States. This is a major concern as time spent dealing with accidental calls is time wasted, when there could be others who are really in danger and need to speak to a 911 operator. That's where Morse Tilt comes in.</p>\n<h2>What it does</h2>\n<p>Morse Tilt activates automatically when 911 is called and runs in the background, where it sends the user's phone number and phone orientation data to a publicly viewable website. A 911 operator who receives a call that has no actionable audio could view the webpage and see whether the caller is actually in danger or not. This is accomplished through the use of Morse code. By tilting their device to either landscape or portrait mode, the caller can send 0s and 1s to the webpage for the operator to view. This helps to identify accidental calls as those would send a jumble of meaningless data, whereas someone who was in a situation where they had to remain quiet could safely send a message.</p>\n<h2>How we built it</h2>\n<p>Morse Tilt can be broken down into three parts. There is the Android app, written in Java, developed using Android studio, and tested on a One Plus 3T. Then there is the Node.js server, which accepts POST requests from the Android app. The server also displays the webpage with the list of callers and their messages, and updates in real time with Socket.io. Finally, there is the NoSQL database stored on Firebase.</p>\n<h2>Challenges we ran into</h2>\n<p>Our very first challenge occurred around 5:35 AM the morning of the hackathon when one of our members missed his flight, and didn't end up arriving until 6:30 PM. During that time, we struggled to figure out a way to open our app when a number was dialed, as all resources online pointed to the same answer that just didn't work for us. Then we all ended up sleeping for 5 hours, losing a lot of time and waking up really groggy in the wee hours of the morning to begin work.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Finishing the project at all, considering all the issues and circumstances we ran into, is a major accomplishment in itself. However, we are equally as proud, if not more so, for treating our taste buds to the wonder that is Giordano's Pizzeria.</p>\n<h2>What we learned</h2>\n<p>On the Android side, we learned a lot in terms of working the with gyroscope and orientation sensor, which was the crux of our app. We also learned about Android services and broadcast receivers, as well as how to use Volley, a HTTP request library. On the server side, we learned how to accept HTTP requests and extra the important information from them.</p>\n<h2>What's next for Morse Tilt</h2>\n<p>Fine tune the Android app to make it an easier experience. Perhaps add a delay in between polling for orientation so it doesn't repeat values too often, and also to provide audible feedback to the user through the earpiece.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://WasThisAButtDial.org/\" rel=\"nofollow\" target=\"_blank\" title=\"http://WasThisAButtDial.org/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>WasThisAButtDial.org</span>\n</a></li>\n<li><a href=\"https://github.com/dwangus/MorseTilt\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/dwangus/MorseTilt\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://tiltapp.herokuapp.com/\" rel=\"nofollow\" target=\"_blank\" title=\"https://tiltapp.herokuapp.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>tiltapp.herokuapp.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Worked on the Node.js server and client side webpage.", "Worked on the android application primarily developing a Orientation tracking service utilizing various sensors in the phone.", "Worked on the Android app - used Volley to communicate changes in orientation to the server. ", "Worked on the primary idea/design of the application as well as the triggering of the application via dialing a phone number"]], ["HelpfulTips", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"HelpfulTips \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/459/114/datas/gallery.jpg\"/>\n<p>\n<i>Music tips</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"HelpfulTips \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/459/133/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Growing up using Microsoft Word</p>\n<h2>What it does</h2>\n<p>It displays Clippy over top of apps and offers helpful tips with actions that will improve the users experience with the app</p>\n<h2>How I built it</h2>\n<p>I used the Android SDK, example projects, and SO</p>\n<h2>Challenges I ran into</h2>\n<p>Android no longer allows you to see the current running app and only a list of the most recent</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>It works as intended</p>\n<h2>What I learned</h2>\n<p>How to overlay views over apps outside of my app</p>\n<h2>What's next for HelpfulTips</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag\">kotlin</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/djLarrikin/UncommonHacks2017\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/djLarrikin/UncommonHacks2017\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["SNPepe500", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We were inspired by the memes and the crypto-currency economy. So we decided to merge them together.</p>\n<h2>What it does</h2>\n<p>It awards real crypto-currency (ethers) to memers with most populars meme. Audience upvote memes they like with their ethers. So the more likes on your memes, the more influential you are in the meme community.</p>\n<h2>How we built it</h2>\n<p>We built the front-end using Bootstrap and Meteor.js. We used Ethereum's decentralized platform which acted as a backend for our project.</p>\n<h2>Challenges we ran into</h2>\n<p>We faced a lot of challenges in getting accustomed to the Ethereum technology and configuring it according to our requirements.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Created meme economy</p>\n<h2>What we learned</h2>\n<p>Learnt how blockchain decentralized apps work.</p>\n<h2>What's next for Meme Market</h2>\n<p>Make it deploy ready, unleash it to the world for all the meme hungry people. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bitcoin\">bitcoin</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/meteor-js\">meteor.js</a></span></li><li><span class=\"cp-tag\">web3</span></li><li><span class=\"cp-tag\">ethereum</span></li></ul>\n</div>\n</div>", ["", "", "", ""]], ["Benana Chain", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Dev kept bothering Ben to do some block chain stuff... so Ben made one.<br/>\nAna wanted to learn machine learning so why not make an AI chess game and suffer for 24 hrs?</p>\n<h2>What it does</h2>\n<p>It uses human proof of work (in the form of a chess game) as opposed to computational proof of work like a hash.</p>\n<h2>How we built it</h2>\n<p>TO BE EXPLAINED...</p>\n<h2>Challenges we ran into</h2>\n<p>Not knowing AI.<br/>\nNot knowing machine learning.<br/>\nNot knowing how to play chess.<br/>\nHaving to wait til midnight for insomnia cookies.<br/></p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Eating insomnia cookies. Building a working distributed infrastructure.<br/></p>\n<h2>What we learned</h2>\n<p>Chess, OTP, and some distributed computing concepts<br/></p>\n<h2>What's next for Benana Chain</h2>\n<p>Benana-Business.<br/></p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">elixir</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">sunfish</span></li><li><span class=\"cp-tag\">tears</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/love\">love</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/UncommonBenAna\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/UncommonBenAna\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Aesthetic-ID", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>Aesthetic-ID</h1>\n<p>A Project Created in 24hrs to detect emotions from a photo and create an aesthetic experience for the user based of the collective emotions detected in the photo.</p>\n<h1>January 15th Build Folder</h1>\n<p>Take a look in the 1-15 folder to see the progress!</p>\n<h1>The Idea</h1>\n<p>We wanted to make a dynamic responding website that would change depending on the emotions of a user submitted photo to your website.</p>\n<p>The goal was to incorporate the aesthetic of vaporwave with calming background text, animated gifs and a relaxing nostalgic feel of Macintosh Plus with a VCR background.  Based off the overall mood in the video, this would alter the pitch/tone of the music playing, change the text floating around the screen as well as change the background color to the page.</p>\n<h1>The Result</h1>\n<p>We got further than we expected, and we're pleased with what we made in the time allotted.</p>\n<h1>What was difficult?</h1>\n<p>Accessing the API and making it cooperate with JavaScript was one of the most challenging parts of the project, which ended up delaying our further plans to improve the functionality of the website.</p>\n<p>For reasons to have the proof of concept prepared, we had to hard code in a specific image to be sent to the API, since the jQuery requests were always returning JSON formatting errors.</p>\n<h1>What are we proud of?</h1>\n<p>We are proud that we were not only able to connect with a foreign API with no experience, but that we were able to run the cognitive software over multiple faces in the photo simultaneously, which we tested with a crowd photo of up to 40 different faces.</p>\n<h1>Notes for Users/Those who want to clone the repository.</h1>\n<p>Microsoft's API resets their access keys daily at 0000hrs, so if you try to run the code we have on our back end you will more than likely receive a Bad Request (400) error, which is because the access key will need to be updated.  These keys can be activated from the Microsoft Cognitive API that you will have to register for yourself.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag\">microsoft-cognitive-emotion-api</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/TheNewPlan/Aesthetic-ID\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/TheNewPlan/Aesthetic-ID\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["TalkTrumpToMe", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://player.vimeo.com/video/199556474?byline=0&amp;portrait=0&amp;title=0#t=\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>The God Emperor himself</p>\n<h2>What it does</h2>\n<p>takes in a user's speech and Trumpify it, so that it sounds like Trump is saying what you are</p>\n<h2>How we built it</h2>\n<p>The voice conversion backend is built on the top of SPTK. Speech analysis/synthesis is done using World speech A/S library (Morise et al, 2016). A tool was written (in C) to convert GMM into differential GMM (Kobayashi et al, 2014). The dereverberation algorithm in (Lebart et al, 2001) is implemented in GNU Octave to pre-process the noisy training data. All these tools are glued together in a makefile.</p>\n<p><strong>Training Features:</strong>\n24-order mel-cepstral coefs\n5-order band aperiodicity\nStatic feature + first-order differential\nGMM: 8 mixture components, 10 iterations for EM training\nPitch transformation: mean + std log F0</p>\n<p><strong>Data:</strong>\n40 parallel sentences of total duration \u2248 2min 40s, including silence\nTrump speech taken from Republican National Convention\n(they\u2019ve got some tremendous reverberation)</p>\n<p><strong>Express</strong>\nAn express server would host a GUI to allow users to give their own speech files, and the server would process their speech using the SPTK library above and play the Trumpified speech, using the Howler.js library. Style was added throguh bootstrap and interactivity through jquery.</p>\n<h2>References</h2>\n<p>Y. Stylianou, O. Capp\u00e9, and E. Moulines. \"Continuous probabilistic transform for voice conversion.\" IEEE Transactions on Speech and Audio Processing 6, no. 2 (1998): 131-142.\nK. Kobayashi, T. Toda, G. Neubig, S. Sakti, and S. Nakamura. \"Statistical singing voice conversion with direct waveform modification based on the spectrum differential.\" In INTERSPEECH, pp. 2514-2518. 2014.\nK. Lebart, J. M. Boucher, and P. N. Denbigh. \"A new method based on spectral subtraction for speech dereverberation.\" Acta Acustica united with Acustica 87, no. 3 (2001): 359-366.\nM. Morise, F. Yokomori, and K. Ozawa: WORLD: a vocoder-based high-quality speech synthesis system for real-time applications, IEICE transactions on information and systems, vol. E99-D, no. 7, pp. 1877-1884, 2016.</p>\n<h2>Challenges we ran into</h2>\n<p>merging the ML libraries to process files from the express server</p>\n<p>Time to train the model</p>\n<p>reverberation from interviews and test recordings</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Express server able to upload files\nspeech was able to sound similar to Trump</p>\n<h2>What we learned</h2>\n<p>dereverberation, express server backend tools, and javascript, and practical experience with GMM based Voice Conversion</p>\n<h2>What's next for TalkTrumpToMe</h2>\n<p>Natural Language Processing\nTrump Speech Synthesizer</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag\">sptk</span></li><li><span class=\"cp-tag\">gnu-octave</span></li><li><span class=\"cp-tag\">howler.js</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/piordanov/TalkTrumpToMe\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/piordanov/TalkTrumpToMe\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://gist.github.com/Sleepwalking/7121bff3b5d1060cb5ee187c979daf83\" rel=\"nofollow\" target=\"_blank\" title=\"https://gist.github.com/Sleepwalking/7121bff3b5d1060cb5ee187c979daf83\">\n<i class=\"ss-icon ss-link\"></i>\n<span>gist.github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I built the express server from a template online, and stylized the page. I also created the interface to send the sound files from the server as a Howler sound object and play them back to the user", "I created Trump's visage.", ""]], ["Drawing Bot", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<div class=\"alert-box alert\">\n        This image is currently processing. Please be patient...\n      </div>\n<img alt=\"Drawing Bot \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"https://devpost-challengepost.netdna-ssl.com/assets/defaults/software-d4334efb72013df43784baffede9d379.gif\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Drawing Bot \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/459/200/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<ul>\n<li>We would like to hack hardware and thought a robot that could draw our favorite memes on paper would be cool! We also want to make something that would look unique and inspire kids in robotics!</li>\n</ul>\n<h2>What it does</h2>\n<p>You feed the pictures, it draws.</p>\n<h2>How I built it</h2>\n<p>Arduino, Processing</p>\n<h2>Challenges I ran into</h2>\n<p>Lots of trigonometry and math related to inverse kinematics</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>A cool design and it kinda functions</p>\n<h2>What I learned</h2>\n<p>Hardware, arduino</p>\n<h2>What's next for Drawing Bot</h2>\n<p>Make it draw more accurately</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/processing\">processing</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/matlab\">matlab</a></span></li></ul>\n</div>\n</div>", [""]], ["Soyless Pong", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Why is Beer Pong played with water?!</p>\n<p>We were inspired by the fact that individuals do not enjoy cleaning the sticky mess after a real game of Pong. Therefore, we developed a web app that allows people to play a virtual game of Pong that translates to the physical world.</p>\n<h2>What it does</h2>\n<h2>How we built it</h2>\n<h2>Challenges we ran into</h2>\n<h2>Accomplishments that we're proud of</h2>\n<h2>What we learned</h2>\n<h2>What's next for Soyless Pong</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/plotly\">plotly</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/accelerometer\">accelerometer</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://vingkan.github.io/soylesspong/\" rel=\"nofollow\" target=\"_blank\" title=\"https://vingkan.github.io/soylesspong/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>vingkan.github.io</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I created a mobile web app that uses a phone's accelerometer to determine the angle of the device. I programmed the (probably incorrect) physics for the ball's flight path when users swipe their screen and visualized the result with plotly and a canvas.", ""]], ["chromekey.js", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"chromekey.js \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/459/193/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>S I M P S O N S W A V E </p>\n<h2>What it does</h2>\n<p>Give it a color and it'll 'green screen' all instances of that color on the page</p>\n<h2>Challenges I ran into</h2>\n<p>My hack was originally going to be a GTA V AI that drives over people but life happens / Amazon has to manually approve me getting a server beefy enough to handle GTA V</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I don't think this exists and it looks very aesthetic</p>\n<h2>What's next for chromekey.js</h2>\n<p>Disney World</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n</div>", [""]], ["Blueberry Symposium", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>This was designed to be an incredibly versatile solution for beginning game developers wishing to add more connectivity to their games, namely high score boards.</p>\n<p>Being born of \"build a cross-language API\" an entire platform for development and collaboration began to form./</p>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://bitbucket.org/NanoBytes/uncommonhacks\" rel=\"nofollow\" target=\"_blank\" title=\"https://bitbucket.org/NanoBytes/uncommonhacks\">\n<i class=\"ss-icon ss-link\"></i>\n<span>bitbucket.org</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["memedora", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"memedora \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/459/172/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"memedora \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/459/173/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>memedora</h1>\n<p>Straight memes bro #swag </p>\n<p>Want more memes like the ones you see? \nUpvote that meme! </p>\n<p>Want less memes like the ones you see? \nDownvote that meme! </p>\n<p>Made a mistake in your meme choices? \nHit that reset!</p>\n<p>Our uncommon algorithm (powered my celery and soylent) takes your input and turns it into straight up results!</p>\n<p>Pandora for Memes 2k17 :)</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ruby\">ruby</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/digitalocean\">digitalocean</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mysql\">mysql</a></span></li><li><span class=\"cp-tag\">domain.com</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag\">less.js</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/nbanholzer/memedora\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/nbanholzer/memedora\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["BeeQuickr", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"BeeQuickr \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/459/159/datas/gallery.jpg\"/>\n<p>\n<i>BeeingMe</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"BeeQuickr \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/459/161/datas/gallery.jpg\"/>\n<p>\n<i>BeeWare!</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"BeeQuickr \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/459/162/datas/gallery.jpg\"/>\n<p>\n<i>BeeCage</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"BeeQuickr \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/459/163/datas/gallery.jpg\"/>\n<p>\n<i>BeeSpawn</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>It's gonna bee lit</h2>\n<p>Website: <a href=\"https://percivalgambit.github.io/everytime_they_say_x_it_gets_faster/\" rel=\"nofollow\">https://percivalgambit.github.io/everytime_they_say_x_it_gets_faster/</a>\nor beequickr.com</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/percivalgambit/everytime_they_say_x_it_gets_faster\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/percivalgambit/everytime_they_say_x_it_gets_faster\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["MC Ride Say", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"MC Ride Say \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/459/139/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"MC Ride Say \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/459/140/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>The Vaporwave\u00ae Aesthetic\u2122 is a wonderful thing and pairing it nicely with Death Grips creates something truly awesome</p>\n<h2>What it does</h2>\n<p>The user is blessed with the lyrics and wisdom from MC Ride himself.</p>\n<h2>How we built it</h2>\n<p>With Aesthetic\u2122 in mind </p>\n<h2>Challenges we ran into</h2>\n<p>We needed more Aesthetic\u2122 so we got more</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We found more Aesthetic\u2122</p>\n<h2>What's next for MC Ride Say</h2>\n<p>That is for him to decide</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/love\">love</a></span></li><li><span class=\"cp-tag\">aesthetic</span></li></ul>\n</div>\n</div>", ["I CLOSE MY EYES AND SEIZE IT\nI CLENCH MY FISTS AND BEAT IT\nI LIGHT MY TORCH AND BURN IT\nI AM THE BEAST I WORSHIP\n(built windows 98 windows)", "After careful consideration of projects with the greatest social utility, we chose to do this instead, and I contributed in aesthetic aesthetics category. ", "", ""]], ["get blockchain'd ", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"get blockchain'd  \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/459/164/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Basically I wanted to create inappropriate financial incentives for judges to pick my project</p>\n<h2>What it does</h2>\n<p>Creates an unstoppable and cryptographically secure devpost prediction market that puts real money (in the form of ethereum) on the probability that a devpost project will win.</p>\n<h2>How I built it</h2>\n<p>Solidity, assembly, tears</p>\n<h2>Challenges I ran into</h2>\n<p>This language is broken and has so many issues that can't be fixed because of fundamental design flaws.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I actually made it work (somehow)</p>\n<h2>What I learned</h2>\n<p>Actually a lot about solidity development and writing assembly</p>\n<h2>What's next for DevpostDestroyer (get blockchain'd)</h2>\n<p>Mess up more hackathons</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">solidity</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/kfichter/devpostdestroyer\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/kfichter/devpostdestroyer\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Emojipastafier", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Emojipastafier \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/459/068/datas/gallery.jpg\"/>\n<p>\n<i>Emojipastafy on Slack</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Emojipastafier \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/459/070/datas/gallery.jpg\"/>\n<p>\n<i>Emojipastafy on Telegram</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Emojipastafier \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/459/077/datas/gallery.jpg\"/>\n<p>\n<i>Emojipastafy on Messenger</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Automation is gradually taking over more jobs and learning more social skills. Our dream is a future where all memes are 100% computer generated so we can devote more time to looking at memes.</p>\n<h2>What it does</h2>\n<p>Emojipastafier takes whatever text you give it and tries to intersperse meaningful emojis to make a beautiful emojipasta to copypasta wherever you like.</p>\n<h2>How we built it</h2>\n<h3>TL;DR</h3>\n<p>Take data from reddit, make it lowercase and lemmatized, and train word2vec using this data. Then look up words in an input in a dictionary of emojis to try to find a match, then try to find the closest emoji in context using the word2vec model if that fails.</p>\n<h3>TL;R</h3>\n<p>The Emojipastafier \u2014 aka the Pasta Chef\u2122 \u2014 is trained on a small corpus of posts and comments from the reddit community /r/emojipasta and a very small selection of tweets with emojis that could be scraped. The corpus is normalized using a preprocessing script that takes every token (i.e. words, emojis and other symbols), strips them of punctuation and converts them to a lemmatized, lowercase form. Each data entry is treated as a sentence and passed to gensim.word2vec to create a model for word embeddings that allows us to look up the similarity of two words in the vocabulary it's trained on.</p>\n<p>When given text to emojify, the Chef slices the input by word and checks two sources for emojis:</p>\n<ol>\n<li><p>A tagged database of emojis, significantly smaller than the NLP model. If the word is found here, it's treated as authoritative, any emojis found from it are used and no other searching is done.</p></li>\n<li><p>The word2vec NLP model. This model attempts to find matching emojis by finding the top 75 most similar tokens to the word, then extracting tokens that are emojis.</p></li>\n</ol>\n<p>The Chef picks a random number of times to show emojis for a given word. If suitable emojis were found and the bot didn't roll a zero, it'll randomly select emojis from the list it's given and put them after the word. After repeating this process for every individual word, the end result is a nice emojipasta that can be fed back to the user.</p>\n<h2>Challenges we ran into</h2>\n<p>A lot of time early on was spent trying to get word2vec to work and assembling a suitable corpus with emojis in it. A lot of time later on was spent waiting for Heroku deployments until realizing that heroku has a command for running stuff locally.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>It actually works and it's mostly funny, which is nothing short of incredible.</p>\n<h2>What we learned</h2>\n<ul>\n<li>Assembling data from large datasets using big data processing, primarily Google BigQuery on a set of reddit comments and posts.</li>\n<li>Training basic sparse neural networks like word2vec to work with contexts of words and finding other similar tokens in that context.</li>\n<li>Using the Messenger, Slack and Telegram APIs.</li>\n<li>Deploying scalable and fault-tolerant web apps using services like Heroku.</li>\n</ul>\n<h2>What's next for Emojipastafier</h2>\n<p>Improved word-to-emoji detection would be nice and would probably require a larger corpus full of emojis.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">messenger</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/slack\">slack</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/telegram\">telegram</a></span></li><li><span class=\"cp-tag\">word2vec</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/nltk\">nltk</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/heroku\">heroku</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://m.me/emojipastafy\" rel=\"nofollow\" target=\"_blank\" title=\"http://m.me/emojipastafy\">\n<i class=\"ss-icon ss-link\"></i>\n<span>m.me</span>\n</a></li>\n<li><a href=\"http://telegram.me/emojipasta_bot\" rel=\"nofollow\" target=\"_blank\" title=\"http://telegram.me/emojipasta_bot\">\n<i class=\"ss-icon ss-link\"></i>\n<span>telegram.me</span>\n</a></li>\n<li><a href=\"https://uncommonhacks2017.slack.com/messages/emojipasta/details/\" rel=\"nofollow\" target=\"_blank\" title=\"https://uncommonhacks2017.slack.com/messages/emojipasta/details/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>uncommonhacks2017.slack.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the NLP, Slack and Telegram integrations.", "I worked on the initial framework and Facebook messenger integration.", "Worked with Markov Chains and randomizing the length of emojis.", ""]], ["memeBlock", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"memeBlock \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/459/285/datas/gallery.jpg\"/>\n<p>\n<i>hot diggity dog</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Annoyed with the banal advertisements of the internet era, we decided to change the advertisement experience for the better. We could have simply eliminated all the advertisements and fall into the established path of conventional adblockers. But we are an innovative, unconventional, uncommon team. Instead we scoured the internet, and replaced advertisements with the dankest memes the world wide web has to offer. We present you, memeBlock!</p>\n<h2>What it does</h2>\n<p>Replaces advertisements on websites with only the dankest of maymays.</p>\n<h2>How we built it</h2>\n<p>Based our code off of the source code of AdBlock and CatBlock. We didn't write much code from scratch, but we  learned how to implement desired features. </p>\n<h2>Challenges we ran into</h2>\n<p>Came up with a ton of ideas that four lesser experienced hackers were likely not capable of, so had to scramble for something a bit easier. Also 3/4 of us had never used Javascript.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Learning Javascript (3 first time users), finding the highest quality memes</p>\n<h2>What we learned</h2>\n<p>Javascript</p>\n<h2>What's next for Memeblock</h2>\n<p>Maximum dankness</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n</div>", ["Main contributor toward our meme database. Also just learned a whole lot about Javascript", "I worked helped refine the code and cut back on various non-essential features while maintaining and implementing features that we wanted to add. In addition, I helped find some pretty dank memes.", "I added content to our flickr meme database, integrated our flickr database API into the source code, and submitted our source code to our Google Chrome extension. It was my first time developing extensively on Javascript", "For this project I helped witth the plug-in visual elements such as logo and picture sizes configuration. I also contributed to modifying the source code inspired from CatBlock"]], ["Fire Mixtape MD", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Fire Mixtape MD \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/459/153/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>In hospitals, patients with severe diseases suffer unprecedented amounts of pain. It has been clinically demonstrated that music helps alleviate such pain. Hospitals hire Music Therapists as a form of pain suppressant for these patients. We have decided to automate and digitalize music therapy so it is readily available to patients and individuals.</p>\n<h2>What it does</h2>\n<p>Fire Mixtape MD is a web application that provides patients and individuals with music therapy as to alleviate pain, stress, and depression. It does so but utilizing Spotify API's and Genius API's as to search for promising songs, these songs are passed to a Regex algorithm that filters out the songs that are most likely to help alleviate pain based off combinations of vowels and sounds proven to be effective in various academic papers and research projects.</p>\n<h2>How we built it</h2>\n<p>Fire Mixtape MD was built utilizing Bootstrap for the front-end, Javascript for the processing capabilities and API calls, and Python for the Regex capabilities and sediment analysis.</p>\n<h2>Challenges we ran into</h2>\n<p>Due to it being our first hackaton, we struggled at first trying to implement Spotify API's as well as Genius API's. In the end we decided to write python scripts to web scrape the contents we requiere from web pages. </p>\n<h2>Accomplishments that we are proud of</h2>\n<p>We are proud of completing the web app, with all the functionality present in the 24 hours presented to us!</p>\n<h2>What we learned</h2>\n<p>We learned that the most important part of a developing any piece of software is cooperating with your team. Teamwork makes the dream work!</p>\n<h2>What's next for Fire Mixtape MD</h2>\n<p>Due to the time constraints we had to compromise for a basic version of our web application. In the future we would like to convert our Regex python algorithm to a Python supervised machine learning algorithm that would utilize the pre-existing songs approved by well-known music therapists as its training set. This Machine learning algorithm will analyze the sound waves of the songs as well as its lyrics. To this machine learning algorithm we would continually feed random Spotify songs from all approved genres as to construct the perfect music therapy playlist for those individuals with severe diseases. Furthermore, we would like to convert this web application to an IOS/Android application.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/spotify\">spotify</a></span></li><li><span class=\"cp-tag\">regex</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/handlebars-js\">handlebars.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/beautiful-soup\">beautiful-soup</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ajax\">ajax</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/love\">love</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/konradgnat/uncommonHackathon\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/konradgnat/uncommonHackathon\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Worked on the back-end, front-end, and UX of website. Built functionality of the website using JQuery, Ajax, Javascript, and CSS. Utilized Spotify API to dynamically create playlists. ", "Check out our live demo here:\nhttp://firemixtapemd.com", "I used Beautiful Soup and Python for my first time to data scrape song lyrics. I then analyzed the sentiment of songs using JavaScript, based on the frequency of phonetic sounds proven to be therapeutic.", ""]], ["Memechain", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>The biggest problem with posting your memes, is that someone always steals your OC. However, with only a timestamp for proof, there's no good way to protect your content. </p>\n<h2>What it does</h2>\n<p>Memechain stores your meme on the blockchain. Anyone who wants to use your meme has to reference your original node, thus giving you credit. </p>\n<h2>How I built it</h2>\n<p>Solidity backend. </p>\n<h2>Challenges I ran into</h2>\n<p>Didn't give myself time for a front end. </p>\n<h2>What I learned</h2>\n<p>This was my first attempt at blockchain programming, so now I can more easily make applications of the blockchain more easily in the future. </p>\n<h2>What's next for Memechain</h2>\n<p>Make a front end to interface with.  </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">solidity</span></li></ul>\n</div>\n</div>", [""]], ["Swiss Army Can", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Swiss Army Can \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/459/043/datas/gallery.jpg\"/>\n<p>\n<i>Breadboard and Arduino without housing</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Swiss Army Can \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/459/044/datas/gallery.jpg\"/>\n<p>\n<i>Hard at work</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Swiss Army Can \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/459/045/datas/gallery.jpg\"/>\n<p>\n<i>Housing ready for electronics</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Swiss Army Can \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/459/108/datas/gallery.jpg\"/>\n<p>\n<i>Final Product</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Swiss Army Can \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/459/042/datas/gallery.jpg\"/>\n<p>\n<i>Circuit Diagram</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to provide a cost-effective, environmentally friendly solution to enhance the environment of the user.</p>\n<h2>What it does</h2>\n<p>By utilizing a wide range of sensors, we are able to analyze environmental conditions and take action to improve them within a localized radius. </p>\n<h2>How we built it</h2>\n<p>We used the Grove System of sensors to model the system. This allowed for rapid prototyping which let the team explore possibilities. After the initial prototype phase, the size was minimized by using our own components, in order to optimize space and reduce cost.\nWe used Arduino, an open source electronic platform, to create a sophisticated system of conditions which produces optimal environmental conditions for the user. In addition, we made the system battery-operated in order to maximize flexibility for the users. \nFinally, we designed a low-cost housing solution, which uses recycled soft-drink containers which contains all the electronics. </p>\n<h2>Challenges we ran into</h2>\n<p>There were many challenges that came about in this process. Just coming up with such a great idea took a lot of time and brain-power. \nAlso, electronics got to be challenging. We had to make sure the housing did not make electronics interfere with each other. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>This is the first Hackathon for much of the team. We are proud to come out of this learning a lot and have a finished product, complete with housing. We worked together, learned a lot, and had fun.</p>\n<h2>What we learned</h2>\n<p>In this process, we learned a lot about electronics and development. We learned how to program ArduinoC to allow it to take in sensor data and control other circuit elements. We also learned about the electronics used and how to put them together, since many of them were not simply \"plug and play\". Electronics in the \"real world\" are much different than problems you would see on paper.</p>\n<h2>Disclaimer</h2>\n<p>This product is not affiliate with the Swiss Federation, or their army. It is simply a play on words. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/groove\">groove</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li></ul>\n</div>\n</div>", ["", "", "", ""]], ["Retweet Predictor based on Text Analysis", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Retweet Predictor based on Text Analysis \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/459/115/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>Marketing and News Propagation is not very good on social media and if there is a disaster then people might not even get the news. </p>\n<p>We take the content in of the tweet and analyze the content and then make a prediction how well it would do. News agencies and marketers will have the opportunity to edit their content for most reach.</p>\n<p>We used Flask, sci-kit-learn, the twitter api, microsoft linguistics api for the backend and analysis and react js for the frontend.</p>\n<p>Accurately figuring out which parts of the speech were more important for the prediction proved tough to figure out.</p>\n<p>We have a final end product that works.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">sci-kit</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/react\">react</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twitter\">twitter</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/shazy792/uncommon2017\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/shazy792/uncommon2017\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Meemr", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Meemr \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/459/215/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Meemr \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/459/211/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Meemr \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/459/188/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p><img alt=\"link\" data-canonical-url=\"http://i2.kym-cdn.com/photos/images/newsfeed/000/875/511/a69.png\" src=\"https://res.cloudinary.com/devpost/image/fetch/s--4QvtgT6Z--/http://i2.kym-cdn.com/photos/images/newsfeed/000/875/511/a69.png\"/></p>\n<h2>What it does</h2>\n<p>Meemr is an application that tracks users' faces in realtime and places text around their heads to instantly transform them into memes based on users' emotions.</p>\n<h2>How we built it</h2>\n<p>The app itself was built in Swift and we used iOS face tracking along with emotion recognition to input into our Python/Flask web app to return an appropriate meme. </p>\n<h2>Challenges we ran into</h2>\n<p>We weren't familiar with iOS development or how to use Amazon Web Services and therefore spent quite a while trying to figure out both. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>It works.</p>\n<h2>What's next for Meemr</h2>\n<p>More memes, better face tracking, and potentially pepe faces.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ios\">ios</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/y4smeen/meemr\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/y4smeen/meemr\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/anthonykrivonos/Memr\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/anthonykrivonos/Memr\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I had 45 minutes of sleep and now everything hurts.", "", "", ""]], ["WebGL-3D-Audio-Map", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"WebGL-3D-Audio-Map \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/459/099/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"WebGL-3D-Audio-Map \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/459/100/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Wanted to work on my pure WebGL skills and make something cool to show off for a few minutes</p>\n<h2>What it does</h2>\n<p>It plays a song and then maps the audio</p>\n<h2>How I built it</h2>\n<p><a href=\"https://github.com/sjfricke/awesome-webgl\" rel=\"nofollow\">WebGL</a></p>\n<h2>Challenges I ran into</h2>\n<p>WebGL...black screens, empty console log, all the fun</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>It works at all and I found these sick creative command songs</p>\n<h2>What I learned</h2>\n<p>Need to get better</p>\n<h2>What's next for WebGL-3D-Audio-Map</h2>\n<p>4D</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/webgl\">webgl</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag\">redbull</span></li><li><span class=\"cp-tag\">internet</span></li><li><span class=\"cp-tag\">some-guy-who-helpped-me-on-a-question</span></li><li><span class=\"cp-tag\">stackoverflow</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://spencerfricke.com:1250/\" rel=\"nofollow\" target=\"_blank\" title=\"http://spencerfricke.com:1250/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>spencerfricke.com</span>\n</a></li>\n<li><a href=\"https://github.com/sjfricke/WebGL-3D-Audio-Map\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/sjfricke/WebGL-3D-Audio-Map\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["\uff4e\u3000\uff42\uff45\uff41\uff54\uff53\u3000\uff41\u3000\uff44\uff41\uff59", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>\uff46\uff4f\uff52\u3000\uff54\uff48\uff4f\uff53\uff45\u3000\uff4c\uff4f\uff4e\uff45\uff4c\uff59\u3000\uff44\uff41\uff59\uff53\u3000\uff57\uff48\uff45\uff4e\u3000\uff59\uff4f\uff55\u3000\uff48\uff41\uff56\uff45\u3000\uff4d\uff4f\uff52\uff45\u3000\uff54\uff49\uff4d\uff45\u3000\uff54\uff48\uff41\uff4e\u3000\uff42\uff45\uff41\uff54\uff53\u3000\uff54\uff4f\u3000\uff4c\uff49\uff53\uff54\uff45\uff4e\u3000\uff54\uff4f</p>\n<h2>What it does</h2>\n<p>\uff50\uff52\uff4f\uff43\uff45\uff44\uff55\uff52\uff41\uff4c\u3000\uff47\uff45\uff4e\uff45\uff52\uff41\uff54\uff49\uff4f\uff4e\u3000\uff4f\uff46\u3000\uff4d\uff49\uff44\uff49\u3000\uff44\uff45\uff45\uff50\u3000\uff48\uff4f\uff55\uff53\uff45\u3000\uff4d\uff55\uff53\uff49\uff43</p>\n<h2>How I built it</h2>\n<p>\uff41\uff4c\uff4c\u3000\uff43\uff52\uff45\uff44\uff49\uff54\u3000\uff54\uff4f\u3000\uff54\uff48\uff45\u3000\uff4d\uff49\uff44\uff49\u3000\uff4c\uff49\uff42\uff52\uff41\uff52\uff59\u3000\uff54\uff4f\u3000\uff47\uff49\uff54\uff48\uff55\uff42\u3000\uff55\uff53\uff45\uff52\u3000\uff56\uff49\uff53\uff48\uff4e\uff55\uff42\uff4f\uff42</p>\n<h2>Challenges I ran into</h2>\n<p>\uff57\uff45\u3000\uff48\uff41\uff44\u3000\uff41\u3000\uff4c\uff4f\uff54\u3000\uff4f\uff46\u3000\uff54\uff52\uff4f\uff55\uff42\uff4c\uff45\u3000\uff49\uff4e\uff53\uff54\uff41\uff4c\uff4c\uff49\uff4e\uff47\u3000\uff50\uff59\uff54\uff48\uff4f\uff4e</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>\uff46\uff49\uff4e\uff41\uff4c\uff4c\uff59\u3000\uff49\uff4e\uff53\uff54\uff41\uff4c\uff4c\uff45\uff44\u3000\uff50\uff59\uff54\uff48\uff4f\uff4e\u3000\uff4f\uff4e\u3000\uff41\uff4c\uff4c\u3000\uff4f\uff55\uff52\u3000\uff43\uff4f\uff4d\uff50\uff55\uff54\uff45\uff52\uff53</p>\n<h2>What I learned</h2>\n<p>\uff57\uff49\uff4e\uff44\uff4f\uff57\uff53\u3000\uff49\uff53\u3000\uff46\uff4f\uff52\u3000\uff43\uff48\uff55\uff4d\uff50\uff53</p>\n<h2>What's next for \uff4e\u3000\uff42\uff45\uff41\uff54\uff53\u3000\uff41\u3000\uff44\uff41\uff59</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://nbeatsaday.wordpress.com\" rel=\"nofollow\" target=\"_blank\" title=\"https://nbeatsaday.wordpress.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>nbeatsaday.wordpress.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", "", ""]], ["uncommon dogs", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"uncommon dogs \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/459/146/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"uncommon dogs \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/459/147/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"uncommon dogs \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/459/148/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"uncommon dogs \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/459/175/datas/gallery.jpg\"/>\n<p>\n<i>The future</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"uncommon dogs \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/459/254/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>Doggr: The Future of Images</h1>\n<h2>About</h2>\n<p>Since the dawn of civilization, man has yearned for self actualization. The transcendence of one's physical form, and all worldly burdens to which it is bound, may be the loftiest, and yea, most essential goal of mankind. The humble dog, man's best friend, has served as a shining example throughout the ages, of transcendent joy, the appreciation of the oneness of all things and the transience of our very lives. Now it is possible to live that fantasy, to hew ever closer to the canine ideal.</p>\n<h2>Project Abstract</h2>\n<p>Using the power of modern computing, we have created a Chrome web extension which applies a dog face filter to all your photos. </p>\n<h2>Setup</h2>\n<pre class=\"language-nolang\"><code>pip install virtualenv\nvirtualenv venv\nsource venv/bin/activate\npip install -r requirements.txt\n</code></pre>\n<h2>Running the app</h2>\n<p>If you're using a virtualenv, activate it.</p>\n<pre class=\"language-nolang\"><code>source venv/bin/activate\n</code></pre>\n<p>Then run the Flask app:</p>\n<pre class=\"language-nolang\"><code>python app.py\n</code></pre>\n<p>Go to <a href=\"http://127.0.0.1:5000/\" rel=\"nofollow\">http://127.0.0.1:5000/</a> and enjoy</p>\n<p>Run the extension by going to chrome and adding the nicholascage folder as an extension</p>\n<h2>Powered By</h2>\n<p>The Nick Cage Photo Extension\n<a href=\"https://chrome.google.com/webstore/detail/ncage/hnbmfljfohghaepamnfokgggaejlmfol?hl=en\" rel=\"nofollow\">https://chrome.google.com/webstore/detail/ncage/hnbmfljfohghaepamnfokgggaejlmfol?hl=en</a></p>\n<p>and a moustache facial recognition software found on the internet.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/kevhong/uncommon\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/kevhong/uncommon\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["The Orange Alert", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"The Orange Alert \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/459/092/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"The Orange Alert \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/459/093/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"The Orange Alert \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/459/094/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We are a group of artists, critical thinkers and activists and we use technology as a medium to express our creativity. We believe the President of the US (presumably the most power person in the world) should spend less time on social media bickering with foes, berating the less privileged and focus more on how to make the country and the world a better place. Unfortunately we live in the world where the opposite is true.  </p>\n<h2>What it does</h2>\n<p>Similar to how the Department of Homeland security employs color levels to indicate the over \"threat\" levels, our webpage and mobile app lets the population know the mental state of Donal Trump. The more he spends time on twitter the more orange the indicator becomes. The indicator is this case is an orange. We decided to use the orange....to show...well...you get it....</p>\n<h2>How we built it</h2>\n<p>The Webpage/webapp monitors Trump's twitter account. It counts his number of tweets over a 24 hour period and rates his activity from 1 - 10 (1 being the lowest and 10 being the highest).  This number is then mapped to the shade of the orange the changes when this number is updated. The phone app queries the webpage to get updates and users can see the same info on the native android app. </p>\n<h2>Challenges we ran into</h2>\n<p>We are electronics hardware folks. We never done this level of software. EVER. Over the course of 12 hours we taught ourselves Android app development, client and server side interaction, deploying web apps on remote servers. The biggest challenge was integrating all the moving part together to make a seamless experience.</p>\n<p>Project link: <a href=\"http://www.orangealert.info\" rel=\"nofollow\">www.orangealert.info</a></p>\n<h2>Accomplishments that we're proud of</h2>\n<p>That we did it! See above!</p>\n<h2>What we learned</h2>\n<p>Node.JS, Android app/Java, Client and server interaction</p>\n<h2>What's next for The Orange Alert</h2>\n<p>Launch this nation wide!!!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag\">p5</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://www.orangealert.info\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.orangealert.info\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.orangealert.info</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["my first time using node.js and my first time using the twitter api - i usually work in hardware so this was a personal challenge", ""]], ["raVR - VR music visualizer", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/M4T0uWN2Ifg?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"raVR - VR music visualizer \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/459/064/datas/gallery.jpg\"/>\n<p>\n<i>logo</i>\n</p>\n</li> <li class=\"text-center\">\n<div class=\"alert-box alert\">\n        This image is currently processing. Please be patient...\n      </div>\n<img alt=\"raVR - VR music visualizer \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"https://devpost-challengepost.netdna-ssl.com/assets/defaults/software-d4334efb72013df43784baffede9d379.gif\"/>\n<p>\n<i>screenshot</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>Please note! Our file sizes are too large to upload via devpost. Check out the github.</p>\n<p>EPILEPSY WARNING - There are flashing lights and colors. Please be safe.</p>\n<h2>Inspiration</h2>\n<p>We were inspired by the movie Ratatouille, which has a smell visualizer.\nMusic is an important part of all our lives. The merging of technology and art is always exciting, so now that we have the capability to immerse listeners in a world created by their music, we were excited to try to do it!</p>\n<h2>What it does</h2>\n<p>Visualizes music in a 360 video for use with Virtual Reality!</p>\n<h2>How we built it</h2>\n<p>First we analyze a music file, and determine a Frequency-Amplitude over time graph. Up next, we do a Fourier Transform and peak analyzer on the file to determine dominant frequencies at each moment. Color is calculated from a novel algorithm that determines dominant frequencies and matches timbre of each frame to a color.</p>\n<h2>Challenges we ran into</h2>\n<p>Keeping up with the speed of the actual song is difficult; rendering is hard, and the Amazon AWS credit didn't seem to work. Because of this constraint, we pre-rendered for our demo, and we are looking at ways to do a better, hopefully live render.</p>\n<h2>What we learned</h2>\n<p>Uncommon, but cool: we learned about the importance of art &amp; design in technology. Despite none of us being artists, we learned more about blender, putting together a whole project pipeline. Same as always, time management in a 24 hour window is an important takeaway.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Jay \u2014 Carrying the team and handling the major task of generating the demo render.\nWarren \u2014\u00a0proud of truly committing to a project and seeing it through.\nAlex \u2014 This my first Hackathon! I'm glad I was able to contribute deeply to the project beyond what I thought I'd be able to do. I'm proud that I pulled through in the end.\nJeremiah \u2014\u00a0being (maybe?) one of the first people to explore visualization of timbre, which is a relatively arcane musical phenomenon</p>\n<h2>What's next for raVR - VR music visualizer</h2>\n<p>We're looking at ways to expand our rendering capability.\nWe're looking into using Blendergame to render the visualizer as an explorable environment.\nWe're hoping to fine-tune the ways that we visualize different aspects of music.\nWe're looking into other projects (like Melisma) which can analyze other aspects of music, such as voice.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">haskell</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/blender\">blender</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/tophatraptor/uh2017\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/tophatraptor/uh2017\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on timbre analysis, coming up with the idea & project specifications, writing up the description, and designing the logo.", ""]], ["Compan-Oekaki- Colaborative Vision Board", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://player.vimeo.com/video/199554975?byline=0&amp;portrait=0&amp;title=0#t=\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Compan-Oekaki- Colaborative Vision Board \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/459/051/datas/gallery.jpg\"/>\n<p>\n<i>Platform collaboration goal list</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Compan-Oekaki- Colaborative Vision Board \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/459/052/datas/gallery.jpg\"/>\n<p>\n<i>Platform collaboration logo</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Compan-Oekaki- Colaborative Vision Board \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/459/053/datas/gallery.jpg\"/>\n<p>\n<i>Saved with the save button and downloaded to desktop</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>My team and I are seniors at VCU Arts, as well has team members at a nonprofit tech start up with the mission to hack the foster care system. With Compan-Oekaki- Colaborative Vision Board, it was born of these two loves in our life, where the key topic we were focused on tackling was communion and collaboration.</p>\n<p>As artist its very easy to become isolated and focused on your specific body of work, however we found that some of the most successful piece of art come from artistic collaboration. A similar problem can be found in the Foster care system, where visualizing your goals with a supporters and/or other youth isn't a common or accessible practice.</p>\n<p>That why my team and I created Compan-Oekaki- Colaborative Vision Board, which is a device for collaboration between people to in real time to illustrate as a team goals, ideas, and strategies for life or for fun. . </p>\n<h2>What it does</h2>\n<p>Compan-Oekaki- Colaborative Vision Board is a platform that allows for duel collaboration between peers. The digital space here encourages a new form of communication, as visual communication is a basic and instinctual langue by all people. With the wide range of pens, brush sizes, colors, and shape options, its the perfect space to work with someone from washing out an artist idea, visualizing a personal goal, or just planing a shopping list with a friend. </p>\n<p>And what ever amazing idea or piece of art that is ultimately collaboratively created can be saved as a png to you desk top for the owner to have documentation of the collaboration work and cherish it forever. </p>\n<h2>How we built it</h2>\n<p>Compan-Oekaki- Colaborative Vision Board was built with Node.JS, Express, HTML5, and CSS3, and AWS Elastic Beanstalk. The collaboration digitally space was built with amazon web servers, share js, and node js. </p>\n<h2>Challenges we ran into</h2>\n<p>something on servers here? with not being able to use semiphone and cake not working \nWe ran out of time with adding an upload images and adding a text typing feature</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Within 24hours we transitioned from cake to amazon web servers, this adjustment was crazy. We were so hyped with accomplishing this along with successfully using node.js, share.js, and fabric.js. Also getting the pen tool to work with ease features and saved image functions made us happy too.</p>\n<h2>What we learned</h2>\n<p>wow, a lot.\nWe learned so so so much about servers, and within 24hours going from cake to amazon web servers, the transition was crazy, just we were so hyped with accomplishing this along with successfully using node.js, share.js, and fabric.js. Also getting the pen tool to work with ease features and saved image functions made us happy too.</p>\n<h2>What's next for Compan-Oekaki- Colaborative Vision Board</h2>\n<p>We plan on expanding the features within the overall platform. Things like uploading images, gifs, videos. We would also live to expand the collaboration from two people to also having an ai being involved with suggestions and assisting with the expansion of the over all Compan-Oekaki- Colaborative Vision Board. But also seeing the wide range of how this collaborative vision board can be used, from Artists to the Foster care system, to people like me who can't communicate at all and is always drawing out what I need with others for them to understand me. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/fabric-js\">fabric.js</a></span></li><li><span class=\"cp-tag\">sharejs</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/visual-studio\">visual-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/github\">github</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/terminal\">terminal</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://sample-env-1.esswcniwnv.us-east-1.elasticbeanstalk.com/index.html#N0A3uVng66\" rel=\"nofollow\" target=\"_blank\" title=\"http://sample-env-1.esswcniwnv.us-east-1.elasticbeanstalk.com/index.html#N0A3uVng66\">\n<i class=\"ss-icon ss-link\"></i>\n<span>sample-env-1.esswcniwnv.us-east-1.elasticbeanstalk.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Where's Joe? ", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Where's Joe?  \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/459/029/datas/gallery.jpg\"/>\n<p>\n<i>Joe Biden and his ice cream</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We all just met each other this weekend through the Team Formation Slack channel/speed-dating. Our skill-sets and interests varied greatly, but we all wanted to work with a new technology - VR. Originally we wanted to build an exhibit of human organs; this later changed to a \"Where's Waldo\" game featuring our beloved Vice President, Joe Biden, and his favorite dessert. Our uncommon senses of humor allowed us to share lots of laughter and learning.</p>\n<h2>What it does</h2>\n<p>Where's Joe? is a VR game that allows the player to immerse themself in a three-level world and seek giant memes of Joe Biden and his ice cream. The accompanying web platform also offers the VR file for download and an opportunity to donate Bitcoins to the creators. Be an Uncommon explorer, treading where no one has tread before.</p>\n<h2>How we built it</h2>\n<p>VR Game:</p>\n<ul>\n<li>Unity3D to create the environment </li>\n<li>Maya and Sketchup to alter 3D models</li>\n<li>C# scripts \n<br/>\n<br/>Website:</li>\n<li>HTML/CSS and JavaScript to build the platform</li>\n<li>Blockchain and itch.io API for widgets <br/></li>\n</ul>\n<h2>Challenges we ran into</h2>\n<p>We aimed to offer the VR game on our website to be downloaded through itch.io. However, the PC used to build the game produced files untranslatable to Mac OS and made the program inaccessible outside the local system. We also wanted to incorporate Blockchain into the project and struggled to research feasible ideas before deciding to implement a widget to collect Bitcoin donations. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Our team is proud of being part of creating a VR world from bottom to top and using Oculus. We each individually learned new skills as well, whether it was working with Unity3D or deploying a website for the first time. </p>\n<h2>What we learned</h2>\n<ol>\n<li>It's never too late to start learning how to code</li>\n<li>Ask for help when you need it. It's that simple. </li>\n<li>\"You learned pretty much all of college freshmen CS\" -Dev the Dev (mentor)</li>\n</ol>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/maya\">maya</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/oculus\">oculus</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/itch-io\">itch.io</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/blockchain\">blockchain</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://kellyvicchan.github.io/wheresjoe/\" rel=\"nofollow\" target=\"_blank\" title=\"https://kellyvicchan.github.io/wheresjoe/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>kellyvicchan.github.io</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Wrote a script that retrieved tweets with Joe Biden and ice cream to be displayed on website. Learned the basics of working with Unity3D.", "I compiled all of the actual 3D visualizations & configured Unity to work with the Oculus, so I basically made the (entire) game. ", "Worked on the Unity code to generate objects from a specific folder.", "I worked on using testnet and learning how to make a very beginner attempt at making a private blockchain in hopes of somehow making blockchain work with Unity (found one way to use it -- for inner game commerce, create an economy within the game) but unfortunately I quickly found it was super difficult, no tutorials to be found, and our current game only has one user and no way to incorporate blockchain in a way that makes sense at this stage of our game. I learned a lot about blockchain and practiced hashing using the Bitcoin blockchain. Oh, and found the cool Biden memes used in our game!! ", "Built the website (HTML/CSS/JS)- implemented Bitcoin donation and itch.io API widgets. Worked on graphics, deployed a website for the first time, and learned how to use Github with Terminal. "]], ["Tiles", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Tiles \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/459/018/datas/gallery.jpg\"/>\n<p>\n<i>Icon made in Microsoft Paint</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Tiles \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/459/026/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Tiles \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/459/028/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Tiles \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/459/027/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>It is something I wanted to try, and I had to make an app anyways for a class. So I figured I would start it here and finish it through the quarter.</p>\n<h2>What it does</h2>\n<p>You click the memes as many times as you can before they disappear. Not the intended outcome, but it's something.</p>\n<h2>How I built it</h2>\n<p>Blood, sweat, and tears. Lots and lots of tears.</p>\n<h2>Challenges I ran into</h2>\n<p>This is my first Android app and my first time not working with a team, so there was some difficulty in that, not having the support and the knowledge base.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I am very proud of the UI. And the fact that it does something.</p>\n<h2>What I learned</h2>\n<p>I learned a lot, but I also feel like I am not doing everything the right or easiest way. </p>\n<h2>What's next for Tiles</h2>\n<p>More than just one level and one mode.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/meganpecho/Tiles\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/meganpecho/Tiles\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Behind the Words", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Behind the Words \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/459/011/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Behind the Words \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/459/012/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Behind the Words \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/459/013/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We both took the 'hack harassment' pledge and were interested in harassment between cultures and around the world; also, as first generation Americans we wanted to include the ability for users to learn more about the cultures to help combat the source of the harassment.</p>\n<h2>What it does</h2>\n<p>This web application has a world map that shows, in real time, the sentiment of the tweets directed at that country. A user is able to click on any country to see the stream of tweets, and will also be presented with positive pictures that people from that country have posted.</p>\n<h2>How We built it</h2>\n<p>We used the Twitter streaming API, and then sorted the tweets by location. For sentiment analysis, we used AFFIN scores and the Natural Language Tool Kit package.</p>\n<h2>Challenges We ran into</h2>\n<p>Crafting the UI, since there are many components that needed to be shown, in addition to the main map in the background.</p>\n<h2>What's next for Behind the Words</h2>\n<p>We hope to continue development to make this a robust educational resource. Cultural exchanges are essential to fighting against bigotry.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/natural-language-processing\">natural-language-processing</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["The Rarest Pepe", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"The Rarest Pepe \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/459/190/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"The Rarest Pepe \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/459/081/datas/gallery.jpg\"/>\n<p>\n<i>example once rare pepe</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"The Rarest Pepe \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/459/080/datas/gallery.jpg\"/>\n<p>\n<i>example once rare pepe</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"The Rarest Pepe \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/459/082/datas/gallery.jpg\"/>\n<p>\n<i>example once rare pepe</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Tired of our <a href=\"http://knowyourmeme.com/memes/rare-pepe\" rel=\"nofollow\">Rare Pepes</a> depreciating in value as they are redistributed and viewed - becoming more common with each share or set of prying eyes - we sought a solution to create the Rarest Pepe possible while simultaneously keeping it safe from prying eyes, forever. We were inspired by the art of Chindogu - while the meme we create is priceless in its uniqueness and rarity, the feature that maintains its uniqueness prevents anyone from ever seeing it - barring either cracked encryption or the psychic visions of  Madame Zandra.</p>\n<h2>What it does</h2>\n<p>Upon insertion of a USB drive into our Raspberry Pi, a fresh Rare Pepe is generated, encrypted, and deposited on the drive.</p>\n<h2>How we built it</h2>\n<p>We used the Python library OpenCV to randomly manipulate a stock image of Pepe to create a unique, never before seen variation on the meme. We used gpg encryption to prevent prying eyes from viewing our new rare meme. All of this was automated with Bash scripting.</p>\n<h2>Challenges we ran into</h2>\n<p>We had a lot of issues getting the Pi up and running - fresh out of the box, our Bluetooth keyboard didn't work with it until we'd upgraded the kernel, the distribution, and run a few apt-get upgrades, which took forever on the limited hardware. We had trouble finding the freshly inserted USB to write to in the filesystem as well.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Learning more about encryption and automation in Linux.</p>\n<h2>What we learned</h2>\n<p>Two of our teammates very little experience with Linux previously. We've learned how to encrypt files with gpg and how to utilize OpenCV to randomly modify images.</p>\n<h2>What's next for The Rarest Pepe</h2>\n<p>Our automation isn't fully functional at time of writing. We're having trouble finding the disk to write the new meme to. We'd like to spruce things up a bit - a custom Pepe case for the Pi seems in order. More advanced image manipulation technology is possible - we could draw from a larger pool of source images, and modify them in a more complicated and more aesthetically pleasing way. A stretch goal would be image generation with a neural network, trained on a database of rare Pepes to create entirely fresh memes.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">gpg</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/opencv\">opencv</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li><li><span class=\"cp-tag\">raspbian</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bash\">bash</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/duckroller/therarestpepe\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/duckroller/therarestpepe\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I did the initial set up on the Raspberry Pi. I implemented the initial randomization into the image modification algorithm, and laid the groundwork for the automated bash script.", "I wrote the script files to implement Linux's gpg encryption method and moving newly generated images into the existing USB drive.", ""]], ["Treasure Hunt", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>People <em>sail</em> the web all the time, but how many hidden gems do they miss? We aim to help people unearth this hidden treasure and build a meta-web-game on top of it all.</p>\n<h2>What it does</h2>\n<p>A chrome extension allows you to find user-generated treasure hunts tied to specific websites. Follow the clues provided and get to the end. The first to each clue wins the treasure inside.</p>\n<p>Specially designed treasure hunts can show users a side of the web they hadn't considered before.</p>\n<h2>How we built it</h2>\n<p>Using flask, sqlite, and javascript. </p>\n<h2>Challenges we ran into</h2>\n<p>Using the web3 api to connect to a remote Etherium node has given us nothing but problems. Serious issue for the legitimacy of Doubloons. Initial plans were for the Doubloons to take the form of blockchain tokens \u2014 each user would get a reward for completing clues by getting a transfer of Doubloons from the user who created the treasure hunt, with a mechanic wherein users had to store some of their wealth in treasure hunts to keep Doubloons in heavy circulation. The web3 api was such a problem that we ended up not backing these Doubloons on the blockchain and instead trusting our centralized server.</p>\n<p>We got Doubloons working on the blockchain, but not in time to integrate them.</p>\n<h2>What's next for Treasure Hunt</h2>\n<p>Doubloons on the block chain! Clues implemented as an analog to wallets, where users transfer money to the treasure chest to create the chest, money is automatically transferred to users who complete the hunt.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/chrome\">chrome</a></span></li><li><span class=\"cp-tag\">solidity</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://sailthesevenwebs.net\" rel=\"nofollow\" target=\"_blank\" title=\"http://sailthesevenwebs.net\">\n<i class=\"ss-icon ss-link\"></i>\n<span>sailthesevenwebs.net</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["uncommonglitter", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>At the beginning of the hackathon we were consumed existential dread. We reflected about what brought joy and meaning to our life.</p>\n<p><img alt=\"EXISTENTIAL DREAD\" data-canonical-url=\"http://i.picasion.com/gl/84/7hcU.gif\" src=\"https://res.cloudinary.com/devpost/image/fetch/s--PHv8gG3o--/http://i.picasion.com/gl/84/7hcU.gif\"/></p>\n<p>We decided to try to rediscover an aesthetic perspective from a simpler time. One not influenced by capitalist greed and trends motivated by consumerism. </p>\n<p><img alt=\"GLITTER PENS\" data-canonical-url=\"https://images-na.ssl-images-amazon.com/images/I/61W6RzdqiGL.jpg\" src=\"https://res.cloudinary.com/devpost/image/fetch/s--5My0ohEA--/https://images-na.ssl-images-amazon.com/images/I/61W6RzdqiGL.jpg\"/></p>\n<p>We drew inspiration from the glitter pens that defined social status in the third grade. These <del>subpar</del> <del>extra af</del> writing instruments were the ultimate expression of aestheticism overcoming utilitarian ideals. </p>\n<p>We decided to build every child's dream, a glitter cannon.</p>\n<h2>What it does</h2>\n<p>We scrape tweets to <a href=\"https://twitter.com/uncommonglitter\" rel=\"nofollow\">@uncommonglitter</a> looking for keywords that trigger the glitter cannon.</p>\n<h2>How we built it</h2>\n<p>We collected random pieces of trash, cut cans apart, and put tape on the cans. Also we sharpened a plastic fork. I don't know why we did most of that, but we ended up with a pretty dope glitter cannon. There was a method to the madness...somewhere.</p>\n<h2>Challenges we ran into</h2>\n<p>None of us have experience with IRL engineering i.e. building physical systems. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Ed is proud of wining the celery eating contest.\nJesse was bullied for being too good at <del>beer</del> soylent pong, and is pretty proud of it. \nMaggie got into grad school.\nSam is still the same piece of trash that entered the hackathon.</p>\n<h2>What we learned</h2>\n<p>Ed: Learned how much he doesn't know.\nJesse: How ambivalent he is about soylent.\nMaggie: How to use Web APIs.\nSam: Knives are dangerous. </p>\n<h3>OUR SNEK SQUAD</h3>\n<p><img alt=\"sneks\" data-canonical-url=\"https://scontent.xx.fbcdn.net/v/t1.0-9/15965333_1320930427977494_8506292726733286788_n.jpg?oh=70c8870806b0faceb52e81b62a495282&amp;oe=59207F5F\" src=\"https://res.cloudinary.com/devpost/image/fetch/s--sMubXlMe--/https://scontent.xx.fbcdn.net/v/t1.0-9/15965333_1320930427977494_8506292726733286788_n.jpg%3Foh%3D70c8870806b0faceb52e81b62a495282%26oe%3D59207F5F\"/></p>\n<p>Ed is long boy.\nJesse is snake.\nMaggie is smol man.\nSam is lil cobra.</p>\n<h2>What's next for uncommonglitter</h2>\n<p>Making a better cannon. We're looking for series A funding also. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/go\">go</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag\">glitter</span></li><li><span class=\"cp-tag\">tape</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/NaturalFractals/glitterblower\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/NaturalFractals/glitterblower\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Bad SO", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Bad SO \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/458/944/datas/gallery.jpg\"/>\n<p>\n<i>The bad SO</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Bad SO \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/458/947/datas/gallery.jpg\"/>\n<p>\n<i>Date night</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Play a lot of visual novels, wanted to make one with a caustic sense of humor</p>\n<h2>What it does</h2>\n<p>It's a visual novel</p>\n<h2>How I built it</h2>\n<p>Wrote the script, picutres drawn in Photoshop, coded in Python</p>\n<h2>Challenges I ran into</h2>\n<p>Writing a good script (it's not good)</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Writing dialouge</p>\n<h2>What I learned</h2>\n<p>The Renpy library, transparency in Photoshop</p>\n<h2>What's next for Bad SO</h2>\n<p>Maybe the ability for a player to insert their own lines</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">renpy</span></li></ul>\n</div>\n</div>", ["", ""]], ["Saundoritos95", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Saundoritos95 \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/458/821/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Windows95 is cool while also maintaining meme status.</p>\n<h2>What it does</h2>\n<p>The chatbot (a.k.a. ShitBot) can recognize some text patterns. For example, if you say <code>bee movie script</code>, then it will send the entire Bee Movie script. If you forget what you can ask ShitBot, you can simply ask for <code>help</code>! There's also some other fun things like a cool playlist, pictures of cute dogs, and a video on how to use Windows95.</p>\n<h2>How I built it</h2>\n<p>There is <strong><em>a lot</em></strong> of jQuery and CSS. </p>\n<h2>Challenges I ran into</h2>\n<ul>\n<li>Figuring out how to make the \"windows\" movable and bring them to the front.</li>\n<li>Trying to make the windows resizable (still trying to figure that out tbh).</li>\n<li>Styling the windows and entire start menu/toolbar.</li>\n</ul>\n<h2>Accomplishments that I'm proud of</h2>\n<ul>\n<li>Making a dope playlist</li>\n<li><em>All of the styling</em></li>\n<li>My beautiful shitbot :')</li>\n</ul>\n<h2>What I learned</h2>\n<p>I think I really refined my CSS skills with this project.\nTrying to make things look as similar as possible to the OG Windows95 wasn't an easy task.</p>\n<h2>What's next for Saundoritos95</h2>\n<ul>\n<li>Minesweeper</li>\n<li>Make the windows resizable</li>\n<li>Pull in all of my instas (in batches of course)</li>\n<li>Add in admin feature to edit resume online</li>\n<li>Add contact/email form</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ruby-on-rails\">ruby-on-rails</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ruby\">ruby</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://saundoritos.herokuapp.com/\" rel=\"nofollow\" target=\"_blank\" title=\"http://saundoritos.herokuapp.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>saundoritos.herokuapp.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Game of Lives", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Conway's Game of Life, a classic, interactive cellular automaton model that can grow with infinite possibilities</p>\n<h2>What it does</h2>\n<p>Letting the user build and grow his/her own cellular \"life\", and compete with others with both luck and strategy</p>\n<h2>How we built it</h2>\n<p>Python &amp; Tkinter GUI Library\nversion control with Github</p>\n<h2>Challenges we ran into</h2>\n<p>Our team has very limited experience with Python language and totally unfamiliar with the GUI\nThe most confusing bug is that local variables always referenced before assignment among several functions</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Both 1P and 2P games are pretty fun!!!\nActually, we created an interesting, seemingly simple but highly replayable game in a short period of time and of little prior experience</p>\n<h2>What we learned</h2>\n<p>Programming design with Python, use of Tkinter GUI, principles of cellular automata, building a group project with intensive team programming and use of version control</p>\n<h2>What's next for Game of Lives</h2>\n<p>That's what we'll first decide after getting some precious sleep :)\nMaybe add a explosion mode where two annihilated cells explode at the center and clear its 8-grid surroundings\nAdd a consecutive step single player mode where the player can create the own life form and watch it evolve automatically\nTransplant this app to a web app or a mobile app</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">tkinter</span></li></ul>\n</div>\n</div>", ["", "", "", ""]], ["Badlingo", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/ZrfCgTTOuf0?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Badlingo \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/459/060/datas/gallery.jpg\"/>\n<p>\n<i>Badlingo, the best language learning app since Duolingo</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Badlingo \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/459/062/datas/gallery.jpg\"/>\n<p>\n<i>Natalie is thinking hard of a word...</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Badlingo \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/459/063/datas/gallery.jpg\"/>\n<p>\n<i>Hi Alexa!</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Badlingo \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/459/067/datas/gallery.jpg\"/>\n<p>\n<i>Thanks Alexa, you're the best!</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We won Alexa in a hackathon raffle several months ago and never used her until just last week. When we finally got her working, we fell deeply in love with what she's able to do. Now, we want to take Alexa one step further: speaking in languages besides English and German. What's more, Alexa would be able to use her new found linguistic abilities to teach us new languages! We call this new skill: Badlingo.</p>\n<h2>What it does</h2>\n<p>Badlingo is a skill which anyone can install on their Alexa. The conversation begins when you tell Alexa to launch Badlingo, and specify a language to learn (currently French, German, Italian, Spanish, Dutch, Polish and English). Alexa will then ask for a word to translate, and you will have to repeat the word until Alexa is happy with your pronunciation. When she is, you may tell Alexa a new word or a new language to learn.</p>\n<h2>How we built it</h2>\n<p>Badlingo is built using a node.js backbone, where the codes are executed on the cloud via AWS Lambda Function powered by Alexa Skills Kit Library. The ARN is used to connect the Alexa skill to the codes on the AWS Lambda Function, providing the skill with the backend functionality. The audio requests from the user are mapped to utterances, which are then parsed into JSON objects and sent as inputs to the Google Translate API functions in the AWS Lambda Function. We used RapidAPI as a platform to run the Google Translate API functions for convenience. The translated outputs are then sent to Alexa to be output as audio.</p>\n<h2>Challenges we ran into</h2>\n<p>Getting Alexa to understand our weird English accents</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>This is the first time we hacked Alexa, and used Google Translate and Rapid APIs! </p>\n<h2>What we learned</h2>\n<p>Alexa is awesome, and everyone can use her to make radical new stuff</p>\n<h2>What's next for Badlingo</h2>\n<p>Support for more languages (Russian, Arabic, Mandarin, etc)</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-alexa\">amazon-alexa</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/alexa\">alexa</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://www.jonathantan2017.wix.com/badlingo\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.jonathantan2017.wix.com/badlingo\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.jonathantan2017.wix.com</span>\n</a></li>\n<li><a href=\"https://github.com/chinnatalie/badlingo\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/chinnatalie/badlingo\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the code that runs the Badlingo skill on Alexa, created the video and website too.", "I worked on the code that runs the Badlingo skill on Alexa."]], ["Serotonin", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>Serotonin</h1>\n<p>Simple and lightweight Chrome extension that inspires positivity and productivity.</p>\n<h1>What it does</h1>\n<p>Inspired by simplistic and beautiful new tab pages like Momentum and Embark, Serotonin is an extension that seeks to spread happiness through positive messages. Rather than incorporating a traditional clock, we built a countdown timer that reminds users how much time they have left to make their day amazing. At the end of the day, users have the option of submitting a short snippet about what made their day so great\u2014-then waiting a few seconds to read about what made someone else's day incredible.</p>\n<p>Background images were curated and integrated into the extension thanks to <a href=\"https://unsplash.com/developers\" rel=\"nofollow\">Unsplash</a>.</p>\n<h1>What's next</h1>\n<p>We're always looking to improve UI and UX, and hope to make this extension available on the Chrome Web Store soon.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/ssxyang/happy\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ssxyang/happy\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]]]