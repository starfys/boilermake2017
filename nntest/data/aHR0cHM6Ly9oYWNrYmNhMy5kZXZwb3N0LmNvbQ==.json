[["Fire in the Hole", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Fire in the Hole \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/186/datas/gallery.jpg\"/>\n<p>\n<i>The Main Assembly</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Fire in the Hole \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/189/datas/gallery.jpg\"/>\n<p>\n<i>Early Failed prototype </i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Fire in the Hole \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/198/datas/gallery.jpg\"/>\n<p>\n<i>Early Prototype</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Fire in the Hole \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/212/datas/gallery.jpg\"/>\n<p>\n<i>The Main Control box</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Fire in the Hole \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/233/datas/gallery.jpg\"/>\n<p>\n<i>The Base</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Fire in the Hole \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/234/datas/gallery.jpg\"/>\n<p>\n<i>The Base and Soldering Iron</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>The Soldering iron is a vital tool to the electrical engineer and hobbyist. After many years of experience with soldering, both Jake and I were curious what new innovations we could bring to the conventional, plug-in, soldering iron. Soldering by itself, requires multiple tools, such as a fume extractor, lighting, and other hand tools. Our goal was to see how much we could streamline this design on the Soldering Iron itself. </p>\n<h2>What it does</h2>\n<p>The Soldering iron is a conventional, plug-in iron without any temperature control. Anyone who has some experience with soldering knows that temperature control is vital to the iron's ease of use and longevity. We are using Pulse Width Modulation signals from an Arduino Uno to a Solid State Relay, which switches the Soldering Iron on and off at a rapid rate. This system of PWM can help maintain a constant, operational temperature without overheating, which is a common problem of these types of soldering irons. We also have an optical sensor which detects when the iron is placed within its base. When the soldering iron is in the base the optical sensor is triggered, and the PWM signal will eventually slow down. This will cool the iron to a set, idle temperature. This will increase the life of the iron, and draw less power when not in use. Once the iron is removed form the base, the PWM signal will resume as normal, and the iron will rise to its operational temperature. Additionally, we have used an aluminum tube, vinyl tubing, and a fume extractor, to build a small fume extraction system attached straight to the iron. Lastly, there was a small LED attached to the iron to increase visibility while working with the iron. </p>\n<h2>How we built it</h2>\n<p>We started off with a simple Soldering iron, and started designing new attachments for it. We 3D printed the clips for the fume extractor tube and LED, and routed the extraction tube, LED wire, and Iron wire to a central control box. Additionally, we glued the optical sensor onto the base for the soldering iron, and routed another set of wires to the control box. Within the Control box, we soldered a prototype arduino shield for this project, which held the inputs for the Solid State relay and optical sensor. The arduino is powered but a 9v Power adapter, while the iron itself is powered by just AC voltage. </p>\n<h2>Challenges we ran into</h2>\n<p>So initially the fume extractor that we had built, did not have enough suction for the fume extractor assembly of our project. We got to remedy this problem with a high pressure 40mm fan that was generously donated to our project. Additionally, there were no arduino temperature sensors, such as TMP36 or DS18B20 that could really handle the high temperatures of the soldering iron, so we used a thermocouple to measure temperature instead. While developing our code for the regulation of our soldering iron, we also ran into a number of problems. One rather frustrating and time consuming example of these problems would be the overflow of memory when dealing with time counts. For the standby-temperature-drop to kick in after a duration of idleness, we used the millis() command and an unsigned int assigned to a reference time to compare time differences as a means of calculating the desired duration of time. We ran into our problem when, after only around 65 seconds, the reference time would overflow and start recounting from 0 milliseconds, while the millis() command would not overflow for about 50 days. Though this wasn't a terribly challenging problem to correctly address, the fact that it didn't arise until after the code functioned correctly for some time made it rather elusive while troubleshooting.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We managed to successfully 3D print many of our parts. There were many obstacles especially with the fume extraction system that we struggled with, but managed to push through regardless. Our project is also applicable to any soldering iron of the same size, and more with slight modifications!</p>\n<h2>What we learned</h2>\n<p>We learned a variety of skills from checking values at points in code to troubleshoot, to an easy way to expand a small hole without a drill by sticking the end of a pair of needle nose pliers in it and twisting to grind away at the inner diameter. We learned how to use a solid state relay and what it really is. We also learned the important difference between flow and pressure, as well as the importance of resistors when dealing with IR LEDs! Overall, we learned these and plenty other techniques for brainstorming, improving and, of course, troubleshooting our project to make the presentable product we have today.</p>\n<h2>What's next for Fire in the Hole</h2>\n<p>Perhaps streamlining the design and making the circuit more space efficient. Making the temperature control more accurate with the incorporation of a thermocouple directly attached to the iron. We will definitely look to add ideal-temperature-range indicators for popular solder gauges and types. We'll be sure to ignite the fire in the hole!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/hardware\">hardware</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/3dprinting\">3dprinting</a></span></li><li><span class=\"cp-tag\">soldering</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/autodesk\">autodesk</a></span></li><li><span class=\"cp-tag\">cura</span></li><li><span class=\"cp-tag\">cad</span></li></ul>\n</div>\n</div>", ["", ""]], ["Hacker Heist", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Hacker Heist \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/748/datas/gallery.jpg\"/>\n<p>\n<i>VR Perspective (with gem)</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Hacker Heist \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/749/datas/gallery.jpg\"/>\n<p>\n<i>VR Perspective (with guard)</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Hacker Heist \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/750/datas/gallery.jpg\"/>\n<p>\n<i>Security Guard Perspective</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Hacker Heist \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/751/datas/gallery.jpg\"/>\n<p>\n<i>The developers</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Virtual reality games are usually for first-person, single player uses only. We decided to develop a more sociable game in which friends are able to co-op with each other and compete with their skills.</p>\n<h2>What it does</h2>\n<p>Hacker Heist is a 3 person, asynchronous virtual reality game. The game's setting takes place in the midst of the night at a museum, in which a burglar, from a first person VR perspective in the Oculus Rift, attempts to steal treasures and escape. The 2 other players act as security guards and view the museum map from a top-down perspective, hunting down the burglar with flashlights.</p>\n<h2>How I built it</h2>\n<p>Hacker Heist was built using the game engine Unity and the language C#, with 3D models and art created in Autodesk Maya and Adobe Photoshop. The virtual reality headset used is the Oculus Rift Development Kit 2, and the 3 controllers are PS4 dualshock controllers.</p>\n<h2>Challenges I ran into</h2>\n<p>Challenges that we ran into throughout the night include time constraints and game balance design so that there is a fair balance between the players so that one doesn't have an advantage over another.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We were able to create a sociable cooperative game for virtual reality that allows a person in the headset to interact with people in the same room as them, which is not a common theme among VR games today.</p>\n<h2>What I learned</h2>\n<p>We learned how to develop asynchronous VR games and make virtual reality more social.</p>\n<h2>What's next for Hacker Heist</h2>\n<p>Hacker Heist's map layout can continue to be expanded and added to for different gameplay levels, and a lot of the art can be improved and made more detailed.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/autodesk\">autodesk</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/maya\">maya</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/oculus\">oculus</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/photoshop\">photoshop</a></span></li></ul>\n</div>\n</div>", ["I worked with Amanda to design and plan the map where the players would walk around. I used Autodesk Maya to 3D model the environment, characters, and treasures. ", "", ""]], ["Reppin", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/i4WR-QZd-As?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Reppin \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/895/datas/gallery.jpg\"/>\n<p>\n<i>Loading Screen</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Reppin \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/829/datas/gallery.jpg\"/>\n<p>\n<i>Sign Up Screen</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Reppin \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/827/datas/gallery.jpg\"/>\n<p>\n<i>Filling out Info</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Reppin \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/828/datas/gallery.jpg\"/>\n<p>\n<i>Login Screen</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Reppin \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/826/datas/gallery.jpg\"/>\n<p>\n<i>Select Workout Screen</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Reppin \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/824/datas/gallery.jpg\"/>\n<p>\n<i>Analytics</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Obesity and associated health issues have become an epidemic in America. According to the National Institute of Diabetes and Digestive and Kidney Diseases <strong>68.8%</strong> of adults are considered to be overweight or obese and <strong>35.7%</strong> of them are considered obese. So far, most exercise apps have been unsuccessful in motivating people to stay healthy. Reppin looks to change that.</p>\n<h2>What it does</h2>\n<p>Repping utilizes <strong>social psychology</strong> combined with advanced technology to enable people to exercise. It uses proven scientific methods for motivating people to exercise when other methods fail. Reppin serves as a personal trainer and a friend throughout the process, constantly reminding the user of their stated goals. Reppin also features a repetition counter for exercises and analytics. This utilizes an advanced <strong>computer vision</strong> algorithm to distinguish repetition from the iPhone's camera input. </p>\n<h2>How we built it</h2>\n<p>We built Reppin in Xcode using Objective-C++ (A combination of Objective-C and C++) and Swift. We used openCV, an open source computer vision library, to perform the video analysis, and designed our own pattern recognition to identify individual repititions from that data.</p>\n<h2>Challenges I ran into</h2>\n<p>OpenCV is a very unstable library that tends to crash intermittently and cause merge conflicts on github. We struggled for a long time to make the app run consistently, but once we got it working we were quickly able to utilize the powerful framework to collect data for our pattern recognition algorithm. We also struggled with working on so many different computers. Due to the rapid release patterns of Swift, Xcode, and iOS, small version differences led to a multitude of issues that we had to address. On the psychological side, it was very difficult to apply some of the lessons we learned at the Code for Good workshops into the project.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are proud of overcoming the problems with openCV and Xcode so quickly. We are also very happy that we were able to complete the full functionality of our app in such a short time period, while making it visually appealing. In addition, we ulitmately succeeded in implementing a lot of the social psychology concepts that we learned about, which was a huge triumph as we had never attempted anything like this before.</p>\n<h2>What we learned</h2>\n<p>We learned to make sure to compare version numbers before every hacakthon. More importantly, we learned how to work with immense and unreliable frameworks, and to collaborate on a large project effectively. We also learned a significant amount about social psychology and the ways that it can influence app users.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ios\">ios</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag\">computer-vision</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xcode\">xcode</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/objective-c\">objective-c</a></span></li></ul>\n</div>\n</div>", ["I collaborated with Sebastian on the UX design, developed the main counter screen, and designed the app icon.", "", "", "", "", ""]], ["Drumm.Tech", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/AiayoA6B83o?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>While brainstorming ideas, we remembered an article in the news a few months ago related to learning the piano (<a href=\"https://research.cc.gatech.edu/ccg/?q=projects/mobile-music-touch-mmt\" rel=\"nofollow\">Georgia Tech</a>). Essentially, researchers found that delivering patterned motor vibrations could improve the speed at which users learned to play songs on the piano. More interestingly, participants in the study could learn the piano passively using those motors while participating in another task. Some of us have experience playing the snare drums in a band environment. By extending the results of this study, and throwing in some other features, we created an interesting <strong>educational</strong> hack that makes music education more effective.</p>\n<h2>What it does</h2>\n<p>The various components of Drummtech provide improved drum education in various ways. The Pebble watch provides the timed vibration component from the news article we read. An app on the watch fires off the vibrator at time intervals corresponding to the song being learned. The Myo band analyzes the form of the drummer and provides feedback on whether they are playing with correct form. The Arduino underneath the drum pad delivers feedback to ensure that the drummer is playing with enough force and on the correct part of the drum. All these technologies come together to create the multi featured Drummtech educational system.</p>\n<h2>How we built it</h2>\n<p>This project was built using Myo armbands, cardboard, Pebble Time Watches, 3D printed PLA,  an Arduino, and the software glue for all this technology. </p>\n<h2>Challenges we ran into</h2>\n<p>Working with multiple Myo bands and keeping them synchronized was difficult. Doing signal analysis on the Myo output was an interesting problem which required some mathematics. Building a prototype device to encapsulate all the components was not easy due to our lack of access to the 3D printer and other supplies.  Creating a workflow to develop for the Pebble using only a Chromebook was an stimulating challenge. Getting our domain verified in time (it took 9 hours) was a challenging time constraint. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are proud of self sourcing a pair of drumsticks with the supplies we had. All the algorithms for this were fun problems to solve and bringing the project togther is a nice accomplishment. </p>\n<h2>What we learned</h2>\n<p>We learned Arduino breadboarding, PLA Welding, basic 3D printing techniques, the Pebble API, the Myo API and how to use pointers in C++.</p>\n<h2>What's next for Drumm.Tech</h2>\n<p>A fully featured version of this system could be sold to school bands and music schools. This is an interesting educational opportunity that could bring music education into the future.</p>\n<h2>Behind the name</h2>\n<p>A drum tech, or snare tech, is a person who makes sure that the drummers in a band have proper form and are using the correct technique. They are also in charged with the responsibility of ensuring that proper musical expression is abundant in the percussionist's playing. Thus, we chose a .tech domain to increase SEO recognizability and to offer a unique feel to our product.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/myo\">myo</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag\">construct-2</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://drumm.tech\" rel=\"nofollow\" target=\"_blank\" title=\"https://drumm.tech\">\n<i class=\"ss-icon ss-link\"></i>\n<span>drumm.tech</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I wrote the Pebble App, built the box, and I had ideas.", "I 3d printed the drum sticks, modified the website using bootstrap, helped to create content for our website and presentation, created the Arduino shock sensor that is located under the drum, designed the logo, and influenced the development of the general concept behind Drumm.Tech", "I developed the Myo application which tracks the drumming movements based on signals from the Myo bracelet fitted on to the forearm. ", "I helped print the drumstick, helped design and build the website, wrote documentation, and was in charge of video production. "]], ["Biling-URL", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Biling-URL \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/412/datas/gallery.jpg\"/>\n<p>\n<i>After translation</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Biling-URL \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/413/datas/gallery.jpg\"/>\n<p>\n<i>Before Translation</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Biling-URL \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/450/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Biling-URL \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/451/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Biling-URL \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/452/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Biling-URL \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/453/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>As a team we wanted to learn languages fast, without the hassle of using intensive external programs or paid programs. Our product provides an easy way for people to learn over 60+ languages by reading any online article avaliable so that people can learn in the way they want to, in a way that they will learn the essentials quickly.</p>\n<h2>What it does</h2>\n<p>Biling-URL takes the text from any webpage and over time, translates increasingly more words from English to the language of the user's choosing. Over a selected time frame, every time an article is accessed, our extension will take words and translate them into another language, increasing our users knowledge of the words from a firsthand experience.</p>\n<h2>How we built it</h2>\n<p>Biling-URL was programmed in JavaScript and JSON, implementing the Google Chrome Web API and Yandex's Language Translation API. JavaScript is used as the logic base for the project, where we increment translated words per page over a time period and keep track of all of the words being translated. JSON is used in conjunction with JavaScript to keep the manifest files and store the web data. The Google Chrome Web API allowed us to modify Chrome web pages to change words to their translated counterparts. Yandex's API allowed us to easily access and translate words through the web without using an intensive external program.</p>\n<h2>Challenges we ran into</h2>\n<p>We had many issues with implementing Yandex's API, since none of us knew JavaScript to begin with and we needed to learn it to complete this project. We enlisted the help of Mentors and Stack Overflow to teach us the tools we needed to correctly implement this software. Another issue that came up was that we were unable to translate many words at a time using Yandex's API and we had to create a complex workaround to resolve the issue.To make the software more intuitive, it needs to be able to learn words from the articles its reading and translate them, however we ran into major issues trying to add words to the extension's dictionary.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are very proud that within this small amount of time we were able to become proficient at a new language we had never learned before and we were able to create a functioning web application that would be able to help others. As a team we accomplished something we did not believe possible, and created an application we view on par with other language-development software.</p>\n<h2>What we learned</h2>\n<p>Through this project we learned the true power of Google's Chrome Extensions and how we can manipulate webpages and use JavaScript for constructive purposes. This project began as a personal way for us to learn languages in a way we saw fun, however we expanded into an intuitive way for everyone to learn new languages. </p>\n<h2>What's next for Biling-URL</h2>\n<p>We hope to continue working on this project and create a faster and more efficient replacing algorithm in the future, and color code the replaced words so that people know which words have been altered. We also hope to track data collected in language proficiency and supply our users with updates about their progress into learning a new language. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/chrome\">chrome</a></span></li><li><span class=\"cp-tag\">yandex-translator</span></li><li><span class=\"cp-tag\">atom</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/ananddtyagi/Language-learner\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ananddtyagi/Language-learner\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on retrieving clean data from the translation API for the translation of the words. I also  worked on implementing the Initial Start Time for the application. ", "", ""]], ["EyeC", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"EyeC \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/152/datas/gallery.jpg\"/>\n<p>\n<i>A text alert sent from EyeC</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"EyeC \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/236/datas/gallery.jpg\"/>\n<p>\n<i>Face detection in action</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>EyeC</h1>\n<p>A facial recognition program that uses a webcam to find faces within a video feed. Once a face is found, a picture will be taken and sent to the phone(s) of the owner(s) of the webcam.</p>\n<ul>\n<li>Year: 2016</li>\n<li>Languages: C#, HTML, JavaScript</li>\n<li>Created by Yeonjoon Yoo, Adeola Uthman, and Christian Cosgrove. </li>\n<li>Submission for the 2016 Bergen County Academies Hackathon, hackBCA III.</li>\n<li>Winner for \"Best Startup\" by NYTechDay at hackBCA III.</li>\n</ul>\n<p><a href=\"https://github.com/BoolClub/EyeC/blob/master/EyeCbinaries.zip?raw=true\" rel=\"nofollow\">Download binaries</a></p>\n<h1>Documentation</h1>\n<h2>Executable File</h2>\n<p>Ensure that your Windows machine has either an internal or external webcam. To use EyeC, open the <code>EyeC.exe</code> file. The webcam will turn on and display the surroundings. As soon as it detects a face, it will display a red square around it. If a phone number has been specified, it will snap a picture and send it to the user's phone through MMS.</p>\n<h2>Adding phone numbers</h2>\n<p>Multiple people can recieve text alerts about the person whose face was just detected. Before receiving messages, though, you must be sure that each user's phone number is in the database. This comes in handy for an entire family, for example. Each person must first add his/her phone number by visiting the page <code>:8080/index.html</code> (which runs off of a web server on the host machine; ip address of the host machine). Once the numbers are added, the program will know to send a message to each number whenever it detects a face through the webcam.</p>\n<h1>Applications</h1>\n<ul>\n<li>One application of this program is in home security. For example, if a person walks up to a door that has a webcam connected to a computer with this program installed, the program will try to recognize that there is a person at the door and snap a clear picture of the person's face. </li>\n<li>The owner(s) of the webcam will recieve a text message that contains a picture of the person at the door. That person can then act accordingly without putting his/her-self at risk. If the person at the door is a criminal, for example, you would not want to go anywhere near the door. However, from a safe distance you will recieve a text alerting you of who is there.</li>\n</ul>\n<h1>Challenges</h1>\n<p>Configuring the computer vision library EmguCV was a major challenge. We needed to familiarize ourselves with the library and make use of existing examples. For instance, we combined two example projects packaged with EmguCV, <code>CameraCapture</code> (which provided realtime webcam output) and <code>DetectFace</code> (a single-frame facial recognition demo). </p>\n<p>As we accustomed ourselves with Twilio, we realized that in order to send images via MMS, the image must be uploaded on the Internet. We considered hosting images using AWS but were unable to access the service. Instead, we decided on the Imgur API. Our program uploads each snapshot to Imgur and feeds this URL to Twilio, which then sends the picture to each user.</p>\n<p>We spent a large portion of our time improving the accuracy of the face detection. Occasionally it would recognize outside objects as faces, and so to combat this, we check whether the face has persisted a certain number of frames.</p>\n<h1>Future plans</h1>\n<p>This technology is an inexpensive alternative to home security systems; many families have leftover computers and webcams that effectively make this technology free. If we continued with this project, we would create a compact PC to act as the host machine for this software.</p>\n<h1>Technologies</h1>\n<p>In the spirit of the hack, we found ways to cement together many different technologies to make a functional product:</p>\n<ul>\n<li><a href=\"https://www.twilio.com/\" rel=\"nofollow\">Twilio</a></li>\n<li><a href=\"http://api.imgur.com/\" rel=\"nofollow\">Imgur</a></li>\n<li><a href=\"http://www.emgu.com/wiki/index.php/Main_Page\" rel=\"nofollow\">EmguCV</a></li>\n<li>A basic web server, courtesy of <a href=\"https://codehosting.net/blog/BlogEngine/post/Simple-C-Web-Server.aspx\" rel=\"nofollow\">David's Blog</a></li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag\">emgu</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/imgur\">imgur</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/net\">.net</a></span></li><li><span class=\"cp-tag\">imgurapi</span></li><li><span class=\"cp-tag\">emgucv</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Authman2/EyeC\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Authman2/EyeC\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Politext 2016", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Politext 2016 \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/445/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Politext 2016 \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/446/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Politext 2016 \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/447/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>I wanted to apply what I learned during my time at the Web Development path, and since the elections are a current thing, I wanted to pull data and put it into a simple format that can be frequently asked for by almost anyone!</p>\n<h2>What it does</h2>\n<p>Once a user sends an SMS to the designated phone number with the correct format, the program will parse it and return formatted JSON data back to the user through an SMS. They can search by political party (gop/dem) and then a state's abbreviation, which will give all candidates who participated in that Primary/Caucus. The user can also add as many candidates as they want to find their specific ratings as well. Here are a few examples:</p>\n<p>dem MI Sanders (Sanders' rating in the 2016 Michigan Democratic Presidential Primary)</p>\n<p>gop AZ Cruz (Cruz' rating in the 2016 Arizona Republican Presidential Primary)</p>\n<p>gop IL (Returns all ratings in the 2016 Illinois Republican Presidential Primary)</p>\n<p>dem IA Clinton Undecided (Clinton's and the Undecided vote in the 2016 Iowa Democratic Presidential Caucus)</p>\n<h2>How I built it</h2>\n<p>I used python with the JSON, flask, and twilio libraries in order to build this app. I collected the JSON data from the Huffington Post's Pollster API (I don't think the Associated Press API is public), and used flask and twilio which will retrieve messages and respond appropriately.</p>\n<h2>Challenges I ran into</h2>\n<p>My initial challenge was finding an API. I originally wanted to use the AP Elections API but I realized they don't really give that out. I then stuck with the <a href=\"http://elections.huffingtonpost.com/pollster/api\" rel=\"nofollow\">HuffPost's Pollster API</a>, using their json files in order to provide live updates of the primaries.</p>\n<p>When I initially got a working version, it ran really slowly, but that was only because I kept reloading the JSON after each query, which wastes a lot of time. I also had to account for a lot of user errors, such as spelling mistakes and misaligned parameters.</p>\n<p>When using the Twilio API I didn't realize that there was an automated response for saying 'help', which I tried to use in order to initiate the user with this app. I spent a lot of time trying to go around that roadblock before realizing that I should just set another command for it, like '!help'. Looking back at it, that roadblock was just super silly.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I'm proud of providing a means of communication through the internet, despite it being kind of niche. I spent hours on this project and I'm really glad with how neat the output is, even though the code is messy. Since the elections are still going on, updating this app with more features would be a blast to get back into.</p>\n<h2>What I learned</h2>\n<p>I learned an immense amount about web development and communication through the internet. Both of these topics were really fun to learn about, and not brutally difficult to get into, so I got to enjoy myself while also gaining a valuable learning experience. I had to ease my way back into Python again since I mainly do Java, so I relearned the syntax of the language.</p>\n<h2>What's next for Politext 2016?</h2>\n<p>I hope to add more features to this app, the Pollster API has topics span outside of the 2016 Presidential Elections, such as including the Senate Primaries, House and Governor Elections, and favorable ratings. My next step would probably provide a more specific format that will encompass these topics in a user-friendly way, so they can easily retrieve information that only benefits them, with data spanning as far back as 2012.</p>\n<p>More user input would be something I'd like to add as well, maybe a simple poll that shows what candidate the user-base is favorable towards. There really is only expanding at this point, with an increasing want for features.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/BrianMejia/Politext\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/BrianMejia/Politext\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["HackBCAIII", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>I used microsoft translator and twilio api to make something that acts as a intermediate translator for sms messages</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/DavidYi/HackBCAIII\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/DavidYi/HackBCAIII\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["DoctorWatson", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"DoctorWatson \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/731/datas/gallery.jpg\"/>\n<p>\n<i>Be connected with medical professions that can best assist in your situation</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"DoctorWatson \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/730/datas/gallery.jpg\"/>\n<p>\n<i>Minimalistic and elegant UI.  Quickly and effectively find a professional to assist your situation.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"DoctorWatson \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/729/datas/gallery.jpg\"/>\n<p>\n<i>Chat with medical professionals instantly and anywhere!</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We live in a world where we want information instantly...If I want to know the daily weather forecast I open the weather channel app, If I want to know the capital of New Zealand I search it on Google.  However, there is nothing that enables me to instantly receive professional advice about potential medical concerns.  We wanted to create a middle ground for individuals who often will neglect going to the doctors or hospital for fear of financial hardship.  Through utilizing DoctorWatson's professional network of doctors the user can receive advice and potentially avoid injury from not going to seek in person medical assistance. </p>\n<h2>What it does</h2>\n<p>DoctorWatson utilizes the power of IMB's Watson AI to process the users naturally spoken medical complaint.  Then through mapping the words and phrases through relevance we determined the best fit specialist type to assist the user.  Next we parse through our database of Doctor users and find a doctor that is free and can best assist the user.  We then show the best fit doctor to the user, if the user likes the doctor they can then chat and discuss the health issue.  If the user does not like the doctor we suggested, they can request for a new one.</p>\n<h2>How we built it</h2>\n<p>We built it utilizing Xcode and swift as the primary language.</p>\n<h2>Challenges we ran into</h2>\n<p>Neither of us had experience with the artificial intelligence tool IBM Watson.  Therefore, getting that API to work was very difficult.  Further, it is being updated daily and the guides were outdated so we had to dive deep into the API code to determine how to utilize packages, functions, and objects.  Further implementing the chat feature proved to be more difficult than initially planned.  We really wanted to implement a system that was as close to real time chatting as possible.  Our high expectations were eventually achieved, but it proved to be a difficult task.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Look how polished it looks!!!  We are also proud that we were able to try to solve a global problem - providing professional medical consulting instantly and from anywhere in the world :)</p>\n<h2>What we learned</h2>\n<p>Start small.  As put in the opening ceremony, \"Make something crappy today,\" meaning make something that has the potential to be further improved.</p>\n<h2>What's next for DoctorWatson</h2>\n<p>Correcting the phone call feature between patients and doctors.  Then implementing a live video chatting feature for the doctor to provide a more accurate remedy .  Lastly, we plan on implementing the payment system between the users and the doctors.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ios\">ios</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/core-animation\">core-animation</a></span></li><li><span class=\"cp-tag\">ibm</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ibm-watson\">ibm-watson</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/telegram\">telegram</a></span></li><li><span class=\"cp-tag\">ai</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/indigothm/DoctorWatson\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/indigothm/DoctorWatson\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["HandyTune", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"HandyTune \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/610/datas/gallery.jpg\"/>\n<p>\n<i>The guitar attached to the Arduino.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"HandyTune \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/611/datas/gallery.jpg\"/>\n<p>\n<i>The Arduino code, attached to the breadboard and Arduino.</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We are guitar players and we both know that while tuning does not require a great amount of time or skill, it would be more advantageous to have a machine tune it perfectly in half the time. We decided hackBCA III was the <em>perfect</em> place to do this, as we estimated that this project would take approximately 18 hours to make, and it was a hardware hack with integrated software.</p>\n<h2>What it does</h2>\n<p>A sound sensor positioned just under the guitar strings captures the frequency at which the guitar is being played at and sends it to an Arduino. The Arduino takes that value and compares it to the frequency of the string at perfect tuning, which is already programmed into it. It then turns a stepper motor attached to the tuning pegs either clockwise or counterclockwise depending on whether the frequency is lower or higher than the actual one. It immediately stops as soon as it hits the right frequency, which it will know because the guitar player will keep playing that string until the stepper motor stops turning.</p>\n<h2>How we built it</h2>\n<p>Robert was the head of the engineering efforts, and I headed the programming. He made very precise measurements of the guitar tuning peg with a micrometer and made models of them on Autodesk Inventor. He then used the 3D printers to print them out. I obtained an Arduino Uno, a stepper motor, and a sound sensor, and connected them all together and also to code on my Macbook. We then ran tests on the guitar to check if it was working correctly.</p>\n<h2>Challenges we ran into</h2>\n<p>We ran into a <strong>major</strong> problem too late into the hackathon to change it: the sound sensor. We had obtained a Grove Sound Sensor that was rated highly on its ability to capture sound at different volumes. However, this ability clearly did not extend to hearing frequencies, as it would wildly fluctuate from 0 Hz to 19000 Hz on the same string being plucked at the same rate. Because of this, the stepper motors, although they worked perfectly, could not properly tune the guitar. Another problem we ran into were failed prints and incorrect tolerances on the 3D printer, which cost us a lot of time. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We definitely did <em>not</em> expect to finish this project by the end of the hacking today, and yet here we are with a completely finished working product. The only thing we could improve now is the sound sensor, to a sensor specifically built for frequencies. Also, we are proud of learning how to use the FFT process for our Arduino code, because we had never worked with anything so complex before. </p>\n<h2>What we learned</h2>\n<p>We learned that we should not rely too much on supplies given to us from the hackathon, because although they were sent out and certainly received with good intent, they are built for the general audience and not for our specific needs. Thus, we should bring all our major equipment with us next time, and leave only the small assignments, like breadboarding and soldering, to the hardware hacking materials.</p>\n<h2>What's next for HandyTune</h2>\n<p>We definitely want to replace the sound sensor with a frequency sensor. We also want to find a better way to secure the sound sensor to the guitar, because the tape might interfere with packaging and the sound output. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag\">sound-sensor</span></li><li><span class=\"cp-tag\">stepper-motor</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/3dprinting\">3dprinting</a></span></li></ul>\n</div>\n</div>", ["I worked on the Arduino programming and the breadboarding. ", "Constructed mechanism using 3D printing. Wiring + modeling + demoing the guitar."]], ["komodo", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>After listening to the IWE presentation, we realized that many people are unable to accomplish their goals because they lack the system of motivation necessary to do so. We thought that an interesting problem to solve was how people find it very difficult to read as much as they would like to. Reading  boosts a person\u2019s overall well-being. A person who reads is 2.5 times less likely to develop Alzheimer\u2019s Disease, and reading can reduce stress by up to 68%, according to <a href=\"this%20source\" rel=\"nofollow\">http://www.realsimple.com/health/preventative-health/benefits-of-reading-real-books</a>. In addition, reading can be easily quantified in terms of number of pages, making it the ideal target for a motivational tool.</p>\n<h2>What it does</h2>\n<p>Komodo is a tool for motivating you to read more. Komodo allows you to  set reading goals for yourself and receive motivational SMS messages, powered by Twilio, whenever you make progress towards these goals. You can also interact with your friends, as Komodo sends an SMS message to a your friends when you complete a book. You can also see which books your friends are currently reading.  Komodo provides a supportive network and a valuable tool for accomplishing your goal of reading more.</p>\n<h2>How we built it</h2>\n<p>We used Python for the backend and used Flask as the Python framework. We used the Twilio API to send the motivational reading text messages. The website was created in HTML, CSS, and JavaScript.</p>\n<h2>Challenges we ran into</h2>\n<p>It was difficult to make the Twilio components work properly. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We were able to create a functional website with all core features present at our first hackathon and were able to successfully overcome our difficulties and integrate Twilio with the website. We were able to create progress bars and achievements.</p>\n<h2>What we learned</h2>\n<p>We learned how to use Twilio. We learned about which characteristics are needed of a product in order to motivate people to change their ways for the better.</p>\n<h2>What's next for komodo</h2>\n<p>We would like to implement MMS messages. We would also like to display images of the covers of books on the website, as well as to create true user login accounts and further integrate the social component.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/emiliu/komodo\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/emiliu/komodo\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Real Time Lead Detector for Water Supply", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Real Time Lead Detector for Water Supply \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/401/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Real Time Lead Detector for Water Supply \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/406/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>For two years, the people of Flint, Michigan were unwittingly drinking water contaminated by lead in poisonous concentrations. The residents had no idea that they were drinking water that could and would eventually lead to several serious medical conditions. They had no way of verifying that the dirty and off-smelling water was safe like the government told them.</p>\n<p>Most current lead testing devices are kits that are single use and need to be sent to a lab, using time and money. Our goal is not only to create an affordable and accurate lead detection system, but to keep a real time graph of lead levels that can be easily accessed from the Internet. Not only is our system for long-term use, there is no hassle of sending it to labs because the readings come at a constant interval.</p>\n<h2>What it does</h2>\n<p>The carbon paste electrodes (CPE) from the study, \u201cDetermination of Pb2+ ions by a modified carbon paste electrode based on multi-walled carbon nanotubes (MWCNTs) and nanosilica,\u201d detect Pb2+ ions in an aqueous solution. A voltage is created from this interaction. The NodeMCU circuit measures the amount of voltage from the lead (from a potentiometer in these tests) and prints out the voltage amount every 30 seconds. This data is sent to Adafruit IO but also our website, which can be accessed with Internet connection.</p>\n<p>The voltage is based on the concentration of lead, so theoretically, the amount of voltage measured can be correlated to how much lead is in the water. The NodeMCU detects the voltage and sends it to the Arduino code sensor. This is sent to a live feed at Adafruit *(link below) and can be accessed from the website (in Github). </p>\n<h2>How we built it</h2>\n<p>We learned about the Arduino and NodeMCU. We connected the NodeMCU to a breadboard, and since the voltage is 3.3V and we need it to be on a scale of 0 to 1V, we added two resistors of 220 ohms and 470 ohms. We connected the 3.3V, the Grounded, and the A0 pins to the circuit. We used a potentiometer to replace the lead detecting electrode. This is to verify that the NodeMCU picks up voltage information, which it does.</p>\n<p>Then, we created a model website to display this information to the public and to the user of the device. It shows the live feed of voltage. This would be useful when implemented in a pipe, so that the government can consistently check the lead levels. People can also make sure the water supply is clean for their children and safe for consumption.</p>\n<h2>Challenges we ran into</h2>\n<p>Our first step was figuring out how to detect lead in water. Through research, it seemed very difficult to find a chemical that reacted with lead safely and in a clear way. Fluorine reacts with lead (but \u201cvigorously\u201d). Chlorine reacts but it is endothermic. We thought about Sodium rhodizonate, which police use to determine bullet residue, and it causes a color change. However, that is not easily detectable by arduinos.</p>\n<p>Also, we had to figure out how to process that information. Luckily, we took classes on Arduino and The Internet of Things, which gave us the idea to use the NodeMCU with the Arduino coding language.</p>\n<p>Lastly, we had to figure out how to display it to the users. We created a website using HTML, which I (Sunny) learned for the first time today. Making the graphics and links work took some time, but we overcame the challenge.</p>\n<p>There was difficulty publishing the code we wrote for the website, even though it works on my computer. So, we included the raw files that can be downloaded onto another computer.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>This is my (Sunny's) first Hackathon and Nithya's second. We are a two-girl team that is relatively inexperienced, and in less than 24 hours, we were able to:\n    -brainstorm ideas \n    -research properties of lead and methods for detection\n    -take classes and get ideas (Arduino and Internet of Things)\n    -learn HTML and website making\n    -learn about Arduino structure and capabilities\n    -use Arduino coding language\n    -modify code in HTML and CSS\n    -use Adafruit and Arduino for the first time\n    -make a circuit with resistors, a potentiometer, and NodeMCU, connected by USB</p>\n<h2>What we learned</h2>\n<p>See above :)</p>\n<h2>What's next for Real Time Lead Detector for Water Supply</h2>\n<p>The goal location of this product would be for widespread municipal use. Attached to pipes that supply water, the lead water detectors would give a regular update on the lead levels in the water and warn citizens and government officials when the lead amount goes above the healthy amount (15 ppb). Currently, we will start with purchasable, single home detector. We want to expand it to municipal use.</p>\n<p>Future improvements are making it cheaper and smaller (possibly a ring shape to fit around the faucet). It could also be tweaked to detect other types of contaminants in the water than just lead, and be accessed from phones and receive alerts if lead amount over healthy. We want to actually test with electrodes and lead solution.</p>\n<h2>Impact</h2>\n<p>NYC school water supply has not been tested in 10 years. There are problems being reported in Newark schools with drinking water. With this new innovation in water monitoring, there is regular testing (can set it to every hour, every day, etc.). There is transparency, because the information will be on the internet and be public domain; government and public will know everything. People can check for public health and safety.</p>\n<p>The water crisis of Flint Michigan could have been prevented by consistent check of lead concentration in the water supply. Hopefully, this will revolutionize water infrastructure and ensure public health.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">nodemcu</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag\">resistors</span></li><li><span class=\"cp-tag\">breadboard</span></li><li><span class=\"cp-tag\">circuit</span></li><li><span class=\"cp-tag\">potentiometer</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/adafruit\">adafruit</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/sunnyfeng/Real-Time-Lead-Detector/tree/master/Lead_Levels_Program_for_NodeMCU\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/sunnyfeng/Real-Time-Lead-Detector/tree/master/Lead_Levels_Program_for_NodeMCU\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://io.adafruit.com/yfeng1997/feeds/lightlevel-1\" rel=\"nofollow\" target=\"_blank\" title=\"https://io.adafruit.com/yfeng1997/feeds/lightlevel-1\">\n<i class=\"ss-icon ss-link\"></i>\n<span>io.adafruit.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Notis", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/fSpAhBBzRA8?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Notis \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/740/datas/gallery.jpg\"/>\n<p>\n<i>App Icon</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Notis \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/741/datas/gallery.jpg\"/>\n<p>\n<i>App Banner</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Notis \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/761/datas/gallery.jpg\"/>\n<p>\n<i>Help Screen</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Notis \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/762/datas/gallery.jpg\"/>\n<p>\n<i>Notify ICE Contacts</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Notis \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/763/datas/gallery.jpg\"/>\n<p>\n<i>Main Dashboard</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>The inspiration for our app came from how more young adults are now traveling around the world, whether it be to study abroad, a class trip, or just to experience the culture of another country. With the dangers in today\u2019s world, we wanted to create an app that would help young adults feel safe and more secure when traveling to unfamiliar places.</p>\n<h2>What it does</h2>\n<p>Our app is a tool that centralizes all of your traveling needs.  By combining public transportation, lodging, emergency contact information, and local points of interest, a user can rest assured that they are safe when traveling to unfamiliar places.  The app uses the phone\u2019s GPS to fluidly change the information provided to the user based on current location.  The interface consists of five categories: Emergency, Transportation, Travel Warnings, Lodging, and Country Information.  When a user chooses a category, they are provided with its corresponding information and the option to call for assistance right from the app.  Take a real life situation, someone walking down a city street sees someone following them and wants to subtly let police know that they are worried for their safety.  With one tap, the user can contact law enforcement, notify loved ones of the dangerous situation and send the police their current location in real-time.  This app is an innovation in first-response, because of its ease of use, and utilization of technologies that are found in our pocket, but haven\u2019t yet been adhered to by law enforcement.  We know that our app can keep people safe, and allow them to feel secure wherever they travel.</p>\n<h2>How we built it</h2>\n<p>We built the app using Intel XDK, the ionic framework, HTML5, javascript, and CSS3. We also used GitHub to host and share resources.</p>\n<h2>Challenges we ran into</h2>\n<p>The main challenge that we ran into was translating our ideal vision for the app into a functional prototype rather than the image-based proof of concept. With the time constraint, we had to keep the app as simple and easy to use as possible.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are proud that we were able to turn our image-based idea into an actual working prototype with functional elements.</p>\n<h2>What's next for Notis</h2>\n<p>We plan on continuing to work on developing Notis so that it will be able to have the more advanced features, such as having a panic alarm or being able to call the local emergency number (ex. 911), that we had in our original idea.  We also envision being able to enable an always-listening feature to the app, where if a certain key phrase is said, the phone will emit a piercing noise to alert others nearby of impending danger.</p>\n<h2>What we learned</h2>\n<p>We gained important insight into deploying a working prototype to Google Play, which our team has never done before.  We also learned a lot about html/css and using javascript.  </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/intel-xdk\">intel-xdk</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ionic\">ionic</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://marvelapp.com/c3hh8h\" rel=\"nofollow\" target=\"_blank\" title=\"https://marvelapp.com/c3hh8h\">\n<i class=\"ss-icon ss-link\"></i>\n<span>marvelapp.com</span>\n</a></li>\n<li><a href=\"http://bit.ly/1qoPUdD\" rel=\"nofollow\" target=\"_blank\" title=\"http://bit.ly/1qoPUdD\">\n<i class=\"ss-icon ss-link\"></i>\n<span>bit.ly</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I lead the GUI design of Notis, as well as the function of the \"Notify ICE Contacts\" element.", "I led the development of the emergency contact feature and the map.", "I helped design some of the main dashboard features and the content.", ""]], ["HikeHero", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"HikeHero \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/275/datas/gallery.jpg\"/>\n<p>\n<i>Privative Interface</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>I have been hiking with my family since I have been young. A few of my family members take hiking very seriously, scaling the peaks of mountains. However, this can be very dangerous if a fall occurs while climbing the mountain, so this app aims to minimize the risks of hiking.</p>\n<h2>What it does</h2>\n<p>When this app is activated, it will constantly monitor the acceleration of the phone in the X, Y, &amp; Z directions. If the hiker happens to fall while hiking, the acceleration of the phone in at least one of the directions will passes a certain threshold, depending on the phone's orientation. Once this occurs, the phone will automatically send a text message to the local police, informing them of the user's location and what has happened to them.</p>\n<h2>How we built it</h2>\n<p>We built this app using Android-Studio, and utilizing a phone's accelerometer, location tracking, and SMS library.</p>\n<h2>Challenges we ran into</h2>\n<p>A major challenges included getting the phone's location tracking working with the app. Additionally, we are both novices at coding and needed to learn about the functions of Android-Studio.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We have not used Android-Studio before today, and implemented much of what we learned in the early part of the competition into our final product.</p>\n<h2>What we learned</h2>\n<p>As stated, neither one of us have used Android-Studio before. We had a small amount of experience in Java entering HackBCAIII, but none with XML, which we learned how to use today.</p>\n<h2>What's next for HikeHero</h2>\n<p>We wish to launch this app on the Google Play Store, and eventually create an IOS version of the app as well.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xml\">xml</a></span></li></ul>\n</div>\n</div>", ["I aided in the development of coding the app, and learned about Android-Studio, Java, and XML along with Sam.", ""]], ["Happy Face", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Happy Face \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/679/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Happy Face \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/677/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Happy Face \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/678/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Happy Face \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/649/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Happy Face \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/647/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Happy Face \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/650/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Happy Face \u2013 screenshot 7\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/648/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>As teens, we've had our fair share of skin horror stories. We drew inspiration from our own experiences, sharing advice among friends and recommending different products. Following the trend of the many health-related trackers that are entering the market nowadays, we wanted to create a space where people could keep tabs on their skin to see what products or methods were really working for them.</p>\n<h2>What it does</h2>\n<p>The desktop site features information talking about the platform and the business's vision/goals. The bottom features a Register form that users can fill out with basic information (name, gender, phone number). There are two different profile versions for males and females. The name is extracted from the form and then plugged into the user's respective profile, as well as a Twilio message, which will send the link to the app to the user's phone via text. Once on the platform, users can upload photos to create a photo diary of their skin to have a visual means of tracking their progression. Users can add the skincare products they use on a daily basis to their Routine page. They can also tag their profiles with different skin conditions/categories, such as dryness or acne, and give the conditions a daily rating of 1-10 to track relief/worsening conditions over time. These tags work to help a search function, in which users can search through all other users profiles, based on these tags. By seeing other people's profiles with skin issues similar to theirs, they can discover new products and routines that are successful for people in a similar biological demographic.</p>\n<h2>How I built it</h2>\n<p>Our group is very limited in coding knowledge and background. However, to create a mock-up of the concept, we used Adobe Muse with some independently coded HTML objects as front end design tool to allow us to achieve the setup we wanted. However, to prove the back-end part of the concept, we also created a few simple classes using Eclipse in Java that mimic what we want to have happen in the real application.\nNote: desktop version is an info site; mobile version is a mock profile setup.</p>\n<h2>Challenges I ran into</h2>\n<p>The \"app\" portion of our hack is currently just a specialized version of the mobile site. With our limited background, we were unable to create a native app that met the needs of what we were looking to do. As a result, we decided to go with a mobile site, as it would be simpler to achieve our goals in that format with the intention of converting it into a web app later on. </p>\n<p>The form on the desktop site is function, but it currently sends the form to my email. The Twilio number does not have an SMS gateway we can use to make it an email, and though there is a way around this through Javascript, because we are using an unlaunched Adobe Business Catalyst site for our demo, other than the few individually coded objects, for the site itself, we were unable to modify any of the code for any script. For demo purposes, we display to the judges what the prompt would look like should the form go through to the Twilio number.</p>\n<p>The mobile site is currently also just a mockup. Because we were unable to edit any of the HTML code from our site, we were unable to execute the features that required image uploads, since the feature is unsupported in Muse. For presentation purposes, we preset pictures in as a display.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Being able to make it look so pretty! We're also proud of being able to make the connections between the code we did know and intended execution and features of the end-design of the site.</p>\n<h2>What I learned</h2>\n<p>While Muse is an easy tool to use when you need to make something look really great in a short amount of time, being able to code the design from scratch gives you so much more freedom. Keeping a cohesive look throughout all elements of a site can also be difficult.</p>\n<h2>What's next for Happy Face</h2>\n<p>We want to create a recommended products generator based on the results of similar users who saw improvements from those products. (This can easily be done by a simple counter system.)\nThere is also a substantial space for monetization through our app. We would like to keep it free, as we believe that a healthy skincare routine should be learned and maintained by everyone without limitations, but through hyperlinking the products individuals use to sponsored sites, we will be able to earn commission as users adopt products based on recommendations by other users on the platform.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">adobe-muse</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/eclipse\">eclipse</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://happyface.businesscatalyst.com\" rel=\"nofollow\" target=\"_blank\" title=\"http://happyface.businesscatalyst.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>happyface.businesscatalyst.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Smora the (mental health) Explorer", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Smora the (mental health) Explorer \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/215/datas/gallery.jpg\"/>\n<p>\n<i>S'mora, the main character</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Smora the (mental health) Explorer \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/211/datas/gallery.jpg\"/>\n<p>\n<i>Sample NPC (displays schizophrenia)</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Smora the (mental health) Explorer \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/219/datas/gallery.jpg\"/>\n<p>\n<i>Feeling-normal ending</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Smora the (mental health) Explorer \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/221/datas/gallery.jpg\"/>\n<p>\n<i>Feeling non-normal ending</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>I've always been told that everyone has their own challenges to overcome. However, to a child with autism, depression, or a similar developmental/mental disorder, these challenges can result in the child feeling estranged and \"weird\", further removing the child from society. If the child could see that they are normal because everyone's 'weird', they might mind their disorder less, moderating the social awkwardness inherent in the disorder. The s'more sprite was because Mollie brought a stuffed s'more to the hackathon and decided to make the simple shape into a simple 16x16 sprite.</p>\n<h2>What it does</h2>\n<p>64x64 sprite of a s'more moves around the scene, talking to neighbors who display aspects of certain mental illnesses but continue to be happy and greeting S'mora. After talking to all of them, the s'more enters their house, where they look in the mirror. The child decides whether they feel 'normal' or not, and an affirming, supporting message is delivered either way.</p>\n<h2>How we built it</h2>\n<p>Processing is a Java-based language which is much more visual-friendly, which Mollie coded in. Sprites, the second room, and the endings were drawn in GIMP by Mollie, while Christina used a drawing tablet for the introductory screen and first room.</p>\n<h2>Challenges we ran into</h2>\n<p>Mollie was hoping to implement a non-overlapping segment of code so that the s'more could not overlap the other sprites, but this was nixed when the attempts failed repeatedly over two hours and Mollie realized that there were more-important tasks to complete. On the bright side, when Processing crashed after this, it only lost a small amount of unsaved code. Also, the first attempt at movement was a three-hour attempt completely destroyed and started again. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Mollie's proud of implementing an effective arrow-key control system and coding an ellipse and tringle together to make a speech bubble. She's also proud of fitting most crucial text in the speech bubbles.</p>\n<h2>What we learned</h2>\n<p>We learned how to work in Processing and its differences from vanilla Java. We also learned how to create even-pixeled brushes in GIMP, which is a necessity to ensure that the 64x64 sprite looks like a 16x16 sprite.</p>\n<h2>What's next for Smora the (mental health) Explorer</h2>\n<p>Expanding the game beyond 2 rooms and fixing the render of the second room (the s'more sprite was meant to approach the mirror, but due to the software and inability of the coder this was run before the s'more entered the room. Making sprites as .gifs instead of stationary images was also a goal not realized.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/processing\">processing</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/gimp\">gimp</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/photoshop\">photoshop</a></span></li></ul>\n</div>\n</div>", ["I coded in Processing, which was a little intimidating, but largely made sense after Java. I also drew sprites in GIMP, because I'm okay at pixel art. My partner is excellent at drawing, but she was also working on her own iOS app.", "I created background art and the title page of the game in photoshop with a drawing tablet."]], ["Dr!ve", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Americans take 233 billion car trips in a year. But driving poses many dangers, such as people trying to drive under the influence, or people falling asleep behind the wheel. Every 53 minutes, someone dies in a drunk driving related accident, and more than a third of drivers have admitted to falling asleep while driving. This poses danger to everyone, and our hack attempts to fix this problem.</p>\n<h2>What it does</h2>\n<p>Our hack uses a Intel RealSense 3D camera to detect when a driver has fallen asleep, or is under the influence of alcohol. When it detects a sleeping driver, an iOS app plays an alarm in an attempt to wake the driver up. It also detects drops in pulse rates in a driver, compared to a calibrated amount, along with erratic expressions on the drivers face. These can be telltale signs that a driver is under the influence, and it displays a message that tells the driver not to drive in such conditions, calls the users ICE contact, and gives the option to open the uber app to get a ride. </p>\n<h2>How we built it</h2>\n<p>We used C# to work with the 3D camera, which sends requests to a node.js server. The ios sends get requests to the server to detect when the camera has detected sleeping or drunk driving. </p>\n<h2>Challenges we ran into</h2>\n<p>The 3D camera sdk, since we were using it for the first time, was extremely difficult to use. The documentation was very unclear, and figuring out how to use the camera was extemely difficult. Also, none of the people on our team were experienced in C#, which made using the SDK even more difficult.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We finally figured out how to use the SDK properly after a lot of experimentation. In addition, we are proud of the fact that our team was able to earn C# as quickly as we were able to. Also, we used the twilio api for the first time, and we were successfully able to get it to work. This is all extremely impressive considering this was the first hackathon for more than half of our team.</p>\n<h2>What we learned</h2>\n<p>We learned how to use the 3D camera, C#, and how to use the twilio api.</p>\n<h2>What's next for Dr!ve</h2>\n<p>Since the Intel Realsense cameras are now being integrated into windows laptops, in the future, these cameras could be integrated into steering wheels and the wake up alarms could be hooked up to car speakers, etc. With cars being smarter, this camera could be the next big addition to every car.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/realsense\">realsense</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ios\">ios</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xcode\">xcode</a></span></li><li><span class=\"cp-tag\">intel</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/socket-io\">socket.io</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/websockets\">websockets</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/lenovo\">lenovo</a></span></li><li><span class=\"cp-tag\">3d-camera</span></li></ul>\n</div>\n</div>", ["I developed the iOS app and worked on communicating with the server from the mobile application.", "I worked on taking our technology and creating a plan for practical implementation in the near-future. I also came up with and designed the texting detection functionality and developed the project pitch.", "I helped write the facial recognition system, along with writing most of the app. The SDK for the RealSense Camera was extremely difficult to use, but we finally figured out how to use it, and finished the hack in time.", "I wrote the backend system and helped with the facial recognition that would detect when a driver was not in suitable conditions to drive."]], ["CalorieCounter", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Hackathon!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xcode\">xcode</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li></ul>\n</div>\n</div>", [""]], ["Pongulus", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Pongulus \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/241/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Pongulus \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/242/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We were extremely interested in virtual reality hardware and software, and wanted to make a reasonably challenging project with them. Upon finding out that MLH provided Oculus Rifts, we decided do something that we felt would be both interesting and a learning experience - Ping Pong.</p>\n<h2>What it does</h2>\n<p>Using the Leap a Leap Motion Sensor attached to the front of an oculus rift, the player is able to control two hands, one holding a ping pong paddle, the other used for serving and getting the ball, in order to play Ping Pong.</p>\n<h2>How we built it</h2>\n<p>We decided to create a remote control using an Arduino board and some accelerometers, and promptly got to work. However, we soon realized these accelerometers had too low of a sample read to provide accurate enough movements to the Unity game. After realizing there was nothing we could do, we reworked our project from the ground up using a Leap Motion Sensor and using controller free gesture control instead. We used Leap Motion's Orion Beta SDK to integrate Leap Motion with Unity. In addition, we used Unity's built in 3D Physics engine, as well as Visual Studio to edit some of the code</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Setting up the input between the Unity program and the Leap Motion Sensor proved to be quite challenging, especially getting it to work accurately enough. However, we realized that it would work when binding the ping pong paddle with the palm object in the hand using a fixed joint. Additionally, we're proud of the textures that we created using Unity. Even though they were quite basic, no one on our team had extensive experience with Unity as well as C#. Finally, we're proud of getting the Oculus Rift to actually work on our setup, as our video card outputs were not optimal.</p>\n<h2>What we learned</h2>\n<p>First of all, we learned not to reach our hands too far when using the Rift, as the monitor was knocked off the table.</p>\n<h2>What's next for Pongulus</h2>\n<p>A more polished user interface, as well as better improvements in physics as well as added content are all thing that could be added in the future</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/leap-motion\">leap-motion</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/oculus\">oculus</a></span></li><li><span class=\"cp-tag\">rift</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/visual-studio\">visual-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li></ul>\n</div>\n</div>", ["I primarily worked on the Leap Motion integration with Unity. It was my first time using Unity, but the information and the SDK was very helpful.", "", "", "", "", ""]], ["Swear Jar", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Swear Jar \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/534/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Swear Jar \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/536/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>The IWE presentations regarding the sources of influences inspired us to create an app to help facilitate good habits in people. Walking around the HackBCA facilities, we noticed a lot of swearing among hackers and mentors, and so we decided to create a digital version of the swear jar.</p>\n<h2>What it does</h2>\n<p>Swear Jar is a mobile application that listens to your everyday speech and logs whenever you use a designated swear word. Upon hearing this word, the application communicates with our web app and registers the swear in the database. For each time the user swears, 50 cents is donated from their Venmo account to the charity Give Directly which strives to help impoverished families in both Kenya and Uganda. In addition, users are able to view their stats for the day and compete against friends to see who swears the least.</p>\n<h2>How we built it</h2>\n<p>Our web application was built on Amazon Web Services with node.js backend and HTML5 and CSS3 frontend. The mobile application was created for android and uses the Twilio API to text results to users as their swears are registered.</p>\n<h2>Challenges we ran into</h2>\n<p>We lost Nikhil for like 3 hours\n(But seriously, interfacing between the mobile and web apps was difficult)</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We finally got the mobile application to communicate with the web application using node.js and interfacing that with the Twilio API.</p>\n<h2>What we learned</h2>\n<p>We learned a plethora of new information regarding the psychology of habits and what causes people to do what they do. This education helped for us to tailor our application for maximum usage among consumers</p>\n<h2>What's next for Swear Jar</h2>\n<p>We hope to expand our web application to multiple countries and support various languages. In addition, we hope that the user will soon be able to donate to the charity of their choice.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://wtbca.com.s3-website-us-east-1.amazonaws.com/\" rel=\"nofollow\" target=\"_blank\" title=\"http://wtbca.com.s3-website-us-east-1.amazonaws.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>wtbca.com.s3-website-us-east-1.amazonaws.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I created the front end and worked with the Twilio API", "I worked on the backend in Node.js and worked with the Twilio API to send feedback through texts to the users.", "I made the Android app, interfacing the speech recognition API and oadx.", ""]], ["A Garbage Idea", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Today we live in a society where trash is collected on a strict route. What if there was a way to efficiently collect trash and save money on fuel and other resources.</p>\n<h2>What it does</h2>\n<p>Using our website users can monitor the levels of the a trash can and using our algorithm and APIs we provide them with the best an efficient route to take.</p>\n<h2>How we built it</h2>\n<p>We used an Intel Edison to monitor the thermal footprint left by trash in different dumpsters, and by using temboo and google sheets, we processed the data using SQL queries. We took that data and then displayed it in the google maps API to accurately make a route. This route can be used by garbage collection men in the mornings and is highly needed a suburban areas. </p>\n<h2>Challenges we ran into</h2>\n<p>Some challenges we ran into is that we were having issues with the hardware specifically Arduino 3rd party boards not having libraries and connecting it to the software part of the hack. Another big problem is that connecting the hardware to a database is very frustrating mainly because all examples use expensive WiFi or Ethernet shields whereas we bought Arduino compatible boards with built in WiFi. Those types of boards have barely any documentation for connecting mySQL or Temboo.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are proud of making an application like this in 24 hours and also working with things we weren't that comfortable with when we first got there.</p>\n<h2>What we learned</h2>\n<p>We learned about time management a lot and also version control when managing our code. Also, our hardware hacker learned about MySQL. Our Backend programmer learned what real hardware hacking is like. Our CSS and designer programmer knows more about JavaScript but, more importantly, got hands on experience with the Maps API </p>\n<h2>What's next for A Garbage Idea</h2>\n<p>In the future we hope to polish the website more and contact government agencies and set up subscription services with them in order to generate revenue and keep the company running.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/intel-edison\">intel-edison</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/github\">github</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php5\">php5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-spreadsheets\">google-spreadsheets</a></span></li><li><span class=\"cp-tag\">domain.com</span></li><li><span class=\"cp-tag\">best-startup</span></li><li><span class=\"cp-tag\">most-polished</span></li><li><span class=\"cp-tag\">best-humanities</span></li><li><span class=\"cp-tag\">most-creative-beginer-hack</span></li><li><span class=\"cp-tag\">best-overall-beginer-hack</span></li><li><span class=\"cp-tag\">best-beginner-we-app-hack</span></li><li><span class=\"cp-tag\">best-beginner-website-hack</span></li><li><span class=\"cp-tag\">best-hardware-hack</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/iphone-sdk\">iphone-sdk</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jade\">jade</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jasmine\">jasmine</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jira\">jira</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jsoup\">jsoup</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jsp\">jsp</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://www.agarbageidea.com\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.agarbageidea.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.agarbageidea.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["KaldersvellEDU", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Our team is consistent of people who love open-source software: the ability to use something and open the hood and see how it works is magical. It is in fact, so magical, as to motivate one team member to be an active contributor, even being involved in documentation for \nthe latest version of Ubuntu Gnome. The motive here was to build something that did the same thing that the things we enjoyed did, by the same set of rules, but target it towards a group of people whose interest in programming can only grow: beginners. KaldersvellOS and KaldersvellEDU are dedicated to providing a great programming experience for new developers, and bringing them into the fold of the open source community.</p>\n<h2>What it does</h2>\n<p>The user uses our online IDE hosted from our OS. This code is then deployed to the Raspberry Pi, which saves the code into a Python file and simply runs it for the developer, taking out the hurdles that new programmers need to jump through to see their creations work, and making programming more rewarding by making the gratification for their work more instant.</p>\n<h2>How we built it</h2>\n<p>Our platform is web-based, and our text editor uses the Ace engine, which is used by the popular online editor Cloud9. However, several elements of Material Design and Twitter Bootstrap are combined with this text editor to make the use of the Operating System a truly pleasurable experience through our breathtaking UI. The RasPi communicates with our UI through PHP and the LAMP stack; the code is taken, saved, and interpreted into a Python file, and executed by the RasPi.</p>\n<h2>Challenges we ran into</h2>\n<p>Originally using the MEAN stack to develop the whole platform, the team ran into serious trouble when Node.js and Express proved way more difficult to implement than originally perceived; we wasted countless hours trying to crack it in JavaScript, we eventually realized that it may be better to use PHP and the LAMP stack; which brought forward a new set of problems for us, including Raspbian not allowing PHP to install (yes, this was a real problem. Murphy's Law, yo.)</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Our UI is beautiful. I am incredibly proud of the joy I feel when I see the aesthetic of our UI, and the time that it took sorting out bugs in it to make it flawless and nice. Additionally, our team's grind is immeasurable; we were working strong from 7 PM to 12:00PM, foregoing sleep and bathroom breaks and hackathon events to make sure our software worked. And when it did, it was totally worth it. </p>\n<h2>What we learned</h2>\n<p>Hard work pays off. Also debugging sucks when you haven't slept in 13 hours.</p>\n<h2>What's next for KaldersvellEDU</h2>\n<p>Support for more languages than Python, and educational features outside of computer science, in studies such as financial literacy. The objective  here is to make life easier for beginners with technology; it doesn't matter what these beginners want to learn.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag\">ace</span></li><li><span class=\"cp-tag\">led</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/hardware\">hardware</a></span></li><li><span class=\"cp-tag\">education</span></li><li><span class=\"cp-tag\">3d-printing</span></li><li><span class=\"cp-tag\">developer-tool</span></li><li><span class=\"cp-tag\">developer</span></li><li><span class=\"cp-tag\">website</span></li><li><span class=\"cp-tag\">web-app</span></li></ul>\n</div>\n</div>", ["MCA Class of 2016, getting into hackathons starting with BCA, mainly assisting in debugging and Python scripting", "", "", ""]], ["Such Is Life", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Kids everywhere are faced with choices that they feel are irrelevant but matter a lot in the long run, so we built this web app to teach them the long term effects of their seemingly harmless choices.</p>\n<h2>What it does</h2>\n<p>It gives its targeted audience hypothetical scenarios and multiple options for the decision they could take, and then the program prints out a result depending on the decision selected.</p>\n<h2>How we built it</h2>\n<p>We created the game using Java, and used HTML/CSS to create the user interface for the Webapp.</p>\n<h2>Challenges we ran into</h2>\n<p>Staying awake\nDebugging\nComing up with appropriate scenarios</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Most of us wrote the most lines of code we'd ever written\nWorking together as a team of people who mostly knew nothing about coding and still being able to pull it all together.</p>\n<h2>What we learned</h2>\n<p>We learned how to build Web apps\nWe learned leadership and team building</p>\n<h2>What's next for Such Is Life</h2>\n<p>An improvement on the Web app and adding more scenario-choice-result branches to make it even more universally relatable for the kids.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/photoshop\">photoshop</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/adobe-illustrator\">adobe-illustrator</a></span></li></ul>\n</div>\n</div>", ["I worked on the front-end and used HTML/CSS and JavaScript to build the landing page of the webapp.", "I helped create the story for the game.", "", "", "", "", "", ""]], ["Code Happiness ", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration: Sometimes Coders get discouraged when they have to work long nights on strings of code</h2>\n<h2>What it does This app do : It sends positive messages to the coder based on the  facial recognition and emotion of the coder</h2>\n<h2>How we built it : Using html and Css,bootstraps ,Python and Java</h2>\n<h2>Challenges we ran into, The back end developer had to change the coding language, which proved tedious.</h2>\n<h2>Accomplishments that we are  proud of, Getting most of the front end things done on time</h2>\n<h2>What we learned: A team should work together to get done quickly</h2>\n<h2>What's next for Code Happiness,</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/gamma2653/hackbca-iii-codehappiness\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/gamma2653/hackbca-iii-codehappiness\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on back-end development by using Mysql and I worked along side my friend who uses Java, to implement it together.", ""]], ["WhoKnows", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"WhoKnows \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/174/datas/gallery.jpg\"/>\n<p>\n<i>Player 2 Won!</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"WhoKnows \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/175/datas/gallery.jpg\"/>\n<p>\n<i>Player 1</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to created a games that actually works utilizing the sponsor companies API's </p>\n<h2>Why</h2>\n<p>During Hackathons, we usually use a platform and didn't make our  own stuff with our codes. This time we used our opportunities and created our first working game.</p>\n<h2>How to Play you say?</h2>\n<pre class=\"language-nolang\"><code>            2 players will play in a duo match\n</code></pre>\n<p>Player 1 will find a image on the internet and will upload \n it to the game and also give a keyword that describes the image\n When that is done Player 2 will be shown tags and will have to guess\n       what the picture is and enter the keyword Player 1\n    entered .If Player 2 is stuck he can ask hints irl which you \n            can reveal however it affect his/her score!</p>\n<p>The winner is decided for whoever gets the keyword first!</p>\n<p>PS- Player 1 wait after you keywords disappear which is 15 seconds &amp; Then you pass the computer to Player 2 &amp; they have to figure our what your keyword is from the tags (please me it relevant to picture). When you win you get a text message &amp; a a secret prize!</p>\n<p>The best part of our game is that it works!\nGame On!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://harleyknows.xyz/whoknows/\" rel=\"nofollow\" target=\"_blank\" title=\"http://harleyknows.xyz/whoknows/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>harleyknows.xyz</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I created the idea, framework, design & I was the coder of everything basically ", "I worked on the backend js. And I helped to debug most of the js code.", "I worked on implementing the clarifai api in to the platform. I also worked on the frontend of the website", "", "", ""]], ["Coder's Path", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Coder's Path \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/627/datas/gallery.jpg\"/>\n<p>\n<i>Our current (WIP) logo</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Coding to help others learn, and to get communites together to solve problems!</p>\n<h2>What it does</h2>\n<p>Coder's Path allows people to set their expereince level and make a personalized path for each user.</p>\n<h2>How we built it</h2>\n<p>Through hard work and dedication, and lack of sleep! Oh yeah, HTML, CSS, and PHP kinda helped us along the way, I guess...</p>\n<h2>Challenges we ran into</h2>\n<p>Time constraints, sleep constraints, idea constraints, fun constraints, physical constraints (sitting down for 24 hours isn't the healthies thing to do), and a lot more. With actual software, we ran into lots of problems, especially when trying to communicate from serverside to database.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Getting a website up, working hard to make that website polished, and working hard to make the website work. Even though it doesn't...</p>\n<h2>What we learned</h2>\n<p>Plan ahead, but not too much. When you get an idea, just go with it, and don't waste your time thinking if you're going to finish or not.</p>\n<h2>What's next for HackBCA-III</h2>\n<p>Have more fun next time. We really only worked whole time, which isn't bad, but hackathons are also about having some fun and meeting new people.</p>\n<h2>Our Website</h2>\n<p>Here's out website:\n<a href=\"http://coderspath.hydrotechwsintl.com/\" rel=\"nofollow\">http://coderspath.hydrotechwsintl.com/</a></p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sql\">sql</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Scoutdrago3/HackBCA-III\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Scoutdrago3/HackBCA-III\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Entirely backend (PHP)", "Worked on home page and server setup", ""]], ["BASE95", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"BASE95 \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/650/datas/gallery.jpg\"/>\n<p>\n<i>Logo</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"BASE95 \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/651/datas/gallery.jpg\"/>\n<p>\n<i>Methods</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"BASE95 \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/652/datas/gallery.jpg\"/>\n<p>\n<i>Files created by BASE95</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>BASE95</h1>\n<p>A database using google drive</p>\n<h1>Inspiration</h1>\n<p>Online databases like firebase are very powerful but they do have their limits. It can be very hard for beginners to learn, and there is a limit to the storage on free accounts. We sought to make a better system, using the google drive api.</p>\n<h1>What it does</h1>\n<p>Uses the google drive realtime api to allow simple yet powerful access to an online database for beginners or experts alike. It offers meticulous documentation on usage.</p>\n<h1>How we built it</h1>\n<p>We used the google drive realtime api, along with c9.io, github, javascript, css, html, and jquery.</p>\n<h1>Challenges we ran into</h1>\n<p>After spending hours writing a function that converts a string to object, and almost giving up, we discovered the built in JSON.parse() function which does the same thing</p>\n<h1>Accomplishments we're proud of</h1>\n<p>We learned the google apis and oath for the first time ever, and we made our very first javascript plugin</p>\n<h1>What we learned</h1>\n<p>Using the google api and google developer console, as well as the object oriented programming to make a plugin</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/XenonMolecule/BASE95\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/XenonMolecule/BASE95\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"http://xenonmolecule.github.io/BASE95/\" rel=\"nofollow\" target=\"_blank\" title=\"http://xenonmolecule.github.io/BASE95/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>xenonmolecule.github.io</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I was the main API developer, and I worked on initializing the realtime drive api as well as oauth.", ""]], ["fingerTips - A Music Reading and Tutorializing App", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"fingerTips - A Music Reading and Tutorializing App \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/586/datas/gallery.jpg\"/>\n<p>\n<i>The App's Logo and Splashscreen</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"fingerTips - A Music Reading and Tutorializing App \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/591/datas/gallery.jpg\"/>\n<p>\n<i>A diagram of a standard G chord</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"fingerTips - A Music Reading and Tutorializing App \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/640/datas/gallery.jpg\"/>\n<p>\n<i>Taking a picture of the sheet music/guitar chords</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"fingerTips - A Music Reading and Tutorializing App \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/641/datas/gallery.jpg\"/>\n<p>\n<i>After a picture is taken</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"fingerTips - A Music Reading and Tutorializing App \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/642/datas/gallery.jpg\"/>\n<p>\n<i>Options to see the different guitar chords that are analyzed</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>One day in jazz band, I was learning a new piece of music and I realized that I had absolutely no idea what I was doing. Asking the teacher would be embarassing and would take time away from the class while looking up every chord's finger positions seperately was a hassle. I immeditely thought of how great it would be if I could snap a picture of my music with my phone and have the full list of finger positions. And so, fingerTips was born.</p>\n<h2>What it does</h2>\n<p>fingerTips is an app for beginners in music as well as for people who have been playing instruments for a while but lack a formal training in them. The idea behind the app is that the user snaps a picture of the sheet music or chords and the app uses an optical character recognition algorithm to scan the page and find each note. The app then brings up a diagram of exactly where to place your fingers on the instrument to hit the right note.</p>\n<h2>How I built it</h2>\n<p>The app is buit with Java in the android SDK. Sunny, Nick, and I all worked on the project as a team. Nick was primarily responsibly for the music recordings and interface. Sunny did a large portion of the backend code, and I focused mostly on the frontend. That being said, each of us worked on all aspects of the app to some degree.</p>\n<h2>Challenges I ran into</h2>\n<p>By far the greatest challenge was the OCR algorithm. While the algorithm is far from perfect, we are happy to say that things look good so far.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I came into this with absolutely no knowledge of android dev. Although I had to suffer through many frustrating bugs, I came out of it with a solid base in app development and an eagerness to continue. hackBCA continues to surprise me with just how much one can learn in such a short period of time.</p>\n<h2>What I learned</h2>\n<p>I learned all about android development, optical character recognition algorithms, and even some web dev. I never would have thought I could cram so much into so little time.</p>\n<h2>What's next for fingerTips - A Music Reading and Tutorial App</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li></ul>\n</div>\n</div>", ["I created the splashscreen, aided in the whole idea, and designed the UI for this app. I really hope that it can one day become an app that is personal to all guitar players and allows anyone to learn and get better, whether beginner or advanced.", "I was the ideas guy, the team lead, and the main frontend developer.", ""]], ["Airline In Distress Signal(A.I.D.S.)", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>When an airline like the Malaysian Airlines flight disappears, it not only hurts the families of the people aboard, but also the company, in terms of damages, and stock.</p>\n<h2>What it does</h2>\n<p>It utilizes the accelerometer in your phone to indicate a crash and its location.</p>\n<h2>How I built it</h2>\n<p>We built it using Android Studio, and a lot of caffiene ;)</p>\n<h2>Challenges I ran into</h2>\n<p>Debugging, at 3am</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Debugging... at 3am</p>\n<h2>What I learned</h2>\n<p>Debugging is hard at 3am</p>\n<h2>What's next for Airline In Distress Signal(A.I.D.S.)</h2>\n<p>We are looking to further develop the application and potentially sell the idea to an interested party.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mobile-java-push\">mobile-java-push</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xml\">xml</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li></ul>\n</div>\n</div>", [""]], ["Boomy Boat", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Boomy Boat \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/602/datas/gallery.jpg\"/>\n<p>\n<i>The game in action against NPC's</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>I've wanted to make a game like agar.io, a game that was fun, casual and could be played with friends.</p>\n<h2>What it does</h2>\n<p>It's a game that entertains. </p>\n<h2>How I built it</h2>\n<p>I used Unity and Unity Networking High Level API.</p>\n<h2>Challenges I ran into</h2>\n<p>I had a hard time simply understanding networking. It took a long time to grasp.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I was able to make something network wise that actually worked. </p>\n<h2>What I learned</h2>\n<h2>What's next for Boomy Boat</h2>\n<p>I've just made capsules as of now to demonstrate a rough frame. I still need to add models, a ui, better controls and a more detailed environment. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li></ul>\n</div>\n</div>", [""]], ["Trivia Smash", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>We came to the hackathon and decided to do a trivia game.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n</div>", [""]], ["Cookie", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>This is the first narritive we ever made!</h2>\n<h2>Narrates and draws a short story of a baseball player going through a breakdown</h2>\n<h2>Used Gamemaker Studio and the GML language.</h2>\n<h2>Certain bugs that were difficult to fix. Some functionality. Fitting the story in (original tale was severely cut short)</h2>\n<h2>The artwork given our lack of experience in that field.</h2>\n<h2>The importance of good coding and teamwork to any project</h2>\n<h2>More ambitious story</h2>\n</div>\n</div>", ["I, along with Peter, designed the interactive narrative from top to bottom.", "", "", ""]], ["Screen Hero", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We came into this hackathon with a preset idea of creating Time and Place, an app that facilitates social interaction. We eventually ran into numerous unsolvable issues concerning permissions and android phones, which discouraged us somewhat. However, at around 2 AM, we had the idea to create an app that lets a user create their own screen savers based on a top-down view of mathematical functions. This is how Screen Hero was born. </p>\n<h2>What it does</h2>\n<p>The software we ended up creating is an application that enables you to create your own screen savers with a top-down view of mathematical functions that determine separate RGB values. Using this, a user is able to generate an infinite variety of cool screensavers.</p>\n<h2>How we built it</h2>\n<p>We wrote it in C#.</p>\n<h2>Challenges we ran into</h2>\n<p>We came into this hackathon with a preset plan to create an ionic app called Time and Place that would use proximity sensing and geolocation to facilitate social interaction by automatically disabling phones in social situations. This ambitious app would use PHP, MySQL, HTML, CSS, Ionic, Angular Javascript, and Android Java. Unfortunately, we ran into challenges at every turn. Ionic did not work on the Android we were given. Ionic was unable to run Android Java so we had to write our own plugin. After Android update 4.2, non-SYSTEM apps were unable to change system settings unless they were rooted. We were unable to secure permission to root the phone. The combination of these factors caused us to realize that this project was not going to work. </p>\n<p>At 1AM, our project fell apart. The greatest challenge we faced was trying to come together to continue trying to create a product despite our discouraging start, but in the end we came together in the face of initial failure to create a product that we are proud of.</p>\n<p>Other challenges we faced were trying to output a series of images as a video file using AForge.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Starting a project at 2:00 AM, the fact that we were able to complete one at all and that we were able to remain motivated enough to continue working after our initial failure is something that we are very proud of. After numerous attempts and different ways of going after our Android social idea, Time And Place, we thought we weren\u2019t going to make a project. In order to be able to successfully create something, we had to make something new. We were devastated. We had to brainstorm a variety of ideas, and we even began working on each individually starting our own projects to try and test anything that could possibly work. But despite these challenges, we eventually came together to create a working project that we are really happy with.</p>\n<h2>What we learned</h2>\n<p>Some of the issues we had with our Android idea was that we were working with systems we were unfamiliar with. We haven\u2019t worked very much with Android, and for some of us it was the first time working with those languages. When we were working, our unfamiliarity led to many of the different aspects of our ideas not working. Something that we learned for future hackathons and projects is that we should know in advance exactly how we will go about our project, in order to ensure that we can succeed without having to reboot during the middle of the event. </p>\n<p>Additionally, we also got started to understand new languages and got more familiar with others. We learned that about the workings of Androids, such as that permissions are unable to be changed unless the phone is rooted or the app is either a parental control app or a system app. We became much more familiar with a large variety of languages including PHP, HTML, C# and JavaScript. </p>\n<p>We also learned to persevere and never give up hope. Despite the large setback of losing 8 hours to an impossible project, we continued trying to create a product, and in the end we succeeded.</p>\n<h2>What's next for Screen Hero</h2>\n<p>Adding in more functionality for different functions and adding in more functions in the UI to generate different kinds of screen savers, and saving the screensaver in video format. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/jonomendelson/ScreenHero\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/jonomendelson/ScreenHero\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Smartphown Savior", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Smartphown Savior \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/173/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Smartphown Savior \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/178/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Smartphown Savior \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/196/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Both creators are extremely interested in technology, and the struggle the modern American adult faces when presented with a plethora of unique, powerful smartphones is a relatable one. To prevent those people from being \"Smartphowned\", the \"Smartphown Savior, Save me now!\" button is a revolutionary tool in educated consumer business.</p>\n<h2>What it does</h2>\n<p>SmartphownSavior is intended to be the precedent for all product filtering services: easy tools for the modern consumer to filter out products, be it television, car, computer, or, you guessed it, SMARTPHONES! SmartphownSavior will tell YOU, the modern, maybe not so tech-savvy individual, what smartphone you need to fulfill your everyday demands. Smartphones make your life easier? Let US make it easier to make your life easier! Just click on that big button over there to get started! No accounts needed, no catch, completely free! It shouldn't have to be a minefield of clickbait for you to get what you need! </p>\n<h2>How I built it</h2>\n<p>The applet was built using .class Java, wich was then converted between HTML5, .htm, .fla, and .swf to attempt to integrate it as an embedded applet directly into the Wix site's source code. Using database coding, we were able to configure various entries of smartphones, specifying price, dimenions, release year, processing speed, RAM, cost, color, weight, etc. </p>\n<h2>Challenges I ran into</h2>\n<p>Being a free web domain host, Wix does not support source code injection from .class Java files. Even when converted to HTML5 and .htm, the source code did not display properly in the public view mode. </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Summoning the courage to attend our first Hackathon</p>\n<h2>What I learned</h2>\n<p>Database coding in .class Java</p>\n<h2>What's next for Smartphown Savior</h2>\n<p>Get a Java-compatible web domain\nExpand database to refer to\nLearn how to port Internet databases</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/wix\">wix</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag\">htm</span></li><li><span class=\"cp-tag\">swf</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://bloontoniumlabassi.wix.com/smartphownsavior \" rel=\"nofollow\" target=\"_blank\" title=\"http://bloontoniumlabassi.wix.com/smartphownsavior \">\n<i class=\"ss-icon ss-link\"></i>\n<span>bloontoniumlabassi.wix.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["AP Physkicks", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Our blessed Physics Teacher</p>\n<h2>What it does</h2>\n<p>Teaches 2d Motion</p>\n<h2>How I built it</h2>\n<p>With Unity</p>\n<h2>Challenges I ran into</h2>\n<p>UI and animation</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Made stuff with Unity</p>\n<h2>What I learned</h2>\n<p>We literally learned the whole program during the hackathon itself</p>\n<h2>What's next for AP Physkicks</h2>\n<p>Doing the rest of the AP Phys curriculum and testing it in classrooms</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/autodesk\">autodesk</a></span></li><li><span class=\"cp-tag\">autocad</span></li></ul>\n</div>\n</div>", [""]], ["AresTech Startup/PiDrone", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>InspirationWild</h2>\n<p>We started out as a group of high school friends who sat next to each other in AP Computer Science class but never really interacted. One day, we just happened to talk about our interests and what we like to do in our free time. After a while, we learned that one of us was interested in hardware and back end development, one liked server-side development, the other was fascinated by graphic design and front end development. And just like that one by one, we learned how we could actually work together and use our passions to build something. We decided that we wanted to build an autonomous drone and wanted to use a raspberry pi to control it all - something that had quite literally never been done before. We recognized that this incredibly inexpensive drone could be used for a myriad of purposes: Emergency Drone Responder, Moving Automatic Traffic Cams, Drone Delivery System, 3-D Mapping, Wildlife Monitoring, and hundreds more. As we progressed with our project, we started to realize that there are so many more brilliant young minds with ideas just like ours. But these ideas remain ideas because of the lack of mentoring, support, and collaboration. We want to help others get together and explore their interests and get a hands on experience with computer science that a classroom simply cannot provide. If we had all chosen not to speak to each other, we would have never built this project and met each other. This is why we want to start this company up, so that we can help others make theirs dreams into realities.</p>\n<h2>What it does</h2>\n<p>The Startup itself is to provide support to help students and young minds collaborate on ideas to eventually make them projects. The Pi drone acts as an emergency responder in dire situations that need immediate eyes on the scene.</p>\n<h2>How we built it</h2>\n<p>We used a Raspberry Pi to send PWM signals through the speed controllers to the motors, and then connected a PiCamera to allow live video streaming for Emergency Response Personnel to identify the emergency situation and identify its needs. We also used a gyroscope to allow the drone to be stabilized and prevent crashes. We have also added a GPS module in order to allow for autonomous drone control. The Pi Drone also uses Bluetooth to allow commands to be sent over through mobile apps which are in the process of development. We have also added bright LED lights underneath the Drone in order for distressed civilians to identify with Emergency Response Drone</p>\n<h2>Challenges we ran into</h2>\n<p>The biggest challenge was the intense lack of documentation for this kind of project as it has never been done before. Sending PWM signals through the Pi was very difficult as it was not even definitely possible to do it.</p>\n<h2>Accomplishments that we're proud of</h2>\n<h2>What we learned</h2>\n<h2>What's next for AresTech Startup/PiDrone</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag\">server</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ubuntu\">ubuntu</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/linux\">linux</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li></ul>\n</div>\n</div>", ["", "", "", ""]], ["Cooking without time", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Cooking without time \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/364/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Cooking without time \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/368/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Cooking without time \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/371/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Cooking without time \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/373/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Cooking without time \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/379/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Cooking without time \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/387/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>I work in a cooking restaurant and it takes time to make the food. I was wondering what if you have a smart phone that is willing to bring recipes faster to you so you are able to cook faster. We all know the trouble you have to go through to search on the web for a good recipe. All of our recipes are authentic and the best tasting they can be </p>\n<h2>What it does</h2>\n<p>This app works in the matter of minutes. Once you get started, you search for recipes and get right to the cooking!</p>\n<h2>How we built it</h2>\n<p>We built in using the App Inventor using the shake feature and the blocks to add features.</p>\n<h2>Challenges we ran into</h2>\n<p>The big challenge that we ever ran into was trying to convince people that this was a big idea that would really have people thinking and wondering that it is a great idea. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are proud to complete a app that helps </p>\n<h2>What we learned</h2>\n<p>We learned that being able to bring something in your hands in a matter of minutes is amazing.</p>\n<h2>What's next for Cooking without time</h2>\n<p>The next step is to broadcast Cooking without time. To show people that we can help you cooker faster and better meals in the matter minutes. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">languages</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["Fission Chips", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We're beginners, we all love physics.</p>\n<h2>What it does</h2>\n<p>Not very much, but one physics calculation (we still have to integrate several others) </p>\n<h2>How we built it</h2>\n<p>Consulted online resources and workshops for learning html, css and javascript</p>\n<h2>Challenges we ran into</h2>\n<p>We were learning all the languages we used and were unfamiliar with everything. It was an educational 24hrs!  Also CSS formatting is not our friend. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>That we have something to submit.  We are really proud of the idea we came up with because it has a practical application in our lives.  We are also glad that we know it works for one equation, and we know how to integrate several other equations </p>\n<h2>What we learned</h2>\n<p>We learned a lot of things.  The first thing we learned was the basics of HTML, CSS, and Javascript.  We also learned to interface and get input from a user, and then use those variables to generate an output.</p>\n<h2>What's next for Fission Chips</h2>\n<p>More Hackathons! Finishing our Physics Calculator and giving it to all our friends.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag\">lack-of-sleep</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://fissionchips.tech\" rel=\"nofollow\" target=\"_blank\" title=\"http://fissionchips.tech\">\n<i class=\"ss-icon ss-link\"></i>\n<span>fissionchips.tech</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["dsfasd", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<h2>What it does</h2>\n<h2>How I built it</h2>\n<h2>Challenges I ran into</h2>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<h2>What's next for</h2>\n<p>asdf</p>\n</div>\n</div>", [""]], ["BeHuman", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>The apathy of this generation.</p>\n<p>Supposed to be a site for people to be honest without judgement.</p>\n<p>very very basic html</p>\n<p>not knowing how to code in general</p>\n<p>I learned how to integrate things and code in general</p>\n<p>Javascript to allow people to sign up and share comments and posts.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li></ul>\n</div>\n</div>", [""]], ["Vulcan", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Vulcan \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/283/datas/gallery.jpg\"/>\n<p>\n<i>Vulcan's homepage, showing the menu.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Vulcan \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/483/datas/gallery.jpg\"/>\n<p>\n<i>Screenshot of Vulcan gameplay</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Even before arriving at HackBCA, our group knew we wanted to make a multiplayer game, something we could actually play and enjoy.  We didn't want to make \"just another shooter,\" or \"just another platformer.\" As founders of our school rocketry club and Kerbal Space Program enthusiasts, space was a logical setting for our game, and a solution to our problem.</p>\n<h2>Gameplay</h2>\n<p>Imagine a capture the flag game: players are split into two teams, and are tasked to capture the enemy team's flag.  However, there's a twist: all of this is happening... <strong>in space</strong>.   In order to navigate the map, players must perform orbital maneuvers, deftly jumping between and avoiding planets while contending with enemy players.   Players can also shoot other players for both defense, offense, and propulsion.  The game ends when either the flag is captured, or all of the members of a team have been killed.</p>\n<h2>How we built it</h2>\n<p>The game was built using web technologies to make it accessible and universal, in addition to allowing us to play around with fun new technologies.  A javascript front-end (served with apache) renders shapes sent from the server onto a HTML5 canvas and funnels user input to the server, in addition to providing menus such as game room and player name selection.   This communication is done using socket-io.  The python flask backend handles all the physics, logic, and gameplay, using pymunk as a physics engine.</p>\n<h2>Challenges we ran into</h2>\n<p>This was our first time really using flask, socket-io, pymunk, or the canvas in a project.  It was also the first time (for some of our team) making a game.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>It's actually playable and fun; everybody at our table was vying for a chance to play Vulcan.</p>\n<h2>What we learned</h2>\n<p>Although beautiful menus may be beautiful, they also may not be the best uses of time at a 24 hour hackathon.</p>\n<h2>What's next for Vulcan</h2>\n<p>After the hackathon, we'd like to polish the codebase and formally publish Vulcan.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/websockets\">websockets</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/socket-io\">socket.io</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag\">pymunk</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/canvas\">canvas</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/apache\">apache</a></span></li></ul>\n</div>\n</div>", ["Frontend, menus, and physics-y gravity stuff", "", ""]], ["\"HackBCA\" Maze", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt='\"HackBCA\" Maze \u2013 screenshot 1' class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/371/234/datas/gallery.jpg\"/>\n<p>\n<i>Overview of Maze</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt='\"HackBCA\" Maze \u2013 screenshot 2' class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/371/239/datas/gallery.jpg\"/>\n<p>\n<i>Player's actual ingame perspective</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration: I was inspired by one of my friends who had recently made a maze with Unity.  As for integrating a separate controller, I had initially the hackathon making a controller for league of legends. However I thought it had more application in the game I was creating with my friends, today.</h2>\n<h2>What it does: In the game, a player has to navigate their way through a single path maze. The player must navigate with a button matrix made with an Arduino Leonardo and a lot of buttons.</h2>\n<h2>How we built it: Starting with the controller, we connected push buttons with a Leonardo, breadboarded it, and then soldered it.  Building the game, I designed the maze on paper first, and then built it wall, by wall in Unity.</h2>\n<h2>Challenges we ran into: The controller had soldering issues, there were time management problems, and there were also some technical issues with camera scripts.</h2>\n<h2>Accomplishments that we're proud of: I am proud of the maze me and my partner, Jean, made together.   (Also I'm proud of Jean who spent 1am to 5am soldering all the buttons.)</h2>\n<h2>What we learned: I learned how to cooperate with people better and also about managing my time better when I'm on even less sleep than normal.</h2>\n<h2>What's next for \"HackBCA\" Maze:  Together, me and Jean are going to make it functional and fix all the major problems, leaning more, and becoming less dumb everyday.</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li></ul>\n</div>\n</div>", [""]], ["Such is Life", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>The game, \u2018Such Is Life\u2019,  is designed to spread knowledge in an exciting way, where kids from age 10-13 yrs old can enjoy learning morality without knowing. \"Such Is Life\" is a story mode game that teaches kids to make the most moral or immoral decision has an effect in the long run. It consists of five certain endings that may be good or bad based off the decisions you make during this game; the levels can range from millionaire to hobo and everything in between.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/photoshop\">photoshop</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/adobe-illustrator\">adobe-illustrator</a></span></li></ul>\n</div>\n</div>", ["", "", "", "", "", "", "", ""]], ["LearnByWorm", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>-Helping children learn math with ease and fun</p>\n<h2>What it does</h2>\n<p>Teaches kids how to do math</p>\n<h2>How I built it</h2>\n<p>I used pygame and python on my computer</p>\n<h2>Challenges I ran into</h2>\n<p>The text display became very hard</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I am very proud of the gameplay I accomplished</p>\n<h2>What I learned</h2>\n<h2>What's next for LearnByWorm</h2>\n<p>Exploring other subjects and math and creating a wide game of many possibilities</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/pygame\">pygame</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/aboudirai/LearnByWorm\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/aboudirai/LearnByWorm\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Super Smash Presidents Brawl", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Super Smash Presidents Brawl \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/390/datas/gallery.jpg\"/>\n<p>\n<i>Clinton's 8-Bit Sprite</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Super Smash Presidents Brawl \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/671/datas/gallery.jpg\"/>\n<p>\n<i>Birdie Sanders</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Super Smash Presidents Brawl \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/672/datas/gallery.jpg\"/>\n<p>\n<i>#feelthebern</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Super Smash Presidents Brawl \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/673/datas/gallery.jpg\"/>\n<p>\n<i>Donald Trump punching</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>This year's presidential race is bringing more and more attention to the political process. Between the provoking antics of Donald Trump, the political revolution sparked by Senator Sanders, the scandals of Secretary Clinton, and the hilarious statements provided by the other GOP candidates, there is clearly something unique about this year's race. Why not make an action fighting game for this memorable presidential election?</p>\n<h2>What it does</h2>\n<p>The game is a three-player brawler. Each character (Bernie Sanders, Hillary Clinton, Donald Trump) has basic attacks, movement, and a jump. However, each character also has special attacks based on pop culture affiliations (Hillary Clinton can trap her opponents in a \"classified email\").</p>\n<h2>How we built it</h2>\n<p>We downloaded 8-bit sprite templates from online, and then changed them using computer image editing software. Using the new images, we were able to create animations for the moves. Then, we used Unity to make a two dimensional game using keyboard controls.</p>\n<h2>Challenges we ran into</h2>\n<p>Significant challenges included connecting the sprite animations with the code in Unity/C#. Due to recent Unity updates, there was a shortage of tutorials on certain animation functions. We also faced hard challenges on adding GUI elements to appear in the game. Syncing the specific animations became a troubling issue, which we solved through reading through the Unity documentation.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>This was the first Unity game any of us have created. This is also the first hackathon for all of us. We are also proud of the modifications we made in pixel art. We also learned to work as a team, dividing tasks between the members in a fair fashion. We learned how to code in C#.</p>\n<h2>What we learned</h2>\n<p>We learned that the most important thing in a hackathon is teamwork. Every person on the team was essential to the final product, and although we had our differences, resolving them is what put us forward.</p>\n<h2>What's next for Super Smash Presidents Brawl</h2>\n<p>We'd love to finish the abilities for each character, add new maps, and add GUI elements.</p>\n<h2>Usefulness</h2>\n<p>You might ask \"How could this project be useful?\". In our team's opinion, something doesn't need to allow you to do more work in a shorter time or socialize more to be useful. To be useful, something just needs to make you happy. This project made our team very happy, and we hope it does the same for you.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://huangje1.github.io/\" rel=\"nofollow\" target=\"_blank\" title=\"http://huangje1.github.io/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>huangje1.github.io</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked with Unity. I would receive various character art, level images, and ideas from my teammates, and put them into the game. I primarily worked in C#. This was my first hackathon, and the the first time I've used Unity in three years", "I discovered the original images for the characters, created sprite sheets with different movements of the characters, set up the battlefield, and helped with the C# development in Unity. I also helped get the website hosted and domain attained.", "I was the main creator for the animations, sprites, and I helped with the syntax and coding of the HTML and CSS. I was also responsible for uploading the \"final\" (its never perfect!) product to GitHub.", "I set up the page's website, and contributed a bit to the project's animations,"]], ["symbiArt", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"symbiArt \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/436/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>All companies start out small. Ours happened to start yesterday, inside a darkened auditorium surrounded by high school students in red shirts who wouldn't let us leave. Not that we wanted to leave anyway, because Chris Hadworth had some interesting things to say to us. Somewhere inside his 50-minute one-way conversation he mentioned that AI would take over the world someday, and at that point we'd have nothing to do but talk about philosophy. And we didn't want people to grow disconnected because of computers, we wanted to connect people with technology. So we started [<a href=\"http://ople.tech\" rel=\"nofollow\">http://ople.tech</a>].\n![ople], a company designed to do just that.</p>\n<h2>What it does</h2>\n<p>ople is a home for socially-oriented apps that focus on encouraging human connections and collaborations. </p>\n<h2>How we built it</h2>\n<p>There were a lot of parts that went into this app. We went into it with an idea for an app that involved collaborative storywriting, painting, and composing. Eventually, it evolved into something a lot bigger, and we had a guy working on the website, and three other people shifting between front-end and back-end productions. We got no sleep.</p>\n<h2>Challenges we ran into</h2>\n<p>We still wanted to create the app and make it part of ople, but the app involved a database, located on a server, where we wanted to store our information. This was admittedly a little bit out of our depth, but we're also learning at HackBCA, so we got a lot of help from mentors and other hackers on different ways we could go about this. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>bumpShare was a program that made meeting new people easier, which we were able to include as part of the ople program of social connection. And then we made symbiArt, which, by the end of the process, represented what we wanted - a collaborative way to create pieces of art, be it literary, visual, or musical.</p>\n<h2>What we learned</h2>\n<p>For some of us, this was our first hackathon. At hackathons, you don't get sleep.\nCollaboration makes individual parts of a team better; each person has strengths and weaknesses, but teamwork allows people to take advantage of each others' strengths and patch up each others' weaknesses.</p>\n<h2>What's next for ople / symbiArt</h2>\n<p>We want to focus on social engineering, with aspects of artificial intelligence to further the efficiency of human endeavors. Beyond that, some other stuff. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xml\">xml</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag\">.tech</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag\">javscript</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/namecheap\">namecheap</a></span></li><li><span class=\"cp-tag\">startup</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://www.ople.tech\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.ople.tech\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.ople.tech</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Mech Fighters", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Mech Fighters \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/394/datas/gallery.jpg\"/>\n<p>\n<i>During battle.</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>My brother always liked mech games, and he always said if I was gonna be a game developer, I should try making one, so I did with my own spin.</p>\n<h2>What it does</h2>\n<p>It's a game where you fight mechs, and gain parts. Using different parts against different mechs is the key.</p>\n<h2>How we built it</h2>\n<p>I coded it on Game Maker, my friend Mo made us sprites last night and I put them in, Ahmed made the music, and Brett helped with design and game testing.</p>\n<h2>Challenges we ran into</h2>\n<p>LOTS OF ERRORS</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Finishing the game on time.</p>\n<h2>What we learned</h2>\n<p>Making a game within 24 hours is achievable, but if we had more time it would be twice as good, and that's amazing.</p>\n<h2>What's next for Mech Fighters</h2>\n<p>Add more enemies and mech parts!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/gamemaker\">gamemaker</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["Rolaball", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/LFbvPlmSZ6g?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Rolaball \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/572/datas/gallery.jpg\"/>\n<p>\n<i>Preview</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>I am completely new to Unity and pretty much computer programming in general. However, after seeing a basic tutorial on the Unity web site, I figured I could make something even more out of it. I applied the basics of the tutorial to this new game to include 2 players, separate text boxes, and more environment/obstacles to overcome.</p>\n<h2>What is does</h2>\n<p>It is a 2 player game where the objective is to roll around and collect more crystals than your opponent does.</p>\n<h2>How I built it</h2>\n<p>I was able to quickly learn about the many concepts of Unity and C# coding. I also integrated my previous experience with CAD software to make the terrain and environment.</p>\n<h2>Challenges I ran into</h2>\n<p>There were various bugs that I encountered in the c# coding that I did. Also, I had some trouble understanding some of the concepts that I learned in the tutorials and had some trouble applying them to other parts of the project. However, after a bit of practice, I understood most of what I was doing and succeeded.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Like I said before, I had to apply the aspects of the tutorial that were on Player 1 (i.e. score counter, sound effects) to Player 2 as independent values. Doing this was challenging though I was able to quickly catch on and figure everything out.</p>\n<h2>What I learned</h2>\n<p>I learned the basics of Unity and C# programming. More specifically, I learned how to intertwine things in my project to a player using scripts. For example, I learned about collision detecting or adding sound effects to the game. Also, I learned how to create my own custom inputs or controls which I used to control two different objects. I also learned that computers are very picky because a single bracket can mean the difference between a failed program and a successful one. Other than that, I learned that working as a team can sometimes be beneficial when there is a lot to do, but other times, it's better to be alone and independent. I enjoyed working by myself (though still around my friends) because I got to tweak everything to just the way I wanted it to.</p>\n<h2>What's next for Rolaball</h2>\n<p>I plan on adding multiple levels of difficulty as well as a better camera movement system. Also, I foresee the use of something like Leap Motion to track hand movements to control the movement of the balls in the game. I also would like to include different point values for other types of crystals. There certainly is a lot of room for improvement and expansions which I plan on working on in the future.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li></ul>\n</div>\n</div>", [""]], ["Lost and Found", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Lost and Found \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/437/datas/gallery.jpg\"/>\n<p>\n<i>making the posts</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Lost and Found \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/438/datas/gallery.jpg\"/>\n<p>\n<i>and example of a post</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Jason and I always tend to lose items and we thought it would be helpful to have an app where other people can tell you if they find your lost object.</p>\n<h2>What it does</h2>\n<p>This app allows for people to post a request if they lose an item and have other people reply if they find your item. </p>\n<h2>How we built it</h2>\n<p>We built it using Swift and GitHub and several open-source API's</p>\n<h2>Challenges we ran into</h2>\n<p>One of the greatest challenge we ran into was working with GitHub since this is both our first hackathon and we don't have much experience with software like that. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are proud of finishing our project and making sure it worked. We are also proud that we pushed through the hard times that GitHub supplied us. </p>\n<h2>What we learned</h2>\n<p>Well the greatest skill we learned by the end of this, was the basics of GitHub, how to work with API's, and how to use databases. </p>\n<h2>What's next for Lost and Found</h2>\n<p>We definitely want to improve out User Interface and make edits so the application is more user friendly. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["LearningHax", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Coming into the competition, two of us really wanted to work on a 2D RPG tile game, and since only one of us had experience with coding this style of game, the other three of us thought it would be an interesting experience to try out. Originally, we were leaning towards a traditional combat based RPG, but inspired by puzzle and educational RPG games and the talks given about using our code to make an impact, we decided to write code that taught people how to code. Considering that games reach an incredible amount of people, this will be a great way to teach people code.</p>\n<h2>What it does</h2>\n<p>This RPG game allows the player to control a character and join in the character's journey as he learns to code. Soon after the start, the character realizes he is in a world of code, and uses his new found knowledge to solve problems with the worlds code that increase in difficulty over time. It teaches students how to code since the characters journey of learning becomes that of the player, and thus reaches out to a new generation that would rather spend their time playing a game.\nFurthermore, we created a website for people to be able to learn about and download the game.</p>\n<h2>How we built it</h2>\n<p>We built the game in Java, creating the tiles and sprites from scratch using Adobe Photoshop and Illustrator, and doing all the coding of the game in Java. We created a single scrolling maps with tiles and NPC's that the player could interact with, and differentiated between tiles that caused collisions and those that could be walked over. Finally, we created a variety of dialogue scenarios to make the experience more immersive for the user, including interactive dialogue.\nThe website was made in Html and CSS with multiple tabs to provide information, credits, and updates for users.</p>\n<h2>Challenges we ran into</h2>\n<ol>\n<li>It was our first time using pixel art, but our amazing artist Eli learned quickly.</li>\n<li>Coordinate systems with a scrolling map in Java were a pain.</li>\n<li>Implementing the collision system</li>\n</ol>\n<h2>Accomplishments that we're proud of</h2>\n<ol>\n<li>We made amazing pixel art for our first time using it</li>\n<li>We implemented a pretty glitch free collision system.</li>\n<li>We made our first real website.</li>\n</ol>\n<h2>What we learned</h2>\n<ol>\n<li>How to create pixel art and make sprites in Photoshop and Illustrator.</li>\n<li>Learned how to use Java coordinates to create maps, input entities, and include collisions.</li>\n</ol>\n<h2>What's next for LearningHax</h2>\n<p>Their are a variety of features that still need to be implemented, including the completion of the story, with further learning opportunities for users, multiple map locations, more interactive dialogue, and more.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/AmrEl-Azizi/Learning-Hacks.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/AmrEl-Azizi/Learning-Hacks.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/AmrEl-Azizi/Learning-Hacks-Website.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/AmrEl-Azizi/Learning-Hacks-Website.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Better Alarm Clock", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Better Alarm Clock \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/384/datas/gallery.jpg\"/>\n<p>\n<i>The layout of the website in LabRecon, and the wiring diagram.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Better Alarm Clock \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/398/datas/gallery.jpg\"/>\n<p>\n<i>A portion of our Java code.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Better Alarm Clock \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/448/datas/gallery.jpg\"/>\n<p>\n<i>A look at the physical hardware portion.</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Our friend Evan told us about how no matter what he does, he will sleep through his alarm clock without fail. He considered adding a motor to his bed to vibrate his mattress until he was forced out. Branching off of this idea, we ran into a hack someone did of a large rubber glove which slapped you awake in the morning. Plus, on an episode of <em>The Office</em>, Michael Scott said he liked waking up to the smell of bacon, and to accomplish this, he woke up earlier to start cooking bacon and went back to sleep to wake up later to the aroma of the fully cooked bacon. We thought that we could take this idea a step further with multiple methods of waking someone up, while also preparing many daily morning duties. </p>\n<h2>What it does</h2>\n<p>In order to most effectively motivate someone to get up, we thought of adjusting the alarm clock to the user and allowing the user to customize them. We created a web server which is accessible from any device that is connected to the internet, where you can decide whether the alarm is triggered by many different user inputs. This includes a set time of day, a certain brightness threshold (If the sun rose in the morning and it got much brighter), and a temperature reading. When the alarm is triggered, multiple components will activate. For the motivation aspect, we have a motor which spins a hand in your face, a fan which cools you down (making you less comfortable sleeping), and a very bright light. For the morning duties aspect, our device activates a power strip which can power many other devices such as a coffee machine or a toaster. Once you are through with the alarm, you can press a button to deactivate the processes.</p>\n<h2>How we built it</h2>\n<p>Using LabRecon's Breadboard Experimenter, LabRecon software, and additional chips, passive components, and sensors, we created the device. The Breadboard experimenter takes analog inputs from a photocell, temperature sensor (LM35), and push button (for deactivation). This data along with the time of day, and user set inputs for time, temperature, and light (all handled in the LabRecon software) is input into the code we wrote in Java using the LabRecon CodeLink feature. Then, in Java, we handled the logic of the device (When it turns off and on). This then output signals for the light, motor (for the hand), fan, and a solid state relay which we built into the power strip (which required some soldering). Additionally, the web server was a part of the LabRecon software as well. We created our own server using an adhoc script on one of our computers.</p>\n<h2>Challenges we ran into</h2>\n<p>Late at night it was hard to notice small errors in the code, and we overreacted to small nuances. Also the wiring could be a little easy to mix up at times.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are proud of our functional code, the server which works perfectly, the 3D printed component, completed breadboard, hacked power strip, and ultimately functional hack.</p>\n<h2>What we learned</h2>\n<p>We learned more about coding, running a server, LabRecon's software and hardware, and prototyping electronic circuits.</p>\n<h2>What's next for Better Alarm Clock</h2>\n<p>We want to make this cheaper and more commercial. We think we can accomplish many of the same tasks with a smaller brain like an ATTiny. We also wish to add more security to the server, or perhaps use a mobile app in place of the server. Additional inputs for the alarm system would be great to implement as well (heart rate, phone calls, etc.).</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag\">labrecon</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/hardware\">hardware</a></span></li></ul>\n</div>\n</div>", [""]], ["Safeguard", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Safeguard \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/429/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Safeguard \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/430/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Safeguard \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/431/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>In light of tragic events in the news recently - especially those involving mass shootings - we found it necessary to establish a way to quickly inform people in harm's way so that they can take proper actions to avoid impending danger.</p>\n<h2>What it does</h2>\n<p>Users can text a phone number associated with Safeguard when they witness a safety threat that could potentially harm many people. After users \"check in\", our backend process does the rest; a web application logs the safety threat and sends a message to other Safeguard users in the area to urge them to leave the area as soon as possible. In addition, the safety threat is logged on an interactive map that can be viewed online. Users may also see statistics such as cities with the most safety threats, the frequency of each type of threat (active shooter, biohazard, explosion, gas leakage, extreme weather), and examine a visualization of safety check-ins collected over the past year.</p>\n<h2>How we built it</h2>\n<p>We used Twilio to receive messages from users reporting a safety threat, and built a backend using Python, Flask, and MongoDB to analyze the incoming message for keywords relating to a particular type of safety threat. We also used Twilio to alert nearby Safeguard users of potential danger. Finally, we used JavaScript and the HighCharts API to create a visualization of past data.</p>\n<h2>Challenges we ran into</h2>\n<p>We initially found it difficult to work with the map and placing markers where people had checked in.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We were able to successfully incorporate every feature we set out to include: allowing users to check in, creating an interactive map, using geolocation to message users possibly in danger, and creating a data visualization of users' check-ins.</p>\n<h2>What we learned</h2>\n<p>We learned how to use MongoDB to store location data and using Twilio's geolocation feature to pinpoint relevant users to message in the case of an emergency or immediate safety threat.</p>\n<h2>What's next for Safeguard</h2>\n<p>We would like to give users specific advice about what to do when Safeguard texts them about a safety threat.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/highcharts\">highcharts</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/shaantamchawla/Safeguard\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/shaantamchawla/Safeguard\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Tutor", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspired by the Uber service, we created a service that offers high school students a way to make money while gaining valuable experience.</h2>\n<h2>This service links students to high schoolers in a 10 mile radius. The high school students require recommendations and transcripts to become a tutor.</h2>\n<h2>We built it using JavaScript, HTML, and CSS</h2>\n<h2>We had trouble setting up a database as well as the server. We needed this for a User Registration form.</h2>\n<h2>I am proud that I created a very nice website using Parallax as well as learning how to use Node Js.</h2>\n<h2>I learned Parallaxing and how to set up a server using Node JS.</h2>\n<h2>Secure funding and better create better User Accounts. Additional plans are on the Tutor website.</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n</div>", [""]], ["halper", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>I don't like writing long essays, so I tried to make a program that would automatically make my essay seem longer without me actually writing more stuff.</p>\n<h2>What it does</h2>\n<p>It (should) replace all the periods in the essay to size 14. This means that there is more space between periods, and a seemingly longer essay</p>\n<h2>How I built it</h2>\n<p>I used html and javascript to program my program.</p>\n<h2>Challenges I ran into</h2>\n<p>I couldn't find a way to replace all the periods in the essay, so I made another \"feature.\"</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I successfully installed a script that imported a text-editor box on my website.</p>\n<h2>What I learned</h2>\n<p>I learned that html is harder than it looks.</p>\n<h2>What's next for halper</h2>\n<p>I'll try and make the periods actually work.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://gist.github.com/Bowxia/8873495b2a13b72578f3c1912e5b8b78\" rel=\"nofollow\" target=\"_blank\" title=\"https://gist.github.com/Bowxia/8873495b2a13b72578f3c1912e5b8b78\">\n<i class=\"ss-icon ss-link\"></i>\n<span>gist.github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Gravity", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<div class=\"alert-box alert\">\n        This image is currently processing. Please be patient...\n      </div>\n<img alt=\"Gravity \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"https://devpost-challengepost.netdna-ssl.com/assets/defaults/software-d4334efb72013df43784baffede9d379.gif\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We are nerds and we like science and games.</p>\n<h2>What it does</h2>\n<p>It's a fun mobile game that incorporates real physical and familiarizes its players with gravity (and the inverse square law).</p>\n<h2>How we built it</h2>\n<p>With hard work and dedication (and Unity).</p>\n<h2>Challenges we ran into</h2>\n<p>Where to start...\nUnity's software version created a myriad of problems. We had difficulty with compatibility for Android. Fixing some bugs would introduce others.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We feel we worked well together and we believe our product looks well polished and professional. And as a bonus, we honestly find it fun and addicting!</p>\n<h2>What we learned</h2>\n<p>If you actually put in as much effort as you can, results are unbelievable. We found that sometimes problems were out of our reach and we'd have to find new ways to work around them.</p>\n<h2>What's next for Gravity</h2>\n<p>We continue making more levels and making it more fun for others.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li></ul>\n</div>\n</div>", ["I provided the majority of programming to this project and I also wrote the song for it.", "", "", ""]], ["Cncntr8", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Cncntr8 \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/006/datas/gallery.jpg\"/>\n<p>\n<i>Giving Educators the Tools they need to succeed</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>cncntr8-client</h1>\n<h2>Inspiration</h2>\n<p>We were inspired by the difficulty some students face in our current education system.</p>\n<h2>What it does</h2>\n<p>cncntr8 uses the power of the Muse headset to enable teachers with tools to assist students with learning disabilities such as ADHD.\nThe cncntr8 server connects to the Muse through the proprietary MuseIO interface binary, which broadcasts data over OSC. This data is processed and rebroadcast over WebSockets to our static client, which formats the data into an easy-to-read dashboard. We are also developing a solution for data recording and after-the-fact analysis of long-term concentration metric data.</p>\n<h2>How we built it</h2>\n<p>cncntr8-server is powered by Node.JS, with the WS and node-osc libraries for WebSocket and OSC (Open Sound Control) processing respectively.\ncncntr8-client is a static web page that employs JavaScript and JQuery heavily to receive and display data from cncntr8-server.\ncncntr8-muse-stub is a utility script that produces dummy data for testing cncntr8-server, cncntr8-client, and cncntr8-db-logger.\ncncntr8-db-logger is an alternative to cncntr8-server that logs incoming data from multiple devices to a MongoDB database for later consumption by cncntr8-db-viewer.\ncncntr8-db-viewer is a platform for after-the-fact analysis of data stored by cncntr8-db-logger. It supports plotting concentration data as a time series using the Plot.ly library.</p>\n<h2>Challenges we ran into</h2>\n<p>We initially attempted to write cncntr8-client in vanilla JavaScript, but it soon became clear that was impractical compared to JQuery.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are proud of learning more about JQuery and the DOM, as well as WebSockets.</p>\n<h2>What we learned</h2>\n<h2>What's next for Cncntr8</h2>\n<p>We hope to develop a custom classification algorithm for concentration data, and improve the cncntr8-client and cncntr8-db-viewer dashboards.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/muse\">muse</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/foundationdb\">foundationdb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag\">monk</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/plotly\">plotly</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/cncntr8/cncntr8-client\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/cncntr8/cncntr8-client\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Worked on the frontend, learned a lot about using JQuery to manipulate HTML fragments.", "I worked on the OSC/WS relay backend and the static frontend, as well as an experimental data logging and storage web app.", "", ""]], ["Memory", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to create a Lumosity-style application that would heighten your brain functions and give you scores according to how well you do in each function.</p>\n<h2>What it does</h2>\n<p>It trains your memory</p>\n<h2>How we built it</h2>\n<p>We came up with ideas and did research and collaborated to make it happen</p>\n<h2>Challenges we ran into</h2>\n<p>We wanted to have multiple minigames crammed into one big project, but we only got this one minigame done</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We got it working</p>\n<h2>What we learned</h2>\n<p>Don't code when tired. Bad idea.</p>\n<h2>What's next for Memory</h2>\n<p>We may add a reaction time feature</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://groups.yahoo.com/neo/groups/MemoryIsGood/files\" rel=\"nofollow\" target=\"_blank\" title=\"https://groups.yahoo.com/neo/groups/MemoryIsGood/files\">\n<i class=\"ss-icon ss-link\"></i>\n<span>groups.yahoo.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I helped with the ideas/logic, etc.", "", ""]], ["onHealth", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"onHealth \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/370/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"onHealth \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/080/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"onHealth \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/079/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"onHealth \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/081/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>A lot of projects in healthcare tend to focus on preventative measures and forget about those who are currently in need. We wanted to create a startup whose product would focus on those already afflicted and was modular enough to be expanded into future projects of the same sort.</p>\n<h2>What it does</h2>\n<p>onHealth (short for \"onlineHealth) is a database that allows the caretakers of Alzheimers patients to monitor the progression of their patients's physical and mental health over time. </p>\n<p>Patients are reminded by push notifications to take a daily <strong>memory test</strong> composed on questions based on the SAGE test, the current standard for Alzheimers testing (<a href=\"http://wexnermedical.osu.edu/patient-care/healthcare-services/brain-spine-neuro/memory-disorders/sage\" rel=\"nofollow\">http://wexnermedical.osu.edu/patient-care/healthcare-services/brain-spine-neuro/memory-disorders/sage</a>). The results of each test are sent to the patient's caretaker, with a push notification sent when a test is completed.</p>\n<p>Caretakers can access their own dashboard from the app from which they can see all of the patients that they currently take care of (caretakers can be attached to more than one patient). From there, they can look at individual patients and see statistics and generated graphs corresponding to the patient's progression over time.</p>\n<h2>How we built it</h2>\n<p>The backend of the app was implemented through Firebase. We used Objective-C and Swift to program the iOS-specific features. Our website (<a href=\"http://onhealth.tech\" rel=\"nofollow\">http://onhealth.tech</a>) includes a small amount of Javascript for some subtle animations as well.</p>\n<h2>Challenges we ran into</h2>\n<p>As we found out, Firebase tends to be very fickle when it comes to dealing with arrays and other similar data structures, and doesn't always consistently store them the same way every time. We had to reevalulate several of our data structures and interaction methods with the backend in order to account for this.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Other than learning how to use Firebase, we're very proud that we created something that can easily be expaned to cover future projects while still using the same database. Our main concept was that we could create a platform where healthcare applications could all eventually share the same data, and we believe that this version of onHealth meets that goal.</p>\n<h2>What we learned</h2>\n<p>We learned how to use Firebase and Twilio.</p>\n<h2>What's next for onHealth</h2>\n<p>We're looking to expand the product line of onHealth and possibly develop future applications with the focus of helping those who are currently in need.</p>\n<p>Also, you can access our site at <a href=\"http://anappleadaykeepsthedoctoraway.com/\" rel=\"nofollow\">http://anappleadaykeepsthedoctoraway.com/</a>, because our app is iOS and you take the memory test daily, haha (we're sorry).</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/objective-c\">objective-c</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/cocos2d\">cocos2d</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag\">html/css</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://onhealth.tech\" rel=\"nofollow\" target=\"_blank\" title=\"http://onhealth.tech\">\n<i class=\"ss-icon ss-link\"></i>\n<span>onhealth.tech</span>\n</a></li>\n<li><a href=\"https://github.com/ZacharyEspiritu/hackBCA\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ZacharyEspiritu/hackBCA\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/grago1999/hackBCA\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/grago1999/hackBCA\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the frontend, using Objective-C and Swift to integrate the interface I designed with Sketch with our backend. I also created the website.", "I worked primarily on a backend handling platform usable across different apps to connect every aspect of an individual's health.  This involved significant planing and working with firebase and submitting and requesting data from this central hub."]], ["twitter-stats", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"twitter-stats \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/593/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>I was feeling uninspired at hackBCA, honest. So I went to twitter to try and look for ideas, but I only got more distracted, and so I settled for making an app about my own downfall.</p>\n<h2>What it does</h2>\n<p>Looks at your main_timeline and your tweets to determine various statistics, from word choice, to who you tweet at.</p>\n<h2>How I built it</h2>\n<p>It's a simple O-authentication app that uses the twitter REST API to make calls from the server and back. Using NodeJS, I easily parsed the data and used plotly to graph.</p>\n<h2>Challenges I ran into</h2>\n<p>Client requests took a long time, I wish it was a bit faster. Other than that, I had some trouble with getting the frontend just where I wanted it to be.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I'm surprised the idea got this far. I thought I would drop if halfway through, but the results kept getting more interesting.</p>\n<h2>What I learned</h2>\n<p>That a simple idea that can grow to be very complex.</p>\n<h2>What's next for twitter-stats</h2>\n<p>That's up for you to decide! I will probably allow it to search more tweets, which I had trouble with as it resulted in multiple requests for dynamic users.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twitter\">twitter</a></span></li><li><span class=\"cp-tag\">npm-twitter</span></li><li><span class=\"cp-tag\">o-auth</span></li><li><span class=\"cp-tag\">request</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jade\">jade</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://twitter-statistics.herokuapp.com/\" rel=\"nofollow\" target=\"_blank\" title=\"http://twitter-statistics.herokuapp.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>twitter-statistics.herokuapp.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Affordable and Accessible FPV (First Person View)", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>While looking for ways to enhance my RC aviation experience, I came across \"First Person View\" tech. It was way too expensive. So I came up with my own.</p>\n<h2>What it does</h2>\n<p>Using google cardboard and your phone, it made an extremely accessible bundle of technology that is altogether many times less than the current prices of FPV tech.</p>\n<h2>How I built it</h2>\n<h2>Challenges I ran into</h2>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<h2>What's next for Affordable FPV (First Person View)</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">2.4ghz</span></li><li><span class=\"cp-tag\">5.8ghz</span></li><li><span class=\"cp-tag\">transmitter/receivers</span></li></ul>\n</div>\n</div>", [""]], ["iKitchen", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Suffering from forgetfulness has become very common in our consumer culture.  Often the most cluttered place in many households is the kitchen.  With food piled high in cabinets and stuck in the back of refrigerators, it seems expired food may go left alone in a dark corner for years with no one knowing, forever taking up precious space.  Additionally, lost food could result in someone\u2019s buying unnecessary extra food.  This being something we all deal with, we decided that measures should be taken to organize our food.  A simple way to do this is to document and sort all food into an inventory, where you can find all of the food that you have in your kitchen.  With this information, there are many possibilities including dietary control and recipe suggestions.  We decided this would be useful and so we decided to create iKitchen.</p>\n<h2>What it does</h2>\n<p>iKitchen is an inventory app which allows the user to easily add food by scanning barcodes.  After the barcode is scanned, the app receives info from the barcode, such as nutrition facts and product name which is then stored in an organized inventory.</p>\n<h2>How we built it</h2>\n<p>We used Ionic Framework to incorporate HTML, CSS, and Angular JavaScript to create our project.  First we used an API to scan barcodes from the app and retrieve the 12 digit UPC code from the food product.  Then we used a library that took a UPC code as a parameter and returned the nutrition information of the food in an XML.  Finally we used JavaScript to access and store this information in an organized inventory within the application.</p>\n<h2>Challenges we ran into</h2>\n<p>We had to download about an hour and a half worth of updates to be able to run XCode.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We were able to create our first mobile application which can be installed on various iOS devices.</p>\n<h2>What we learned</h2>\n<p>This being most of our first time creating a web app, we learned a lot about this new style of application building.  While there are many similarities to web development, which we have more experience with, many key differences between the two types of projects surprised us.  But we learned a lot about the differences and the structure of web applications.</p>\n<h2>What's next for HackBCA</h2>\n<p>We would like to further develop iKitchen by implementing additional features such as sharing inventories and managing allergies.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/angular-js\">angular.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ionic\">ionic</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/vaedprasad/HackBCA\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/vaedprasad/HackBCA\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Samarita", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Samarita \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/509/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Samarita \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/510/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Samarita \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/511/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Samarita \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/512/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Samarita \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/513/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Samarita \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/514/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>For our HackBCAIII submission we wanted to create an application to change the world. To achieve this, we built a website and backend designed to quickly pair people with charities they would likely be interested in volunteering with or donating to. Because ease of access is a major determining factor in whether or not a person will complete a given action, we thought that by facilitating the process of connecting volunteers, donations, and charities in one clean web-based application we would create an environment in which generosity is a more natural tendency.</p>\n<h2>What it does</h2>\n<p>Samaritan matches users with charities and organizations by giving them an easy way to donate extra time and items as well as money to charities on a geolocation- and need-based system.</p>\n<h2>How we built it</h2>\n<p>We used HTML, CSS, MySQL, PHP, PHPMyAdmin, Twilio, and leveraged the Amazon Web Services cloud infrastucture to host our charity database.</p>\n<h2>Challenges we ran into</h2>\n<p>Getting a database set up and connected to the website was by far the hardest part. This problem was exasperated by the fact that nobody on our team had any experience with PHP.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are collectively very proud of creating a donor-charity connection service and successfully linking it to the website.</p>\n<h2>What we learned</h2>\n<p>We learned important development skills such as PHP integration and database management.</p>\n<h2>What's next for Samarita</h2>\n<p>We hope to further integrate Twilio into our backend, allowing charities to communicate directly with potential Good Samaritans (donors/volunteers) via text message and voice call. Additionally, we hope to eventually acquire an https secure certificate, allowing us to safely route visitors of the site to the websites of the connected organizations. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://10.31.76.234/\" rel=\"nofollow\" target=\"_blank\" title=\"http://10.31.76.234/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>10.31.76.234</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I created the database that held our charity information and user login information using MySQL on Amazon Web Service. I also integrated this into the website using PHP.", "I came up with the original idea and worked on the design aspect of the website. With minimal coding experience, I was only able to supply minor contributions of HTML and CSS, but I talked through the coding with our more proficient developers to facilitate group-wide idea development.", "I worked on the html webpage design. I also contributed to the testing of functions in the website. ", "I primarily worked on leveraging Flask to allow a user on a webpage to trigger a  Twilio POST request. I also aided in the creation of the MySQL charity and user database on the AWS infrastructure. I also set up the local webserver to test our site, and I own the git repository the code is hosted on."]], ["Education Oracle", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Education Oracle \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/278/datas/gallery.jpg\"/>\n<p>\n<i>Breaking the education gap by providing free, interactive counseling services to students everywhere</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration: Educational Barriers</h2>\n<p>Students from disadvantaged neighborhoods face a fundamental problem: they lack access to the counseling resources that can help them achieve. Unfortunately, there is a tremendous shortage of counselors. For instance, in California, the ratio of available counselors to students is <strong>1 to 1000</strong>. </p>\n<p><strong>The dearth of guidance counselors is a source of the widening of educational gap between the advantaged and the disadvantaged youth in America.</strong> We hope to solve this issue through our project.</p>\n<h2>Our Solution: A Guidance Counselor Chatbot</h2>\n<p>Our solution, the Education Oracle, is an interactive guidance counselor chatbot. Students can interact with the chatbot, ask friendly questions, and receive conversational responses that provide easier-to-understand suggestions. This following features are implemented or will be included in the future:\n  -provide information about summer opportunities \n  -match students to colleges based on their priorities\n  -explain difficult concepts like financial aid and the college application process\n  -provides consolation on ivy day \n  -crowdsourcing of expert opinions to develop a database of answers to help answer a variety of questions</p>\n<h2>Challenges we ran into and what we learned</h2>\n<p>Our entire team had no prior experience in web development, so we heavily relied on tutorials and online resources such as Codeacademy. Features that were ostensibly trivial such as receiving input from the user using HTML turned out to be some of the most difficult aspect of our project. But we are all very glad how the final product turned out to be and succeeded in gaining basic experience in HTML/CSS/Javascript.</p>\n<h2>What's next for Education Oracle</h2>\n<p>Eventually, we hope to increase the versatility of our chatbot in the types of responses it can provide using machine learning algorithms that factor in student characteristics. By implementing this in conjunction with crowdsourcing, we hope to make this an effective tool to level the playing field in education.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://sahajgarg.github.io/Chatbot/\" rel=\"nofollow\" target=\"_blank\" title=\"http://sahajgarg.github.io/Chatbot/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>sahajgarg.github.io</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Grapevine", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Grapevine \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/114/datas/gallery.jpg\"/>\n<p>\n<i>home page</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Grapevine \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/171/datas/gallery.jpg\"/>\n<p>\n<i>background drawn by team member</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Grapevine \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/407/datas/gallery.jpg\"/>\n<p>\n<i>message screen</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Grapevine \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/462/datas/gallery.jpg\"/>\n<p>\n<i>logo</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to create a website that would help people connect with people who speak other languages and practice communicating their desired language with a pen pal.</p>\n<h2>What it does</h2>\n<p>Um..well... We didn't get to finish the entire code because we were struggling a lot with PHP, JavaScript, Twilio, and pretty much everything.  Right now our project just has links to the different pages and basically shows what each page should look like.  We have the home, about, sign up, login, and messaging screens, but the sign up, login, and messaging screens aren't interactive.</p>\n<h2>How we built it</h2>\n<p>We used a text editor to program in HTML and CSS.  We also used a drawing tablet to draw the logo and the background picture.</p>\n<h2>Challenges we ran into</h2>\n<p>Everything was a challenge.  Since we are all beginners, we had a lot of trouble with APIs and PHP and JavaScript and those moments when we had to debug but couldn't see where we went wrong...</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We have a really pretty website, although it doesn't work.  We are proud of making something that sucks.</p>\n<h2>What we learned</h2>\n<p>We learned basic HTML, CSS, basics on APIs and Machine learning.</p>\n<h2>What's next for Grapevine</h2>\n<p>We want to learn PHP in order to let the forms for registration and logging in and figure out how to use the Twilio API for IP messaging.  Right now the registration screen doesn't record anything and you can log in by leaving the log in thing blank.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/amulyamummaneni/Pen-pal-buddies-.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/amulyamummaneni/Pen-pal-buddies-.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["HackBuddies", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to find a way for people who don't know many coders to be able to find people near they live to work on coding projects.</p>\n<h2>What it does</h2>\n<p>It helps people find people close to them who are interested in coding similar programs.</p>\n<h2>How we built it</h2>\n<p>Android Studio and Google Cloud API.</p>\n<h2>Challenges we ran into</h2>\n<p>Installing Studio, using the Cloud API.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Learning a bunch of Android.</p>\n<h2>What's next for HackBuddies</h2>\n<p>Expanding the capabilities of the app.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-cloud\">google-cloud</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://drive.google.com/file/d/0B4giY7YK5_l2ZE9WeS1zZ083RWM/view?usp=sharing\" rel=\"nofollow\" target=\"_blank\" title=\"https://drive.google.com/file/d/0B4giY7YK5_l2ZE9WeS1zZ083RWM/view?usp=sharing\">\n<i class=\"ss-icon ss-link\"></i>\n<span>drive.google.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Le Flappy Bobo", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Last year I submitted a similar project, but it sort of... kind of... broke. So, this year I decided to redo it, making sure this time it worked as wanted</p>\n<h2>What it does</h2>\n<p>It is a game that puts a dank twist on the classic game Flappy Bird</p>\n<h2>How I built it</h2>\n<p>Jquery, JavaScript, CSS, and html</p>\n<h2>Challenges I ran into</h2>\n<p>Getting the code to respond and work with itself.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Finishing the project</p>\n<h2>What I learned</h2>\n<p>Coding is hard but if you work hard you will succeed.</p>\n<h2>What's next for Le Flappy Bobo</h2>\n<p>Le Flappy Bobo 2: The Second One</p>\n<p><strong>I have received consent from all the people displayed in the game to use their faces</strong></p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://codepen.io/zenthegod/full/vEPeoZ\" rel=\"nofollow\" target=\"_blank\" title=\"http://codepen.io/zenthegod/full/vEPeoZ\">\n<i class=\"ss-icon ss-link\"></i>\n<span>codepen.io</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I tweaked the code and made the images."]], ["hghfhgghg", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"hghfhgghg \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/160/datas/gallery.jpg\"/>\n<p>\n<i>Our inspiration</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"hghfhgghg \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/187/datas/gallery.jpg\"/>\n<p>\n<i>The original inspiration, credits to imgur</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Children</p>\n<h2>What it does</h2>\n<p>Nothing</p>\n<h2>How we built it</h2>\n<p>Kaushik</p>\n<h2>Challenges we ran into</h2>\n<p>Miyu</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Ralph</p>\n<h2>What we learned</h2>\n<p>There are 13 snakes</p>\n<h2>What's next for hghfhgghg</h2>\n<p>More jokes/ Twilio Integration</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xml\">xml</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://github.com/KauMah/hghfhgghg\" rel=\"nofollow\" target=\"_blank\" title=\"http://github.com/KauMah/hghfhgghg\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Pitched the idea, and found many jokes and tested if they were moderately funny. Also found several of the images for every joke! ", "", "", ""]], ["Emergent", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Annually, over one thousand lives are lost in the nation\u2019s biggest and most \u201cefficient\u201dcities unnecessarily, solely due to the fact that emergency medical systems fail to manage a quick enough response time. In life threatening situations, there is no luxury of time, and so every precious second counts. </p>\n<h2>What it does</h2>\n<p>Using crowdsourcing techniques, our application, Emergent, utilizes the community itself to gather a force of people who will be able to help provide care to those in need of immediate medical attention. The application will be connected to any smartwatch with a heart rate sensor; once the user\u2019s heartbeat is detected to be at a rate which is deemed dangerously high (&gt; 150) or low (&lt; 88), Emergent will pinpoint the user\u2019s location on a map and send a message regarding the user\u2019s medical situation and directions to the user\u2019s location to other certified professionals\n in the user\u2019s vicinity so that they will be able to receive adequate medical attention. Citizens of the community who are trained in techniques such as cardiopulmonary resuscitation (CPR) and automated external defibrillator (AED) usage can respond significantly quicker than other emergency vehicles, such as ambulances. This consequently saves time, which is a precious commodity during emergency situation. Saving valuable hours, minutes, and even seconds, is directly correlated to an increase in one\u2019s life expectancy after experiencing an emergency health scenario. </p>\n<h2>How I built it</h2>\n<p>We built this application with hard work, dedication, motivation and lots and lots of love! More specifically, we used the Xcode integrated development environment on the Mac OS X software. In order to program our iOS application, we used the Swift mobile development application development. In addition, we utilized the Twilio API and Google maps API. </p>\n<h2>Challenges I ran into</h2>\n<p>Our team ran into multiple challenges while building this product. It was the first time for 4 out of 5 members of our to engage in IOS development, and so this took some to get familiarized with. In addition, it was the first time for all members of our team to use an API like twill, and getting this to function with an IOS app was an especially difficult challenge.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We are proud of being able to convert our original idea into a tangible reality, and being able to come to an end product that may potentially save thousands of lives in the future.</p>\n<h2>What I learned</h2>\n<p>Beyond all the programming skills we have gained, we have also learned collaboration skills. Prior to this event, some members of the team did not know each other at all. After coming together to collaborate on this project, we learned how to effectively work in a group setting and still manage to make all of our individual voices heard. In addition, we learned valuable networking skills and how to step outside of our comfort zones. </p>\n<h2>What's next for Emergent</h2>\n<p>In the future, we are planning to tailor the smartwatch portion of the application. Ideally, we would develop a companion smartwatch application to go along with the iPhone iOS application that we created. We would also like to create a reward system for the members of the community who successfully participate, so that more and more people will be incentivized to take a step forward in helping members of their community.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ios\">ios</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xcode\">xcode</a></span></li></ul>\n</div>\n</div>", ["", "", "", ""]], ["MadLibs Hackathon Version", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/47pdAAvVOeo?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>I originally came into the Hackathon wanting to create another game, but then came up with the idea of taking the well known MadLibs that is a fun educational game, and bringing it to the internet, where it also has the capability of being a single player game.</p>\n<h2>What it does</h2>\n<p>The website asks questions to the user and takes the data to form a funny/enjoyable story.</p>\n<h2>How I built it</h2>\n<p>I built this using mainly JavaScript, HTML to connect it, and CSS for designing aspects.</p>\n<h2>Challenges I ran into</h2>\n<p>I had small bugs with typos, and some issues with making JavaScript text aligned, but I solved the problem.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I was proud of creating a game within a few hours by myself.</p>\n<h2>What I learned</h2>\n<p>I learned how to make a simple game out of just user prompts and document.writes.</p>\n<h2>What's next for MadLibs Hackathon Version</h2>\n<p>I would like to create more stories for it.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://clarkescode.altervista.org/hackathonMadLibs/hackathon.html\" rel=\"nofollow\" target=\"_blank\" title=\"http://clarkescode.altervista.org/hackathonMadLibs/hackathon.html\">\n<i class=\"ss-icon ss-link\"></i>\n<span>clarkescode.altervista.org</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Capture the Swag", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>hackBCA2016</h1>\n<p><em>Note: For the final version, please use the master .zip file</em></p>\n<p>Inspired by geocaching and Capture the Flag security competitions, we wanted to build puzzles and instill critical thinking within the community. Twilio's API features allowed us to extend our capabilities to mobile devices via text. </p>\n<p>In our HTML/CSS file, we set up a form with text areas and submit buttons. On this site, users submit their cell phone numbers to receive and solve puzzles via texting. Users also create and add their own puzzles to the site, allowing other users to solve them.</p>\n<p>The website references a Python file which used the Flask installation. In this, we sent text messages through Twilio's provided phone number. Once users receive the text from the generated number, they respond back with guesses. This response is recorded and accessed using the Twilio API. In yet another Python file, it checks the user input. If the input is correct, another puzzle is texted to the user.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/daschachter/hackBCA2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/daschachter/hackBCA2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked mostly on front end while helping Darren with debugging the backend. Working with Flask/Twilio was definitely rewarding as it was our first time doing anything with backend.", "I worked on the frontend! And 0.05% of the backend! And slept whilst my team worked!", "I worked mostly on the backend, integrating the flask with the webpage. Additionally, I worked with the twilio API."]], ["DiagnoSMS", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"DiagnoSMS \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/787/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>DiagnoSMS helps people in locations without internet diagnose serious medical conditions through a SMS interface that's available anywhere.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/GlennRen/diagnoSMS\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/GlennRen/diagnoSMS\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Git To The Hub", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Git To The Hub \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/092/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>This project is a pun on the purpose of GitHub.</p>\n<h2>What it does</h2>\n<p>Play the game, dominate them all! A multiplayer game using only your browser, with the objective of dominating the \"hub\".</p>\n<h2>How we built it</h2>\n<p>We used socket.io in conjunction with html5 canvas to create this game for all platforms.</p>\n<h2>Challenges we ran into</h2>\n<p>A lot of difficulties with physics and mechanics.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Making a functional multiplayer game with only JS and HTML5 (NodeJS).</p>\n<h2>What we learned</h2>\n<p>Git-ing can be very fun!</p>\n<h2>What's next for Git To The Hub</h2>\n<p>Multi-device support, more octocats, and more puns.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/canvas\">canvas</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/socket-io\">socket.io</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/vector-magic\">vector-magic</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://GitToTheHub.tech\" rel=\"nofollow\" target=\"_blank\" title=\"http://GitToTheHub.tech\">\n<i class=\"ss-icon ss-link\"></i>\n<span>GitToTheHub.tech</span>\n</a></li>\n<li><a href=\"http://GitToTheHub.com\" rel=\"nofollow\" target=\"_blank\" title=\"http://GitToTheHub.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>GitToTheHub.com</span>\n</a></li>\n<li><a href=\"https://github.com/penumbragames/git-to-the-hub\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/penumbragames/git-to-the-hub\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Gnarly graphics and moral support.", "Worked on the backend and designed the game logic on the server.", "", ""]], ["PowerBlocker", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Almost every high school student has heard of the terror that is Powerschool. We decided to ease the stress that comes with facing it every day.</p>\n<h2>What it does</h2>\n<p>PowerBlocker is a Chrome extension that blocks Powerschool specifically for BCA students. It then redirects the student to several pages of relaxing (or meme-taining) activities.</p>\n<h2>How we built it</h2>\n<p>Trash jokes, dank memes, and stack overflow.</p>\n<h2>Challenges we ran into</h2>\n<p>We were initially going to create an extension that blocked certain websites until you reached a certain GPA, but that proved to be too difficult for us mere beginners. So, we took a step back and created a simple blocker with a simple problem in mind. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We did it. (Also our logo.)</p>\n<h2>What we learned</h2>\n<p>Javascript, API usage, more HTML and CSS</p>\n<h2>What's next for PowerBlocker</h2>\n<p>Counter, timer, better UI, hopefully that GPA tracking idea</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/CelinaPeralta/PowerBlocker\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/CelinaPeralta/PowerBlocker\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the back-end of the extension. I had to learn some javascript fundamentals in the first 6 hours before actually hacking. It was frustrating, but I learned a lot.", "I worked on the front-end aspect of this project. I used CSS and HTML to create the website and the popup for this hack.", "I added to the back-end part of the project using JavaScript. I also wrote some of the HMTL that would be in the final website. ", ""]], ["G.O.T (Get On Task)", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Understanding the consequences of ADHD/ADD in correlation with work ethic and focus because one of our team members suffers from ADHD, we felt it was necessary to create a new method for reminding individuals to get back to work.  </p>\n<h2>What it does</h2>\n<p>While working, students often do not recognize that they are off task or the extent to which they are distracted. G. O. T works to combat this issue by incorporating a pop-up when individuals are on a particular website that is distracting to their work such as gaming websites, Tumblr, etc. Along with this, a vibration is sent using the Myo ArmBand that refocuses the individual and allows them to recognize that they are off task. </p>\n<h2>How we built it</h2>\n<p>This web app was created with google chrome extension and Myo ArmBand. We used a combination of Javascript and HTML. First, we followed Google's guide to creating a chrome extension, and altered the three given files to detect the site that the user is currently on. With if-else statements, the code decided whether the site was part of the predetermined \"blacklist\" of sites that are deemed distracting. We created alerts that would automatically remind the user to stay on task when on a particular site, instead of being distracted. Afterwards, this extension was connected to the Myo ArmBand which then caused a vibration on the user's arm due to code written in Javascript. </p>\n<h2>Challenges we ran into</h2>\n<p>With beginner level experience, we spent a majority of our time attempting to understand the code and hardware rather than creating. Additionally, our lack of knowledge and access to resources prohibited us from reaching the full capabilities of the Myo function. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Based on our level of experience we are astonished that we have been able to complete as much as we have. With the little information available and intricate design of the Myo ArmBand and Chrome Extensions, we are proud that we have been able to understand and develop the technology to make G.O.T function properly. In the end, through the grueling hours of the night working hard, together, we are pleased to say that we have been able to create something substantial that we ourselves could benefit from in the near future. </p>\n<h2>What we learned</h2>\n<p>Over the course of this hackathon, we learned how to use chrome extensions as well as became familiar with the Myo ArmBand. We discovered how to run a extension in a background and display popup notifications in the main window. Additionally, we figured out how to connect and code a Myo ArmBand to perform various activities as well as interact with the chrome extension. We strengthened our skills in JavaScript andHTML. Aside from the physical knowledge we gained, we were able to learn to work together and time manage in order to execute our idea with the time limit at hand. The most important thing we learned is the value of hacking and how important our creations, no matter how simple, are for the improvement of the online world. </p>\n<h2>What's next for G.O.T (Get On Task)</h2>\n<p>This two-part system can develop into an interface allowing the user to decide which sites to \u201cblacklist\u201d as well as repeated vibrations and popups with continuous usage of said sites. Additionally, the extension will expand to a vast majority of sites.  For example, if an individual wants to be warned away from Reddit, Tumblr, and Netflix, they will thus be able to personalize their experience. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/chrome\">chrome</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/myo\">myo</a></span></li></ul>\n</div>\n</div>", ["", "", "", ""]], ["Train Story", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Train Story \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/041/datas/gallery.jpg\"/>\n<p>\n<i>The protagonist</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>There was no real inspiration, it's lightly based off of the phoenix wright games, but really it's just a creative immersive logic puzzle.</p>\n<h2>What it does</h2>\n<p>Its a game and you play it.</p>\n<h2>How we built it</h2>\n<p>Java and libgdx</p>\n<h2>Challenges we ran into</h2>\n<p>Not sleeping.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Finishing.</p>\n<h2>What we learned</h2>\n<p>How difficult it is to program without sleep.</p>\n<h2>What's next for Train Story</h2>\n<p>Train Story 2</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/libgdx\">libgdx</a></span></li></ul>\n</div>\n</div>", ["I coded most of the game, other than the dialogue", "I drew all the sprites and made some music tracks we didn't use. I helped look at the code. I wrote the dialogue script.", "I coded a bit of the game along with Brandon. However, Brandon did the vast majority of coding."]], ["Prison Break", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration- Games such as banner saga where the player follows a story and then makes decisions that will impact the outcome of the story are very popular and one of the most interesting types of games to play.</h2>\n<h2>What it does- The program runs through a story mode where the user is asked to make certain calls and texts that will change what happens next in the story and eventually the ending.</h2>\n<h2>How I built it- The whole program was written in python using sublime text three.</h2>\n<h2>Challenges I ran into- Coming into this event, I had absolutely no previous experience in coding or programming. I spent hours on code academy, learning the python language. Essentially not knowing what I was doing, writing the code was a very long and tedious process. Often when I would try to run my program, there would be errors and I would have no idea what to do. Then I would have to look at my entire written code in order to figure out what the problem was.</h2>\n<h2>Accomplishments that I'm proud of- I am proud that I was able to come from having no experience in coding or programming to being able to create and application that successfully runs an interesting and fun game.</h2>\n<h2>What I learned-I learned 30% of the python language and how to troubleshoot, problem solve and incorporate the input of others into my work.</h2>\n<h2>What's next for Prison Break- The first step in prison breaks advancement is some music that goes along with the plot line. The music could change to fit the tone of the events occurring at that point of the story. Also, Prison Break would need an expansion that would allow for more scenarios</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/coreysch/HackBca3\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/coreysch/HackBca3\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["NYCTeen", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>What It Does</h2>\n<p>So what happens when you are underage and find out that most of the things that NYC provides you are not able to go. You become bummed out. So that why we decided to help teenagers to find cool and unique places about NYC that even people that lived here their whole entire lives don\u2019t even know of. So please welcome NYC Teen. This app will not only help you find new places but you will actually be able to enter these places. You can look between entertainment, food and activities. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag\">api</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://preview.c9users.io/xxshadowwolfxx/hack_bca_3_project/startbootstrap-landing-page-1.0.5/index.html?_c9_id=livepreview0&amp;_c9_host=https://ide.c9.io#\" rel=\"nofollow\" target=\"_blank\" title=\"https://preview.c9users.io/xxshadowwolfxx/hack_bca_3_project/startbootstrap-landing-page-1.0.5/index.html?_c9_id=livepreview0&amp;_c9_host=https://ide.c9.io#\">\n<i class=\"ss-icon ss-link\"></i>\n<span>preview.c9users.io</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["My Personal Website", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>I recently started wanting to get into software developing and programming and I also needed to make a portfolio because I will need something to show colleges.</p>\n<h2>What it does</h2>\n<p>Displays who I am, my accomplishments and skills.</p>\n<h2>How we built it</h2>\n<p>I found a template, but I was able to edit many pieces such as the alignment, change the amount of buttons, link successfully to what I wanted to link, edit images on photoshop to put in the page and tried to figure out what the other pieces of code mean. The main thing that I was able to do was learn github which was the main goal of my time here.</p>\n<h2>Challenges we ran into</h2>\n<p>Github was a little rough to begin with because I was confused on how repositories, commits and pulling works. However, the idea of branches and working with another person made more sense.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Making the website and finishing it because I failed whenever I had started before.</p>\n<h2>What we learned</h2>\n<p>How to use github successfully, a good idea of bootstrap and its organizational powers, and friendship</p>\n<h2>What's next for My Personal Website</h2>\n<p>Keep on adding features and changing my portfolio as I gain more experience</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/ralphdelacruz/ralphdelacruz.github.io\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ralphdelacruz/ralphdelacruz.github.io\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Projectile Motion Calculator", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Projectile Motion Calculator \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/055/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Physics class</p>\n<h2>What it does</h2>\n<p>Calculates variables involved in projectile motion. Shows students solutions to problems. Helps physics students learn better. Makes the world a better place.</p>\n<h2>How I built it</h2>\n<p>Basic HTML and Javascript</p>\n<h2>Challenges I ran into</h2>\n<p>Haters</p>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<h2>What's next for Projectile Motion Calculator</h2>\n<p>More functionality and better visuals (possibly animations) </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/photoshop\">photoshop</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/dreamweaver\">dreamweaver</a></span></li></ul>\n</div>\n</div>", [""]], ["Portable Raspberry Pi 3", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Portable Raspberry Pi 3 \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/963/datas/gallery.jpg\"/>\n<p>\n<i>Desktop</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Portable Raspberry Pi 3 \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/964/datas/gallery.jpg\"/>\n<p>\n<i>Touchscreen</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Portable Raspberry Pi 3 \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/965/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Portable Raspberry Pi 3 \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/966/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Portable Raspberry Pi 3 \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/967/datas/gallery.jpg\"/>\n<p>\n<i>Touchscreen</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Portable Raspberry Pi 3 \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/968/datas/gallery.jpg\"/>\n<p>\n<i>Command line</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Portable Raspberry Pi 3 \u2013 screenshot 7\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/969/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Portable Raspberry Pi 3 \u2013 screenshot 8\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/970/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Portable Raspberry Pi 3 \u2013 screenshot 9\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/992/datas/gallery.jpg\"/>\n<p>\n<i>Wifi/Chromium browser</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>I've always been intrigued by Linux and Raspberry Pi, so I decided to try my hand at making it portable.</p>\n<h2>What it does</h2>\n<p>It runs a full Linux desktop (Debian Jessie). The screen is touchscreen which allows for convenient navigating. The Pi 3 also features Wifi and Bluetooth to make this a fully wireless experience.</p>\n<h2>How I built it</h2>\n<p>I soldered my LiPo battery to a booster and then to the Pi for power. I created a circuit sandwich with the battery and booster in between the Pi and display.</p>\n<h2>Challenges I ran into</h2>\n<p>I needed to remove the camera and display ribbon connectors from the Pi to allow for adequate space for the battery. Also, thermals may be an issue as the processor on the Pi 3 runs hot.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>My ability to include all the components I wanted, and to have it work.</p>\n<h2>What I learned</h2>\n<p>You will always find bumps in the road along the way, even when you never expect them.</p>\n<h2>What's next for Portable Raspberry Pi 3 Desktop</h2>\n<p>Better thermal management, more lightweight design, and cheaper production cost.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li></ul>\n</div>\n</div>", ["", "", "", ""]], ["Head-Phone", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/qwWeOefpw6c?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Head-Phone \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/788/datas/gallery.jpg\"/>\n<p>\n<i>Version 1: A bit uncomfortable with the phone tilted too high but it gets the job done.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Head-Phone \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/789/datas/gallery.jpg\"/>\n<p>\n<i>Version 2: Much more comfortable and with a better shooting angle</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>A GoPro is expensive and out of reach for someone who simply wants first person or hands free video. Everyone has a camera in a form of a smartphone, so why not 3D print a way to mount it on your head? It's inexpensive and effective.</p>\n<h2>What it does</h2>\n<p>It sits on your head and your phone gets strapped in. Start recording and enjoy the amazing first person/hands free footage!</p>\n<h2>How I built it</h2>\n<p>I first outlined the model in a program called OnShape, keeping in mind the measurements and limitations of a 3D printer. The first model was uncomfortable and had the wrong view angle, so I printed another one with better ergonomics and shooting angles. The headband is made of 4 looped insulated wires attached to Velcro and secured with heat shrink tubing. Finally, a rubber band secures the phone using specially designed grooves. </p>\n<p>The trigger is made out of a disassembled selfie stick with tubing as well.</p>\n<h2>Challenges I ran into</h2>\n<p>Sourcing parts for sure. I spent a full hour looking for one rubber band. The Velcro? Ripped from my and my partner's laptop chargers. The wire that constitutes the headband is insulated copper wire, meant to be used electrically and definitely not as a type of rope. </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Creating a second and comfier design is definitely there. I'm most proud of being resourceful and creative to build my model, however.</p>\n<h2>What I learned</h2>\n<p>Copper wire is very strong. Heat shrink tubing is a lifesaver. Not everyone's forehead caves in like the Mariana Trench. No one in a hackathon has a rubber band. </p>\n<h2>What's next for Head-Phone</h2>\n<p>Releasing it open source on Thingiverse for everyone to download. A better head strap. An updated design to better accomdate other phones. Setting up an Etsy or Shapeways shop. Perhaps a better name.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">onshape</span></li><li><span class=\"cp-tag\">pla</span></li><li><span class=\"cp-tag\">heat-shrink-tubing</span></li><li><span class=\"cp-tag\">velcro-from-our-laptop-chargers</span></li><li><span class=\"cp-tag\">rubberbands</span></li><li><span class=\"cp-tag\">insulated-wire</span></li></ul>\n</div>\n</div>", ["I designed and 3D-printed the model as well as building the headband and assembling the final product.", "I beta tested the initial prototype and identified the problems that needed to be dealt with for the final product."]], ["Safeguard", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We noticed that people with asthma go to places that are not safe for them without knowing they really feel bad when their asthma crisis arrive so we decided to create a application which allows them to determine the places that are a risk to their health.</p>\n<h2>What it does</h2>\n<p>Safeguard gathers your current location by finding the latitude and longitude of your device with the help of the html 5 geolocation API. Next, using the API of Breezometer,  we are able to gather how dangerous the air outside would be for a person with Asthma. Finally, with the use of Twilio, we are able to send a text message to the person to warn them about the hazards in their local area.</p>\n<h2>How we built it</h2>\n<p>We built our app using Cloud 9 where we wrote our html, CSS, JavaScript and incorporated our APIs.</p>\n<h2>Challenges we ran into</h2>\n<p>We ran into a few challenges where we faced problems getting our APIs to work correctly and displaying our elements the way we wanted them to be.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are proud of creating an app that would be able to help people in need and we would like to continue doing similar things in the future.</p>\n<h2>What we learned</h2>\n<p>We learned that it takes a while to accomplish our intended goal and that we are always going to face obstacles along the journey to our dreams, but with enough hard work and persistence we can overcome those challenges.</p>\n<h2>What's next for Safeguard</h2>\n<p>Our plans for safeguard in the future are to find ways to help people that suffer from other diseases the same way we helped the people with asthma.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag\">html-5-geolocation</span></li><li><span class=\"cp-tag\">breezometer</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://hackbca3-dan55162.c9users.io/demo.html\" rel=\"nofollow\" target=\"_blank\" title=\"https://hackbca3-dan55162.c9users.io/demo.html\">\n<i class=\"ss-icon ss-link\"></i>\n<span>hackbca3-dan55162.c9users.io</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["The Can Tower & Website", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"The Can Tower &amp; Website \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/871/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"The Can Tower &amp; Website \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/872/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"The Can Tower &amp; Website \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/873/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"The Can Tower &amp; Website \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/874/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>I started to hot glue gun some soda cans together and then I was like, why dont I make a website for this sculpture.</p>\n<h2>What it does</h2>\n<p>It has a scrolling homepage and links out to a twitter account and a Google account. It </p>\n<h2>How I built it</h2>\n<p>I used a bootstrap template and imported images that I took from my phone. I then edited the html and css. I also glued soda cans together and made a huge pyramid / tower. </p>\n<h2>Challenges I ran into</h2>\n<p>Getting the homepage to smooth scroll was REALLY hard and it took me most of the time. </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Making a nice looking soda can sculpture and making my first full website</p>\n<h2>What I learned</h2>\n<p>I learned how to use bootstrap and learned about Js basics. </p>\n<h2>What's next for The Can Tower Website</h2>\n<p>Creating more pages to add on and then hopefully next year he will have a can tower buddy / brother. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://the-can-tower-brinker1999.c9users.io/\" rel=\"nofollow\" target=\"_blank\" title=\"http://the-can-tower-brinker1999.c9users.io/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>the-can-tower-brinker1999.c9users.io</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Northern Highlands App", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Northern Highlands App \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/861/datas/gallery.jpg\"/>\n<p>\n<i>Schedule screen</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Northern Highlands App \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/862/datas/gallery.jpg\"/>\n<p>\n<i>Main screen</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>I really wanted to learn IOS development, but I wasn't sure how I wanted to learn it.\nI wanted to do something important and something I could use in my day to day life rather then just create something useless. Thats when I decided I would create an app for my entire school, an app that would help everyone stay organized and allow the user to receive notifications on important events. I am personally very disorganized with my work and could benefit from an app like this. If you can wish it, you can build it!</p>\n<h2>What it does</h2>\n<p>The app shows your name, your ID, the letter day (the letter day determines the schedule of classes), your schedule, a map of the school building, a list of homework you have, a few emails and numbers for emergencies, and special schedules. Later on, I have plans to implement twilio, so I can add text message alerts whenever we have a snowday.</p>\n<h2>How I built it</h2>\n<p>I built this solely on Xcode, using Swift. I used Make School and other hackers to guide me through any questions stack overflow couldn't answer. I also started an android part of the application, but started in the last 2 hours of the hackathon. I used a tutorial google offered and it was a bit more complicated and harder to understand, but thats to be expected.</p>\n<h2>Challenges I ran into</h2>\n<p>Swift,Xcode, and Android studio were all 3 new, different, and amazingly complicated things that I was trying to pick up. Finding resources for beginners wasn't easy, but I eventually found something to help me. Grammar and Syntax was also a very big issue for me. I was reading and hearing words like \"storyboard\" and \"let\", words I've never heard before. New words like those threw me off because I had never heard of them. Syntax is also a bit different for both languages. On swift, you no longer need semi-collins and android had all this talk about gradles and Java JDK's.\nOn top of that, my partner left me (to go home) and had done no work whatsoever. Meaning it was up to me to do the entire project that was originally meant for two people. It was quite a mess, but I'm glad I tried it, because I ended up with a result. I created my first IOS app and started my first android project. All in 24 hours.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I'm very proud to say that I created my first IOS. It's something I've really been wanting to pursue, but ultimately never had the proper resources until now. On top of that, my app is a useful app that could be used by everyone in my high school. It's an app that has a purpose and an app that will be used by students of Northern Highlands.</p>\n<h2>What I learned</h2>\n<p>At my time at hackBCA III, I've learned a couple of things. First, water does a better job at keeping you awake then soda. Trust me. Secondly, I learned so much Syntax and grammar while I was going over Swift and Android studio, it was amazing.</p>\n<h2>What's next for Northern Highlands App</h2>\n<p>I plan on polishing the IOS version and making an android version.\nAfter I finish both versions, I will propose these concepts to my school and attempt to have them implemented into the school system. It's going to change the lives of tomorrow. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xcode\">xcode</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/photoshop\">photoshop</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/harrowimali/NHRHSAPP\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/harrowimali/NHRHSAPP\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I created the entire IOS app from scratch, this also being my first IOS app"]], ["Algebra Sprint", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Algebra Sprint \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/771/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Algebra Sprint \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/772/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Algebra Sprint \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/135/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Being mainly backend developers, we thought that it would be interesting to work on a front end hack and the type of project that we were immediately drawn to was a game. We knew that JavaScript was good for making web games, so we discovered ways to generate shapes and other requirements for a game.</p>\n<h2>What it does</h2>\n<p>The user controls a character that attempts to avoid oncoming enemies. The user is allowed to touch green platforms (and must do so to survive), but is not allowed to touch red platforms. The series of oncoming obstacles are randomly generated and continue infinitely until the user loses. The objective of the game is to survive for as long as possible.</p>\n<h2>How we built it</h2>\n<p>We built the game using JavaScript and the Phaser.js game framework. We generated the character and then developed a system to generate oncoming obstacles and a jumping system so the character can avoid the enemies.</p>\n<h2>Challenges we ran into</h2>\n<p>We had trouble generating the green platforms that the user could land on. It was difficult to make the platform move while keeping the user in place, all while maintaining the physics of the game. It also took a long time to develop a system that randomly generates obstacles that are still solvable.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are proud that the game works well, with no bugs (that we know of). The game is also very challenging so it takes a large amount of concentration and quick thinking to achieve a high score.</p>\n<h2>What we learned</h2>\n<p>We learned a lot about frontend development, especially with JavaScript. This was the first time any of us had worked on a game, and it turned out very well. It was a good introduction to game development and working with JavaScript.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/phaser-js\">phaser.js</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://algebrasprint.tech/\" rel=\"nofollow\" target=\"_blank\" title=\"http://algebrasprint.tech/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>algebrasprint.tech</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I helped work on the main game, and found the images for the character and background.", "I worked on the main game, including character movement, platform generation, score keeping, and overall game setup.", "I made the website which the game runs on."]], ["SharkChess", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"SharkChess \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/775/datas/gallery.jpg\"/>\n<p>\n<i>This is an example of the sharks going along 2 designated paths that were set simultaneously by two people, that the sharks will follow.</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>It is a combination of GO and Chess. We mixed in aspects of starcraft and a unique method of deploying the sharks.</p>\n<h2>What it does</h2>\n<p>That is a valid question. Thanks for asking.</p>\n<h2>How we built it</h2>\n<p>Two of us played video games while providing moral support to our single coder.</p>\n<h2>Challenges we ran into</h2>\n<p>Having sharks follow the user input due to the multi-user and multi-touch inputs. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>The sharks moving and following user placed currents.</p>\n<h2>What we learned</h2>\n<p>Two of us learned the basics of coding using Greenfoot. </p>\n<h2>What's next for SharkChess</h2>\n<h2>Having the Sharks fight each other. </h2>\n<p>this is the source code</p>\n<h1>coding: utf-8</h1>\n<p>from scene import *\nimport sound\nimport random\nimport math\nA = Action</p>\n<p>class MyScene (Scene):\n        def setup(self):\n                self.gridSize = [20,16]\n                self.grid = []\n                self.square = self.size[0]/(self.gridSize[0]+2)\n                self.corner = [self.square, self.size[1] - self.square * (self.gridSize[1]-1)]\n                self.mines = []\n                for x in xrange(self.gridSize[0]):\n                        self.grid += [[]]\n                        for y in xrange(self.gridSize[1]):\n                                if x == 0:\n                                        self.grid[x] += [[1]]\n                                elif x == 10 or x == 9 or x == 2 or x == 17:\n                                        self.grid[x] += [[3]]\n                                        #mine = SpriteNode(\"Mine.JPG\", scale = .0777, position = ((x+1)*self.square, y*self.square + self.corner[1]))\n                                        #mine.anchor_point = (0,0)\n                                        #self.mines += [mine]\n                                        #self.add_child(mine)\n                                elif x == self.gridSize[0]-1:\n                                        self.grid[x] += [[2]]\n                                else:\n                                        self.grid[x] += [[0]]</p>\n<pre class=\"language-nolang\"><code>            self.upCorner = [self.size[0]-self.square, self.size[1]]\n            self.listTower1 = []\n            self.listTower2 = []\n            self.selecting1 = SpriteNode(\"Shade.JPG\", alpha = .5,position = (-100,-100), scale = .3022)\n            self.selecting2 = SpriteNode(\"Shade.JPG\", alpha = .5,position = (-100,-100), scale = .3022)\n            self.add_child(self.selecting1)\n            self.add_child(self.selecting2)\n            for x in xrange(self.gridSize[1]-1):\n                    self.makeTower1(0,x)\n            for x in xrange(self.gridSize[1]-1):\n                    self.makeTower2(self.gridSize[0]-1,x)\n            self.select1disable = False\n            self.select2disable = False\n            self.drag1listChildren = [[],0]\n            self.drag2listChildren = [[],0]\n            self.drag1allow = False\n            self.drag2allow = False\n            self.soldierSpeed = 1\n            self.soldierCounter = 0\n            self.drag1list = []\n            self.drag2list = []\n            self.drag1go = []\n            self.drag2go = []\n            self.active_touch = {}\n            self.touchCount = 0\n            self.didMove1 = False\n            self.didMove2 = False\n\n    def did_change_size(self):\n            pass\n\n    def update(self):\n            stroke(1,1,1)\n            stroke_weight(1)\n            for x in xrange(self.gridSize[0]+1):\n                    line(self.corner[0]+x*self.square,self.corner[1], self.corner[0]+x*self.square ,self.upCorner[1])\n            for y in xrange(self.gridSize[1]):\n                    line(self.corner[0], self.corner[1]+y*self.square,self.upCorner[0], self.corner[1]+y*self.square)\n            self.soldierCounter += 1\n            if self.soldierCounter == 1:\n                    self.soldierCounter = 0\n                    for m in self.drag1list:\n                            if m[0]!= \"hi\" and len(m[1])!=0:\n                                    goal = self.pointConvert(m[1][0][0],m[1][0][1])\n                                    mx = m[0].position[0]\n                                    my = m[0].position[1]\n                                    if self.distance(mx, my,goal[0],goal[1])&lt;2:\n                                            m[0].position = goal\n                                            m[1].pop(0)\n                                    else:\n                                            if int(mx) &lt; int(goal[0]):\n                                                    mx += self.soldierSpeed\n                                            elif int(mx)&gt;int(goal[0]):\n                                                    mx -= self.soldierSpeed\n                                            if int(my) &lt; int(goal[1]):\n                                                    my += self.soldierSpeed\n                                            elif int(my)&gt;int(goal[1]):\n                                                    my -= self.soldierSpeed\n                                            m[0].position = (mx,my)\n                    #print self.drag2list\n                    for n in self.drag2list:\n                            if n[0]!= \"hi\" and len(n[1])!=0:\n                                    goal = self.pointConvert(n[1][0][0],n[1][0][1])\n                                    nx = n[0].position[0]\n                                    ny = n[0].position[1]\n                                    if self.distance(nx, ny,goal[0],goal[1])&lt;2:\n                                            n[0].position = goal\n                                            n[1].pop(0)\n                                    else:\n                                            if int(nx) &lt; int(goal[0]):\n                                                    nx += self.soldierSpeed\n                                            elif int(nx)&gt;int(goal[0]):\n                                                    nx -= self.soldierSpeed\n                                            if int(ny) &lt; int(goal[1]):\n                                                    ny += self.soldierSpeed\n                                            elif int(ny)&gt;int(goal[1]):\n                                                    ny -= self.soldierSpeed\n                                            n[0].position = (nx,ny)\n\n    def distance(self,x1,y1,x2,y2):\n            return ((x1-x2)**2 + (y1-y2)**2)**.5\n\n    def makeSoldier(self):\n            self.soldier = SpriteNode(\"Shark1.JPG\", scale = .0576, position = (200,200))\n\n            self.add_child(self.soldier)\n\n    def makeTower1(self,row,col):\n            x = (row+1)*self.square\n            y = (col)*self.square + self.corner[1];\n            self.tower1 = SpriteNode(\"Tower1.JPG\", scale = .1582, position = (x,y))\n            self.tower1.anchor_point = (0,0)\n            self.add_child(self.tower1)\n\n    def makeTower2(self,row,col):\n            x = (row+1)*self.square\n            y = (col)*self.square + self.corner[1];\n            self.tower2 = SpriteNode(\"Tower1.JPG\", scale = .1582, position = (x,y))\n            self.tower2.anchor_point = (0,0)\n            self.add_child(self.tower2)\n\n    def touch_began(self, touch):\n            self.touchCount += 1\n            self.active_touch[touch.touch_id] = self.touchCount\n            x = int((touch.location[0] - touch.location[0]%self.square+1)/self.square)-1\n            y = int((touch.location[1]-self.corner[1] - (touch.location[1]-self.corner[1])%self.square+1)/self.square)\n            if 0&lt;=x&lt;self.gridSize[0] and 0&lt;=y&lt;self.gridSize[1]:\n                    if x &lt; self.gridSize[0]/2:\n                            for child in self.drag1listChildren[0]:\n                                    child.remove_from_parent()\n                            self.drag1listChildren = [[],0]\n                            self.drag1listChildren[1] = self.active_touch[touch.touch_id]\n                            # print self.drag1listChildren\n\n                            self.drag1list += [[\"hi\",[(x,y)]]]\n                            if self.select1disable == False:\n                                    self.select1(x,y)\n                            else:#create selection menu\n                                    self.selected = True\n                                    if x==-1 and 0&lt;=y&lt;=1:\n                                            pass\n                            if self.grid[x][y] == [1]:\n                                    self.drag1allow = True\n                            else: self.drag1allow = False\n                    else:\n                            for child in self.drag2listChildren[0]:\n                                    child.remove_from_parent()\n                            self.drag2listChildren = [[],0]\n                            self.drag2listChildren[1] = self.active_touch[touch.touch_id]\n\n                            self.drag2list += [[\"hi\",[(x,y)]]]\n                            if self.select2disable == False:\n                                    self.select2(x,y)\n                            else:#create selection menu\n                                    self.selected = True\n                                    if x==-1 and 0&lt;=y&lt;=1:\n                                            pass\n                            if self.grid[x][y] == [2]:\n                                    self.drag2allow = True\n                            else: self.drag2allow = False\n\n    def select1(self,x,y):\n            self.selecting1.remove_from_parent()\n            self.selecting1.anchor_point = (0,0)\n            self.selecting1.position = self.pointConvert(x,y)\n            self.add_child(self.selecting1)\n\n    def select2(self,x,y):\n            self.selecting2.remove_from_parent()\n            self.selecting2.anchor_point = (0,0)\n            self.selecting2.position = self.pointConvert(x,y)\n            self.add_child(self.selecting2)\n\n    def pointConvert(self,x,y):\n            return ((x+1)*self.square, y*self.square + self.corner[1])\n\n    def drag1(self,x,y):\n            self.drag1list[len(self.drag1list)-1][1] += [(x,y)]\n            drag1 = SpriteNode(\"path1.JPG\", scale = .03499, alpha = .5)\n            drag1.anchor_point = (0,0)\n            drag1.position = self.pointConvert(x,y)\n            self.drag1listChildren[0] += [drag1]\n            self.add_child(drag1)\n\n    def drag2(self,x,y):\n            self.drag2list[len(self.drag2list)-1][1] += [(x,y)]\n            drag2 = SpriteNode(\"path1.JPG\", scale = .03499, alpha = .5)\n            drag2.anchor_point = (0,0)\n            drag2.position = self.pointConvert(x,y)\n            self.drag2listChildren[0] += [drag2]\n            self.add_child(drag2)\n\n    def touch_moved(self, touch):\n            x = int((touch.location[0] - touch.location[0]%self.square+1)/self.square)-1\n            y = int((touch.location[1]-self.corner[1] - (touch.location[1]-self.corner[1])%self.square+1)/self.square)\n            if 0&lt;=x&lt;self.gridSize[0] and 0&lt;=y&lt;self.gridSize[1]:\n                    if x&lt; self.gridSize[0]/2 and self.drag1listChildren[1] == self.active_touch[touch.touch_id]:\n                            self.didMove1 = True\n                            le = len(self.drag1list)-1\n                            if (x,y) != self.drag1list[le][1][len(self.drag1list[le][1])-1] and self.drag1allow:\n                                    self.drag1(x,y)\n                    elif x&gt;= self.gridSize[0]/2 and self.drag2listChildren[1] == self.active_touch[touch.touch_id]:\n                            self.didMove2 = True\n                            le = len(self.drag2list)-1\n                            if (x,y) != self.drag2list[le][1][len(self.drag2list[le][1])-1] and self.drag2allow:\n                                    self.drag2(x,y)\n\n    def touch_ended(self, touch):\n            if self.drag1listChildren[1] == self.active_touch[touch.touch_id]:\n                    if self.didMove1 == True:\n                            soldier = SpriteNode(\"Shark1.JPG\", scale = .0614, position = self.pointConvert(self.drag1list[len(self.drag1list)-1][1][0][0],self.drag1list[len(self.drag1list)-1][1][0][1]))\n                            soldier.anchor_point = (0,0)\n                            self.drag1list[len(self.drag1list)-1][0] = soldier\n                    #self.drag1go += self.drag1list\n                    #drag1list = []\n                            self.add_child(soldier)\n                            del self.active_touch[touch.touch_id]\n                            self.didMove1 = False\n                    else: pass\n                            #miner = SpriteNode(\"Miner.JPG\", scale = .0431,position = self.pointConvert(self.drag1list[len(self.drag1list)-1][1][0][0],self.drag1list[len(self.drag1list)-1][1][0][1]))\n                            #self.drag1list[len(self.drag1list)-1][0] = miner\n                            #miner.anchor_point = (0,0)\n                            #self.add_child(miner)\n            elif self.drag2listChildren[1] == self.active_touch[touch.touch_id]:\n                    if self.didMove2 == True:\n                            del self.active_touch[touch.touch_id]\n                            soldier = SpriteNode(\"Shark1.JPG\", scale = .0614, position = self.pointConvert(self.drag2list[len(self.drag2list)-1][1][0][0],self.drag2list[len(self.drag2list)-1][1][0][1]))\n                            soldier.anchor_point = (0,0)\n                            self.drag2list[len(self.drag2list)-1][0] = soldier\n                    #self.drag2go += self.drag2list\n                    #self.drag2list = []\n                    #print self.drag2list\n                            self.add_child(soldier)\n                            self.didMove2 = False\n                    else: pass\n                    #       miner = SpriteNode(\"Miner.JPG\", scale = .0431,position = self.pointConvert(self.drag2list[len(self.drag2list)-1][1][0][0],self.drag2list[len(self.drag2list)-1][1][0][1]))\n                            #self.drag2list[len(self.drag2list)-1][0] = miner\n                            #count = 0\n                            #for x in xrange(self.gridSize[0]):\n                                    #if self.grid[2][x] == [3]:\n                                            #self.drag2list[len(self.drag2list)-1][1] += [(self.drag2list[len(self.drag2list)-1][1][0],count)]\n                                            #break\n                                    #count += 1\n                            #miner.anchor_point = (0,0)\n                            #self.add_child(miner)\n                    #print self.drag2list\n</code></pre>\n<p>if <strong>name</strong> == '<strong>main</strong>':\n        run(MyScene(), show_fps=False)</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">pythonista</span></li></ul>\n</div>\n</div>", [""]], ["AutoScript", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"AutoScript \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/626/datas/gallery.jpg\"/>\n<p>\n<i>The /save function, which writes the elements of the action and timeline arrays to a .txt file.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"AutoScript \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/627/datas/gallery.jpg\"/>\n<p>\n<i>The /help menu, which lists all current possible commands.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"AutoScript \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/640/datas/gallery.jpg\"/>\n<p>\n<i>The /list function, which lists the current script so the user can observe what needs changing.</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>The inspiration for this software comes from me playing video games. I would sometimes get frustrated with the massive amount of clicking, scrolling, and pressing keys in high APM video games such as Starcraft II, so I decided to attempt to make a piece of software that automates some of these processes for me.</p>\n<h2>What it does</h2>\n<p>AutoScript allows you to easily make your own scripts by adding specific commands to a virtual timeline. It allows you to change the delays between events, and edit the timeline after adding events. It is a simple program that takes out the frustration of doing the same thing over and over again on a computer.</p>\n<h2>How I built it</h2>\n<p>I built this program using a c# console application in Visual Studio 2013. It is essentially a giant switch-case inside a while() loop, where the switch-cases are the commands you can input and the while() loop makes it continuous. I used some basic error-proofing, for example, by including a default case that asks you to input a valid command. The input is stored in an array, so that when you decide to /execute the script, it just runs all the elements directly off the array using a for() loop. The save/load features just save the array elements to a .txt file, then read them off the .txt file to load back into the array.</p>\n<h2>Challenges I ran into</h2>\n<p>Despite a surprisingly smooth programming process with little complications, I did run into some problems. Most of these were just down to my inexperience in programming. I've been programming for only about one and a half years, so I don't know many ways to do things in c#. I had to frequently look up possible solutions and test them all until I was satisfied, which took up the majority of my time.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Most of all, I am proud of going to this hackathon. I've never been to one before, and I'm glad that I decided to go, seeing as how it was very fun and I learned a lot about programming. I'm also proud of the fact that I was able to write a functional program, despite not having the slightest idea how to write this program just a week prior.</p>\n<h2>What I learned</h2>\n<p>I gained a lot of experience in c# programming. I learned a lot in managing arrays, such as manipulating them efficiently to quickly make edits to either one element or many, and maintain the timeline. I also learned a new way to store arrays in .txt files, by just writing whole arrays to one file then reading them off the .txt file back into the timeline.</p>\n<h2>What's next for AutoScript</h2>\n<p>I plan on expanding this project a lot. My first concern is to add a easy-to-use GUI, since my intention is to make scripting easier. It would include a visual timeline showing events and delays, along with a drag and drop system for putting blocks of code into the timeline. I also plan on adding new commands that I didn't think of for this first version that you can put into the script. Ultimately, I see a program that gives a user more control over his/her computer, by allowing the user to run detailed and customized scripts for easier use and convenience.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://www.filedropper.com/autoscript\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.filedropper.com/autoscript\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.filedropper.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I did everything :3 I go solo"]], ["Use Your Imagination", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>The inspiration comes from basically going with my skillset and staying to something fairly basic because I learned python LITERALLY YESTERDAY NO JOKE.</p>\n<p>This program is basically an extremely creepy text-based adventure game with the main character being a crazy, criminal psychopath.</p>\n<p>I built it using basic python language and no GUI so that it stays true to that text-based rustic look.</p>\n<p>Challenges I ran into were not being familiar enough with the language and libraries of python and all the applications to use like tkinter, eclipse, pycharm, IDLE and such because again, this is a new language for me as of yesterday.</p>\n<p>I am proud honestly just that I was able to complete a working application considering my lack of knowledge for Python.</p>\n<p>I learned a new coding language through this experience.\nNext year I don't plan to work alone and I would like to join a group of 2 or three and combine hardware and software hacking.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/redrubymitchell/HackBCAIII\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/redrubymitchell/HackBCAIII\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Rubik's Cube Timer", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Rubik's Cube Timer \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/682/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>I've enjoyed speedcubing or competitively solving Rubik's cubes for over two years, but have always been disappointed with the design of many timing websites. I thought I could do better, but I never really knew anything about making a program like that, until this hackathon gave me the opportunity to learn.</p>\n<h2>What it does</h2>\n<p>It is primarily a timer for solving Rubik's cubes and provides  a scramble algorithm in order to ensure that each solve is fair. It also has a text box for recording your best times.</p>\n<h2>How I built it</h2>\n<p>I learned how to write most of it from the workshops I attended here, as well as searching online. I started off by writing the HTML and planning out what sort of buttons and boxes I would need. I then moved on to the CSS and started to think about what the design would be, because that was the main thing I wanted to improve. Finally, I implemented the JavaScript and tried to get all of the features to work together.</p>\n<h2>Challenges I ran into</h2>\n<p>The biggest challenge I ran into was trying to understand and write the JavaScript because I had never seen it before. I also had a large amount of difficulty trying to get the time to display.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Being able get the program to run by continuously trying new things, as well as continuing to work on it and improve.</p>\n<h2>What I learned</h2>\n<p>What the difference is between HTML, CSS, and JavaScript, and how they all work together. Also what is involved in running the front and backend of a website.</p>\n<h2>What's next for Rubik's Cube Timer</h2>\n<p>Automatically recording the times, and doing averages of the times, in order to learn more from the statistics</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/marchm/marchm\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/marchm/marchm\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Wheelchair WALL-E", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Wheelchair WALL-E \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/670/datas/gallery.jpg\"/>\n<p>\n<i>orthographic WALL-E design view</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Wheelchair WALL-E \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/672/datas/gallery.jpg\"/>\n<p>\n<i>right WALL-E design view</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Wheelchair WALL-E \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/673/datas/gallery.jpg\"/>\n<p>\n<i>front WALL-E design view </i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Wheelchair WALL-E \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/674/datas/gallery.jpg\"/>\n<p>\n<i>left WALL-E design view </i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Wheelchair WALL-E \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/675/datas/gallery.jpg\"/>\n<p>\n<i>wheel axle design view </i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Wheelchair WALL-E \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/676/datas/gallery.jpg\"/>\n<p>\n<i>orthographic WALL-E design view</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>I was greatly enthralled, amazed, and emotionally touched by the movie WALL-E. It told the story of a lonely robot, named WALL-E(Waste Allocation Load Lifter Earth-Class), who saves humanity from its path of imminent destruction through the strong pull of true emotional connections and ties. I wanted to bring this incredible and empowering character to life by 3D printing it and putting it into the realm of reality. <em>However, I believed I could add something truly original to this personage and make him stand out against the monotony of daily life.</em></p>\n<h2>What it does</h2>\n<p>Being simply a character, capable of becoming anything in the eyes of the beholder, WALL-E comes with only basic features. These include his unforgettable shape, moving arms and limbs, and <em>of course</em>, his most unique function, the ability to undergo locomotion independently. These make him truly special. </p>\n<h2>How I built it</h2>\n<p>Using a 3D modeling software program known as Auto-desk Inventor, I was able to use pictures found on the internet to accurately model him using my own set of dimensions. I made all the parts separately and then joined them together in one assembly file. His unique wheels not only make him able to move but also work to stabilize them and keep WALL-E himself from falling over. Afterwards, I was able to export it as a separate part file and them as an STL to make it accessible to 3D printing.  </p>\n<h2>Challenges I ran into</h2>\n<p>Modeling the wheels and the rest of WALL-E's body parts was difficult  due to the lack of concrete dimensions on the separate parts as well as the unclear and undefined structure of the beloved personage. The wheels, especially, were challenging because they had to be designed so as to balance each other out, connect to WALL-E, and provide for the motion desired in a consumer friendly tool such as this. The spokes on the wheels were difficult to make due to the different ways they could be made and the different work planes that had to be created and utilized for this function. In addition, when working with different dimensions, putting together a single assembly was a difficult and grueling task that took many constraints and parameters to achieve the desired yet limited range of motion for each specific part. </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Being able to finish this hack in the amount of time allotted, along with other aspects of its design and execution that I was able to overcome to complete the final product presented. </p>\n<h2>What I learned</h2>\n<p>Greater function in the Inventor space and the ability to be able to correctly use and integrate all the functions of this creation tool at my disposal. Also I learned how to use work planes, axes, and points in the proper way, as well as their  respective drawing and editing tools. </p>\n<h2>What's next for Wheelchair WALL-E</h2>\n<p>I hope to be able to expand on the design I built and make it into a controllable robot with a motor for ease of motion and controllable arms. In addition, the eyes do not yet move or show the true emotion that makes WALL-E seem so utterly human, and lovable. This automation will allow for a cool robotic device, capable of controllable motion and a human appeal for its users. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">inventor</span></li><li><span class=\"cp-tag\">3d-builder</span></li></ul>\n</div>\n</div>", [""]], ["u r dead", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We originally wanted to do a Twilio project, but we could not figure that out, so we did a text adventure.</p>\n<h2>What it does</h2>\n<p>The storyline changes based on the path you choose to take.</p>\n<h2>How we built it</h2>\n<p>We coded it in java.</p>\n<h2>Challenges we ran into</h2>\n<p>There are a lot of if statements and we did not have much prior experience with this language so learning it was kinda hard.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We made it.</p>\n<h2>What we learned</h2>\n<p>Basics of java.</p>\n<h2>What's next for u r dead</h2>\n<p>u r dead: the second one</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n</div>", ["Programming and story.", ""]], ["AlphaBetter", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"AlphaBetter \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/910/datas/gallery.jpg\"/>\n<p>\n<i>AlphaBetter Logo</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"AlphaBetter \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/937/datas/gallery.jpg\"/>\n<p>\n<i>Home Screen where you can input image or go to the preference page</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"AlphaBetter \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/608/datas/gallery.jpg\"/>\n<p>\n<i>Screen for preferences for letter 'a'</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"AlphaBetter \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/609/datas/gallery.jpg\"/>\n<p>\n<i>Screen for preferences for letter 'b'</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2><strong>Inspiration:</strong></h2>\n<p>In Chris Wanstrath's keynote speech he described how the first company he worked for used OCR technologies, so we decided to also brainstorm possible uses of OCR technologies.  We wanted to make an application that would be helpful and we eventually stumbled upon the idea of making something that would benefit the millions of people affected by dyslexia, a learning disorder seen in 1 out of every 10 people.</p>\n<h2><strong>What it does:</strong></h2>\n<p>Our application enables users to change their \"preferences\" on how they see various letters.  For example, what would be seen as a normal 'a' for most could be seen as an '\u0250' or  '\u0252' for people with dyslexia.  We took the most common dyslexic rotations and allowed our users to choose which ones they saw as \"regular\" with the help of text-to-speech.  After updating their \"preferences,\" users are then able to upload images to be translated into their \"text preference.\"  This enables people with dyslexia to easily read images that they may have found seriously difficult to read before.</p>\n<h2><strong>How we built it:</strong></h2>\n<p>We built our Android application by using eclipse's ADT bundle (combines XML and Java).  Additionally, we used Adobe Photoshop to create several images and implemented the OCR API Service (<a href=\"http://ocrapiservice.com/\" rel=\"nofollow\">http://ocrapiservice.com/</a>) to convert images into text.  </p>\n<h2><strong>Challenges we ran into:</strong></h2>\n<p>Implementing the OCR API was challenging since we did it from scratch.  In addition, creating an activity for each letter was quite tedious.  Lastly, developing a clean design took some time as we wanted our application to look sleek (layouts in Android are often annoying to make).</p>\n<h2><strong>Accomplishments that we're proud of:</strong></h2>\n<p>Fully functioning OCR API and mobile application with sleek logo and design.</p>\n<h2><strong>What we learned:</strong></h2>\n<p>We learned how to successfully implement an OCR API and we gained invaluable experience and knowledge in the field of android native development. </p>\n<h2><strong>What's next for AlphaBetter:</strong></h2>\n<p>We added a drop down menu for our language inputs in anticipation of adding multiple languages in the future.  Moreover, we hope to add more \"preferences\" to enlarge our target audience.  More focus will also have to be spent on making the interface more friendly for our audience.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">ocrapiservice</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xml\">xml</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/eclipse\">eclipse</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/photoshop\">photoshop</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/mVaks/alphabetter\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/mVaks/alphabetter\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["HW Overflow", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"HW Overflow \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/613/datas/gallery.jpg\"/>\n<p>\n<i>HW Overflow</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to create something that made collaborating and understanding homework easier for our high school. Instead of being something that just shows you your peers' answers, we wanted to create something that shows you their solutions. Stack Exchange does an amazing job of this, but the homework extension has since been deprecated, with no other alternative, we took to the plate. We wanted to include the aspects of what made a system like Stack Overflow so great, and put our own twist on it, with a simple design, and an easy to use, hard to mess up on interface. We designed it as such so that all grade levels can use it, regardless of proficiency when using a computer, so that the user can focus on what matters, which is understanding their homework.</p>\n<h2>What it does</h2>\n<p>Differentiates between questions and answers in the four core subjects (Math, Science, English, and Social Studies\n) and further subcategories facilitated by tags. Employs a user friendly interface that has nothing more than what you need, and is fully functional. Your questions are organized on your account, and people can answer them accordingly. \nEach user has a score which is the number of upvotes on their questions and answers combined (this is framework for a later to be implemented credibility system).\nSimple. Clean. Efficient.</p>\n<h2>How we built it</h2>\n<p>The front end is built with jade on top of bootstrap, that pulls from a node.js express framework backend. We chose this because it is a fast and effective way of manipulating content, to ensure the best user experience.</p>\n<h2>Challenges we ran into</h2>\n<p>Getting a working feed of content! Node.js express is a lightweight yet intricate platform with which to build web applications. There was a lot of debugging to be done when implementing the back-end of the server into the front-end. We both made mistakes on our end, and had to work them out to create a functional link.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Our logo! It coincides with our design simplicity! But most of all, the stream of question cards that we have on the site which came with a slew of implementation bugs that we had to work out together.</p>\n<h2>What we learned</h2>\n<p>Being a first time front-end web developer, personally I learned a substantial amount about bootstrap, java script, and jade. These are platforms and languages I learned at the hackathon this weekend, and am proud of what I had put together. My partner Ariston, being more experienced with back-end development had an interesting time learning about how to implement sub-domains, allowing for simpler navigation around the website (beneficial to both the front-end and back-end of HW Overflow).</p>\n<h2>What's next for HW Overflow</h2>\n<p>We hope to continue working on HW Overflow for the rest of year in the hopes of releasing it to our school's student body in September. We want to integrate more useful features, such as comments to answers as well as a whiteboard that all students can contribute to and work on for a specific question. Hopefully by then we can expand outreach to other schools and effectively create a community of K-12 students helping each other with their homework!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jade\">jade</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongoose\">mongoose</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag\">express-mailer</span></li><li><span class=\"cp-tag\">express-session</span></li><li><span class=\"cp-tag\">bcrypt</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://www.hwoverflow.com\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.hwoverflow.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.hwoverflow.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the entire front-end side of the website. What you see is what I coded.", "I worked on the back-end of the site. What is functioning is what I coded."]], ["QuickTest", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>As the teacher to student ratio continues to decrease, teachers begin to work longer hours for less pay. We sought to make the job of teacher's easier. By assisting in the creation of tests by extracting text from sources, we seek to create a more streamlined process and allow the teachers to focus on personalized teaching.</p>\n<h2>What it does</h2>\n<p>The user would need to narrow down the source and subject area of the generated questions using query terms. Utilizing key word extraction on a specified text (found with previously mentioned query terms), we are able to generate multiple types of questions: true or false, fill in the blank, and short answer questions.</p>\n<h2>How we built it</h2>\n<p>We began by designing and creating a front end for our web application. We used CSS and HTML to create dynamic webpages responsive to varying screen sizes. Once our front end was created, we used NodeJS and Express to create a basic webserver to handle get and post requests. Combined with input boxes, we then were able to get data from the front end and conduct web scraping with the Google and Cheerio modules for web scraping. We then used the POS module to handle natural language processing in order to generate keywords and summaries for generating questions for our tests. </p>\n<h2>Challenges we ran into</h2>\n<p>We had never worked with natural language processing before, so we had a large learning curve to overcome.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Effectively completing natural language processing.</p>\n<h2>What we learned</h2>\n<p>Instead of going the traditional route of utilizing languages like Java or Python, we tooled node.js for natural language processing.</p>\n<h2>What's next for QuickTest</h2>\n<p>The user's input in quality control sets the grounwork for further machine learning. We plan to use the data from the user either approving or disapproving of the generated question to more accurately predict questions in the future.\nCurrently, the source of mining is from online pages. In the future, we plan to implement a simple, yet incredibly useful feature. We would make the source be textbooks which could be searched for by their ISBN number or by scanning the relevant pages. We'd also like to try different types of questions e.g. multiple choice questions.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n</div>", ["I worked on incorporation of natural language processing into the generation of questions for test usage.", "I worked on some of the front-end: the logo, front screen design, etc.\n", "I worked with creating a workflow pipeline and final execution", "I worked on the front-end along with my team allowing multiple device comparability to the front end can adapt to any website. I applied concepts of front end CSS HTML and JS to accomplish this goal. In addition, I created the majority of the back end in nodejs which Incorporated web scraping and natural language processing"]], ["StrokeRehab", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"StrokeRehab \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/592/datas/gallery.jpg\"/>\n<p>\n<i>Typical operation</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We came to hackBCA with no idea what to do, so we picked up some interesting hardware, namely the Myo armband. We looked through the capabilities of the hardware and discovered its capability to recognize hand gestures, when properly calibrated. Making the gestures was trivial for us, but I recalled seeing many stroke victims in the senior homes I had visited having trouble with simple hand-eye coordination activities. And thus it occurred to me that stroke victims might be able to improve their mapping of sensory inputs to motor outputs by using a program centered around these gestures.</p>\n<h2>What it does</h2>\n<p>The application displays a series of images indicating which of the five simple, well-defined Myo gestures should be performed. Each image displays in a different part of the screen, which is thought to increase the level of hand-eye coordination needed, as people cannot simply stare into one part of the screen. When a gesture is inputted by the user, the image corresponding to that gesture appears in the bottom right of the screen, and if the gesture was correct, a corresponding sound plays, the score on the screen increases, and the armband vibrates for a longer period of time. If the gesture was performed wrongly, an error sound plays, the score on the screen decreases, and the armband vibrates for a short period of time. By having all these means of feedback, we are able to engage three of the five sensory inputs of a stroke victim - hearing, touch, and eyesight. Thus, we improve not only the user's hand-eye coordination, but his or her overall sensory-motor coordination.</p>\n<p>Another use for this project that we had not planned is teaching young children these same sensor-motor skills. The gestures are not difficult to perform but children may find it entertaining to keep up with the pace of the application, while also improving their coordination and strengthening their wrists.</p>\n<h2>How we built it</h2>\n<p>We built this application mainly in C++ with a few parts in C that interfaced with the lower-level functions of the armband. We wrote the GUI in the Qt framework to ensure portability. </p>\n<h2>Challenges we ran into</h2>\n<p>The armband was difficult to calibrate, and gestures were sometimes not recognized or recognized wrongly. In addition, it was difficult to read the other properties provided by the armband accurately while also reading gestures, so we could not combine the two.</p>\n<h2>What we learned</h2>\n<p>We learned that we should have written cleaner code because it would have saved us a lot of time in debugging.</p>\n<h2>What's next for StrokeRehab</h2>\n<p>We could perhaps find a way to incorporate the other capabilities of the armband into the app, such as the acceleration and orientation readings.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c\">c</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://drive.google.com/file/d/0Bw-L3l48Si03TGlnaC0wUW1MZWc/view?usp=sharing\" rel=\"nofollow\" target=\"_blank\" title=\"https://drive.google.com/file/d/0Bw-L3l48Si03TGlnaC0wUW1MZWc/view?usp=sharing\">\n<i class=\"ss-icon ss-link\"></i>\n<span>drive.google.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I wrote the backend of the app that randomly generated the gestures to be performed, responded to gesture changes, and checked if the gesture was correct or not/took appropriate action.", "I worked on the gui as well as the code behind and wrapped together the entire hack.\nVn"]], ["Doges-of-Wall-Street", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Doges-of-Wall-Street \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/612/datas/gallery.jpg\"/>\n<p>\n<i>Algorithm entry</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>The Doges of Wall St.</h1>\n<p>Anyone can do algorithmic trading, no matter their age or experience level. We are democratizing the worldwide financial system, one derivative product at a time.</p>\n<p><img alt=\"Doge\" data-canonical-url=\"https://i.imgur.com/byi1DAi.png?1\" src=\"https://res.cloudinary.com/devpost/image/fetch/s--SJDr3_sf--/https://i.imgur.com/byi1DAi.png%3F1\"/></p>\n<h2>How We Did It</h2>\n<ol>\n<li>Scraped data (1 million trades) from <a href=\"http://bter.com\" rel=\"nofollow\">Bter</a> (cryptocoin exchange) API on the CNY/BTC pair</li>\n<li>Sifted through those records using higher-order array functions to reduce data to daily stats: open, close, high, low, volume</li>\n<li>Get user parameters for momentum trading algorithm</li>\n<li>Use momentum trading algorithm (python code) on daily records to determine daily returns</li>\n<li>Return result to Node.js and present to the user</li>\n</ol>\n<h2>Our Inspriration</h2>\n<p>As a kid, I had grown up reading Michael Lewis's stories about stock market phenomena, and how certain people were able to pick up on the hints that something was a miss, and make a lot of money. I wanted to be like that. For that reason, I would always ask my father if I could open my own brokerage account, so I could be the next Louis Ranieri. Unfortunately, two things stood in my way: the fact that you had to be 18 in order to open an account, and my dad's fear that I would lose all of his money in a bad trade.</p>\n<p>I wanted to get firsthand experience of the market trends that Lewis talked about in his book, but my father had a point about me losing his money, I mean, I don't really know what I am doing.</p>\n<p>Months go by, and I find myself at HackBCA with my teammate, and in need of an idea. After a lot of searching around for cool projects, we encountered the pyalgotrade library in python. The pyalgotrade library is used to help investors make automated trades, by allowing them to program their trading habits into a program that executes these habits automatically.</p>\n<p>We decided to use this library to make a website that would allow investors to test their trading algorithms to see if they would be profitable. Gone are the days of people hopelessly gambling away their money in an effort to see what trades work, and don't at a given moment in time.</p>\n<p>Now, simulations are great because they allow the user to see a projected result without having to actually execute the trade, but that does not really help the budding trader who is under the age of 18.</p>\n<p>For that reason, we decided to use cryptocurrencies like bitcoin and dogecoin, in an effort to bring the rush of trading to people of all ages. These forms of currency do not require the user to be 18 to trade, so anyone who is interested can do that.</p>\n<p>Gone are the days where we have to wait until we are older to experience the things we want to experience now. Inspiration can be fleeting, so to those kids out there that have just finished Flash Boys or Liar's Poker, and want to learn more about the incredibly volatile world of investment banking and trading, the Doges of Wall Street have a solution.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/nathanhleung/doges-of-wallst\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/nathanhleung/doges-of-wallst\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"http://belfort.tech\" rel=\"nofollow\" target=\"_blank\" title=\"http://belfort.tech\">\n<i class=\"ss-icon ss-link\"></i>\n<span>belfort.tech</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["So You Think You Can Program?", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Programming languages</p>\n<h2>What it does</h2>\n<p>Tests your programming abilities and have some fun</p>\n<h2>How I built it</h2>\n<p>Basic HTML and Javascript</p>\n<h2>Challenges I ran into</h2>\n<p>Haters</p>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<h2>What's next for So You Think You Can Program?</h2>\n<p>Inspire people to learn how to code</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/photoshop\">photoshop</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/dreamweaver\">dreamweaver</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://bergentechstudents.org/2018/jennhe/sytycp/sytycp.html\" rel=\"nofollow\" target=\"_blank\" title=\"http://bergentechstudents.org/2018/jennhe/sytycp/sytycp.html\">\n<i class=\"ss-icon ss-link\"></i>\n<span>bergentechstudents.org</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Expression on the Web", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Expression on the Web \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/519/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>This is an html hack for hackBCA III - A simple web site built with html about myself.<br/>\nIt's the \"new and improved\" version of an html site I programmed over <em>3 years ago</em>, and I'm very happy with the progress.  Upon doing this hackathon, I realized that nothing was motivating me to make something highly technical, but I still had the power of web design to guide me.  To me, creating art is central to my self-expression, and a site having a good design is also important to me while surfing the web.  Most sites nowadays are business-oriented, whether people make revenue off of advertisements or are selling a product.  <strong>Why can't we build more sites that are just about ourselves?</strong> This site is <em>pseudo-interactive</em>, meaning any interactions placed on the site don't actually go anywhere.  </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/GavMit/test-hack\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/GavMit/test-hack\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["StudyHack", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/XeQsfZviuyo?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"StudyHack \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/354/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"StudyHack \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/362/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Too many times have we browsed the internet or done unproductive things when instead, we should have been studying for a coming-up exam or working on an important school project. That's where StudyHack comes in. StudyHack _ forces _ the user to be productive.</p>\n<h2>What it does</h2>\n<p>This Chrome extension injects study questions on unproductive pages. You can't view the page until you answer a question correctly.</p>\n<h2>How I built it</h2>\n<p>Amazingly, only knowledge of JavaScript and HTML is necessary to build a Chrome extension. Google's documentation provided excellent help on how to get started developing for the Chrome browser.</p>\n<h2>Challenges I ran into</h2>\n<p>I ran into some issues with CSS but was able to overcome (most of) them through use of the magical Internet.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I had no idea what project I wanted to work on at the beginning of the event, and I thought up this idea halfway through the night. I am proud to say that I _ actually _ completed a project at my first hackathon.</p>\n<h2>What I learned</h2>\n<p>I learned how to make a Chrome extension.</p>\n<h2>What's next for StudyHack</h2>\n<p>There's _ a lot _ of things I I didn't complete. Right now, the project only consists of two questions, and some functionalities need to be fixed. As of now, the user can't select what websites to block. It only goes into effect for reddit, Google, Facebook, and Twitter, and even then the overlay can get confused with the original website's CSS and HTML. So, in the future, I hope to improve and expand upon StudyHack.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/bananaJam/studyhack\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/bananaJam/studyhack\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["xpire", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"xpire \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/324/datas/gallery.jpg\"/>\n<p>\n<i>ngrok tunnel service allowing a secure connection</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"xpire \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/326/datas/gallery.jpg\"/>\n<p>\n<i>Running xpire</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"xpire \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/327/datas/gallery.jpg\"/>\n<p>\n<i>Example One</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"xpire \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/328/datas/gallery.jpg\"/>\n<p>\n<i>Example Two</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>The inspiration came for this product when I was working on another school project using a similar idea, but it failed miserably. The general idea was to help eliminate food waste locally but reusing food that was \"expired\" but had no spoiled yet and was still very edible. xpire is a renovation of that, focusing on the single person eliminating food in their lives such that no food can go to waste.</p>\n<h2>What it does</h2>\n<p>xpire functions using Twilio and Clarifai's APIs. You send a MMS to a designated phone number, and the program takes the information about that photo and feeds it through Clarifai's photo identification process. If certain words are detected in the analysis (such as apple, carrot, and banana), it marks them down and determined the day they will go bad using a formula I leaned in school. It then sends you the date back, and when each individual item it recognized will spoil. </p>\n<h2>How I built it</h2>\n<p>I build this using Python and various API codes. I hosted this by connecting my computers server using the ngrok tunnel service, allowing anyone with the number to text it and access this service.</p>\n<h2>Challenges I ran into</h2>\n<p>Challenges I ran into included making sure that the software could identify certain foods (for example oranges are labeled as citrus). In addition, I had trouble feeding the data from the MMS from one API to another, but that was solved by using the Twilio generated link for the photo/video. </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I am proud that I got a basic version of this working in less than a day. It works relatively well in that it can detect and get information on six common household items.</p>\n<h2>What I learned</h2>\n<p>I learned more about API codes and the object-oriented side of python. I was used to making simple programs using urllib2, but now that I am more comfortable with API codes, I will be using them more often</p>\n<h2>What's next for xpire</h2>\n<p>I hope to expand on this and make it such that the MMS recognition is better and that it can work will more than just produce. In addition, I hope to make this something everyone can use easily with one text message to help eliminate food waste in their own home.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/landon4home/xpire/blob/master/hack.py\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/landon4home/xpire/blob/master/hack.py\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]]]