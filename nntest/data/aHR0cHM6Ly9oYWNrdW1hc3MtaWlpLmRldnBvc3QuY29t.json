[[" Team 53 - Solaropia ", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\" Team 53 - Solaropia  \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/381/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\" Team 53 - Solaropia  \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/382/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\" Team 53 - Solaropia  \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/383/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\" Team 53 - Solaropia  \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/386/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Switching to clean, renewable energy is the need of the hour as climate change is on us. With declining costs of PV panels and governmental incentives, solar energy provides an excellent alternative to grid power, which relies mostly on non-renewable sources for generating electricity.</p>\n<p>Image a utopia where almost all homes produce their own energy using rooftop solar installations. Enter Solaropia, an online service to help homeowners to calculate the solar potential of their residence. </p>\n<p>Our inspiration behind Solaropia was to aid homeowners in initial diagnostics of their rooftop and educate them about its solar potential. In our prior experience as researcher in the area of renewable grid integration, we found that installing solar panels on roofs can drastically reduce homeowner's dependency on grid electricity.  Using this website, we wish to encourage people to adopt solar energy and show them that there is very little to LOSE and everything to GAIN by adopting solar. </p>\n<h2>What it does</h2>\n<p>Solarpia provides an interface to users, where they can lookup their homes on Google Maps and using a marker tool can carve out their home (top view). This provides us the true length of the roof. After this our image processing library kicks in to help us in finding the tilt of the roof using Google Street View API. </p>\n<p>We tried to reduce the number of inputs provided by the user and provide basic cost and operational characteristics such as number of sunny hours, yearly solar potential (based on solar models), monthly solar capacity, cost savings and payback period. Libraries used to perform the above calculations are described in the next section. </p>\n<h2>How we built it</h2>\n<p>We use a lightweight Python web framework (Flask) for building this web application. We use the following libraries to develop this application:\nFor the front end:</p>\n<ol>\n<li>Bootstrap: CSS Framework: Our html pages has been designed using their css. However, we had to add our custom css for styling. </li>\n<li>jQuery: javascript:</li>\n<li>Google Maps and Charts;\nFor the back end:</li>\n<li>Python: the entire backend </li>\n<li>Geopy - For calculating orientation of the home. </li>\n<li>OpenCV: For identifying the tilt of the home</li>\n<li>Geocoding: for identifying the location based utility pricing </li>\n<li>Pandas: for processing the data from National Solar Radiation Database. (NSRDB)</li>\n</ol>\n<h2>Challenges we ran into</h2>\n<ol>\n<li>Parsing the NSRDB - Improving response time of getting the right irradiance model for a location - Pre-computed and cached models for over 1.5k sites in the US for quick calculation of savings, yearly sunshine hours</li>\n<li>Image processing - The underlying algorithms for image processing have gone through multiple iterations of improvement in the past 24 hours. This includes identifying the edges of the roof, removing noise by first downsampling the images and doing median blur to maintain edge consistency. We ran hough transform to then detect the lines in the images. </li>\n<li>Computing orientation of a house: Orientation of a house provides a great deal of information about the solar potential. We had to iterate over multiple methods before settling down on a technique that worked best for identifying the orientation of homes given its coordinates.</li>\n</ol>\n<h2>Accomplishments that we're proud of</h2>\n<ol>\n<li>Design decisions - No compromise on the underlying algorithms and datasets. Used National Solar Radiation Data Base dataset for getting accurate historical weather and solar irradiance models.</li>\n<li>UI design: We spent some time fixing the UI so that it looked professional and ready to deployed in a real world environment. </li>\n<li>OpenCV libraries: Having little to no background in image processing, we feel that we learnt a great deal and were able to use the APIs to solve our problems. </li>\n<li>The end product - We are happy with our end result, and feel that with a little more effort we could actually see people using this web service.</li>\n<li>We used real world utility pricing to give an accurate model for our savings.</li>\n</ol>\n<h2>What we learned</h2>\n<ol>\n<li>Image processing: Learnt about image processing, how to detect edges and the different scenarios where edge detection can go horribly wrong. We interacted with people who knew about image processing to understand better the underlying concepts. </li>\n<li>For an interactive service like ours, we wanted to get quick feedback for our work. HackUMass provided an excellent opportunity for us to interact with people and get their valuable inputs on our work. </li>\n<li>Rapid prototyping</li>\n</ol>\n<h2>What's next for solaropia, an online service to help homeowners calculate the solar potential of their residence.</h2>\n<p>We plan to release an alpha testing version to improve a few minor bugs that might persist. We also plan to develop a feature where users can provide feedback on our UI and calculations for the limited beta testing phase. </p>\n<p>Currently, we only cover US territory as we are restricted by the solar model from NSRDB. In future we plan to leverage similar models for Europe, China, India, Middle-East, Africa and Latin America. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-maps\">google-maps</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/opencv\">opencv</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag\">geocoding</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/pandas\">pandas</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/numpy\">numpy</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/scipy\">scipy</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["HeadSmart", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"HeadSmart \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/373/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Some of us are bicyclists who enjoy to ride with the comfort of safety.</p>\n<h2>What it does</h2>\n<p>Its a bicycle helmet that saves lives. It prevents the cyclist from being distracted from the world around them. Our helmet provides a unique way to have the convenience of turn-by-turn navigation as well as a built-in safety procedure in the event of a collision. The helmet has turn-by-turn navigation that uses motors on the left and right of the helmet to allow the cyclist to know which direction is coming up without looking at their phone for maps' help or GPS. There are also turn-signals on the back of the helmet. There is also a collision-detection system in place that uses an accelerometer to detect sudden, violent changes in motion--differing from the regular movement of looking around the environment--to show a crash.</p>\n<h2>How I built it</h2>\n<p>We used an arduino on the helmet that managed all the signals, haptic feedback and collision detection system.</p>\n<h2>Challenges I ran into</h2>\n<p>There were many issues with trying to communicate between an App to an Arduino wirelessly.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We were able to provide a working prototype before the submission deadline! </p>\n<h2>What I learned</h2>\n<p>We learned how to maximize efficiency in an algorithm which will help on processing times and the time it takes to send and receive information.</p>\n<h2>What's next for HeadSmart</h2>\n<p>We would like to fully implement the GPS features on the helmet to provide a location to the emergency contact and be able to fit the sensors in a much tighter package that would allow for mass production.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag\">xbee</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag\">leds</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/accelerometer\">accelerometer</a></span></li><li><span class=\"cp-tag\">helmet</span></li><li><span class=\"cp-tag\">motors</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/nginx\">nginx</a></span></li></ul>\n</div>\n</div>", ["", "", "", ""]], ["Scopium", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Scopium \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/443/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Scopium \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/444/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Scopium \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/445/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Scopium \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/446/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Scopium \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/447/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>This past summer my friends mom was diagnosed with a fairly common neurological disease called Multiple Sclerosis (MS). While he would tell us about her condition, I realized it\u2019s a very plausible idea to monitor her conditions and track her progression through the disease. My team and I looked through symptoms of MS and used sensors to track the data and send it to an iOS app that then processes the data.</p>\n<p>The hardware is built with an Arduino, BLE shield, and multiple sensors. We would like it to be a convenient wearable device. The data is outputted in serial format which is then sent over bluetooth to the iOS app. The app then allows the patient and/or family/friends/doctor to view this data. The heart rate, temperate, breathing, and vision data is then logged so that the patient and doctor are able to view the history and progression of the disease. When patients feel uncomfortable they are able to hit an \u201calert\u201d button that takes the current data and send it to prior imported contacts. </p>\n<p>The biggest challenge we ran into was sending the serial data to the iOS app. We tried to overcome this using a fitbit to retrieve health data but the API would not allow us to retreive heart beat data due to privacy issues. After 24 hours of consistent hacking, we switched back to the arduino, obtained a bluetooth shield and continued our hack.</p>\n<p>Apart from the immense iOS developemt, API authorization, and hardware knowledge, I learned what team work really was. All of us were able to offer something unique to the team. Each of us came with a seperate skill that would eventually come together to make Scopium. We had a designer, an iOS engineer, a hardware guy, and android developer. </p>\n<p>For next steps, we plan on recreating hardware with high quality medically certified parts and combining that with an efficient and complete iPhone/Android application. This technology is something we plan to put on the market as an affordable patient monitor solution to Multiple Sclerosis(and hopefully in the years to come, many more diseases/disorders)</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bluetooth\">bluetooth</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xcode\">xcode</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["PartySmart", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"PartySmart \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/511/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>HackUMASS Prize category</p>\n<h2>What it does</h2>\n<p>Party hosts can register their parties using their name, address, date of party and phone number.\nNeighbors can anonymously submit noise complaints by entering their address and phone number. The system automatically texts the party host with a warning immediately and the complainant in 20 minutes to ask if the noise issue has been resolved, and if they reply \"no,\" it texts the police and party host to notify them of police being contacted. \nAdmins can log in and view all registered parties and complaints and backlogs of information. Future iterations will display a map/list view toggle of the information, and will highlight \"problem areas\" or houses that have multiple incidents reported.</p>\n<h2>How I built it</h2>\n<p>Blood, sweat and tears.</p>\n<h2>Challenges I ran into</h2>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<p>A boodle!</p>\n<h2>What's next for PartySmart</h2>\n<p>Building out the functionality specified for the Admin Panel.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/angular-js\">angular.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sketch\">sketch</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-maps\">google-maps</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/jyanyuk/hackumass3\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/jyanyuk/hackumass3\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Front End Development + Product Design", ""]], ["Holeshot", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>When we think of autonomous devices, we tend to associate them with a slow, precise machine carefully making calculations of where to make each move. What we wanted to build was a blazing fast machine that would sacrifice some precision in order to accomplish a different goal. Winning races.</p>\n<p>Holeshot is an autonomous drag-racing R/C car powered by Nvidia Jetson TK1. Check us out at <a href=\"http://teamholeshot.us\" rel=\"nofollow\">link</a></p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">cuda</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/azure\">azure</a></span></li><li><span class=\"cp-tag\">win10</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/windows-10-iot\">windows-10-iot</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/kinect\">kinect</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/nvidia\">nvidia</a></span></li><li><span class=\"cp-tag\">jetson</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/opencv\">opencv</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://teamholeshot.us\" rel=\"nofollow\" target=\"_blank\" title=\"http://teamholeshot.us\">\n<i class=\"ss-icon ss-link\"></i>\n<span>teamholeshot.us</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["kalichos", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"kalichos \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/888/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>kalichos</h1>\n<p>Audio upscaling program utilizing neural networks</p>\n<p>'Super resolution' programs are algorithms designed to take low-resolution images and upscale them to higher resolution. Some of these algorithms are designed using neural networks, which are machine learning models that can train themselves to get a desired output from a set of inputs.</p>\n<p>We introduce kalichos as a 'Super fidelity' program. It is a neural network designed to upscale poor-quality audio to higher-quality audio using the same machine learning techniques as high-end super resolution programs take advantage of.</p>\n<h1>How does it work?</h1>\n<p>A neural network is an abstraction over a set of vertices that represent 'weights' and 'biases'. By taking a set of inputs and performing some special linear algebra with the weights and biases, we can create an output and compare it to a desired 'optimal' output. Using this data, we can 'train' the neural network by changing the weights and biases to get closer to the desired output. In this specific case, we take small slices of audio from the low-fidelity data, feed it into the network, and train it against the high-fidelity data. Our implementation uses CUDA to accelerate the linear algebra. By parallelizing the code on a GPU, we increase the speed of the neural network significantly.</p>\n<p>We currently have an extremely small web-app to demo against the songs that we trained the network against. We upload a poor-quality MP3 file and receive a higher-quality MP3 file. In the future, we hope to create an embedded device that can upscale audio in a stream as an Audio-Over-USB interface.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">cuda</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/machine-learning\">machine-learning</a></span></li><li><span class=\"cp-tag\">neural-network</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Slabity/kalichos\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Slabity/kalichos\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["mindMapper", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>So many ideas go untouched because of a lack of a dedicated team. mindMapper provides a way to connect to like minded people who have the same goals in mind.</p>\n<h2>What it does</h2>\n<h2>How I built it</h2>\n<h2>Challenges I ran into</h2>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<h2>What's next for mindMapper</h2>\n</div>\n</div>", ["", ""]], ["partysmart", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p><strong>What is it?</strong>\nPartysmart is a party registration web application that allows off campus students to register their parties with Off Campus Student Services (OCSS). Once a party is registered, neighbors within a quarter mile radius of that party can then go to our site, and our site will automatically show them the addresses of the parties around them and allow them to send a warning message to the party\u2019s host to be quiet. This is great for both the neighbor and the host, because a lot of the time the neighbor doesn\u2019t actually want to have to call the police, but really doesn\u2019t have any other way to quiet the party. The host benefits both by being supplied with water and toilet paper, and by being warned before the police are called.</p>\n<p><strong>How does it work?</strong>\nParty smart is a very simple application, because we wanted to incentivize users by making it very fast and easy to use, asking for the absolute minimum information required.\nThe site is intended for two different types of users: host and neighbor</p>\n<p>As a host, you register your party by going to the Register Party page. You put in the time, location, and contact information for your party. The number you listed will then receive a text confirming that your party has been registered, and you will be receiving toilet paper and water shortly.</p>\n<p>As a neighbor, you go to the File A Complaint page. The site will automatically get your location data, and list to you all of the parties that have been registered within a quarter mile distance. You can then click on any one of those parties, and it will send your message (or a generic message) to the host of the party, warning them to calm the party down.</p>\n<p><strong>Why we chose the project:</strong>\nWe chose this project because the idea of creating something that the university can use to help students excites us, and was a very good opportunity to really create something amazing that we can show to our friends and family, and even future potential employers.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag\">monk</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bing-maps\">bing-maps</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/azure\">azure</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongolab\">mongolab</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag\">materialize</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/justincoon/partysmart\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/justincoon/partysmart\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"http://partysmart.azurewebsites.net\" rel=\"nofollow\" target=\"_blank\" title=\"http://partysmart.azurewebsites.net\">\n<i class=\"ss-icon ss-link\"></i>\n<span>partysmart.azurewebsites.net</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on implementing Bing maps, handling data sent between the front-end and back-end along with improving the UI", "I designed the back end of the system, creating the database and route structure and working with mongodb and twilio.", "Designed the UX and Implemented the front-end."]], ["Salus", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>TEAM 46</p>\n<h2>Inspiration</h2>\n<p>Vehicular death continues to be a leading cause of death in the US, claiming over 30,000 annually.  Self-driving vehicles promise to bring this number close to 0, but in the meantime, plenty can still be done to help lower this number.</p>\n<p>While services already exist that claim to offer the same service many are only available in luxury vehicles.  We also found a purchasable service titled \"splitsecnd\", that can automatically call emergency services for you.  If you can't dial 911 yourself, why would you be able to speak to them?</p>\n<h2>What it does</h2>\n<p>Salus monitors your mobile devices internal accelerometer to detect a rapid change.  If this acceleration is over a certain G-threshold, the program \"activates\", giving the user an 8-second grace period in which he/she can manually override the activation with the push of a single button.  This feature is important to avoid the potential false-positive of your device falling off it's mount.  When the 8 second override window expires, Salus sends an automated voice message to emergency services alerting the dispatcher of your location and situation.</p>\n<p>This automation is important in the case a car crash knocks you unconscious, flings you from your seat, or pins you in a position such that you can't make the call yourself.</p>\n<h2>How I built it</h2>\n<p>Salus was built in Android Studio, using Google Play services to pull an accurate location, and the Tropo API to send this information to emergency services in the form of a voice call.</p>\n<h2>Challenges I ran into</h2>\n<p>There were a bunch of poorly documented/dysfunctional APIs we wasted time troubleshooting with before ditching altogether.  Difficulty synchronizing multiple threads was also annoying.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>The app came out fully functional, with no compromises made.  It has a clear use, and real potential to save lives.</p>\n<h2>What I learned</h2>\n<p>We learned Android Studio from scratch, the Tropo API, Google APIs.  Everything used were unfamiliar to us to begin with.  Designing a simple and effective UI was also a fun challenge.</p>\n<h2>What's next for Salus</h2>\n<p>Salus was never meant to be fully functional as a mobile app, the speed at which it has to ping the accelerometer would drain battery life, and poor cell service is always a possible issue.  The Salus software would shine embedded in a dedicated accelerometer, attached to a car.  It could also be used in luxury vehicles that already run Android-based software.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/tropo\">tropo</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-play\">google-play</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://www.github.com/amacf/Salus\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.github.com/amacf/Salus\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on integrating the text-to-voice API, as well as pinpointing the location.", "I worked on the frontend, focusing on UX and android integration.", "I worked on the graphic design and implementation of the UI, accelerometer monitoring, and backend java development for stability and consistency.", "I worked on implementing the google play services API to pull precise GPS coordinates, and integrating the Tropo API for text-to-speech capabilities."]], ["Familee", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Familee \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/847/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Familee \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/320/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Familee \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/318/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Familee \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/319/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Familee \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/321/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p><strong>Team 45</strong></p>\n<h2>Inspiration</h2>\n<p>We we're inspired to build with Fitbit for its data rich API, but we weren't sure quite what. After realizing that the Fitbit had a vast amount of information relevant not only to fitness, but to health as a whole, an idea struck us. What if we enabled friends, family and care givers to use the Fitbit's immense wealth of information to track overall wellness and even monitor the sickness of distant and older family members? In comparison to other devices, Fitbit's are well received by people of all age groups, unlike other devices geared explicitly towards older individuals. If people actually wanted to wear their wellness device, the data produced would be better and more accurate. Furthermore, the wearer would have the opportunity to use the device outside of its 'wellness' setting, using if for personal expertise and anything else.</p>\n<h2>What it does</h2>\n<p>Familee connects to any number of Fitbit devices owned by any number of individual family members. These family members still retain full control of the account and only share some pertinent health data with Familee. Familee aggregates a month of history in walking, heart rate and sleep patterns to keep the care giving family member up to date on the care receiving individuals overall activity level and basic health. Additionally, Familee provides text message integration and can optionally send text message reminders regarding medications to cared for individuals. Furthermore, Familee correlates patterns in multiple pieces of data to provide an early warning of oncoming colds and sickness. With Familee, care givers can have added confidence in their loved ones health without providing an over bearing presence in their lives.</p>\n<h2>How We built it</h2>\n<p>We built Familee with Mongo as our database, Node and Express as our backend, and Angular as our front end. Additionally we utilized Twilio for sending text message reminders. </p>\n<h2>Challenges We ran into</h2>\n<p>We ran into a number of challenges in the construction of Familee. Our first major challenge was developing a subtable OAuth connection system for Node to speak with the Fitbit API over. This proved to be a a great challenge in token management, token refreshment/timeout and header configuration. Additionally, while under heavy development frequent data reloads caused or API connection to become limited and shut off, resulting in a rapid need for a cached sample data.</p>\n<h2>Accomplishments that We're proud of</h2>\n<p>We're proud that we we're able to construct as solid an application as we did that has the potential to actually make a difference in peoples lives in under 36 hours. Familee has the potential to bring care monitoring into the realm of everyone instead of those with enough money to afford exorbitantly lavish systems. Furthermore, for our first time using an OAuth provider, we were able to build a fairly complete and extensive connector that worked with multiple sessions (Fitbit's) at once.</p>\n<h2>What We learned</h2>\n<p>We learned more about the intricate world of OAuth (And authentication schemes for that matter) that we ever though either one of us would know. We also sharpened our AngularJS skill set further with Angular UI Router and built more elegantly that ever before.</p>\n<h2>What's next for Familee</h2>\n<p>There are a vast number of parts we would love to implement in Familee. We'd love to start by implement a better wellness score system and build a global wellness score, one that takes into account all metrics we gather to produce one score. We also really want to incorporate more monitoring for the times that the care taker isn't logged in. Alerts and such would be sent over text message should anything suspect arise.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/oauth\">oauth</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/angular-js\">angular.js</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/cwheel/Familee\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/cwheel/Familee\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Yo Momma Joke Generator", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>I was at a party - destiny called - and I needed to liven it up with some your mama jokes.</p>\n<h2>What it does</h2>\n<p>Scientifically proven to be 97.83% better than human-generated Yo mamma jokes*. \n*Not actually scientifically proven</p>\n<h2>How I built it</h2>\n<p>libraries on libraries on libraries.</p>\n<h2>Challenges I ran into</h2>\n<p>convincing team members that this idea isn't bad\ntrying not to get distracted by our team members\ntrying not to get distracted by the jokes it generated\ntrying not to distract others when were laughing so hard</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>yo mama is so sad she's a consequence</p>\n<h2>What I learned</h2>\n<p>Don't let your memes be dreams</p>\n<h2>What's next for yo momma joke generator</h2>\n<p>thats what she said classifier</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">libraries</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">ibm</span></li></ul>\n</div>\n</div>", [""]], ["songgen", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We couldn't decide on an idea but we heard about Watson and thought it would a cool project to gain experience from!</p>\n<h2>What it does</h2>\n<p>songgen provides a service for generating Spotify playlists with various forms of content. Currently, we only plan to implement the ability to generate playlists based off of a list of keywords, or a list of images. We also built an ios application in Objective-C that makes requests to this service using the user's iPhone as the source of input.</p>\n<h2>How we built it</h2>\n<p>The \"service\" is our shot at a REST api, but we're still not totally sure if that's what's happening. We utilize a bundle of HTTP verbs on a node.js server handled by express.js routing. These routes integrate with the Spotify Web API in order to create the routes. Because we were using an express boilerplate generator, front end files were also created so we decided to provide a web front-end that utilizes our service as well.</p>\n<p>In addition to the web front-end, we built an iOS application using Objective-C. This application integrates with the (currently Beta) Spotify iOS SDK in order to have the user log in with their Spotify information. Once logged in, the user navigates through a simple UI to generate a Spotify playlist using either keywords or photos selected from their photo library.</p>\n<h2>Challenges we ran into</h2>\n<p>No one on the team had any experience with Objective-C before the hackathon. We thought we would be able to get away with Swift's easier-to-learn syntax, but we unfortunately ran into problems when trying to bridge Spotify's Objective-C SDK with a Swift application.</p>\n<p>We are currently facing the issue of sending and receiving the photos to and from our server.</p>\n<p>Another issue we've just ran into is the problem that iOS does not natively support choosing multiple files in it's built in photo picker. We will need to look into a library that does support this.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>There is a lot of accomplishments the team is proud of. Those include:</p>\n<ul>\n<li>Learning Objective-C and feeling a lot more comfortable with a new programming language.</li>\n<li>Having a UI/UX expert on the team helped create a polished product that we're all proud of.</li>\n<li>Creating a well-designed service that we can easily access from an application.</li>\n</ul>\n<h2>What we learned</h2>\n<ul>\n<li>More about node/express applications</li>\n<li>Importance of design and planning</li>\n<li>Objective-C</li>\n<li>How well good graphics can benefit your final result</li>\n</ul>\n<h2>What's next for songgen</h2>\n<p>Depending on feedback at demos, we may continue to add integrations with our service. One thing we have discussed is a Atom Editor package that can dynamically generate playlists for you based on the type of code you're working on. Of course this would require a lot of added functionality, but we think it's a really cool concept!</p>\n<p>Apart from that, we may revisit our repos during our free-time for refactoring and improving songgen.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ios\">ios</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/objective-c\">objective-c</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/handlebars-js\">handlebars.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/spotify\">spotify</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ibm-watson\">ibm-watson</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Slack-ZooMass\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Slack-ZooMass\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Worked on creation of iOS application that uses the songgen RESTful service to send images or keywords from a user's iPhone and then be directed to the Spotify app once our service has created the playlist.", ""]], ["Cute Turtlebot", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Novel research by Kyle Wray, combined with the competitive and vibrant atmosphere of HackUMass</p>\n<h2>What it does</h2>\n<p>The algorithm plans an optimally smooth path in log space using harmonic functions on an NVIDIA GPU, and executes a basic controller to follow the given path using odometry data.</p>\n<h2>How I built it</h2>\n<p>We took the standard Kobuki turtlebot platform, mounted an Intel NUC, and established a wireless connection over which to share the path planning results. We wrote a ROS node to process the command stream from the planner and send velocity commands to the motor</p>\n<h2>Challenges I ran into</h2>\n<p>Networking</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We're surprised that we were even able to get ROS and the GPU path planner code to link in less than 24 hours. There's a lot of moving parts under the hood, and it's kind of a miracle it worked. We're proud of that for sure.</p>\n<h2>What I learned</h2>\n<p>ROS in python, and writing servers in python. General networking.</p>\n<h2>What's next for Cute Turtlebot</h2>\n<p>We'd like to implement a smoother controller, like a PD or PID controller</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li><li><span class=\"cp-tag\">cuda</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">ros</span></li></ul>\n</div>\n</div>", ["", "", ""]], ["AskAway", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"AskAway \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/687/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"AskAway \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/688/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"AskAway \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/689/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We have Google. We have Piazza. We have Facebook. We all have questions that we want answered. Despite the fact that many use these services together, we continue to lack the answers that we seek. Our team, founded here at HackUMass III, all recognized and experienced first handedly, the faults that lie in current platforms. So we set out to solve the problems that we as students face. Our solution? We made our own platform; by students, for students.</p>\n<h2>What it does</h2>\n<p>Creates a medium between students and faculty within specific schools, allowing them to find specific information that cannot be found on traditional go to search sites like google, or stack overflow.</p>\n<h2>How I built it</h2>\n<p>We used meteor.js to do file control, Mongoldb to store data sets, Materialize CSS to implement material design, heroku to store our code in the cloud, azure to host our webpage, and js, jquery, css and html to design the webpage itself.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/meteor-js\">meteor.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag\">materialize</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/heroku\">heroku</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/azure\">azure</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://umasshackathon.herokuapp.com\" rel=\"nofollow\" target=\"_blank\" title=\"http://umasshackathon.herokuapp.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>umasshackathon.herokuapp.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["UmassPartySmart", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>Built on a Linux Stack with Express serving Clients HTML pages styled with CSS and made interactive using Javascript, the app has a back end of a MySQL Database that houses all of the information about the parties going on in the greater UMass area.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/JackKenney/UmassPartySmart\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/JackKenney/UmassPartySmart\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Google Notepad (Team 8)", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>\"Here, jot this down really quick...\".\n<em>scrambles to find paper/somewhere to write down important stuff...</em></p>\n<p>This has happened to me way too often. Enter Google Notepad - simply type \"notepad\" in Google Search, and you're presented with a small textarea to type whatever you want. Press enter, an </p>\n<h2>What it does</h2>\n<p>The extension checks for where the URL contains \"q=notepad\" while on a Google domain. It then inserts a small textarea in the DOM where you can take notes.</p>\n<h2>How I built it</h2>\n<p>Built using JavaScript and jQuery.</p>\n<h2>Challenges I ran into</h2>\n<p>jQuery was a pain for a very long time. One subtle piece of understanding helped me over an obstacle that almost derailed me from doing this project.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I'm proud of overcoming the challenge that is jQuery! :)</p>\n<h2>What I learned</h2>\n<p>How to make a Chrome Extension - this is my first one!</p>\n<h2>What's next for Google Notepad</h2>\n<p>With a little bit of stylistic effort, I think this app could be pushed to the Google Extension Store!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/jayrav13/google-search-notepad\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/jayrav13/google-search-notepad\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Bump It Up! (Team 8)", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>NYC, Philly and Baltimore are cities that suffer from aggressive potholes. While visiting their hackathons, we learned about some challenges they face, and were inspired to build a solution.</p>\n<h2>What it does</h2>\n<p>We hope to deputize citizens to volunteer their time and drive through the city with the app on, recording critical data on where potholes are.</p>\n<h2>How I built it</h2>\n<p>Bump It Up! uses an iOS App to record y-axis Accelerometer Data which signifies the iOS device encountering \"bumps\" or potholes in the road. Once the drive is done, it sends it to a backend database where a script runs to identify the potholes. Finally, there are two outputs - a Google Maps interface and a public facing RESTful API.</p>\n<h2>Challenges I ran into</h2>\n<p>Determining what the algorithm should be to that indicates a \"bump\" was challenging. Further, pushing the data from the iOS device to the server in a proper dictionary was strangely a challenge.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We found two use cases for this project - both a Google Maps Visualizations and a public-facing RESTful API - which can be used to benefit the community.</p>\n<h2>What I learned</h2>\n<p>Specifically, our teammate Ashton Welles - a beginner to the hacking world - learned a significant amount about web development and impressed us all with his progress. Huge shoutout to him!</p>\n<h2>What's next for Bump It Up!</h2>\n<p>We shall see... :)</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["OpenWorkstand", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"OpenWorkstand \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/526/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>I needed a small workstand to keep my projects organized and neat on my desk, and thought it would be a good idea to incorporate a modular design for attachments (soldering hands, vice, etc.)</p>\n<h2>What it does</h2>\n<p>It replaces miscellaneous separate tools of a normal workbench with one workstand and small external modules.</p>\n<h2>How I built it</h2>\n<p>I drew up both the soldering hands and workstand in FreeCAD before printing them out in PLA on the hackathon-provided makerbot.\nI used</p>\n<h2>Challenges I ran into</h2>\n<p>The editable file of the workstand was lost through a computer problem, and the initial design for the helping hands was not workable (the key to fix the hands to the stand was larger than the keyhole).</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Having a printed model that actually does a job (not just a prototype).</p>\n<h2>What I learned</h2>\n<p>CAD menus are annoying to understand, but useful. Also, have USB keys handy</p>\n<h2>What's next for OpenWorkstand</h2>\n<p>More modules, an easily editable base file for people to design their own modules.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">pla</span></li><li><span class=\"cp-tag\">freecad</span></li><li><span class=\"cp-tag\">misellaneous-hardware</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/makerbot\">makerbot</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://www.thingiverse.com/thing:1005726\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.thingiverse.com/thing:1005726\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.thingiverse.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I have participated in this project as a back-end (low-entry) member. I have supported my team leader, Joseph, by assisting his work; for example, I had gave him some numerical value he needs, and I am planned to be writing a report (portfolio)  after the submission.", ""]], ["123", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<h2>What it does</h2>\n<p>z</p>\n<h2>How I built it</h2>\n<h2>Challenges I ran into</h2>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<h2>What's next for 123</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li></ul>\n</div>\n</div>", [""]], ["Nunchuck Quadcopter", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Nunchuck Quadcopter \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/497/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Nunchuck Quadcopter \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/498/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Nunchuck Quadcopter \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/499/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Nunchuck Quadcopter \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/727/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Quadcopters are awesome. Using souped up parts to make that quadcopter from scratch is even more awesome but equally challenging. </p>\n<h2>What it does</h2>\n<p>Like other quadcopters, it flies through the air like a majestic bird. Except this bird can fly ~ 60 mph, and up to a kilometer far away.</p>\n<h2>How I built it</h2>\n<p>We used Fusion 360 to design the chassis from scratch, and dissected a wii remote to communicate directly to an arduino. That arduino uses long-range radio signals to communicate with a second arduino that processes flight information (using a gyroscope) and controls flight itself.</p>\n<h2>Challenges I ran into</h2>\n<p>3D printing the chassis took multiple long-time iterations, ended up printing two halves that we had to assemble. </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>The fact that we've custom built a quadcopter instead of just buying one. Plus, we can use multiple input sources to control it if we wish too.</p>\n<h2>What I learned</h2>\n<p>Lots of soldering, circuits, CAD</p>\n<h2>What's next for Nunchuck Quadcopter</h2>\n<p>After working on the stabilization algorithm, we can expand our input sources for flight control to include any custom controller we like, or using voice control. If we had more time, we would have also attached a camera in order to see a first hand view of where it is flying</p>\n<p>We were also looking into the Fitbit API in order to use gps data from a run to map a course for the quadcopter to follow</p>\n<p>(team # 55)</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/3dprinting\">3dprinting</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li><li><span class=\"cp-tag\">emax-2204</span></li><li><span class=\"cp-tag\">wii-nunchuck</span></li></ul>\n</div>\n</div>", ["I built the controller that is used to convert the input from the nunchuck to a compact packet that is then sent to the quadcopter. ", "I worked on all of the CAD design that the quadcopter required, among other things"]], ["Botler", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Botler \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/505/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Our team and inspiration formed on the bus ride to HackUMass 3, with people in all different backgrounds we all hoped to learn and create something new!</p>\n<h2>What it does</h2>\n<p>Botler allows intermediate programmers, as well as advanced programmers to create bots and challenge other users to games.  By providing a web IDE, users can learn to code by creating Python bots to play games such as Rock-Paper-Scissors and Light Cycle.  Our platform provides users with all they need to develop their bots to play these games.  We even provide statistics online and on mobile so users can see how their bots are performing! </p>\n<h2>How we built it</h2>\n<p>There were many different aspects that went into creating this project.  We have a back end and game engine written with Python and Haskell.  On our site we have an IDE built in that allows users to create their bots right on the website in Python.  We also have a mobile application that goes alone with our web application to show the statistics of the user's bots. </p>\n<h2>Challenges we ran into</h2>\n<p>There were plenty of challenges that were run into when developing this project.  One of them was starting out using Microsoft Azure.  Our mobile developer's laptop broke mid way through the project and plenty of time was put into fixing it.  There were also small challenges like any project that we ran into.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We're all very proud of our entire project, we believe it was a big project and are glad that we got it all finished.  We're also proud of the beautiful user interface done on both the website and in the mobile application.  Making it beautiful was definitely a good part of our project.</p>\n<h2>What we learned</h2>\n<p>Each one of us learned something new.  Whether it was working on front end instead of back end, or working with a new programming language, each one of us took something new out of our project.  </p>\n<h2>What's next for Botler</h2>\n<p>What's next for Botler? Well, we plan to release Botler to the public to allow the intermediate programmers wanting to learn more to do so.  We hope to create many more games that people can create bots for and battle with one another as well.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag\">haskell</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/UAlbanyRpi\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/UAlbanyRpi\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Ice Cream Puppy", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Basically we wanted to find something cool we could do by combining different pieces of hardware. The basis of our resulting idea was to create an augmented reality setup where you could see a Roomba go around a room but have it replaced by a person or dog within your augmented reality. After deciding that that project was too impractical for a weekend, especially with no 3d graphics or VR experience, we eventually got to our current idea. Our plan was to create a puppy. It would use your hand gestures and spoken commands to command a dog to do any of the things a dog would normally do (maybe not eat...) and more.</p>\n<h2>What it does</h2>\n<p>Currently, the puppy is able to respond to a number of different gestures for different tasks. There are two separate modes of interaction with the puppy. The first, simple one is the Control Mode which allows for direct control, telling the puppy to go forward, turn, and stop by using command gestures. Using the double-tap gesture, you can toggle modes to the Command Mode where you can accomplish some more complex commands. Though more are planned, the only currently working complex command is to sing a song. The puppy can sing you a classic Mario tune or prepare you for a tasty treat by playing the same song that ice cream vans do. You can select the song by waving your hand to one side.</p>\n<h2>How I built it</h2>\n<p>Currently the project uses C++ to control the Myo Gesture Control Armband and Python to deal with iRobot's Create2 Roomba-style device. The C++ side of the project mostly just detects Poses from the Myo device and passes them through a pipe to the Python side. It also deals with and calculates a lot of other data which isn't fully utilized in the current version such as arm angle and arm position relative to initialization position. After the Python side reads the relevant data, it uses the given gesture to decide what command to pass to the Create2. The Python is based in a Tkinter app which provides a GUI for connecting to the Create2 and entering character-based events. Those events are then simulated by our pose mapper to send the required serial commands to the Create2. Data on the movement of the Create2 is also gathered in a similar way.</p>\n<h2>Challenges I ran into</h2>\n<p>The first of our challenges was deciding what technology to use. Even with most of our idea, there were a bunch of different aspects that could use similar or related technologies. For instance, we were originally planning to use a Kinect to keep track of the user's position. This would allow us to calculate the relative positions and angles of the  puppy to the user so that we could do more interesting commands like throwing/fetching a ball or telling the puppy to clean a certain area. We instead decided that it would be simpler to integrate the accelerometer data from our Myo to calculate the position of the user relative to his initial position which would be synced right above the puppy. This issue with this however, is that the error introduced by integrating our acceleration into a position ended up causing a massive drift over time, rendering it extremely difficult to estimate your actual change in position.\nWe spent quite a long time on the math to actually calculate a destination that the user points to based up the user's gesture and the puppy's position. This ended up being a whole whiteboard full of trigonometry to find something that's doesn't work in the current version.\nSome more specific problems is that we spent 6+ hours trying to get the serial commands to work for the Create2. We started off with a working application and tried to recreate its same features in our own but simply failed to actually get our new methods to work properly. For at least two hours all we could give it was the Clean command.\nWe also didn't have a great work setup. We did the majority of our work on a single laptop with people switching off at various points.\nIn order to actually get the puppy to sing, we could only give 16 midi notes at a time so we basically had to stream the music data to our puppy. Compared to a lot of the other problems, it was very satisfying having this work and just listening to the ice cream van music.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I just <em>freakin'</em> made a puppy. What is there not to be proud about? In particular I'm proud that one of our random, almost nonsense ideas ended up being so complicated, interesting, and yet somewhat doable. It was really nice as well to be able to create this application that combines multiple languages and complicated pieces of hardware and actually uses a lot of the capabilities of both. We're also proud of our wakefulness. Our two largest contributors have had a total of about 4 hours of sleep between them since 8 AM Friday.</p>\n<h2>What I learned</h2>\n<p>We learned a lot of fairly basic things about C++ and Python about file interactions. Besides that we learned specifically how to deal with our hardware and just generally learned some strategies for dealing with new hardware in general. For both our main hardware components we basically had to read through all of their documentation to accomplish what we were trying to do but a lot of it just boiled down to using what was already there and working towards adapting it to our needs.\nWe also had do some math research to make sure we got all of the trigonometry and the integrals (acceleration -&gt; velocity -&gt; position) correct. </p>\n<h2>What's next for Ice Cream Puppy</h2>\n<ol>\n<li>More commands, possibly having some facilitated by additional hardware. For instance, some way of more easily tracking the user's position. It could be something like a wi-fi triangulation system, a sonar system, or a mounted camera but that would allow us to give way more complex orders. I mentioned some examples earlier such as throwing a ball that it could calculate some of the trajectory of and go find or like pointing to tell the dog to go clean up that dirty spot on the ground.</li>\n<li>More songs, the Create2 also had some small amount of lighting built in that we never got to try out which would have been nice.</li>\n<li>Along with adding more complex commands with the gestures we have, we could also use the gyroscope and accelerometer data from our Myo to create our own gestures like waving to someone or clenching your fist as you punch forward. This could allow for a much easier spectrum of control compared to adding more modes than we already have.</li>\n<li>Voice commands! This was something we really wanted to do but didn't have the time to implement. We had intended to create another module which would use some form of speech recognition (such as Microsoft or IBM) to allow us to give commands like that as well. For instance, maybe the puppy would only go get a thrown ball if you told him to \"fetch\" beforehand. It would also make it easier to switch modes and might make it more reasonable to simulate the puppy's moods or something like that.</li>\n<li>It's possible that we would add some sort of idle behavior where the puppy wanders around. It could also just clean while idle.</li>\n<li>Another possibility for the puppy would be to actually keep track of the mapping of a house so that it could navigate it more like a Create2 does by default when cleaning where it will bump into things and then move around. With ideal mapping, the puppy would eventually learn to avoid all the obstacles and go around those it does hit.\nIn an ideal world we'd go back to that first idea I mentioned and turn the puppy into a realer (not sure if it even counts as realer in VR) augmented reality puppy that you could actually see run around listening to your commands.</li>\n</ol>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/myo\">myo</a></span></li><li><span class=\"cp-tag\">create2</span></li><li><span class=\"cp-tag\">roomba</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Khalory/Ice-Cream-Puppy\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Khalory/Ice-Cream-Puppy\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["API-CHOOSERINATOR", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>API-CHOOSERINATOR</h1>\n<p>This application is built using <a href=\"http://flask.pocoo.org/\" rel=\"nofollow\">Flask microframework</a> and is intented to be a resource for hackers to find ideas for projects and APIs for data classes. It is hosted on <a href=\"https://bluemix.net/\" rel=\"nofollow\">IBM's Bluemix</a> environment which is based on Cloud Foundry.</p>\n<h3>HackUMass</h3>\n<p>It was built by Team 9 for HackUMass III on October 23-25, 2015.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c\">c</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/shell\">shell</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/ananthamapod/API-CHOOSERINATOR\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ananthamapod/API-CHOOSERINATOR\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["real engineering, i used only analog make a led cube", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>i built it with my girlfriend who doesnt even know what a charge is. now after 36 hours she does.</p>\n<h2>What it does</h2>\n<h2>How I built it</h2>\n<h2>Challenges I ran into</h2>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<h2>What's next for real engineering, i used only analog make a led cube</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">soldering-equipment</span></li><li><span class=\"cp-tag\">wires</span></li><li><span class=\"cp-tag\">leds</span></li><li><span class=\"cp-tag\">mybrain</span></li><li><span class=\"cp-tag\">555timers</span></li><li><span class=\"cp-tag\">2n3904</span></li></ul>\n</div>\n</div>", [""]], ["Eupho", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Eupho \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/547/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Eupho \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/548/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Eupho \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/549/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Eupho \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/401/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to build an app that could benefit UMass as a whole. </p>\n<h2>What it does</h2>\n<p>Eupho encourages the young adult user to keep their blood alcohol content level around 0.06 which is the region where the positive benefits of alcohol peak without a large negative counterbalance.</p>\n<h2>How I built it</h2>\n<p>We mapped out the layouts of each page on a piece of paper, delegated tasks and executed.</p>\n<h2>Challenges I ran into</h2>\n<p>The timer was difficult to get right and the right layout.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We're proud to have finished the app in just 36 hours!</p>\n<h2>What I learned</h2>\n<p>How to overcome challenges quickly in a time-crunch!</p>\n<h2>What's next for Eupho</h2>\n<p>Cleaner UX! More features like a notification system! Getting it on the google play store today!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://play.google.com/store/apps/details?id=datatricks.eupho\" rel=\"nofollow\" target=\"_blank\" title=\"https://play.google.com/store/apps/details?id=datatricks.eupho\">\n<i class=\"ss-icon ss-link\"></i>\n<span>play.google.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I drafted the layouts for the UX, created the icon, logo, some java activities and delegated what needed to be done", "I created some of the xml and java layouts for the app", "", ""]], ["UniLoL.net", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"UniLoL.net \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/473/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We love university and we love League of Legends. Our group met each other with a passion for the online strategy game League of Legends and we wanted to create a platform that made it easier for college students to find other League of Legends players in their school and see how they compare in the rankings.</p>\n<h2>What it does</h2>\n<p>Website will allow League of Legends players enrolled in university to register and link their ranking in to a leaderboard specific to the school they are attending.</p>\n<h2>How we built it</h2>\n<p>We split in to groups of two, two on the front end, and two on the backend. We also communicated between each other and gave input as we were working.</p>\n<h2>Challenges I ran into</h2>\n<p>We had difficulties with some syntax of libraries and languages we were not familiar with.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We worked well as a team for our first hackathon. We also finished the prototype of the website.</p>\n<h2>What we learned</h2>\n<p>We learned front and back-end programming with Node, Angular, Express, Javascript, HTML, CSS, and the Riot-Games API.\nWe learned how to efficiently utilize third-party resources such as some open-source algorithms or functionality.\nWe learned how to work as a team by distributing work in a productive manner and handling it through a repository.</p>\n<h2>What's next for UniLoL.net</h2>\n<ul>\n<li>Spread it to other schools</li>\n<li>More social media, a way to chat with other users and exchange information about the game</li>\n<li>College rankings for highest combined ratings</li>\n<li>Competitive tools (such as tournament handling tools, statistical analysis, etc)</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/angular-js\">angular.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongoose\">mongoose</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/riot-games\">riot-games</a></span></li></ul>\n</div>\n</div>", ["", "", "", ""]], ["Jukebox", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>Jukebox HackUMass Project</h1>\n<h3>Usage</h3>\n<p>Clone this repository, navigate to the main directory.</p>\n<pre class=\"language-nolang\"><code>npm install\n</code></pre><pre class=\"language-nolang\"><code>npm run start\n</code></pre>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/ryanherlihy/ryan-bluemix-test\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ryanherlihy/ryan-bluemix-test\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"http://ryan-bluemix-test.mybluemix.net/#/?_k=edh7v5\" rel=\"nofollow\" target=\"_blank\" title=\"http://ryan-bluemix-test.mybluemix.net/#/?_k=edh7v5\">\n<i class=\"ss-icon ss-link\"></i>\n<span>ryan-bluemix-test.mybluemix.net</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Kinect smart board app (for classrooms)", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>None of the classrooms at our high schools have smart boards.</p>\n<h2>What it does</h2>\n<p>tracks hand gestures to control a projected os </p>\n<h2>How I built it</h2>\n<p>(still a work in prgress) we're using .xaml from kinect sdk into visual studio (we have a program theory)</p>\n<h2>Challenges I ran into</h2>\n<p>kinect not compatible with the right hardware, neither me nor my teammate knew how to code</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>learning how to use connect and learning how to code</p>\n<h2>What I learned</h2>\n<p>How to code </p>\n<h2>What's next for Kinect smart board app (for classrooms)</h2>\n<p>devolpment and implementation into a classroom</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/kinect\">kinect</a></span></li></ul>\n</div>\n</div>", ["I had no idea about API's and SDK's until i got the kinect on friday and installed the studio but I wrote up project outline and began making standalone programs.", "I attempted to learn how to code in C# in order to write a program that can detect several hand gestures and be used to interact with computers on projectors or big tvs but I was not entirely successful"]], ["Leapify", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Leapify</h2>\n<p>Control your spotify OSX desktop app with just a Leapmotion and some handy dandy hands! This app uses the Spotify API with AppleScript and the Node.js implementation of the Leapmotion API to allow an OSX user to do just that.</p>\n<p>This project was built at <a href=\"http://hackumass.com\" rel=\"nofollow\">HackUMass</a> by Team 9.</p>\n<h2>Run Locally</h2>\n<p>Nothing to it. Just bring it into a directory and use <code>npm install</code> to install dependencies.</p>\n<p>Command to run the program from the command line is <code>node index.js</code></p>\n<h2>Controls</h2>\n<p>Swiping up and down trigger raising and lowering volume respectively. To move forward and backwards along playlists, use right swipe and left swipe. To toggle playing/pausing, use the screenTap gesture, which sort of operates like tapping on a phone.</p>\n<h2>Contributing changes</h2>\n<ul>\n<li>Completely open source. Add an issue, submit a pull request, and together we can make Leapify an awesome tool!</li>\n</ul>\n<h2>Licensing</h2>\n<ul>\n<li>See <a href=\"LICENSE.md\" rel=\"nofollow\">LICENSE</a></li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/leap-motion\">leap-motion</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/ananthamapod/Leapify\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ananthamapod/Leapify\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Excitare", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>TEAM 27</p>\n<h2>Inspiration</h2>\n<p>Sometimes we fall back asleep immediately after hitting the snooze or shutoff button on our alarm clocks. We wanted to have some fun.</p>\n<h2>What it does</h2>\n<p>This is an alarm clock app on a phone but with a twist: instead of the phone going off, the car starts driving away and blasts loud music. The only way to shut it off is to get out of bed, chase after the car and press a button on it.</p>\n<h2>How I built it</h2>\n<p>Used a Raspberry Pi as the nerve centre of a car kit.</p>\n<h2>Challenges I ran into</h2>\n<p>Bluetooth. And trying to fit the speaker on the car itself.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Bluetooth.</p>\n<h2>What I learned</h2>\n<p>Bluetooth.</p>\n<h2>What's next for Excitare</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["Tongue-TIEd", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Tongue-TIEd \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/425/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Tongue-TIEd \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/426/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p><strong>Written by Minh because Adrian was asleep</strong></p>\n<h2>Inspiration</h2>\n<p>Yes, it was inspired.</p>\n<h2>What it does</h2>\n<p>Stuff.</p>\n<h2>How we built it</h2>\n<p>With very little skill and forethought.</p>\n<h2>Challenges I ran into</h2>\n<p>I had trouble balancing on this segway thing.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Balancing on that segway thing.</p>\n<h2>What I learned</h2>\n<p>I'm hungry.</p>\n<h2>What's next for Tongue-TIEd</h2>\n<p>Food.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag\">radio</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/love\">love</a></span></li><li><span class=\"cp-tag\">blood</span></li><li><span class=\"cp-tag\">sweat</span></li><li><span class=\"cp-tag\">tears</span></li></ul>\n</div>\n</div>", ["", ""]], ["Botler", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<h2>What it does</h2>\n<h2>How we built it</h2>\n<h2>Challenges we ran into</h2>\n<h2>Accomplishments that we're proud of</h2>\n<h2>What we learned</h2>\n<h2>What's next for Botler</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">haskell</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/azure\">azure</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://botler.cloudapp.net/\" rel=\"nofollow\" target=\"_blank\" title=\"http://botler.cloudapp.net/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>botler.cloudapp.net</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on front end design and code, and back end logic and design. We all did lots of interchanging parts", "", ""]], ["Geslite - TEAM 15", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/bTNODOEqGGM?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Geslite - TEAM 15 \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/398/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Geslite - TEAM 15 \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/399/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Geslite - TEAM 15 \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/400/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Geslite - TEAM 15 \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/402/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Geslite - TEAM 15 \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/405/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Everyday we command the devices around us to conduct regular tasks. Press the switch to run the fan, or start the bulb. However; imagine how awesome it would be, if we flipped this interaction.</p>\n<p>What if the devices already knew what you want? What if they responded to your mood? What if you didn't have to control them at all! That's exactly what Geslite it about. \"Geslite\" is a combination of \"Gestures\" and \"Lite\"; bringing out a paradigm of integrating gestures into our lives in the most fluid manner possible.</p>\n<p>Geslite is a progressive technology based on connecting Kinect with Arduino, so that the software will automatically understand your mood (based on your facial expression), and your gestures to control every device in your room. This allows you to live in your most natural state. Want to go to bed? Don't worry about the lights, the moment you sleep, the lights go off automatically! Or you wanna swich on a fan but don't want to shout \"Hey Alexa\", you can just do that with Geslite!</p>\n<p>And, Geslite is open sourced!</p>\n<h2>How we built it</h2>\n<p>We built it as a team through lots and lots of trials and errors. We had a direction in mind, but no experience with image processing through Kinect. However, we had a great bond as a team that helped us to keep moving forward, everyone's skills were used to the best.</p>\n<h2>Challenges we ran into</h2>\n<p>Since, none of us had worked with image processing in Kinect, we had no clue where to start. We knew where we want to head, but had to deconstruct a lot of existing paradigms we had to overcome the challenges we faced.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Learned how to talk to new hardware (Kinect) and make it talk to other technologies.</p>\n<h2>What's next for Geslite</h2>\n<p>We can incorporate the AI into this project to make it more smarter. Using small computers like raspbery-pi can totally make the whole technology independent and portable. This could change the home automation market, because of it's involvement of AI in it.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">microsoft-kinect</span></li><li><span class=\"cp-tag\">arduino-uno</span></li><li><span class=\"cp-tag\">visual-studio-c#</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/visual-basic\">visual-basic</a></span></li><li><span class=\"cp-tag\">image-processing</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/nddave/Geslite\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/nddave/Geslite\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["party", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"party \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/390/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"party \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/391/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>npm install\nbrowserify -t [ reactify --es6 ] main.js | uglifyjs -o bundle.js\nRun these commands in root/data directory to create the database.</p>\n<p>Run in seperate processes</p>\n<p>mongod --dbpath .\nmongoimport --db journal --collection entries --file ../journal.json --jsonArray\nStart web server from root directory.</p>\n<p>node server\nopen <a href=\"http://localhost:3000\" rel=\"nofollow\">http://localhost:3000</a>\nExtra: Build Process for Development</p>\n<p>browserify -t [ reactify --es6 ] main.js -o bundle.js</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/react\">react</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/atvatsa/party\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/atvatsa/party\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["deceptic", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We all come from different backgrounds. When trying to come up with a common ground, we ended up with something cyber security related.</p>\n<h2>What it does</h2>\n<p>Deceptic scans any and all files being uploaded to a Cloud service or any server, and compares them to an established database containing various malware signatures.</p>\n<p>With Deceptic, you can choose a file to upload. Once you upload it, we'll run it through our scanners, and if it contains malware, we'll tell you. Otherwise, we'll push it to OneDrive for you.</p>\n<h2>How we built it</h2>\n<p>We used Python for the backend mostly. We used raw python and postgresql to handle and compare malware, and flask to create the web interface. We used the Microsoft OneDrive API to store files in the cloud. We also used metasploit to generate malware shell code.</p>\n<h2>Challenges we ran into</h2>\n<p>Our most challenging obstacle during our creation of Deceptic, was using and setting up Microsoft's OneDrive API. Struggling to connect with the API using OAuth which was tedious and time consuming. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We eventually sort of got the OneDrive thing down. We think our parsing of metasploit malware into database entries was pretty unique and interesting.</p>\n<h2>What we learned</h2>\n<p>We learned more about file encoding in hex. Additionally, we learned about some algorithms to compare really long strings. Throughout our process of creating Deceptic, we learned more about using HTTP requests to communicate with an API using oauth.</p>\n<h2>What's next for Deceptic</h2>\n<p>For the future, we want to implement machine learning, and pattern recognition through Yara, so more intricate and complex malware can be detected. We also want to implement our software through multiple platforms not only for OneDrive but also for other cloud services. </p>\n<h2><strong>TEAM 32</strong></h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/akattelu/deceptic\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/akattelu/deceptic\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["\"What Should I Do?\"", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Being all college students, we have all gotten into a Situation where you have a lot of Difference assignments due in a short time (such as a week) and it can be hard to figure out what needs to be worked on when. We felt that having an App where we could input our current assignments, and have it make a Personalized \"To-Do Today List\" would benefit us greatly. </p>\n<h2>What it does</h2>\n<p>In a nut shell, the app allows a user to input all of their current assignments, such as upcoming Exams, Projects, or Homework, and the app with be able to determine what needs to be worked on today. The app only has limited functionality such as adding new assignments or showing the assignments that need to be worked on today. </p>\n<h2>Note</h2>\n<p>I would like to point out that this Project was a team effort. Each Part of the Project was written/designed by different members of the team, therefore the following questions will be split to allow each person to give a response.</p>\n<h2>How I built it</h2>\n<p>The parts were divided in the following way: Nikolai &gt; Back end-Development, Gowtham &gt; Database Management, Dylan &gt; Front end-Development, Joseph &gt; Back to Front Development.</p>\n<p>Nikolai - My Back-end Code was written in Java, using Eclipse. My task was to make the actual functionality of all the programs. So I made both the Algorithm to determine which projects should be done today, and the actual code for the Main Classes like the Assignment Object Class, and the Support Classes, like a Tuple Class to allow methods to return 2 things. To Make the Algorithm, I actually asked people who would walk into the room, specific questions, such as \"If you had a Homework due in 2 Days, that you did 40 percent of, would you work on it\" (An Actual Output from a random question generator), and using the Data collected I was able to formula an Algorithm to Calculate which Assignments should be done that Day.</p>\n<p>Joseph - I did the front end development and design of the project with Dylan Bowers. We worked inside of Android Studio getting the design and functionality of how we wanted the app to flow and be viewed by a user. The overall layout of the app was thought of in order to allow the user to easily add, view, and change what they want with ease. </p>\n<p>Gowtham -  In order to have a personal planner data needs to be stored in the app. The storage of the data is done by the SQL  database method. For this hackathon I learnt how to use a SQL database to store information and produce it on a list. I also learnt of to add an app to the google cloud therefor connecting to the google cloud.</p>\n<p>Dylan - My role was to develop the front-end user interface (XML) and make sure everything flowed together well. I also undertook the role of integrating Nikolai's back-end infrastructure into the application with Joseph Isble (if you check the repository, there's TONS of raw java files he wrote). Not having any experience with XML at all, it was quite the challenge to learn how to properly build an interface. Eventually I began to grasp the structural aspects of XML and the app's development rapidly accelerated.</p>\n<h2>Challenges I ran into</h2>\n<p>Nikolai - Ignoring the usual code Errors, I only ran into 1 major problem, actually creating the Algorithm. This was due to the fact that each person gave unique answers, so some people would work on a specific homework Assignment, but some wouldn't. So, about 50% of the data I collected was too balanced (Between yes/no) to actually create a data point. However, I was able to use the other 1/2 in a graph, and predict what people's answers would be to questions I didn't ask.</p>\n<p>Joseph - One of the major issues was figuring out why the emulator built into android studio was giving us a memory allocation error. This error was informing us that the emulator did not have enough memory to run what we wanted it to. Fixing this error was due to a poorly chosen graphic that was taking up too much memory. To make this even harder we had no prior knowledge on how to make an android app. Having to learn how the program works how to code with the new programming language within 36 hours was the most difficult aspect we all ran into.</p>\n<p>Gowtham - I came into several challenges when creating a SQL database. The first problem I came into is for the app not to over run causing the the app to self collapse. Once that was fixed I ran into a problem where I could not show the list of when the data is stored. I know the data is stored in a list, however it did not show. Data binding was a huge challenge for me.</p>\n<p>Dylan - Oh man, there was SO many! First and foremost: XML. I had absolutely no experience in XML whatsoever, so learning it on the spot was definitely the largest challenge for me. Aside from that, there were quite a few frustrating challenges I ran into. One was figuring out why our application was amassing such a gigantic memory usage. It turns out that I used an image that was WAY too big so it was eating all the designated memory. That felt pretty silly to figure out. The second biggest challenge was using Android Studio. Totally unprepared, it took awhile to realize why I couldn't drag elements into the form, how to trace my errors, and so on.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Nikolai - This is going to sound repetitive, but I am most proud of my Assignment picking Algorithm. It took a lot of calculations and critical thinking to create an easy to use, and dynamic way to allow for custom Algorithms created by the user on Start up. However I believe I created a very creative and intuitive to this problem.</p>\n<p>Joseph - I am proud of being able to learn enough about android app development in order to get this app to perform what we intended. Going into this project with no prior knowledge of android app development I was worried I wouldn't have enough time to understand how the program worked. </p>\n<p>Gowtham - I'm proud that I was able to create an SQL data that stores in data into a list. I now believe I have a solid understanding on how SQL works and its importance.</p>\n<p>Dylan - Creating the front-end infrastructure of an android application, having never touched mobile app stuff, while using XML, a language I've never tried to use. It was definitely an overwhelmingly satisfying feeling to be able to create such a (relatively) extensive application in such a small short of time with languages I've rarely used.</p>\n<h2>What I learned</h2>\n<p>Nikolai - I learned that creating an app takes a lot more work than it seems. But I also learned with the right planning and teamwork, it is more that possible to create a functional and creative app.</p>\n<p>Joseph - There is a lot more required for developing an app than I originally thought. Developing an app lead to many errors I have never encountered before and had to learn on the spot how to solve them.</p>\n<p>Gowtham -  Most importantly I learnt how to use breakpoints in my code to find what is wrong. Also I learnt how to patiently look through our whole code when there is an error.</p>\n<p>Dylan - XML and what goes into making an android app. It's definitely quite a pain if you know absolutely nothing, so now that I've learnt quite a bit of XML and mobile app development, it'll be a very useful skill going forward into the future just in case I ever wanted to pursue mobile application development.</p>\n<h2>What's next for \"What Should I Do?\"</h2>\n<p>More features are planned to be implemented:\nEditing Current Assignments.\nRemoving Assignments.\nSaving to a Database.\nA Logo.\nAuto-removing Assignments that due before today (Every day, any app that was due the day before, would be removed from the List)</p>\n<p><strong>Note</strong> \nSome of these things might be implemented between now and the noon deadline.\nAlso, we are writing this after being up for 20+ hours, so we apologize for any blatantly obvious grammatical mistakes. \n<strong>Team 4</strong></p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/eclipse\">eclipse</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/enragednuke/UTrackerV3.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/enragednuke/UTrackerV3.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I Coded the Core classes necessary for the Project to Run, along with the Algorithm that determines if it needs to be Done Today.", "I worked on the front-end design and integration of the backend design into the front-end design with Dylan Bowers", "I worked on the SQL side in storing the data and also the connection process to Google clod system", "I worked with Joseph Isble on the front-end design and integrated the back-end design into the program so that it could run fluidly."]], ["Lyrics With Friends", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>Team 2</p>\n<h2>Inspiration</h2>\n<p>We wanted to make something that combines music and communication in a fun, lighthearted game between friends.</p>\n<h2>What it does</h2>\n<p>Our web application is a fun, competitive game where two players go head to head in quoting musical lyrics . Both players are presented with a random topic and must quote a  relevant song within the given time frame. It checks online with the Musixmatch api to determine if you are actually quoting a song.</p>\n<h2>How we built it</h2>\n<p>\"We built this app on rock and roll.\" Our web application runs on a Microsoft Azure serve. The main portion of the code is written in JavaScript with a front-end in HTML and CSS. We included the Musixmatch API to confirm the validity of player inputs. </p>\n<h2>Challenges we ran into</h2>\n<p>Our back-end was relatively unfamiliar with JavaScript so there was a bit of a learning curve there. We also had a few issues with dependency versions conflicting with one another.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are quite proud to have created a full fledged app over the course of a weekend. </p>\n<h2>What we learned</h2>\n<p>This was the first hackathon experience for one of our members.We also learned a lot about setting up Azure servers and building full-stack JavaScript applications.</p>\n<h2>What's next for Lyrics With Friends</h2>\n<p>We plan on adding IBM Bluemix language capabilities to check whether the quote was on topic as well as add a voice to text feature for actual sing off battles.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/github\">github</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/azure\">azure</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/CEXGroup/cexed\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/CEXGroup/cexed\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"http://lyricswithfriendz.azurewebsites.net/\" rel=\"nofollow\" target=\"_blank\" title=\"http://lyricswithfriendz.azurewebsites.net/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>lyricswithfriendz.azurewebsites.net</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I was awesome.", "", "", ""]], ["Naptime", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Naptime \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/296/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Naptime \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/297/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Naptime \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/298/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Naptime \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/299/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We were to lazy to always set an alarm or countdown for the little things. Besides Siri can do it but Android doesn't have this luxury.</p>\n<h2>What it does</h2>\n<p>It utilizes the in-built speech recognition api for android. It asks the user how long he/she will like to nap and computes the desired time\nIt goes far to hear the time arguments in any given sentence. For example, if  I were to say Vincent wants to take a nap for a half hour. The application will accurately set a countdown for 30 minutes </p>\n<h2>How I built it</h2>\n<p>We used java and xml to code in android studio.</p>\n<h2>Challenges I ran into</h2>\n<p>A lot. For example, extracting the time argument from any given sentence.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Be able to do in two days. With lots of RedBull</p>\n<h2>What I learned</h2>\n<p>Life is hard when you're not in sync</p>\n<h2>What's next for Naptime</h2>\n<p>Be more interactive and more fun.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xml\">xml</a></span></li></ul>\n</div>\n</div>", ["I devoted everything and we built it", ""]], ["Travel Mate", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Travel Mate \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/301/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Travel Mate \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/302/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Travel Mate \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/303/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Travel Mate \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/304/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Travel Mate \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/305/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Travel Mate \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/306/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Travel Mate \u2013 screenshot 7\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/307/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Travel Mate \u2013 screenshot 8\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/308/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Often people are stuck in strange cities with no idea what to visit. </p>\n<h2>What it does</h2>\n<p>Our app simplifies this issue by providing a list of places to see and plans the best possible way to see as many points of attraction as possible.</p>\n<h2>How we built it</h2>\n<p>The system is built using the Django framework for the back end hosted on Microsoft Azure and Android application for the front end.</p>\n<h2>Challenges I ran into</h2>\n<p>We had to work with limited number of requests for the Google API's. </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We successfully implemented an approximation of the Travelling Sales Person problem to plan the best route for the user.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/azure\">azure</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/django\">django</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://docs.google.com/uc?id=0B4d2rxDKJldtbjlObzdZc2xPWXc&amp;export=download\" rel=\"nofollow\" target=\"_blank\" title=\"https://docs.google.com/uc?id=0B4d2rxDKJldtbjlObzdZc2xPWXc&amp;export=download\">\n<i class=\"ss-icon ss-link\"></i>\n<span>docs.google.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the Android application which involved working with the Google Map and Driving API's. ", "", "", ""]], ["Contextr", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Contextr \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/358/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Contextr \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/328/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>What is it</h2>\n<p>Contextr is a cloud based context driven word suggestion engine that runs on Microsoft Azure. It is a generic API that is designed as a SAAS. The API can be consumed in a multitude of ways and has numerous far reaching applications. </p>\n<h2>How it works</h2>\n<p>Contextr is hosted on Microsoft Azure for easy global access. For the engine, content specific data is added to a data file via custom built web scrapers which is then parsed into, indexed, and used by Apache's Lucene. Context is defined by a generated list of 'Contexts' which are essential the current state or topic that best describes the current case in the client. Using Lucene, we implemented our own Markov Chain algorithm for \"scoring\" words, from the data set, to be suggested next based on the context as well as the text and data sent in from whatever source is implementing the engine's API. </p>\n<h2>What it does</h2>\n<p>Here's what you need to know about Contextr. Contextr is a powerful tool that when implemented, can be used for a bunch of different cool stuff that leverages its text prediction capabilities. An important thing to note though, Contextr is not some simple text editor with autocomplete. Contextr is an engine that can power everything from a text editor to browser extensions to improved company support services. However, we have built a functioning text editor web application on top of Contextr called \"Nostradamus\" to demonstrate the engine. With Nostradamus, you can select from a list of predefined contexts (i.e. the topic of a paper you're trying to write) and leveraging Contextr API, Nostradamus will display \"Contextions\" (context suggestions) for you to select from as you're writing and its that easy. Being as powerful yet simple as it is, nothing else can truly stand toe and toe with Contextr. </p>\n<h2>Challenges we ran into</h2>\n<p>Everything. Literally everything. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Everything. Literally everything. </p>\n<h2>What we learned</h2>\n<p>Markov Chains are super cool, Spring is really awesome, and Lucene is not built for certain things that we used it for. </p>\n<h2>What's next for Contextr</h2>\n<p>We don't know, how about you pick? That's the beautiful thing about Contextr, you need only thing of the implementation and our API will make it happen. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag\">lucene</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/spring\">spring</a></span></li><li><span class=\"cp-tag\">react.js</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://www.contextr.io/\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.contextr.io/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.contextr.io</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["excitare", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>Team #27</p>\n<p>You know how people set an alarm and go to bed. Then forget about the world, ignore the alarm and go back to sleep. Not anymore! </p>\n<p>to be continued...</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Sandyhacks/excitarehackumass\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Sandyhacks/excitarehackumass\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Superhero Vision", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>Superhero Vision</h1>\n<p>This website can help you find your inner superhero! Simply enter the URL of one of your FB profile pictures and watch the magic unfold! Using Microsoft's Vision API, your face will be analyzed and then compared with various heroes (and the occasional villain) to see who you are most similar to. </p>\n<p>Tools used:</p>\n<ul>\n<li>Microsoft's Vision API</li>\n<li>Microsoft Azure</li>\n<li>Spring MVC Framework</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/spring\">spring</a></span></li><li><span class=\"cp-tag\">mvc</span></li><li><span class=\"cp-tag\">microsoft</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/azure\">azure</a></span></li><li><span class=\"cp-tag\">vision-api</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/dmariselli/HackUMassIII\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/dmariselli/HackUMassIII\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Controlling Arduino car via Leap Motion", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Experience and have fun with leap motion.  </p>\n<h2>What it does</h2>\n<p>Able to control the Arduino RC car by moving your hands via bluetooth</p>\n<h2>How I built it</h2>\n<p>using java script and node.js control Arduino and leap motion. Using Xbee for communicate with each other. </p>\n<h2>Challenges I ran into</h2>\n<p>connecting Bluetooth. </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>using Xbee for communication rather than bluetooth. </p>\n<h2>What I learned</h2>\n<p>debug, test circuit, COM, serial communication </p>\n<h2>What's next for Controlling Arduino car via Leap Motion</h2>\n<p>have different function, for example, collision , brainwave control . </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li></ul>\n</div>\n</div>", ["", "", ""]], ["BluChain", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Having the need to connect to the internet to talk to your friends sucks. There are so many people in the world, we can all come together to contribute to the cause. </p>\n<h2>What it does</h2>\n<p>By using bluetooth, we are able to construct a peer-to-peer bluetooth network to connect to the internet for our chat application even when you have no wifi or data connection.</p>\n<h2>How I built it</h2>\n<p>We built it using azure mobile services for the server side and android for the client side.</p>\n<h2>Challenges I ran into</h2>\n<p>We ran into many challenges with handling bluetooth requests for multiple users such as when constructing this network, how many open connections should we allow at a single node.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/azure\">azure</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bluetooth\">bluetooth</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag\">microsoft</span></li></ul>\n</div>\n</div>", ["Designed and implemented bluetooth permissions & bypass, connection switching,  middleware for bluetooth requests and p2p request relay system.", "I worked on backend for storing the messages.", "", "", ""]], ["Party Too Hardy", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration A presenter asked if it could be done as it would be useful in the campus area. Seeing as the idea our team had done already was mostly done and we were doing nothing, it seemed fun to hop into.</h2>\n<h2>What it does It currently should be doing basic visual interfacing on an Android app and talking to a back end server on Azure.</h2>\n<h2>How I built it Python back end made by a team mate with a Java app to input data. Postgresql as a storage for data. All hardware is hosted by Microsoft Azure.</h2>\n<h2>Challenges I ran into Dealing with weird HTTP issues.</h2>\n<h2>Accomplishments that I'm proud of Solving these HTTP issues.</h2>\n<h2>What I learned HTTP deprecation's happen fast and what I did a few months ago isn't valid now.</h2>\n<h2>What's next for Party Too Hardy Maybe some improvement for the enjoyment and attempt at making it better.</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/azure\">azure</a></span></li><li><span class=\"cp-tag\">microsoft</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/postgresql\">postgresql</a></span></li></ul>\n</div>\n</div>", [""]], ["insightful", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"insightful \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/264/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We were inspired by analyzing sentiment in Instagram posts.</p>\n<h2>What it does</h2>\n<p>We built a view that allows a user to type in a hashtag, and look at various posts and the sentiment of them. It also grabs the user's information, location, and other information pertaining to the post.</p>\n<h2>How I built it</h2>\n<p>We used Javascript to interact with the Instagram api and IBM's Alchemy API in order to analyze the sentiment of the captions of each instagram post.</p>\n<h2>Challenges I ran into</h2>\n<p>We had originally wanted to make this in NodeJS, but ran into many complications interacting between server side and client side.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>That we finished.</p>\n<h2>What I learned</h2>\n<p>I learned about sentiment analysis and interacting with the Instagram API.</p>\n<h2>What's next for insightful</h2>\n<p>I plan to use D3.js in order to show visuals from the data that we pulled.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/instagram\">instagram</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ibm-watson\">ibm-watson</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/alchemyapi\">alchemyapi</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/erschwartz/InstagramData\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/erschwartz/InstagramData\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Arduino Controlled Car (ACC)", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Arduino Controlled Car (ACC) \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/257/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Having previous experience with Arduino, I decided to see if I could build it once more.</p>\n<h2>What it does</h2>\n<p>It drives using code from Arduino Microprocessor</p>\n<h2>How I built it</h2>\n<p>I used an Arduino, Chassis (w/Wheels), and some Wires</p>\n<h2>Challenges I ran into</h2>\n<p>One motor is not working. </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I was able to successfully code it on my own. </p>\n<h2>What I learned</h2>\n<p>I learned how to properly set up and Arduino motor shield and wire it the correct way for the motors.</p>\n<h2>What's next for Arduino Controlled Car (ACC)</h2>\n<p>A bigger battery (More amps), better motors, improved chassis, sensors, and remote control as hardware additions. Software-wise, the ability to map out a room floor and be taken over by a remote control at anytime. Ultimately, becoming an exploratory bot. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag\">chasis</span></li><li><span class=\"cp-tag\">wires</span></li></ul>\n</div>\n</div>", [""]], ["wopi", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/EjkA9S4aJBo?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"wopi \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/228/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"wopi \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/234/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"wopi \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/235/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Our inspiration came from our interests in the fields of science and physics. Additionally, our desire to make something unique and fun also contributed to the project.</p>\n<h2>What it does</h2>\n<p>Wopi is a combination of an iOS and OS X app that tracks high frequency sound (beyond the range of human hearing) between nodes. By using two or more mobile devices as nodes, wopi detects sound between them and calculates the relative distance between the nodes and the object. This distance is in turn reflected on the OS X app, in this case, as a simple game of PONG. Changes in the distance correspond to movement of the pong paddle, where the aim is to move it into position to hit the ball.</p>\n<h2>How I built it</h2>\n<p>Each phone listens at very high sample rates in order to calculate the amplitude of very high frequency tones. The data is then filtered slightly in an effort to reduce background noises (however, a quiet room is most ideal). The audio data and channel (left, right, or back) are encoded and sent over wifi to the host. The host, or laptop in this case, takes all of the data from each of the nodes in an attempt to calculate the position of the frequency emitter; this is implemented using heavy filtering. The calculated position is then translated to a corresponding position on the screen which is used to control the pong paddle.</p>\n<h2>Challenges I ran into</h2>\n<p>Bluetooth communication between the nodes and host was unsuccessful. Calculating relative distance and creating the most effective algorithm for translating intensity to position were very difficult. Sending data over local network was troublesome; streams were constantly closed and prevented us from using them as an effective solution.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We are extremely proud of the algorithm created for detecting relative position from intensity.</p>\n<h2>What I learned</h2>\n<p>We learned quite a bit about sound.</p>\n<h2>What's next for wopi</h2>\n<p>Unknown.</p>\n<p><strong><em>TEAM 60</em></strong></p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/objective-c\">objective-c</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/love\">love</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bluetooth\">bluetooth</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/av-foundation\">av-foundation</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/qwertyflagstop/wopi\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/qwertyflagstop/wopi\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I did most of the mac and iOS framework utilization. I did the main system architecture.", "I did most of the algorithm creation for the project. I wrote the final relative distance algorithm. I did a lot of the hands on testing and gained experience working with sprite kit to implement the game and in objective-c in general.", ""]], ["Smart Pillbox", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Smart Pillbox \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/198/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Smart Pillbox \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/199/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Smart Pillbox \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/200/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>The smart pillbox is born of the desire to positively impact the lives of relatives and loved ones who may need constant care and attention.</p>\n<h2>What it does</h2>\n<p>It's a device that helps keep track of the intake of oral medication using a specialized box equipped with a wifi module that logs data about the patient in the cloud, letting those responsible for them rest assured that they're following up with prescribed treatment, and alerting them of deviations from the prescription plan for timely intervention.</p>\n<h2>How I built it</h2>\n<p>Using the Particle Photon WiFi module to capture changes to sensors in the box, and IBM BlueMix cloud services to log sensor changes in a server. Twilio from Microsoft Azure was also used to send text alerts.</p>\n<h2>Challenges I ran into</h2>\n<p>Some learning curve in using web development tools.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Getting the product to work somewhat was great.</p>\n<h2>What I learned</h2>\n<p>Got to learn about a few new software tools, and understand a little better about the Internet of Things.</p>\n<h2>What's next for smart pillbox</h2>\n<p>We'll keep thinking of ways to make it better. The most important thing is the need it meets, which is the ability to follow up with the medical needs of loved ones to make sure they're being met, and we want to bring more of that enabling tech to the table using the IoT.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag\">particle-photon</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://smartpillbox.mybluemix.net/home\" rel=\"nofollow\" target=\"_blank\" title=\"http://smartpillbox.mybluemix.net/home\">\n<i class=\"ss-icon ss-link\"></i>\n<span>smartpillbox.mybluemix.net</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["2K1 Field", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"2K1 Field \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/216/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"2K1 Field \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/217/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"2K1 Field \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/218/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>At WPI, we have a Robotics class where little arduino robots are controlled by a field-computer over bluetooth. Previously, this field computer was an Arduino Mega with a big expensive shield. Our project superseeds that previous system, and allows students to debug and test without an actual field computer!</p>\n<h2>What it does</h2>\n<p>We developed an android app, which communicates over bluetooth and USB to Arduino Megas. It reads the current field state over USB and sends it out over bluetooth. However, if you don't have the field, the app allows you to setup a field in software and send pretend messages to your robot. We also include a low-level bluetooth debugger to send raw messages to test your robot.</p>\n<h2>How I built it</h2>\n<p>We used Arduino for the robot code, Java for the Arduino App, and lots of blood sweat and tears!</p>\n<h2>Turns out threading is hard</h2>\n<p>When you're doing two methods of Asynchronous IO, it get's pretty complicated. We may have as ,many as 4 asynchronous tasks going at once, none of which can be on the UI thread!</p>\n<h2>We're proud that</h2>\n<p>We are able to give back to a class that taught us a lot.</p>\n<h2>Our Stretch-goals</h2>\n<p>We wanted to also host a webserver in the app so that your group mates or instructor could tap in and watch/control your robot through their laptops, rather then on the tiny phone. We didn't have time, but it's a great idea!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bluetooth\">bluetooth</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/GompeiAndTheBrobots/2K1Field\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/GompeiAndTheBrobots/2K1Field\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/GompeiAndTheBrobots/Arduino\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/GompeiAndTheBrobots/Arduino\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["LeapMotion Finger Painting", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/Mdcem5bDqDk?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"LeapMotion Finger Painting \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/208/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"LeapMotion Finger Painting \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/209/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>HackUmass III</h1>\n<h2>Contributors</h2>\n<ul>\n<li>Matt Gramigna</li>\n<li>John Fouad III</li>\n<li>George Bayides</li>\n<li>Vanessa Demaral</li>\n</ul>\n<h3>Extended documentation provided in helpdoc.docx</h3>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/leap-motion\">leap-motion</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/umass1/hackathon\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/umass1/hackathon\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Leveraging the API to provide functionality", "Helped understand API and algorithms", ""]], ["NoteWorthy", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Dark Souls Orange Soapstone</p>\n<h2>What it does</h2>\n<p>Leave notes based on GPS data for other users to find</p>\n<h2>How I built it</h2>\n<p>Android-Studio with the Android SDK</p>\n<h2>Challenges I ran into</h2>\n<p>Learning the Android SDK and mobile development.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Designing and implementing a cool looking UI for the app. </p>\n<h2>What I learned</h2>\n<p>How to develop an Android app!</p>\n<h2>What's next for NoteWorthy</h2>\n<p>Multi-User support, tagging, and more customization options.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xml\">xml</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/alechirsch/NoteWorthy\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/alechirsch/NoteWorthy\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Virtualoso", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Virtualoso</h2>\n<p>Virtualoso is a virtual piano and tutor that uses the Leap Motion to track hand movement, allowing the user to play as if they had a piano in front of them. It can also guide the user through pieces note by note, and can play the music for them so the user can hear what it should sound like.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/leap-motion\">leap-motion</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/AaronPerl/HackUMass-Virtualoso\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/AaronPerl/HackUMass-Virtualoso\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["MessageMumbler", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>FB Messenger is the most popular messaging platform in the world. As active FB Messenger users, we wanted to build an app that makes messaging more fun and productive. There are certain situations that you want to check your messages, but looking at the screen is inconvenient:</p>\n<ul>\n<li>At work place, constantly checking Facebook is not acceptable (Unless you work at Facebook).</li>\n<li>While studying, switching browser tabs just to check single message is annoying.</li>\n<li>Driving, reading messages impairs reduces ability to drive. </li>\n</ul>\n<p>And the list goes on. We wanted to create an app that reads out new Facebook messages to us, so that we don't have to look at screen to get update. MessageMumbler allows us to listen to the updates in real time and react to the ones that are important to you. </p>\n<h2>What it does</h2>\n<p>MessageMumbler extracts new messages from your Facebook messenger and reads them for you.</p>\n<h2>How we built it</h2>\n<p>We created chrome extension, which uses DOM to extract message data from main Facebook website.\nAfter extracting the message data, we figured out which messages are recent and who are the senders.\nWe set up a nodejs server that sends text to Microsoft Oxford and return speech of the text. \nThe extension takes the returned audio file from the server and plays the speech.</p>\n<h2>Challenges we ran into</h2>\n<p>Data encoding related to audio formats. \nExtracting data from Facebook website without privileged access to their API.</p>\n<h2>Accomplishments that we are proud of</h2>\n<p>We built it!</p>\n<h2>What we learned</h2>\n<p>We learned several data encoding techniques while converting between audio formats. Extracting useful information from huge website.</p>\n<h2>What's next for MessageMumbler</h2>\n<p>MessageMumbler is working towards to let you speak out your messages instead of typing them down.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/chrome\">chrome</a></span></li><li><span class=\"cp-tag\">microsoft-oxford</span></li><li><span class=\"cp-tag\">facebook-messenger</span></li><li><span class=\"cp-tag\">microsoft</span></li><li><span class=\"cp-tag\">oxford</span></li></ul>\n</div>\n</div>", ["", ""]], ["T54 - JudgeTweety", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"T54 - JudgeTweety \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/127/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"T54 - JudgeTweety \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/202/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"T54 - JudgeTweety \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/203/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"T54 - JudgeTweety \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/204/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"T54 - JudgeTweety \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/211/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>I wanted to learn more about big data and machine learning tools available and saw microsoft azure offer web services with wide range of vm during this hackerthon. NLP text classification on popular social network twitter data set.</p>\n<h2>What it does</h2>\n<p>The main goal for me in this hackerthon is to learn a broad range of web services/tools. Having the opportunity to play with different services offer by different company helps me understand the strength of weakness of the products</p>\n<h2>How I built it</h2>\n<p>For this hack, i went on all microsoft stack with Azure.\nFirst: i setup a few vm to see how the security,mobility, and setup works. \nSecond: i loaded up the visual studio 2015 on the vm and local, as well as web express for my ide for this hackerthon\nThird: i selected a few webapp images from the gallery and try out different python frameworks(django, flask)\nFour: Begin dive into Azure ML and played around model training/testing/prediction with their drag and drop workbench. Visually appealing, but time consuming for each tweak since i am not familiar with the models\nFifth: Finally, i want to integrate the ML model into webapp to demo on how to make prediction from a training model</p>\n<h2>Challenges I ran into</h2>\n<p>lots of setup challenges, and security issues.(installations, ssh keys,api keys)\ni find visual studio a bit less flexible in managing class/file systems, and also big installations\nAzure ML defintely was very confusing, so many models/transformations combinations. Many prebuilt models comes with optimized results, but not much descriptions for beginners to learn or apply them.\nI do like the free public datasets, and visualizations at each steps to help guide the setups. </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>intergrated much of the webapp with azure ML. \nLearn a lot about visual studio setups, sync, and file hierarchy</p>\n<h2>What I learned</h2>\n<p>python framework(djanago,flask)\nvisual studio\nazure services</p>\n<h2>What's next for Microsoft Azure ML on Tweets</h2>\n<p>the model i use was reduced because the time it takes to run a prediction live would take too long for users.\noptimized rebuilt version was 7 minutes to test. my reduced model is at 10-15 seconds... so accuracy might not be at best</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/visual-studio\">visual-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/azure\">azure</a></span></li><li><span class=\"cp-tag\">ml</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://hackumassmicrosoft.azurewebsites.net/\" rel=\"nofollow\" target=\"_blank\" title=\"http://hackumassmicrosoft.azurewebsites.net/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>hackumassmicrosoft.azurewebsites.net</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Full-Music-Sync", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Full-Music-Sync \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/801/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Wanted to have a dance party at HackUmass but didn't have speakers. \nWe wanted to incorporate bluemix into this, but failed. The original idea was that bluemix would suggest three songs and users would vote on it. Thus, one main dJ and the other \"partygoers\" suggest the next song. </p>\n<h2>What it does</h2>\n<p>Uses songs on Soundcloud to play on multiple phones at once. Creates a more group listening experience rather than a single phone. Users can choose a song to play. </p>\n<h2>How I built it</h2>\n<p>We spent the majority of the time trying to code with bluemix. It was found that blumix failed when coding so it was hard to test. Thus we chose to change the app and just kept it simple with synchronizing music and choosing. </p>\n<h2>Challenges I ran into</h2>\n<p>Bluemix servers (US South servers) were down. Hard to create an app surrounding bluemix. Coming up with an idea. </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Trying out BlueMIx for the first time, then learning to code with pebbles.</p>\n<h2>What I learned</h2>\n<p>I learned that using IBM code is difficult and tiresome, but if you try and get it into it will eventually lead to a reward.</p>\n<h2>What's next for Full-music-sync or Joe DJ</h2>\n<p>Add the original features and improve on a faster synchronization (need to load song and wait ~5secs)\nMaybe include youtube videos and create playlists as well. Improve user experience and interface. </p>\n<p>team 62; HackUmass2015</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bluemix\">bluemix</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/pebble\">pebble</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/yuriprym/JoeDJ\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/yuriprym/JoeDJ\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/yuriprym/Joe-sDJ\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/yuriprym/Joe-sDJ\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["back-end developer, worked with pebble and bluemix", "Design", ""]], ["N-Body-Simulator", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>N-Body-Simulator</h1>\n<p>Simulates the movement of objects through space. No force other than the gravitational pull of the other bodies is taken into account\nwithin this model. The brute force method for implementing an N-body simulation has a runtime complexity of O(N^2), in order to reduce the\nruntime complexity this simulator makes use of the The Barnes-Hut Algorithm. The Barnes-Hut Algorithm, utilizes the divide and conquer\nmethodology of programming and effectively reduces the runtime complexity to O(NlogN).</p>\n<h2>Functionality</h2>\n<h3>Creating new bodies</h3>\n<p>To create a new body simply click the screen. More control over the creation of bodies is available to the users. To select the size of the\nnew body use the range input on the top left of the screen. To set the new body's velocity click and drag the mouse a bit!</p>\n<p>Practice makes perfect!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/mmcnally/N-Body-Simulator\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/mmcnally/N-Body-Simulator\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["We collaborated equally on every part of this project. ", ""]], ["Retrievr (Team 56)", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Team 56\nOne of our suite mates was worried about losing his possessions and never being able to find them again.</p>\n<h2>What it does</h2>\n<p>Retrievr allows people who find lost objects to enter in where the item was found, a short description, and which of the many lost and founds on campus will now have it.  People who lose items can then search through the entries by location and various descriptions.</p>\n<h2>How I built it</h2>\n<p>We created Retrievr during a marathon coding session at the 2015 Hack @ UMass</p>\n<h2>Challenges I ran into</h2>\n<p>Before we started this project, only one person on our team had had any experience with web programming.  There was a steep learning curve, but in the end, we triumphed.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We are proud that we managed to create a relatively finished product during the hackathon.</p>\n<h2>What I learned</h2>\n<p>Through creating Retrievr, I learned pretty much everything I know about web programming.</p>\n<h2>What's next for Retrievr</h2>\n<p>We plan to integrate Angular, improve code organization and clarity, custom regions for UMass, helpful guidelines, and many other features.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-maps\">google-maps</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/jgeryk/lost-found\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/jgeryk/lost-found\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Wobble", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/nbF8Hs8D2zw?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Wobble \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/310/522/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Wobble \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/310/529/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to get those wobbles. </p>\n<h2>What it does</h2>\n<p>Converts Myo's spatial and gestural data to midi output to go to GarageBand and other music editors.</p>\n<h2>How I built it</h2>\n<p>Worked with NicholasAStuart's public myo-java bindings and Java's midi library.</p>\n<h2>Challenges I ran into</h2>\n<p>.gitignore, midi, midi receivers, and ports. </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>That moment when we got the GarageBand to play that Heavy Wobble Bass.</p>\n<h2>What I learned</h2>\n<p>A little git, a lot of java. We have a particularly high tolerance for RedBull. </p>\n<h2>What's next for Wobble</h2>\n<p>More bass. </p>\n<h3>We are Team 43 here at HackUMass III</h3>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/myo\">myo</a></span></li><li><span class=\"cp-tag\">myo-java-bindings</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Nlaurin/Wobble2\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Nlaurin/Wobble2\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked with the java bindings, gesture control, front end, and some midi features.", "I worked using the Java midi library, I worked on the interface and I helped with sending tones from the Myo arm band to a midi receiver. ", "I worked on playing tones and sending them to a midi receiver based on input from the Myo Armband and I worked on the user interface.", "I worked on the configuration, gesture control, pitch mapping and control,  and design functionality. "]], ["TelegramPi", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to to use something useful for communication. We had a bunch of Raspberry Pis, LEDs, and wires, and we wanted to make the Pis communicate somehow.</p>\n<h2>What it does</h2>\n<p>We have two Raspberry Pis, wired together on one breadboard using GPIO pins. One Pi runs a Python script that takes an input String and converts it into Morse code, and then outputs the Morse code with a blinking LED light. The other Raspberry Pi is wired to a photoresistor that detects when the LED blinks on and off. It then converts the detected changes back into English.</p>\n<h2>How I built it</h2>\n<p>We wired up the Pis to a breadboard, installed Raspbian, and wrote the Python.</p>\n<h2>Challenges I ran into</h2>\n<p>The algorithm behind converting the detected LED blinks into Morse into English was especially tedious.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We wired two Pis to a breadboard and didn't blow up any LEDs!</p>\n<h2>What I learned</h2>\n<p>Python is a lot like Java.</p>\n<h2>What's next for TelegramPi</h2>\n<p>We go further into the history of the communication industry, creating the PiNy Express.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bash\">bash</a></span></li><li><span class=\"cp-tag\">gpio</span></li></ul>\n</div>\n</div>", ["", "", ""]], ["Leap Motion Retro Arcade (team 38)", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/a3RRjY2EgEk?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Leap Motion Retro Arcade (team 38) \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/310/592/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p><strong>Team 38</strong></p>\n<h2>Inspiration</h2>\n<p>Pong is an icon of computer gaming. By adapting it into the developing and exciting context of virtual reality, we can show some of the most exciting aspects of the technology in a simple, easy to pick up game.</p>\n<h2>What it does</h2>\n<p>Uses pygame to implement Pong and Air Hockey, utilizing the Python API for Leap Motion. Also uses Leap Motion combined with Oculus to create a \"Baby Simulator\", putting you into a familiar environment, from a different context - for example knocking blocks down with your hand. This further demonstrates the power of virtual reality when paired with more \"natural\" input methods.</p>\n<h2>How we built it</h2>\n<p>Built in Atom text editor, ran through the command line. Pygame does the drawing graphics and game physics.\nUnity game physics with Oculus and Leap Motion plugins.</p>\n<h2>Challenges I ran into</h2>\n<p>None of us has ever developed a game before. No experience drawing GUI and writing game physics. There were some issues conflicting Python libraries between native installed Mac OS X version and updated Homebrew version. Reliance on old Python 2.7 resources. Lack of familiarity with unity was challenging, but by setting demanding standards for ourselves, the experience was ultimately very rewarding.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Smooth movement of controls and a fun multiplayer experience. It's an attention grabbing project that is instantly visually relatable and can be used to draw more people to computer science. </p>\n<h2>What we learned</h2>\n<p>Valuable experience in Python and interfacing with third party APIs. Learned the basics of unity, especially in a VR context. Helped us to start thinking in terms of the oculus rift's and leapmotion's capabilities.</p>\n<h2>What's next for Leap Motion Retro Arcade</h2>\n<p>Tetris, better graphics, and using more of the available Leap Motion API features such as gestures and grip.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/leap-motion\">leap-motion</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/pygame\">pygame</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/patter4/Leap-Motion-Retro-Arcade.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/patter4/Leap-Motion-Retro-Arcade.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Helped during project brainstorming period, primary developer for the Baby Simulator unity prototype.  ", "Helped during brainstorming, designed or found all models for Baby Simulator unity prototype. Main researcher for Unity Engine, and leap motion. Debugger for Pong and Air Hockey.", ""]], ["Project TRI", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Project TRI \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/310/607/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>Team 21</p>\n<h2>Inspiration</h2>\n<p>The lack of gaming devices on the market targeted towards retro gamers.</p>\n<h2>What it does</h2>\n<p>It utilizes open source emulators to play video games up to the PS1-era on a portable platform with built in controls, battery, 3.5\" LCD display, etc. It also allows the user to play with other users on the network or over the internet. </p>\n<h2>How I built it</h2>\n<p>The enclosure and buttons were designed in SolidWorks and 3D printed, the buttons press switches under the enclosure that interface with the Raspberry Pi. The LCD screen is hooked up to the Pi with a composite cable. The software uses open source emulators to play retro games.</p>\n<h2>Challenges I ran into</h2>\n<p>The top half of the enclosure was printed incorrectly and had to be printed again (it takes 3.5 hours to print).</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We were able to get the Raspberry Pi to run most games made before the PS1 at full speed emulation. The project itself is fun to use as a standalone device, which was the goal of making from the beginning.</p>\n<h2>What I learned</h2>\n<p>We became much more competent in using the Raspberry Pi through programming the buttons and getting the emulators to work properly.</p>\n<h2>What's next for Project Tri</h2>\n<p>Polishing the final enclosure design and making the software more user friendly.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">raspberry-pi-2</span></li><li><span class=\"cp-tag\">3d-cad</span></li><li><span class=\"cp-tag\">custom-charging/power-supply-circuit</span></li><li><span class=\"cp-tag\">3.7v-2500mah-li-po-battery</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">raspbian-linux</span></li></ul>\n</div>\n</div>", ["", ""]], ["The Code Machine", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>TEAM NUMBER 44\n<strong>Katherine</strong> - When I was in middle school, my friends and I used to pass notes in school. And then we always used to use Caesar shifts and such because we thought we were \"so cool\". Knowing middle schoolers these days, they all have a fancy phone. This app is inspiration from my childhood, to help make the lives of modern middle school students a bit easier.\n<strong>Gargi</strong>- I've always had very overprotective parents, and they have gone through my phone before and grounded me for things they shouldn't have known about. If I had this app, I would have been able to avoid this torture. </p>\n<h2>What it does</h2>\n<p>It is a encryption and decryption app that takes in String inputs and mutates them and has the capabilities to change them back.</p>\n<h2>How I built it</h2>\n<p>We used the Android Studio to develop this app. We also tested many of the java based algorithms in eclipse.</p>\n<h2>Challenges I ran into</h2>\n<p>Neither of us have ever made an app before, and neither of us have any experience with XML, so this was a huge step for us. We got lost and stuck a lot, but in the end, we were able to push through and let our ideas shine.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We are proud of being able to solve algorithms that we would have had problems with in the past. We are also proud of our ability to work with a programming language we have never used or even seen before.</p>\n<h2>What I learned</h2>\n<p>We learned how to work under pressure and stay awake for unholy amounts of time. Not only did we learn how to code in a different language, but we learned how to teach ourselves to code in that language</p>\n<h2>What's next for The Code Machine</h2>\n<p>Hopefully, we will be able to develop this app further to be able to encrypt in different and more complex ways, so that this app can be utilized in more sophisticated styles allowing the app to be more widely used for more applications in the direction of security.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xml\">xml</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/katmayo7/HackUMassIII\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/katmayo7/HackUMassIII\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["animal-recognition", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"animal-recognition \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/310/441/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"animal-recognition \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/310/442/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"animal-recognition \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/310/445/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"animal-recognition \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/310/446/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"animal-recognition \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/310/447/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"animal-recognition \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/621/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"animal-recognition \u2013 screenshot 7\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/311/622/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>TEAM 29</p>\n<p>This is the frame work for a future app we want to build</p>\n<p>Have you ever had the issue where you see an animal and you want to know what it is? Or if you're at home laying in your bed you see a spider and you want to know if it's poisonous without googling the description.</p>\n<p>Here's where our application comes in.\nUsing the IBM Watson API we were able to create a web app that could recognize animals and identify them with labels. We added a (non-functioning) wikipedia button because it is going to be part of a future project, we wanted to link to the wikipedia article for the identified animal. Think of a pokedex for actual animals. Down to the integration of animal calls available when the animal is identified, which would have to be hard coded.\nThe mobile application would involve a data base.and you would take a picture of an animal and you would have the taxonomy of the animal right in front of you on the spot. \nIf the information doesn't exist in the data base, allow the user to add it.  </p>\n<p>We started out with a language we were somewhat familiar with, which was python. Watson has a python sdk but for best optimization and use of of the Visual-Recognition, java script would be best. The API is built on nodeJS and uses express.js as well to interact with the html docs. </p>\n<p>*images can be dragged and dropped as well as pasted as image-urls. Or select from a preset of images. \n**we had planned to integrate machine learning to have the application learn to recognize certain characteristics of animals. Right now it essentially checks the tags of the image and determines an animal based on that.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag\">nodemon</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/tonytrann/animal-recognition\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/tonytrann/animal-recognition\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["We utilized the IBM Watson API to create a web application. My contribution to this project was the back end work in terms of coding. I had to learn both nodeJS and javascript to take care of the backend. I also did all the hosting work in terms of pushing to the server and making changes. I did some of the front end as well in terms of the java script, Cris did the html, he grabbed the tags and coded the preset images. He also did the data base for our labels with the help of a mentor.", ""]], ["BounceTap", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>BounceTap</h1>\n<p>Tap the circle to score points! Miss, and you lose!\nTeam 49</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/spritebuilder\">spritebuilder</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xcode\">xcode</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sketch\">sketch</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/airrick213/BounceTap\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/airrick213/BounceTap\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I built the entirety of the app myself."]], ["TaskIT", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/V5QOZqrWai8?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"TaskIT \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/310/318/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"TaskIT \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/310/351/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"TaskIT \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/310/352/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"TaskIT \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/310/355/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>I was inspired to create this app in order to gain knowledge in Swift and iOS app development. My goal is to obtain a summer internship in an Apple based company that will allow me to further my iOS app development skills. </p>\n<h2>What it does</h2>\n<p>This app is a task list app that allows the user to enter task, descriptions and dates. Then the tasks are ordered by date. If the tasks are completed the user can swipe across them and add them to the completed list. If the user no longer wants this task on their completed list, they can swipe across and delete it. </p>\n<h2>How I built it</h2>\n<p>I built this application using Swift on Xcode for iOS and Github with terminal commands. While building this app, I created four view controllers that control what the user sees and how the user can interact with the app. The first view controller displays the screen the user sees upon first opening the app, which is the To Do and Completed Lists. The second view controller is the view that allows a user to Edit an already existing task, which appears when clicking on a task. The third view controller allows the user to Add a New Task to the list, which is done by clicking the plus sign. The final view controller is a basic description of the project and then the version number, which is displayed by clicking Details.  </p>\n<h2>Challenges I ran into</h2>\n<p>Challenges I ran into included but are not limited to:\n(1) I am new to Swift and iOS programming so I watched a lot of tutorials and read up on the topic. \n(2) I ran into trouble trying to incorporate Core Data into my program, which in turn caused over an hour of back tracking with version control to recover my app back to its last operable version. \n(3) Version control most likely took that long to recover because I am also new to that concept too. I had little prior experience with Git and learned to better use it with Xcode while hacking. </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>This app would be the accomplishment I am proud of as it is  my first successful, useful iOS that I have created and was able to run. I am also proud to get so much accomplished at my first hackathon! </p>\n<h2>What I learned</h2>\n<p>What I learned with this experience is that a lot can be accomplished in a short amount of time if you put your head to it and have strong drive and determination. If I wanted to, I could have stopped after my team split-up Saturday morning, but I kept moving, determined to create something, even if by myself, by Sunday. I also learned how to post and edit a video for Youtube, which was a first for me. </p>\n<h2>What's next for TaskIT</h2>\n<p>The next thing I want to do for TaskIT is incorporate a settings tab and an alarm. The settings I would like to include login information that allows the user to sync data from one device to another. The next thing I would like to see happen with this app is to add an alarm or reminder to priority tasks in the list that are displayed in a different color at the top of the list to show importance. Due to my coding skills and familiarity with iOS Swift coding, I currently do not have the skills to do this but will continue to develop my skills to obtain these results with this app and future apps. Also, I would like to develop this app for more than just one device. <strong>This app is currently designed only for an iPhone 5S.</strong> </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ios\">ios</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/github\">github</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xcode\">xcode</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/terminal\">terminal</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/xxthexxscenexx/TaskApp\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/xxthexxscenexx/TaskApp\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["hacs", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"hacs \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/310/518/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"hacs \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/310/519/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"hacs \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/310/520/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"hacs \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/310/521/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"hacs \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/310/526/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"hacs \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/310/527/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"hacs \u2013 screenshot 7\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/310/528/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>HACS: Halloween Application for Candy Seekers</h1>\n<h2>Authors:</h2>\n<ul>\n<li><a href=\"https://github.com/chickenbellyfinn\" rel=\"nofollow\">Akshay Thejaswi</a></li>\n<li><a href=\"https://github.com/dbeckwith\" rel=\"nofollow\">Daniel Beckwith</a></li>\n<li><a href=\"https://github.com/SIZMW\" rel=\"nofollow\">Aditya Nivarthi</a></li>\n<li><a href=\"https://github.com/vivekkmurthy\" rel=\"nofollow\">Vivek Krishnamurthy</a></li>\n</ul>\n<h2>Team Number:</h2>\n<ul>\n<li>47</li>\n</ul>\n<h2>Purpose:</h2>\n<ul>\n<li>The purpose of this app and server is to crowdsource data from children on Halloween about different houses and locations giving out candy. The information taken from the children provide locations and the type of candy being given out at those locations.</li>\n<li>Users are able to send information to the server about the candy they got at each location, in order to help build the global database of candy sources.</li>\n<li>Users can use the web interface to view all the locations giving out candy and the types of candy given out across all the locations.</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/fitbit\">fitbit</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bing-maps\">bing-maps</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bing-maps-spatial-data-services\">bing-maps-spatial-data-services</a></span></li><li><span class=\"cp-tag\">harp</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/dbeckwith/hacs\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/dbeckwith/hacs\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on using MongoDB to manage our data for our server and clients.", "I wrote the android app (which connected to the Fitbit API) and worked on displaying the Bing map in the Web UI. ", "I made a lot of the backend API server and all of the Web UI.", "I implemented the Bing services in our app. "]], ["Hacky Duck", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Hacky Duck \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/310/576/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Hacky Duck \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/310/577/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Having been raised on exclusively high-level languages, we decided to forsake our privileged automatic data typing and functional schema and choose a more elegant tool. Drawing on the power and allure of the consoles and computers of old, our team endeavored to create an awesome game running on the old but trusted 6502 assembly language. We choose to write Hacky Duck in 6502 Assembly as a challenge.</p>\n<h2>What it does</h2>\n<p>Hacky Duck is a game where you play as a brave duck trying to avoid treacherous green pillars in low-level assembly.</p>\n<h2>How I built it</h2>\n<h2>Challenges I ran into</h2>\n<p>Assembly, with its manual memorty management thoroughly tests your knowledge of computer science fundamentals, much moreso than a more conventional language.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We taught ourselves 6502 Assembly within 24 hours. </p>\n<h2>What I learned</h2>\n<p>Assembly is hard\nAssembly is tough\n<strong>Assembly is the best</strong></p>\n<h2>What's next for Hacky Duck</h2>\n<p>More levels, compiled versions for classic game consoles</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">6502-assembly</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Bogidon/HackyDuck\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Bogidon/HackyDuck\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I made the green pipe appear at a randomly generated height. Learned A LOT about assembly.", ""]], ["Classify", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Coming Soon</p>\n<h2>What it does</h2>\n<h2>How I built it</h2>\n<h2>Challenges I ran into</h2>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<h2>What's next for Classify</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/r\">r</a></span></li><li><span class=\"cp-tag\">shiny</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/azure\">azure</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/parthshah124/Classify\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/parthshah124/Classify\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]]]