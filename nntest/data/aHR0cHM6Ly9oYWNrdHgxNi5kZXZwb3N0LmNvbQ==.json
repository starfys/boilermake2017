[["Ryuu", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Ryuu \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/432/247/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>People are playing Overwatch, either competitively or just for fun. We wanted to make it better. Players will often go into game using their keyboard and mouse, but why do that when you have RYUU. We provide a hands-on opportunity to slay enemies and have fun.</p>\n<h2>What it does</h2>\n<p>We provide a completely accessible way to play overwatch with a real bow and arrow. Our entire project is fully compatible with the Hanzo player in overwatch. We can shoot arrows, move around, move the camera, and use our skills with RYUU.</p>\n<h2>How I built it</h2>\n<p>The entire project has 2 parts: the hardware that allows us to send signals through the computer and the program that allows us to handle those signals in a seamless manner so that we can make the game feel smooth and personal through our bow.</p>\n<h2>Challenges I ran into</h2>\n<p>It was horrible to map all of the key bindings to our hardware. We really had trouble with using math to set movement by ourselves and write to a specific position. It's hard to use Robot.js</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We used Robot.js effectively....</p>\n<h2>What I learned</h2>\n<p>Don't use robot.js</p>\n<h2>What's next for Ryuu</h2>\n<p>We're taking this to Twitch and hopefully impact the gaming company to think outside the box and have a good hands-on experience in gameplay.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/hardware\">hardware</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag\">arduino-uno</span></li></ul>\n</div>\n</div>", ["Wrote all the memes", "Built all the hardware", "Wrote all the software", "", ""]], ["November Sky", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"November Sky \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/432/221/datas/gallery.jpg\"/>\n<p>\n<i>gameplay</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>November Sky</h1>\n<p><a href=\"http://nondefault.net/november\" rel=\"nofollow\">http://nondefault.net/november</a></p>\n<h2>Running locally</h2>\n<ol>\n<li>Start the testing server: <code>node ts.js 8000</code></li>\n<li>Navigate to the website: <a href=\"http://localhost:8000/\" rel=\"nofollow\">http://localhost:8000/</a></li>\n</ol>\n<h2>Playing</h2>\n<ol>\n<li>Click build\n\n<ul>\n<li>Click colored pieces on left to choose part</li>\n<li>Click in grid to add parts to rocket</li>\n<li>Yellow part is engine</li>\n</ul></li>\n<li>Click launch to launch rocket</li>\n<li>Click program to add code\n\n<ul>\n<li>Write javascript!</li>\n<li>Click submit when done to start flying.</li>\n</ul></li>\n<li>Try to go as high as possible!</li>\n</ol>\n<h2>Goal</h2>\n<ul>\n<li>Teach basic programming</li>\n<li>Useful [simple] algorithms</li>\n<li>Open-ended</li>\n<li>Make fun game</li>\n</ul>\n<h2>Objectives</h2>\n<ul>\n<li>Go to space</li>\n<li>Build rocket from random parts</li>\n<li>Program rocket</li>\n</ul>\n<h2>Mechanics</h2>\n<ul>\n<li>Collect parts</li>\n<li>Build parts on grid</li>\n<li>Program controller using API for each part</li>\n<li>Parts\n\n<ul>\n<li>Fuel tank</li>\n<li>Thruster</li>\n<li>Controller</li>\n</ul></li>\n</ul>\n<h2>Technology</h2>\n<p>MatterJS with Pixi for rendering</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag\">pixi</span></li><li><span class=\"cp-tag\">matterjs</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/apathetics/HackTX16-dankmemes\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/apathetics/HackTX16-dankmemes\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"http://nondefault.net/november\" rel=\"nofollow\" target=\"_blank\" title=\"http://nondefault.net/november\">\n<i class=\"ss-icon ss-link\"></i>\n<span>nondefault.net</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the grid system backend for the inventory system, the builder system, and some of the design. Also one of the first times I've worked extensively in JavaScript, especially with the Pixi and MatterJS libraries. ", "I worked on the game mechanics, physics engine, and inheritance structure of our game. It was my first time working in JavaScript, and I learned a lot!", "I developed the internal JavaScript parser and the text editor!", "I built the core game engine, the rendering system for both physics objects and UI elements (using pixi.js), and lead the overall software design process.  Keeping the code modular and choosing which of our goals to pursue was a challenge.", ""]], ["Mosaic", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Mosaic \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/432/066/datas/gallery.jpg\"/>\n<p>\n<i>Mosaic logo</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>One of the hardest parts of learning a new language is memorizing the thousands of items and objects that exist in your life. Unlike grammar rules, there typically aren't general rules for translating nouns and even fluent speakers often have difficulty remembering the exacat name for a rarely seen object. Our project hopes to help people communicate through the objects in their lives, naturally learning the translations for \"table\"  or \"laptop\" while the user is actually in the same room and even helping monolingual people easily build a basic foundation upon which to communicate with their peers in completely new languages.</p>\n<h2>What it does</h2>\n<p>Using your iphone's camera, we identify the objects that your are scanning in real time, allow the user to choose a custom language to translate the item's name into, and both speak and display the translated description of the object. For example our application can detect \"A laptop sitting on a table\" and in mere seconds tell the user that they can describe it as \"Ein Laptop auf dem Tisch sitzen.\"</p>\n<h2>How I built it</h2>\n<p>We built the application in swift for ios 10, utilized microsoft's image recognition, google's translation services, and set up a java spring-boot server hosted on microsoft's azure in a tomcat virtual machine for future expansion.</p>\n<h2>Challenges I ran into</h2>\n<p>Several of the sdk's seem to be still underdevelopment and did not have all of the features that we required, so we had to juggle several related api calls to get the necessary information and experiment with local algorithms to minimize the utilization of limited api keys.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>It works in real time and extends instant translations to not only text but actual objects too.</p>\n<h2>What I learned</h2>\n<p>How to use google's image recognition and translate apis, configuration and deployments to azure vm's , and some very interesting new words.</p>\n<h2>What's next for Mosaic</h2>\n<p>We want to finish development and deploy the application so that end users can begin to use it for language training and as a communication aid. As far as future features, we would like to add in internationalized utilities that aid in common problems when traveling. One such application would be detecting the name for the chinese yen and computing the exchange rate between yen and dollars based upon the user's source language and the predominant currency utilized by people in that language group.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag\">springboot</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/dingwilson/mosaic\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/dingwilson/mosaic\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/hudsonmd/grub-hub\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/hudsonmd/grub-hub\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the iOS Swift code to connect to the Microsoft Computer Vision API, text-to-speech, translation through Google Translate, and Java server back-end.", "", "", ""]], ["Buddy", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>On average, 1 person commits suicide every 16.2 minutes. 90% of adolescents' suicides are related to mental health problems.</p>\n<p>With mental health issues on the rise due to things like online bullying and harassment, we wanted to create a companion that allows friends and family to discreetly check up on their network and take action.</p>\n<h2>What it does</h2>\n<p>Buddy is an Alexa skill that pulls and analyzes the user's friend's Facebook posts, using statistical sentiment analysis. When prompted, Echo Buddy relays information regarding the friend's current, past, and average sentiment and risk for depression.</p>\n<h2>How we built it</h2>\n<p>Using Python and the Facebook graph API, we data-mined individuals' wall posts to evaluate their mood and likelihood for depression. We used AWS Lambda to create the Alexa skill and an Amazon Echo to test it.</p>\n<h2>Challenges we ran into</h2>\n<p>Since we are all business majors, we had difficulty with the technical aspects of our project. Some of the issues included: pagination of Facebook's graph API, integration of SDKs, code efficiency, and linking Alexa to DynamoDB.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We made a project! Our code runs! </p>\n<p>On a more serious note, we're happy that our project has a humanitarian impact and social good aspect. As college students, we've seen friends suffer from mental health issues and we wanted to create something that can help.</p>\n<h2>What we learned</h2>\n<p>We learned how to use and integrate APIs, more specifically, how to use Facebook's graph API. We also learned how to program an Alexa skill through AWS Lambda, how pair-programming works, and how to ask the right questions.</p>\n<h2>What's next for Echo Buddy</h2>\n<p>Using machine learning to better predict sentiment and enable Alexa to take action when needed.\nBeing able to view posts to view posts on friends' walls.\nCreating a web application interface to visualize sentiment trends.\nAllowing Alexa to collect speech data and tones. Combine this data with analysis of Facebook posts to provide a more holistic prediction of likelihood of depression.\n<strong>Expanding Buddy to recognize and tackle other mental health issues.</strong></p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/facebook-graph\">facebook-graph</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-alexa\">amazon-alexa</a></span></li></ul>\n</div>\n</div>", ["", "", "", ""]], ["Hotspotter", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<h2>What it does</h2>\n<p>We help you locate the physical source of a Wi-Fi broadcast, by returning the signal strength of that broadcast in real-time.</p>\n<h2>How I built it</h2>\n<h2>Challenges I ran into</h2>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<h2>What's next for Hotspotter</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/particle\">particle</a></span></li><li><span class=\"cp-tag\">photon</span></li><li><span class=\"cp-tag\">wiring</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li><li><span class=\"cp-tag\">porter</span></li></ul>\n</div>\n</div>", ["", ""]], ["Election Deathmatch (USA Edition)", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Election Deathmatch (USA Edition) \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/432/131/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Celebrity Deathmatch, and <a href=\"https://www.youtube.com/watch?v=h05POLIQ1rs\" rel=\"nofollow\">this video</a>.</p>\n<h2>What it does</h2>\n<p>It's Hillary Clinton and Donald Trump, floating in a void. FOREVER. (We also have a web crawler that creates a livestream of tweets and pushes it to the console while you're on the page. We originally wanted it to display the tweets on screen)</p>\n<h2>How we built it</h2>\n<p>We used A-Frame VR for the front end, with AWS hosting. We also used NodeJS and Socket.IO to interact with the twitter streaming API to stream tweets pointed at Donald Trump &amp; Hillary Clinton.</p>\n<h2>Challenges we ran into</h2>\n<ul>\n<li>none of our objects would show up</li>\n<li>our objects behaved in unexpected ways</li>\n<li>a-frame's documentation is horrible</li>\n<li>couldn't get tweets to show up on HTML canvas, so we console.log'd them.</li>\n</ul>\n<h2>Accomplishments that we're proud of</h2>\n<ul>\n<li>actually getting it rendered</li>\n<li>learning how to do a simple VR app</li>\n<li>getting AWS set up!!! omg</li>\n</ul>\n<h2>What we learned</h2>\n<ul>\n<li>experimenting can be fun ;;) </li>\n<li>also, you need a windows machine to develop for oculus</li>\n<li>also, running everything in browser is SLOW!!! get something to speed up load times</li>\n</ul>\n<h2>What's next for election deathmatch 2k16</h2>\n<p>november 8th, 2016.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">a-frame</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://ec2-35-161-15-226.us-west-2.compute.amazonaws.com:3000/\" rel=\"nofollow\" target=\"_blank\" title=\"http://ec2-35-161-15-226.us-west-2.compute.amazonaws.com:3000/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>ec2-35-161-15-226.us-west-2.compute.amazonaws.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Codeometer", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Codeometer \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/432/099/datas/gallery.jpg\"/>\n<p>\n<i>Codeometer home page displaying a user and team's stats</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Codeometer \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/432/098/datas/gallery.jpg\"/>\n<p>\n<i>VS Code extension displaying how many lines of code have been logged recently</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Codeometer \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/432/100/datas/gallery.jpg\"/>\n<p>\n<i>Twitter account that tweets @ you when you don't code enough!</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>As programmers we know that many metrics are important when evaluating how much work you are getting done, but one of the most important is that you are actually writing some code.</p>\n<h2>What it does</h2>\n<p>Codeometer tracks the number of lines you have added and deleted since the last check and submits it to the global leaderboard, as well as your team's code stats. We time-based graphs to display how much work has been done in set time periods. These time periods can be changed but are usually 5-10 min.</p>\n<h2>How I built it</h2>\n<p>We used Node.js to build the Visual Studio Code IDE extension and the website. The extension makes HTTP requests to the website which are logged to the DB.</p>\n<h2>Challenges I ran into</h2>\n<p>Finding the number of lines changed since the last update was quite challenging as many things can happen in 5-10 minutes.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We created a working VS Code extension as well as a website that looks pretty decent in 24 hours!</p>\n<h2>What I learned</h2>\n<p>Make sure your testing data isn't off before you spend an hour debugging your code.</p>\n<h2>What's next for Codeometer</h2>\n<p>World domination.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag\">visual-studio-code</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/azure\">azure</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twitter\">twitter</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://codeometer.com/\" rel=\"nofollow\" target=\"_blank\" title=\"http://codeometer.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>codeometer.com</span>\n</a></li>\n<li><a href=\"https://github.com/patrickedelen/codeometer\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/patrickedelen/codeometer\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I did most of the dev work", "", ""]], ["Uber Cheap", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Uber Cheap \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/864/datas/gallery.jpg\"/>\n<p>\n<i>Uber price change with location change.</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>I ended up spending a lot of money on Uber and noticed that uber gives different fare estimates for very small difference in the point of booking. So, I came up with a way to help me save money on uber.</p>\n<h2>What it does</h2>\n<p>The app gets you the cheapest possible uber fare estimate in a place. </p>\n<p>You cant request a ride through the platform to test it since I haven't paid for the Twilio API.</p>\n<h2>How I built it</h2>\n<p>I used RapidAPI to connect with UberAPI. I built the front end in AngularJS which communicates with the REST service written in Sails JS. The app is deployed in Carina docker containers by Rackspace. Also, wrote an Alexa custom skill to ask Alexa to request an Uber through the app rather than the actual Uber app. Alexa communicates with the AWS Lambda function which makes a call to my service. Also used Google GeoCoding API through RapidAPI to get the Lat Long values. </p>\n<h2>Challenges I ran into</h2>\n<p>Uber API was struggle to work with. Lot of issues with it. And they rate limited me. I had to come up with work-arounds to circumvent that.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Was able to deploy everything to Docker containers. I also worked on a chat bot to enable booking an UberCheap through chat messaging through my service. Don't think I will be able to finish that before deadline. But it was a good learning experience. </p>\n<h2>What I learned</h2>\n<p>How to use AWS Lambda functions with Alexa. How to deploy containers in Carina. How to write a chatbot.\nAPIs used: Google GeoCodingAPI, UberAPI, TwilioAPI. All APIs accessed through RapidAPI.</p>\n<h2>What's next for Uber Cheap</h2>\n<p>Write a blog post about it so other developers and friends can benefit from this. Probably write  a better wrapper and documentation around the Uber API.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag\">aws-lambda</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/alexa\">alexa</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-alexa\">amazon-alexa</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag\">sailsjs</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/rapidapi\">rapidapi</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/uber\">uber</a></span></li><li><span class=\"cp-tag\">twilioapi</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://ubercheap.net\" rel=\"nofollow\" target=\"_blank\" title=\"http://ubercheap.net\">\n<i class=\"ss-icon ss-link\"></i>\n<span>ubercheap.net</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I built the entire thing! Solo project."]], ["PayWithText", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"PayWithText \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/432/194/datas/gallery.jpg\"/>\n<p>\n<i>Sending Money</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"PayWithText \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/432/195/datas/gallery.jpg\"/>\n<p>\n<i>Profile Edit</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"PayWithText \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/432/196/datas/gallery.jpg\"/>\n<p>\n<i>Signup, Commands</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"PayWithText \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/432/197/datas/gallery.jpg\"/>\n<p>\n<i>Requesting Money</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"PayWithText \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/432/198/datas/gallery.jpg\"/>\n<p>\n<i>Receiving Money</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"PayWithText \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/432/199/datas/gallery.jpg\"/>\n<p>\n<i>Deny Request</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>How to use</h2>\n<p>Text 512.666.3017!</p>\n<h2>Inspiration</h2>\n<p>PayWithText is a simple way to make payments to others using only SMS. Only 37% of people in emerging economies have smartphones(Pew Research Center). By enabling peer-to-peer commerce over SMS, we hope to help increase trade in emerging economies.</p>\n<p>PayWithText doesn't require any internet - only a cell signal. It was designed with those who can't afford internet-enabled phones in mind by Ian Mobbs and Jacob Vanderlinden for HackTX 2016.</p>\n<h2>What it does</h2>\n<p>This application is a proof of concept. Every user is given a mock account using CapitalOne's Reimagine Banking API, \"Nessie\", and allocated a random amount of money between $1 and $10,000. It then allows you to pay, request, and receive money from anyone with a cell phone number. By eliminating the need to carry around physical currency, we can boost the economy and bring new technologies to places where digital currency isn't the norm, but carrying a cell phone is.</p>\n<h2>How we built it</h2>\n<p>PayWithText was built using Django, a set of Python web frameworks. We store our information using PostgresSQL and host our application on Heroku. Communication is facilitated by Twilio, and payment processing is done by the Capital One API.</p>\n<h2>Challenges we ran into</h2>\n<p>We originally attempted to build the application using Flask and hosting on AWS Elastic Beanstalk. Elastic Beanstalk was being finicky, so we moved over to Amazon EC2 instance. From there, we found that deploying and SQL statements were a hassle on the EC2 instance, so we switched to Django for it's ORM. We then switched to Heroku so we could focus less on deploying properly and more on development.</p>\n<p>On a slightly less flexible side, we found out <em>very</em> late in our development cycle that Twilio can't set Header Cookies when using their RESTful API - only when a TwiML page is accessed. We got around this by creating an \"Outstanding Requests\" table in our database, and querying it every time a payment request was made and responded to.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Creating a service to facilitate positive change in the parts of the world that need it most.\nSwitching frameworks and hosts halfway into the project and still pulling it off!</p>\n<h2>What we learned</h2>\n<p>A little Flask, AWS EB, and AWS EC2. A lot of Django, Heroku, and Twilio.</p>\n<h2>What's next for PayWithText</h2>\n<p>Connect the service to actual bank accounts as opposed to just the Capital One API!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/django\">django</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/heroku\">heroku</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/postgresql\">postgresql</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://paywithtext.com/\" rel=\"nofollow\" target=\"_blank\" title=\"http://paywithtext.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>paywithtext.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Lead Developer and Infrastructure Planner", ""]], ["Character Relationship Analysis", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>We used various libraries in python to visualize the relationships between characters and detect characters and their importance. We parsed through the given input file to detect characters, tallying their total appearances and mapping their interactions with other characters nearby in the text (within a 15 word radius).</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/ChimdinduDenalexOrakwue/Character-Relationship-Analysis\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ChimdinduDenalexOrakwue/Character-Relationship-Analysis\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Clickbait Detector", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>What it does</h2>\n<p>It's a web application (backed by Azure) that tells you how much a title is clickbait, giving it a score from 0 to 100 (and sometimes higher!). Titles from Buzzfeed receive higher clickbait scores, and titles from actual news sites (CNN, PBS, etc.) will receive low clickbait scores. <strong>Check out the <a href=\"https://www.ismyinternetworking.com/clickbait/index.html\" rel=\"nofollow\">live demo here</a>.</strong></p>\n<h2>How I built it</h2>\n<p>I first collected hundreds of sample titles from Buzzfeed (considered clickbait) and other news sites (CNN, PBS, ABC, Fox, etc, not considered clickbait). Then, I came up with and generated values for a variety of heuristics, such as \"does it begin with a number?\", \"does it include a word in ALLCAPS?\", \"how many words are in the title?\" for each title. </p>\n<p>I then plugged the data into Microsoft Azure's Machine Learning platform and ran a regression on predicting clickbait-ness based on the heuristics. With some trial and error, I found a Boosted Decision Tree to be the best regression type for predicting clickbait, giving a mean error of ~23% in predicting the training data.</p>\n<p>The trained model was then deployed to Azure's web application platform, which generated an API for querying the model. I wrote a PHP middleman for abstracting away API access (and secret keys), and then a HTML/JavaScript frontend for making requests to the PHP script. Try the live demo with your own titles and try out the examples here:</p>\n<p><a href=\"https://www.ismyinternetworking.com/clickbait/index.html\" rel=\"nofollow\">https://www.ismyinternetworking.com/clickbait/index.html</a></p>\n<h2>Challenges I ran into</h2>\n<p>Gathering article titles was difficult because few news sites have official APIs for pulling down their news article titles. Some titles were simply copied and pasted one by one. I was able to strip elements from some webpages so I could copy lists of titles at a time, which made data collection much faster. My training data included almost 1000 titles in total, and is available on GitHub.</p>\n<p>Coming up with effective heuristics also took some work. I used some online word analysis tools to find the most commonly used words and make that a heuristic. Some clickbait titles could \"look\" like legitimate news. Having many heuristics enabled Azure to build an effective decision tree that could handle the tougher cases.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>It actually works! Most titles ripped right from Buzzfeed will score highly in clickbait scores, while other news pieces from other news sites will score low.</p>\n<h2>What I learned</h2>\n<p>How to effectively train a prediction model with Azure and tie it to a web application service. </p>\n<h2>What's next for Clickbait Detector</h2>\n<p>The dream is to build an API and browser extensions that automatically block out clickbait titles while browsing the web.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/azure\">azure</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/machine-learning\">machine-learning</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://www.ismyinternetworking.com/clickbait/index.html\" rel=\"nofollow\" target=\"_blank\" title=\"https://www.ismyinternetworking.com/clickbait/index.html\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.ismyinternetworking.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["spotAspot", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"spotAspot \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/432/410/datas/gallery.jpg\"/>\n<p>\n<i>logo</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>SpotASpot</h1>\n<p>Frustrated with current parking procedures, we decided parking lots could be smarter. So we originally wanted to make an app and/or webapp to color where cars are and aren't to help a driver find a spot. However, as we were working, we realized that humans can see a picture just fine and that this technology would work much better for autonomous vehicles that cannot easily recognize objects. </p>\n<p>So, we used OpenCV to write a python script that takes an image of a parking lot and tells which spots are empty and which are not. This gives valuable information to all parties. </p>\n<p>The autonomous vehicle gets: </p>\n<ul>\n<li>Current data on the closest parking spot (which means it will not be driving around until it finds one) </li>\n<li>To the spot quicker (saving fuel [whether electric, gas, etc.])</li>\n</ul>\n<p>The business owner gets: </p>\n<ul>\n<li>Data regarding how full a lot section is</li>\n<li>Customers spending less time in the lot and more time in the store </li>\n</ul>\n<p>The best part: </p>\n<ul>\n<li>It can potentially use existing CCTV/security cameras already installed in the lot for the data feed</li>\n<li>Cost is very little considering this can run on a RaspberryPi0</li>\n</ul>\n<p>The future: </p>\n<ul>\n<li>Once autonomous vehicles are more popular, this will encourage parking lots to be smarter. This means a car may be able to get data from multiple lots and pick the best one to park in based on spot availability and factor in parking lot prices. </li>\n<li>Less movement in a parking lot means less chances for accidents (Hack-cidents?) </li>\n<li>Humans getting where they need to be quicker </li>\n</ul>\n<h2>License</h2>\n<p>MIT License</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/opencv\">opencv</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/umer936/spotAspot\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/umer936/spotAspot\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"http://spotaspot.net\" rel=\"nofollow\" target=\"_blank\" title=\"http://spotaspot.net\">\n<i class=\"ss-icon ss-link\"></i>\n<span>spotaspot.net</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Helped with backend and development of site. ", "", ""]], ["Context Sensitive Advertisement", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Context Sensitive Advertisement \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/432/227/datas/gallery.jpg\"/>\n<p>\n<i>Starting Screen</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Context Sensitive Advertisement \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/432/226/datas/gallery.jpg\"/>\n<p>\n<i>User Tracking</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Context Sensitive Advertisement \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/432/220/datas/gallery.jpg\"/>\n<p>\n<i>Ad Playing</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Out-Of-Home Advertisement is a very big market which has stayed relatively untouched by technology. We want to create useful outdoor ads that display at the right time and at the right location to the right person !!</p>\n<h2>What it does</h2>\n<p>We created a context sensitive advertisement board based on the cognitive functions like visual recognition that understands the context as well as the users in a specific scenario. Therefore, offline ads especially the pricy ones at the airport, malls, etc. can be easily targeted just like its online competitors.</p>\n<h2>How we built it</h2>\n<p>With the cognitive functionalities of Microsoft Vision API at its core, we sense the surrounding and user in a particular scenario. We use Kinect to get the input key frames so that we can get the depth as well as extend our hack to interactions with our system. Apart from this, we created a web app wherein the advertisers can buy ads targeting specific users segmented by gender, age, etc. to better spend their marketing dollars. MongoDb is at the core of our product matching the ads with the users. Overall, the application is written in nodeJS and hosted in Azure!  </p>\n<h2>Challenges we ran into</h2>\n<p>Identifying the key frames from a video stream to perform our image analysis was a big challenge.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We created a working hack at the end of 24 hours !!</p>\n<h2>What we learned</h2>\n<p>We have to be careful about hardware hacks as they are not as reliable as the software ones.</p>\n<h2>What's next for Context Sensitive Advertisement</h2>\n<p>We really want to extend this hack to a product wherein advertisers can easily target outdoor advertisements as easy as buying ads from Google, Facebook, etc. with the same targeting capabilities as them !!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">microsoft-vision-api</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/kinect\">kinect</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/azure\">azure</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/rapidapi\">rapidapi</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li></ul>\n</div>\n</div>", ["I worked on the below,\n1. Setting up the Kinect in Windows 10\n2. Built a application that interacts with Kinect, analyse the data from Kinect and detects the human body.\n3. Developed a module which takes a snapshot of the user and send it to our back-end server for background image analysis using Microsoft cognitive services.  ", ""]], ["Ah-ChooseYou", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Ah-ChooseYou \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/432/028/datas/gallery.jpg\"/>\n<p>\n<i>Log in with Facebook</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Ah-ChooseYou \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/432/032/datas/gallery.jpg\"/>\n<p>\n<i>Tell us when you sneeze</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Ah-ChooseYou \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/432/030/datas/gallery.jpg\"/>\n<p>\n<i>You sneezed!</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Ah-ChooseYou \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/432/029/datas/gallery.jpg\"/>\n<p>\n<i>You can always sneeze again</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Ah-ChooseYou \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/432/031/datas/gallery.jpg\"/>\n<p>\n<i>We found you a match!</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>Ah-Choose You</h1>\n<p>Mobile app that matches you with someone that sneezed at the same time as you.\nBuilt for Android using a NodeJS and MongoDB backend deployed on Heroku.\nFront end authentication done using Facebook Login.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/facebook-login-api\">facebook-login-api</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/facebook\">facebook</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/heroku\">heroku</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Saadnajmi/Ah-ChooseYou\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Saadnajmi/Ah-ChooseYou\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://ah-chooseyou.herokuapp.com\" rel=\"nofollow\" target=\"_blank\" title=\"https://ah-chooseyou.herokuapp.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>ah-chooseyou.herokuapp.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the Android front-end, which included the UI, Facebook Authentication, and the HTTP Client to make REST Calls", "I came up with the idea, set up CircleCI, fixed bugs, and added profile picture displays.", "I worked on the backend with NodeJS and MongoDB. I also created our landing page."]], ["SAFE", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/XcSuidiTW3s?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"SAFE \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/432/109/datas/gallery.jpg\"/>\n<p>\n<i>SAFE</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p><strong>Our story begins in the fall of 2016. 5 freshmen from very different backgrounds teamed together to form the most intelligent, most API intensive application ever. We present to you, on this very day, SAFE.</strong></p>\n<p>Our application is designed to ensure the safety and security of you and your loved ones. It takes the form of both a beautifully designed mobile and web application to give users a beautiful and sleek experience.</p>\n<p><strong>What it does</strong></p>\n<p>Our application implementation is duplicated between the android and web application. The features present within both platforms are the same and are implemented in the following way:</p>\n<ol>\n<li>The user sends their data via GPS/location services on the Android app, or are asked for permissions within the Chrome Browser.</li>\n<li>The data is sent to the server, where it is processed and data is returned to the client.</li>\n<li>The client recieves a customized news feed of crimes, disasters, and weather data.</li>\n</ol>\n<p><strong>Challenges we ran into</strong></p>\n<p>We had big, big problems with Flask and Python. It was a humongous challenge attempting to create a webpage that implemented our python script. It was also a challenge, because we spent a lot of time attempting to VM through Amazon cloud services. We ended up solving it by directly running it out of our own machines. Furthermore, it was hard to find an API that provided a live crime feed.</p>\n<p><strong>How we built it</strong></p>\n<p>Python, with Flask, and JavaScript/CSS for front end, Android studio for android app.</p>\n<p><strong>What I learned</strong></p>\n<p>How to implement a  lot of web features as well as frontend and backend Python Flask development.</p>\n<p><strong>Features</strong></p>\n<p>-Facebook login, Google+ login</p>\n<p>-Secure Sign in with 2FA (using twilio)</p>\n<p>-GPS and Location Services tracking to pinpoint user location</p>\n<p>;-Use of OWM API, Sigimera, BlueChasm, SpotCrime to recognize potentially dangerous areas with use of user location data and Google Map's Geocoding and Distance Matrix Features</p>\n<p>-Use of twilio messaging API to alert user</p>\n<p>-Creation of a separate weather feed for User interface experience through the OWM API</p>\n<p>-Use of a referral technique to refer even more users to the system</p>\n<p>-Importation of Android's contacts, which will also appear if the user chooses to log in to the web portion</p>\n<p><strong>What's Next?</strong></p>\n<p>We plan to implement more APIs and a job feed for volunteering using Indeed API as well as donations for family members and those in need.</p>\n<p>Here are the APIs being used.</p>\n<p>Openweathermap <a href=\"https://openweathermap.org/\" rel=\"nofollow\">link</a></p>\n<p>BlueChasm <a href=\"https://docs.google.com/document/d/1_M8GvkFVyr--kWpuptM5_x4M0t_wC_M7OQjl8TcVii0/edit#\" rel=\"nofollow\">link</a></p>\n<p>SpotCrime <a href=\"https://www.spotcrime.com/#2600-2604%20Speedway%2C%20Austin%2C%20TX%2078712%2C%20USA\" rel=\"nofollow\">link</a></p>\n<p>Sigimera <a href=\"https://www.sigimera.com/\" rel=\"nofollow\">link</a></p>\n<p>Google Maps <a href=\"https://maps.googleapis.com/\" rel=\"nofollow\">link</a></p>\n<p>Twilio <a href=\"https://www.twilio.com/?mkwid=s5YsI2dSk&amp;pdv=c&amp;pcrid=116306358629&amp;pmt=e&amp;pkw=twilio&amp;campaign=G_S_Brand_Alpha_NA&amp;group=twilio&amp;utm_source=google&amp;utm_medium=cpc&amp;utm_term=&amp;utm_campaign=G_S_Brand_Alpha_NA&amp;utm_group=twilio&amp;gclid=CjwKEAjwv7HABRCSxfrjkJPnrWgSJAA45qA2ySAsY25KWS0O_BycV2Yttm0WdkPi3NAfkqHi_JY7EBoCR0bw_wcB\" rel=\"nofollow\">link</a></p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/copperstick6/HackTX-SAFE\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/copperstick6/HackTX-SAFE\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"http://www.turtleboys.com:8080/signup\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.turtleboys.com:8080/signup\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.turtleboys.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Worked on backend python scripts with most of the API calls", "I worked on the backend, working with Python and primarily dealt with Flask.", "I worked on the Android app as well as help with general design and logo.", "", ""]], ["VR Helicopter", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>This game was inspired by helicopter missions in popular first person shooters. I enjoyed those levels greatly and thought VR would be a great fit for them.</p>\n<p>In this game, you fly around in a helicopter in VR shooting down boats using your head to aim the helicopter's gatling gun.</p>\n<p>I built this game using Unity 3D, and made all the models in Blender.</p>\n<p>Making dynamic collision detection work would have taken much longer than 24 hours because my simulation wasn't based on Unity's physics engine, so instead I made the game over water and added a height limit. Getting the cockpit view and sound balance just right for the sake of immersion was also a major challenge.</p>\n<p>I'm proud of the fact that I put together this 3D VR game all by myself, of the fact that I created an algorithm to dynamically add and remove audio sources in order to properly handle the gatling gun sounds, of how immersive the game feels due to the emphasis on balancing sounds correctly and the VR, and of how I utilized the Oculus' head tracking for an actual control mechanic and not just for looking around.</p>\n<p>I learned how to properly handle VR in Unity (specifically how it affects the camera's positioning), and I also learned how to create a complex movement simulation without relying on the physics engine; Unity's physics engine would have made the game too hard to control if I used it for the helicopter controls, so I wrote my own algorithm for controlling it an a way that's more arcade-y, but doesn't kill suspension of disbelief.</p>\n<p>I want to add a heads up display, make the enemies shoot back, add collision detection, create better models with a more realistic cockpit, and add mission objectives.</p>\n<p>NOTE: You MUST play this game with an Oculus Rift and an Xbox controller for the full effect. The left analog pans the helicopter, the right analog turns it around, the triggers ascend and descend, and the A button fires.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://www.dropbox.com/s/zpxfai5kom1z8jy/VRHelicopter.zip?dl=0\" rel=\"nofollow\" target=\"_blank\" title=\"https://www.dropbox.com/s/zpxfai5kom1z8jy/VRHelicopter.zip?dl=0\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.dropbox.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["the-little-things", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Wanted to make an iOS game</p>\n<h2>What it does</h2>\n<p>Has a fancy login screen-- but no back-end functionality.</p>\n<h2>How we built it</h2>\n<p>With Swift (and powerpoint)</p>\n<h2>Challenges we ran into</h2>\n<p>Figuring out how to connect the app with the Microsoft API, Azure</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Trucking through tutorials in an attempt to figure out how to connect the app with the Microsoft API (and other API's as well).</p>\n<h2>What we learned</h2>\n<p>We need mentors to help explain how to link an iOS app with an API. You can also make some pretty great powerpoints given a couple of hours.</p>\n<h2>What's next for the-little-things</h2>\n<p>Figure out how to link with API-- or really any sort of database management system.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/powerpoint\">powerpoint</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/mkogerd/the-little-things\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/mkogerd/the-little-things\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Pong^3", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Pong^3 \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/432/238/datas/gallery.jpg\"/>\n<p>\n<i>View of player 2's paddle</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Pong^3 \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/432/239/datas/gallery.jpg\"/>\n<p>\n<i>View of player 1's paddle</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We're all fascinated with augmented reality, and a smartphone has the perfect level of convenience and capability to make it an excellent resource for AR. We were brainstorming small applications we could make to demo the capabilities of a smartphone for AR, and we landed on a version of pong. Pong has a good mixture of being easy to play and implement while still exemplifying something cool.</p>\n<h2>What it does</h2>\n<p>We made a version of pong where the camera is straight behind the paddle instead of being a top down view. We display the game on a computer and then use a smartphone to capture movement as the paddle. The smartphone doesn't actually display anything, but seamlessly sends its position and orientation so that it feels like the pong paddle on the computer. A key component was multiplayer, so you can play with another person on the other side of the game.</p>\n<h2>How we built it</h2>\n<p>We built three major components to get our project to work. The first one was the actual game side on the computer. We used C++ and OpenGL to make a simple 3D pong game. To get the paddles to move, we needed to collect the sensor data from the phone. We created a web server, also in C++ using sockets, that relays the sensor data from the phones to the computers, as well as computes the physics of the ball. Finally, we created an Android app that would initiate a connection with the server and transmit the sensor data.</p>\n<h2>Challenges we ran into</h2>\n<p>It took a lot of time to set up boilerplate code because we built it all from scratch in C++. We probably spent 10 hours before we even had the code necessary to start our project. We also ran into issues where the paddles and ball were jumping around the screen because of lost or delayed packets.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We wrote pretty much everything from scratch (maybe not the best idea for a Hackathon...). This means all our software is very fine-tuned for our project, and we are able to achieve high performance and low latency. Despite sending sensor data from two phones across the internet to the two laptops, the latency is almost unnoticeable and the game is very playable.</p>\n<h2>What we learned</h2>\n<p>Use existing tools because it takes way too long to do it all from scratch.</p>\n<h2>What's next for Pong^3</h2>\n<p>We would like to support more than 2 players and add more interesting physics to the ball (see a game called <a href=\"http://www.curveball-game.com/\" rel=\"nofollow\">Curveball</a>). We would also like to make the system more robust and improve performance and tracking.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/opengl\">opengl</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/chiragsakhuja/hacktx-2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/chiragsakhuja/hacktx-2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Capital One User Panel", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We made this for on the go, busy body users, trying to make it so their everyday lives and their bank accounts are streamlined, making it easier for them to check and, if necessary, act on any problem they may see.</p>\n<h2>What it does</h2>\n<p>The web app allows users to \"log in\" into their account and check information ranging from their bank accounts to last purchases and even to the closest Capital One bank.</p>\n<h2>How we built it</h2>\n<p>We created with two \"parts:\" a front end and back end. Utilizing html, css, and javascript, we created the front end ui, and used python to create the back end, integrating the various api's that were available to us. In the end, we synced the two up.</p>\n<h2>Challenges we ran into</h2>\n<p>We had trouble connecting the two parts of our project. We had to communicate with each other to share our files on github, and eventually we were able to connect them.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We're proud of the front end design properly displaying the back end results.</p>\n<h2>What we learned</h2>\n<p>We learned a lot about connecting a back end with a front end, as well using an API to get data to use. </p>\n<h2>What's next for Capital One User Panel</h2>\n<p>We hope to expand upon the data displayed, as well as make the UI more and more user friendly.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">api</span></li></ul>\n</div>\n</div>", ["", "", "", ""]], ["tweetLadder", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>In 2006, 98.75% of tweets were in English. Since then, that percentage has been going down. Today, 49% of tweets are not in the English language, and 78% of Twitter users are non-American. These statistics implies the trend of Twitter's globalization, a major factor of which is the use of service to discuss and increase awareness about major global events. When major global events occur, the amount of non-American users rises rapidly. Currently, most Twitter Analytics presents data only taken from the U.S., but we believe it is important for Twitter users in non-english speaking countries to search what is being talked about through their own language. Because of this, we wanted to utilize data visualization and analytics to create an app that allows users to search usernames and keywords in their own languages that gives them the user's influence for those keywords in those languages. </p>\n<h2>What it does</h2>\n<p>Determines the influence of a Twitter user on a specific topic based on keywords in user and followers' tweets.</p>\n<h2>How we built it</h2>\n<p>We used Android Studio and java to built the front end and backend we used java and the Twitter API. </p>\n<h2>Challenges we ran into</h2>\n<p>Linking the backend with the front end, we are getting weird errors with threading. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We learned completely new skill sets such as Android Studio, API calls, and app development. And finally connecting most of the app, although we couldn't get the last step</p>\n<h2>What we learned</h2>\n<p>Most of us are first-time hackers, so it took us hours to even come up with a viable and meaningful idea. Next time, we should have a couple practical ideas in mind beforehand to vote on when the Hackathon actually comes. Next time, we should also push commits to Github beforehand to pull each person's activity from, instead of doing individual parts and then trying to merge them and make them compatible.</p>\n<h2>What's next for tweetLadder</h2>\n<p>We want to finish the merging of the front end and back end of the app. We also want to find a way to bypass the Twitter API rate limits to reach a bigger data set to analyze.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twitter\">twitter</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Quinn95/HackTX\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Quinn95/HackTX\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on both the front end and back end of the app. Since it was my first time developing an android application, there was a steep learning curve to the experience.Collaborating with my team to build a UI for the application using Android Studio, and helping develop the algorithm and data structures for the back end made this a very enjoyable and exciting experience.", "", "", "", ""]], ["Beaconator", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Beaconator \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/432/219/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Wanted to do something social.</p>\n<h2>What it does</h2>\n<p>An \"AR\" social network where users can post content as beacons in the local area.</p>\n<h2>How I built it</h2>\n<p>Meteor for backend and Ionic for mobile application.</p>\n<h2>Challenges I ran into</h2>\n<p>Time and it took me too long to settle on an idea.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>It's something!</p>\n<h2>What I learned</h2>\n<p>APIs in Meteor and the proper way to do things in Meteor</p>\n<h2>What's next for Beaconator</h2>\n<p>Maybe I'll do something with it.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/meteor-js\">meteor.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ionic\">ionic</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-maps\">google-maps</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ios\">ios</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://beaconatorsocial.com\" rel=\"nofollow\" target=\"_blank\" title=\"http://beaconatorsocial.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>beaconatorsocial.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Kawaii Kwotes", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>Have you ever wanted the cute anime girls that you are attracted to to respond?\nNow they can! With Kawaii Kwotes, you can use Facebook messenger to contact our\n\"bot\" so that a cuuuuuute quote comes back to you! We are also planning on\nhosting pictures of your favorite waifus (or husbandos) and an option to have a\nbrand new randomized response to your keywords based off of your favorite\nwaifu's dialogue. That being said, there will also be an option to have the\nalgorithm utilize both your waifu's dialogue and Donald J. Trump's speeches, for\nadorable xenophobia!</p>\n<p>\u3069\u3046\u3082\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f~\nKawaii Kwotes Krew</p>\n<p><a href=\"http://imgur.com/a/CrDJE\" rel=\"nofollow\">http://imgur.com/a/CrDJE</a></p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">elixir</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/facebook\">facebook</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/facebook-chat\">facebook-chat</a></span></li><li><span class=\"cp-tag\">phoenix</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/souvik1997/kawaii-kwotes/blob/master/README.txt\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/souvik1997/kawaii-kwotes/blob/master/README.txt\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Wadoo", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>A quick journey on Facebook today reveals an interesting, yet sad fact: Out of all the friends we have on Facebook, in reality, we hardly talk to even half of them as much as we'd like to. Maybe, there's this one really super duper cool guy or gal that you wouldn't mind being closer friends with, but for some reason, you two aren't. Or perhaps, you just want to find new people to hang out with. Wadoo, the mobile app we developed, aims to solve this problem by the power of events.</p>\n<h2>What it does</h2>\n<p>Wadoo links to your Facebook account in order to have access to your many friends and provides a Tinder-like experience. However instead of choosing people, you choose events! Events can range to many different things, such as going out to see a new movie, trying a new restaurant, playing a game of table tennis, or discovering new things to do. Different kinds of events are generated and displayed to users, based upon their interests. If you and and a friend both happen to match on an event, you both are able to see that in order to encourage reaching out to each other. By doing so, we hope that people are able establish new and strong friendships.</p>\n<h2>How we built it</h2>\n<p>Wadoo was built in React-Native and connected to a SQL database in the backend. We decided to build the mobile application in React-Native, as doing so would allow us to ultimately extend across different platforms in the future.</p>\n<h2>Challenges we ran into</h2>\n<p>We ran into many problems trying to make database queries with Microsoft Azure and Firebase using Javascript. Documentation for both was not extensive, so it was difficult trying to build complex queries. In the end, we were unable to properly connect Wadoo to a database. Additionally, we suffered from many emulator issues that halted development.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>With two of our team members being completely new to React-Native, we are ecstatic that we were able to build an application that captures the basic functionality that we desired. </p>\n<h2>What we learned</h2>\n<p>We learned a lot about React-Native and the pros and cons that come along with using it. Although it isn't as widely supported as some other languages, React-Native offers a great deal of flexibility.</p>\n<h2>What's next for Wadoo</h2>\n<p>We hope to successfully set up Wadoo's backend in the near future. Additionally we plan on polishing up Wadoo's interface while adding more functionality in the form of server generated suggested events based on interests.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/react-native\">react-native</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/git\">git</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/redux\">redux</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/react\">react</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/brianqvpham/wadoo_mobile\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/brianqvpham/wadoo_mobile\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked primarily on connecting the application to a backend database with Microsoft Azure and Firebase.", "I worked on the front-end mobile application in ReactNativeJs."]], ["Footnote Analytics", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>The main source of inspiration for this project comes from the difficulty there is in implementing efficient and unobstrusive customer analytics solutions for physical locations, such as shopping malls, college campuses, stadiums, etc.</p>\n<h2>What it does</h2>\n<p>The application keeps track of where people go within a large area such as to provide insights on the popularity, or lack thereof, of various smaller areas within a location, where people are entering the area, and where they are leaving it.</p>\n<h2>How I built it</h2>\n<p>The application consists of two parts. The first one runs on a Raspberry Pi, and is meant to be a station that would ideally be deployed in the form of many different stations scattered across a physical location, such as to be able to track where people are going at all times. Each station scans the environment for wireless probe requests such as to identify individual people through the Wi-Fi activity their phones emit, essentially relying on the assumption of that, nowadays, most people carry a phone with them. The second part is the viewing client. It takes all the data reported by the stations and displays it to the owner, or administrator, for the physical location in which they are deployed.</p>\n<h2>Challenges I ran into</h2>\n<p>The application was originally meant to be implemented in three tiers, having IBM's Blockchain in the middle, between the stations and the view client, as a means of transmitting the data gathered by the stations; however, due to various issues with the Blockchain SDK, it ended up not being possible to implement this tier, and it was, instead, decided to connect the stations directly to the view client.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I would say that I am most proud of the wireless scanning functionality that I was able to implement into the stations. I had to learn how to use the Aircrack-ng security suite, and how pipe the output of the aforementioned tool into the server code such that it could be relayed to the view clients.</p>\n<h2>What I learned</h2>\n<p>I learned how to work with calling commands from Javascript in order to leverage tools that otherwise would be unavailable from repositories or built-in libraries.</p>\n<h2>What's next for Footnote Analytics</h2>\n<p>Possibly finding out why the SDK for IBM's Blockchain didn't work, such as to implement the tier that was originally planned for the application in the future.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/meteor-js\">meteor.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag\">aircrack-ng</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li></ul>\n</div>\n</div>", [""]], ["Math Tutor Bot", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Math Tutor Bot \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/432/223/datas/gallery.jpg\"/>\n<p>\n<i>Math Tutor Messenger Bot</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>How many times you scratched your head trying to solve mathematical prblems?  You are not sure how to proceed with the problem but quickly want to know approaches and solution? Just ask our 24/7 math tutor messenger bot.  </p>\n<h2>What it does</h2>\n<p>Interacts with the user by geting a snapshot of the problem to solve. In few mins, it responds with an answer along with the options to view lecture and explanation.</p>\n<h2>How we built it</h2>\n<p>We created a Facebook page and Facebook app for our Math Tutor Bot. We built a node js application which uses send/receive api and generic templates for communication.</p>\n<h2>Challenges we ran into</h2>\n<p>To extract the equation from the uploaded image, reconstruct the equation and solve expressions.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>A Messenger Bot itself. </p>\n<h2>What we learned</h2>\n<p>We learned a new a powerful mechanism for building and delivering potential solutions. We learned the basics of building a bot for Messenger which sets the solid foundation for addressing real life problems by utilizing Facebook's Messenger platform. </p>\n<h2>What's next for Math Tutor Bot</h2>\n<p>We are bringing Wit.AI to add more intelligence to the conversations. To improve the accuracy of equation extraction and solution. To plot a graph for the given equation. To better understand the user's knowledge level over the period of time and train the bot to act differently for different users.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google--2\">google</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/heroku\">heroku</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/github\">github</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["UNiTE", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>I am a very energetic person. I enjoy having new experiences and meeting new people. I wanted to be able to connect with people like myself, meet up, and try something new, like rock climbing or swing dancing. It could even be something as simple as playing racketball or playing a board game. This is what drove me to create UNiTE.</p>\n<h2>What it does</h2>\n<p>The Concept is simple, sometimes you just want to do something spontaneous, something fun. Sometimes, you just want an advanture. That's why the core feature of our app is something we call adventure mode. It's a button you turn on that says you're up for something fun, a new experience, or new people. Once you turn on adventure mode, you're presented with a live map of everyone in your area also looking to meet up. What comes next? Find them and have an adventure!</p>\n<p>Besides showing people, our app shows locations of meet ups and other fun activities going on. Anyone can host an event through the app and anyone can attend. Meetup locations are represented by blue pins on a real time interactive map and people are green. This makes it so easy to find people to hang out with, to try new things with, and just to have fun.</p>\n<h2>How we built it</h2>\n<p>Although UNiTE relies on many web technologies, its core is rooted in Microsoft's Azure cloud computing platform. The app is hosted on a virtual machine hosted by Microsoft that continually checks for updates to the master branch of a Git repository and restarts accordingly. We chose MongoDB to persist event data, locations, and logins. By running the Mongo server on Microsoft's technology, we were able to send and receive queries reliably to please our userbase. We used technologies like Node and HTML5 to build the meat and bones of the project.</p>\n<h2>The Business Model</h2>\n<p>Our target audience is college freshmen. There are more than 20.5 million students currently enrolled in college it is being constantly replinished, a new market each year. We plan to start at UT and hope to expand to other college campuses across the nation.\nIn terms of monetezation, we're going to utilize featured events and data analytics. Companies will be able to pay to get their events pinned at the top of the event feed and get more people to attend their event. Once the userbase grows large enough the amount of data generated by where people are and what they're interested in will be invaluable. A piece of information like a certain store has a surge of customers right before closing might incentivize them to stay open another hour and signifigantly increase profits.</p>\n<h2>The App and the Future</h2>\n<p>As the userbase grows the features will as well. We hope to add a friends list so you can prioritize events your friends are going to. We want to add pictures to give a better feel for the event, and we want to give more information to the users.</p>\n<h2>Conclusion</h2>\n<p>Ultimately we stand for enjoying life and people, appreciating humanity and the connections that we can make, and ultimately, that every day should be an adventure.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/azure\">azure</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-maps\">google-maps</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/facebook-login-api\">facebook-login-api</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/git\">git</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/github\">github</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/codeanywhere\">codeanywhere</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://authio.me/login\" rel=\"nofollow\" target=\"_blank\" title=\"https://authio.me/login\">\n<i class=\"ss-icon ss-link\"></i>\n<span>authio.me</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on designing the interface and developing the concept. Our team didn't have much time to implement the details, but the main idea is there! This was completed at my first Hackathon and I cannot begin to express how much I learned. Computer science can truly make dreams a reality-- I never realized how   creative this field can be!", "", "", ""]], ["QuicKicks", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"QuicKicks \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/432/218/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"QuicKicks \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/432/215/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"QuicKicks \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/432/217/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"QuicKicks \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/432/216/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration:</h2>\n<p>Our ultimate inspiration was to enable the easy and fair purchase of popular sneakers for all. Shoes such as the Adidas Yeezy Boost are extremely popular, selling out nearly instantly online and attaining resale values of up to 500% the price of retail. </p>\n<h2>What it does:</h2>\n<p>In today's world of online buying, consumers are often cheated out of products by automated scripts that purchase items faster than humanly possible. One solution to this issue was a lottery system produced by Adidas, in which users would randomly get let in to purchase by IP address. However, in recent Adidas sneaker drops, this system was being bypassed by technically-savvy users in order to accumulate many pairs for the sole purpose of resale, leaving regular fans of the shoe sneaker-less. By utilizing a vulnerability in the Adidas website, we allow our users to skip their lottery queue and maintain a time-competitive advantage. </p>\n<p>The simple and accessible Android interface we've developed prompts users to log in, choose the shoe they want to purchase, choose their shoes size, solve a recaptcha, then submit this request to Adidas\u2019s server. If the shoe is successfully added, our app will take the user to their shopping cart to checkout.</p>\n<h2>How we built it:</h2>\n<p>We implemented a previously discovered open-source backdoor add to cart procedure that was posted on Twitter by fellow sneaker fans. However, the backdoor in its given state was user unfriendly and difficult to set-up. Our client android application interacts with our server running on Amazon EC2 to submit Adidas account log-in info, a requested shoe and corresponding size. Our server returns full inventory counts for a given shoe, as well as adsd that shoe to a user's cart bypassing any standard waiting periods. Our server interacts with Adidas by using a library called htmlunit, facilitating fast and easy HTML requests with full JS support.</p>\n<h2>Challenges:</h2>\n<p>In order to prevent bots from purchasing sneakers, Adidas implements Google reCaptcha to reduce the spamming of server requests. However, for us to be able to add a shoe to a user\u2019s cart, we would need to execute this Google reCaptcha and receive the data from it to send to the Adidas servers. Google reCaptcha by default restricts us from getting a captcha token while not on the Adidas domain. To workaround this, we run a local Android web server that spoofs this in order to receive the necessary captcha token.</p>\n<p>We originally intended to have a client-focused base in which the client application runs the backdoor vulnerability. However, we could not find appropriate tools to accomplish what we needed on Android (lack of full java / java.x implementation). Thus, we had to introduce an external server to facilitate the add-to-cart process for us.</p>\n<h2>Accomplishments:</h2>\n<p>We created a threaded server implementation for the backend to prevent lag from the client\u2019s perspective. We also allow the client to see full stock levels of a given shoe, rather than simply in stock / sold out.</p>\n<h2>What I learned:</h2>\n<p>Most of our team had to learn Android application development for the first time in addition to HTML / JavaScript for the backend server interaction code. We had never deployed code to a running server on Amazon EC2 before, so that was a new experience as well.</p>\n<h2>What's next for QuicKicks</h2>\n<p>Targeting other mobile platforms, app notifications for hot release dates, and encouraging talks about how to develop fair online consumption policies to protect consumers from automated programs.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag\">http</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag\">htmlunit</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/CSweetBlue/QuicKicks\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/CSweetBlue/QuicKicks\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Face Finder", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to play with Microsoft's Cognitive Services. It sounded really cool, so we threw ourselves at the API. One of our friends works with the Texas School for the Blind and Visually Impaired. We thought the face and emotion API's could add information to images that lack them for the screen readers they use.</p>\n<h2>What it does</h2>\n<p>It identifies the the images on the webpages and sends them off the API for processing. Then it takes the information returned and makes alternative text identifying the number of people and their genders, ages, and if they have glasses or facial hair. </p>\n<h2>How we built it</h2>\n<p>Used JavaScript, HTML, and so much help from the Microsoft API docs.</p>\n<h2>Challenges we ran into</h2>\n<p>We never worked with API calls in JavaScript, so that was a super fun ~7 hours of experimenting and searching the internet. Also, the API only gives a trial limit of 20 requests per minute. Websites can have many more than that.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We learned how to make extensions, use JavaScript, and make API calls in JavaScript. There weren't even any breakdowns! We both kept it together. I (Ryan) was suuuuuuuuuuper unreasonably excited when I got just an API call working in JS. </p>\n<h2>What we learned</h2>\n<p>See above, lol.</p>\n<h2>What's next for Face Finder</h2>\n<p>Find a way around the rate limit. Probably make the whole thing look a bit better and take a bit less time. Make the code look like not a mess. Deal with synchronization. </p>\n<p>P.S. We recently published to the Chrome Store and it can take up to an hour to show up... :S</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://chrome.google.com/webstore/detail/face-finder/dddlenchhaccjekjmafcgabpnfldkdcl?utm\" rel=\"nofollow\" target=\"_blank\" title=\"https://chrome.google.com/webstore/detail/face-finder/dddlenchhaccjekjmafcgabpnfldkdcl?utm\">\n<i class=\"ss-icon ss-link\"></i>\n<span>chrome.google.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the front end to start, but by the end Ryan and I combined efforts to work on the whole thing. I had never worked with extensions before, and have only had experience with javascript, html, and APIs within the past week for classes, so the entire thing was a new experience. I understand API calls and JSON files much better now, and the idea that I published an actual extension to the actual Chrome Web Store is personally incredible.", ""]], ["JSOrchestra", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"JSOrchestra \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/432/085/datas/gallery.jpg\"/>\n<p>\n<i>Welcome Page</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"JSOrchestra \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/432/086/datas/gallery.jpg\"/>\n<p>\n<i>Tutorial Menu</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"JSOrchestra \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/432/211/datas/gallery.jpg\"/>\n<p>\n<i>Main Interface</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>There are many great educational resources and solutions for software development, however, there currently is no well-known method to learning how to develop an application. We seek to provide an easy to use and straight forward medium that guides a user through a series of tutorials focusing on the application development process!</p>\n<h2>What it does</h2>\n<p>JSOrchestra is a Google Chrome extension for jsfiddle.net which creates app development tutorials using the jsfiddle editor and compiler. Markup and JavaScript are inputted from the user with the guidance of our JSOrchestra tutorial box, which enables the user to compile and run through the custom jsfiddle editor. </p>\n<h2>How we built it</h2>\n<p>Reactjs and determination</p>\n<h2>Challenges we ran into</h2>\n<h2>Accomplishments that we're proud of</h2>\n<h2>What we learned</h2>\n<h2>What's next for JSOrchestra</h2>\n<p>We definitely wish to expand and create more tutorials, along with creating a friendlier UX for the main interface.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/react\">react</a></span></li><li><span class=\"cp-tag\">jsx</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/zckly/JSOrchestra\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/zckly/JSOrchestra\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["GoDj", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>As college students, we are constantly overwhelmed about our school work and exams. It is important to balance between our school lives, and social lives. After a long week of tedious exams and school work, going out and having fun is almost a necessity to our sanity. The GoDJ app allows college students to have the ultimate experience on their night out and relieve their stress. </p>\n<h2>What it does</h2>\n<p>This app allows users to request any song they would like to have played to the DJ at an event. This is a much more efficient way to request the song you want rather than pushing through a crowd to request a song from the DJ face to face. Users will also be able to \"favorite\" the songs that they like and add it to a playlist. The DJ will be able to see a list of songs requested in order of most commonly requested, clear handled requests, and immediately open the Spotify application with the requested song pulled up, so they don't have to take time to search it up.</p>\n<h2>How we built it</h2>\n<p>We put forth plenty of time to make a basic plan and outline of what we were going to do so we knew exactly where to start and what we needed. We then used Android studio to make the android app, and used Eclipse to make the server application.</p>\n<h2>Challenges we ran into</h2>\n<p>The biggest challenge for us was our time management. We overestimated the time we had and our ideas were a little too complex for our limited amount of time. In the end, we were forced to cut down a lot of the features we were planning to have. Another challenge we had was that we focused too much on the user interface and design rather than the basic functionality. A lot of our time went towards the design when we should have worked harder on the functionality.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Despite the time crunch, we are proud that we were able to finally produce working code under all the pressure. At the beginning, we were stuck on one part of the code for a few hours. After we got help and fixed the issue, we were able to zoom through the rest of the code because of the plan that we made before we started coding which laid out everything that had to be done, making it easier for us to code along the way.</p>\n<h2>What's next for GoDJ</h2>\n<p>We would like to add many new features to our app. One of the things we want to add is a voting option, where the users can vote on which song they most want played. This would make it easier for the DJ to choose which song should be played and would also entertain the crowd. Another thing we want to add is abuse management that takes care of repetitive song requests. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag\">swing</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/spotify\">spotify</a></span></li><li><span class=\"cp-tag\">sockets</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/gparyani/hacktx-dj-requests-server\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/gparyani/hacktx-dj-requests-server\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["HololensFetch", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/fnhLgB9JAbU?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We thought it would be fun to have a game that allowed you to explore some of the mapping capabilities of the hololens. This is a great software and what we really wanted to do was create a method to transport an object to a random, or selected, point on the spatial map mesh.</p>\n<h2>What it does</h2>\n<p>It moves a ball to a location on the mesh that the user has already mapped. This means that it effectively plays hide and go seek.</p>\n<h2>How we built it</h2>\n<p>We built it using the Hololens API and unity.</p>\n<h2>Challenges we ran into</h2>\n<p>None of us knew Unity, Hololens, or C# before last night so this was a slightly bigger project than one might expect. It was also surprisingly difficult to project the object onto a surface.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>The game works perfectly and its actually very fun.</p>\n<h2>What we learned</h2>\n<p>We learned a lot about Unity and VR and AR APIs. After today, I know that all of us will be able to make a realistic and useful VR program, in the spirit of the next generation of programming.</p>\n<h2>What's next for HololensFetch</h2>\n<p>Add a timer and a multiplayer so that you can play against someone.  Remove mesh.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/microsoft-hololens\">microsoft-hololens</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/cairhart/HoloFetch\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/cairhart/HoloFetch\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I made the physics and the basic app design", "I worked on the 3D rendering and C# scripts for cursor control", ""]], ["Wislack", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Wislack \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/432/175/datas/gallery.jpg\"/>\n<p>\n<i>Main page</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Wislack \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/432/176/datas/gallery.jpg\"/>\n<p>\n<i>Channel #random</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Wislack \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/432/178/datas/gallery.jpg\"/>\n<p>\n<i>Channel #Announcement</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Many times when open the slack app, unread messages are overwhelming. So saving time for reading while don't miss any important messages is important.</p>\n<h2>What it does</h2>\n<p>Highlight key words for each message</p>\n<h2>How I built it</h2>\n<p>It a web application built on <strong>Flask</strong>, super light weight. The data and intelligent algorithms depend on <strong>slack API</strong> and <strong>incido API</strong>.\nThe slack API feeds conversation data to the application and incido API process them using NLP technologies .</p>\n<h2>Challenges I ran into</h2>\n<p>Since I am more familiar with backend, so I spent some time figuring out how to highlight words using css.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I finished the project alone. My teammate went home last night. :(</p>\n<h2>What I learned</h2>\n<p>I learnt flask and picked up python. Also, gained more in practice experience in front-end.</p>\n<h2>What's next for Wislack</h2>\n<p>Add more features! Use Oauth to allow user login using their own account.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/slack\">slack</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag\">indico</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/dfchen6/WiSlack-HackTX\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/dfchen6/WiSlack-HackTX\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"http://ddfaaba6.ngrok.io/ \" rel=\"nofollow\" target=\"_blank\" title=\"http://ddfaaba6.ngrok.io/ \">\n<i class=\"ss-icon ss-link\"></i>\n<span>ddfaaba6.ngrok.io</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Advise-Me-Bevo", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>MyEdu got bought out by Blackboard, and currently a course planner app does not exist for students.</p>\n<h2>What it does</h2>\n<p>Gives you currently available courses, professors that teach those courses, and available course times. The app will also let you contact professors and post professor reviews.</p>\n<h2>How we built it</h2>\n<p>Built it using AWS, Python, Swift, PostGreSql, Flask</p>\n<h2>Challenges we ran into</h2>\n<p>Front-end UI not working, scripting, database issues, making a script to pull all courses from UT course schedule</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>we successfully pulled all of the classes from the UT Course Schedule, and designed an a cool UI</p>\n<h2>What we learned</h2>\n<p>how to script in python, database management, making API's, designing mobile UI's, sending requests to databases</p>\n<h2>What's next for Advise-Me-Bevo</h2>\n<p>adding a social aspect to the app, making more options </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c\">c</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/postgresql\">postgresql</a></span></li></ul>\n</div>\n</div>", ["", "", ""]], ["Pizza and Pineapples", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Pineapple on pizza is bad. Everyone should know. Some things are important.</p>\n<h2>What it does</h2>\n<p>Displays content and strong opinions.</p>\n<h2>How we built it</h2>\n<p>With html, javascript, and css.</p>\n<h2>Challenges we ran into</h2>\n<p>Integrating css with the Sweet Alert library.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Only one of our members knew javascript.</p>\n<h2>What we learned</h2>\n<p>Website programming is fun!</p>\n<h2>What's next for Pizza and Pineapples</h2>\n<p>Internet fame.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag\">speed</span></li></ul>\n</div>\n</div>", ["Started on backend of a rails app, then conceptualized and made a survey app for the world.", "I did some rails stuff until we decided that pineapple on pizza needed to be addressed", "I failed at making the android frontend that we wanted to make lmao. I just helped out Denise with the app."]], ["dckx", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"dckx \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/432/173/datas/gallery.jpg\"/>\n<p>\n<i>dckx output</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p><strong>dckx</strong> is the news aggregator of the future! Tired of boring world news? Can't\nget enough programmer humor? Read your <em>Times</em> headlines in XKCD panels!</p>\n<h2>What it does</h2>\n<p>Creates a unique comic xkcd panel based off of the most recent The New York Times' headline.</p>\n<h2>How I built it</h2>\n<p>In order to run, dckx has a large precollated library of source material. The materials consists of webscraped XKCD graphics, caption text, and executive summaries drawn from explainxkcd.com. Input is tokenized by dckx.py, then fed into search.py, which uses several techniques to match each token to a proper comic panel. These\npanels are recombined in an output comic, which is displayed for the user's convenience. The panels were spliced using OpenCV and contour recognition.</p>\n<h2>Challenges I ran into</h2>\n<p>Setting up OpenCV with Python</p>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<p>OpenCV\nWeb-crawling</p>\n<h2>What's next for dckx</h2>\n<p>Improve Natural Language Classifiers to more accurately analyze text and create better matches between xkcd transcripts and news article headlines.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bash\">bash</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/opencv\">opencv</a></span></li><li><span class=\"cp-tag\">web-crawling</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/dteal/dckx\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/dteal/dckx\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", "", ""]], ["Nicely", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Nicely \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/432/166/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Nicely \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/432/167/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Nicely \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/432/168/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Nicely \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/432/169/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Nicely was a result of our desire to raise awarness of online harassment bullying. These are two very serious problems in our society, and we believe that Nicely can help in solving them.</p>\n<h2>What it does</h2>\n<p>The web application allows the user to enter a Twitter handle and instantly see feedback and analytics of the Tweets from that handle. These analytics include what percentage of their Tweets contain angry sentiment, or other negative sentiments. The web app also gives the user an example of a good tweet and analyzes timestamps to tell the user what times they are more or less likely to post negative tweets.</p>\n<h2>How we built it</h2>\n<p>The backend of this application was designed with Flask, Python, and Javascript, and hosted on Microsoft Azure.</p>\n<h2>Challenges we ran into</h2>\n<p>Initially, we had planned to include the ability to analyze both Facebook and Twitter posts. However, we ran into challenges regarding authorization and accessing the posts. We were able to successfully get the analyzation of Tweets working, but were unable to get Facebook working in the time that we had.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>In this project, we are not only proud of successfully building a webapp, but also it's potential to help people and bring more awareness to online harassment. We hope that many people will use this web app and that it will improve many lives.</p>\n<h2>What we learned</h2>\n<p>The team learned how to use Microsoft Azure, how to use the powerful IBM Watson API, and Twitter API. Additionally, we improved our ability to build a functional webapp.</p>\n<h2>What's next for Nicely</h2>\n<p>In the future, we would like to add an option to analyze Facebook posts in addition to Tweets. Nicely doesn't stop here. We see a lot of growth in the application and see that it can be very useful, especially for people who are or who know victims of online harassment.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/azure\">azure</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag\">ibm-watson-api</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twitter\">twitter</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/jay-khatri/Nicely\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/jay-khatri/Nicely\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Nicely", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Nicely \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/432/166/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Nicely \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/432/167/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Nicely \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/432/168/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Nicely \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/432/169/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Nicely was a result of our desire to raise awarness of online harassment bullying. These are two very serious problems in our society, and we believe that Nicely can help in solving them.</p>\n<h2>What it does</h2>\n<p>The web application allows the user to enter a Twitter handle and instantly see feedback and analytics of the Tweets from that handle. These analytics include what percentage of their Tweets contain angry sentiment, or other negative sentiments. The web app also gives the user an example of a good tweet and analyzes timestamps to tell the user what times they are more or less likely to post negative tweets.</p>\n<h2>How we built it</h2>\n<p>The backend of this application was designed with Flask, Python, and Javascript, and hosted on Microsoft Azure.</p>\n<h2>Challenges we ran into</h2>\n<p>Initially, we had planned to include the ability to analyze both Facebook and Twitter posts. However, we ran into challenges regarding authorization and accessing the posts. We were able to successfully get the analyzation of Tweets working, but were unable to get Facebook working in the time that we had.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>In this project, we are not only proud of successfully building a webapp, but also it's potential to help people and bring more awareness to online harassment. We hope that many people will use this web app and that it will improve many lives.</p>\n<h2>What we learned</h2>\n<p>The team learned how to use Microsoft Azure, how to use the powerful IBM Watson API, and Twitter API. Additionally, we improved our ability to build a functional webapp.</p>\n<h2>What's next for Nicely</h2>\n<p>In the future, we would like to add an option to analyze Facebook posts in addition to Tweets. Nicely doesn't stop here. We see a lot of growth in the application and see that it can be very useful, especially for people who are or who know victims of online harassment.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/azure\">azure</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag\">ibm-watson-api</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twitter\">twitter</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/jay-khatri/Nicely\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/jay-khatri/Nicely\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["The Amazing Maze VR", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"The Amazing Maze VR \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/432/153/datas/gallery.jpg\"/>\n<p>\n<i>maze</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"The Amazing Maze VR \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/432/154/datas/gallery.jpg\"/>\n<p>\n<i>dog</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"The Amazing Maze VR \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/432/155/datas/gallery.jpg\"/>\n<p>\n<i>maze face-camera</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"The Amazing Maze VR \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/432/161/datas/gallery.jpg\"/>\n<p>\n<i>modeling dog</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>The inspiration for the game came from a VR game called \u201cKeep Talking and Nobody Explodes\u201d. We wanted to make a VR game that requires communication between two players to reach a goal. In both games, the player with the Oculus Rift on has information that the player outside does not have, and vice versa. The two must work together to achieve a common goal.</p>\n<h2>What it does</h2>\n<p>This is a two-player VR game. Your objective is to maneuver the maze without getting bit by the evil dogs! The maze runner has a limited first-person view, so it is up to the help to guide the runner to the end of the maze. The helper has a bird\u2019s-eye view of the maze, but has to be careful not to lead the runner into a dead end, because only the runner sees the dogs!!</p>\n<h2>How we built it</h2>\n<p>We used Blender to design most of our models in our game. Then, we used Unity, Steam VR, Oculus APIs to integrate these models into a VR game. Our hardware consisted of Oculus Rift, our laptops and one heavy-lifting game box.</p>\n<h2>Challenges we ran into</h2>\n<p>Most of our team didn't have any experience with Unity or VR game development before. The most challenging part was to learn the tools we got to work with.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We came with little knowledge of VR game development; we walked out with a working VR game. </p>\n<h2>What we learned</h2>\n<p>We learned the basics of VR game development. This included the general development process and tools (Blender, Unity, VR).</p>\n<h2>What's next for The Amazing Maze VR</h2>\n<p>Right now, the maze is static. Also, more improvements can be added, such as keys, doors, rewards &amp; trapdoors to make the game more challenging. The graphics of the game can be enhanced as well.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag\">blend</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/oculus\">oculus</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/jhillkwaj/hacktx2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/jhillkwaj/hacktx2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Wrote the devpost, spent majority of time learning about VR game development. ", "Design models and animations in Blender and Unity", "Designing models in Blender, creating GameObjects with animations in Unity, in-game sounds, devpost\n", "I worked on the game mechanics in Unity and setting up the Oculus Rift", "Built 3D models and animation in Blender and Unity", ""]], ["My Healthy Cat", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"My Healthy Cat \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/432/163/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>We are the Cagifs.</h2>\n<h2>Inspiration</h2>\n<p>We're CS majors... we don't get out much. FitBit? Smart watches? Not motivation enough. Tamagotchi had it right. <strong>We needed cats.</strong> \nWe walked into this hackathon with one goal: learn and have fun. (Ok, maybe it was two goals). What had we never done before? What did we want to learn about? After eating a lot of junk food and reevaluating our life choices, we realized that this game would probably be very relevant and useful, along with it being fun.</p>\n<h2>What it does</h2>\n<p>Cash in your hard-earned daily steps into precious PawPoints. Use these to buy food and toys for your cat and take it on walks. If your cat just enjoyed a delicious meal of cat food, you can pat yourself on the back, because not only are you a great pet owner, you walked 1000 steps, and <strong>you're healthy.</strong> If your cat's health bars are low and it keels over from exhaustion and sadness, you're overwhelmed with the desire to do better. To <strong>be healthy for your cat.</strong> Basically, if you move around and stay fit, your cat is happy and loves you. If not... it'll let you know it's unhappy. Just like any real cat.</p>\n<h2>How we built it</h2>\n<p>With React-Native and Javascript/JSX and a little touch of Xcode on the side. We integrated HealthKit to convert your stepcount into in-game currency. </p>\n<h2>Challenges we ran into</h2>\n<p>None of us had any experience with React-Native, mobile development, or JSX, so most of the last 24 hours we spent learning everything from scratch. (AKA we spent maybe four hours trying to get an image to be a button that navigates to the next scene.) That's fine, though. It made our accomplishments feel even better and more rewarding.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>This game!!!! #CatsRepresent #HealthCat</p>\n<h2>What we learned</h2>\n<p>Teamwork is great. Sleep is optional. Hackathons are 10% luck (why is this working), 20% skill (I know why this isn't working), 15% concentrated power of will (I will make this start working), 5% pleasure (holy crap this is working), 50% pain (why can't stackoverflow just make it start working), and 100% reason to remember CAGIF!!! </p>\n<h2>What's next for My Healthy Cat</h2>\n<p>Shipping to the App Store and helping everyone in the world be happy and healthy with their cat.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/react-native\">react-native</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ios\">ios</a></span></li><li><span class=\"cp-tag\">jsx</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/objective-c\">objective-c</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xcode\">xcode</a></span></li><li><span class=\"cp-tag\">healthkit</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/gimp\">gimp</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Xyz-zy/CaGif-.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Xyz-zy/CaGif-.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Sindhu and I worked on creating the Native Objective-C iOS module for collecting step count data. Also, I helped with debugging the JavaScript and JSX of the Home and Inventory pages. ", "", "", ""]], ["Tombstone by Clay Damron", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>Hello, my name is Clay Damron.  I'm an aspiring environment artist and technical artist from Austin, Texas.  I am currently a senior in the Arts and Entertainment Technologies program at UT.</p>\n<p>I decided to go with the theme of Halloween for this rendering.  I spent about ten hours working on the model, about four hours working on the textures, and another six hours rendering everything and working on the video.</p>\n<p>Every item is made manually - each leaf had to be placed individually, and every detail was either sculpted in or made via polygonal modeling.  </p>\n<p>I'm absolutely thrilled that my lean production workflow has enabled the completion of this project in such a short period of time.  Thank you, everyone!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">sketchup</span></li><li><span class=\"cp-tag\">3d-coat</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/maya\">maya</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/photoshop\">photoshop</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ruby\">ruby</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://drive.google.com/file/d/0B6PWq_YGdMSjVWw1S2tfZldKOWs/view?usp=sharing\" rel=\"nofollow\" target=\"_blank\" title=\"https://drive.google.com/file/d/0B6PWq_YGdMSjVWw1S2tfZldKOWs/view?usp=sharing\">\n<i class=\"ss-icon ss-link\"></i>\n<span>drive.google.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["minimusic", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"minimusic \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/432/258/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"minimusic \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/432/259/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>The world is moving towards technology and the internet, even in the realm of music. As of today, <a href=\"https://www.youtube.com/watch?v=lTx3G6h2xyA\" rel=\"nofollow\">Madeon's Pop Culture</a> has 36 million views, and is one of the most well-known live performances on the launchpad. These instruments can be expensive, so we came up with a web app so that anyone can create and experience music right from the browser.</p>\n<h2>What it does</h2>\n<p>Upload sound clips to a bank on the left. Click a key button with your cursor to map it to one of your sounds. Then, you can press the button on your keyboard to play it! A simple set-up allows for unlimited musical creativity and exploration.</p>\n<h2>How we built it</h2>\n<p>Everything is built with HTML, CSS, and JavaScript.</p>\n<h2>Challenges we ran into</h2>\n<p>Scaling for CSS elements.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Creating a way to practice making and performing music that's super accessible! There's still plenty of room for improvement, and we hope to continue adding features and squashing bugs.</p>\n<h2>What we learned</h2>\n<p>JavaScript is a tricky beast.</p>\n<h2>What's next for minimusic</h2>\n<p>Looping of sounds, multi-file adding, pre-set libraries, recording of performances, &amp; side bar search for sound clips, music videos, and pre-set sound libraries.</p>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/mindietea/mini-music\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/mindietea/mini-music\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I came up with the idea and designed how it would be implemented. I worked on a large part of the JavaScript and some CSS components.", "I designed the graphics for the application, working on the CSS and some of the html. In addition, I aided in the development of some of the functionality in the JavaScript."]], ["Poli Tweets", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>As first years computer science majors, we had just learned about visualizing data in Mike Scott's CS312 class (some of you might find this familiar). Professor Scott had just showed us the visualization of zip codes all across the United States, and we thought it would be a good idea to put this code into a more relevant topic. </p>\n<h2>What it does</h2>\n<p>Shows the geographical relationship between the amount of times people are talking about a certain political candidate and their location. We color code the talk of Hillary with blue, and the talk of Trump with red. </p>\n<h2>How we built it</h2>\n<p>In the back end, we gather twitter's data for geolocation of cities and states where we search for specific hashtags relating to Hillary Clinton or Donald Trump. We gather the data into a JSON file, and turn it into a JavaScript code.\nFor the front end, we used a web template from WebGL that would visualize our data into an intuitive and sleek form. </p>\n<h2>Challenges we ran into</h2>\n<p>As Computer Science majors with virtually no past experience in any other language other than Java, the whole project was a challenge in and of itself. However, thanks to the help of our mentors ( and CDK Global ), we were able to accomplish this goal while also learning a fair amount of useful information. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are proud </p>\n<h2>What we learned</h2>\n<p>We've learned about how the web is structured and how servers and computers communicate with each other. </p>\n<h2>What's next for Poli Tweets</h2>\n<p>Easily changing the data for different subjects of interest!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twitter\">twitter</a></span></li><li><span class=\"cp-tag\">api</span></li></ul>\n</div>\n</div>", ["Worked on the front end to display the information sent by the back end. Also worked a little with finding out how the API used, works.", ""]], ["charbatsim", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>As fans of role-playing games and lovers of imagination, we decided that we wanted to create something decently complex that we could all find ourselves sinking hours into.</p>\n<h2>What it does</h2>\n<p><em>charbatsim</em> allows you to pit two customizable armies with specific stats and gear per unit against each other and watch in real time as they duke it out to survive the battle. The simulation algorithm takes into account each team's weapons, armor, and stats and executes events based on this data and RNG.</p>\n<h2>How we built it</h2>\n<p>We divided up the labor into two categories, UI and logic, and proceeded to work as two sub-teams conquering these tasks. We occasionally met up for bug-fixing and style decisions  and before long, <em>charbatsim</em> was born.</p>\n<h2>Challenges we ran into</h2>\n<p>The majority of the team had little knowledge of JavaScript and it's intricacies and because of that, we ran into a myriad of bugs in our simulation algorithm. In particular, we were not used to dynamic typing and the bugs it can introduce as we all came from Java/C backgrounds.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>The simulation algorithm is decently modular, allowing us to add events and items freely as we choose to do so. The writing is pretty good on the event and item descriptions too!</p>\n<h2>What we learned</h2>\n<p>Each member of the team learned a great deal about HTML, CSS, and JavaScript as well as valuable collaboration techniques.</p>\n<h2>What's next for charbatsim</h2>\n<p>More items! More events! Online multiplayer! A better simulation algorithm! More fun! &lt;3</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/github\">github</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/gimp\">gimp</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/inkscape\">inkscape</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://markaramirez.github.io/charbatsim/index.html\" rel=\"nofollow\" target=\"_blank\" title=\"https://markaramirez.github.io/charbatsim/index.html\">\n<i class=\"ss-icon ss-link\"></i>\n<span>markaramirez.github.io</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I led the team, designed the Simulation algorithm, fixed a lot of bugs, and wrote all of the events and items.", "I worked to create and draw the character art for each of the four characters, as well as learning HTML, css, and Javascript contributing to the early phases of the UI.", "I wrote several Java programs to facilitate the creation of new data in our game and its transfer into the JavaScript portion of our code base. Additionally, I wrote much of the JavaScript code behind our simulation algorithm. While I was advanced with Java and competent with JavaScript before this project, this endeavor gave me a chance to cement my knowledge of JavaScript even further.", "I worked on the UI, creating a dynamic and fluid website using bootstrap that would display all the variables and data of charbatsim in a understandable and easy-to-use manner. I am now very comfortable using various bootstrap elements and using CSS and JavaScript for creating beautiful and dynamic websites"]], ["Talk Espanol To Me", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Talk Espanol To Me \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/432/140/datas/gallery.jpg\"/>\n<p>\n<i>Scene of a bedroom, where you can select household objects</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Talk Espanol To Me \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/432/141/datas/gallery.jpg\"/>\n<p>\n<i>Scene of a classroom, where you take your quiz</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>New ways to learn is something we could always use, and VR is a good way as it gives you a new environment as well as helps you learn.</p>\n<h2>What it does</h2>\n<p>It provides different scenarios with objects in them, which you can click on to get its terminology in English and Spanish. It also quizzes you on what you had learnt before.</p>\n<h2>How we built it</h2>\n<p>Two of us designed the rooms using the Asset Store and arranged it based on what we needed. The other two of us used C# and Unity to write the scripts to be able to select the objects and give different outputs.</p>\n<h2>Challenges we ran into</h2>\n<p>Two of us did not have prior experience in Unity, the app started glitching different on the HMD than on the computer, but we managed to fix the bug.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>The fact that we actually got three scenes with transitions in less than 24 hours and learnt so much.</p>\n<h2>What we learned</h2>\n<p>Start small, and then keep building when it's a small Hackathon. A lot of our ideas had to be scrapped back due to timing.</p>\n<h2>What's next for Talk Espanol To Me</h2>\n<p>Fixing the bugs, and then making it a full-fledged app with other words/scenarios.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/photoshop\">photoshop</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/samsung-gear-vr\">samsung-gear-vr</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/oculus\">oculus</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/varshiniramaraj/Talk-Espanol-To-Me\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/varshiniramaraj/Talk-Espanol-To-Me\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I essentially worked on the C# part of it. Tagging the objects such that the words appeared on a tap, and fixing the scene so that it could have a quiz and so on.", "", "", ""]], ["Cast", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Cast \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/432/120/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Small solutions now, can solve big problems tomorrow. And the greatest problems of tomorrow will come from global climate change.</p>\n<h2>What it does</h2>\n<p>Cast seeks to solve the communication problems between financial institutions and their customers that will arise as global climate change causes increasingly more frequent evacuations due to natural disasters.</p>\n<p>Cast draws on powerful climate analysis services to alert financial institutions of potential customer displacement so that they can relay information directly to the affected customers. It is of the utmost importance that during the stress of evacuation customers have access to their financial resources. </p>\n<h2>How I built it</h2>\n<p>We used Azure Services to deploy the website via Visual Studio 2015. We also use CapitalOne's API to track the locations of ATMs around the areas. We also use Bluechasm's API to track weather movement.</p>\n<h2>Challenges I ran into</h2>\n<p>The challenges I ran into was trying to set a software model cycle to deploy the website.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Using Azure services and using API's that we normally don't have access to for free.</p>\n<h2>What I learned</h2>\n<p>I learned to develop with other team members.</p>\n<h2>What's next for Cast</h2>\n<p>It's going to be a one thing software. We intend to bring the website as an actual program to help people in times of need to relocate to their financial centers.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/asp-net\">asp.net</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Vorkeal/Cast\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Vorkeal/Cast\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://draftcast.azurewebsites.net/\" rel=\"nofollow\" target=\"_blank\" title=\"https://draftcast.azurewebsites.net/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>draftcast.azurewebsites.net</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Lucent", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>A passion for music.</p>\n<h2>What it does</h2>\n<p>Reads EEG data (brain waves) and uses a from-scratch implementation of machine learning in tandem with the Spotify API to help identify music that can help you focus on work, get pumped up at the gym, etc.</p>\n<h2>How we built it</h2>\n<p>Very little sleep, a fair amount of coffee, a lot of programming, and ripping open a cheap EEG-based toy.</p>\n<h2>Challenges we ran into</h2>\n<p>Implementing machine learning with no prior experience was something else. The wires we used initially were to small and ended up breaking. Had to do an emergency repair by borrowing some wires from another project.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Managing to combine a tough hardware hack with an interesting programming challenge.</p>\n<h2>What we learned</h2>\n<p>Never use cheap wires. </p>\n<h2>What's next for Lucent</h2>\n<p>Hopefully some refinement on the machine learning.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/caffeine\">caffeine</a></span></li><li><span class=\"cp-tag\">cool-apis</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/jacoblubecki/Lucent-HackTX\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/jacoblubecki/Lucent-HackTX\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Virtual Cube Fight", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/BYOOpZhTE7E?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Virtual Cube Fight \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/432/071/datas/gallery.jpg\"/>\n<p>\n<i>Justin's hand shooing away some menacing cubes</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We wanted how to develop for applications for virtual reality</p>\n<h2>What it does</h2>\n<p>Uses the head tracking of the Oculus Rift and the hand tracking of the Leap Motion to fully immerse the user in an epic cube fighting extravaganza.</p>\n<h2>How we built it</h2>\n<p>We used Unity to create the graphics and C# for the game engine</p>\n<h2>Challenges we ran into</h2>\n<p>Interfacing the Leap Motion in order to turn the user's hand motions and positions into meaningful and usable inputs to the game engine.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Finding a monitor to work with this PC.\nActually finishing a fully playable game for VR.</p>\n<h2>What we learned</h2>\n<p>How to use Unity.\nHow the Oculus Rift and Leap Motion work.\nHow to use C#.</p>\n<h2>What's next for Virtual_Cube_Fight</h2>\n<p>Making full use of the gestures a user can make, for example, a finger gun could be used to shoot cubes from afar.\nWorking with the HTC Vive.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/oculus\">oculus</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/leap-motion\">leap-motion</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/fishheads24/TBHIMO_HackTX16\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/fishheads24/TBHIMO_HackTX16\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on game design and architecture. Also worked on integrating the leap motion API with unity.", "I helped develop the Unity source files for the game logic and helped debug the interfacing", "", "", ""]], ["PushNote", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Whenever an issue arises at a large event with a lot of people, the situation gets hectic for two reasons: the organizers receive tons of notifications from attendees via multiple channels of contact (e.g. email, phone, slack channel), and the attendees themselves aren't aware whether other attendees are also having the same issues. There have been attempts to remedy this issue by using Slack channels, but then we run into the issue of not being able to know how many people are being affected without having tons of messages again. </p>\n<p>We wanted a solution that would not only keep attendee and organizer updated about the current issues, but also be able to keep track of how urgent each issue is, all in one place, processed quickly and easily.</p>\n<h2>What it does</h2>\n<p>PushNote provides a feed where attendees can simply post their issues, and other attendees can upvote the issues they are also experiencing. The issues with the most upvotes will be at the top of the page, so that event organizers can easily view the issue and gain knowledge of how many people it is affecting. </p>\n<p>Event organizers can sign up for an account and set up an event page, where the feed of issues will go. Attendees can view the feed of issues and also create issues on this event page, as well as upvote specific issues. Event organizers can log in and add responses to issues and mark issues as resolved or un-resolve an issue. As issues gain more upvotes, PushNote will also send a text message notification to the event organizers with the issue message.</p>\n<h2>How we built it</h2>\n<p>We used Firebase and Flask to build a web application that interacted with the Firebase API. We used pyrebase to use the authentication and database interactions with Firebase in python, and we used ReactJs for our front-end. </p>\n<h2>Challenges we ran into</h2>\n<p>We wanted to utilize Mailgun, but given the time frame we were unable to link the email servers to send email notifications of hot issues that arise. We also ended up with a few minor bugs in the front-end, and did not end up having enough time to fix them.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Sorting the issues by their upvotes, updating the feed quickly and smoothly, learning to use Firebase, staying up almost the entire time.</p>\n<h2>What we learned</h2>\n<p>We learned how to use Firebase, ReactJs, Heroku, and the Twilio API.</p>\n<h2>What's next for PushNote</h2>\n<p>Along with bug fixes, we'd like to add a history of updates from the event organizers per issue. Also, we'd like to allow multiple event organizers' accounts to be able to admin one event page.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/react\">react</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/heroku\">heroku</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/git\">git</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/github\">github</a></span></li><li><span class=\"cp-tag\">materialize</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jinja\">jinja</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/slack\">slack</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://pushnotes.me\" rel=\"nofollow\" target=\"_blank\" title=\"http://pushnotes.me\">\n<i class=\"ss-icon ss-link\"></i>\n<span>pushnotes.me</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Asteroid Crawler ", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Asteroid Crawler  \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/432/125/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Asteroid Crawler  \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/432/128/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Asteroid Crawler  \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/432/129/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We need more retro style games that are never-ending</p>\n<h2>What it does</h2>\n<p>Entertains</p>\n<h2>How I built it</h2>\n<p>Trail and error</p>\n<h2>Challenges I ran into</h2>\n<p>Moving the pixels correctly</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>It has a perfect never-ending scroll and is made entirely from Java using a gui</p>\n<h2>What I learned</h2>\n<p>a loooooottt about the java swing library</p>\n<h2>What's next for Asteroid Crawler</h2>\n<p>add a menu, difficulty level, maybe some blasters, fix up UI, make it run until the user stops playing</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag\">gui</span></li></ul>\n</div>\n</div>", [""]], ["Facebook Useless Post Fixer", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Facebook Useless Post Fixer \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/432/118/datas/gallery.jpg\"/>\n<p>\n<i>Why is this an image</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Facebook Useless Post Fixer \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/432/119/datas/gallery.jpg\"/>\n<p>\n<i>This is what it should be, just text</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>I hate it when people just share pictures of plain text on Facebook. Just post it as a status, please!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/chrome\">chrome</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/CamelBackNotation/needs-more-jpeg\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/CamelBackNotation/needs-more-jpeg\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["stimulus", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"stimulus \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/432/117/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>Stimulus</h1>\n<p>New tab page to tell you how many more times you are expected to do certain activities in your life. Heavily based on <a href=\"https://github.com/maccman/motivation\" rel=\"nofollow\">maccman/motivation</a>. Special thanks to <a href=\"https://github.com/samm81/stimulus/blob/master/index.html#L2\" rel=\"nofollow\">evanc</a> and <a href=\"https://github.com/samm81/stimulus/blob/master/style.css#L2\" rel=\"nofollow\">maccman</a>.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">elm</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://chrome.google.com/webstore/detail/stimulus/badbnmdfdmbccganmgmmgdgdaffgkiag\" rel=\"nofollow\" target=\"_blank\" title=\"https://chrome.google.com/webstore/detail/stimulus/badbnmdfdmbccganmgmmgdgdaffgkiag\">\n<i class=\"ss-icon ss-link\"></i>\n<span>chrome.google.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Everything", "Worked on output format and stylistic choices. Got to learn elm!!!", ""]], ["BallotBusters", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<h2>What it does</h2>\n<h2>How we built it</h2>\n<h2>Challenges we ran into</h2>\n<h2>Accomplishments that we're proud of</h2>\n<h2>What we learned</h2>\n<h2>What's next for BallotBusters</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/machine-learning\">machine-learning</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n</div>", ["All server start up and machine learning set up on Microsoft azure cloud. Some python programming for data extraction and conversion on the back end.", "I worked on data analysis and predictive machine learning using Microsofts machine learning API. ", "", "", ""]], ["Audio Deep Learning", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to write a bot that essentially could take some sort of data and created something 'creative' from it.</p>\n<h2>What it does</h2>\n<ul>\n<li>Takes Royalty-free MP3s</li>\n<li>Convert MP3 to WAV to numpy array</li>\n<li>Creates an LSTM RNN training the numpy array 'unsupervised'</li>\n<li>NEVER FINISH- Convert generated numpy array back into a wav file. </li>\n</ul>\n<p>It's pretty much stuck at 'proof of concept'</p>\n<h2>How I built it</h2>\n<p>First off, we used a curl script to download 600 songs, then we processed all that data using python to convert it into a WAV and numpy array. Afterwards, we used Tensorflow and Keras to create a LSTM model to train the data on \"itself\" per se and essentially have some sort of method of teaching it unsupervised.</p>\n<h2>Challenges I ran into</h2>\n<ul>\n<li>LOTS OF DATA - ~30GB -&gt; 200MB. Audio is extremely dense. We tried to doing short time fourier transforms. Then spectrograms, etc...</li>\n<li>VERY SLOW - Eta from 7 hours (locally on computer) to 5 minutes (maxed out cloud computer)</li>\n<li>Optimizations </li>\n</ul>\n<h2>Accomplishments that I'm proud of</h2>\n<ul>\n<li>A model that successfully compiles and trains</li>\n<li>A cloud computer that successfully runs it</li>\n<li>Preprocessing 70GBs</li>\n</ul>\n<h2>What I learned</h2>\n<ul>\n<li>Created a LSTM model</li>\n<li>How audio files work</li>\n</ul>\n<h2>What's next for Audio Deep Learning</h2>\n<ul>\n<li>More optimized pre processing</li>\n<li>More optimized model</li>\n<li>Generating audio from the model's output.</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">keras</span></li><li><span class=\"cp-tag\">theano</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">cloud-computing</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://pastebin.com/NHKC6E5r\" rel=\"nofollow\" target=\"_blank\" title=\"http://pastebin.com/NHKC6E5r\">\n<i class=\"ss-icon ss-link\"></i>\n<span>pastebin.com</span>\n</a></li>\n<li><a href=\"http://www.64Stacks.com\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.64Stacks.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.64Stacks.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Created the datasets to train the NN, including spectrograms. ", "", ""]], ["Something Good", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Something Good \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/432/067/datas/gallery.jpg\"/>\n<p>\n<i>A map view shows the clustered reactions</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Something Good \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/432/068/datas/gallery.jpg\"/>\n<p>\n<i>Our graphs offer more analytical views of the same data</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Something Good \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/432/110/datas/gallery.jpg\"/>\n<p>\n<i>Our news feed shows you the news and the emotional reactions to each article</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Something Good \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/432/165/datas/gallery.jpg\"/>\n<p>\n<i>Scraped Facebook data that is stored in Mongo DB and actually real</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>Something Good</h1>\n<h3>Visualizing the world as a better place using sentiment analysis from social media</h3>\n<hr/>\n<h2>Inspiration</h2>\n<p>We are at a point where news outlets aren't trusted and people are tired of the negativity of the news. We wanted to build a system that will show community members what their community is feeling about local events and news. We wanted community leaders to be able to see how their constituents are reacting to local events and to see the overall demeanor of the community so they can better guide their work.</p>\n<h2>What it does</h2>\n<p><em>Something Good</em> takes data from social media regarding emotional responses to local news, it synthesizes that data and organizes it, then makes it available to our front-end visualizer interface real-time. </p>\n<h2>How we built it</h2>\n<p>We designed the system to be platform agnostic throughout the stack. Our backend scrapes Facebook pages of local news outlets for the community's emotions regarding specific journalism and gives a sentiment score to each article/post. It then sends that sentiment analyzed data to our middleware server that aggregates the data and organizes it into a Mongo DB, then it makes that available to our front end visualizer. Our visualizer then takes the data and makes it sortable and dynamically viewable.</p>\n<h2>Challenges we ran into</h2>\n<p>Facebook's Graph API doesn't allow for more detailed searches based on location like Twitter and Instagram.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We overcame the Facebook API issue by scraping for local news outlets and finding their pages and corresponding ID's which allows us to use the Facebook API to collect more emotional response details.</p>\n<p>We added an easter egg in homage to the old clippy assistant in Windows of old! His name is <em>Earthy</em>!. He's pretty enthusiastic about helping you out!</p>\n<h2>What we learned</h2>\n<p>Sentiment analysis. </p>\n<h2>What's next for Something Good</h2>\n<p>We'd like to expand the data set by location and cover at least the continental US. We would also like to enhance the aesthetic of some of the graphs.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag\">vue</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/facebook-graph\">facebook-graph</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://hacktx-emotions.herokuapp.com/\" rel=\"nofollow\" target=\"_blank\" title=\"https://hacktx-emotions.herokuapp.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>hacktx-emotions.herokuapp.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Worked on the python middleware server but we ended up switching to express. ", "", "", "", ""]], ["Pictolate", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Pictolate \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/432/022/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Pictolate \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/432/023/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Pictolate \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/432/024/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Pictolate \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/432/025/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We wanted a way to learn a foreign language by simply taking a photo of an object.</p>\n<h2>What it does</h2>\n<p>Pictolate is a platform and Web-based application used to take a picture, analyze its contents, and convert it to a foreign language.</p>\n<h2>How we built it</h2>\n<p>We developed Pictolate in Node.js, Javascript, HTML, CSS, and employed the use of RapidAPI, Google Cloud Platform, and Microsoft's Computer Vision API.</p>\n<h2>Challenges we ran into</h2>\n<p>We did not have enough time to extend our platform to Android and iOS devices, so we were only able to build a Web-based application for now to interact with our platform.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>As first-year college students attending our first hackathon, we had never built a web server, written any JavaScript, nor implemented any API before.  Twenty-four hours later, we have built a working backend platform that can be easily extended to mobile and works as a Web-based application.</p>\n<h2>What we learned</h2>\n<p>We learned how to build a web server, develop webpages using JavaScript/HTML/CSS, use Node.js, and implement and connect multiple APIs.</p>\n<h2>What's next for Pictolate</h2>\n<p>We plan to continue working on Pictolate to host our web server publicly and extend our platform to Android and iOS devices.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/rapidapi\">rapidapi</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-cloud\">google-cloud</a></span></li><li><span class=\"cp-tag\">microsoft-computer-vision</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/github\">github</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/git\">git</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/klin1344/Pictolate\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/klin1344/Pictolate\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Developed front-end in HTML and CSS, designed the UI, worked on server node.js file, implemented mustache templating, and helped with front-end/back-end integration. ", "", "", ""]], ["Troll Call", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Troll Call \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/993/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Prank calling is boring now.</p>\n<h2>What it does</h2>\n<p>Makes two people call each other and you can listen in to hear the confusion.</p>\n<h2>How we built it</h2>\n<p>Python/Flask for backend and HTML/CSS/JS for front end. Jinja2 for templating.</p>\n<h2>Challenges we ran into</h2>\n<p>Morality of our product.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>It works.</p>\n<h2>What we learned</h2>\n<p>Prank calling isn't so boring anymore.</p>\n<h2>What's next for Troll Call</h2>\n<p>Venture capital.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag\">semantic-ui</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://trollcall.us/\" rel=\"nofollow\" target=\"_blank\" title=\"http://trollcall.us/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>trollcall.us</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["FactTube", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"FactTube \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/973/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"FactTube \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/971/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"FactTube \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/972/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"FactTube \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/976/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We were inspired to build this product because of the election. With this extension, fact checking, in addition to understanding context, has never been easier.</p>\n<h2>What it does</h2>\n<p>With FactTube, users will enter a YouTube URL, and then the webapp will display the video on a separate page. As the video plays, topics will pop up below the video. Clicking on a topic will pull up the Wikipedia article for the topic and Bing News about the topic.</p>\n<h2>How we built it</h2>\n<p>Check out the built-with tags.</p>\n<h2>Challenges we ran into</h2>\n<p>The hardest (and also easiest) part of this product is getting the captions from YouTube, as there is no official way to do this.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>The entire thing! We functioned smoothly as a team, communicated well, and built a product that we are all proud of.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/tornado\">tornado</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/wikipedia\">wikipedia</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/youtube\">youtube</a></span></li><li><span class=\"cp-tag\">microsoft-entity-linking-intelligence-service</span></li><li><span class=\"cp-tag\">bing-news-search</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://www.facttube.org/\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.facttube.org/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.facttube.org</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the backend and on helping everybody out with anything they needed.", "I worked on the front-end with HTML, CSS, and utilized Handlebars.js to help with content templating. ", "I used Javascript to work on getting information from the back end and displaying it on the front end.", "I worked on backend and helped team to integrate Fact Tube platform with other third parties API. "]], ["Temperature, Sound, and Light-sensing Arduino 101", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Temperature, Sound, and Light-sensing Arduino 101 \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/851/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Temperature, Sound, and Light-sensing Arduino 101 \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/852/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>I couldn't figure out what I wanted to do as a project, and I tried learning java and using android studio for the first time on Saturday afternoon. Before dinner on Saturday, I was looking at all the inventory for things to make something, and since there wasn't much left, I decided to use the Arduino 101.</p>\n<h2>What it does</h2>\n<p>First thing it does is take an average of 100 measurements for each of the sensors to have an initial average so that the weights of subsequent measurements would be clear to see. Then, it displays the current light level in lux on the screen, while continuing to do a cumulative weighted average of subsequent values and refreshes the average value, current value and screen every 0.2 seconds. The screen's backlight changes color near continuously, depending on how far away the current value is from the average value, green for very close and red for further away. Then, by pressing a button, you change views and now the screen displays sound level in dB, with a similar backlighting scheme that again adjusts the backlight color according to the difference between the current value and and the average value. By pressing the button again, you change the scene to temperature with the same backlighting scheme. Pressing the button again puts you back at light level. Holding the button just cycles through the different scenes continuously.</p>\n<h2>How I built it</h2>\n<p>Very carefully. Using a thermristor, a photo-resistor, a sound sensor, a button, and and RGB display, I connected all the components onto a base shield and then put those on an Arduino 101. The software required 3 while loops inside of the void loop, which corresponded to each of the different scenes.</p>\n<h2>Challenges I ran into</h2>\n<p>Arduinos only return 10-bit values from analog inputs, from 0 to 1023, so I had to first convert them to voltage and then find equations online to figure out how to turn either the analog inputs or the voltage into units of dB, temperature, and lux, which was hard to find.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Coming up with he logarithmic equations which relate the absolute value of the difference between the average and current values to values of red and green for the backlight. I had to find the maximum logarithm of the absolute difference (keeping in mind that log(0) is undefined so if the absolute difference was 0 bad things would happen). Implementing the equations for finding the actual ambient sound, temperature, and lux from the analog values I received.</p>\n<h2>What I learned</h2>\n<p>I learned how to use the Arduino IDE for the first time.  I initially tried learning java and android studio, and some things stuck, but not much. Also, I got hand on experience in the Arduino IDE, and learned that the analog input for Arduino are basically voltages between 0 and 5V. Also, seeing as much of the syntax and the typing is very similar to java and C++, I think that by using the Arduino IDE I broadened my coding skills.</p>\n<h2>What's next for Temperature, Sound, and Light-sensing Arduino 101</h2>\n<p>Probably nothing lol.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/humdogm/sensorArduino\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/humdogm/sensorArduino\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I did everything."]], ["Unforgetimals", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Unforgetimals \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/879/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Unforgetimals \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/880/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Unforgetimals \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/881/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>One of the problems faced by the elderly, especially the widowed with dementia, is the heartbreaking crush of losing loved ones they have cared for their whole life. Our application seeks to introduce \u201cemotional support\u201d and care into life while delivering activity statistics and reducing the pace of dementia. </p>\n<h2>What it does</h2>\n<p>Our application is designed to run on an Android phone attached to a life-sized pet analog, such as a plush toy; it interacts with its user periodically through quests. Studies have shown that logical reasoning slows down dementia and the onset of Alzheimer\u2019s. Our device seeks to mitigate the effects of memory loss by introducing logical games based on caring for the animal. Occasionally, the phone attached to the plush animal will make noises such as a cat\u2019s yearning for attention; the animal will seek a specific item, such as a fur brush, and until that item is found, the animal will continue to express displeasure and seek attention. This logical game attempts to make the patient locate the correct item, and then apply that item to the device in a caring way. This is achieved by NFC and NFC tags; the device\u2019s smartphone is programmed to seek an item that carries a specific NFC identifier. </p>\n<h2>How we built it</h2>\n<p>Unforgetimals is build using Cordova and HTML, JavaScript, and CSS. The user interface is based on Materialize CSS, an open source CSS framework. </p>\n<h2>Challenges we ran into</h2>\n<p>The unique architecture of Cordova presented challenges, specifically, issues revolving around the OnDeviceReady event and accelerometer measurements. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>The application has a fluid user interface that is straightforward to use, and is relatively bug-free. </p>\n<h2>What's next for Unforgetimals</h2>\n<p>Unforgetimals can be extended by adding more quest activities; it can also undergo more extensive NFC tag testing. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/apache\">apache</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/kaellel/unforgetimals\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/kaellel/unforgetimals\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]]]