[["BSChecker", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>School</p>\n<h2>What it does</h2>\n<p>Checks Grammar for our essays</p>\n<h2>How we built it</h2>\n<p>Java and Open NLP</p>\n<h2>Challenges we ran into</h2>\n<p>The contextual side of writing that computers just don't get. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We managed to get here</p>\n<h2>What we learned</h2>\n<p>A lot</p>\n<h2>What's next for BSChecker</h2>\n<p>To make it better</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/MXProgrammingClub/Codestellation2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/MXProgrammingClub/Codestellation2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", "", "", "", ""]], ["MANHUNT", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Making technology social.</p>\n<h2>What it does</h2>\n<p>Tracks the geolocation of a user. Stores all user and game information in database.</p>\n<h2>How we built it</h2>\n<p>Spark web application with Vertica database.</p>\n<h2>Challenges we ran into</h2>\n<p>Java is a very difficult language to build a web app with. It was also difficult to configure the Vertica database.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>The Vertica database successfully stores information, and the app has much of the necessary functionality.</p>\n<h2>What we learned</h2>\n<p>We learned about the Vertica database, web development with Java, HTML, CSS, javascript, and the Google geolocation API.</p>\n<h2>What's next for MANHUNT</h2>\n<p>Tracking other user's geolocations, improving security and sessions, finishing some more core functionality.</p>\n<p>Qualifies for: Beginner, database, web app.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/particle\">particle</a></span></li><li><span class=\"cp-tag\">vertica</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag\">api</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/gps\">gps</a></span></li></ul>\n</div>\n</div>", ["", "", "", ""]], ["Imitationga.me", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>IO games and peer-to-peer computing</p>\n<h2>What it does</h2>\n<p>It is a competitive Turing Test administrator where players chat with each other trying to figure out who is the chatbot.</p>\n<h2>How we built it</h2>\n<p>We used the MEAN stack</p>\n<h2>Challenges we ran into</h2>\n<p>NodeJS</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We were able to make a bot interact with our application through the MEAN stack</p>\n<h2>What we learned</h2>\n<p>We were able to learn and utilize the MEAN stack</p>\n<h2>What's next for Imitationga.me</h2>\n<p>In the future, there will be leaderboards where people can compare their scores with each other. We are also hoping that we can implement a way for players to submit their own bots.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mean\">mean</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/socket-io\">socket.io</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Potato-Salad/turing-web\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Potato-Salad/turing-web\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I was in charge of creating a way of interacting with chat bots. I developed a python program using an online api to communicate with cleverbot. I also wrote a python script to upload AIML to the Pandorabot servers to create chatbots, as well as interact with them. Lastly, I wrote a javascript program to allow our MEAN stack to interact with the bots.", "", "", "", ""]], ["Art-amiss", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Art-amiss \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/960/datas/gallery.jpg\"/>\n<p>\n<i>screenshot of adjustment interface</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Art-amiss \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/893/datas/gallery.jpg\"/>\n<p>\n<i>Noisy contour finding</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Art-amiss \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/894/datas/gallery.jpg\"/>\n<p>\n<i>Segmentation and region labeling</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Art-amiss \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/895/datas/gallery.jpg\"/>\n<p>\n<i>Overlayed over image color palette</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Art-amiss \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/896/datas/gallery.jpg\"/>\n<p>\n<i>Interactive reconstruction of original image</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Art-amiss \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/903/datas/gallery.jpg\"/>\n<p>\n<i>Fourier based, anti intuitive motion of the image</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>When humans look at abstract art, they get a sense that each work is composed of a series of shapes, curves, lines, or general objects. We also have an intuition about how those objects would move if they pushed, pulled, or otherwise manipulated, <strong>even though we've never seen an abstract painting move before</strong>.</p>\n<p>Our project focused on teaching computers the unspoken and intuitive shared experience of imagining interacting with abstract art. We also investigated what happened when we made art move in a precisely unintuitive way.</p>\n<h2>What it does</h2>\n<ul>\n<li>First, we use KMeans and marching cubes in order to evaluate <strong>noisy counters</strong> for the image.</li>\n<li>Next, we smooth the counters via <strong>L1-regularized curve fitting and LASO regression</strong>.</li>\n<li>Next, we use <strong>region growing algorithms</strong> to section off our image into distinct color zones.</li>\n<li>Finally, we build a <strong>k-NN bitmap projection</strong> of the image. It looks like the original, but it is interactive!</li>\n<li>The resulting render is composed of curves that can be intuitively manipulated with shifts, stretches, and rotations.</li>\n</ul>\n<p>In order to create anti-intuitive manipulations, we use <strong>the Fourier phase shift principle</strong> in order to change the often-assumed and rarely-modified phase space of the frequency domain.</p>\n<h2>How we built it</h2>\n<p>With machine learning, numpy, and love &lt;3.</p>\n<h2>Challenges we ran into</h2>\n<p>Machine learning is always very difficult to get right, especially when you are rolling the algorithm by hand.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We think the demo is pretty cool.</p>\n<h2>What we learned</h2>\n<p>We learned <em>a ton</em> about the current state of image analysis and standard techniques involved in forming color palettes, segmenting images, and de-noising contours.</p>\n<h2>What's next for Art-amiss</h2>\n<p>We're going to deploy it to a server so other people can try it out!</p>\n<h2>What prizes?</h2>\n<p>Please kindly consider us for:</p>\n<ul>\n<li>Best use of machine learning</li>\n<li>Best web app</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/machine-learning\">machine-learning</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/ssemenova/acid-trip\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ssemenova/acid-trip\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the bridge between the frontend and the whackify code. This was a flask app that took a JSON of the RGB channels and converted it into an image, which it then whackified. I also cleaned up the whackify code to work better with flask, as well as add the gif creation and upload to imgur, as well as the API endpoints.", "I worked on creating a few different gifs by manipulating the RGB results of the KMeans in different ways. The gifs show how manipulating the results can change the colours of the different regions.", "", ""]], ["Dude, Where's My Car?", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Dude, Where's My Car? \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/428/033/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>Isn't stressful to find where you parked in a parking lot that is filled with hundreds of cars? Well now you can save your location and get directions right to your car.</p>\n<p>Mobile App</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mit-app-inventor\">mit-app-inventor</a></span></li></ul>\n</div>\n</div>", [""]], ["3Dna", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Wanted to visualize what can cause certain traits</p>\n<h2>What it does</h2>\n<p>Takes a trait and finds corresponding SNPs which can be used to compare to a reference genome database that finds the surrounding sequence. The sequence is then taken and can be 3D printed with dual extrusion to showcase the casual SNP bp of interest. </p>\n<h2>How I built it</h2>\n<p>Created small dataframe of traits with corresponding locations in R that can be used to find surrounding sequence by using a human reference genome (any SNP sequence can be found given the coordinates even if not in trait database). Took the associated DNA basepairs and imput it into the DNA sequence to structure program through the Supercomputing Facility for Bioinformatics abd Computational Biology, ITT Delhi which gave us a 3D model. We then imported the file into Chimera to make it into an .STL file. The file was then put into blender and the mutated basepair was highlighted and separated. The whole file was then put into Simplify 3D and dual extruded through a 3D printer.</p>\n<p>We'd like to be considered for best use of a database. </p>\n<h2>Challenges I ran into</h2>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<h2>What's next for 3Dna</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/r\">r</a></span></li><li><span class=\"cp-tag\">chimera</span></li><li><span class=\"cp-tag\">simplify3d</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/blender\">blender</a></span></li><li><span class=\"cp-tag\">snpedia</span></li><li><span class=\"cp-tag\">scfbio-iid.res/software/drugdesign/bdna/jsp#</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/feylix/3Dna\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/feylix/3Dna\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Movie-Music-Maker", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We like hearing music from Star Wars, superhero movies, and star trek.  We thought that it would be cool if we made a website where we could hear music that represents a character or a series.</p>\n<h2>What it does</h2>\n<p>The website prompts the user to pick a fandom, and a character or series. Then music plays that represents the character and series.</p>\n<h2>How we built it</h2>\n<p>We Used html,CSS, javascript, jquery, and soundcloud </p>\n<h2>Challenges we ran into</h2>\n<p>We tried to link out html pages together, but for some reason, we could not link them together. We tried several ways including using id elements, and href, but they did not work. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We managed to make a working interactive website despite having 2 members with little experience in web development.</p>\n<h2>What we learned</h2>\n<p>Learn the basics of web development.</p>\n<h2>What's next for Movie-Music-Maker</h2>\n<p>Include more character portraits.\nLink the html pages together through a navigation bar that works.\nMake the website more aesthetically pleasing.\nClean out redundant code.</p>\n<p>We wish to be considered for best beginner hack</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/soundcloud\">soundcloud</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/eliperr/Movie-Music-Maker\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/eliperr/Movie-Music-Maker\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["VRinstagram", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to bring the idea of Instagram to VR space</p>\n<h2>What it does</h2>\n<p>Allows interaction with a VR image interface. Users can access various preset photo profiles. The photos within the profile can then be selected for panorama viewing by way of looking at them/ looking at them and pressing google gear button if applicable.</p>\n<h2>How we built it</h2>\n<p>built the product within unity using c# and javascript for google cardboard</p>\n<h2>Challenges we ran into</h2>\n<p>Understanding and implementing solutions within unity</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We have an aesthetically pleasing product that works as the MVP we wanted</p>\n<h2>What we learned</h2>\n<p>Many many components of unity</p>\n<h2>What's next for VRinstagram</h2>\n<p>adding full server support, implementing Instagram API, possibility for sharing profiles and liking them. More photo interaction </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-gears\">google-gears</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://drive.google.com/open?id=0B7t9P6IhHV73VUs1WWNkbDVZTTQ\" rel=\"nofollow\" target=\"_blank\" title=\"https://drive.google.com/open?id=0B7t9P6IhHV73VUs1WWNkbDVZTTQ\">\n<i class=\"ss-icon ss-link\"></i>\n<span>drive.google.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Reciplease", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Reciplease \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/975/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Reciplease \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/976/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Reciplease \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/977/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<ul>\n<li>Best web/mobile app</li>\n<li>Best use of Database</li>\n</ul>\n<h2>Inspiration</h2>\n<p>We never know what to cook with all the ingredients in the kitchen. </p>\n<h2>What it does</h2>\n<p>It suggests you a recipe which contain only the ingredients you have in your pantry.</p>\n<h2>How we built it</h2>\n<p>We used Android Studio and Java to program the entire project.</p>\n<h2>Challenges we ran into</h2>\n<p>Trying to set up a database was a big problem since the data was too huge</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>The design of the app and the efficiency at which its gets the information from the database.</p>\n<h2>What we learned</h2>\n<p>We learned that planning is very important which we're really proud of.</p>\n<h2>What's next for Reciplease</h2>\n<p>Expanding it to more database and add more features.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/adobe-illustrator\">adobe-illustrator</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["Pyo Drone", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Pyo Drone \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/428/020/datas/gallery.jpg\"/>\n<p>\n<i>The tools we have</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Pyo Drone \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/428/022/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Pyo Drone \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/428/012/datas/gallery.jpg\"/>\n<p>\n<i>Debugging with an Oscilloscope</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Pyo Drone \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/428/013/datas/gallery.jpg\"/>\n<p>\n<i>Finding time values for the PPM signal</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>What is the project?</h2>\n<p>We used a Myo armband to control the throttle, pitch, and roll of a very small quad-copter. It takes in data from the Myo about arm position and gestures , using PyoConnect to get the data into Python. It then sends that data to a radio transceiver, which tells the quad-copter what to do.</p>\n<h2>Why did we make it?</h2>\n<p>We thought it would look really, really cool. </p>\n<h2>Did we achieve our goal</h2>\n<p>Yes. It looked even cooler than we expected.</p>\n<h2>How did we do it?</h2>\n<p>So, as it happens, PyoConnect is has some great tools in the form of very useful callback functions, where we could put code to adjust the controls to our quadcopter. Once we found the right version, we created a program that would constantly send a signal to our transceiver and update the signal on arm movement.</p>\n<p>Going from the radio to the quadcopter was very easy - it is what it's meant for. </p>\n<p>The last piece was the fun part. There is no communication protocol set up to go from laptops to the average transceiver used for controlling drones. However, most transceivers have a port for receiving PPM (pulse position modulation), to allow for master/slave controllers. By outputting PPM from our audio jacks - yes, you did read that right, we had to output our instructions through the <em>audio jack</em> - we could have the computer act as the slave controller, sending instructions through the real transceiver to the drone. This completed our Myo - computer - transceiver - quadcopter chain or hardware hacks. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We developed a module in Python that could be imported to any program, that would allow a computer to act like a radio for anyone with an aux cable and an existing transceiver. </p>\n<h2>What we learned</h2>\n<p>Audio is difficult to work with in Python - and, you <em>can</em> debug code with an oscilloscope.</p>\n<h2>What's next for Pyo Drone?</h2>\n<p>We are considering making our PPM code open source, as well as putting it on the python package index.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/SeanCCarter/myo-quadcopter-controller\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/SeanCCarter/myo-quadcopter-controller\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Arrowood Registration Software", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Arrowood Registration Software \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/994/datas/gallery.jpg\"/>\n<p>\n<i>Login</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Arrowood Registration Software \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/995/datas/gallery.jpg\"/>\n<p>\n<i>Forgot Password</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Arrowood Registration Software \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/996/datas/gallery.jpg\"/>\n<p>\n<i>Welcome</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Arrowood Registration Software \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/997/datas/gallery.jpg\"/>\n<p>\n<i>Dashboard</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Arrowood Registration Software \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/998/datas/gallery.jpg\"/>\n<p>\n<i>Sign Up</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>Arrowood Registration Software is built on Facebook's React ES6 JavaScript framework and Google's Firebase. \nWith summer camp registration in mind, Arrowood Registration Software is a paperless solution that also provides access to the data on any device at any time (as long as it is connected to the internet). In the past 24 hours I have set up user authentication and set up higher-order component rendering based on a user's userType. The next step is to complete the dashboard components and implement data analytic functions like demographic marketing analysis and average annual retention rate. In the future I hope to use React Native to deploy my application to both iOS and Android devices.\nI'm also looking for a front-end developer who knows Sass and is familiar with, or at least willing to learn some React basics, so they can manage all the UI design and I can focus on the routing, database functionality, and data management. Contact me at <a href=\"mailto:ethan.arrowood@gmail.com\" rel=\"nofollow\">ethan.arrowood@gmail.com</a> if you are interested!</p>\n<p>Prize's I am eligible for:</p>\n<ul>\n<li><p>Best Use of a Database (Any database! = Firebase)</p></li>\n<li><p>Best Beginner Hack (everyone on your team must be a first time hackathon attendee)</p></li>\n<li><p>Best web/mobile app</p></li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/react\">react</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/redux\">redux</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Ethan-Arrowood/arrowood-registration-software\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Ethan-Arrowood/arrowood-registration-software\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Hey, DJ!", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>import speech_recognition as sr\nimport os\nimport pyaudio, wave\nimport urllib\nimport urllib2\nfrom bs4 import BeautifulSoup\nimport re\nimport pafy\nimport vlc</p>\n<p>import RPi.GPIO as GPIO\nfrom time import sleep</p>\n<p>GPIO.setmode(GPIO.BCM)\ntogglePin = 23\nresetPin = 5</p>\n<h1>sets up the button</h1>\n<p>GPIO.setup(togglePin, GPIO.IN, pull_up_down = GPIO.PUD_UP)\nGPIO.setup(resetPin,GPIO.IN, pull_up_down = GPIO.PUD_UP)</p>\n<h1>0: waiting for wake word/reset button to be clicked</h1>\n<h1>1: start recording and analyze and download</h1>\n<h1>2: playing song</h1>\n<h1>3: song is played</h1>\n<h1>4: song is paused</h1>\n<p>global audioplaying, songName\nBUFFER_SIZE = 512\nREC_SECONDS = 5\nRATE = 44100\nWAV_FILENAME = \"request.wav\"\nFORMAT = pyaudio.paInt16\ni = vlc.Instance()\np = i.media_player_new()</p>\n<p>def main():\n    record()\n    title = analyze()\n    songName = title.strip()\n    return songName</p>\n<p>def record():\n    pa = pyaudio.PyAudio()\n    stream = pa.open(\n        format=FORMAT,\n        input=True,\n        channels=1,\n        rate=RATE,\n        input_device_index=2,\n        frames_per_buffer=BUFFER_SIZE\n    )\n    # run recording\n    print('Recording...')\n    data_frames = []\n    for f in range(0, RATE // BUFFER_SIZE * REC_SECONDS):\n        data = stream.read(BUFFER_SIZE)\n        data_frames.append(data)\n    print('Finished recording...')\n    stream.stop_stream()\n    stream.close()\n    pa.terminate()</p>\n<pre class=\"language-nolang\"><code>wf = wave.open(WAV_FILENAME, 'wb')\nwf.setnchannels(1)\nwf.setsampwidth(pa.get_sample_size(FORMAT))\nwf.setframerate(RATE)\nwf.writeframes(b''.join(data_frames))\nwf.close()\n</code></pre>\n<p>def analyze():\n    r = sr.Recognizer()\n    with sr.AudioFile(WAV_FILENAME) as source:\n        audio = r.record(source)\n    # recognize speech using Sphinx\n    try:\n        request = r.recognize_google(audio)\n        print(\"We think you said \" + request)\n        audioFile = getSong(request) + \".ogg\"\n        return audioFile\n    except sr.UnknownValueError:\n        print(\"We could not understand audio\")\n    except sr.RequestError as e:\n        print(\"We run into error; {0}\".format(e))</p>\n<p>def getSong(title):</p>\n<pre class=\"language-nolang\"><code>textToSearch = title\nquery = urllib.quote(textToSearch)\nyoutube_id = \"\"\nurl = \"https://www.youtube.com/results?search_query=\" + query\nresponse = urllib2.urlopen(url)\nhtml = response.read()\nsoup = BeautifulSoup(html)\nvid = soup.find(attrs={'class': 'yt-uix-tile-link'})\nyoutube_id = vid['href']\nprint len(youtube_id)\nif len(youtube_id) &lt; 50:\n    url = 'https://www.youtube.com' + youtube_id\n\n    video = pafy.new(url)\n    print(video.title)\n\n    audiostreams = video.audiostreams\n    for a in audiostreams:\n        if (a.extension == 'ogg'):\n            a.download()\n            return video.title\nelse:\n    return 'nope'\n</code></pre>\n<p>try:\n    songName = \"\"\n    state = 0\n    while True:\n        toggle_button_state = GPIO.input(togglePin)\n        reset_button_state = GPIO.input(resetPin)\n        if state == 0:\n            if not reset_button_state:\n                state = 1\n                print 'Yo! Are you ready to get lit'\n                songName = main()\n                if songName == 'nope':\n                    print 'sorry we ran to error, try again!'\n                    state = 0\n                else:\n                    state = 2\n                sleep(1)\n        elif state == 2:\n            print 'We got your song fam, it is '\n            if toggle_button_state:\n                print songName + \". gonna play it now!\"\n                m = i.media_new(songName)\n                p.set_media(m)\n                p.audio_set_volume(100)\n                p.play()\n                state = 3\n        elif state == 3:\n            if toggle_button_state and reset_button_state:\n                continue\n            elif not toggle_button_state:\n                print \"We got you, pausing song\"\n                p.pause()\n                state = 4\n                sleep(1)\n            elif not reset_button_state:\n                print \"Another song? Ok!\"\n                p.stop()\n                state = 1\n                songName = main()\n                state = 2\n                sleep(1)\n        elif state == 4:\n            if not toggle_button_state:\n                print \"Ready to get lit again? Awesome!\"\n                p.play()\n                state = 3\n                sleep(1)\n            if not reset_button_state:\n                print \"Tired of this song? no problem!\"\n                p.stop()\n                state = 1\n                songName = main()\n                state = 2\n                sleep(1)</p>\n<p>finally:\n    #resets the GPIO pins to a safe state\n    GPIO.cleanup()</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">vlc</span></li><li><span class=\"cp-tag\">pythonurl</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li><li><span class=\"cp-tag\">speaker</span></li><li><span class=\"cp-tag\">mic</span></li><li><span class=\"cp-tag\">breadboard</span></li><li><span class=\"cp-tag\">leds</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/bdatdo0601/DAEACC\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/bdatdo0601/DAEACC\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I wrote the script to take the song, find it on youtube, and then download the audio file.", "Worked on the code that was used for the hot word.", ""]], ["TableC", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"TableC \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/946/datas/gallery.jpg\"/>\n<p>\n<i>(mockup)2.2 pick</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"TableC \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/947/datas/gallery.jpg\"/>\n<p>\n<i>(mockup)1.1 signup </i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"TableC \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/948/datas/gallery.jpg\"/>\n<p>\n<i>(mockup)1.2 signup</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"TableC \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/949/datas/gallery.jpg\"/>\n<p>\n<i>(mockup)2.1 pick</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"TableC \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/950/datas/gallery.jpg\"/>\n<p>\n<i>(mockup)3.2 join</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"TableC \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/951/datas/gallery.jpg\"/>\n<p>\n<i>(mockup)3.1 join</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"TableC \u2013 screenshot 7\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/952/datas/gallery.jpg\"/>\n<p>\n<i>(mockup)3.3 join</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"TableC \u2013 screenshot 8\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/954/datas/gallery.jpg\"/>\n<p>\n<i>(mockup)4.2 host</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"TableC \u2013 screenshot 9\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/955/datas/gallery.jpg\"/>\n<p>\n<i>(mockup)4.1 host</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"TableC \u2013 screenshot 10\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/964/datas/gallery.jpg\"/>\n<p>\n<i>(prototype) 2</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"TableC \u2013 screenshot 11\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/965/datas/gallery.jpg\"/>\n<p>\n<i>(prototype) 1</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"TableC \u2013 screenshot 12\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/966/datas/gallery.jpg\"/>\n<p>\n<i>(prototype) 4</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"TableC \u2013 screenshot 13\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/967/datas/gallery.jpg\"/>\n<p>\n<i>(prototype) 3</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"TableC \u2013 screenshot 14\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/968/datas/gallery.jpg\"/>\n<p>\n<i>(prototype) 5</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>At any community dining venues, the phenomenon of people eating alone reluctantly is ubiquitous. Most people slowly enter into the tables and takes a full look of the place, looking for people to eat with. Unfortunately, there are almost always the failure cases. Habits of eating alone reluctantly leads to loneliness and depression, feeling disconnected to the community. In addition, it's hard to meet new people who share similar interest over a regular meal within a sizable community.</p>\n<h2>What it does</h2>\n<p>TableC creates \"purpose driven meals\", connecting you to new friends by matching meal buddies with topics of shared interest. For anybody who does not want to eat alone and wants to meet a new friend, TableC curates various conversation topics for a specific meal of a day at a specific location. Akin to entering into an online game server/room, the app lets you either create or join meal conversation topics to eat with like-minded people, have great conversations, with great new friends.</p>\n<h2>How we built it</h2>\n<p>Within 24 hours, we built the fully-designed mock-up, along with our prototype that's built with Angular2 and Ruby on Rails.</p>\n<h2>Challenges we ran into</h2>\n<p>Deploying all the functions including automatic location recognition and setting \"nearby distance\" function.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We built a working prototype with limited time and resources.</p>\n<h2>What we learned</h2>\n<p>What started as an idea can be visualized and put into a working prototype in 24 hours.</p>\n<h2>What's next for TableC</h2>\n<p>Developing our prototype further and testing it to college market in both technical and non-technical way.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">angular2</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ruby-on-rails\">ruby-on-rails</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/code-matt/table_c\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/code-matt/table_c\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Codestellation 2016 Skypenet Happy", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Codestellation 2016 Skypenet Happy \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/969/datas/gallery.jpg\"/>\n<p>\n<i>Cheeky bot</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to build something with a little bit of AI that could produce text, audio, and some 3d images. We thought the project would be cool and did not know of any existing equivalents.</p>\n<h2>What it does</h2>\n<p>A skype call bot that talks cheekily to users.</p>\n<h2>How we built it</h2>\n<p>Lots of guesswork and integration</p>\n<h2>Challenges we ran into</h2>\n<p>API bugs galore. Deprecated APIs. Thinking features in a demo would be available to devs</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We have a thing that works and, so far as we know, does not exist elsewhere.</p>\n<h2>What we learned</h2>\n<p>Lots of stuff about program and hardware/software integration. We also learned to never trust Microsoft.</p>\n<h2>What's next for Codestellation 2016 Skypenet Happy</h2>\n<p>3d models! Stronger, Smarter AI! A more smooth user experience!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/visual-basic\">visual-basic</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/microsoft-hololens\">microsoft-hololens</a></span></li><li><span class=\"cp-tag\">paint</span></li><li><span class=\"cp-tag\">vb-cable</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/skype\">skype</a></span></li><li><span class=\"cp-tag\">recognition</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ttsengine\">ttsengine</a></span></li><li><span class=\"cp-tag\">monitor</span></li><li><span class=\"cp-tag\">men</span></li><li><span class=\"cp-tag\">twilight</span></li><li><span class=\"cp-tag\">monster</span></li><li><span class=\"cp-tag\">nature-valley</span></li><li><span class=\"cp-tag\">sleep-deprivation</span></li></ul>\n</div>\n</div>", ["", ""]], ["ColorMind", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>What it does</h2>\n<p>The extension crawls through webpages looking for elements with color, and applies new CSS rules to them to change their color to something more user-friendly/</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/joeylmaalouf/ColorMind\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/joeylmaalouf/ColorMind\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]]]