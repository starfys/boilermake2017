[["SpitBars", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"SpitBars \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/304/604/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>What is SpitBars?</h2>\n<p>SpitBars is a standalone application (web app in development) that uses an algorithm that can generate statistics for the qualities of a 'good rap' in a rap battle based on thorough research of scholarly articles, blog posts and community forums that discuss the subject. </p>\n<h2>What does it do? How?</h2>\n<p>Our application uses several libraries and APIs, such as Google Speech Recognition and PyAudio, to transcribe the lyrics from each battling rapper. We then use our critical algorithm developed in Python to judge the rap based on several factors, such as: total rhymes, rhyme density, average word complexity, usage of alliterations, and # of unique words. We then quantize and analyze this data, allowing us the say who, based on cold hard facts, is indeed the better rapper out of the battling group.</p>\n<h2>Why we did it?</h2>\n<p>Rap is the one of the most revolutionary sociocultural movements of the 21st Century and as rap fans, all of us feel like there were not enough contributions in the field of rap and hip hop in the technology industry. From this love of computer science and hip hop, spitBars was born.</p>\n<h2>What makes it special?</h2>\n<p>This is the first of a kind platform that allows rappers to find try quantifiable results to who won a rap battle. This application has a wealth of growth potential, allowing it to move online where there could be nationwide competitions, to phones where individual users could work on their craft. It is the future of hip-hop.</p>\n<h2>What it was made with?</h2>\n<p>The program is made with Python and C#.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/nltk\">nltk</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/numpy\">numpy</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-web-speech-api\">google-web-speech-api</a></span></li></ul>\n</div>\n</div>", ["", "", "", ""]], ["ilovelamp", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p><a href=\"http://www.ece.cmu.edu/%7Eece549/spring15/team10/final_report/FinalReport.pdf\" rel=\"nofollow\">This Paper</a> confirmed that the project was possible.</p>\n<h2>What it does</h2>\n<p>Sends information to a phone using visible light as the communications medium (ask me in person for the technical description of how it works).</p>\n<h2>How I built it</h2>\n<p>The iPhone app was built in xcode using the iOS sdk.  The light is powered by logic programmed in Arduino C.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/objective-c\">objective-c</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/opencv\">opencv</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c\">c</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ios\">ios</a></span></li></ul>\n</div>\n</div>", ["Programmed the LEDs and worked with circuitry.  ", "", "", ""]], ["Project-PAC-MAN", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>Project-PAC-MAN</h1>\n<p>First person pac-man on the rift. For KHE 2015</p>\n<p>Uses the Myo for control of the gun to shoot the ghosts.\nUses the pebble to allow movement in game. (See pblt)</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/glsl\">glsl</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Scub3d/Project-PAC-MAN\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Scub3d/Project-PAC-MAN\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Push 2 Party!", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Push 2 Party! \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/302/307/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Our inspiration came from the Netflix and Chill button and many nights where disorganization within our group of friends has shortened the amount of time we can have fun. </p>\n<h2>What it does</h2>\n<p>Our button sends out a text blast to your closest friends and polls them on where everyone wants to got for the night, while simultaneously preparing an Uber and queuing up some tunes! </p>\n<h2>How we built it</h2>\n<p>Caffeine, Python, and a Raspberry PI, and a pretty cool button. </p>\n<h2>Challenges we ran into</h2>\n<p>The initial challenges we faced were issues with complying the correct  results from the polling software we are using. </p>\n<h2>Accomplishments that we are proud of</h2>\n<p>No one lost their cool. Debugging was fairly simple. Fixing the polling software. Getting the button to work.</p>\n<h2>What I learned</h2>\n<p>Python, Python, and more Python. How to troubleshoot the button. How to send notifications through multi-platform channels.   </p>\n<h2>What's next for Push 2 Party!</h2>\n<p>Pull 2 Party, Bop 2 Party, Pass it. Pythong 3.0 lol </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li></ul>\n</div>\n</div>", ["I wrote the Python script for the pushover notifications API. I designed the P2P logo graphic. I drank a lot of Redbull. Was part of the initial brainstorm.  ", "", "", ""]], ["Solid Bands", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Materials </p>\n<h2>What it does</h2>\n<h2>How I built it</h2>\n<h2>Challenges I ran into</h2>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<h2>What's next for Solid Bands</h2>\n</div>\n</div>", [""]], ["Face Card", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We did a graphic recognize system last year in KHE, and this year we want to do something better.</p>\n<h2>What it does</h2>\n<p>It can get data from people's facebook account, save them in our database. After recording several pictures from this person, our system will recognize him/her out through camera, and display the information next to his/her head. We can recognize multiple people at the same time, so I think our system can be used in classroom, meeting or party. Since it read data through camera, we can also aim camera at some old pictures so that it can help us recall old friends in the picture.</p>\n<h2>How I built it</h2>\n<p>Basically it can be divided into three part, information record, face recognize and information display. We used javascript to get data from facebook, and save them into our online database parse. We used python and opencv library to recognize faces, get the coordinate of each face, then get data from database, and display the information dynamically next to the person's head.</p>\n<h2>Challenges I ran into</h2>\n<p>Teaching a machine to learn people's face it not very easy. Building a connection to database it not easy, and display the information dynamically is not easy. Basically every part is a challenge for us.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We were very happy when we finished the information grab part and information display part, but our most exited moment was when all our team members' face were correctly recognized by our system.</p>\n<h2>What I learned</h2>\n<p>Python is not our favorite programming language, but to build this project, we learned a lot about python. Opencv was the library we used last year, but facial recognition is a different field. Also javascript API to facebook is also a big harvest that we got.</p>\n<h2>What's next for Facial Recognition System</h2>\n<p>We want to optimize our algorithm to increase the accuracy of recognition. We also want to encapsulate our project as a mobile app so it can be used more widely in our life.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/opencv\">opencv</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://eshirima.github.io/Face-Card/\" rel=\"nofollow\" target=\"_blank\" title=\"http://eshirima.github.io/Face-Card/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>eshirima.github.io</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the Facebook Graph API for user data retrieval. It was my first time using the API so it was a really interesting learning curve.", "I worked about the data link between online database and local project.  ", ""]], ["MindSweeper", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"MindSweeper \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/302/680/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Inspired by wanting to visualize all of Wikipedia, because all of us like to browse Wikipedia for long periods of time at once. </p>\n<h2>What it does</h2>\n<p>A chrome extension/website/application pairing which takes your wikipedia browsing information, and records your brain data while reading wikipedia, and then is able to visualize the wikipedia pages that you have read, and changes colors based on your perceived engagement with the material, and gives you suggested wikipedia pages to read based upon your history. </p>\n<h2>How I built it</h2>\n<p>The chrome extension is built with Node.js and the website is built with Node.js and html and css, and the Muse app is made using Processing. </p>\n<h2>Challenges I ran into</h2>\n<p>It was very difficult to integrate many modules into the chrome extension. It was hard to communicate between the different parts of the project, because it was worked on by different people. Also, using different languages that we had very little experience with was very difficult. </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>During these 36 hours, we learned more than we thought we could have. We are proud that we finished a product, and that it is useful. </p>\n<h2>What I learned</h2>\n<p>Functional Programming, Node.js, D3, Callbacks, Asynchronous</p>\n<h2>What's next for MindSweeper</h2>\n<p>The next step is perhaps matching together similar users who would like to converse with each other. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/machine-learning\">machine-learning</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/wikipedia\">wikipedia</a></span></li><li><span class=\"cp-tag\">sentiment-analysis</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/richardlizhu/Mindsweeper\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/richardlizhu/Mindsweeper\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Columns-And-Buckets", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Tableau is an expensive GUI for making interactive graphics.  Despite it's price, it has many flaws. A free and better version should exist in 2015.  D3 is a javascript library for creating svg and canvas visualizations.  It has a steep learning curve and is inaccessible to many people who would like to create non-standard visualizations.  </p>\n<h2>What it does</h2>\n<p>One data source (json via get request), one analysis (comparative word count)</p>\n<h2>How I built it</h2>\n<p>Polymer, javascript, bootstrap</p>\n<h2>Challenges I ran into</h2>\n<p>This was my first experience with Polymer.  I made some incorrect assumptions about the framework that cost me time and altered my original design.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I was able to get a working demo put together.</p>\n<h2>What I learned</h2>\n<p>Polymer, time management, the importance of dependency management.</p>\n<h2>What's next for Columns-And-Buckets</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/nathanbreitsch/Columns-And-Buckets\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/nathanbreitsch/Columns-And-Buckets\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Digital Fortress", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Digital Fortress \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/302/488/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Digital Fortress \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/302/490/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Digital Fortress \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/302/487/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Digital Fortress \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/302/491/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>What it does</h2>\n<p>Digital Fortress is a network application that allows you to connect multiple slaves to a single master node. The master node is capable of assigning specific calculations to individual nodes in order complete tasks more efficiently with parallel processing. Under a high load, the Raspberry Pis can get quite warm, so I added built in temperature monitoring in order to keep track of over heating Pis. I built both a Pebble smart watch app as long as an HTML web app that displays the temperature of all connected nodes so it is easy to monitor temperatures from anywhere in the wrold. The master node syncs the name and temperature of each slave node to an Amazon Web Services server so that the data can be accessed from anywhere, even outside of the network. </p>\n<h2>How I built it</h2>\n<p>Java and lots of redbull!\nA large amount of research went into this topic. I had to begin with building a packet system using TCP sockets in order to transfer data between the master and slave nodes in order to maintain an organized workflow. Otherwise, random data flowing everywhere would have just created an infinite number of problems. Not every task is able to be completely in a parallel fashion. Calculations that are dependent on previous calculations are not good candidates for parallel processing because it still ties up the CPUs while they are waiting for information from previous calculations. Calculations such as finding the nth term in the fibonacci sequence however, is a great candidate for cluster computing because each term is independent to the others so they can be calculated in a parallel fashion. </p>\n<h2>Challenges I ran into</h2>\n<p>Sleeping! Oddly enough sleeping was extremely difficult because everytime I was about to fall asleep I was thinking about another feature that I could add in order to give the project some extra pizzaz!\nAnother issue I ran into however was setting up the networking in such a way that it did not create more than a few threads on the master node. I didn't want to open a bunch of threads because the master node is being hosted on a Raspberry Pi Model B, and I did not want to affect the performance of the Pi.\nI also had issues with creating the pebble app. I was not familiar with the API or the IDE that they recommended, so everything was completely foreign to me. Luckily it was just Javascript, so it was easy to pick up on and figure out along the way.</p>\n<h2>What I learned</h2>\n<p>I learned an incredible amount about interconnecting devices through the internet. I had to route the cluster computer's internet through my laptop's ethernet port, and then forward the traffic through my wireless card onto the KSUEvent WiFi network. I learned alot while researching uses parallel processing and how exactly it works.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/pebble\">pebble</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php5\">php5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/dfanara/Fortress\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/dfanara/Fortress\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Friski", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Friski \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/302/336/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Friski \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/302/337/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Friski \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/302/338/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>With Friskie, you can sort through cats and cast your judgement on them with no other particular end goal in mind. </p>\n<p>We built Friskie with the intention of using it as a system for animal adoption by the ASPCA. It would also serve as an enjoyable time killer and stress reducer. </p>\n<p>We predict the adoption rate of Friskie would be extremely rapid. This is because, cats are simply more viral than dogs in video. </p>\n<p>\"When advertisers are deciding which creative direction to take, data can help. One big finding we uncovered this year was that cat videos are significantly more watched than dog videos online. We looked at the 100 most-watched clips for both furry friends and aggregated their performance. Cat videos have generated over 1.6 billion views. Dog videos have only generated 1 billion views. Cats win on a daily basis as well, with the top 100 videos generating about 1 million views per day. The top 100 dog videos produce 700,000 views on average. So, for the advertiser trying to choose between cats and dogs, audiences watch cats videos more often online\".\n-<a href=\"http://adage.com/article/digitalnext/ten-stats-change-video-2013/238915/\" rel=\"nofollow\">http://adage.com/article/digitalnext/ten-stats-change-video-2013/238915/</a></p>\n<p>We would seek to integrate paid advertising into the stream of Cats. Friskie would also donate a portion of its proceeds to benefit animal shelters. </p>\n<p>Friskie was build on a LAMP stack using the <a href=\"http://thecatapi.com/\" rel=\"nofollow\">http://thecatapi.com/</a></p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php5\">php5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/phpmyadmin\">phpmyadmin</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mysql\">mysql</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/linux\">linux</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ubuntu\">ubuntu</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/apache\">apache</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/ChristopherJones72521/friski\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ChristopherJones72521/friski\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"http://getfriskie.com/index2.html\" rel=\"nofollow\" target=\"_blank\" title=\"http://getfriskie.com/index2.html\">\n<i class=\"ss-icon ss-link\"></i>\n<span>getfriskie.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["GTController", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>Its the GrafTech jacket which the fashion school built. Something should control the heat of the jacket. Whats can be good than smartphone</p>\n<p>It controls the jacket heat and also charge tje jacket\nAndriod SDK,Java on Andriod Studio</p>\n<p>Our Team never worked on Andriod before. Building an application in 2 days was a great challenge. </p>\n<p>Andriod developing,Could able to build the applicatiom</p>\n<p>Andriod Java </p>\n<p>The requirements increases the features will be added. That collects the weather data and recommend the temperature.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li></ul>\n</div>\n</div>", ["I worked on the backend. Designed an android mobile application. Used Java as part of my work. I learnt many things and worked on Internet of things about raspberry pi and learnt how python works.", "", "", ""]], ["ShotBot", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/Y8nuzUOm83E?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"ShotBot \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/302/609/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"ShotBot \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/302/610/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"ShotBot \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/302/611/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"ShotBot \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/302/612/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"ShotBot \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/302/616/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>What's the most important thing at a party? That's right... staying hydrated. You need to make sure you are easily able to portion your liquids, water and juice obviously, into nice 1.5oz servings.</p>\n<h2>What it does</h2>\n<p>ShotBot is an autonomous cup filling robot that drives on a table. We use vision processing to track small red party cups and fill them using a water gun. ShotBot will search for a cup if it can't see one, or persue the closest option.</p>\n<h2>How I built it</h2>\n<p>We used mostly toys and recycled plastic waste as our structural materials, this included bottlecaps, bottle, plastice silverware, and cheap toys that were going to be thrown out. We then used an Android phone as a camera that relayed the information to a raspberry pi and then to an arduino to power the motors.</p>\n<h2>Challenges I ran into</h2>\n<p>In two words: Raspberry. Pi.</p>\n<p>We chose to develop most of our control in Processing, because it has nice builtin computer vision support AND can interface nicely with the Arduino. It sounds too good to be true. That's because it was. Processing doesn't run on ARM. After replacing the incuded JVM with openjdk Processing would launch. </p>\n<p>That was when we had issues with the Pi having  inadequate performance to process the frames in time. We then used the Pi as a relay from a laptop to the Arduino's serial.</p>\n<p>It was almost working when the Pi died altogether.</p>\n<p>The robot now runs tethered to a laptop for the time being.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We managed to do our vision processing even after learning that the Processing library lacks a lot of the fancy features something like OpenCV has readily available. This lead us to write our own methods in order to identify the cups. Despite having to create our own methods, we were able to achieve a 90% success rate of finding and filling the cups.</p>\n<h2>What's next for ShotBot</h2>\n<p>The next step is to use a small, more powerful co-processor for the vision processing such as a DragonBoard. This will allow the robot to work fully autonomously without the need for a laptop or supervisor holding a long USB cable.</p>\n<p>As well as general accuracy tuning and a better quality watergun, this one has a noticeable amont of spray out to the sides.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/processing\">processing</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag\">servos</span></li><li><span class=\"cp-tag\">dump-trucks</span></li><li><span class=\"cp-tag\">cheap-watergun</span></li><li><span class=\"cp-tag\">waterbottles</span></li><li><span class=\"cp-tag\">plastic-cutlery</span></li><li><span class=\"cp-tag\">hope</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/kforth/ShotBot\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/kforth/ShotBot\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Sfotm Shell", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Sfotm Shell \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/302/701/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Enhanced an idea from a school project</p>\n<h2>What it does</h2>\n<p>Forks and runs commands inside a Unix environment</p>\n<h2>How I built it</h2>\n<p>C, a text editor, and GCC. Utilizes linked list and structs for history.</p>\n<h2>Challenges I ran into</h2>\n<p>I was very unfamiliar with C and low level languages in general, so it was sometimes challenging to implement even basic functionality that I used to take for granted, such as some more advanced string comparison.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I haven't had a segmentation fault in a very long time when running (those were very common in debugging and took a while to hunt down)</p>\n<h2>What I learned</h2>\n<p>C, unix commands that I never would have used otherwise</p>\n<h2>What's next for Sfotm Shell</h2>\n<p>Persistent history, maybe some other cool stuff</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c\">c</a></span></li></ul>\n</div>\n</div>", [""]], ["Reddit Asshole Daily", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration Spur of the moment project</h2>\n<h2>What it does Judges comments on Reddit to see if user who made comments is an asshole</h2>\n<h2>How I built it We just did, alternating between food, coding, and Rick and Morty</h2>\n<h2>Challenges I ran into Lack of sleep</h2>\n<h2>Accomplishments that I'm proud of We actually finished the project</h2>\n<h2>What I learned There's natural language processing API's out there, but they suck (not free or interprets each word context-free)</h2>\n<h2>What's next for Reddit Asshole Daily Replace comment judger component with self-made one that interprets context of words</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li></ul>\n</div>\n</div>", ["Worked on API handling and web page crawling to get valid reddit user names.", ""]], ["Not The Pizza", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Not The Pizza \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/302/658/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Not The Pizza \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/302/660/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Not The Pizza \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/302/661/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to think of a cool game that would be fun to build. As 3 programmers who have used Unity before, we wanted to make a complete game. We chose something simple so we could see it all the way through and really nail the end result.</p>\n<h2>What it does</h2>\n<p>Its a domino game! Not the pizza. Basically, you as a player have the freedom to create pre-built tracks with dominoes on them, move them around and press go to watch them all topple one by one. Its very satisfying!</p>\n<h2>How I built it</h2>\n<p>We used Unity 3D for the game, Blender for the 3D models, Photoshop for the wood, lava, domino and one of many rock textures we had. It was build in C#.</p>\n<h2>Challenges I ran into</h2>\n<p>We ran into problems with GitHub above all else. Unity has lots of metadata files that are required in order to build the scenes where 3D objects are presented but they are so inconsistent across machines that we couldn't push from more than one computer.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I would say 95% functionality, 100% satisfaction and we probably stayed up the longest at the hackathon.</p>\n<h2>What I learned</h2>\n<p>Nic learned more about Unity and how crappy it is when multithreading isnt a thing when you need it most.\nRyan learned more about Unity. He is currently enrolled in a game programming class using it, so he is basically guarenteed an A at this point.\nBen learned a ton more about Unity as well.</p>\n<h2>What's next for Not The Pizza</h2>\n<p>We will deploy it to the web or something so people can check it out! the link will be posted later! If not here, then check up on <a href=\"http://www.niclinscott.com/projects\" rel=\"nofollow\">link</a></p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/photoshop\">photoshop</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/blender\">blender</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://niclinscott.com/projects/Domino/\" rel=\"nofollow\" target=\"_blank\" title=\"http://niclinscott.com/projects/Domino/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>niclinscott.com</span>\n</a></li>\n<li><a href=\"https://github.com/nlinscott/NotThePizza\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/nlinscott/NotThePizza\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I did all of the 3D models and photoshop textures, along with some work with Unity"]], ["Raspberry Pi or Raspberry Pie", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>I like raspberry pis and raspberry pies. This helps people choose</p>\n<h2>What it does</h2>\n<h2>How I built it</h2>\n<h2>Challenges I ran into</h2>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<h2>What's next for Raspberry Pi or Raspberry Pie</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://raspberrypiorraspberrypie.com\" rel=\"nofollow\" target=\"_blank\" title=\"http://raspberrypiorraspberrypie.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>raspberrypiorraspberrypie.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Added variability", "", "", ""]], ["Caffeination ", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Caffeination  \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/301/494/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Caffeination  \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/301/495/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration- Waking up in the morning and having coffee readily available.</h2>\n<h2>What it does- Makes coffee with a click of a button and notifies you when it is done.</h2>\n<h2>How I built it- using a spark core and a few restless hours.</h2>\n<h2>Challenges I ran into- Getting the Spark Core to cooperate with the computer.</h2>\n<h2>What's next for Caffeination- Bringing Coffee to your bedside.</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/particle\">particle</a></span></li></ul>\n</div>\n</div>", ["Hardware Design, \nCode", "", ""]], ["Rise of a Tycoon", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>I have wanted to make a game like this for a while</p>\n<h2>What it does</h2>\n<p>It is an incremental game</p>\n<h2>How I built it</h2>\n<p>I built it using javascript and html</p>\n<h2>Challenges I ran into</h2>\n<p>I don't know javascript nor html</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I finished it</p>\n<h2>What I learned</h2>\n<p>Always make sure everything is correct</p>\n<h2>What's next for Rise of a Tycoon</h2>\n<p>No idea</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/JoshYurk/Kent-Hack-Enough.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/JoshYurk/Kent-Hack-Enough.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Rookery Radio Android App", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Rookery Radio Android App \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/302/751/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>The Rookery Radio app was inspired from not having an android app aside from Tunein Radio.</p>\n<h2>What it does</h2>\n<p>This app streams music from an Icecast2 server, and also streams the Meta Data from the server as well.</p>\n<h2>How I built it</h2>\n<p>The bulk of our core code came fron the Hive365 Android app Source code on Github, from there we took out functions that were irrelevant for what Rookery Radio needs.</p>\n<h2>Challenges I ran into</h2>\n<p>The biggest challenges we ran into was getting the app to read the Meta Data from our server. And properly display it.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I am very proud that I was finally able to get the Meta Data working, since it was the problem we had to deal with since the beginning.</p>\n<h2>What I learned</h2>\n<p>Because of this project, I now have a deeper insight into Java, JSONObjects, XML, and Working with Android Studio.</p>\n<h2>What's next for Rookery Radio Android App</h2>\n<p>I plan to publish this app on The Play Store for any to use and Listen to Rookery Radio on their android device as they please, while I keep up on minor bug updates.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://thegamingcorner.net:8000\" rel=\"nofollow\" target=\"_blank\" title=\"http://thegamingcorner.net:8000\">\n<i class=\"ss-icon ss-link\"></i>\n<span>thegamingcorner.net</span>\n</a></li>\n<li><a href=\"https://github.com/Coolguy3289/Rookery-Radio-Android-App\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Coolguy3289/Rookery-Radio-Android-App\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Major UI changes and help with the transfer of metadata", "Helping ensure that the app had major Hive365 branding removed and having Rookery Radio branding instead.", "I worked on the Major parts of the Core Radio code, Switching the Audio Stream and the Meta Data to the Rookery Server, then making sure the data loaded on the app."]], ["Pokemon Master Made Easy", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>There are 2 sets of invisible data values that determine the worth of a Pokemon in a game. In the past \nto casual players did not need to worry about such things, all battles and trades happened between friends. However, now that gameboy's are on the internet, players battle with people all around the world! With this, in order to not be inferior, you must carefully manage these invisible values; they can cause your pokemon to be a full 100 stat points behind, and with each pokemon usually having an average of 400 stat points, this a huge problem.</p>\n<p>Calulators exist on the internet, however they require you to keep track of your EVs yourself, this is difficult because each pokemon gives a different EV value after it is defeated. Because of this, even though GameBoys are \"Portable\" someone who really wants to play pokemon today needs to have a computer and a sheet of paper with them, to tally EVs and calculate IVs. This isn't portable at all!</p>\n<h2>What it does</h2>\n<p>This app keeps track of Effort Values (which are earned though defeating pokemon) and calculates the Initial Values which are the pokemon's hidden potential. It's best to find out their IVs early, so you don't waste time with an inferior pokemon.</p>\n<h2>How I built it</h2>\n<p>I reversed the Stat Calculation to calculate the IVs by checking all possible IVs (1~31 to start then what ever range is left as you go)</p>\n<h2>Challenges I ran into</h2>\n<p>I found out pebble doesn't like to refresh,,, I spent hours trying to get it to refresh before I found out.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<p>how to use pebble</p>\n<h2>What's next for Pokemon Master Made Easy</h2>\n<p>finish it out, and use it...?</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/pebble\">pebble</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n</div>", [""]], ["WordBlock for Facebook", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"WordBlock for Facebook \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/302/697/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>I wanted to produce an extension for google chrome and I wanted to create a tool like this.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://chrome.google.com/webstore/detail/wordblock-for-facebook/jlkjmkopapniealcjadpcpchhnphbenb\" rel=\"nofollow\" target=\"_blank\" title=\"https://chrome.google.com/webstore/detail/wordblock-for-facebook/jlkjmkopapniealcjadpcpchhnphbenb\">\n<i class=\"ss-icon ss-link\"></i>\n<span>chrome.google.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Shout", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<h2>What it does</h2>\n<h2>How I built it</h2>\n<h2>Challenges I ran into</h2>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<h2>What's next for Shout</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/particle\">particle</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://shadey.github.io/shout/index.html\" rel=\"nofollow\" target=\"_blank\" title=\"https://shadey.github.io/shout/index.html\">\n<i class=\"ss-icon ss-link\"></i>\n<span>shadey.github.io</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["BlueText", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Phone across the room but you wanna text? Unable to effectively use a touch keyboard? Think that smartphones are not as cool as laptops and desktops</p>\n<h2>What it does</h2>\n<p>Establishes a connection between the laptop and the phone to allow someone to connect the two and allow the desktop to sned sms through the phone</p>\n<h2>How I built it</h2>\n<p>Lots of tutorials</p>\n<h2>Challenges I ran into</h2>\n<p>IOSTREAMS, also Open SOurce doesn't mean ready to be worked with</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Actually establishing the connection, using text views for debug messages</p>\n<h2>What I learned</h2>\n<p>Android dev, Open source doesn't mean ready ot be worked with</p>\n<h2>What's next for BlueText</h2>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/awesomeShayne/BTMessengerApp\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/awesomeShayne/BTMessengerApp\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/awesomeShayne/pyBTMessenger\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/awesomeShayne/pyBTMessenger\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["sinclair", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>Sinclair</h1>\n<h4>Effortlessly generate a resume based from your Github activity</h4>\n<p>To make your resume visible <strong>star</strong> this project, <a href=\"https://github.com/egladman/sinclair\" rel=\"nofollow\">egladman/sinclair</a>.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/coffeescript\">coffeescript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ruby\">ruby</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bower\">bower</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/grunt-js\">grunt.js</a></span></li><li><span class=\"cp-tag\">mustache.js</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/egladman/sinclair\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/egladman/sinclair\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["MLHome", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"MLHome \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/302/620/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"MLHome \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/302/621/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"MLHome \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/302/622/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"MLHome \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/302/705/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>When four random people met at Kent Hack Enough Friday night, it did not take long for the collective group to meet the consensus to build a home security hardware hack. This hack utilizes temperature, humidity, flame, and water sensors, which wirelessly transmitts data to an online server hub utilizing asp.net. From this location, signals are sent to an android app which alerts the user if there is a flame or floodi in the home, which forces the phone to emmitt audible tones, as well as warning labels, no matter where the phone is, in relation to the home sensors. Further, the app allows for the user to request information relating to the home's temperature and humidity utilizing the same server. In extension, our hack can control devices throughout the home. For instance, we have specifically synced an outlet to our hack, which controls a lamp. We could control almost any home device to this system as well. </p>\n<p>Our hack is eligible for both Internet of Thing categories as well as the data representation category.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">api's</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag\">flame-sensor</span></li><li><span class=\"cp-tag\">water-sensor</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/asp-net\">asp.net</a></span></li><li><span class=\"cp-tag\">wireless-2.4ghz-system</span></li><li><span class=\"cp-tag\">temperature-system</span></li><li><span class=\"cp-tag\">humidity-system</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mit-app-inventor\">mit-app-inventor</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/lamp\">lamp</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://www.github.com/jking38/MLHome\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.github.com/jking38/MLHome\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I programmed the microcontroller and worked on the computer hardware, electrical design. I also, did the wireless communication between the sensors and the base station. Jeffrey and I worked together to communicate the data on the arduino base station to the webserver. In addition I created the Android app that makes requests to the Web server and displays that data graphically and audibly on a phone.", "I worked on the ASP.NET application that read in and sent data to the Hub Arduino via USB/Serial, parsed the data, and exposed it as an HTTP endpoint for our mobile app to consume.", "", ""]], ["TriggerType", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"TriggerType \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/302/689/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Mechanical Keyboards sound like typewriters</p>\n<h2>What it does</h2>\n<p>Its a game where the goal is to type the given paragraph accurately and more quickly than your opponents. You can see your opponents progress in real time. When a player finishes a paragraph, the gun in the middle attempts to fire on a random player (one of the ones that didn't finish, Russian roulette style). The last player to survive wins.</p>\n<h2>How I built it</h2>\n<p>Grails 3 application, deployed to Elastic Beanstalk (AWS). AngularJS with WebSockets for real time communication</p>\n<h2>Challenges I ran into</h2>\n<p>WebSocket connections, Untypable characters (MS Word's slant quotes, UTF conversion artifacts, etc), Event driven modelling. WebSocket requests are not real grails requests and therefore have no sessino so Hibernatte cannot be used for storage...</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>WebSockets</p>\n<h2>What I learned</h2>\n<p>A lot.</p>\n<h2>What's next for TriggerType</h2>\n<p>Chris will likely work with it for a few more weeks.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/grails\">grails</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/angular-js\">angular.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://triggertype.elasticbeanstalk.com/gameRoom/index\" rel=\"nofollow\" target=\"_blank\" title=\"http://triggertype.elasticbeanstalk.com/gameRoom/index\">\n<i class=\"ss-icon ss-link\"></i>\n<span>triggertype.elasticbeanstalk.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Insighted", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Insighted \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/302/686/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Nothing remotely mobile has kept track of a person's proximity to a screen or other reading medium over time.</p>\n<h2>What it does</h2>\n<p>Calculates the proximity between screen and face and records each individual data point in \"sessions\". This can then be analysed to find trends, ie when the proximity gets smaller, warning user to possibly see eye doctor</p>\n<h2>How I built it</h2>\n<p>Used a Raspberry Pi and hooked up an ultrasonic ping sensor for proximity measurement. Used a small button switch to start and stop sessions (for now). All data goes straight to AWS DynamoDB (design choice was half by accident)</p>\n<h2>Challenges I ran into</h2>\n<p>Amazon AWS was confusing despite how I have somewhat extensive experience with administering my own virtual servers without problem. Also, I initially rolled in a few hours into hacking due to an exam that got annoyingly moved to during dinner (and the conflict was on Saturday!).</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>The hardware worked for the most part</p>\n<h2>What I learned</h2>\n<p>Some DynamoDB</p>\n<h2>What's next for Insighted</h2>\n<p>A better user interface, especially data visualisation. But really, hopefully mobile devices will come with better proximity sensors to allow for more uses than detecting touching something.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li></ul>\n</div>\n</div>", [""]], ["Periodic Table", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Periodic Table \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/302/700/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Periodic Table \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/302/734/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Periodic Table \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/302/735/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Periodic Table \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/302/736/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Periodic Table \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/302/737/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Whenever in my high school chemistry class we often have to look at our periodic table reference sheet, and I often think... Why do we have to look at the boring piece of paper all the time when we can look be looking at an app on our phone!</p>\n<h2>What it does</h2>\n<p>I created two things today, an app and a single class to use as API for this data. When I was searching online I didn't find any good way to get information about apps and I figured I could make one along with my app!  The app allows you to view the periodic table as in it's official layout including all 118 elements.  It also includes the \"extra\" elements that are on the periodic table.</p>\n<h2>How I built it</h2>\n<p>Honestly I Kent believe how well I did.  There were lot's of components to this app.  In order to get data I had to scrape many websites to get valid data about the elements.  I scraped them, organized them in an Excel spreadsheet and then converted it into a CSV file (I later changed it to a pipe (|) deliminated file).  After I got all the data I parsed the CSV and created functions to get different aspects of the element in my class.  </p>\n<p>An example usage </p>\n<p><code>e = new ElementInfo();\ne.getElement(CSV_LOCATION);\ne.getDiscoverer(1);</code></p>\n<p>This would get the discoverer of the first element, Hydrogen.</p>\n<h2>Challenges I ran into</h2>\n<p>I ran into pleanty of challenges, they started before I even got here.  The day before I came to this AMAZING hackathon the rest of my team bailed except for my one friend who did not want to drive home alone.  Therefore I had to find a team at the event, from there I found a team although it was 4 in the morning and we still had no idea.  I ended up splitting off to go by myself and we went on our separate projects.  As for programming problems a big challenge was getting information, I  scraped plenty of websites for information, verified all their validity and then implemented it into my app.  The biggest challenge I faced was formatting all of the elements on the main page to be scaleable and in their exact position because I wanted to sure the best device comparability.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I'm proud of this entire app, getting the main layout was probably my biggest accomplishments which I am proud.  I had to take care of skipped spaces, extra elements, and more.</p>\n<h2>What I learned</h2>\n<p>I've learned so much more about Android development as well as things from other teams about hardware usage.  I learned to use Myo armbands with some new friends I made :).</p>\n<h2>What's next for Periodic Table</h2>\n<p>What's next? Pleanty! I do not plan to end this app here.  I plan to continue to update the design and functionality, add more information. And.... Make a web API for anyone to use!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/TristanWiley/Elemental\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/TristanWiley/Elemental\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I did everything"]], ["MicDropBot", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Jessie, one of our team mates, came up with the concept as a plausible idea; something we could all accomplish.</p>\n<h2>What it does</h2>\n<p>MicDropBot takes sentence structures that we designed and plugs in random words from a set list.  We designed it to make inspiring or amusing sentences, and then posts them to twitter.</p>\n<h2>How we built it</h2>\n<p>The code was built in Python, using Tweepy and the Twitter API.  We gathered words and separated them by part of speech and rhyme and put them into separate text documents.  The code is hosted by Amazon Lambda.  Design for the twitter page was created with adobe illustrator.</p>\n<h2>Challenges we ran into</h2>\n<p>Coming into this project with limited Python knowledge and no set resources, we had several problems.  A major issue was trying to categorize words both by part of speech and by rhyme.  It was also a struggle to find an interesting word list to begin with- we ended up making our own.  Hosting the bot on its own and having it post autonomously was also new.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Getting the program to fetch words both by rhyme and part of speech, getting sentence structures that didn't sound awkward, designing a marketable twitter profile.</p>\n<h2>What we learned</h2>\n<p>We learned a lot about Python, hosting, the English language, and working in a team!</p>\n<h2>What's next for MicDropBot</h2>\n<p>We'd like to have MicDropBot take data input when people tweet at it.  It would also be fun to host MicDropBot on a website other than Twitter, so we could do more with him. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twitter\">twitter</a></span></li><li><span class=\"cp-tag\">lambda</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://twitter.com/Mic_Drop_Bot\" rel=\"nofollow\" target=\"_blank\" title=\"https://twitter.com/Mic_Drop_Bot\">\n<i class=\"ss-icon ss-link\"></i>\n<span>twitter.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I did the graphic work for Twitter", "I worked primarily on the code.", "I made sentence structure templets and the words to be used. I came up with ideas but did not code."]], ["Kent Dance Enough", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Kent Dance Enough \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/302/626/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We really wanted to use the Myo armbands, because we believed that they had the most potential to make a great hack. We wanted to do something that tracked movement. Originally, we planned on doing a Guitar Hero clone. After discovering that the Myo armbands can't detect movements as small as fingers, we decided to do something with the whole arm. We pivoted to making it a Guitar Hero clone with drums. This allowed us to use full arm movements. On the day of presentation, we pivoted again, because the arm movements looked more like dancing than drumming.</p>\n<h2>What it does</h2>\n<p>Our application takes a players name and song choice. It then pulls the selected song from the Spotify API and plays it for the user along with randomly generated arm motions. The user needs to try their best to move their arms in sync with the arm positions that appear on the screen. After the song is over, the user sees their score and their high score is saved.</p>\n<h2>How We built it</h2>\n<p>We used the MEAN stack. We had a MongoDB database with an Express server. The front-end was done in AngularJS. We used the Twitter Bootstrap framework to design the front-end. C++ and Lua were used to program the Myo armbands.</p>\n<h2>Challenges We ran into</h2>\n<p>We were all challenged with learning new technologies and frameworks. At the beginning, we had configuration issues between our front-end and back-end. We sometimes had problems with our server which required careful debugging. No one had ever used Myo so we had to learn how to detect the actions of the armband and how to send POST request from the Myo.</p>\n<h2>Accomplishments that We're proud of</h2>\n<p>I am proud of making a complex back-end that can accept input from two different devices. </p>\n<h2>What we learned</h2>\n<p>We learned about the MEAN stack. One of our developers was a front-end developer and another one was a back-end developer. They had to learn how to interface with each other. The front-end developer sometimes had trouble interfacing with the API made by the back-end developer. The two developers who were tasked with getting the Myo armband to detect movement, learned about API's and interfacing with hardware.</p>\n<h2>What's next for Kent Dance Enough Team</h2>\n<p>Dancing into the sunset</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/angular-js\">angular.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://45.79.148.237:9000/\" rel=\"nofollow\" target=\"_blank\" title=\"http://45.79.148.237:9000/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>45.79.148.237</span>\n</a></li>\n<li><a href=\"https://github.com/nkowdley/GuitarStar\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/nkowdley/GuitarStar\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the backend using mongodb and nodejs", "I worked on the myo app", "I worked on the frontend in AngularJS. I used Bootstrap for the design and integrated with the NodeJS + MongoDB backend.", "I worked on the Myo App"]], ["Freshman Question?", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Freshman Question? \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/302/434/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Freshman Question? \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/302/517/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Freshman Question? \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/302/518/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Freshman Question? \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/302/519/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Freshman Question? \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/302/520/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Freshman Question? \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/302/553/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Freshmen everywhere who want to get used to campus more quickly.</p>\n<h2>What it does</h2>\n<p>Coaches Kent State University Freshmen on various topics</p>\n<h2>How I built it</h2>\n<p>Renpy, writing, and lots of photography.</p>\n<h2>Challenges I ran into</h2>\n<p>Collecting enough data.</p>\n<p>Polishing existing features.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Collecting a lot of data quickly</p>\n<h2>What I learned</h2>\n<p>Pacing is important.</p>\n<h2>What's next for Freshman Question?</h2>\n<p>Polishing.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">renpy</span></li><li><span class=\"cp-tag\">photography</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://freshmanquestion.com/\" rel=\"nofollow\" target=\"_blank\" title=\"http://freshmanquestion.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>freshmanquestion.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I did the programming, art, photography, and writing.", ""]], ["Bucket Lister", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Bucket Lister \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/302/466/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>I've been having interesting weekends lately and it would be cool to see it on a map.</p>\n<h2>What it does</h2>\n<p>Whenever you take a picture with the app, it records on the map where you took the picture and a little note\nthat way you get to see all the places you've been and where you have left to explore. The pictures get uploaded to the cloud with AWS.</p>\n<h2>How I built it</h2>\n<p>Most of it was done in android studio</p>\n<h2>Challenges I ran into</h2>\n<p>Database stuff is hard</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Having something to submit</p>\n<h2>What I learned</h2>\n<p>Android activities and views are much clearer now</p>\n<h2>What's next for Bucket Lister</h2>\n<p>Get bought out by facebook and make cash monies</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-maps\">google-maps</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["Forget The Forgetting", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Forget The Forgetting \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/302/440/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Forget The Forgetting \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/302/439/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Forget The Forgetting \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/302/443/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Forget The Forgetting \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/302/444/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Forget The Forgetting \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/302/445/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>Forget-The-Forgetting</h1>\n<p>Have you ever forgotten objects on the kitchen counter? Forget no more! The Forget The Forgetting system aims to learn your daily lifestyle and over time, it learns from what you usually take and what you don't - so the next time you forget something, you'll get a friendly text! </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/opencv\">opencv</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/hardware\">hardware</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Timothylock/Forget-The-Forgetting\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Timothylock/Forget-The-Forgetting\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Worked on the code that is responsible for identifying objects, communicating with API's, and the general operations of the program", "I worked on the image processing module."]], ["Fally Down", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration I was originally going to make a tower defense game, but my group mates wanted to use Eclipse. So, I decided to make my own tower defense game. However, that was a little too daunting &amp; when I was trying to make the grid for the tower defense game, I forgot to remove gravity from the grids, so they all fell down &amp; I decided to make a fun, simple game.</h2>\n<h2>What it does It's supposed to entertain &amp; amuse everyone who plays it, like all video games, while providing a moderate challenge to reaction times.</h2>\n<h2>How I built it I used Unity &amp; C# all on my own to make it.</h2>\n<h2>Challenges I ran into More than I can think of. One things that sticks out is horribly inefficient way I interact between classes. After hours of trying, I finally found a way to loop through every object in the game &amp; just to pick out one by tag. Too bad I didn't have any group members to help!</h2>\n<h2>Accomplishments that I'm proud of Doing it all by myself, it's really satisfying to know how everything works &amp; that you did it all. This is also my second game I've ever submitted anywhere, so there's that.</h2>\n<h2>What I learned I learned I work best by myself, mostly, &amp; lots of stuff about coding, GUIs, Collision Detection, etc.. For example, I learned that collision between two Rigid Bodies doesn't work when one is translated into the other.</h2>\n<h2>What's next for Knocky Down I'm not planning any further development, although there are some things I didn't have time to add. I'll probably show it to some future employers as a record of my attendance here &amp; keep it so I can look back at it when I'm older.</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://www.dropbox.com/sh/6keoqovafj1rg5m/AADx-7vmS7FkULV2DnJfBZzQa?dl=0\" rel=\"nofollow\" target=\"_blank\" title=\"https://www.dropbox.com/sh/6keoqovafj1rg5m/AADx-7vmS7FkULV2DnJfBZzQa?dl=0\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.dropbox.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Stableyes", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>Stableyes</h1>\n<p>Application to stabilize viewed PDFs, images, and web pages by reading accelerometer input</p>\n<p>One goal of this project is to make phones more usable for people who may have diseases like Parkinson's Disease. The app would stabilize an image, web browser, or other content in reaction to accelerometer data.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/ProPorygon/Stableyes\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ProPorygon/Stableyes\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Added smoothing algorithms and pro typing and whatnot,  unit tests", "", "", ""]], ["kentpunenough", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>kentpunenough</h1>\n<p>Our pebble hack/app for Kent Hack Enough</p>\n<p>So when we were driving here, we made about 50 really bad puns with kent: the name of the hackathon.</p>\n<p>So what we created a pebble application that takes users' kent hack enough puns and displays them for your viewing pleasure, along with a website.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/asriram3/kentpunenough\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/asriram3/kentpunenough\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I wrote a web interface in flask to access the #KentPunEnough tweets", "Wrote the twitter API connection in Javascript for the pebble", "", ""]], ["Oh Hacking Tree", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Oh Hacking Tree \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/302/228/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Oh Hacking Tree \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/302/229/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Oh Hacking Tree \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/302/230/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We decided to get into the Kent Fashion Tech Hackathon spirit and make a smart t-shirt!</p>\n<h2>What it does</h2>\n<p>We decorated the MLH Fall 2015 shirt with a Christmas-themed, Arduino-powered LED light show</p>\n<h2>How I built it</h2>\n<p>We painstakingly soldered LEDs though a shirt, and somehow didn't burn it up in the process</p>\n<h2>Challenges I ran into</h2>\n<p>We didn't realize how brittle the solder would be, which led to issues making sure every connection was consistent. We also had to spend more time designing the layout of each LED and its wiring than we were prepared to, and wish we could go back and redo much of the design now that we have a better understanding of how to design circuits.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Oh Hacking tree, Oh Hacking tree!\nArduino ticks control thee\nOh Hacking tree, Oh Hacking tree,\nArduino ticks control thee</p>\n<p>Not only slow ticks power thee\nsouder and wires and led's\nOh Hacking tree, Oh Hacking tree,\nArduino ticks control thee</p>\n<p>Oh Hacking tree, Oh Hacking tree,\nThose asthetic lights please me\nOh Hacking tree, Oh Hacking tree,\nThose asthetic lights please me</p>\n<p>During this week at KHE\nSoudering leads and and led's\nOh Hacking tree, Oh Hacking tree,\nThose asthetic lights please me</p>\n<p>Oh Hacking tree, Oh Hacking tree,\nThy lights will always power me;\nA mess of wires under that shirt\nThy lights will always power me</p>\n<p>Each led\nEach silver lead\nNothing hacked brings cheer so well</p>\n<p>Oh Hacking tree, Oh Hacking tree,\nThy lights will always power me</p>\n<h2>What I learned</h2>\n<p>We never designed a LED toy like this before, and never took on a project that involved this much soldering. A lot of things we did we wish we could go back and do them in a better way.</p>\n<h2>What's next for Oh Hacking Tree</h2>\n<p>The next step for Oh Hacking Tree would be to thin the wiring so that we could make it into something truely wearable as opposed to a concept design.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li></ul>\n</div>\n</div>", ["I soldered most of the electrical", "Rewrote the song and helped test arduino connections", "", ""]], ["pKa Memory", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"pKa Memory \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/302/142/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"pKa Memory \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/302/156/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"pKa Memory \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/302/157/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"pKa Memory \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/302/158/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"pKa Memory \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/302/159/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"pKa Memory \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/302/160/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Studying can feel like a chore.  Gaming is much more enjoyable!  While we were in OChem, we couldn't find any games to help us study.  Most chemistry games that Annie found were more geared towards general chemistry concepts.</p>\n<h2>What it does</h2>\n<p>Twelve cards are set out on a board face down. When you click on a card, it turns over to display either a functional group or a pKa value.  If the two match, the cards are removed from the board.  If there is no match, the cards are flipped back over.</p>\n<h2>How I built it</h2>\n<p>GameMaker</p>\n<h2>Challenges I ran into</h2>\n<p>Figuring out how to adapt the tutorial we were following to create a match without the card values being an exact match.  There's still a problem with an array larger than the number of cards being created.</p>\n<h2>What I learned</h2>\n<p>Annie: GameMaker!  Seriously, this was the first time we've used the program.</p>\n<p>Geneva: This wasn't as bad as I thought, especially going into this thinking that I wouldn't be able to contribute to the project at all.</p>\n<h2>What's next for pKa Memory</h2>\n<p>We'd like to get the array size and number of cards to match.  (We're not willing to stay up all night to fix this.)</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/gamemaker\">gamemaker</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://www.dropbox.com/sh/b3l0ok0ol1or0dy/AAAfRwZSzR62vQHSYvfPj3Xja?dl=0\" rel=\"nofollow\" target=\"_blank\" title=\"https://www.dropbox.com/sh/b3l0ok0ol1or0dy/AAAfRwZSzR62vQHSYvfPj3Xja?dl=0\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.dropbox.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the creating the images of the cards when they flip over.", ""]], ["Haze in the Maze", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We are all freshmen in the same python programming class so we are new to programming. Our main objective we were looking for is something simple we have learned from the class but would be a great learning experience for us.</p>\n<h2>What it does</h2>\n<p>A funny choose your own adventure through a maze of death.</p>\n<h2>How I built it</h2>\n<p>Using if and else statements and python functions to direct your way through the maze or to a possible death.</p>\n<h2>Challenges I ran into</h2>\n<p>We couldn't get the program to restart from the beginning when you died. Also we tried a while loop but couldn't get past the first move.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We were able to finish it and get it working as our first hackathon program.</p>\n<h2>What I learned</h2>\n<p>Different functions in python language.</p>\n<h2>What's next for Haze in the Maze</h2>\n<p>Nothing really. Just a short fun game to play.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["Drake's Equation", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>I just like the idea of space and potential alien life.</p>\n<h2>What it does</h2>\n<p>It uses the Drake Equation, which is N = R * fp * ne * fl * fi * fc * L , allows the user to type in their estimates in each category, and then gives the user N (result) which is the <strong>number of intelligent alien life in our galaxy</strong> - the Milky Way.</p>\n<h2>How I built it</h2>\n<p>I used C++, trial &amp; error, and researched on what each variable represents. </p>\n<h2>Challenges I ran into</h2>\n<p>I had to use 'float' instead of 'int' datatype, due to some of the numbers being in decimal (fraction) form. Also finding out what each variable represents was also a little daunting. Also, early on, my program was giving me garbage data, which I did fix by fixing one line of code.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I am happy that the program (<strong>mathematically</strong>) works, and I did it from scratch.</p>\n<h2>What I learned</h2>\n<p>I learned that there are too many variables to determine alien life in our (or any) galaxy. In C++ I learned that you will get garbage data if you have a variable that you declared but didn't give a value (in my case anyways.), but actually used. I am glad I learned about Hackathons and how fun they can be just to participate.</p>\n<h2>What's next for Drake's Equation</h2>\n<p>There really isn't much left for the Drake Equation. In the future I could use a more complex equation (for a different topic), but there's not much else to do for my program.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/geos59/hackathon\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/geos59/hackathon\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]]]