[["Algo Fighter", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://player.vimeo.com/video/159674086?byline=0&amp;portrait=0&amp;title=0#t=\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Algo Fighter \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/363/584/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Algo Fighter \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/363/582/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Algo Fighter \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/363/583/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Algo Fighter \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/363/639/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to create fun game that involved programing</p>\n<h2>What it does</h2>\n<p>The user creates assembly esque instructions to send to the server in order to instruct the bot in the manouvers it should take.</p>\n<h2>How we built it</h2>\n<p>We used socket.io to sync clients with the server and send commands to the bots. Javascript and prayers hold it together.</p>\n<h2>Challenges we ran into</h2>\n<p>sockets was a challenge to get used to first and most of the team is very new to node</p>\n<h2>What's next for Algo Fighter</h2>\n<p>the viral dream</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/socket-io\">socket.io</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://www.algofighter.com/\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.algofighter.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.algofighter.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Worked on building the backend in terms of implementings the bots, arena and contributing to the assembly-esque programming language.", "I worked on building the front end. Like most of us it was our first encounter with node so it was quite the experience. Would do again!", "Worked mainly on building the backend with sockets.io, and drawing pretty pictures with canvas on the front end. Great learning experience.", "I briefly introduced everyone to node and did the initial setup the for express and socket.io"]], ["HackSheffield - BooleanAlgebra", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"HackSheffield - BooleanAlgebra \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/363/608/datas/gallery.jpg\"/>\n<p>\n<i>Lond</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"HackSheffield - BooleanAlgebra \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/363/613/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration - We wanted to work plotting data on a map, also we are all very environmentally aware, so the idea of plotting a heatmap based on good positions to place solar panels.</h2>\n<h2>What it does - Reads a data file containing the height of buildings in London, analizing their position related to each other and the position of the Sun. Yellow Areas are best positions to place solar panels.</h2>\n<h2>How we built it - Using Java, we read the data using a 2D array, then made the heatmap using the heatmap Java library, to calculate the position of the Sun, Aiden spent many hours figuring out which algorithms to use, and how to use the Solar Azimuth Angle, the Solar Zenith Angle and the hour angle.</h2>\n<h2>Challenges we ran into - We had to research a lot of the theory behind the Sun calculations, our data was very detailed, but far too big to compute all at once, we had to produce separate images of London, then Stitch them together using Gimp</h2>\n<h2>Accomplishments that we're proud of - We managed to produce a heatmap of London that resembled the city to a very high accuracy. We managed to produce a working Sun chart, predicting the angle of the Sun from the ground at any time on any day of the year.</h2>\n<h2>What we learned - our knowledge of 2D arrays and Big Data has expanded drastically, we learned about implementing new Java Libraries and how to quickly get to grips with the source code. We learned how to calculate the shadow cast by a building with the Sun at many different angles.</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/netbeans\">netbeans</a></span></li></ul>\n</div>\n</div>", ["I created the class to calculate the projected shadow of a building at any date/time.", "I worked on the data reading and internal format of this data", ""]], ["FootFall", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"FootFall \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/363/492/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We realised how there isn't a platform to discover events happening around us that is presented in a way easy to visualise. Many events are sometimes discovered on Facebook by accident when someone clicks \"attending\" or \"interested\" in an event. </p>\n<h2>What it does</h2>\n<p>FootFall is a platform that allows users to visualise the hottest events happening around them. They can search for different locations around the world</p>\n<h2>How we built it</h2>\n<p>We first gathered data using the Facebook graph API and sorted the data based on location, event dates, duration of the events, and the estimated number of people attending. An API was then created to query this data, which allows to then present in any client we choose. Our data visualisation method of choice is the Google Maps API, which allowed our users to interact with events that they found using a heatmap and a filter for the events based on date ranges. We deployed our website to Amazon AWS and also used a custom domain from Domain.com. On the AWS instance, have an Apache server for serving web content and a node.js server for API calls. We'd like to thank the sponsors of HackSheffield as well as the organisers of the hackathon for running this amazing event.</p>\n<h2>Challenges we ran into</h2>\n<p>The biggest challenge we ran into was gathering the data itself. We had to be careful to not breach any terms of privacy and it was a major concern to us that there wasn't enough data around as well.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are proud of solving a Big Data problem. Making sense of the data that we had and presenting it in a visually pleasing interface while also using it to benefit potential users around the world is truly satisfying. The team dynamic is also something that we are truly proud of. We enjoyed building something cool that matters during the hackathon.</p>\n<h2>What we learned</h2>\n<p>We learnt how messy data is presented to us and sometimes, we don't even realise that there is data that we can utilize in a useful manner useless we actively looked for it.  </p>\n<h2>What's next for FootFall</h2>\n<p>We could implement other sources of data, for example, live tweets from Twitter regarding current events and intergrate that into our platform. We could also allow our users plan a route through popular events in their area to help them discover the events around them. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/facebook-graph\">facebook-graph</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-maps\">google-maps</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/apache\">apache</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sublime-text\">sublime-text</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/linux\">linux</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://www.footfallmap.com\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.footfallmap.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.footfallmap.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I was responsible for mostly the front-end parts of the project, using HTML and CSS during the hackathon. I also implemented part of the Google Maps API, including the using the Places API, implementing the search box, and helping to add the heatmap to FootFall. I learnt a lot about jQuery during the hackathon and how it can be implemented into projects.", "I coded a bit of everything in this project from using python with Facebook graph api in order to come up with a way to get listings of public events to the nodejs backend API to the front end HTML, CSS and jQuery. I learnt a great deal about the Google Maps API during this hack.", "We created an extremely useful and usable product in just 24 hours which is an incredible achievement! I learned a lot about many aspects of web application design, including utilising Google and Facebook APIs, lots more about JavaScript, how to set up a server with AWS and how to transfer files to and from the server. This was a thoroughly enjoyable experience!"]], ["NoisyWorld", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"NoisyWorld \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/363/597/datas/gallery.jpg\"/>\n<p>\n<i>Properly classified entry! Yeay</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"NoisyWorld \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/363/599/datas/gallery.jpg\"/>\n<p>\n<i>A bit confused???</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"NoisyWorld \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/363/600/datas/gallery.jpg\"/>\n<p>\n<i>Learning!!</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Sensor data from real world can be <strong>extremely</strong> noisy. Trying to make sense of tens of thousands of entries manually is <strong>NOT</strong> an option. Our approach uses different techniques to map the entries to the proper activities.</p>\n<h2>What it does</h2>\n<p>Initial dataset has many instances that are mislabeled. \nWe use a rule-based pre-processing routine to filter the meaningless data points.\nA simple neural network is then trained to classify the entries into 6 categories:\n<strong>IN_VEHICLE, ON_BICYCLE, STILL, UNKNOWN, TILTING, WALKING</strong>\nThe final goal is to visualise this new, improved information on a front-end.</p>\n<h2>How we built it</h2>\n<p>The data is in CSV format, the pre-processing is done using simple python scripts and subroutines.\nThe neural-net is written in python and is an input layer directly fed into an output layer. \nActivation function is a simple max function. Noise was introduced to try to reduce the effect of the skew in the classes composing the dataset.</p>\n<h2>Challenges we ran into</h2>\n<p>The dataset, being real-world sensor data, was <strong>skewed</strong> towards certain activities.\nThis means that some classes were overrepresented during the learning process and dominated the network.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>There is [a certain degree of] learning from the network and the visualisation shows that pre-processing is useful to a certain extent.</p>\n<h2>What we learned</h2>\n<p>Expect some serious noise in real world-data, sensors are cool but take them with a pinch of salt.\nUnsupervised learning is hard but super-cool. </p>\n<h2>What's next for NoisyWorld</h2>\n<p>Introducing techniques to reduce the effect of skew in the data. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/react\">react</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/gulp-js\">gulp.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/scss\">scss</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/alvinpastore/hacksheffield.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/alvinpastore/hacksheffield.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the backend, the preprocessing scripts and the neural net development.\n", "I worked on the front end, server, and data visualisation.", "I worked on the data analysis and assisted with the preprocessing scripts"]], ["DataInsights", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"DataInsights \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/363/497/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"DataInsights \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/363/496/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"DataInsights \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/363/502/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"DataInsights \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/363/690/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<h2>What it does</h2>\n<p>Provides statistical information related to FB HackSheffield event, such as FB user id, my personal friends connection at HackSheffield</p>\n<h2>How I built it</h2>\n<p>Built using Express+Node.js and d3.js.</p>\n<h2>Challenges I ran into</h2>\n<p>At start I ran into problems with getting access to FB Graph API and the visualising.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I found couple of interesting statistical pieces of data. For example that FB user if make two distinct pieces of data.</p>\n<h2>What I learned</h2>\n<p>I learnt that data visualisation can be a fun process :)</p>\n<h2>What's next for DataInsights</h2>\n<p>Getting more data visualised, improving the code, providing RESTful API.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag\">magic</span></li><li><span class=\"cp-tag\">hype</span></li><li><span class=\"cp-tag\">plz</span></li><li><span class=\"cp-tag\">astonrepresent</span></li></ul>\n</div>\n</div>", [""]], ["UK Epidemic/Zombie Outbreak Simulator", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>Domain registered : <a href=\"http://www.MarvelVSCap.com\" rel=\"nofollow\">www.MarvelVSCap.com</a></p>\n<h2>Inspiration</h2>\n<p>We wanted to create something interesting using all sorts of open data. This project appeals to us because it has funny elements.</p>\n<h2>What it does</h2>\n<p>Predict the spread of the virus/disease based on the location, commuting between district, employment rate, population &amp; wage + give you morbid thoughts of the future.</p>\n<h2>How we built it</h2>\n<ul>\n<li>Technologies: Node, MySQL</li>\n<li>Data: Office for National Statistics (ONS) data for 2011, London Datastore</li>\n</ul>\n<h2>Challenges we ran into</h2>\n<ul>\n<li>Too much data sets that do not exactly match</li>\n<li>Difficult to incorporate/combine data for wanted results. (e.g. getting Local Authorities' boundary coordinates)</li>\n<li>Severely lack of APIs which resulted us in downloading datasets and converting them into database tables.</li>\n</ul>\n<h2>Accomplishments that we're proud of</h2>\n<ul>\n<li>We went through 5 hours of thorough planning, weren't tempted to tap away on our keyboards until we were done planning.</li>\n<li>Although we did not manage to properly crunch the data we have, we still managed to get some sensible information.</li>\n<li>We went through hell digging for datasets in open data websites (e.g. ONS, Data.gov.uk, etc).</li>\n</ul>\n<h2>What we learned</h2>\n<ul>\n<li>MySQL does not have Common Table Expressions i.e. stick to the tech you know best</li>\n<li>Don't have to aim for perfection</li>\n</ul>\n<h2>What's nice to have for UK Epidemic Simulator</h2>\n<ul>\n<li>Including other types of data to predict the spread (e.g. topography, health status of location, etc)</li>\n<li>Feature to find a safe location to start a base</li>\n<li>Map routes to various desired resources</li>\n<li>Weather forecast</li>\n<li>Other survival features (e.g. (poisonous plants / berry identifier) </li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mysql\">mysql</a></span></li><li><span class=\"cp-tag\">blood</span></li><li><span class=\"cp-tag\">sweat</span></li><li><span class=\"cp-tag\">tears</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/excel\">excel</a></span></li></ul>\n</div>\n</div>", ["", "", "", ""]], ["VR Simulation", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We were inspired by the coolness of Oculus Rift, so we decided to use it combined with Leap Motion which is also a really neat device.</p>\n<h2>What it does</h2>\n<p>Basically it's a small VR game, where you can move around and destroy things with your real world hands. We strapped the Leap Motion sensor to Oculus Rift, so that it can detect your real world hands and put them in the real world. This allows you to interact with the VR world.</p>\n<h2>How I built it</h2>\n<p>We used Unity for the actual little game and the different types of SDKs and APIs required for the hardware.</p>\n<h2>Challenges I ran into</h2>\n<p>It was really hard setting up the hardware to work together.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Well, it does look really cool.</p>\n<h2>What I learned</h2>\n<p>We learned a lot about Unity while doing this. Also that the capabilities of VR are limitless.</p>\n<h2>What's next for VR Simulation</h2>\n<p>There's so much to do with VR. I can see almost every type of entertainment migrating to VR in the future.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/oculus-gear-vr\">oculus-gear-vr</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/leap-motion\">leap-motion</a></span></li></ul>\n</div>\n</div>", [""]], ["DroneGuide", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Got giddy with an Oculus Rift</p>\n<h2>What it does</h2>\n<p>Nothing</p>\n<h2>How we built it</h2>\n<p>With blood</p>\n<h2>Challenges we ran into</h2>\n<p>AWS, integrating API's, integrating  google sign-in,\nupdating aws-SDK packages, gradle conflicts, waiting for gradle to build...</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>stuck by AWS (first time using it)</p>\n<h2>What we learned</h2>\n<p>Don't use AWS if you're not a massive company and have no training on it.</p>\n<h2>What's next for DroneGuide</h2>\n<p>If we get a drone.... we'll continue the implementation.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/lukeyy33/DroneGuide\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/lukeyy33/DroneGuide\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Motion Quiz", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Motion Quiz \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/363/647/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Firstly, we wanted to build a fun quiz game mainly targets kids right now which is nothing like traditional games which game developers write the questions and answers manually. We tried to build a game that extracts questions and answers from raw data.</p>\n<h2>What it does</h2>\n<p>It uses some data set that contains information about countries, capitals, cities and population. Questions are gathered without knowing the structure of the data using some kind of Data Analysis. After getting the questions and answer, the game that we built in Unity fetches the questions from web server in AWS and users can answer them by just hand gestures received by Leap Motion.</p>\n<h2>How we built it</h2>\n<p>We used AWS to store data and the web service that gives the questions. Unity 3D 5.3 for building the game and Leap Motion of course. PHP and MySQL for implementing a web server that outputs in json.</p>\n<h2>Challenges we ran into</h2>\n<p>We tried to build it in Windows first, after 6 hours of coding for the game in Unity it completely failed. So we started from scratch with Mac. After spending couple hours of more efficient coding, Unity in Mac froze and we lost all our design except C# codes. We spend couple hours just to find an appropriate data set. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Although we didn't have any handful experience in Unity 3D or C#, in less than 24 hours we built a functional game with some complex features as getting data from a web server asynchroniously and Leap Motion which we also tried for the first time here.</p>\n<h2>What we learned</h2>\n<p>We definitely learned Unity 3D with C# development. Some web services and data analysis.</p>\n<h2>What's next for Motion Quiz</h2>\n<p>To sum up, the fact that we mainly focused on auto generated questions is because we will not need update questions occasionally, instead we will update question generator algorithms, so we can target all kind of people rather than just kids by customizing question types.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/leap-motion\">leap-motion</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mysql\">mysql</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li></ul>\n</div>\n</div>", ["Worked on backend and data analysis. ", "Mainly worked on visualisation part of the game. ", "", ""]], ["Hackmarks", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>As there was no theme we came up with plenty of ideas, but in the end we decided to leave the fancy hardware aside and try to do something that could be useful for a potential user.  Everyone is using a bookmarks system (usually the browser integrated one), but most of the time the old links (even important ones) are forgotten and they get burried in the massive list of bookmarks.</p>\n<h2>What it does</h2>\n<p>Our web platform takes an URL input from the user and it automatically categorizes, by analysing the english words and it assigns them to different topics (such as Art, Business, Home, Techology) using public classifiers. Also, it displays the most visited websites and a trend of the website categories which are most visited. A system such as this will be really useful for tracking the online browsing and make efficient use of online resources.</p>\n<h2>How we built it</h2>\n<p>We used php for back-end and html and css for the front-end. For the classification algorithm we used uclassify and heroku for deployment. </p>\n<h2>Challenges we ran into</h2>\n<p>We firstly decided to use Python instead of PHP, but unfortunately we had to change our minds and that made us run out of time. Also, as the sun rised, the long time with no sleep had a word in out focusing ability, but coffee and short naps solved the problem.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>-Have a running platform for the demo\n-Managed to work together even if each of us had a different background in programming</p>\n<h2>What we learned</h2>\n<p>Loads of stuff: how to use new libraries, how to divide tasks to finish quicker and even how useful Linux can be.</p>\n<h2>What's next for Hackmarks</h2>\n<p>Hopefully implement all the detailed ideas we came up with, even though the hackathon is finished.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/machine-learning\">machine-learning</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/uclassify\">uclassify</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/laravel\">laravel</a></span></li></ul>\n</div>\n</div>", [""]], ["RedditTrends", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We had access to 1.7 Billion reddit comments, so we thought this could be interesting. </p>\n<h2>What it does</h2>\n<p>Shows the usage of a search term over 8 years of reddit comments.</p>\n<h2>How we built it</h2>\n<p>Simple rails app, then lots of javascript to draw the graphs and do the elastic search queries. Elastic search </p>\n<h2>Challenges we ran into</h2>\n<p>Hosting the data, ended up having to have it locally.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>How long Hugo managed to stay awake.</p>\n<h2>What we learned</h2>\n<p>AWS Elastic Search, some learnt more Javascript.</p>\n<h2>What's next for RedditTrends</h2>\n<p>It will sit on GitHub untouched and alone. - Our amazon money hasn't come through, we won't spend our own \u00a3\u00a3\u00a3\u00a3\u00a3 to host the terrabyte of data. We could implement new graphs and other fancy things quite easily if we did keep working on it. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ruby-on-rails\">ruby-on-rails</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/HarryEH/HackSheffy-Reddit\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/HarryEH/HackSheffy-Reddit\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["drink() while(perfect);", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"drink() while(perfect); \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/363/648/datas/gallery.jpg\"/>\n<p>\n<i>Almost ready!</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"drink() while(perfect); \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/363/653/datas/gallery.jpg\"/>\n<p>\n<i>Drink faster!</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"drink() while(perfect); \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/363/654/datas/gallery.jpg\"/>\n<p>\n<i>Drink's great!</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"drink() while(perfect); \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/363/655/datas/gallery.jpg\"/>\n<p>\n<i>Drink faster!</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Everyone has experienced the frustration of the coffee cooling down or the beer becoming too warm! This simple yet elegant device addresses this issue.</p>\n<h2>What it does</h2>\n<p>This device is designed to show the user the time he has to drink his drink before it gains uncomfortable temperature. When you place your beverage on the device, it calibrates the thermometer to ensure that the measured temperature is correct. Then it uses several measurements of temperature and Newton's law of cooling to calculate the rate of cooling and the time until your drink becomes too cold or warm to drink.</p>\n<h2>How we built it</h2>\n<p>We used Intel Edison dev board and Arduino IDE to run analyze data from temperature sensor and present it on the LCD display. </p>\n<h2>Challenges we ran into</h2>\n<p>Solving the differential equation for the Newton's law of cooling on the Edison dev board.</p>\n<h2>What we learned</h2>\n<p>We gained experience in developing hardware hacks, working with Edison dev board, coding in C++ for Arduino.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/intel-edison\">intel-edison</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li><li><span class=\"cp-tag\">grove</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/nsamarin/hack-sheffield\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/nsamarin/hack-sheffield\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["APT (AquaPoodle Transfer)", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p><em>Two devices, two different user experiences, too much hassle</em></p>\n<p>At the beginning, our inspiration came from a simple issue: when using a desktop or laptop computer to access a website, all of the functionality of our smartphones and/or tablets wasn't being used. Mobile devices have become ubiquitous as easily accessible and multi-functional portable computers. These devices, having access to a wide array of sensors (such as cameras, gyroscopes, gps, etc.) are capable of quickly providing various types of data to websites.</p>\n<p>However, when using our desktops to browse the internet, we are incapable of accessing all of our phone's functionality! We cannot utilize the extra screen space of our phone, nor can we provide data from our phone's sensors to the website. Hence, we came up with the idea for a service that could link the functionality of mobile devices with traditional full-size computers. (And we named it AquaPoodle because why not?) </p>\n<h2>What it does</h2>\n<p>AquaPoodle Transfer (hence referred to as APT) is our proof of concept for a web service that can take data from a mobile device and provide it to a desktop or laptop computer in a simple and accessible manner. To allow a user to send data from one device to another, there are three primary steps:</p>\n<ol>\n<li> Establish a linkage between the mobile device and the computer using a QR code, </li>\n<li> Provide a mobile site to prompt the mobile device to obtain some data, and </li>\n<li> Send the data from the mobile device to the computer. </li>\n</ol>\n<h2>How we built it</h2>\n<p>The actual implementation of APT is fairly involved. Here we will break down the primary steps into the actual code involved.</p>\n<p>Establishing a linkage:\nEnsuring that the user's mobile device and computer are linked requires a lengthy process of developing a unique session ID and then passing it from the computer to the mobile device with a QR code. To achieve, this, the unique ID must traverse the hierarchy of the code, from the web service down to the mobile device.</p>\n<p>To begin the external web service generates a unique ID hashed from the mac address of the computer, the current time, and an internal device counter. The user will utilize a chrome extension that will then receive the unique ID. From there, the external web interface develops a QR code based on the URL that the mobile device will navigate to, and the unique ID. The QR code is then provided to the chrome extension. The user then scans this QR code with their mobile device's camera. At this point, the chrome extension and the mobile device both have the same unique ID. \n\n</p><p>Prompting the mobile device:\nPrompting the mobile device to provide some data, in this case a photo, is achieved by navigating to a URL that contains javascript that provides the appropriate prompt. This URL is contained in the QR code referred to earlier. Here, assuming an android device is being used, the user may choose to provide a photo in the mobile device's storage, or to take a new photo. In either case, the photo is sent via a post to the server, which then caches it.</p>\n<p>Sending data to the computer:\nFinally, the server can take the cached photo data (here encoded in base 64) and send it through a post to the user's chrome extension. The chrome extension then decodes the photo data and displays it in the toolbar to then be used where appropriate.</p>\n<h2>Challenges we ran into</h2>\n<p><strong><em>SO MANY PROBLEMS PLEZ HALP</em></strong></p>\n<p>We ran into an inane number of issues over the course of our 24 hours of coding, which are compiled here:</p>\n<ol>\n<li>Chrome extension errors: Numerous issues arose from finding out how to make a chrome extension interact with an external server and update accordingly. Many google help pages were queried.</li>\n<li>Uncountable number of server errors: There was a constant fight against server errors as we slowly but steadily worked our way through syntax and configuration problems, fueled by coffee, red bull and Huel(TM). We tried to host our server on AquaPoodle.com but the domain provider eated it (T_T) .</li>\n<li>Session IDs that are not so unique: Determining a way to make session IDs that wouldn't clash required some trial and error as we logically decided which unique values could be used to make session IDs. </li>\n<li>Android apps that don't compile: We attempted to develop an app that would provide the functionality achieved by the mobile site provided through a URL in the QR code. Achieving this proved to be infeasible for the amount of time available, as working through the complex syntax of the Android code API and implementing a separate library to read scanned QR codes was just too much.</li>\n</ol>\n<h2>Accomplishments that we are proud of</h2>\n<p></p>\n<ol>\n<li>Implementing an external library in Android code API to (nearly) provide functionality with reading barcodes or QR codes.</li>\n<li>Hosting our own server!</li>\n<li>Creating a functional chrome browser extension!</li>\n<li>Having fun and not losing our sanity!!</li>\n</ol>\n<h2>What we learned</h2>\n<p>Although we learned tons about javascript and server hosting, our most important development was how to work as a team. Splitting the workload efficiently, organizing meeting times and working together with synergy was highly rewarding and essential to our success.</p>\n<h2>What's next for APT</h2>\n<p>One early example we envisioned was to display a user's shopping cart for a given webpage on their phone, and then allow them to select items from the phone shopping cart to navigate to the appropriate webpage on their laptop or desktop. Given the chance to extend APT, we would like to work on extending the functionality to be more generalized, and at a further point in development, make an API of this code to provide more possibilities with sharing data between mobile and full webpages, so that the first idea could be possible.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/apache\">apache</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/lamp\">lamp</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ubuntu\">ubuntu</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li></ul>\n</div>\n</div>", ["", "", "", ""]], ["Myown robot", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/5NwlWxoQP0o?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Myown robot \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/363/519/datas/gallery.jpg\"/>\n<p>\n<i>Bad Phototaking skills</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We were inspired by the search and rescue competition to design a robotic vehicle. Once we started the hackathon we were introduced to the myo armband, which we felt would make a cool controller for our robot. Additionally first person view (FPV) would be an important feature as the robot might be out of the operators sight. The Oculus was available which we thought could be implemented into the project to create a VR driving experience. The user would have a first person VR experience of the robot while controlling it with \"driving gestures\" using the Myo armband.</p>\n<h2>What it does</h2>\n<p>The myo armband can classify several different hand gestures, which are fed into an arduino mega. The recognised  gestures are then converted into directions that the robot should follow. These are passed onto the motor controller which drives the corresponding motors. Finally a camera mounted on the front of the vehicle provides a live FPV which is sent over skype to a control computer.</p>\n<h2>How we built it</h2>\n<p>We started by building the chassis of the robot and connecting the wheels. Next we programmed the motor controller to power either the left or right side motors. After this we calibrated the myo armband and developed arduino code that extracted the different gestures using Myorduino available on the Myo Market. The camera and live feed were set up via Skype. Finally all the parts were integrated on the chassis.    </p>\n<h2>Challenges we ran into</h2>\n<p>Firstly we hoped to use an oculus rift to provide the FPV however, none of our computers met the minimum system requirements to run the oculus rift. </p>\n<p>Additionally we were hoping to use a wifi module to communicate with the arduino over wifi. There were several problems with this approach. Firstly trying to update the firmware on the module proved far too problematic. Secondly we could not connect to the local wifi with the wifi module as we needed special administration permission.</p>\n<p>We were lacking in hardware and had to use leftover bolts and wires from shop floors.</p>\n<p>Lack of experience working with the new hardware and most programming languages meant a limited amount of features of the myo could be communicated to the Arduino due to inability to edit the source code of the Myoduino.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Integrating the myo armband to control the movement of the vehicle while having no knowledge of the myo prior to the project.. \nGetting the microcontrollers to communicate with each other and making use of the limited hardware that was available</p>\n<h2>What we learned</h2>\n<p>Basics of developing for the myo.\nUnderstanding of the myoduino (interaction between Arduino and myo)\nHow gesture extraction works.\nOpenCV is problematic on windows\noculus rift has high system requirements\nHow to get communications running between two micro controllers</p>\n<h2>What's next for Myown robot</h2>\n<p>To make the robot fully wireless and controllable via odroid.\nAdd semi autonomy in the form of an ultrasonic sensor so the robot doesn't crash.\nVR FPV once we can control the robot wirelessly from a desktop computer\nIncrease the complexity of gestures that the robot recognizes and removal of the delay between input and output to add advanced control. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/myo\">myo</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/skype\">skype</a></span></li></ul>\n</div>\n</div>", ["Learned the basics of myo. Worked with integration of the myo, Arduino and myoduino. Attempted to increase functionality of myoduino but unfortunately was not able to due to inexpeince in coding and no knowledge of myo prior to project. Also attemped to work with Oculus but failed due to hardware specification.", "I developed the initial code to extract the different gestures from the myo armband to the arduino. I learnt a lot about how the myo armband classifies different gestures based on which muscles are being activated in the fore arm. ", "Attempted to develop the code for the camera/ Oculus to find that the Oculus would not work with the hardware and that OpenCV doesn't work well on windows (am now very good at adding libraries to various compilers), so found a method to broadcast the camera feed. Also did some of the hardware.", "Hardware and motor control code. (C++)"]], ["CrashMap", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"CrashMap \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/363/546/datas/gallery.jpg\"/>\n<p>\n<i>Scatter plot of all the accidents</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"CrashMap \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/363/549/datas/gallery.jpg\"/>\n<p>\n<i>Heatmap overlay over google maps</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p><strong>HALF A GIG OF DATA?</strong> What couldn't tickle your curiosity more? When we initially saw this data set provided by the government, we dived straight into it, excited by the results we could produce.</p>\n<h2>What it does</h2>\n<p>Provides two visualisations for the user:\n1: Overlays a google map with a heatmap representing accident severity across the UK\n2: Plots a scatter plot of latitude against longitude for every accident</p>\n<h2>How we built it</h2>\n<p>Python and the Bokeh visualisation library</p>\n<h2>Challenges we ran into</h2>\n<p>We initially started working on this with SQLite and d3.js however we ran into problems having 1.6 million javascript objects in the browser. Thus, halfway through, we switched to a much simpler implementation in python.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Getting working visualisations after hours of grafting and experimentation. </p>\n<h2>What we learned</h2>\n<p>Parts of the d3.js library as well as the Bokeh library and python</p>\n<h2>What's next for CrashMap</h2>\n<p>Widgets to filter data on the map</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n</div>", ["", "", ""]], ["Wiki Trumps", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>As Wikipedia is one of the largest and most popular websites in the world, and with an intent of exploring the vast quantity of data it has to offer in mind, we figured that it would be an excellent source to base our implementation of an original spin on the classic Top Trumps game on.</p>\n<h2>What it does</h2>\n<p>Effectively a Top Trumps game where the stats of the card are based on a Wikipedia's page data such as number of images and links on the page.</p>\n<h2>How we built it</h2>\n<p>The server backend is powered by Bottle, a Python micro web-framework which is lightweight and quick to get a functioning server up and running. The frontend is predominantly built on the HTML5 canvas together with JavaScript.</p>\n<h2>Challenges we ran into</h2>\n<p>Generating an appropriate image for the cards since the name and link of the image were deeply nested in the JSON object</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>The final end product</p>\n<h2>What we learned</h2>\n<p>Coding skills, especially the trouble of working with strings in Python 2; the set up process of heroku service and subsequently deploying the app there.</p>\n<h2>What's next for Wiki Trumps</h2>\n<p>As the current working game is generating cards based on a pre-defined list of article titles, the next goal to work towards would be to populate such a list randomly, which was always our intention if we had more time. Further, the game could potentially be made into a multi-player game or a single player game where the player competes against an AI computer player.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://frozen-wave-21193.herokuapp.com/\" rel=\"nofollow\" target=\"_blank\" title=\"https://frozen-wave-21193.herokuapp.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>frozen-wave-21193.herokuapp.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the backend of the game which provides an API for populating the data in each Wiki Trumps card, as well as providing a hosting environment (server) for the game to run on.", "I worked on the game client. It was made fully in javascript using canvas."]], ["Neighbourhood crime app", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We began by looking at datasets available online, including sets from fregis, and <a href=\"https://data.gov.uk/data/search\" rel=\"nofollow\">https://data.gov.uk/data/search</a> , where we stumbled upon the existence of the data.police.uk api, which provides geographical crime data for the whole uk for the past 5 years.\nAfter some brainstorming we decided that providing at a glance crime stats to travels, prospective home owners, etc. could be quite a useful project.</p>\n<h2>What it does</h2>\n<p>It allows you to visualise the the total crime levels per category, and also time series data per category, in a mile radius around a point, for the past year.</p>\n<h2>How I built it</h2>\n<ul>\n<li>npm - to run webpack, and babel (with jsx and e66 presets) to support reactjs</li>\n<li>react googlemaps component to handle map rendering</li>\n<li>react chartjs components for nice looking data visualisation</li>\n<li>A custom api module for data.police.uk</li>\n<li>hacky, inplace edits to files in node_modules to make http-browserify work okay with data.police.uk's CORS settings.</li>\n</ul>\n<h2>Challenges I ran into</h2>\n<ul>\n<li>It's not possible to query more than a month of data with one request, or to query in any other manner than geodata (i.e. not possible to extract averages to compare/normalise the data to) from the api.</li>\n<li>Cross-origin wildcards + http-browserify don't play nicely together, and there's no way to change the setting that needs changing without editing the module file.</li>\n<li>Webpack errors can be rather cryptic, this is probably made worse by using babel too.</li>\n</ul>\n<h2>Accomplishments that I'm proud of</h2>\n<ul>\n<li>Learned to use: react, webpack, babel, and es6 syntax, all in one go.</li>\n</ul>\n<h2>What I learned</h2>\n<ul>\n<li>It's probably not so wise to try to pickup so many new tools at once, especially if you are aiming to have some sort of working product at the end as there are many idiosyncracies and small issues you won't notice.</li>\n</ul>\n<h2>What's next for Neighbourhood crime app</h2>\n<ul>\n<li>Comparisons of locations.</li>\n<li>Comparisons against a national/city/county average level.</li>\n<li>Visualisation of crime along a route, and tighter maps integration.</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/npm\">npm</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/react\">react</a></span></li><li><span class=\"cp-tag\">webpack</span></li><li><span class=\"cp-tag\">chartjs</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://stuwww.dcs.shef.ac.uk/people/erochester1/\" rel=\"nofollow\" target=\"_blank\" title=\"http://stuwww.dcs.shef.ac.uk/people/erochester1/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>stuwww.dcs.shef.ac.uk</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Matt Vs The Haters", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Matt</p>\n<h2>What it does</h2>\n<h2>How I built it</h2>\n<h2>Challenges I ran into</h2>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<h2>What's next for Matt Vs The Haters</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/phaser-js\">phaser.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/socket-io\">socket.io</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twitter\">twitter</a></span></li></ul>\n</div>\n</div>", [""]]]