[["Hacked Together Coffee Pot Control Protocol", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We're college students, and mornings are really not what get us excited. We spend a lot of time dragging ourselves around, doing our morning chores, and pulling ourselves together.</p>\n<h2>What it does</h2>\n<p>The HTCPCP machine houses a fully-automated coffee making apparatus, which contains a large variety of k-cups, a motorized turntable with up to six coffee mugs, as well as cream and sugar that can be portioned according to your preferences. It also holds a high-volume alarm bell capable of waking up even the heaviest sleepers, and a fully-networked and voice-controlled Amazon Echo, connected to our custom Alexa skill.</p>\n<p>The onboard computer uses cloud infrastructure to schedule regular brews and store your preferences. If you've had a long day at work, you can pull up our website and have a fresh cup of tea by the time you get home.</p>\n<h2>How we built it</h2>\n<p>Our team has a diverse skillset, so we set out to build a stack as complex, multifaceted, and disorganized as we are. The core of our service has three layers: a Golang webserver and database frontend which maintains state including past brews and scheduling information. That server communicates with a Python3 client running on the Raspberry Pi that sits on the cart over websockets, and dispatches drink orders that have been entered over the web. This then uses the serial interface to talk to the Teensy, which actually controls all of the physical devices.</p>\n<h2>Challenges we ran into</h2>\n<p>There were many, but the most time consuming and difficult ones were physical; we worked largely with wood, and had to align many finnicky moving parts.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Getting everything to work together across an enormous number of interfaces, and actually produce a drinkable real-world result.</p>\n<h2>What's next for Hacked Together Coffee Pot Control Protocol</h2>\n<p>The Kitchen!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-alexa\">amazon-alexa</a></span></li><li><span class=\"cp-tag\">pneumatics</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/servo\">servo</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/golang\">golang</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c\">c</a></span></li><li><span class=\"cp-tag\">teensy</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/angular-js\">angular.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag\">material-design</span></li><li><span class=\"cp-tag\">mr.-coffee</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/linux\">linux</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/websockets\">websockets</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ajax\">ajax</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sqlite\">sqlite</a></span></li><li><span class=\"cp-tag\">rest</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag\">serial</span></li><li><span class=\"cp-tag\">ssl</span></li><li><span class=\"cp-tag\">air-compressor</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/umbc-hackafe/htcpcp\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/umbc-hackafe/htcpcp\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://breakfasti.me\" rel=\"nofollow\" target=\"_blank\" title=\"https://breakfasti.me\">\n<i class=\"ss-icon ss-link\"></i>\n<span>breakfasti.me</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the front end web interface and the front end API requests, using AngularJS and Angular Material Design.", "I worked on the Golang intermediate server and helped with the Frontend.", "I helped with Mechanical stuff and electrical stuff.", "", ""]], ["DJ Treegasm", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/BP-ektLC5VI?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"DJ Treegasm \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/360/284/datas/gallery.jpg\"/>\n<p>\n<i>fractal tree</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>Wuqiong had always been interested in the interaction of art and science. He had the idea of mapping words to fractal animations to music to dance moves to create a comprehensive form of art that could be experienced through all the senses and cross the boundaries of all art media. Eric is interested in game design and graphics. Nat is interested in web development. Kevin is interested in backend development. We are all good friends with a variety of skill sets and interests that we could combine together to create an interdisciplinary project the would has never seen before. We were able to combine our different perspectives to brainstorm unique ideas and implement them. </p>\n<p>Before the hackathon, Eric prepared Leap Motion and Raspberry Pi hardware so that we will be ready to implement any ideas we might have. Everyone discussed the ideas together and realized that we can use Leap Motion as the inputs to generate the fractal animation and music. We implemented the basic fractal growing and shrinking function first, then we added the functions of changing the colors and saturation of the fractals through different movements. Next, we added the ability to produce sounds through HTML5 Web Audio. We were inspired by theremins and their ability to create oscillating sounds, magically. Nat used the Web Audio's oscillator allowed us to manipulate a frequency, and he used the inputs through Leap Motion to change the inputs. We were able to change the frequency with a roll gesture, and volume with pinching, as well as add drum sounds with sudden changes in the y-axis. Eric and Kevin started out working on the fractal patten. We were interested in the Mandelbrot set, but iterating over the pixels to redraw frames is hard to do smoothly in real time. We found Andrew Hoyer's implementation of the H-tree fractal very appealing, and it changed with mouse movement smoothly with javascript. </p>\n<p>One of our first barriers was understanding using Leap.js's way to get input from the Leap Motion device. After we realized that it is in a very simple loop, that returns json objects with states of hands, we very quickly progressed to get it to start giving the fractal and the oscillator input.</p>\n<p>Our goal originally was to create a user experience that involves many senses, and to be engaging and fun to use. The fractal tree and the oscillator share some common gestures, so the user can get both visual and audio pleasure from moving themselves. People who came by and saw us while we were developing this hack had a lot of fun while playing with our project, and some even achieved Treegasm.  </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://ayebear.com/DJ-Treegasm/\" rel=\"nofollow\" target=\"_blank\" title=\"http://ayebear.com/DJ-Treegasm/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>ayebear.com</span>\n</a></li>\n<li><a href=\"https://github.com/ayebear/DJ-Treegasm\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ayebear/DJ-Treegasm\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Lead the brainstorming process for the idea. Planned out which features to implement in what order and what libraries to use. Helped with debugging.", "I worked on setting up the fractal with the leap motion input, scaling and calibration, merging everyone's code together, and getting the drums to work.", "I worked on the audio JavaScript file. For audio, I was inspired by the theremin instrument and I used the oscillator in html5's web audio api to generate the tone, and the gain node in the audio context to control volume. When new input comes from the sensor, the audio updates.", ""]], ["Lots of Holes", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Lots of Holes \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/360/220/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Lots of Holes \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/360/222/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Lots of Holes \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/360/233/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We have all driven around town and encountered annoying potholes, but not everyone has the time to report every pothole that they come across. </p>\n<h2>What it does</h2>\n<p>Our project, Lots of Holes, is an app that runs on your phone while you drive that detects potholes or irregularities in the road and then maps the locations of the potholes onto a google map on our website for local government agencies to see.</p>\n<h2>How we built it</h2>\n<p>To make the android app, we used android studio to read accelerometer data. We used Javascript and JQuery to make the website.</p>\n<h2>Challenges we ran into</h2>\n<p>Our car died last night so we weren't able to use it to test our project. However, we overcame this by making a makeshift car out of swag we found around HackUMBC, and then made a test track with a pothole out of a pizza box.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are proud of making a makeshift car to test of project on.</p>\n<h2>What we learned</h2>\n<p>We learned how to use the Google Maps API and JQuery/Javascript to create an interactive website.</p>\n<h2>What's next for Lots of Holes</h2>\n<p>We plan on improving the algorithm we use to detect bumps and error check other irregularities.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag\">internet-sourced-data</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://lots-of-holes.firebaseapp.com/\" rel=\"nofollow\" target=\"_blank\" title=\"https://lots-of-holes.firebaseapp.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>lots-of-holes.firebaseapp.com</span>\n</a></li>\n<li><a href=\"https://github.com/shahvineet98/lotsofholes\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/shahvineet98/lotsofholes\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I assisted with the android app development and help setup the firebase database with the android. I also worked on the web UI.", "did all mostly ", ""]], ["The Electoral Roast", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"The Electoral Roast \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/360/301/datas/gallery.jpg\"/>\n<p>\n<i>Twitter's scathing views on Donald Trump</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We set out to create a tool that could model people's feelings about the US Election. </p>\n<h2>What it does</h2>\n<p>The Electoral roast parses new tweets that concern any of the candidates for the US Presidential election. From there it categorizes the tweet as either a statement for, against, or neutral in regards to the candidate it concerns. We then plot that tweet as a point on a US map that corresponds to its location. Over time, the number of points on the map grow, and we can see where support or opposition is tightly clustered. If you zoom in, you can see specifically the tweet that each dot on the map represents.</p>\n<h2>How we built it</h2>\n<p>The key components of our system are as follows. 1) A python script that pulls tweets concerning the candidates from Twitter's Streaming API. 2) A python script that incorporates machine learning and natural language processing to run a sentiment analysis (deciding whether the feelings behind a tweet are positive or negative) on every new tweet. 3) A Web application that pulls from a firebase server and plots tweets onto a map of the world.</p>\n<h2>Challenges we ran into</h2>\n<p>Our original plan was to use a given set of tweets as the training set for our learning algorithm. The tweets in the original training set didn't match the subject matter for our application closely enough, so the sentiment analysis ran poorly. We had to hand categorize 1500 of the tweets we were streaming to build a better, more accurate training set for our application.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are proud that we were able to parse the tweets as they came in efficiently. We are also proud of being able to represent the world's opinions on the US Candidates in realtime. We are very proud of being able to implement a basic learning algorithm to a real world issue.</p>\n<h2>What we learned</h2>\n<p>We learned a lot about the Node.js/Express framework. Additionally, we also learned a lot about sentiment analysis.</p>\n<h2>What's next for The Electoral Roast</h2>\n<p>Well, after the primaries are over, we'll focus the Electoral Roast on the two major candidates from either party. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/natural-language-processing\">natural-language-processing</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/nltk\">nltk</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-maps\">google-maps</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twitter\">twitter</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://electoralroast.com\" rel=\"nofollow\" target=\"_blank\" title=\"http://electoralroast.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>electoralroast.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on training our algorithm to run a sentiment analysis on tweets concerning the election candidates. I also contributed to the backend scripting that provided tweets to our web app.", "I worked on the visualization of data and the database we used on the project. I setup our firebase server and the connections between firebase and the web app. I then took the data and used it to populate a map using the google maps api. I also used the chart.js library to visualize our data using pie graphs. Finally I worked with express and node to set up routes for our app.", "I worked on the streaming services to pull relevent data from Twitter in a clean fromat using Python, Tweepy, and other public APIs. And contributed on front end mapping with Google Maps.", "I worked primarily on the front-end of the website. What I did specifically was design the layout of each webpage, choose the appropriate fonts, and make sure any animations or graphical interfaces were communicating properly with back-end. I also learned how to use Node, Angular, and ExpressJS. "]], ["CADVR", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to try out some of the new technology that would be provided at hackathon, but had no idea what we would do with it. We ended up talking about Iron Man and 3D modeling, and came up with the idea of CAD virtual reality object viewer.</p>\n<h2>What it does</h2>\n<p>Views any imported 3D .obj model in Oculus Rift virtual reality environment mounted with a Leap Motion for viewing controls.</p>\n<h2>How we built it</h2>\n<p>1 hour - grab swag, order hardware, eat lunch.\n4 hours - brainstorm nothing.\n1 hour - download older version of unity.\n1 hour - try to fix oculus runtime.\n4 hours - try to decipher leap orion documentation.\n1 hour - download leap v2, learn leap v2 library.\n1 hour - eat pizza.\n1 hour - implemented leap v2, oculus runtime .8 magically works.\n7 hours - configure leap controls. [retarded rotation]\n2 hours - create new system of leap controls.\n1 hour - create app image, splash art, app name, compile everything, fix bugs, add screenshot capability.</p>\n<h2>Challenges we ran into</h2>\n<p><strong>See above.</strong></p>\n<h2>Accomplishments that we are proud of</h2>\n<p>Configuring Oculus Runtime, figuring out Leap documentation, and fixing our buggy project 30 minutes before the deadline.</p>\n<h2>What we learned</h2>\n<p>How to develop an application for unity, leap, and oculus together.</p>\n<h2>What's next for CADVR</h2>\n<p>More fluid controls, support various cad file types, multiple objects in one scene, etc.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag\">c-sharp</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/oculus\">oculus</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/leap-motion\">leap-motion</a></span></li></ul>\n</div>\n</div>", ["", "", ""]], ["SafePod", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"SafePod \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/360/376/datas/gallery.jpg\"/>\n<p>\n<i>SafePod</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>The biggest hurdle to people who experience traumatic situations from seeking help is the stigma that surrounds it. Largely due to lack of understanding from the society, people often tend to refrain from sharing which would otherwise be greatly beneficial in recovery. As technology has brought us closer, mental health is one area where technology still has a lot to offer. By ensuring a secure, anonymized channel of communication, we can help people shed the stigma that is often associated in these cases.</p>\n<h2>What it does</h2>\n<p>SafePod is a completely anonymous forum where users of the app can share their thoughts, experiences and seek, offer help. The sense of anonymity offered is so high that even the server does not know who the user is or any demographic information such as the IP address</p>\n<h2>How we built it</h2>\n<p>Since there was a dearth of mobile applications in this area, we built an android application. To ensure strong anonymity, we used TOR (The Onion Router) which is a widely used technology to ensure complete anonymity online. The backend was built using a Django server that maintains the forum data.</p>\n<h2>Challenges we ran into</h2>\n<p>Ensuring anonymity while being guarded against spam was perhaps the biggest challenge. We admit it is the first step and our priority was anonymity. Given a short 24 hour period, it was also challenging to bootstrap ourselves into new technology and tools.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We completed the app that successfully anonymized users of the app. This will encourage people to share which in turn helps speed up their recovery.</p>\n<h2>What we learned</h2>\n<p>If we sit together with a lot of coffee, a lot of good things can come out :)</p>\n<h2>What's next for SafePod</h2>\n<p>Our original goal for SafePod was to make an open effort. We intend to fully open source it and collaborate with health care providers to make mental health access easier.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/django\">django</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://safepodapp.org\" rel=\"nofollow\" target=\"_blank\" title=\"http://safepodapp.org\">\n<i class=\"ss-icon ss-link\"></i>\n<span>safepodapp.org</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Developed the app and anti-spam features allowing server to limit too many calls.", "", ""]], ["Interactive Motion Capture Paint Application", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to make an interactive program using the Myo and the Oculus Rift to help people practice writing syllabary, however we ran into some shortcomings.</p>\n<h2>What it does</h2>\n<p>We wound up making a program that allowed users to draw using the Myo.</p>\n<h2>How we built it</h2>\n<p>Using the Unity game engine with the Myo assets.</p>\n<h2>Challenges we ran into</h2>\n<p>Trying to use 3D movement to maneuver a box around a 2D space. Coming up with a system that allowed users to turn drawing on and off using one of the built in Myo gestures.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We managed to get the maneuvering working after awhile. </p>\n<h2>What we learned</h2>\n<p>A lot about the Unity engine and about motion capture from working with the Myo.</p>\n<h2>What's next for Interactive Motion Capture Paint Application</h2>\n<p>Continue working on it to see if the original goal could be achieved.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/myo\">myo</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/lwbrown42/InteractivePaint.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/lwbrown42/InteractivePaint.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Reminders++", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Words</p>\n<h2>What it does</h2>\n<h2>How I built it</h2>\n<h2>Challenges I ran into</h2>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<h2>What's next for Reminders++</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ios\">ios</a></span></li><li><span class=\"cp-tag\">swift2</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Andrewjeska/Reminders-\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Andrewjeska/Reminders-\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["MicroPennies", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>my story</p>\n<h2>What it does</h2>\n<h2>How I built it</h2>\n<h2>Challenges I ran into</h2>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<h2>What's next for MicroPennies</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://userpages.umbc.edu/~vphil1/HackAThon/home.php\" rel=\"nofollow\" target=\"_blank\" title=\"http://userpages.umbc.edu/~vphil1/HackAThon/home.php\">\n<i class=\"ss-icon ss-link\"></i>\n<span>userpages.umbc.edu</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Shelver", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>I couldn't find a good eBook catalog view for desktop</p>\n<h2>What it does</h2>\n<p>Takes an <a href=\"http://opds-spec.org/\" rel=\"nofollow\">OPDS</a> feed and turns it into a usable interface.</p>\n<h2>How I built it</h2>\n<p>Mojolicious + Dancer2 + Perl</p>\n<h2>Challenges I ran into</h2>\n<p>Inconsistent standards</p>\n<h2>What I learned</h2>\n<p>A lot about CSS selectors</p>\n<h2>What's next for Shelver</h2>\n<p>Expanding spec coverage</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/perl\">perl</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/nginx\">nginx</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://opds.lin.anticlack.com/html/https://opds.lin.anticlack.com/opds/recent\" rel=\"nofollow\" target=\"_blank\" title=\"https://opds.lin.anticlack.com/html/https://opds.lin.anticlack.com/opds/recent\">\n<i class=\"ss-icon ss-link\"></i>\n<span>opds.lin.anticlack.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Pasta or Italian composer", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>I was having pasta and listening to an Italian opera and this idea struck me</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://krishmunot.com/pastaorcomposer/\" rel=\"nofollow\" target=\"_blank\" title=\"http://krishmunot.com/pastaorcomposer/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>krishmunot.com</span>\n</a></li>\n<li><a href=\"https://github.com/KrishMunot/pasta-or-composer\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/KrishMunot/pasta-or-composer\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["ExpressIBot", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>As the baby boomer generation ages we find our elder care system completely overwhelmed by the sheer amount of the people it needs to accommodate. A solution that a lot of tech people have come up with is elder care robots, but a lot of people are concerned with the emotional consequences of the elder being alone with the robot all the time, whole they be sad from the lack of interaction? How can we help that? We thought of Expressibot as a robot that would sympathize with the user and take the first steps to meaningful emotional interaction with robots. Expressibot is, what we believe, a strong start to human robot interaction in a way that most robots do not accommodate for yet.</p>\n<h2>What it does</h2>\n<p>ExpressIBot takes a regular Android smartphone and turns it into a lean mean feeling machine.</p>\n<h2>How we built it</h2>\n<p>We attached a phone to a 2 degree of freedom servo series, attached those servos to an arduino, added a raspberry pi to facilitate communication between and the machine learning processing system, used the same pi to connect to a pi camera that could take and forward the picture to the machine learning processing system, have said system read tweets to our dedicated twitter and take a picture to observe the user's reaction, and have the system send a command to the arduino to change the expression on the phone.</p>\n<h2>Challenges we ran into</h2>\n<p>The servo system we were </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Generation and implementation of a unique synonym mapping system for sentiment analysis, introduction to arduinos, using socket networking with java and python, creating an android app</p>\n<h2>What we learned</h2>\n<p>We learned that hardware is generally the limiting factor in a hackathon such as this. The servos and their housing were falling apart, causing us to abandon the movement aspect of the bot.</p>\n<h2>What's next for ExpressIBot</h2>\n<p>The future of ExpressIBot sees a proper chassis and full interaction mechanisms, and utilization in elderly homes and homes of the mentally challenged so that they may be able to lead a more fulfilling life with their social interactions.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/eclipse\">eclipse</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/intellij-idea\">intellij-idea</a></span></li><li><span class=\"cp-tag\">corenlp</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li><li><span class=\"cp-tag\">raspberrypicamera</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/zimmermegan/expressibot\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/zimmermegan/expressibot\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Planning and designing of the system, all of the sentiment analysisand twitter handling, some of the construction. ", "I worked on all the Arduino pieces which enabled the bot to further emote, in addition to the facial expressions it has.", "", "", ""]], ["Roolette", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>a game</p>\n<h2>What it does</h2>\n<h2>How I built it</h2>\n<h2>Challenges I ran into</h2>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<h2>What's next for Roolette</h2>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/HackUmbcGame/GameMakerUmbc\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/HackUmbcGame/GameMakerUmbc\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Text Adventure", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Text Adventure \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/360/332/datas/gallery.jpg\"/>\n<p>\n<i>Game Console</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>CandyBox 2, A Dark Room</p>\n<h2>What it does</h2>\n<p>Accepts user input and uses rng to make a new adventure.</p>\n<h2>How we built it</h2>\n<p>Java</p>\n<h2>Challenges we ran into</h2>\n<p>Problems with coding specific parts of the project</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Getting the interface to work.</p>\n<h2>What we learned</h2>\n<p>Expanded our knowledge of various aspects of java</p>\n<h2>What's next for Text Adventure</h2>\n<p>Finishing it.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["PlanYourStudies", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspirationof</h2>\n<p>So all of us are transfer students in some way. And we've all had to go through the process of seeing whether our courses would transfer. Also, since college is so expensive nowadays, one has to worry about how one can complete their degree at the cheapest cost possible. </p>\n<h2>What it does</h2>\n<p>This website asks a user for what is the course at their school they'd like to take, but at another school. Then it returns a list of schools which have directly equivalent courses and lets the user know how much it'll cost to take the equivalent course at another school versus their own school</p>\n<h2>How we built it</h2>\n<p>Used bootstrap,Jquery for front-end development. And for back-end we used java, spring mvc, mongoDB , mySQL, Jersey, Rest. Used Maven for dependency management.</p>\n<h2>Challenges we ran into</h2>\n<p>difficulty setting up so many technologies in the project</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Successfully integrated more than 10 technologies within 24 hours</p>\n<h2>What we learned</h2>\n<p>Got the first-hand experience of being in a hackathon and spoke with some very nice people.</p>\n<h2>What's next for PlanYourStudies</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mysql\">mysql</a></span></li><li><span class=\"cp-tag\">hibernate</span></li><li><span class=\"cp-tag\">jersey</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/spring\">spring</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/facebook-login-api\">facebook-login-api</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/maven\">maven</a></span></li><li><span class=\"cp-tag\">web-service</span></li><li><span class=\"cp-tag\">json-jackson</span></li></ul>\n</div>\n</div>", ["Worked on the backend developing the restful controllers, service, DAO layer of the application of the application. ", "The idea was mine and I collaborated on coming up with the design.\nI worked on the front-end using bootstrap. It was my first time ever using bootstrap so it was a little difficult since I had never used html, CSS ,or bootstrap. Overall, it was a great experience.", ""]], ["MLG Cyber Security", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"MLG Cyber Security \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/360/291/datas/gallery.jpg\"/>\n<p>\n<i>A randomly generated game board with obstacles, enemy units, etc</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to make a game about a dramatized version of hacking/cyber security.</p>\n<h2>What it does</h2>\n<p>The game takes place \"in\" the internet.  You spawn as one of two characters who fight waves of hackers, who increase in number and difficulty the longer you last! </p>\n<h2>How we built it</h2>\n<p>We used the Unity engine with C# scripts to develop the software, recruiting the help of the Unity community \"2D Roguelike Game Tutorial\" (<a href=\"https://unity3d.com/learn/tutorials/projects/2d-roguelike-tutorial\" rel=\"nofollow\">https://unity3d.com/learn/tutorials/projects/2d-roguelike-tutorial</a>). Additionally, Piskel was used for the character sprite and floor/object tiles.</p>\n<h2>Challenges we ran into</h2>\n<p>Our original plan was for a much more in-depth and strategically engaging game - however, none of us had actually made a game before, nor had any of us used the Unity engine. As a result, while the spirit of the game remains the same, we had to significantly pare down the complexity, features, and assets. Even the ending name for the project is a spoof of how much we wanted to do compared to what we finished! (Not that we aren't proud of what we did!)</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We implemented a real time arcade style game which keeps track of the players stats.</p>\n<h2>What we learned</h2>\n<p>We learned how to use unity and C#. The artist(s) experimented with sprite-style graphics.</p>\n<h2>What's next for MLG Cyber Security</h2>\n<p>It would be exciting to implement some of our originally planned features. For example, our original pitch involved specifically planned levels versus procedurally/randomly generated ones.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://www.dropbox.com/sh/3u4ng6dqaxdmsvo/AABfe83wTLITbfUguZFNdRhza?oref=e&amp;n=543016104\" rel=\"nofollow\" target=\"_blank\" title=\"https://www.dropbox.com/sh/3u4ng6dqaxdmsvo/AABfe83wTLITbfUguZFNdRhza?oref=e&amp;n=543016104\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.dropbox.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Flapjack", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Flapjack \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/359/635/datas/gallery.jpg\"/>\n<p>\n<i>Main</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Flapjack \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/359/632/datas/gallery.jpg\"/>\n<p>\n<i>Noun not found</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Flapjack \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/359/633/datas/gallery.jpg\"/>\n<p>\n<i>Tracking Screen 1</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Flapjack \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/359/634/datas/gallery.jpg\"/>\n<p>\n<i>Tracking Screen 2</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Flapjack \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/360/276/datas/gallery.jpg\"/>\n<p>\n<i>Hardware</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We were interested in developing our hardware skills and felt it would be fun to combine natural language processing and Twitter streams to understand people's opinions regarding different topics.</p>\n<h2>What it does</h2>\n<p>Our app lets users enter a topic via our android app. The topic is then used as the constraints to sift through live tweets. The live tweet that contains the search term are then analyzed for positive or negative sentiment. The results of this analysis is sent to a particle core where different colored leds are flashed at varying speeds. The rate at which the lights flash is based on how polarized the sentiment values are. For instance a topic with a strong negative sentiment would cause the orange LED to blink progressively faster, whereas a string positive sentiment would cause the blue LED to blink faster.</p>\n<h2>How we built it</h2>\n<p>We built the app using Flask for our backend. Our flask server has two routes. One for noun to image calls, and one for opening and analyzing twitter streams. Both routes depend on the input from our android application. When the flask server opens a new twitter stream sentiment data is posted to the spark-core web api, which calls LED updates methods for our cube.</p>\n<h2>Challenges we ran into</h2>\n<p>Hardware. None of us have ever worked with hardware before, so the learning curve was pretty steep. It was also difficult to find the components we needed. In addition the spark core would not allow us to flash custom web functions due to a firmware glitch with the latest version.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are proud about learning basic electronics. (Getting LEDs to light up from the web:p)</p>\n<h2>What we learned</h2>\n<p>We learned how complicated electronics are.</p>\n<h2>What's next for Flapjack</h2>\n<p>We hope to make a wireless acrylic cube case for the LEDs/Spark-Core so you could leave it on a table or somewhere around the house.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/natural-language-processing\">natural-language-processing</a></span></li><li><span class=\"cp-tag\">arduino-uno</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/the-noun-project\">the-noun-project</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/particle\">particle</a></span></li><li><span class=\"cp-tag\">sparkcore-web-api</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/wardzacharyj/FlapJack\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/wardzacharyj/FlapJack\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Built the android app, flask server, and tweet sentiment analysis. Also battled bad firmware with josh and molly.", "I worked mainly on hardware, building the circuit with our LEDs", "I worked on writing code for the arduino and Spark core"]], ["BoomBOX", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"BoomBOX \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/360/202/datas/gallery.jpg\"/>\n<p>\n<i>Developing BoomBox !!</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>I do Ju Jitsu and learning to KickBox. </p>\n<h2>What it does</h2>\n<p>It's a Game where you box wearing a Microsoft Band. You perform the moves which has been mentioned on the app screen. You have 30 seconds and if you fail 5 times (Read Game Rules) then you lose.</p>\n<h2>How we built it</h2>\n<p>We developed the system in Android Studio. We collected my boxing moves (don't be fussy about my sloppy boxing skills) and trained a classifier which detects the moves.</p>\n<h2>Challenges we ran into</h2>\n<p>Couldn't get the Microsoft Band 2 to work so used just one handed boxing using the Band 1.0. So you can't use the other hand sorry for that. </p>\n<p>Establishing connections , data cleaning and labeling, implementing lightweight ML algorithm for android phone.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>It's holding up to some extent. </p>\n<h2>What we learned</h2>\n<p>Bug Fixes</p>\n<h2>What's next for BoomBOX</h2>\n<p>Two handed boxing and combos and I can't limit my imagination ... </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/alam4/BoomBOX\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/alam4/BoomBOX\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Backend Developer and Data analysis", ""]], ["ReactBook", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2><strong>Inspiration</strong></h2>\n<p>After the release of Facebook reactions, we realized they could be used to get a more nuanced view of the reception of a particular news topic.</p>\n<h2><strong>What it does</strong></h2>\n<p>The user inputs in a trending search term and the input used to search Facebook for related posts. Our scraper then sorts the reactions of each of the top articles, then pushes it to the cloud. Our website then graphs this data in real-time every 30 seconds.</p>\n<h2><strong>Challenges we ran into</strong></h2>\n<p>Plotting a graph in real time was challenging. Many Javascript charting libraries were difficult to understand, especially at 3 in the morning. Scraping data from Facebook was also difficult since captcha tests were thrown multiple times. Parsing through entire HTML files for specific elements sucked since their selectors did not remain static. </p>\n<h2><strong>What we learned</strong></h2>\n<p>Scraping from websites is hard, especially when you need authentication from the website. We also learned how to use regex to parse through HTML files since we could not inject jQuery into the Facebook page. We had to learn Canvasjs for plotting data dynamically.</p>\n<h2><strong>What next</strong></h2>\n<p>Hopefully next time, we can connect the database to the webpage. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/canvas\">canvas</a></span></li><li><span class=\"cp-tag\">casperjs</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/phantomjs\">phantomjs</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/stevenzhang18/ReactBook\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/stevenzhang18/ReactBook\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"http://stevenzhang18.github.io/ReactBook/\" rel=\"nofollow\" target=\"_blank\" title=\"http://stevenzhang18.github.io/ReactBook/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>stevenzhang18.github.io</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Worked on the front-end and created graphs that update in real-time.", "Created the scraper using casper.js, then pushed the data that was retrieved to a Firebase database."]], ["Emotion-Recognizer", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Emotion-Recognizer \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/360/416/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Emotion-Recognizer \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/360/417/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Emotion-Recognizer \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/360/418/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Emotion-Recognizer \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/360/419/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Emotion-Recognizer \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/360/420/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>Emotion-Recognizer</h1>\n<p>Android app built for HackUMBC using Project Oxford</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/nfsz/Emotion-Recognizer\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/nfsz/Emotion-Recognizer\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Spirited", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Spirited \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/360/315/datas/gallery.jpg\"/>\n<p>\n<i>System Architecture</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Spirited \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/360/438/datas/gallery.jpg\"/>\n<p>\n<i>Demo picture #2</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Spirited \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/360/439/datas/gallery.jpg\"/>\n<p>\n<i>Demo picutre #1</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>I read a paper that predicted user mood based on his cell phone usage pattern, and I thought of using a similar template for web browsing.</p>\n<h2>What it does</h2>\n<p>The browser (called 'Spirited') tracks the user's browsing pattern (activity and emotion) and guesses his mood. Mood is also guessed using his facial expressions through the webcam. Then, it tries to bring it to an optimal level by playing certain songs. For example, if the user is sad, the browser would play more upbeat songs. If he is ecstatic, it would play slower songs.</p>\n<h2>How we built it</h2>\n<p>We built the browser in Python, the music player in Django, and the facial recognition in OpenCV. The browser opens the website in the window; simultaneously, in the background, it performs sentiment analysis on the website itself to get the mood of the user. This is also aided by the webcam, where we run an instantaneous facial analysis to determine mood based off of expressions.</p>\n<h2>Challenges we ran into</h2>\n<p>A couple of the really tough challenges were:\n1) We had to analyze a song to evaluate its intensity, so a suitable heuristic had to be designed\n2) Classification of emotions using facial expressions is still a little buggy</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>1) The song does change based on your mood, which I can attest to; while tesing, it did indeed give me a more upbeat song if I spent too much time on a website, and encouraged me to be more active.\n2) The facial recognition is able to differentiate between a smile and a frown, which when plugged in to our application enhances the accuracy of the results</p>\n<h2>What we learned</h2>\n<p>1) How to do facial recognition and analysis using OpenCV\n2) Basics of making a browser\n3) Performing sentiment analysis on websites\n4) Song intensity analysis</p>\n<h2>What's next for Spirited</h2>\n<p>1) The browser is very rudimentary; it currently only renders the response websites give on a window. We're going to have to include a lot of other features including encryption to make it a real, full-fledged browser\n2) We'll be refining the song selecting heuristic to improve performance and accuracy\n3) We're also planning to include an indexing mechanism, so that if the user visits the same site multiple times it doesn't have to analyze it for sentiment again and again</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/django\">django</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sqlite\">sqlite</a></span></li><li><span class=\"cp-tag\">pickle</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/thingspeak\">thingspeak</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/opencv\">opencv</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/numpy\">numpy</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/scipy\">scipy</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/AgentK1729/spirited\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/AgentK1729/spirited\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I built the browser and designed the heuristic for analyzing the intensity of songs, wrote the sentiment analysis module, and integrated the facial recognition into the project.", "I worked on the Facial Emotion Recognition using the webcam. "]], ["Safe Car", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Safe Car \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/360/430/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Our group was two different groups, other members of each team walked away giving up, so we got together and put our ideas until we thought of this idea. We thought of how it is very unsafe for someone to try to drive while it is too hot in their car. They could faint and cause an accident, or even worth death. The idea began small and we started to expand it more and more. The team kept pushing over the limits to keep going even when it was a small project.</p>\n<h2>What it does</h2>\n<p>It is an Arduino uno that uses two different color led lights, Buzzer, button and temperature sensor. The main idea is when you enter a car on a very hot day, you can breeze in the air easily. Our project determines the temperature inside the car. If the temperature is too hot, then the Buzzer will go off. At this point you have three options, you can go outside the car and wait for it to cool down, you can press a button that will put your windows down and whenever you would like to test it then you press the rest button, or you can press the button and shut it off and the windows will go down and whenever you would like to reset you press the reset button. (another option is having the buzzer beeping while you drive) </p>\n<h2>How we built it</h2>\n<p>We have used Ardunio uno as the main brain of the whole operation. Also we used the temperature sensor, buzzer, two different color and button that were connected to the base shield. Using the Arduino program to code it (C++)  </p>\n<h2>Challenges we ran into</h2>\n<p>The problems we faced was that we couldn't get the buzzer to stop buzzing once we pressed the button to stop the buzzer. The issue with our code was that once the button was held down(by declaring it as 1) it would stop the buzzer, but the main problem was that once the button was released it was set back to 0 once again and continue its buzzing. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We were finally able to get the button to work where it would require you to just press the button to once instead of holding it throughout the time it would take to cool down. How we fixed that specific issue was the we were able to once the buzzer was declared as 1 </p>\n<h2>What we learned</h2>\n<p>how to use the hardware of arduino, which we had no experience what so ever, as well as working with different piece of arduino that required different codes.</p>\n<h2>What's next for Safe Car</h2>\n<p>Work with a car to try to put the windows down. Also, for cars with remote starters we can have a raspberry pie to connect to your phone through bluetooth or wifi to tell you if your car is cooled down. As well as running the A/c while the windows are closed.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/hardware\">hardware</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Bas3ad/Safe-Car\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Bas3ad/Safe-Car\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Rep Buddy", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Rep Buddy \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/360/327/datas/gallery.jpg\"/>\n<p>\n<i>Start Page! Press start to begin exercising</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Rep Buddy \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/360/324/datas/gallery.jpg\"/>\n<p>\n<i>Summary Page! Shows your Reps, Sets and even Calories Burned!</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Rep Buddy \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/360/326/datas/gallery.jpg\"/>\n<p>\n<i>Information Page! General description of the apps present and future capabilities</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Rep Buddy \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/360/391/datas/gallery.jpg\"/>\n<p>\n<i>Main Menu! Choose you're exercise routine settings and you're GOOD TO GO!</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Rep Buddy \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/360/401/datas/gallery.jpg\"/>\n<p>\n<i>Settings Screen! Set your start time, your weight for calorie counting press save and you're set!</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Rep Buddy \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/360/402/datas/gallery.jpg\"/>\n<p>\n<i>Start timer in action! on the start page!</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>We wanted to make a FitBit without the FitBit. </p>\n<p>An App that would count out your repetitions and sets for you, keeping you on track and consistent as you go through your exercises. </p>\n<p>Originally it was a challenge for me and Justin, not knowing Corona SDK in the way our teammate Tez does. We found ways to work around this and throughout the course of this 24 hour project we became proficient at Lua and Corona. </p>\n<p>The biggest difficulty came in properly detecting a 'Rep', we do this through the accelerometer. Measuring the change in the users position and counting a repetition as completed if accelerometer values go above an upper threshold than below a lower threshold.  </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/lua\">lua</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/corona\">corona</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://www.dropbox.com/sh/5we0v9ycq5xs8ue/AACv1nbZleguRhc3eGNqIBpka?dl=0\" rel=\"nofollow\" target=\"_blank\" title=\"https://www.dropbox.com/sh/5we0v9ycq5xs8ue/AACv1nbZleguRhc3eGNqIBpka?dl=0\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.dropbox.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Pace", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration I like to run</h2>\n<h2>What it does</h2>\n<h2>How we built it</h2>\n<h2>Challenges we ran into</h2>\n<h2>Accomplishments that we're proud of</h2>\n<h2>What we learned</h2>\n<h2>What's next for Pace</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/dbriggs2/Pace2/blob/Test1/FINALCODE\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/dbriggs2/Pace2/blob/Test1/FINALCODE\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Library Book Reservation ", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<h2>What it does</h2>\n<p>make it easy for students </p>\n<h2>How I built it</h2>\n<p>xcode </p>\n<h2>Challenges I ran into</h2>\n<p>code problems </p>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<h2>What's next for Library Book Reservation</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ios\">ios</a></span></li></ul>\n</div>\n</div>", [""]], ["Re-bound", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Re-bound \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/360/306/datas/gallery.jpg\"/>\n<p>\n<i>menu</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Re-bound \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/360/307/datas/gallery.jpg\"/>\n<p>\n<i>start</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Re-bound \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/360/308/datas/gallery.jpg\"/>\n<p>\n<i>dodge</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Before now, I had never really ventured much far into graphical programming. I was pretty proficient at console based programming, but not much outside of that. So when a friend offered to teach me how to use his home brew java game engine, with his help, I produced this</p>\n<h2>What it does</h2>\n<p>The player starts off as a red square and the objective is simple, dodge all blue objects hurdling and rebounding toward you. If a collision occurs, the game ends and the user is sent back to the menu.</p>\n<h2>How I built it</h2>\n<p>The simple game was constructed using a home brew engine running opengl. Images are loaded to the screen, their positions are updated very frequently, and a radius is given to each object for collision. The player controls the red square (with WASD control) and blue circles move at their own constant speed, rebounding off walls to stay within frame.</p>\n<h2>Challenges I ran into</h2>\n<p>Since this was my first attempt at making a graphical game, the biggest challenge was wrapping my head around the machine renders objects, movement, and interaction. </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I was definitely proud at how polished i was able to make the game look, especially for my first game. I game the game a simple glossy look, and created the menu banner myself in photoshop.</p>\n<h2>What I learned</h2>\n<p>Not only was I able to create my first game, but I have learned the very basics of graphics and game development in such a short time.</p>\n<h2>What's next for Re-bound</h2>\n<p>The game runs, but I feel not finished yet. The game has no way of keeping track of the user's time spent alive to make a score for the user, and high scores made by the user. There could also be more game modes to create aside from the basic normal mode.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["Stache Overflow", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Thought it would be cool</p>\n<h2>What it does</h2>\n<p>Adds mustaches to live webcam</p>\n<h2>How I built it</h2>\n<p>In Java, using sarxos webcam capture API</p>\n<h2>Challenges I ran into</h2>\n<p>Deprecated source files and learning how to use Maven</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Making mustaches appear on screen</p>\n<h2>What I learned</h2>\n<p>How to make mustaches appear on screen</p>\n<h2>What's next for Stache Overflow</h2>\n<p>Improving interface, maybe Oculus Rift support?</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/wlucas1/Stache-Overflow\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/wlucas1/Stache-Overflow\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["LoLcator", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We love to use League of Legends to start friendships with other players on campus. But sometimes it's still hard to find those players.</p>\n<h2>What it does</h2>\n<p>This website gathers locations of fellow League players and places them on a collective map. Other players can come to the site and see players who have previously added their self.</p>\n<h2>How we built it</h2>\n<p>It's a website. We used HTML, PHP, CSS, and Javascript.</p>\n<h2>Challenges we ran into</h2>\n<p>EVERYTHING. LITERALLY EVERYTHING GAVE US ISSUES. But we triumphed in the end.  Ajax was scary at first, but we used it like the pros. It was difficult learning how Google Maps works. It was also our first time using Riot API. We also never used Amazon Web Services before for databases, but it's SUPER useful and powerful.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Having a working prototype in the end. We can actually add users and view others!</p>\n<h2>What we learned</h2>\n<p>We learned how fun it is to use GitHub. \nHonestly, we learned almost everything today.</p>\n<h2>What's next for LoLcator</h2>\n<p>If we are not successful in this hackathon, we still plan on continuing development of the site as it is something we could use ourselves. Additional features include a login system, communication system, better organization of BIG DATA, and more integration with Riot's API.</p>\n<hr/>\n<p>If the lolcator.comlu.com site does not appear to work at first, refresh the page! Riot's API is a bit restrictive.</p>\n<hr/>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php5\">php5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://lolcator.comlu.com/\" rel=\"nofollow\" target=\"_blank\" title=\"http://lolcator.comlu.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>lolcator.comlu.com</span>\n</a></li>\n<li><a href=\"https://github.com/xharris/league_site\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/xharris/league_site\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I did full-stack development. Did a little bit of everything. ", "I worked mostly on html, css and the aesthetics. I also worked the first time on javascript, jQuery and php.", "I worked on some of the back end, swapping out our traditional RDB setup with a cloud based RDB on Amazon's Web Services platform. I learned a lot about how Ajax and JSON work and am no longer embarrassed to say I'm interested in back end development with fears of those aforementioned languages. It was also fun incorporating two APIs (Riot Games and Google Maps) and requesting API keys. It felt like a true software engineer experience. ", "I worked with front-end HTML and CSS. This was my first time working with HTML and CSS and it was a fun learning experience.", "I worked on front-end foundations of HTML and CSS. This was essentially my first time coding and I learned a lot. "]], ["Speedbump", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Speedbump \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/360/275/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Speedbump \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/360/278/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Speedbump \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/360/294/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>The idea for Speedbump came about on a brief car trip up to UMBC. We started our journey brainstorming for ideas. Big words were thrown out such as \u201cnetwork security\u201d, \u201cinternet spheres\u201d, and \u201cFourier transforms\u201d. Slowly, but surely, we arrived at the conclusion that people needed fast internet, and numerous variables could degrade internet speeds. When your internet goes down, where do you go? With Speedbump you\u2019ll know where to go. </p>\n<h2>What it does</h2>\n<p>Speedbump is a real time globalized internet speed checker. It is a web app that logs your internet speed as soon as you visit it. It will check your current internet speed, as well as the internet speeds of other locations reported by users in that location.<br/>\nIt was built with usability in mind. There are no login screens and no user information registered. We just want your internet speed. </p>\n<h2>How we built it</h2>\n<p>Speedbump is composed of two components, a database and a frontend website. We used Javascript, html, and the Google Maps API for the web pages, and Firebase as our backend. Upon visiting the site, Javascript runs a speed check and takes coordinates of your location. Using Google Maps\u2019 geocoder, we find the address associated with your coordinates. The address and speed are both uploaded to Firebase. The second page of the app features a Google Map that displays nearby internet speeds to the user\u2019s location. </p>\n<h2>Challenges we ran into</h2>\n<p>At first we wanted to use a python script to run the speed test, but later realized that it would not be possible to run the script client side. Figuring out how/what data to store in Firebase was difficult. We narrowed the information down to just the necessary components: bandwidth and location. Another challenge was figuring out how to associate multiple speed reports from users in the same building to just one marker on the map. If we uploaded the exact coordinates of every user to Firebase, the app would report multiple speeds in one location. Instead we used Google Maps\u2019 geocoder to associate coordinates with an address, and then calculated a moving average of the most recent 10 speeds associated with that address. Debugging in general was very painful.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We\u2019re proud of our resilience in the face of difficult bugs and difficulties. There were numerous conceptual challenges we had to address such as scalability and the entire infrastructure of our web app.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-maps\">google-maps</a></span></li><li><span class=\"cp-tag\">geocode</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://hjh2bs.github.io\" rel=\"nofollow\" target=\"_blank\" title=\"http://hjh2bs.github.io\">\n<i class=\"ss-icon ss-link\"></i>\n<span>hjh2bs.github.io</span>\n</a></li>\n<li><a href=\"https://github.com/hjh2bs/hjh2bs.github.io\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/hjh2bs/hjh2bs.github.io\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["filedrive", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>The original program made my microsoft doesn't work on case-sensitive file systems (specifically HFS+ journaled case sensitive I think)</p>\n<h2>What it does</h2>\n<p>upload and download files from directory you want</p>\n<h2>How I built it</h2>\n<p>A dream and a prayer</p>\n<h2>Challenges I ran into</h2>\n<p>the api sucks and sometimes doesn't process correctly</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>the whole program</p>\n<h2>What I learned</h2>\n<p>that programming while tired isn't a good idea</p>\n<h2>What's next for filedrive</h2>\n<p>1) sleep\n2) comments\n3) add it into mac os x services\n4) make it look pretty</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/onedrive\">onedrive</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Laundry-96/filedrive\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Laundry-96/filedrive\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I did literally everything"]], ["ReceiptSplit", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"ReceiptSplit \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/360/248/datas/gallery.jpg\"/>\n<p>\n<i>logo</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>Have you ever been to a restaurant with a big group of friends and had everyone wanting to pay a different way? Six credit cards get passed to the server while the people paying cash squabble over who owes exactly what. The waitress then has to run six credit cards and all that cash and hope they heard and put everything in correctly. \nWe want to avoid all of that. With Receipt Split you can easily have everyone pay with their own credit cards, with their own accounts, on the same bill and see that total amount go down in real time. This not only makes it easier for restaurants to split a bill but also makes it easier for customers to pay for exactly what they want and how they want. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/socket-io\">socket.io</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag\">deasync</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://162.243.40.80:3000/kasper-html5/\" rel=\"nofollow\" target=\"_blank\" title=\"http://162.243.40.80:3000/kasper-html5/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>162.243.40.80</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the backend server technology and database processes", "I worked with the front end development of the website. This included laying out the framework and making the webpage functional. This was my first time using HTML since high school so it was challenging but fun!", "I worked on the design of the webpage and connected it to the back end portion.\nI also helped with debugging the back end."]], ["Count Defender", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Count Defender \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/360/295/datas/gallery.jpg\"/>\n<p>\n<i>Count Defenders</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Motivate children to learn basic mathematics.</p>\n<h2>What it does</h2>\n<p>Game that takes place in space and the user has to solve simple math problems by shooting down the correct answer.</p>\n<h2>How we built it</h2>\n<p>We used:\n--html, javascript, jQuery, photoshop , canvas and css. </p>\n<h2>Challenges we ran into</h2>\n<p>-Couldn't put separate images on same canvas\n-Couldn't find the correct numbers that represent keys such as \"w\" , \"a\" , \"s\", and \"d\".</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>-Animated \"stars\" background to run smoothly.</p>\n<h2>What we learned</h2>\n<p>-How to make a simple game with collisions, movement, and other techniques. \n-Some javascript and jquery  </p>\n<h2>What's next for Count Defender</h2>\n<p>Implementing a system so the numbers that are \"enemies\" , are randomized to make levels more challenging. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/photoshop\">photoshop</a></span></li></ul>\n</div>\n</div>", ["Worked on the javascript, css, and html. ", ""]], ["AMuseGame", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"AMuseGame \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/360/405/datas/gallery.jpg\"/>\n<p>\n<i>Playing the game</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Nobody has previously made an app that uses data from the Muse Bluetooth data-gram protocol in order to play a game. We wanted to create a new and exciting use for this previously meditation-only headset.</p>\n<h2>What it does</h2>\n<p>The Muse headband recognizes blinks and head movements. The character is controlled by blinking to jump and moving the user's head down to duck.</p>\n<h2>How we built it</h2>\n<p>Using a node.js module for Muse, we fed blinking and accelerometer data from the headset to a simple, side-scrolling game that is written in Javascript and HTML 5.</p>\n<h2>Challenges we ran into</h2>\n<p>We had a lot of trouble reading data from the Muse headband, but after some modification of a node.js module designed to visualize this data, we updated the player's movements in accordance.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We did not have very much node.js experience before this, but we were able to modify an existing module to collect only the data we wanted and link this to a simple 2D game.</p>\n<h2>What we learned</h2>\n<p>We learned a lot about programming a back-end with node.js.</p>\n<h2>What's next for AMuseGame</h2>\n<p>Integrating more sensor data (possibly EGG values), adding a calibration screen, and UI enhancements across the board.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/photoshop\">photoshop</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://drive.google.com/file/d/0B4EId1gnDNSkWEM1Z1k4NGgyejQ/view?usp=sharing\" rel=\"nofollow\" target=\"_blank\" title=\"https://drive.google.com/file/d/0B4EId1gnDNSkWEM1Z1k4NGgyejQ/view?usp=sharing\">\n<i class=\"ss-icon ss-link\"></i>\n<span>drive.google.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Keep-Me-Up-Pebble App", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Trying to stay awake during mundane tasks or after just waking up is hard! We need something to keep us awake.</p>\n<h2>What it does</h2>\n<p>The smartwatch continually vibrates and flashes to keep you awake. </p>\n<h2>How we built it</h2>\n<p>The CloudPebble WebIDE for the Pebble smartwatch and the C programming language</p>\n<h2>Challenges we ran into</h2>\n<p>Making the GUI. Certain tasks not working in the background like vibrate.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>The customizability of the app.</p>\n<h2>What we learned</h2>\n<p>How to work with the pebble API!</p>\n<h2>What's next for Wake-Me-Up-Pebble-App</h2>\n<p>Accelerometer support! </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c\">c</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/pebble\">pebble</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/CFAK/KeepMeUp\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/CFAK/KeepMeUp\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["TwoPlayerGames", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"TwoPlayerGames \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/360/283/datas/gallery.jpg\"/>\n<p>\n<i>Title screen</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>After learning about how to use Interfaces in our AP Computer Science class, we thought that it would be a really good to test it with Two Player Games.</p>\n<h2>What it does</h2>\n<p>The user can pick between 5 (or 6 if you include Checkers, but we ran out of time to complete it) different unique two player games to play with his/her friends. </p>\n<h2>How we built it</h2>\n<p>We built in the java using JOptionPane to add a GUI.</p>\n<h2>Challenges we ran into</h2>\n<p>It was really difficult to format the GUI board for battleship and checkers, and programming wise we ran into a lot of logical errors such as not generating our battleships in the correct locations, or not being able to get the elapsed time for the typing competition correctly.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We managed to finish programming 5 different games throughout the day</p>\n<h2>What we learned</h2>\n<p>How to use JOptionPane to make textbased programing games more interesting, and understanding more about the power of Interfaces.</p>\n<h2>What's next for TwoPlayerGames</h2>\n<p>Add local networking so friends can play real time on different computers</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/eclipse\">eclipse</a></span></li></ul>\n</div>\n</div>", ["We worked together on all of of the games except for Nimand connect 4. I did Connect 4 and he did Nim. ", "We worked together on everything, but soloed Nim and did Typeracer and MMM."]], ["TeamMemeDream", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We couldn't really think of an idea, so we just settled on this. It was pretty fun to make though.</p>\n<h2>What it does</h2>\n<p>You can put in some meme text and the program will try to determine (usually unsuccessfully) the best type of meme to go with the text.</p>\n<h2>How we built it</h2>\n<p>We did not have enough access to memes, so we had to scrape livememe.com to get more memes.\nAs someone who doesn't know machine learning at all, tensorflow is hard.</p>\n<h2>Challenges we ran into</h2>\n<p>Tensorflow\nGetting enough memes</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We'll see...</p>\n<h2>What we learned</h2>\n<p>We got a small introduction to machine learning and web scraping.</p>\n<h2>What's next for TeamMemeDream</h2>\n<p>Hopefully we'll finish it.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">tensorflow</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/pkmnnerd/TeamMemeDream\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/pkmnnerd/TeamMemeDream\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Dark Night", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to have people experience old paintings in a modern way.</p>\n<h2>What it does</h2>\n<p>You can view a nice little lake in VR</p>\n<h2>How we built it</h2>\n<p>We used Unity, Google Cardboard, and Trinus.</p>\n<h2>Challenges we ran into</h2>\n<p>Our computers are potatoes so we couldn't run Oculus so we decided to use Cardboard. Myo wasn't working either.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Our drawing in unity</p>\n<h2>What we learned</h2>\n<p>Myo, Unity and Trinus VR</p>\n<h2>What's next for Dark Night</h2>\n<p>We are going to develop it so you can walk into Starry Night and other paintings.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">trinus-vr</span></li><li><span class=\"cp-tag\">cardboard</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li></ul>\n</div>\n</div>", ["", "", ""]], ["VibraLock", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Dan was annoyed about having to get up to open the door to let his friends into his room, so we came up with the idea to have a custom knock that would allow other people in without having to get up yourself                              </p>\n<h2>What it does</h2>\n<p>When initialized, it learns a knocking pattern and then detects if that pattern is entered correctly. If entered correctly, the door will unlock.                                                                                                                                    </p>\n<h2>How we built it</h2>\n<p>Dan worked on programming the vibration sensor while the rest of us worked on a door unlocking mechanism.                                                                                       </p>\n<h2>Challenges we ran into</h2>\n<p>-Scrapping our initial idea 6 hours into the hackathon\n-The vibration sensor was finicky and wouldn't pick up the lighter knocks/vibrations\n-One person coding the whole thing\n-Servos were not strong enough</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>-Finishing                      </p>\n<h2>What we learned</h2>\n<p>-how to use a vibration sensor                                                                                                                                                                                                                                                </p>\n<h2>What's next for VibraLock</h2>\n<p>-Developing an unlocking mechanism</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag\">ingenuity</span></li><li><span class=\"cp-tag\">innovation</span></li><li><span class=\"cp-tag\">piezo</span></li><li><span class=\"cp-tag\">vibration-sensor</span></li></ul>\n</div>\n</div>", ["I programmed the LCD and LED array that was used with the arduino.", "Programmed the arduino code and learned how to use the vibration sensor", "I worked mainly during the idea creation process, as well as the the mechanical aspect o the project. I calculated the force required to open the door knobs via the pulleys and servos we were given. I got an in-depth view of what it was like to code with the arduino for the first time.", "I worked on the mechanical and wiring aspect o the project. I built a pulley system to turn the door knob using a servo. I also experimented with wiring and coding with the arduino for the first time. It was intimidating at first but I was able to integrate an LCD display and piezo sound sensor by the end."]], ["KeepCrying", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"KeepCrying \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/360/279/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"KeepCrying \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/360/280/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"KeepCrying \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/360/285/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>KeepCrying allows you to spectate and participate on intense debates about anything.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/handlebars-js\">handlebars.js</a></span></li><li><span class=\"cp-tag\">donald-trump</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n</div>", ["Coded the Node.js backend, as well as the category page.\n", "", ""]], ["Twitter Critic", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Twitter Critic \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/360/270/datas/gallery.jpg\"/>\n<p>\n<i>TwitterCritic main site for account requests.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Twitter Critic \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/360/407/datas/gallery.jpg\"/>\n<p>\n<i>Demo of the application, code alongside</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Twitter Critic \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/360/432/datas/gallery.jpg\"/>\n<p>\n<i>Each node links to the tweet it was populated from. Here you can see the most negative, and positive tweets (respectively) of Mr. West!</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>An affinity for the expedient and fun Processing language, a hackathon focus on big data, caffeine, and a need to see who is always angriest on Twitter.</p>\n<h2>What it does</h2>\n<p>Aggregates the 100 most recent tweets of any Twitter account, rates their sentimentality, and plots them as colorful, interactive links on a 2D graph.</p>\n<h2>How we built it</h2>\n<p>Processing and HTML5 front-end, Python server and data aggregation, PHP and Flask for dynamic web development.</p>\n<h2>Challenges we ran into</h2>\n<p>Conversion of the Processing .pde file into a javascript file to be directly embedded into the website display.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>The polished, working nature, combination of many languages and teammate specialty skills.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/processing\">processing</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li></ul>\n</div>\n</div>", ["I designed and built the application interface/graphing function using Processing.", "I worked to help with ideas for the project, worked on front end web development, and created aesthetics for the website.", "I worked on the front end web dev portion of our program, displaying the data on a locally hosted server.", "I developed the backend of the application. This involved pulling the tweets with the twitter API as well as analyzing their sentiment. I also integrated the backend and frontend components."]], ["Binger", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Binger \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/360/249/datas/gallery.jpg\"/>\n<p>\n<i>Log In Screen</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Binger \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/360/256/datas/gallery.jpg\"/>\n<p>\n<i>Card</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Binger \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/360/257/datas/gallery.jpg\"/>\n<p>\n<i>Saved Movies</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>I love Netflix for its huge selection of content. I don't love Netflix for how overwhelming this huge selection of content is... That's why we built Binger: to help you discover movies and TV shows more easily.</p>\n<h2>What it does</h2>\n<p>Binger compiles data from a variety of sources all over the internet to provide you with a simple package of everything you want to know: Trailers, Synopses, Streaming sources, and a lot more.</p>\n<h2>How we built it</h2>\n<p>We used vanilla web technologies, as well as jQuery, to power the front-end, and the Material Design Lite library to style a lot of elements. On the back-end, I'm running a Node.js powered API proxy on my home server and we're using Firebase to authenticate and store user data.</p>\n<h2>Challenges we ran into</h2>\n<p>A lot of the APIs we used did not allow Cross-Origin Requests. As a result, I had to set up a proxy to serve a lot of the API calls. Some APIs were also undocumented, not public, or unofficial. For example, we ended up using the internal Hulu API to search for Hulu content.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>The oAuth authentication with Facebook and Google went surprisingly smoothly, so that was nice.</p>\n<h2>What we learned</h2>\n<p>MVCs are useful for web applications.</p>\n<h2>What's next for Binger</h2>\n<p>Possibly porting to a mobile app.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag\">mdl</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/linux\">linux</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/npm\">npm</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/oauth\">oauth</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag\">lol</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://github.com/naitian/Binger\" rel=\"nofollow\" target=\"_blank\" title=\"http://github.com/naitian/Binger\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the Card Layout front end.", ""]], ["ITE Positioning System", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"ITE Positioning System \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/360/385/datas/gallery.jpg\"/>\n<p>\n<i>Wifi Recorder App Interface</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"ITE Positioning System \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/360/392/datas/gallery.jpg\"/>\n<p>\n<i>Wireless signal strength by MAC Address and location.</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>GPS is a really cool invention but what if you could position yourself in a building using the dozens of WiFi access points positioned throughout the campus!</p>\n<h2>What it does</h2>\n<p>First it records access point signal strength data from various points throughout the building and stores them in an SQLite database within the Android app. When it's ready to determine a location, it again takes the signal strength of all nearby access points and compares it to the measurements of the points recorded.</p>\n<h2>How we built it</h2>\n<p>Our app consists of two pieces, the <a href=\"https://github.com/RobRoseKnows/wifi-recorder\" rel=\"nofollow\">Wifi Recorder</a> which records all the WiFi access points located by the device. It stores signal strength and a text value representing the location in an SQLite database. This was exported to a CSV file.</p>\n<p>We built another application that would take the CSV file and calculate the averages and standard deviations of the tens of thousands of data points for each MAC Address.</p>\n<p>The second part is the <a href=\"https://github.com/RobRoseKnows/indoor-gps\" rel=\"nofollow\">Indoor GPS</a> which imports the data generated from the CSV and then looks at the points surrounding it to guess where the user is now.</p>\n<h2>Challenges we ran into</h2>\n<p>We had trouble using content providers and a few other elements of the Android API. Although all the logic works, we've consistently ran into minor bugs that prevented us from having a full locator prototype in 24 hours.</p>\n<h2>What's next for ITE Positioning System</h2>\n<p>We hope to polish the technology so it works throughout all of ITE, rather than just a few select rooms. We also hope to in the future adopt more complex machine learning techniques to find a users location based on collected data. We also hope to simplify the two apps into a single app.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n</div>", ["I built most of the functionality for the Android Apps. I also did a portion of the data gathering by going from room to room and looking like I was taking pictures.", "", "", ""]], ["react", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>React</h2>\n<p><em>Have the image-browsing experience of a lifetime</em> through the power of facial recognition and machine learning. React watches you while you view images, and learns via sentiment analysis which types of images you like to see and feeds you more like these.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/machine-learning\">machine-learning</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/npm\">npm</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/microsoft-project-oxford\">microsoft-project-oxford</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/AriaFallah/react\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/AriaFallah/react\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [".", ""]], ["Keyboard HERO ACE", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>How I built it</h2>\n<p>Built on a game engine I wrote in Java and OpenGL.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/opengl\">opengl</a></span></li></ul>\n</div>\n</div>", [""]], ["BrainMaker", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>I always enjoyed considering how concepts such as logic, relations, and graphs play into human knowledge and learning</p>\n<h2>What it does</h2>\n<p>It can \"understand\" certain statements based on sentence structure, learn \"concepts\", categories of concepts, how the concepts are related (relations), and using logic to make deductions. It can also have an emotional response to certain words</p>\n<h2>How I built it</h2>\n<p>I used Python to create a class for general concepts, categories for concepts, relationships of objects, for rules of deduction, word and word structure storage, a personality and a \"brain\" class that stores instances of all of the previously mentioned classes</p>\n<h2>Challenges I ran into</h2>\n<p>Build the logic class to work like acutal logic</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Finishing most of the essential classes for the program, and managing to build instances of my classes</p>\n<h2>What I learned</h2>\n<p>To remember to test complicated classes through test instance of the classes before moving on\nabout my limited knowledge in logic, and brain processes</p>\n<h2>What's next for BrainMaker</h2>\n<p>finishing (and fixing) some of the functions in the class so that BrainMaker can formulate more complex responses, also to add a portion of code to allow some to make an AI from scratch</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n</div>", [""]], ["Course Compass", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>This is a web-based recommendation system for course selection. It involves collaborative filtering algorithm. In most cases, students often get advise about courses from professors or senior students. To make their job easy, we compare the students with similar history of course registration, to make a personalized recommendation. All conditions required for the student to take the class are also taken care of.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/r\">r</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/tding/CourseCompass.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/tding/CourseCompass.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Focus", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/xLZ5DZEEPWE?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Focus \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/360/096/datas/gallery.jpg\"/>\n<p>\n<i>Main Window</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>I, like many people, have difficulty concentrating. Medication for attention difficulties is often times ineffective if begun in adulthood when ADHD is caught late, and tends to have harsh side effects. Medication alone is generally not enough even when it is effective; a combination of cognitive behavioral therapy and medication has been proven to be the most effective. Mindfulness needs to be trained, and we can use technology to retrain ourselves to be attentive to reading, listening, and observation. With progressively increased exposure expectations to content in small chunks, focus can be trained step by step over time, improving after continuous use. </p>\n<h2>What it does</h2>\n<p>There are 3 modes: Reading, listening, and observation. In reading mode, the user is exposed to text that flashes across the screen for a designated time period based on the number of days the program has been used. This time period increases slightly with each day. The user must stay attentive and can not drift into thoughts nor divert their eyes, because the text flashes fast enough where if attention is not given for the entirety of the time period, the words are replaced by the next word and the user would not be able to grasp the concept of the sentence. Listening mode is similar, but instead of words appearing on the screen, it is an exposure to an open source audiobook for the given period of time. This has the intention of helping students to learn to concentrate during lectures. The third mode is observation, which has the user look at an image for a designated amount of time, then quizzes the user on content of the image. This trains attentiveness to observation as well as tests short term memory.</p>\n<h2>How I built it</h2>\n<p>C# </p>\n<h2>Challenges I ran into</h2>\n<p>It definitely does not have as many features, modes, or the amount of content I wanted to incorporate it, but, for a 24-hour hackathon, the demo does its purpose to show the basic functioning.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I made it and it works! </p>\n<h2>What I learned</h2>\n<p>How to use multiple classes to interact and pass data to each other in c#, creating a project that opens multiple different forms, using a timer for form events, and saving output to a text file for long term storage.</p>\n<h2>What's next for Focus</h2>\n<p>Scientific studies to determine if attentiveness and short-term memory is actually improved over time through use of this application. Even though in theory, it may work, real scientific evidence needs to be found before any claims can be made, and this will tell us how much it may improve focus as well.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li></ul>\n</div>\n</div>", ["I created the whole program."]], ["Rart", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Making a resume is hard, so we decided to create Rart to do it for us</p>\n<h2>What it does</h2>\n<p>Guides you through the process of creating a resume and adds a \"smart\" feature to make it relevant to the jobs you apply for</p>\n<h2>How we built it</h2>\n<p>Used a linux os to build a GUI through qt designer and PyQt4. Exports the resume to a .docx file using python-docx. Finally compiled the application using pyinstaller in a virtual windows environment (so the exe works on windows)</p>\n<h2>Challenges we ran into</h2>\n<p>Being able to create more tabs for education/work. Being able to save the resume and open it again in the application to try more than one job description.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Creating a functioning website and application. Getting python to work with docx. Compiling an exe from a linux environment.</p>\n<h2>What we learned</h2>\n<p>Working as a team. Sticking to a project all the way through. Bootstrap, PyQt4, pyinstaller, etc. </p>\n<h2>What's next for Rart</h2>\n<p>Creating persistence with your resume (upload an old resume to be run through the \"rarter\", have the app read the current directory for the resume to automatically be \"rarted\"), improving the keyword match functionality, reading job descriptions from urls.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">pyqt4</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://www.rart.me\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.rart.me\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.rart.me</span>\n</a></li>\n<li><a href=\"https://github.com/cltsd27/hackumbc2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/cltsd27/hackumbc2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Balloon Animal Maker", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Balloon Animal Maker \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/360/053/datas/gallery.jpg\"/>\n<p>\n<i>Squad</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Balloon Animal Maker \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/360/054/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Balloon Animal Maker \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/360/055/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>It's a fun and mechanicaly difficult project to build. </p>\n<h2>What it does</h2>\n<p>It takes a blownup balloon, folds and ttwist it to create the balloon animal selected</p>\n<h2>How I built it</h2>\n<p>Wood, screws, power tools, servos, and arduino</p>\n<h2>Challenges I ran into</h2>\n<p>We could not finish the last section of the machine due to failed designs.  </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>The first two stages of the machine work perfectly </p>\n<h2>What I learned</h2>\n<h2>What's next for Balloon Animal Maker</h2>\n<p>We will keep working on it and will showcase it for Maryland Day at UMD. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li></ul>\n</div>\n</div>", [""]], ["ToGo", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"ToGo \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/359/952/datas/gallery.jpg\"/>\n<p>\n<i>To Baltimore</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"ToGo \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/359/953/datas/gallery.jpg\"/>\n<p>\n<i>To NYC</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"ToGo \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/359/954/datas/gallery.jpg\"/>\n<p>\n<i>To SF</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"ToGo \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/359/978/datas/gallery.jpg\"/>\n<p>\n<i>To Towson</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>Summary</h1>\n<p>ToGo is a web app designed to help you plan out a trip with directions, weather, and Uber information in addition to a customized Spotify playlist based on your destination.</p>\n<p>It is built on the <a href=\"https://developers.google.com/maps/\" rel=\"nofollow\">Google Maps</a>, <a href=\"https://developer.spotify.com/web-api/\" rel=\"nofollow\">Spotify</a>, <a href=\"https://developer.forecast.io\" rel=\"nofollow\">Dark Sky</a>, and <a href=\"https://developer.uber.com\" rel=\"nofollow\">Uber</a> web APIs, and written primarily in JavaScript.</p>\n<h1>Features</h1>\n<ul>\n<li>Directions between two locations</li>\n<li>Weather at destination</li>\n<li>Uber options and pricing</li>\n<li>Customized Spotify playlist for trip</li>\n</ul>\n<h1>Issues</h1>\n<p>We encountered in particular issues with the Spotify API, as there was no way to dial in locations and receive songs based on the location. As a result, we looked for other ways of coming up with these results and located a list of playlists created by Spotify for major cities. When a user enters a destination, we triangulate the nearest city and use the playlist created by Spotify for that city.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-maps\">google-maps</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://astrocb.github.io/ToGo\" rel=\"nofollow\" target=\"_blank\" title=\"https://astrocb.github.io/ToGo\">\n<i class=\"ss-icon ss-link\"></i>\n<span>astrocb.github.io</span>\n</a></li>\n<li><a href=\"https://github.com/AstroCB/ToGo\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/AstroCB/ToGo\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I did research on the four APIs we used in order to understand how to combine their data into one product\u00a0\u2013\u00a0for example, we combined Uber's cost-per-minute data with the duration info from the Google Maps API in order to calculate an estimated cost for the trip. I also put together some of the front end elements, set up hosting, and designed the application's overall data flow and structure.", "I got the necessary spotify location specific database (and learned more about injecting dynamic JavaScript and breakpoints into existing, minified, code). ", "I designed UI elements that supported the overall design, theme and functionality of the application. "]], ["SchedLit", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration Finding a group to study with</h2>\n<h2>What it does Creates groups, list classes and events and then allows students to search for them</h2>\n<h2>How we built it two groups of two worked in parallel one on the web dev and one on the android app</h2>\n<h2>Challenges we ran into Fire! Fire! FIrebase! ,(the data base was not cooperative)</h2>\n<h2>Accomplishments that we're proud of : the fact that we built the app and website when none of us had any idea what we were doing before hand</h2>\n<h2>What we learned I learned html others learned java and java script</h2>\n<h2>What's next for SchedLit move web dev and a new data base</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/git\">git</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://noaharmiger.github.io\" rel=\"nofollow\" target=\"_blank\" title=\"https://noaharmiger.github.io\">\n<i class=\"ss-icon ss-link\"></i>\n<span>noaharmiger.github.io</span>\n</a></li>\n<li><a href=\"https://github.com/NoahArmiger/NoahArmiger.github.io.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/NoahArmiger/NoahArmiger.github.io.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/ThankQ/schedlit.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ThankQ/schedlit.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the front end of the app and created user interfaces using Java in android studio.", "I worked on the backend of the website, connecting firebase to the website and handling its functionality.", "I worked on the backend as far as using Firebase and coding the functionality of the Android application.", ""]]]