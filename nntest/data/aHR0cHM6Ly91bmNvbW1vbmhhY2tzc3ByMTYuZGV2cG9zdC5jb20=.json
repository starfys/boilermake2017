[["EzKeze", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>EzKeze</h1>\n<p>HIDE YO KIDS HIDE YO MESSAGES THEY BE TAPPIN INTO ERRYONE OUT HERE</p>\n<p>Core Features\nAUTOMATIC ENCRYPTION AND DECRYPTION ON ANY CHAT CHANNEL ON CHROME</p>\n<p>Easy to use, no Cryptography knowledge required </p>\n<p>Never worry about your privacy ever again - a cross platform solution. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/mroseman95/Crypto-Plugin\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/mroseman95/Crypto-Plugin\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["i directed the entire project to success and handled encryption functions.", "i directed the entire project to success and made a backend to allow the extension to be scaleable", "i directed the entire project to success and i worked on developing the iOS keyboard using double encryptions with AES - CTR and CBB. Keyboard allows for custom encryption and decryption hassle-free", "Handled the DOM navigation and implementation of encryption methods inside the extension"]], ["stripr", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/vw1My7_x0Cg?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"stripr \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/041/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"stripr \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/126/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"stripr \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/130/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"stripr \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/291/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Power strips today have practical problems that make them severely inefficient; put in two laptop chargers and suddenly a 6-plug strip can be completely used up. There are some variations on the market that attempt at a more flexible structure, yet those are still restrictive in design, expensive, difficult to mount, and don't respond to specific user needs, such as USB ports or international travel.  So we decided to build an efficient and intelligent power strip that has a more flexible design, provides usage information, and responds to wireless control.</p>\n<h2>What it does</h2>\n<p>Structurally, the power strip, stripr, is divided into modules that can extend and rotate, giving more room for diverse plug designs.  An LCD display shows real time voltages across each module, and this information is also sent to the cloud where it can be analyzed and the results sent wirelessly to the user's computer or phone.</p>\n<h2>How we built it</h2>\n<p>The structural parts of the power strip were built by 3D-printing ABS filament, and the modules are connected by adjustable metal rods which house the wires connecting the modules.  We then built a circuit connecting an Arduino with a LCD display, the system also serving as a digital multimeter that measures voltage drops.  The Arduino then sends the voltage numbers to a computing system where it can be stored as a text file in the cloud.</p>\n<p>For the sake of the prototype and due to limitations in size, parts, and time, the Arduino, breadboards, and circuit wiring are attached to the power strip on the outside.  </p>\n<h2>Challenges we ran into</h2>\n<p>Due to fire hazard regulations, we couldn't actually plug our power strip into a power source, so in order to demonstrate the function of the prototype, we compromised by wiring 9V batteries, with a small rotating camera appliance, internally through the power strip.  We recognize that this isn't exactly how our product will function, but due to the challenge of testing, we decided that using a battery driven motor was the best substitute to mimic a real power supply and appliance.</p>\n<p>In addition, we faced difficulty in transmitting the voltage data over the WiFi network.  While the system properly provides real time voltage values, it was only able to properly send it to a computer using a direct USB connection.  After hours of debugging and reconfiguration, we attribute this setback to the security of the University of Chicago's wireless networks, since the WiFi requires additional security information the Arduino cannot provide and it probably also has other firewall and security features that would affect connectivity.  Therefore, the current strip only provides real time information on the LCD display.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We went through an iterative design process to ensure that we had a quality finished product with complex ideas.  We were able to embed a microcontroller to make a \"smart\" power strip, and we were able to minimize the disadvantages of 3D printing in regards to tolerance.</p>\n<h2>What we learned</h2>\n<p>Through this project, we learned a lot about the vast abilities and functions of microcontrollers as well as how to develop advanced Arduino programming functions.  We discovered better ways to wire circuits and design hardware, paying special attention to structural integrity.  We also got a chance to dive into the world of internet connected devices and the analytics one could potentially unveil using it.</p>\n<h2>What's next for stripr</h2>\n<p>Our next steps for stripr would be to formally flesh out the modular concept.  We would develop detachable modules, which would allow the product to be customized to each customers needs, such as more USB ports or international outlets.  Additionally, we would create an application interface to complement the device.</p>\n<h2>Domain Name: stripr.tech</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/3dprinting\">3dprinting</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/autodesk\">autodesk</a></span></li><li><span class=\"cp-tag\">inventor</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://www.github.com/patnir\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.github.com/patnir\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I designed and created the CAD files for the project, and 3D printed the components and modules. I also assembled the power strip and assisted with the development of the micro-controllers and wiring.", "Developed electronics for sensing power usage as well as deep learning algorithms to save power and manage power.", "Designed the circuit and developed the code for the arduino microcontroller. Exploited WiFi capabilities of the arduino yun to store real time data", ""]], ["Cube Field Runner", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Was inspired by the game cube runner, cube field runner allows you to move up and down too! You can thwart cubes from all directions!</p>\n<h2>What it does</h2>\n<p>Its a game, you play it.\nYou can use the arrow keys or a game controller to move up, down, left and right!</p>\n<h2>How I built it</h2>\n<p>With javacript, html5, and the ever so fabulous three.js library.\nWas built entirely at Uncommon Hacks 2016! (shoutout)</p>\n<h2>Challenges I ran into</h2>\n<p>Game controllers are surprisingly hard to use in javascript. Also things get lost in space, and the skybox gave me a lot of trouble but now its gucci.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>The uncommon mode. Checkout it out. It's ~lit~</p>\n<h2>What I learned</h2>\n<p>Javascript, Three.js! </p>\n<h2>What's next for Cube Field Runner</h2>\n<p>I'll continue to update it, I need to add some more levels so its harder. Also might add soylent power-ups in the spirit of Uncommon Hacks.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/three-js\">three.js</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://tbpeters.github.io/index.html\" rel=\"nofollow\" target=\"_blank\" title=\"https://tbpeters.github.io/index.html\">\n<i class=\"ss-icon ss-link\"></i>\n<span>tbpeters.github.io</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Prometheus.js + Pandora's Box", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Prometheus.js + Pandora's Box \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/765/datas/gallery.jpg\"/>\n<p>\n<i>Release experimental features to specific users.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Prometheus.js + Pandora's Box \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/766/datas/gallery.jpg\"/>\n<p>\n<i>Demo by crawling as a mock visitor.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Prometheus.js + Pandora's Box \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/767/datas/gallery.jpg\"/>\n<p>\n<i>Documentation can save lives.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Prometheus.js + Pandora's Box \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/768/datas/gallery.jpg\"/>\n<p>\n<i>Real-time updates for user-specific tracking data.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Prometheus.js + Pandora's Box \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/769/datas/gallery.jpg\"/>\n<p>\n<i>Save screenshots of user sessions.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Prometheus.js + Pandora's Box \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/770/datas/gallery.jpg\"/>\n<p>\n<i>View users' geolocation data on a map.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Prometheus.js + Pandora's Box \u2013 screenshot 7\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/771/datas/gallery.jpg\"/>\n<p>\n<i>Abstract app logic away from business logic.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Prometheus.js + Pandora's Box \u2013 screenshot 8\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/772/datas/gallery.jpg\"/>\n<p>\n<i>Easily store and retrieve data in Firebase.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Prometheus.js + Pandora's Box \u2013 screenshot 9\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/773/datas/gallery.jpg\"/>\n<p>\n<i>We don't mess around with README files.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Prometheus.js + Pandora's Box \u2013 screenshot 10\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/774/datas/gallery.jpg\"/>\n<p>\n<i>We started from humble beginnings...</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>I created Prometheus.js a month ago because our startup needed more specific information about our individual beta users than Google Analytics can provide and because professional CRM alternatives are too expensive for a couple of college students. The original library was simple, hackish, and output data to a giant, black textarea which we affectionately dubbed \"the Prometheus CLI.\" UncommonHacks was a great opportunity to refine the library and build a more potent dashboard: one that not only displays pretty data but, to avoid the fate of the original Pandora's box, can be a hub for releasing experimental features.</p>\n<h2>What it does</h2>\n<p>Prometheus.js is an open source CRM library built on top of Firebase and ReactFire. Prometheus brings the fire of specific user tracking to humanity so that you can gather crucial information about your users' experience and follow up. Pandora's Box is an analytics dashboard and hub for Prometheus.js that allows you to view tracked data in real time and safely deploy features or A/B tests to specific users.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I finished these releases during UncommonHacks:</p>\n<ul>\n<li><a href=\"https://github.com/vingkan/prometheus/releases/tag/v1.1.0\" rel=\"nofollow\">Pandora's Box Dashboard</a></li>\n<li><a href=\"https://github.com/vingkan/prometheus/releases/tag/v1.2.0\" rel=\"nofollow\">User Search, Feature Control, Maps, Screenshots, and Crawling Demo</a></li>\n<li><a href=\"https://github.com/vingkan/prometheus/releases/tag/v1.2.5\" rel=\"nofollow\">Acquisition and Retention Metrics</a></li>\n</ul>\n<h2>What I learned</h2>\n<ul>\n<li>This was my first time using ReactJS... so much better than dangerous HTML string injection!</li>\n<li>I have been an avid Firebase user for a while, and today I figured out how to store images in Firebase.</li>\n<li>I am proud to say that I wrote my READMEs, documented my releases, and maintained a waffle.io taskboard: definitely helped me surpass the number of issues I expected to close.</li>\n</ul>\n<h2>What's next?</h2>\n<p>Prometheus.js is an open source project started by the founders of <a href=\"https://omnipointment.com\" rel=\"nofollow\">Omnipointment</a>. If you share our need for a better, free analytics tool, we hope you'll try it out and contribute to the repository!\nEmail: <a href=\"mailto:team@omnipointment.com\" rel=\"nofollow\">team@omnipointment.com</a>\nGitter: <a href=\"https://gitter.im/vingkan/prometheus\" rel=\"nofollow\">gitter.im/vingkan/prometheus</a>\nWaffle: <a href=\"https://waffle.io/vingkan/prometheus\" rel=\"nofollow\">waffle.io/vingkan/prometheus</a></p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/react\">react</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/leaflet-js\">leaflet.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/moment-js\">moment.js</a></span></li><li><span class=\"cp-tag\">lunr.js</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag\">electron-wrapper</span></li><li><span class=\"cp-tag\">prometheus</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://vingkan.github.io/prometheus/pandora\" rel=\"nofollow\" target=\"_blank\" title=\"http://vingkan.github.io/prometheus/pandora\">\n<i class=\"ss-icon ss-link\"></i>\n<span>vingkan.github.io</span>\n</a></li>\n<li><a href=\"https://github.com/vingkan/prometheus\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/vingkan/prometheus\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"http://vingkan.github.io/prometheus/crawler.html\" rel=\"nofollow\" target=\"_blank\" title=\"http://vingkan.github.io/prometheus/crawler.html\">\n<i class=\"ss-icon ss-link\"></i>\n<span>vingkan.github.io</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Macintosh Plus on Macintosh Plus", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://player.vimeo.com/video/163154930?byline=0&amp;portrait=0&amp;title=0#t=\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Macintosh Plus on Macintosh Plus \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/856/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>The dream was to play vaporwave's most well known artist, Macintosh Plus, on my actual vintage Macintosh Plus.</p>\n<h2>What it does</h2>\n<p>It plays what is probably the most popular song in vaporwave, \u30ea\u30b5\u30d5\u30e9\u30f3\u30af420 / \u73fe\u4ee3\u306e\u30b3\u30f3\u30d4\u30e5, using the Macintosh Plus' built-in speakers.</p>\n<h2>How I built it</h2>\n<p>Brian transcribed sheet music for \u30ea\u30b5\u30d5\u30e9\u30f3\u30af420 / \u73fe\u4ee3\u306e\u30b3\u30f3\u30d4\u30e5 into MusicWorks, the world's first computer-based music notation interface. The application, from 1984, is still remarkably modern, and it let us play the song with a computer-simulated kazoo, which is a huge plus. To amplify the sound, we plugged a speaker into the computer's 3.5mm audio jack.</p>\n<h2>Challenges I ran into</h2>\n<p>The final implementation was largely different than the initial idea. I had hoped to transfer the actual Floral Shoppe sound files onto floppy disks and play them from the Macintosh speaker, but this was not technically feasible for a variety of reasons: the 800KB size of the floppies, the anemic 8MHz processor, and the lack of software support for any modern sound files. I was lucky to find sheet music for \u30ea\u30b5\u30d5\u30e9\u30f3\u30af420 / \u73fe\u4ee3\u306e\u30b3\u30f3\u30d4\u30e5 and someone who is well-versed in reading music notation, making the project possible.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>It's so meta</p>\n<h2>What I learned</h2>\n<p>With its window-based and mouse-driven interface, there's practically no learning curve for using this computer from the 1980s. Fascinating.</p>\n<h2>What's next for Macintosh Plus on Macintosh Plus</h2>\n<p>All of Floral Shoppe? Nah, probably not.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">system-7</span></li><li><span class=\"cp-tag\">musicworks</span></li></ul>\n</div>\n</div>", ["Transcribed the song!", "Brought the idea, the hardware, and the software!"]], ["Vaporizer", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/DLZvS-XQ6lQ?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Vaporizer \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/873/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Vaporizer \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/860/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Vaporizer \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/833/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Vaporizer \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/684/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Vaporizer \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/656/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Vaporizer \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/704/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Vaporizer \u2013 screenshot 7\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/695/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Vaporizer \u2013 screenshot 8\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/727/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Vaporizer \u2013 screenshot 9\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/733/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Vaporizer \u2013 screenshot 10\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/758/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Vaporizer \u2013 screenshot 11\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/779/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Vaporizer \u2013 screenshot 12\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/657/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>Vaporizer</h1>\n<p>You take a bunch of pictures and then you thrust yourself into the aesthetic of our time and transcend the limitations of time itself.</p>\n<h2>What is this?</h2>\n<p>Vaporizer is a photo booth for today's youth. Vaporizer is the future. It is us, and we are Vaporizer.</p>\n<p>Begin by taking anywhere between one and three pictures with your camera. Let bake for five minutes. Receive vapor.</p>\n<h2>Why is this cool?</h2>\n<p>Vaporizer is written in Python and primarily uses a video processing and editing library called <a href=\"https://www.youtube.com/watch?v=DLZvS-XQ6lQ\" rel=\"nofollow\">moviepy</a>. There's a bank of assets divided into the following categories:</p>\n<ul>\n<li><strong>primary</strong>: MP4 video files that are stretched to 1280x720 and placed in the background of all layers</li>\n<li><strong>secondary</strong>: PNGs and MP4s that are used as stickers of sorts. Any MP4s are treated as GIFVs and looped for the entirety of the scene.</li>\n<li><strong>soundtrack</strong>: WAV audio files to play (preferably the entirety of Macintosh Plus's <em>Floral Shoppe</em>)</li>\n<li><strong>frames</strong>: PNGs with an alpha mask that indicate where to overlay images. Currently only supports a single rectangular region. You could try other shapes but the script will, in all likelihood, just fit the images to a rectangle mask.</li>\n</ul>\n<p>After the user has finished taking pictures, Vaporizer will create three \"scenes\" where it:</p>\n<ol>\n<li>Fits each image into a randomly selected frame.</li>\n<li>Selects a random background and places the framed image on top of it in a random position.</li>\n<li>Randomly picks between one and three secondary assets to place on the scene.</li>\n<li>Selects a random Jaden Smith quote to place on top.</li>\n<li>Places the date of the selected quote in the bottom left.</li>\n</ol>\n<p>Each scene is 10 seconds long to create a 30 second-long video. Each of these scenes are then concatenated into a single composite video. A gradient from pink to green (for added vapor) is laid over the entire composite at 20% opacity, and then this new composite is written to an MP4 using a hardware-accelerated FFMPEG codec.</p>\n<h2>How do I use this?</h2>\n<p>You'd need to install Numpy+Intel MKL and SciPy for most of MoviePy's processing. OpenCV is required for some other video processing, as well as for getting input from the user's webcam. NumPy and SciPy will likely need to be installed from OS distributor or third-party sources. Other than that, everything should be resolved by using <code>pip install moviepy</code>.</p>\n<p>From there, clone the Git repository, <code>cd</code> into it and run <code>python cvtest.py</code>.</p>\n<h2>You should probably know...</h2>\n<p>MoviePy does a lot of its internal processing using scipy and numpy. This is simple to work with, but the mathematical operations performed by MoviePy significantly slow down the speed of processing and makes the script extremely CPU-bound.</p>\n<p>At first, this was caused mainly by the use of nested composites in order to overlay images. By restructuring the program to only composite all layers before exporting, rendering time was more than halved, but this still resulted in a render time over 5 minutes for a 30-second clip. However, this may also be caused by the lack of a dedicated video card on the development machine (aka a laptop).</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/opencv\">opencv</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/numpy\">numpy</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/scipy\">scipy</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ffmpeg\">ffmpeg</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/nsgomez/vaporizer\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/nsgomez/vaporizer\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["DankMeme", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>LoveLetter is a fun game, and reskins are common.  A Meme reskin has not yet been made.</p>\n<h2>What it does</h2>\n<p>Implements the LoveLetter card game on a network.</p>\n<h2>How we built it</h2>\n<p>javax.swing + java.net + ingenuity</p>\n<h2>Challenges we ran into</h2>\n<p>Building animations from scratch is time consuming</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Fully networked across multiple computers</p>\n<h2>What we learned</h2>\n<p>Clients can be extremely thin given the right circumstances</p>\n<h2>What's next for DankMeme</h2>\n<p>UI redesign</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/SpexGuy/DankMeme\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/SpexGuy/DankMeme\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Path2Presidency", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Path2Presidency \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/378/411/datas/gallery.jpg\"/>\n<p>\n<i>Game View</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Path2Presidency \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/879/datas/gallery.jpg\"/>\n<p>\n<i>Logo</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Path2Presidency \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/852/datas/gallery.jpg\"/>\n<p>\n<i>Ben Carson</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Path2Presidency \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/853/datas/gallery.jpg\"/>\n<p>\n<i>Ron Paul</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Path2Presidency \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/854/datas/gallery.jpg\"/>\n<p>\n<i>Ted Cruz</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Path2Presidency \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/855/datas/gallery.jpg\"/>\n<p>\n<i>Hillary Clinton</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Path2Presidency \u2013 screenshot 7\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/856/datas/gallery.jpg\"/>\n<p>\n<i>Martin O'Malley</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Path2Presidency \u2013 screenshot 8\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/857/datas/gallery.jpg\"/>\n<p>\n<i>John Kasich</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Path2Presidency \u2013 screenshot 9\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/858/datas/gallery.jpg\"/>\n<p>\n<i>Bernie Sanders</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Path2Presidency \u2013 screenshot 10\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/859/datas/gallery.jpg\"/>\n<p>\n<i>Donald Trump</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Path2Presidency \u2013 screenshot 11\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/860/datas/gallery.jpg\"/>\n<p>\n<i>Kanye West</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Path2Presidency \u2013 screenshot 12\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/880/datas/gallery.jpg\"/>\n<p>\n<i>Background</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Path2Presidency \u2013 screenshot 13\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/876/datas/gallery.jpg\"/>\n<p>\n<i>Player 1</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Path2Presidency \u2013 screenshot 14\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/877/datas/gallery.jpg\"/>\n<p>\n<i>Up Two</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Path2Presidency \u2013 screenshot 15\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/878/datas/gallery.jpg\"/>\n<p>\n<i>Up One</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Path2Presidency \u2013 screenshot 16\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/881/datas/gallery.jpg\"/>\n<p>\n<i>Up Three</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Path2Presidency \u2013 screenshot 17\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/882/datas/gallery.jpg\"/>\n<p>\n<i>Topple</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Path2Presidency \u2013 screenshot 18\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/883/datas/gallery.jpg\"/>\n<p>\n<i>Toast</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Path2Presidency \u2013 screenshot 19\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/884/datas/gallery.jpg\"/>\n<p>\n<i>Player 2</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Path2Presidency \u2013 screenshot 20\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/885/datas/gallery.jpg\"/>\n<p>\n<i>Player 4</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Path2Presidency \u2013 screenshot 21\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/886/datas/gallery.jpg\"/>\n<p>\n<i>Player 3</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Path2Presidency \u2013 screenshot 22\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/887/datas/gallery.jpg\"/>\n<p>\n<i>Player One</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Path2Presidency \u2013 screenshot 23\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/888/datas/gallery.jpg\"/>\n<p>\n<i>The Path</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Path2Presidency \u2013 screenshot 24\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/890/datas/gallery.jpg\"/>\n<p>\n<i>Player Two</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Path2Presidency \u2013 screenshot 25\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/891/datas/gallery.jpg\"/>\n<p>\n<i>Player Four</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Path2Presidency \u2013 screenshot 26\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/892/datas/gallery.jpg\"/>\n<p>\n<i>Player Three</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Path2Presidency \u2013 screenshot 27\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/893/datas/gallery.jpg\"/>\n<p>\n<i>Toast</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We were inspired to create this game based off of a board game called Tiki Topple. After looking online, we realized that there were no other apps with this gamestyle and the board game itself was discontinued. Now - with this game we made - we can continue playing this game forever!</p>\n<h2>What it does</h2>\n<p>The game allows for multiple players (2-4), and gives each player a score card that they each attempt to match using the move cards given to them. </p>\n<h2>How we built it</h2>\n<p>We built it using the ionic framework. None of us were very experienced with Javascript, so we had to learn a lot!</p>\n<h2>Challenges we ran into</h2>\n<p>We struggled for many hours trying to collaborate on Github and could not originally decide on a language to write in or which software to use. We also struggled with formatting and learning Javascript.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>The art is beautiful, or game is funny, we are funny, and our code works!</p>\n<h2>What we learned</h2>\n<p>We learned how to use the ionic framework very well, and discovered a lot of new features and how to program in Javascript.</p>\n<h2>What's next for Path2PresidencyGithub</h2>\n<p>There is still a lot of art work we would like to implement to make our app more  _ a e s t h e t i c _ . </p>\n<p>We would like to add a online multiplayer or an offline feature using Twilio in the future. </p>\n<p>We believe our game has a lot of potential and would love to continue with this concept together!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/anapooley97/Path2PresidencyGithub\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/anapooley97/Path2PresidencyGithub\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on front-end and back-end aspects of the project. I worked on the layout of the cards, the buttons, and images. I also worked on getting the cards to flip when used, and shifting the candidates up/down in position depending on the cards selected and storing all the choices the players make.", "", "", ""]], ["Decepticar", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/kZ3nwSTRqv8?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Decepticar \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/220/datas/gallery.jpg\"/>\n<p>\n<i>Turn Signals</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Decepticar \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/221/datas/gallery.jpg\"/>\n<p>\n<i>Headlights</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Decepticar \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/778/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>The art style of Chindogu and our love for cycling inspired us to make biking as safe as riding in a car.</p>\n<h2>What it does</h2>\n<p>We integrated two required car safety features into a bike helmet. We have turn signals that are activated by a mercury-tilt sensor and headlights that are activated by a photo resistor or a push button.</p>\n<h2>How we built it</h2>\n<p>Lots of jumper wires, electrical tape, resistors, and Arduino</p>\n<h2>Challenges we ran into</h2>\n<p>We are not mechanical engineers so we can't put things together for crap. Also, cheap-ass sensors.</p>\n<p>On a more serious note, we only had access to one Arduino, so we designed a hardware PWM by using an oscillator, zener diode, and potentiometers. However, we did not have the ability to view the output signal since there was no oscilloscope available. Ultimately, we are very curious as to if our DIY PWM output actually works, and we will be testing it when we get back to Purdue.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Everything works, it actually works. We have a video.</p>\n<h2>What we learned</h2>\n<p>We need mechanical engineering friends. Most of the electronic knowledge came from our experience in lab.</p>\n<h2>What's next for Deceptacar</h2>\n<p>We want to add retractable sunglasses and buy improved sensors. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag\">microelectronics</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/tootap/Decepticars/blob/master/basic_turn_signals.ino\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/tootap/Decepticars/blob/master/basic_turn_signals.ino\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Pseudo-mechanical engineer for this project", "", ""]], ["Telememe - Meme Improvement Bundle", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/OXGvCnZ2xEU?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Telememe - Meme Improvement Bundle \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/785/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Telememe - Meme Improvement Bundle \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/786/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Telememe - Meme Improvement Bundle \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/787/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Telememe - Meme Improvement Bundle \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/788/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Telememe - Meme Improvement Bundle \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/789/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>The future, we all want it to be better for our youth. Unfortunately it is very difficult to get the traction to make quality memes when first starting out. We wanted to smooth this process out for these youngsters as much as possible.</p>\n<h2>What it does</h2>\n<p>The first product in the Telememe line is the Meme Improvement Bundle. It has two key components. First, the Telememe Generation Suite. The Telememe Generation Suite is an app that supervises your preteen's meme creating process. Mainly, it ensures that the memes that they create will be dank. The second component of the Meme Improvement Bundle is your young preteen's companion, Dipsy. Dipsy will give your youth positive feedback for making dank memes and negative feedback for making unsatisfactory memes. </p>\n<h2>How we built it</h2>\n<p>Dipsy was created by stuffing a child sized costume with recyclable materials. Dipsy has three methods of output. The first is positive chirps to encourage your preteen. This was implemented using a buzzer connected to one of the pwm pins on the Arduino Uno. The form of output is from Dipsy's beautiful eyes it will flash them at the user when it is pleased, and it will stare menacingly at the user when it is displeased. </p>\n<p>Lastly was the most difficult output to implement, the vaping device. The vaping device consists of an e-cigarette, an adapter and a pump. The pump and e-cigarette are activated through separate relay circuits that are switched by signals from the Arduino.</p>\n<h2>Challenges we ran into</h2>\n<ol>\n<li><p>Imposing text on image in Android and saving it as an image.</p></li>\n<li><p>Connecting an app to the Arduino via Bluetooth.</p></li>\n<li><p>Soldering circuits onto boards instead of leaving them on the breadboard.</p></li>\n<li><p>Developing an algorithm to determine if created memes are dank or not.</p></li>\n<li><p>Scaling the app for different resolutions.</p></li>\n<li><p>Fetching images from the web which requires asynchronous tasks.</p></li>\n</ol>\n<h2>Accomplishments that we're proud of</h2>\n<ol>\n<li><p>Helping to make an app after just learning about Android development.</p></li>\n<li><p>Using relays successfully for the first time.</p></li>\n<li><p>Learning how to send data to connected Bluetooth devices in an Android application.</p></li>\n</ol>\n<h2>What we learned</h2>\n<p>We learned how to implement relays to use signals from the Arduino to activate higher current circuits. We also learned how to use Bluetooth devices through an Android app.</p>\n<h2>What's next for Telememe - Meme Improvement Kit</h2>\n<ol>\n<li><p>Moving all of the components onto custom  circuit boards, including the microcontroller.</p></li>\n<li><p>Using a chargeable battery instead of a AC to DC power supply.</p></li>\n<li><p>Improving the dank checking algorithm.</p></li>\n</ol>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/kfichter/telememe\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/kfichter/telememe\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Designed and implemented the hardware in the project. Created the program that received Bluetooth signals and converted it to output.", "Worked most of the front and back end for the android app running telememe. Designed and implemented the main meme generator and hacked together some repos/android source code to make dankornot work. Work in progress!", ""]], ["PDANK (Pedestrian Device that Allows No Kollisions)", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/W_eha_62Q5A?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"PDANK (Pedestrian Device that Allows No Kollisions) \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/736/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"PDANK (Pedestrian Device that Allows No Kollisions) \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/737/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"PDANK (Pedestrian Device that Allows No Kollisions) \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/738/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Have you ever wanted to walk down the street and literally not interact with anybody ever as you travelled to your destination? Perhaps you're going for a jog and want a way to tell cars and pedestrians when you're going to make a turn? Maybe you're a really bland super-villain who wants Superman to chase you, but you actually want to show him what direction you're going so that you bait him into a cave full of kryptonite? Well you won't <em>believe</em> what we have in store for you!</p>\n<h2>What it does</h2>\n<p>The Pedestrian Device that Allows No Kollisions, or the PDANK for short, allows no collisions! All you need to do is enter your destination and the PDANK maps out your route for you. Each time you reach a point where you need to make a turn, the intricately-designed PDANK LED system automatically flashes in a manner not unlike but definitely not stolen from car blinkers. </p>\n<h2>How we built it</h2>\n<p>To make this glorious contraption we created an Android app that uses Google Maps API's to track your current location and map out your route to your destination. At each step, our app parses the user instructions in the Google Directions get-request and converts it into meaningful data (\"left\" or \"right\").</p>\n<h2>Challenges we ran into</h2>\n<p>The biggest challenge with this project was building the app that could utilize Google Maps APIs and send get and post requests. We very quickly realized the difficulty behind figuring out Android Studio syntax and having to research all of the APIs that we would need in order for the app to be functional. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>-having fun</p>\n<h2>What's next for PDANK (Pedestrian Device that Allows No Kollisions)</h2>\n<p>To make the world a better place and ruin superman's day</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/particle\">particle</a></span></li><li><span class=\"cp-tag\">photon</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/williamsu96/uncommonhack\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/williamsu96/uncommonhack\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I wrote the software for the Spark Core to expose blinking functionality over the internet, and used the Volley library to trigger that from the Android app.", "", ""]], ["Macinball PlusVR", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Macinball PlusVR \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/930/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Macinball PlusVR \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/931/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Macinball PlusVR \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/932/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We wanted three things - To make players feel like they were inside the macintosh plus album art, to create a collaborative VR music experience and to create something dank.</p>\n<h2>What it does</h2>\n<p>Macinball PlusVR is a networked collaborative VR experience. Players spawn as doges and can kick around different balls in the environment. Each ball is associated with a viral song/music. The velocity of each ball determines its volume. So players can kick about and enjoy the sheer chaos of viral mayhem.</p>\n<h2>How we built it</h2>\n<p>Unity + C# + Lot's of red bull</p>\n<h2>Challenges we ran into</h2>\n<p>Getting unity to work well with networking was the biggest challenge for us. We had to abandon the idea of using leapmotions because somehow spanning leapmotion hands in a networked game spawned 4 hands instead of 2.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Making an entertaining multiplayer game in about 24 hours straight.</p>\n<h2>What we learned</h2>\n<p>We got an in-depth look into the unity development workflow, common libraries and tricks and potentiall pitfalls that come with multiplayer environments.</p>\n<h2>What's next for Macinball PlusVR</h2>\n<p>We want to make it into a serious VR music collaboration app. The songs can be replaced by individual instrument pieces, and leapmotion support can be added so players can pinch and resize balls to edit their tempo, pitch and other properties. Activating balls will play them in a loop and thus progressive music can be generated.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag\">memes</span></li><li><span class=\"cp-tag\">doge</span></li><li><span class=\"cp-tag\">dank</span></li></ul>\n</div>\n</div>", ["hand control", "", "", ""]], ["v a p o r w a v e", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1><code>v a p o r w a v e</code></h1>\n<h2>Description</h2>\n<p>A music visualizer built in the <code>v a p o r w a v e</code> <code>a e s t h e t i c</code>.</p>\n<p>View at: <a href=\"http://adeora.github.io/v-a-p-o-r-w-a-v-e\" rel=\"nofollow\">http://adeora.github.io/v-a-p-o-r-w-a-v-e</a> or <a href=\"http://v-a-p-o-r-w-a-v-e.tech/\" rel=\"nofollow\">http://v-a-p-o-r-w-a-v-e.tech/</a>. </p>\n<p>Some recommendations: </p>\n<ul>\n<li><a href=\"http://adeora.github.io/v-a-p-o-r-w-a-v-e/#crystalmist/macintosh-plus-420\" rel=\"nofollow\">http://adeora.github.io/v-a-p-o-r-w-a-v-e/#crystalmist/macintosh-plus-420</a></li>\n<li><a href=\"http://adeora.github.io/v-a-p-o-r-w-a-v-e/#clinton-affair/w-i-n-d-o-w-s\" rel=\"nofollow\">http://adeora.github.io/v-a-p-o-r-w-a-v-e/#clinton-affair/w-i-n-d-o-w-s</a></li>\n<li><a href=\"http://adeora.github.io/v-a-p-o-r-w-a-v-e/#big-urdie-beats/enter-the-void\" rel=\"nofollow\">http://adeora.github.io/v-a-p-o-r-w-a-v-e/#big-urdie-beats/enter-the-void</a></li>\n</ul>\n<p>Visualizes music streams from Soundcloud where the author has not disabled embedding. Unfortunately, because of the way the Soundcloud API works, the app cannot access streams where the author has disabled embedding.</p>\n<p>Many thanks to <a href=\"https://github.com/michaelbromley\" rel=\"nofollow\">Michael Bromley</a> for creating his Soundcloud Music Visualizer, off which this project is based.</p>\n<h2>Usage</h2>\n<p>To run this on your own, simply clone the project and run it in a web server. A very simple way is to run <code>python -m SimpleHTTPServer 8000</code> and navigate to <code>localhost:8000</code>.</p>\n<h2>License</h2>\n<p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \u201cSoftware\u201d), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p>\n<p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p>\n<p>THE SOFTWARE IS PROVIDED \u201cAS IS\u201d, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/soundcloud\">soundcloud</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/adeora/v-a-p-o-r-w-a-v-e\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/adeora/v-a-p-o-r-w-a-v-e\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"http://v-a-p-o-r-w-a-v-e.tech/\" rel=\"nofollow\" target=\"_blank\" title=\"http://v-a-p-o-r-w-a-v-e.tech/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>v-a-p-o-r-w-a-v-e.tech</span>\n</a></li>\n<li><a href=\"http://adeora.github.io/v-a-p-o-r-w-a-v-e\" rel=\"nofollow\" target=\"_blank\" title=\"http://adeora.github.io/v-a-p-o-r-w-a-v-e\">\n<i class=\"ss-icon ss-link\"></i>\n<span>adeora.github.io</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["PHP: PHP Hackathon Hackers Preprocessor", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"PHP: PHP Hackathon Hackers Preprocessor \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/747/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Almost all moderation tools work to moderate <em>after</em> a post has been placed. For large groups such as Hackathon Hackers this can be a problem in terms of allowing banned users back into the group or allowing new users to post. Usually this is remedied via waiting for approval by admin, but this creates more lag.</p>\n<p>If there was a way to predict how controversial a post might be based on it's content, we could create automated moderators that could offer advice to make posts better recived in a given group.</p>\n<h2>What it does</h2>\n<p>By analyzing the posting history of any given facebook group, parsing the text, the comments, the likes, and the reactions to those posts, we can train a bot using Bayes probabilities at the how on a scale of 0 to 1 each post would score given categories like controversial, success rate, negative feedback, etc. </p>\n<h2>How we built it</h2>\n<p>We used facebook Graph API to fetch posts from Hackathon Hackers. We then trained a Naive Bayes (independent probability model) bot on a set of data marked popular / not popular by a simple 'likes' algorigthm. We then ran it through a set of test data for which we were able to analyze the accuracy at which it correctly identified good posts from bad.</p>\n<h2>Challenges we ran into</h2>\n<p>Turning python into a decent front end</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Given a varied dataset, we were scoring 80-100% accuracy at determining the the likelihood of a popular post.</p>\n<h2>What we learned</h2>\n<p>Naive Bayes modelling and machine learning</p>\n<h2>What's next for PHP</h2>\n<p>-Add more categorical options and nicer GUI features\n-Grab data with more than 1 thread to bypass facebook's time limit. Train on thousands of documents\n-Use full Bayes (words depending on each other instead of independent modelling) for adding comments analysis and/or larger n-grams (currently 1 word gram) to analyse phrases to make more sense in terms of natural linguistics</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag\">graph</span></li></ul>\n</div>\n</div>", ["", ""]], ["memeMe", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"memeMe \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/147/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"memeMe \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/157/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>It was a strangely warm Chicago day when one of our team members was staring at water, he was struck by an idea for a project, and the the water wanted him to call it memeMe. MemeMe is a chrome extension with one goal, to meme-ify the internet.</p>\n<h2>What it does</h2>\n<p>MemeMe has multiple features, including: \n  </p><li> All faces in images replaced with a meme face</li>\n<li> Text overlay to match the meme </li>\n<li> A unicorn background</li>\n<li> Comic Sans </li>\n<li>celery</li>\n<li> and a nyan cat cursor</li>\n<p></p>\n<h2>How we built it</h2>\n<p>After developing the initial idea, we coordinated with our team members to designate tasks appropriately. We had to do research to learn the groundwork for a Chrome extension using Yeoman, integrate libraries into the Chrome Extension (jQuery, jQuery Facial Recognition), make a test file for facial recognition, construct a repository of 'shooped memes, and test app for JavaScript snippets.</p>\n<h2>Challenges we ran into</h2>\n<p>A major challenge was the utilization of the Chrome extension platform, which was new to all of us. We had to do extensive research prior, as well as during, the Hack-a-Thon to create the project. Chrome extensions also proved difficult as we could not set a cursor URL to a resource specified within an extension, which we determined to be a bug on the platform as confirmed by many online reports.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are extremely proud that our extension runs, as it is our first extension and it has so many components. Additionally, the coordiation between the team members was exceptional, everyone worked hard on their tasks to contribute to the final project.</p>\n<h2>What we learned</h2>\n<p>We learned how to create a Chrome extension, use JavaScript, HTML, and CSS, and what our favorite meme is.</p>\n<h2>What's next for memeMe</h2>\n<p>It will be available on the Chrome Web Store.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag\">image-recognition</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/dgore7/meme-web\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/dgore7/meme-web\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["SuperVide", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/UCLK1HIvdC5_E7cYQ5IBolTQ?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"SuperVide \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/988/datas/gallery.jpg\"/>\n<p>\n<i>The large meal dispenser.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"SuperVide \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/989/datas/gallery.jpg\"/>\n<p>\n<i>The small meal dispenser, which is comprised of a stepper motor, and a rack and pinion mechanism.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"SuperVide \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/990/datas/gallery.jpg\"/>\n<p>\n<i>The mechanism for opening the fridge door.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"SuperVide \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/991/datas/gallery.jpg\"/>\n<p>\n<i>The fridge portion of the project. The sous vide apparatus will be placed at the base of the fridge.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"SuperVide \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/209/datas/gallery.jpg\"/>\n<p>\n<i>Full project setup.</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>This machine is for the everyday person who is too  busy to prepare a home cooked meal. SuperVide only requires the preparation, and the rest of the cooking is done through a couple of taps on your phone through Twilio text messaging or the SuperVide web app.</p>\n<h2>What it does</h2>\n<p>SuperVide is an automated sous vide cooker. Sous vide is a french style of cooking where food is placed in a vacuum and cooked in water at a constant temperature for an extended period of time. This style of cooking is used by many high end restaurants, as the resulting food quality is very good.\nSuperVide takes the sous vide cooking method and automates it. The connected fridge stores all of the meals, which allows for the entire process to happen while the user is away from home.</p>\n<p>Multiple food items can be cooked at once. The SuperVide will determine which item uses the higher temperature of water and cook the food in descending order, so that nothing is cooked at too high of a temperature.</p>\n<h2>How I built it</h2>\n<p>The SuperVide is comprised of 3 main components: the fridge door opener, the food dispensing system, and the sous vide cooking apparatus.</p>\n<p>The door opener uses a servo to activate a lever arm, which opens the fridge door.\nThe food dispensing system includes 2 subsystems: the small item dispenser, and the large meal dispenser. The small item dispenser is ideal for eggs or vegetables, and is dispensed using a stepper motor that controls a rack and pinion. The large meal dispenser is for the main course of your sous vide meal (i.e. steaks, fish, etc.). This subsystem is controlled using a servo.\nThe sous vide cooking apparatus is located under the fridge, and has two heating elements to heat the water to the necessary temperature. When the food is done cooking, the heating elements will lower the heat of the water to keep the food warm until you get home.</p>\n<h2>Challenges I ran into</h2>\n<p>The mechanisms and hardware involved in this project were challenging to setup. They involve a lot of minute movements that are required to activate several different key events.</p>\n<p>We also kept cracking eggs! The drop from the refrigerator into the sous vide water bath was too great. To solve this problem we created a basket for the eggs to fall into, which prevented them from hitting the bottom of the water basin.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>All of the systems work!</p>\n<h2>What I learned</h2>\n<p>We learned a lot about the Twilio API, and had a fun time implementing that into our project!</p>\n<h2>What's next for SuperVide</h2>\n<p>Further development of the food dispensing system, which would involve increased customization and number of different food items that you can choose from at a given time.\nA better web app is also something that is on our list of things to do.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/hardware\">hardware</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["aesthetic-search", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"aesthetic-search \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/702/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Aesthetic Search</h2>\n<h3>Built at UncommonHacks 2016</h3>\n<p><img alt=\"site-preview\" data-canonical-url=\"https://raw.githubusercontent.com/theshteves/aesthetic-search/master/static/media/site-preview.png\" src=\"https://res.cloudinary.com/devpost/image/fetch/s--YTH-6tYn--/https://raw.githubusercontent.com/theshteves/aesthetic-search/master/static/media/site-preview.png\"/></p>\n<h3>Inspiration</h3>\n<p>At the apex of meme-based hackathons, Uncommon Hacks and the greater hacker community around the University of Chicago inspired us to contribute back to what we believe is the most strange yet nostalgic aspect of Internet Culture.  With an unusual variety of prizes guiding our way, we built the most entertaining platform conceivable to explore gifs.</p>\n<h3>About</h3>\n<p>On page load, you will be greated by a search prompt in front of what we believe to be the most beautiful layout.  With the tap of a button, you can sit back and enjoy our platform's distinct audio-visual experience.  </p>\n<p>We hope you enjoy experiencing it as much as we enjoyed building it!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/vim\">vim</a></span></li><li><span class=\"cp-tag\">meme</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/giphy\">giphy</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://uncommon-msu.herokuapp.com\" rel=\"nofollow\" target=\"_blank\" title=\"http://uncommon-msu.herokuapp.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>uncommon-msu.herokuapp.com</span>\n</a></li>\n<li><a href=\"https://github.com/theshteves/aesthetic-search\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/theshteves/aesthetic-search\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Macintech Plus", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Macintech Plus \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/104/datas/gallery.jpg\"/>\n<p>\n<i>Vaporized</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Vaporwave is just a joke that's used to make lol.</p>\n<h2>What it does</h2>\n<p>It turns any song into \uff21 \uff25 \uff33 \uff34 \uff28 \uff25 \uff34 \uff29 \uff23     A R T E F A C T S </p>\n<h2>How we built it</h2>\n<p>We slowed down some songs and called ourselves artists (used python and c lol)</p>\n<h2>Challenges we ran into</h2>\n<p>Webbing is hard</p>\n<h2>Accomplishments that we're proud of</h2>\n<p><a href=\"https://youtu.be/vn-kloj0tKc\" rel=\"nofollow\">https://youtu.be/vn-kloj0tKc</a></p>\n<h2>What we learned</h2>\n<p>Like the mighty game of Go, vaporwave has been mastered by computers as well.</p>\n<h2>What's next for Macintech</h2>\n<p>Pumping out vaporwave erry day. Also a website at macin.tech that you can submit and artist and receive your \uff21 \uff25 \uff33 \uff34 \uff28 \uff25 \uff34 \uff29 \uff23 S. Neaarly there.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c\">c</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/WJLiddy/Macintech\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/WJLiddy/Macintech\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Image vaporizing and name generation, A little web dev.", "Backend", ""]], ["Emoji Pasta Generator", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Emoji Pasta Generator \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/686/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Emoji Pasta Generator \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/690/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We want to make shitposting easier and more accessible</p>\n<h2>What it does</h2>\n<p>It transform your boring words into dank emojis</p>\n<h2>How we built it</h2>\n<p>Flask + NLTK + Python + Donal Trump's words as testcases</p>\n<h2>Challenges we ran into</h2>\n<p>Mapping keywords to emojis, analyzing natural languages, emoji injection</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>All of the challenges we overcame</p>\n<h2>What we learned</h2>\n<p>Backend, front-end, web scraping  </p>\n<h2>What's next for emojipasta-generator</h2>\n<p>Adding more natural language processing power to the engine.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://emojipasta.tech\" rel=\"nofollow\" target=\"_blank\" title=\"https://emojipasta.tech\">\n<i class=\"ss-icon ss-link\"></i>\n<span>emojipasta.tech</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Web scraping,nltk and a bit of backend setup", "flask setup+ frontend, nltk, emoji & word insertion", "backend for flask powered by Digital Ocean using uwsgi + nginx "]], ["Upkeep", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Upkeep \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/224/datas/gallery.jpg\"/>\n<p>\n<i>Calendar</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Upkeep \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/225/datas/gallery.jpg\"/>\n<p>\n<i>Main Page</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Upkeep \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/226/datas/gallery.jpg\"/>\n<p>\n<i>Individual Analytics</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>These days, many of our relationships are assisted by online services. With great convenience comes great responsibility - it is easier than ever to engage in an argument with a loved one, and our digital society often leaves these problems unresolved. Additionally, people with mental handicaps like Autism are having a harder time as more and more people become dependent on the internet to stay social. This app aims to ease these issues.</p>\n<h2>What it does</h2>\n<p>Upkeep is an easy way for you to maintain your online relationships. The service has 2 components: a text message client that analyzes your conversations in real time, and a general analytics hub that provides feedback on a broader set of online activity while giving you aggregate feedback for entire online relationships. Both are designed to give you insight on the objective emotions and sentiments of the conversation, making it easier to quickly identify and act on negative relationships.</p>\n<h2>How we built it</h2>\n<p>Upkeep aggregates and culls your messages using our algorithm, before sending data to IBM-Watson. From there, the information is processed using IBM's natural language processors. Upkeep interprets the output from IBM and gives the user objective feedback on their online relationships.</p>\n<h2>Challenges we ran into</h2>\n<p>Scraping the user's SMS data from the local database was a new challenge. From there, the big challenge was formatting the information in a way that is easy to send to IBM, and finding a way to intuitively interpret the output from their natural language processors.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Getting IBM-Watson's API up and running on Android was a rocky road. From there, getting it to behave in the manner we were hoping was pretty ambitious. In just 24 hours, we were able to overcome an idea pivot and several major bugs, all while learning new skills!</p>\n<h2>What we learned</h2>\n<p>As a group, we didn't have much experience programming with Android. This was especially true in the case of SMS hacking and Watson API. We were able to overcome this problem with the help of Uncommon mentorship, online Android courses, and mad Google-fu. We were really lucky to have a UI/UX designer on the team - this allowed us to quickly iterate the app and make huge strides in improving the user experience. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ibm-watson\">ibm-watson</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/alchemyapi\">alchemyapi</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xml\">xml</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/love\">love</a></span></li></ul>\n</div>\n</div>", ["", "", ""]], ["AwesomeBot", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Free Twillio credit. Elaborate bot that I was building broke, so submitting this.</p>\n<h2>What it does</h2>\n<p>Call +13123130184.\nTells you to have a great day, plays some electronic music.</p>\n<h2>How I built it</h2>\n<p>Twilio, Flask</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/heroku\">heroku</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li></ul>\n</div>\n</div>", [""]], ["Life of the Mind", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Life of the Mind \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/676/datas/gallery.jpg\"/>\n<p>\n<i>WELCOMETOYOURBRAIN</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Life of the Mind \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/589/datas/gallery.jpg\"/>\n<p>\n<i>DAYTIME</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Life of the Mind \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/590/datas/gallery.jpg\"/>\n<p>\n<i>NIGHTTIME</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Life of the Mind \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/592/datas/gallery.jpg\"/>\n<p>\n<i>COOLHOTDOG</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Two UChicago kids wanted to build something with the <a href=\"http://www.choosemuse.com/\" rel=\"nofollow\">Muse</a> headset. One bad idea after another, they returned to their roots of \"<a href=\"https://en.wikipedia.org/wiki/College_of_the_University_of_Chicago#Culture\" rel=\"nofollow\">Life of the Mind</a>.\" Idea in hand, they joined forces with two of their friends to create <strong>Life of the Mind: The Game</strong>.</p>\n<h2>What it does</h2>\n<p>It's a tiny planet! Use your brain and your head to control the little people on your world. Watch them walk around and interact with one another in a wonky way.</p>\n<h2>How we built it</h2>\n<p>Learned Unity and C# with swanky design skills to top it all off.</p>\n<h2>Challenges we ran into</h2>\n<p>You can't auto-merge unity scenes, so only one person could edit the scene at any given time. We came up with a simple Human Mutex Locking algorithm that we followed, but there was a whole lot of spin-waiting. We wonder if there's a better way.</p>\n<h2>Accomplishments that we're proud of</h2>\n<ul>\n<li>Muse -&gt; Bluetooth -&gt; muse-io -&gt; udp -&gt; Unity</li>\n<li>Planetary Gravity. 2D Physics.</li>\n<li>Sh*t looks pretty.</li>\n<li>\"Using my mind to control the world.\" Actually getting concentration to work.</li>\n</ul>\n<h2>What we learned</h2>\n<p>It's hard to make a fully fleshed out game overnight.</p>\n<h2>What's next for Life of the Mind</h2>\n<ul>\n<li>Dynamic generation of worlds</li>\n<li>Muse indicator</li>\n<li>Game stats</li>\n<li>More emotion effects</li>\n<li>More interactions between characters</li>\n<li>More sprites</li>\n<li>More smites</li>\n<li>MORE MORE MORE</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/muse\">muse</a></span></li><li><span class=\"cp-tag\">sharposc</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/photoshop\">photoshop</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/nconfrey/LifeOfTheMind\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/nconfrey/LifeOfTheMind\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I primarily worked with Emmi getting the Muse integrated with Unity. I'm particularly proud of the acceleration detection when using the accelerometer in the Muse to spin the planet. Also worked as the git queen.", "I made all the graphics for the game on Photoshop. I worked with Unity to create the loading screen, the splash page and to set up the world of the main scene.", "I worked on hooking up the Muse data to Unity to make use of the accelerometer to build a basic skeleton for control as well as blink data to spawn villagers. I also used the emotion data of concentration to implement an emotion effect.", "I completed the physics engine, making sure our villagers followed gravity around our tiny planet. I also scripted most of the game animations and actions."]], ["myReceipts", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"myReceipts \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/585/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>My mom always carries around hundreds of receipts in her handbag - the receipts were ripped, crinkled, cluttered, and unorganized. She would frequently misplace them and would never be able to remember when she would be able to return any purchased items. This is the story we heard from voices across America. The common problem was that it extremely difficult to organize the receipts and keep track of purchases and expenses. So we wanted to develop a solution.</p>\n<h2>What it does</h2>\n<p>myReceipts is an iOS application that allows users to conveniently track their receipts and receipt data. Users can take pictures of their receipts and the application will create a scanned image of the receipt, then use optical character recognition technology to extract text from the images, then parse through the data and allot it in the respective fields. Users also receive notifications about days remaining for items they want to return. If users have trouble with their phone camera or the receipt is in poor quality, they can simply enter all the data on the receipt manually instead of taking pictures of it. </p>\n<h2>How we built it</h2>\n<p>Swift, Tesseract OCR, OpenCV, Firebase, XCode</p>\n<h2>Challenges we ran into</h2>\n<p>Some of the challenges include the optical character technology, especially because receipts inherently have problems that are difficult to overcome - they are printed on thermal paper, have a large amount of dense text, formats vary from receipt to receipt, and its structure is anywhere between tabular and freeform.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Cool tech</p>\n<h2>What we learned</h2>\n<p>Tesseract, UI design, Firebase</p>\n<h2>What's next for myReceipts</h2>\n<p>We plan to integrate our mobile application with businesses and stores across the nation - customers will be able to receive their receipts electronically and be able to view/return items with this receipt through this mobile application. We also plan on doing the same for bank statements, legal records, and other text documents.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/iphone-sdk\">iphone-sdk</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sketch\">sketch</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xcode\">xcode</a></span></li><li></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/opencv\">opencv</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/saieedgeorge0/smartReceipts\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/saieedgeorge0/smartReceipts\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Designed the app and spearheaded its development in Swift", ""]], ["Uncommon RPS", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Uncommon RPS \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/721/datas/gallery.jpg\"/>\n<p>\n<i>Enjoy Yourself</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Leap motion gesture recognition</p>\n<h2>What it does</h2>\n<p>Hopefully always beats you at rock paper scissors</p>\n<h2>How we built it</h2>\n<p>with our minds</p>\n<h2>Challenges we ran into</h2>\n<p>Libraries, using leap motion for the first time</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>2 literally genius algorithms for gesture recognition</p>\n<h2>What we learned</h2>\n<p>CSS graphics, leap motion apis, firebase integration, three.js</p>\n<h2>What's next for Uncommon RPS</h2>\n<p>the international RPS competition\nmore gestures (lizard spock) \nmore customizable</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/fgandiya/rpsls-lm\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/fgandiya/rpsls-lm\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Worked on the java algorithm -  ensured safe java dependencies and timing links across the firebase.", "Git repository", "I worked on the frontend of leap motion and the integration between frontend and backend of the project.", "Worked on the python algorithm for training and recognition of any gestures. I also set up the Firebase and helped with the API for firebase in Java, JS, and Python"]], ["TrumpSpotter", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"TrumpSpotter \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/677/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"TrumpSpotter \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/766/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"TrumpSpotter \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/728/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"TrumpSpotter \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/724/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Drumpf is a racist asshole, and so are his supporters. Decent people deserve to know when they are nearby just so you can walk the other way.</p>\n<h2>What it does</h2>\n<p>Our app, using local polling data and your geological location, tells you an approximation of Drumpf supporters nearby. We also provide you with some Drumpf memes to pass the time so that you don't lose your mind over the bigoted bullshit you have to put up with.</p>\n<h2>How we built it</h2>\n<p>Javascript and Ionic.</p>\n<h2>Challenges we ran into</h2>\n<p>Getting polling data, staying focused, learning a new language/platform for some of us.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>The app kinda works?</p>\n<h2>What we learned</h2>\n<p>In times of hardship, humor is the perfect coping mechanism.</p>\n<h2>What's next for DrumpfSpotter</h2>\n<p>Probably fix a ton of bugs.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ionic\">ionic</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-maps\">google-maps</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://bitbucket.org/siddharthsudheer/trump-spotter\" rel=\"nofollow\" target=\"_blank\" title=\"https://bitbucket.org/siddharthsudheer/trump-spotter\">\n<i class=\"ss-icon ss-link\"></i>\n<span>bitbucket.org</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Javascript is hard to learn when you're sleep-deprived, my dudes.", "Integrating Google API and working with pics. ", "Integrated Google APIs. Worked with databases and integrated the data into the app for vote-fraction calculations.  ", ""]], ["Jaden Daily", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Jaden Daily \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/520/datas/gallery.jpg\"/>\n<p>\n<i>Home</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Jaden Daily \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/521/datas/gallery.jpg\"/>\n<p>\n<i>Register</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Jaden Daily \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/523/datas/gallery.jpg\"/>\n<p>\n<i>Successfully Sent</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Jaden Daily \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/525/datas/gallery.jpg\"/>\n<p>\n<i>Main</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Jaden Daily \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/526/datas/gallery.jpg\"/>\n<p>\n<i>Login</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Jaden Daily \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/527/datas/gallery.jpg\"/>\n<p>\n<i>Confirm</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Jaden Daily \u2013 screenshot 7\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/805/datas/gallery.jpg\"/>\n<p>\n<i>Messages received</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We decided to go with the theme of Uncommon Hacks to make a quirky meme app. We looked through all of the hackaton challenges and decided that we wanted to use the Twilio API and combine it with the Jaden Smith tweet challenge. </p>\n<h2>What it does</h2>\n<p>This allows a user to sign up and log into the app and from there the user can enter any valid 10 digit phone number a select how often they would like the specified phone to receive famous Jaden Smith tweets.</p>\n<h2>How I built it</h2>\n<p>We used a MEAN stack. MongoDB, Express.js, Angular, Node.js. And in the backend we used passport with jsonwebtoken for authentication and used bcrypt to hash and salt passwords.</p>\n<h2>Challenges I ran into</h2>\n<p>A big challenge we ran into was trying to host our mobile web app on Amazon Web Services. We had problems setting up the server to work with ionic's 'serve' function and in the end we ran out of time and had to run the application on the computer from localhost.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Some accomplishments we are proud of was the implementation of some new technologies we tried. We successfully implemented passport-jwt, bcrypt and the Twilio API.</p>\n<h2>What I learned</h2>\n<p>I learned some new technologies. My favorite was learning the Twilio API. There documentation was very easy to understand and i will definitely be using their service in future projects.</p>\n<h2>What's next for Jaden Daily</h2>\n<p>There is not much planned for the future of Jaden Daily.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/angular-js\">angular.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ionic\">ionic</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/phonegap\">phonegap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/passport\">passport</a></span></li><li><span class=\"cp-tag\">bcrypt</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/ncd275/JadenDaily\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ncd275/JadenDaily\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["jadenthewise", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"jadenthewise \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/652/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>wisdom delivered directly to your phone. memes included. simply send a text message to 1 (404) 467-7870 and prepare for enlightenment. standard messaging rates apply. </p>\n<p>then check out <a href=\"http://www.jadenthewise.faith\" rel=\"nofollow\">http://www.jadenthewise.faith</a> to see what other people have been asking jaden. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://www.jadenthewise.faith\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.jadenthewise.faith\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.jadenthewise.faith</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["me&twilio"]], ["IllumemeBot", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p><code>short-macplus.mp3</code> belongs to Macintosh Plus. We do not claim ownership.</p>\n<p>Same with <code>x-files.ogg</code>: I got it from Wikipedia :ok-sign:</p>\n<p>Made by Josh and Leo (and Nick) at UncommonHacks 2016</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ffmpeg\">ffmpeg</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twitter\">twitter</a></span></li><li><span class=\"cp-tag\">memes</span></li><li><span class=\"cp-tag\">donald$trump</span></li><li><span class=\"cp-tag\">jazz</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/josmcg/illumeme\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/josmcg/illumeme\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the Twitter bot and ffmpeg parts 8|", ""]], ["chicagohackathon", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>chicagohackathon</h1>\n<p>Number Detection Neural Net</p>\n<p>Original convolutional neural network code from here: <a href=\"https://github.com/nicholas-leonard/dp/blob/master/examples/convolutionneuralnetwork.lua\" rel=\"nofollow\">https://github.com/nicholas-leonard/dp/blob/master/examples/convolutionneuralnetwork.lua</a></p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/lua\">lua</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/jigshahpuzzle/chicagohackathon\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/jigshahpuzzle/chicagohackathon\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["L I G H T W A V E", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"L I G H T W A V E \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/423/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>It's beautiful.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">teensy</span></li><li><span class=\"cp-tag\">ws2812b</span></li><li><span class=\"cp-tag\">solder</span></li><li><span class=\"cp-tag\">tears</span></li></ul>\n</div>\n</div>", [""]], ["SuperJava", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>Project Name: SuperJava</p>\n<p>Primary Purpose: To build a 4 dimensional, neurally networked, sentient Java Program</p>\n<p>Secondary Purpose: To create a software package that allows for breathing underwater while beating up sharks and lighting them on fire</p>\n<p>Infinity Purpose: To prove once and for all our very existance is a lie. Atoms are socially constructed, and therefore through analyzing Python code syntax, one can realize that the truth is only in Brainfuck.</p>\n<p>Description: Throughout the ages, the oppressive nature of the programmer-stack relationship has been one of much strife in the world. Pixels are forced to represent colors they do not identify with through a stack enforced, colorarchy. The theory of SuperJava allows for deep analsys and inteprets these facts in a fair manner. In fact, SuperJava can be seen as the antithesis to the current colorarchical, stack privledged method of programming. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://uchicago.box.com/s/zur6a864h1p4hm9rh41y7a1byoqlbgl9\" rel=\"nofollow\" target=\"_blank\" title=\"https://uchicago.box.com/s/zur6a864h1p4hm9rh41y7a1byoqlbgl9\">\n<i class=\"ss-icon ss-link\"></i>\n<span>uchicago.box.com</span>\n</a></li>\n<li><a href=\"https://github.com/gummywormz/SuperJava\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/gummywormz/SuperJava\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["ChiDates", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Getting rejected on too many dating sites</p>\n<h2>What it does</h2>\n<p>It helps you find people with compatible personalities to you</p>\n<h2>How we built it</h2>\n<p>Boooootstrap</p>\n<h2>Challenges we ran into</h2>\n<p>Too damn many</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Hopefully it works</p>\n<h2>What we learned</h2>\n<p>Backend actually matters</p>\n<h2>What's next for ChiDates</h2>\n<p>We're going to INDIA!!! #mumdates #NoScope</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://www.chidates.com/\" rel=\"nofollow\" target=\"_blank\" title=\"https://www.chidates.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.chidates.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["magic", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>magic</h1>\n<h2>High Frequency Trading for Magic: The Gathering cards.</h2>\n<h2>Inspiration</h2>\n<p>We noticed that some of the prices for Magic: The Gathering card prices tend to react to \"market news\" at a relatively slow rate. A professional player would play the card, the card would increase in popularity in a short amount of time, but prices of the card would take a week to increase due to slow market response.</p>\n<p>We wanted to take advantage of this opportunity to be market makers and buy up the cards before they increase in price, so that we can potentially make a tidy profit.</p>\n<h2>What it does</h2>\n<p>This program seives through the over 28,000 Magic: The Gathering cards to determine candidates that will probably increase in price significantly in the near future.</p>\n<p>It does this by getting rid of every potential card that may decrease in price by using several metrics (e.g. the card going out of rotation for the Standard format or the card is currently banned),\nand then out of the remaining cards, will pick the ones that have seen a very recent spike in interest by the public using Google Trends.</p>\n<h2>How we built it</h2>\n<h3>GETTING CARDS:</h3>\n<p>(each file in this section outputs a .txt file with the corresponding name)</p>\n<p>listOfCardsSets.py - gets list of all cards*</p>\n<p>listFutureOOR.py - rids list of cards that will not be in play for the next block of rotations</p>\n<p>ListOneWord.py - rids the list of cards with one word names </p>\n<p>listBanned.py - rids the list of currently banned cards</p>\n<p>listFinal.txt - would contain final list of cards to potentially purchase</p>\n<h3>GOOGLE TRENDS:</h3>\n<p>googleTrends.py - download the csv files for each card in listFinal.txt</p>\n<p>trendsAnalyzer.py - analyze the trends, outputs viable cards</p>\n<h3>Main</h3>\n<p>main.py - this file combines all the above files into one easy to run program</p>\n<h2>Challenges we ran into</h2>\n<p>Getting the list of every card (over 28,000!!!) was very difficult.</p>\n<p>Google Trends \"API\" was difficult to work with.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are most proud of how we integrating many different APIs (Google Trends), libraries (beautiful soup), and programs (the Magic master card list getter) together to form one coherent whole.</p>\n<h2>What's next for magic</h2>\n<p>Backtesting the program, using better analysis, and perhaps eventually starting a small fund!</p>\n<p><sub> *listOfCardsSets.py takes in data in the form of a csv file generated by Gatherer Extractor v3.22 to parse through the file and extract card and set names </sub></p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/choandrew/magic\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/choandrew/magic\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Came up with idea, programmed analysis of cards", "", ""]], ["Belated for Slack", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We found that large team chats had too much information to process at times. This will lead to people just turning off notifications and losing track of what was going on. Challenged by that, we decided to remedy that problem by creating this hack.</p>\n<h2>What it does</h2>\n<p>Our hack runs a server that listens to a slack team chat. When our client reads that the slash function has been triggered. We take the 100 most recent messages in the chat, gives each message a score based of people's reactions and response times and gives people a base to read from.</p>\n<h2>How we built it</h2>\n<p>Our server and client is hosted on Sinatra, a Ruby framework where we interact with Http get and post requests.The application is hosted on Heroku. We process quite a bit of JSON.</p>\n<h2>Challenges we ran into</h2>\n<p>The Slack API and Howdy's botkit doesn't really like sending posts to other applications, or servers. When it was time to connect our preliminary bot, we ran into some trouble. We also had a little bit of trouble for OAuth 2.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We were able to run some advanced algorithims and implement them, it was quite the feat.</p>\n<h2>What I learned</h2>\n<p>Research them APIs</p>\n<h2>What's next for Belated for Slack</h2>\n<p>We will be submitting our app to the app directory, pending the addition of a few new algorithms we wish to add. We also wish to complete our implementation of our bot.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sinatra\">sinatra</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ruby\">ruby</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/slack\">slack</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/thecodethinker/belated-slack\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/thecodethinker/belated-slack\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Designed the Algorithm that determined message importance and pulled out the most important conversations that occurred. ", "", ""]], ["macintosh twin", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Macintosh Twin</h2>\n<p>White noise can get a little boring, and music can be a little distracting. Why seek out the perfect focus-enhancing soundscape when a computer can generate it for you? </p>\n<p>Macintosh Twin is a vaporwave/aphex twin/soundscape inspired mix of rhythm, soundscapes, and melody. It evolves into something new every time. It is generated (all client side) from a mix of music theory, randomness, and a little inspiration from @officialjaden. </p>\n<p>Repo: \n<a href=\"https://github.com/jeffchang5/Ambient\" rel=\"nofollow\">https://github.com/jeffchang5/Ambient</a></p>\n<p>See it at \n<a href=\"http://ambient.kmattimo.me/\" rel=\"nofollow\">http://ambient.kmattimo.me/</a></p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">webaudio</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://ambient.kmattimo.me\" rel=\"nofollow\" target=\"_blank\" title=\"http://ambient.kmattimo.me\">\n<i class=\"ss-icon ss-link\"></i>\n<span>ambient.kmattimo.me</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["XCalibur", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"XCalibur \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/375/847/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>It started as an effort to help a friend who needed a microSD card to load a custom Linux image for his Raspberry Pi. I gave him my card, and he backed up all the data, and then attempted to format it using dd.</p>\n<p>It did not work. And there began the hell that lasted for multiple hours that killed a computer and injured another, spit out error codes that were not in OSX/Linux documentation, and confused and challenged and generally wasted the time of many hackers.</p>\n<h2>What it does</h2>\n<p>XCalibur can be written to. XCalibur can be read from. But God forbid if you attempt to overwrite its filesystem. It's built in Knights of the Round Table<sup>TM</sup> technology fights off hackers and meddlers with ease. It doesn't just prevent access, but as any good fighting force, lures the enemy into a false sense of security, and when they believe they have succeed, strikes unexpectedly and renders their work utterly useless.</p>\n<p>Attempts at formatting:</p>\n<ol>\n<li>@Ben backs up all current data on drive. Attempts to use ApplePi-Baker the Raspbian image onto it.</li>\n<li>@Dev attempts to use fdisk to delete the partition. Old partition shows as deleted in fdisk. No errors. Write successful. Drive is unresponsive when trying to mount again, take it out. Plug it back in, no change in file system. All files are readable / accessable as if fdisk did no operations.</li>\n<li>@Shanantu given XCalibur to attempt to format. Plugs in his computer, and it freezes his computer. Needs to force restart.</li>\n<li>@Jordan given microSD card to attempts format. Using Ubuntu with gparted, gparted shows that it has successfully deleted partition. Eject drive, plug back in, looks like no change. Frustrated, attempts \"touch\" for foo.txt. Touch successful, file shows in explorer, openable, editable, saveable. Eject drive. Place drive back in, file is gone. Attempt to format again, still nothing. Frustrated, attempt to simply delete all data on drive with rm -rf. Jordan messes up and rm -rf / instead of rm -rf /dev/sdb. His ubuntu filesystem nuked, and spends next 9 hours trying to attempt to install another linux system on top of it (still unable to, something corrupted on his ssd we believe through the rm -rf command).</li>\n<li>@Ben attempts another format using official Mac SD card formatting tool this time. Spits out error -50, which as far as we researched, is undocumented. We do find that the official tool is by \"SDCard.org\".</li>\n<li>@Dev attempts to continue looking up possible errors and ways to check for bad sectors.\nCommand \"fsck -a\" is run, which has the output:\n<code>\nicarus@Castle ~]$ sudo fsck -a /dev/sdb1\n[sudo] password for icarus:\nfsck from util-linux 2.27.1\nfsck.fat 3.0.28 (2015-05-16)\n0x41: Dirty bit is set. Fs was not properly unmounted and some data may be corrupt.\nAutomatically removing dirty bit.\nFATs differ but appear to be intact. Using first FAT.\nFree cluster summary wrong (1554557 vs. really 1554558)\nAuto-correcting.\nPerforming changes.\n/dev/sdb1: 1583 files, 388034/1942592 clusters\n[icarus@Castle ~]$ sudo fsck -a /dev/sdb1\nfsck from util-linux 2.27.1\nfsck.fat 3.0.28 (2015-05-16)\n/dev/sdb1: 1583 files, 388034/1942592 clusters\n[icarus@Castle ~]$\n</code>\nRunning fsck fixed the problem, and on second run saw an error free run. After safely ejecting and plugging it back in, XCalibur again had the same fsck dirty bit error as before.</li>\n</ol>\n<p>We attempted to perhaps break it more by changing its partition table from MDOS to GPT, but despite the use of both CLI and GUI toolsets, </p>\n<p>@Nelson &amp; Shanantu attempts on windows PC: \n Removed MicroSD from USB and put it in SD adapter</p>\n<ol>\n<li>Inserted SD-adapter into Windows 10 computer</li>\n<li>diskpart</li>\n<li>list disk</li>\n<li>select disk 1 (SD)</li>\n<li>list partition\nPartition 1 | Primary | 14 GB | 1024 KB offset</li>\n<li>clean\nSucceeded in cleaning</li>\n<li>list partition\nPartition 1 | Primary | 14 GB | 1024 KB offset</li>\n<li>regedit did not show a key named StorageDevicePolicies\nCreated key manually to set \"Write Protection\" to 0</li>\n<li>attributes disk clear readonly\nDisk attributes cleared successfully.</li>\n<li>Attempted to quick format FAT32\nWindows states \"Windows was unable to complete the format.\"</li>\n<li>Attempted formatting from diskpart\nDiskPart has encountered an error: Parameter is incorrect.\nSuggests checking event log.</li>\n<li>Checked event log, Windows did not appear to log anything</li>\n<li>Reverted to USB adapter</li>\n<li>Mounted in Ubuntu via USB adapter</li>\n<li>Device auto-mounted, attempted to touch a file</li>\n<li>ls showed file in the root of the SD card</li>\n<li>echo ayy lmao &gt; file</li>\n<li>sync</li>\n<li>cat file\noutput is \"ayy lmao\"</li>\n<li>sudo umount /dev/sda1</li>\n<li>Remove and reinsert hardware from VM</li>\n<li>cd into SD card</li>\n<li>File was no longer in card</li>\n</ol>\n<p>XCalibur has proven to be particularly resilient to change. We have been looking into possible errors with file corruption, hardware failure, and our tests and reasons as to why no single explanation is adequate.</p>\n<p>As we spent more time researching it, a couple frequently diagnosed problems with similar hard issues were:</p>\n<ol>\n<li><p>Sector Corruption. This was often the quoted reason for bad drives. However, bad sectors would easy have been found by a check disk or other commands as they would encounter it. Bad sectors are so well known that error codes for them are well documentated, but we did not run into them.\nwas kill.</p></li>\n<li><p>Another suggested error was that it was write locked. The microSD card did not have write lock on it, and we used 3 different microSD to SD adapters, only one of which featured write lock, of which we tried both locked and not locked. When write locked, we were unable to copy files at <em>all</em>, and the ramdisk functionality </p></li>\n<li><p>Bad Reader / Adapter. As we stated of , we used three different types of adapters to account for this problem.</p></li>\n</ol>\n<h2>How we built it</h2>\n<p>Mistakes and regrets. Lots of them.</p>\n<h2>Challenges we ran into</h2>\n<p>Yes.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We haven't burnt it. Yet.</p>\n<h2>What we learned</h2>\n<p>When you need to use a microSD card, just don't.</p>\n<h2>What's next for XCalibur</h2>\n<p>Probably burning it.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">salt?</span></li><li><span class=\"cp-tag\">agony</span></li></ul>\n</div>\n</div>", ["suh dude", "The discoverer of the anomaly.", "I did something..", "I impersonated Rick Scott", "Owner of mSD card, write up and documenter, log keeper", ""]], ["ifeellikejaden", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Jaden Smith <img alt=\"jaden\" data-canonical-url=\"http://www.ifeellikejaden.tech/static/img/jaden.jpg\" src=\"https://res.cloudinary.com/devpost/image/fetch/s--4zYowN9v--/http://www.ifeellikejaden.tech/static/img/jaden.jpg\"/></p>\n<h2>What it does</h2>\n<p>Measures how cool you are and just how long it will take you to become as cool as your idols!</p>\n<h2>How we built it</h2>\n<p>Using Flask, Tweepy, and lots of JavaScript.</p>\n<h2>Challenges we ran into</h2>\n<p>We each learned a lot of new tech for this project.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Dynamic meme generator in javascript.</p>\n<h2>What we learned</h2>\n<p>Matt relearned Python for this project and learned how to use Flask and Tweepy.</p>\n<p>Will learned how to generate memes with HTML5 Canvas.</p>\n<p>Gaibo learned D3.js and JavaScript.</p>\n<p>We learned a bunch.</p>\n<h2>What's next for ifeellikejaden</h2>\n<p>More memes, more memes, more memes.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twitter\">twitter</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/d3-js\">d3.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://wwwwwwwww.ifeellikejaden.tech\" rel=\"nofollow\" target=\"_blank\" title=\"http://wwwwwwwww.ifeellikejaden.tech\">\n<i class=\"ss-icon ss-link\"></i>\n<span>wwwwwwwww.ifeellikejaden.tech</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Shar\u00fcm", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Shar\u00fcm \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/341/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Shar\u00fcm \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/378/047/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Shar\u00fcm \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/378/048/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>HI TEAM SHAR\u00dcM HERE WITH A BRAND NEW HACK\u2122</h2>\n<p>YOU ARE ON A WEBSITE AND GETTING MEMES OF A SPECIFIC TYPE IS TOO HARD. YOU CAN TYPE INTO THE GOOGLE\u2122 AND MAYBE GET WHAT YOU ARE LOOKING FOR. YOU CAN JOIN A FACEBOOK GROUP BUT NEVER HAVE IT IN YOUR FEED WHEN YOU WANT IT. </p>\n<h2>PRESENTING SHAR\u00dcM\u00a9</h2>\n<p>SHAR\u00dcM\u00a9 IS A BUTTON THAT WILL GIVE YOU MORE OF WHAT YOU WANT!\u2122 Just hover your mouse over the photo you like and press our un-patented N.U.T.\u2122 button, after you press it our advanced extension in CHROME will send it to the CLOUD\u2122 and give you what you desire. YOU WANT GARLIC BREAD MEMES, YOU GET MORE GARLIC BREAD MEMES USING THE POWER OF MACHINE LEARNING\u2122!</p>\n<h2>\"TELL US HOW IT WORKS!\"</h2>\n<p>You got it mysterious headline telling me to describe to you how we did it. </p>\n<p>It starts with our button, a modified Staples Easy button fitted with a raspberry pi zero. The pi zero is running an image that Ben worked on so the signal it sends is recognizable to the host computer. Inside the casing, on press it sends a keystroke combination that activates a chrome extension thanks to Shantanu's piece.</p>\n<p>The chrome extension made by Angelo later activates a DOM view script that gets the nearest photo link to the mouse cursor and sends the link to the server. The server will make a query to multiple image sites that will return INFINITE*  relevant photos. </p>\n<p>Benji's part of the hack will make a new tab that will be opened and it will populate the page with child photos. When you start clicking the child photos, more photos of the child type will be given to you. </p>\n<p>As a result we solved one of the more pressing problems of content search that involved multiple steps into one easy press of a button.</p>\n<ul>\n<li><em>As much as possible</em></li>\n</ul>\n<h2>Challenges we ran into</h2>\n<p>Modifying our casing for a button. We will leave commodities to expert factories in Shengzhen. \nAlso juggling APIs is kinda hard.\nAnd making sure the extension sends the right image tag is important.</p>\n<h2>Accomplishment that we're proud of</h2>\n<p>StumpleUpon will be completely replaced by Shar\u00fcm\u00a9</p>\n<h2>What we learned</h2>\n<p>Ben learned how to do a little ruby.\nShantanu learned how to javascript\nAngelo learned out to make a chrome extension.\nBenjamin learned machine learning.</p>\n<h2>What's next for Shar\u00fcm\u00a9</h2>\n<p>This is actually a proof of concept for a product that can serve relevant content on demand, we can commoditize the experience for a consumer facing business that wishes to join in the joke, it works with a simple macro keypress as well. Adding video search functionality would be cool.</p>\n<p>For a more serious application to make it financially viable, we can use it not only for media but for relevant news articles that a analyst might need (like a financial trader, or a college student looking for articles) without SEO bias and focus on quality of content. A small rebranding effort and filters can turn this joke hack into a viable idea.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/go\">go</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li></ul>\n</div>\n</div>", ["I wrote a Website template for a server component in GO, and the chrome extension.", "", "", ""]], ["Pongbot", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Pongbot \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/377/201/datas/gallery.jpg\"/>\n<p>\n<i>A photo of our bot.</i>\n</p>\n</li> <li class=\"text-center\">\n<div class=\"alert-box alert\">\n        This image is currently processing. Please be patient...\n      </div>\n<img alt=\"Pongbot \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"https://devpost-challengepost.netdna-ssl.com/assets/defaults/software-d4334efb72013df43784baffede9d379.gif\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>A few games in, the game of beer pong transforms. Cups seem to move around the table. The room comes alive, and the game becomes more challenging, but more enjoyable. It was a discussion of this that led us to Pongbot, the newest way to play this college tradition. </p>\n<p>Pongbot gives users a new level of interactivity in the game, challenges even the best players, and, we hope, will help entertain college students and more for a long time to come.</p>\n<p>It also puts a personal face on a robot. It's absurd, absurdly cute, absurdly fun, and certainly uncommon.</p>\n<h2>What it does</h2>\n<p>The Pongbot is a moving, robotic set of solo-cups. It follows player gestures, helping users to think outside of the tyrannical 10-cup pyramid.</p>\n<p>In a game of Pongbot, players can be allies or adversaries. One player shoots ping pong balls, while the other uses gestures to control the cups, moving them in any way she chooses, without ever touching them. A kind partner may move the cup toward an approaching ball. A devious partner will move the cups away at the last second. It is their choice, but any ill treatment will be reciprocated when it's their turn to shoot.</p>\n<h2>How we built it</h2>\n<p>The hardware is built on top of a $9 RC car. The electronics of the car were left unchanged, but the electronics of the remote control were rethought.  We started by tearing open the remote, and soldering transistors and wires in place of where buttons had previously stood. This allowed us to control the remote's functions using the current of an Arduino.</p>\n<p>The flat base of the car on which the gaming platform sits was built from an empty container of Kind bars, carefully fitted to the frame of the vehicle, and reinforced heavily by a patchwork of coffee stirrers and hot glue. On top stands a tray for catching stray balls, and two traditional red solo cups. </p>\n<h2>Challenges we ran into</h2>\n<p>We ran into a number of issues while building this, including:</p>\n<ul>\n<li>Accessing the remote control's electrical components was extremely difficult, and required repeated and forceful prying, but we had to do it slowly and carefully so as to not damage the components inside.</li>\n<li>The libraries for interfacing the Leap motion with the Arduino were extremely complex, and required us to learn a number of new technologies. We're still unsure whether we'll be ready to display it by the end of the day, meaning we have devised a backup plan using the Myo.</li>\n<li>A number of key components we needed we did not have, so we had to scavange and network to find what we needed.\n## Accomplishments that we're proud of\nWe learned a number of new skills in hardware and software, and managed to build a beautiful bot in 24 hours.\n## What we learned\nPlan, plan, plan. Next time we'll figure out the materials and languages we need farther in advance, to better prepare for unanticipated challenges.\n## What's next for Pongbot?\nIt depends largely on the response. So far that response has been very positive.</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c\">c</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/hardware\">hardware</a></span></li><li><span class=\"cp-tag\">cardboard</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/leap-motion\">leap-motion</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/myo\">myo</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li></ul>\n</div>\n</div>", ["I did the node.js and was dexterious and helped build physical componets", "I was the one who managed the coding for the Myo part of the project. I also assisted with physical product assembly.", "I built the hardware and soldered the connections for the Arduino."]]]