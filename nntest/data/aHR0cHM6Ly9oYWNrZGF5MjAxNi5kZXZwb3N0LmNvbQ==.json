[["Apex", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Apex \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/375/867/datas/gallery.jpg\"/>\n<p>\n<i>Log In</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Apex \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/375/868/datas/gallery.jpg\"/>\n<p>\n<i>Sign Up</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Apex \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/375/866/datas/gallery.jpg\"/>\n<p>\n<i>Home Page</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Apex \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/375/865/datas/gallery.jpg\"/>\n<p>\n<i>Detail Page</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Apex \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/375/864/datas/gallery.jpg\"/>\n<p>\n<i>Detail Page 2</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>The Dartmouth Outing Club is an essential part of the Dartmouth community, organizing trips weekly for different types of activities and people. However, the way these trips are organized is very inefficient and not conductive to new members. Different groups have different methods of conducting their trips, some using massive email chains while others have google spreadsheets. Apex is inspired by the DOC to make trip organization seamless and easy for anyone to sign up.</p>\n<h2>What it does</h2>\n<p>Uses can sign up with only their email and password. After registering, users are directly towards upcoming trips. Clicking on a trip brings you to a more detailed view of the trip including description, group sizes, location, and many beautiful images. If interested a user can choose to join a trip. There is also a separate tab to view all of the trips you have signed up for. </p>\n<h2>How we built it</h2>\n<p>Apex is built using Firebase, a Google platform as a service technology that provides an on the fly NoSQL database, perfect for prototyping and iOS. </p>\n<h2>Challenges we ran into</h2>\n<p>Git and storyboard really do not work well together. There were tons of merge conflicts in general with iOS however storyboard conflicts were the most common by far and difficult to fix.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>The group as a whole worked really well together. This hackday was definitely a bonding experience. Yining and I were the two developers with no IOS experience but with the help of Armin and Patrick, they were able to help ramp us up really fast and allow us to be productive from the very beginning. </p>\n<p>The team dynamic was really effective and as teammates we were always ready to help each other. We also had a really effective workflow and avoided overlapping work as much as possible</p>\n<p>Ultimately however we are most proud of being able to produce a working iOS app in less than a day with beautiful images, a great UI, and a working backend!</p>\n<h2>What we learned</h2>\n<p>We learned a lot about Git workflow. Being able to use Git properly was a big part of our team\u2019s success and ability to work together but not butt heads. We also picked up a lot of new iOS skills as well as had experience diving deep into Firebase and learning its various features and functionality.</p>\n<h2>What's next for Apex</h2>\n<p>Messaging client to send messages to all members in a group\nCalendar integration through calendar events\nPayment integration with Venmo API\nEvent subscription: being able to subscribe for event updates from a specific location, group, or event type</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ios\">ios</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xcode\">xcode</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/git\">git</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/github\">github</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/dali-lab/apex\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/dali-lab/apex\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I made the Create Account page and worked on user information management and the login and signup connection to Firebase backend. I also did styling on the user interface and created icons and images. It was my first iOS project and I learned a lot about swift, XCode, iOS development, git, and version control.", "This was my first time working on iOS. I worked on most of the login and signup logic as well as styling for various storyboards. I also helped create assets for app icons, images, etc.", "", ""]], ["0Late", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"0Late \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/375/900/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"0Late \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/375/898/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"0Late \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/375/897/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"0Late \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/375/931/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"0Late \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/375/929/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"0Late \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/375/932/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"0Late \u2013 screenshot 7\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/375/933/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"0Late \u2013 screenshot 8\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/375/934/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"0Late \u2013 screenshot 9\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/375/935/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Has everybody used google calendar? It could notify us our daily event and manage our daily life well. However. Have you met this kind of situation?  Like, yesterday I have a group meeting with my teammates. I almost forgot it until my google calendar sent a notification. As usual I set a 10-minutes-before notification for this event. So, when I noticed it, I only have 10 minutes to run to Sudikoff, and my home is out of town.</p>\n<h2>What it does</h2>\n<p>Our app is ZeroLate, means never to be late, we could help users to set a more flexible deadline for each event. After logging your google account, ZeroLate could get all your events. And you could easily chose your transportation method, walking, driving or bicycling and our app will record your chose. Then we will start tracing the user\u2019s location at 2 hours before the start time of first event. Then ZeroLate will compute user\u2019s departure deadline based on google map\u2019s estimated time in their transportation choice. This deadline will be showed on the first page. And user could receive a notification at this latest departure time.</p>\n<h2>How we built it</h2>\n<p>We built it base on Android Studio platform. We take advantage of the Google Calendar and Google distance matrix api.</p>\n<h2>Challenges we ran into</h2>\n<h2>Accomplishments that we're proud of</h2>\n<h2>What we learned</h2>\n<h2>What's next for 0Late</h2>\n<p>1.Enable operation of add/delete event\n2.Connect it with watch, and it will send notification to the watch when the final time for leaving is approaching\n3.Maybe share one's calendar events with others</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/shirleyma/0Late.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/shirleyma/0Late.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Buy-U", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Buy-U \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/009/datas/gallery.jpg\"/>\n<p>\n<i>Landing Page</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>Buy-U</h1>\n<p>Dartmouth Hackday 2016 </p>\n<p>We're two young '19s who don't know what a back-end is. <em>This is our story</em></p>\n<p><strong>We wanted to build an online marketplace -- free, open, and easy to use -- for Dartmouth students</strong>\nThey could buy and sell anything they wanted. Zero overhead. Zero transportation costs.</p>\n<p>Since Venmo has closed down its developer API, we cannot currently implement it. However, we provide the necessary  information for both people to Venmo each other for the purpose.</p>\n<p>We used Firebase as a back-end, and it kind of works. You can kind of add items, you can definitely add users (exciting!), and you can absolutely navigate to a single longboard.</p>\n<p>With user functionality, the ability to create item postings, there are just a few more things we need to reach full functionality.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/stevenrchun/Buy-U\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/stevenrchun/Buy-U\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Hebrew Transliterator", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Hebrew Transliterator \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/375/928/datas/gallery.jpg\"/>\n<p>\n<i>A file that was written</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Hebrew Transliterator \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/375/941/datas/gallery.jpg\"/>\n<p>\n<i>Welcome Text</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>I teach Hebrew to fifth graders every Sunday and I always write them a short \"hebringlish\" text to read, because reading Hebrew characters secretly decrying English words and then solving the puzzle as to their meaning is much more interesting than reading Hebrew words whose meaning no one knows (at least not me). Thus, this app allows me to much more easily create transliterated texts to quench their thirst for Hebrew learning.</p>\n<h2>What it does</h2>\n<p>It takes a phonetically entered English text and makes it into Hebrew letters</p>\n<h2>How I built it</h2>\n<p>A lot of complicated and annoying string diddling</p>\n<h2>Challenges I ran into</h2>\n<p>Formatting the right-to-left characters within my left-to-right app. Swift kept glitching out, which ended up being the most complicated part</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I wrote the app!</p>\n<h2>What I learned</h2>\n<p>More about string diddling.</p>\n<h2>What's next for Hebrew Transliterator</h2>\n<p>I will offer it to Hebrew teachers if they want it. This app has a definite, if diminutive, niche: those who wish to type hebrew quickly but haven't hebrew keyboards. So, hopefully this will be helpful for them as it will be for me.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li></ul>\n</div>\n</div>", [""]], ["hackD16S", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<h2>What it does</h2>\n<h2>How I built it</h2>\n<h2>Challenges I ran into</h2>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<h2>What's next for hackD16S</h2>\n<p>i'll tell you</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/ahnkihong/hackD16S\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ahnkihong/hackD16S\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["SportsHub", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>hackday2016</h1>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c\">c</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/makefile\">makefile</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/shell\">shell</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/wesk/hackday2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/wesk/hackday2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["5moreminutes", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"5moreminutes \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/375/901/datas/gallery.jpg\"/>\n<p>\n<i>Home page</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"5moreminutes \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/375/902/datas/gallery.jpg\"/>\n<p>\n<i>summary loaded</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Wanted to build something easy and relevant for us and our friends, not to subvert readings but to aide for the inevitable days when you don't get to them.</p>\n<h2>What it does</h2>\n<p>It takes in a pdf and converts it to text for parsing, uses latent semantic analysis to generate a summary of 10 sentences to give the general feeling from the text. It then goes to wikipedia and returns 3 pages for you to look at too.</p>\n<h2>How we built it</h2>\n<p>Used Nodejs and Express/Python on the backend. </p>\n<h2>Challenges we ran into</h2>\n<p>PDF conversions are messy!</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Made it clean and drag/drop seems clean and works very nicely.</p>\n<h2>What we learned</h2>\n<p>To try new libraries rather than try to do everything by hand.</p>\n<h2>What's next for 5moreminutes</h2>\n<p>Add in a few more textual analysis features, primarily some form of sentiment analysis and slightly more interesting text data other than the summary.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">latent-semantic-analysis</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://104.197.74.116/#\" rel=\"nofollow\" target=\"_blank\" title=\"http://104.197.74.116/#\">\n<i class=\"ss-icon ss-link\"></i>\n<span>104.197.74.116</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Web frontend, python wikisum module, parsing the JSON and all kinds of stuff.", "", ""]], ["dbshare", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"dbshare \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/375/888/datas/gallery.jpg\"/>\n<p>\n<i>The submission window for creating a listing</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"dbshare \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/375/889/datas/gallery.jpg\"/>\n<p>\n<i>The listing screen where users can view existing offers or create one of their own</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"dbshare \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/375/890/datas/gallery.jpg\"/>\n<p>\n<i>The home page of our platform</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>A common problem for Dartmouth students is unused meal swipes at the end of the week or unused DBA by the end of the term. In most cases, the swipes simply go unused and the DBA is either spent hurriedly at KAF or, as with the swipes, remain unused. This is a wasteful phenomenon. Students are not making full use of their meal plans, and some are buying food just for the purpose of spending swipes and DBA. </p>\n<p>The reverse is also a common occurrence. It is not unusual to see students begging their friends for extra DBA at the end of the term or, albeit less commonly, for extra swipes at the end of a week. In most cases, students end up going negative in DBA, incurring additional costs beyond their meal plan. Given that some students have an excess of swipes and DBA, and that others have a demand for them, a logical solution is to create a way for these students to communicate with each other and exchange swipes and DBA.</p>\n<p>To alleviate these problems, we have created dbshare, an online platform where Dartmouth students can sell and buy swipes or DBA. Students who have more than they need can sell.</p>\n<h2>What it does</h2>\n<p>In short, dbshare creates a way for students to sell and buy swipes or DBA, thus eliminating meal plan waste and giving students a better way to acquire more meal swipes. </p>\n<p>The goal of dbshare is to create an easy and incentivized way for students to sell swipes and for students to buy them. dbshare presents a centralized platform where all listings to sell swipes/DBA are located, making it easy for listings to be discovered and completed. In addition, students are motivated to use dbshare because they can earn money from unused swipes; students are also motivated to buy because the selling price for swipes will end up lower than the actual value of the swipe, giving them the ability to save money. </p>\n<p>When a potential buyer goes to dbshare, he or she can create a request detailing the type of swipe needed (lunch swipe, dinner swipe, etc.), where he or she wants to spend this swipe (e.g. FoCo or Hop), and a purchase price. Potential sellers can go to dbshare and see a full list of these requests and choose to accept them. Once a request is accepted, it is removed from the overall list, and the transaction then becomes a private communication between buyer and seller.</p>\n<p>Note that dbshare does not facilitate an automatic transfer of swipes from one student's account to another's. The process of adding and removing swipes and DBA from a student's account is facilitated by DDS and the College. However, what dbshare does do is to create an incentive, as mentioned above, for a student selling a swipe to be physically present with the buying student when the swipe is used. </p>\n<h2>How we built it</h2>\n<p>We used HTML, CSS, Bootstrap, Node.js, Handlebars.js, and Express.js for the front end, and MongoDB for the back end.</p>\n<h2>Challenges we ran into</h2>\n<p>One challenge we ran into was incorporating the Venmo API into dbshare so students can make transactions through this popular third-party application. Unfortunately, Venmo has recently stopped allowing new users to use its API, and the workarounds we have found require information that we cannot easily access, such as a Venmo user's UserId. </p>\n<p>Another challenge that we ran into is implementing the notification system for buying and selling, discussed below in next steps. In order to access the information we need, we have to log in to the GET funds website using a student's Dartmouth credentials. We can get the credentials by having a student use them to sign in to dbshare, but the problem we ran into is when attempting to fill out the GET funds login page automatically with these stored credentials. In our attempts, we cannot manage an automatic login, as this is apparently a possible security concern. Thus, the best we can currently do is automatically fill out the login fields and have the user click the actual submit button on the webpage.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We have implemented signing up for and logging in to dbshare. In addition, we have created the ability for students to create offers, with fields specifying type of swipe, location, and price. We also have created the list of requests, as well as the option to accept individual requests for transaction. Finally, we have implemented a backend using mongoDB that stores a user's name, login information, and requests. We are proud that we were able to implement a web page from scratch within this short period of time, maintaining code integrity while including CSS to add aesthetics to our product.</p>\n<h2>What we learned</h2>\n<p>We have learned some of the limitations of web crawling, such as not being able to automatically fill in and submit login forms. We have also reinforced and improved upon our knowledge of HTML, CSS, node.js, and mongoDB.</p>\n<h2>What's next for dbshare</h2>\n<p>Currently, dbshare is simply a website where students can make listings for meal swipe/DBA offers. We believe the next step for dbshare is to integrate a notification system that prompts students who are running low on meal swipes and DBA to consider buying and for student who have an abundance to consider selling. Such a system would not only help students with managing their meal plan spending but also increase usage of dbshare. We would accomplish this by periodically crawling a student's GET funds page, where information including DBA amounts and meal swipes left can be found, and comparing these values against a buy/sell threshold that changes depending on the day of week or week of term. For example, a student who has the SmartChoice20 plan and still has 9 meal swipes left on Saturday would be encouraged to sell extra swipes, and a student who has -$20 DBA during week 9 would be encouraged to buy extra DBA. The specific thresholds for each meal plan can be calculated on a linearly sliding scale, or could be modified based on previous spending habits (i.e. a student on the SmartChoice5 who habitually spends swipe on the weekends would not be prompted to sell swipes during weekdays). </p>\n<p>Another next step for dbshare is to integrate payment using DASH for meal swipes and DBA. Many students would prefer to pay with DASH since they have already discretionary spending allocated for items like laundry. In addition, paying with DASH does not require a student to give additional login information, such as user information for Venmo or Paypal. Adding this option will provide additional convenience and security to the student. One foreseeable obstacle with this step is asking the College to agree to such a payment method.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/handlebars-js\">handlebars.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/nathanyu835/dbshare\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/nathanyu835/dbshare\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Worked on the backend - setting up the server in NodeJS and the database in MongoDB. Also did the CSS for the main page.", "", "", ""]], ["Brick Breaker", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Brick Breaker \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/375/879/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Brick Breaker \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/375/880/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>we had an hour</p>\n<h2>What it does</h2>\n<p>bounces around the screen and hits rectangles</p>\n<h2>How I built it</h2>\n<p>Made the paddle move and the rectangles appear wherever a click occurs</p>\n<h2>Challenges I ran into</h2>\n<p>deleting the correct bricks</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>making the ball bounce properly </p>\n<h2>What I learned</h2>\n<p>procrastination is not the answer</p>\n<h2>What's next for Brick B</h2>\n<p>delete the correct bricks</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n</div>", [""]], ["Myo Stress Detector", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Myo Stress Detector \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/375/860/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>What it does</h2>\n<p>This app runs on your laptop and periodically reads in raw electromyographic (EMG) signals from the muscles on your forearm using the Myo Gesture Armband. After collecting enough data, we use machine learning models to predict your current level of stress based on your personal EMG dataset. We detect 3 levels of stress: low, medium, and high.</p>\n<h2>How we built it</h2>\n<p>We used the Myo for Processing SDK, which provided a way to build a Processing app that could interface with a Myo connected to a laptop. Using the SDK, we were able to configure our code to record all the incoming data streams related to EMG signals. We were able to use the EMG signals both for record data and visualizing it through the drawing functions that Processing provides. We then used trained machine learning models for classifying the data so that every so often, we system would take up to a minute's worth of EMG data from the person and use it to re-predict what their stress level was. We used stress EMG dataset on physionet to train our models. We ended up having a 10 fold cross validation accuracy of 71% for linear SVM and 98% for kernel SVM (rbf).</p>\n<h2>Challenges we ran into</h2>\n<p>We were originally planning to implement this through a mobile application, but the official Myo SDK for Android did not expose the raw EMG data from the Myo. Thankfully, we were able to find that the unofficial Myo for Processing SDK was built to support this feature. Also, had challenges trying to build and train our machine learning models to make sure that we could predict stress as accurately as we could.</p>\n<h2>What we learned</h2>\n<p>We learned about how we could record and visualize the EMG data produced from the Myo Gesture Armband, and about which frameworks exposed the Myo data that we needed. </p>\n<h2>What's next for Myo Stress Detector</h2>\n<p>We plan to continue training our machine learning models to increase the accuracy of our stress prediction.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/myo\">myo</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/processing\">processing</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["Cheeze", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Take a photo when you smile</p>\n<h2>What it does</h2>\n<h2>How I built it</h2>\n<h2>Challenges I ran into</h2>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<h2>What's next for Cheeze</h2>\n<p>&lt;?php\n    //get json from javascript\n    $image_data = \"\";\n    $json_image = file_get_contents('php://input');\n    $image = json_decode('image', $json_image);</p>\n<pre class=\"language-nolang\"><code>//send request to find the joy persent\n\n//echo 'Hi there';\n\n//send the smiling pic to client\n$array_image = array ('image' =&gt; $image_data);\n$json_image = json_encode($array_image);\n//echo \"GetSmilingPhoto($json_image)\";\n</code></pre>\n<p>?&gt;</p>\n<p>\n\n    \n     CheeseCam! </p>\n<pre class=\"language-nolang\"><code>&lt;script&gt;\n\n\n    var apiKey = \"AIzaSyBmd3CqCjETNhx-WrABPRPUbdBvr8R3sbk\";\n    var CV_URL = \"https://vision.googleapis.com/v1/images:annotate?key=\" + apiKey;\n\n\n    window.addEventListener(\"DOMContentLoaded\", function() {\n        var canvas = document.getElementById(\"canvas\"),\n            context = canvas.getContext(\"2d\"),\n            result = document.getElementById(\"result\"),\n            resultContext = result.getContext(\"2d\");\n\n            video = document.getElementById(\"video\"),\n            videoObj = { \"video\": true },\n            timer = setInterval(function CapturePhoto(){\n                context.drawImage(video, 0, 0, 500, 375);\n                var data = canvas.toDataURL('image/png');\n\n                //alert('Before request');\n                var request = {\n                    requests: [{\n                      image: {\n                        content: data\n                      },\n                      features: [{\n                        type: \"FACE_DETECTION\",//send data to backend php\n                        maxResults: 200\n                    }]\n                  }]\n                };\n                //alert('After request');\n\n                $('$result').text('Loading');\n</code></pre>\n<p>//                    var xmlhttp = new XMLHttpRequest( );\n//                    xmlhttp.open(\"POST\", CV_URL, true);\n//                    xmlhttp.onload =  function () {\n//                        alert(\"OK open request\");\n//                    }\n//                    xmlhttp.setRequestHeader(\"application/json\", \"application/x-www-form-urlencoded\");\n//                    xmlhttp.send(JSON.stringify(request));\n//                    alert('Request sent');</p>\n<pre class=\"language-nolang\"><code>                $.post({\n                    url: CV_URL,\n                    data: JSON.stringify(request),\n                    contentType: 'application/json'\n                  }).fail(function(jqXHR, textStatus, errorThrown) {\n                    alert('Failed to send request!');\n                    $('#results').text('ERRORS: ' + textStatus + ' ' + errorThrown);\n                  }).done(displayJSON);\n                } , 1000);\n\n            errBack = function(error) {\n                if(\"object\" === typeof window.console){\n                    console.log(\"Video capture error: \", error.code);\n                }\n            };\n\n        if(navigator.getUserMedia) { // Standard\n            navigator.getUserMedia(videoObj, function(stream) {\n                video.src = stream;\n                video.play();\n            }, errBack);\n        } else if(navigator.webkitGetUserMedia) { // WebKit-prefixed\n            navigator.webkitGetUserMedia(videoObj, function(stream){\n                video.src = window.webkitURL.createObjectURL(stream);\n                video.play();\n            }, errBack);\n        }\n\n\n        function displayJSON(data) {\n            var contents = JSON.stringify(data, null, 4);\n            alert(contents);\n\n\n          $(\"#results\").text(contents);\n        }\n\n        function  GetSmilingPhoto(data) {\n            setTimeout()\n            var image = new Image();\n            image.src =  data.image;\n            resultContext.drawImage(image, 0, 0);\n            DownloadImage()\n\n        }\n        function DownloadImage(link, filename) {\n            link.href = document.getElementById(result).toDataURL();\n            link.download = filename;\n        }\n\n        document.getElementById(\"snap\").addEventListener(\"click\", function() {\n            context.drawImage(video, 0, 0, 500, 375);\n        });\n\n    }, false);\n&lt;/script&gt;\n</code></pre>\n<p></p>\n<p></p>\n\n \n    \n\n\n    #video {\n        width: 500px;\n        height: 375px;\n        background-color: #666;\n    }\n\n    #canvas{\n        width:500px;\n        height: 375px;\n        position: relative;\n        top:-380px;\n        right:-500px;\n        padding-left: 100px;\n    }\n\n    /*#result{*/\n        /*background-color: aquamarine;*/\n        /*position: relative;*/\n        /*top: -300px;*/\n        /*right: -300px;*/\n    /*}*/\n\n    #snap{\n\n        position: relative;\n        bottom: -100px;\n    }\n    #results{\n\n        position: relative;\n        top:300px;\n    }\n\n\n\n\n\n    \n    Snap Photo\n    \n    \n \n\n<p><code> </code></p>\n<p>\n</p>\n</div>\n</div>", ["", ""]], ["MeteD", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"MeteD \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/375/841/datas/gallery.jpg\"/>\n<p>\n<i>Show your current location and where are available parking space on campus</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"MeteD \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/375/842/datas/gallery.jpg\"/>\n<p>\n<i>Review the detail information about available parking space</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"MeteD \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/375/843/datas/gallery.jpg\"/>\n<p>\n<i>Display available parking space in different granularity</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>As we know, vechiles have totally changes our life. They make us more efficient, save the time used on commuting. However, it is also a pain to find a parking spot, especailly in modern cities. Imagaine you have an app, which can help you find a parking spot when you are desperately looking for one.</p>\n<h2>What it does</h2>\n<ul>\n<li>Find available parking slots on campus in real-time;</li>\n<li>Update availability of parking slots in real-time (curretnly with mock data);</li>\n<li>User-friendly web interface for admine (i.e. add/update/delete parking slots);</li>\n</ul>\n<h2>How we built it</h2>\n<ul>\n<li>Used Android Studio as the IDE building both the App and the backend in the cloud;</li>\n<li>Used Python to manipulate our mock data;</li>\n</ul>\n<h2>Challenges we ran into</h2>\n<ul>\n<li>How the UI interacts with the backend</li>\n<li>Animation in the app</li>\n<li>UI Design</li>\n</ul>\n<h2>Accomplishments that we're proud of</h2>\n<ul>\n<li>Design the Interface of the App and implement most part of the App</li>\n<li>Implemented Servlets and Webpage</li>\n<li>Make sure the data flows perfectly between frontend and backend </li>\n<li>Generate mock data, and implement script in Python  to upload mock data;</li>\n</ul>\n<h2>What we learned</h2>\n<ul>\n<li>Version Control is important;</li>\n<li>Agile Development is useful;</li>\n<li>Teamwork builds great things</li>\n</ul>\n<h2>What's next for MeteD</h2>\n<ul>\n<li>Get real-time data of meters on campus</li>\n<li>Alpha Test</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/casper666/meteD\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/casper666/meteD\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Designed the user interface and implemented most functionalities of the Android App", "Programmer Assistant ", "", ""]], ["DartmouthPong", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"DartmouthPong \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/375/844/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Dartmouth Pong</h2>\n<p>A Java Game by Tony DiPadova and Steven Jiang</p>\n<h2>What It Does</h2>\n<p>This is a Pong game that uses the motion of objects on a webcam to control the paddles.</p>\n<h2>How It Works</h2>\n<p>We used color tracking techniques to find the hand or object that controls the paddle.</p>\n<h2>Instructions</h2>\n<p>To run <strong>DartmouthPong</strong>, run <strong>DartmouthPongGUI</strong> in Eclipse as a <em>Java Application.</em>\nThis must be done because the .jar refuses to load the images used in this application\nand because we're just wee Freshmen who can't properly package things. Woops.</p>\n<p>When Running the application, simply click the a hand (or other object) on the left and right sides of the screen and then press <em>space</em> to start the application.</p>\n<h2>Thanks</h2>\n<p>Thank you Emma, we're sorry we said you couldn't help. You were super helpful.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/tdipadova3rd/DartmouthPong\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/tdipadova3rd/DartmouthPong\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Software Webpage", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Software Webpage \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/375/833/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Software Webpage \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/375/834/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h4>Just wanted to make a website.</h4>\n<h2>&lt;** The website just links to other websites.**&gt;</h2>\n<p>&lt; I used Html and css to create the page.&gt;</p>\n<p>&lt; The only challenge was not overlapping code and remembering syntax.&gt;</p>\n<p></p>\n<h3>&lt; I learned the basics of <em>HTML and css</em> &gt;</h3>\n<h2></h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://gist.github.com/anonymous/76b4baddb81d90c33ec373dfc89a7cd2\" rel=\"nofollow\" target=\"_blank\" title=\"https://gist.github.com/anonymous/76b4baddb81d90c33ec373dfc89a7cd2\">\n<i class=\"ss-icon ss-link\"></i>\n<span>gist.github.com</span>\n</a></li>\n<li><a href=\"http://codepen.io/Jacvk/full/oxdbrZ/\" rel=\"nofollow\" target=\"_blank\" title=\"http://codepen.io/Jacvk/full/oxdbrZ/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>codepen.io</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Webcam AR", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/41-3NjXQc0c?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>I was inspired by the webcam lab assignment for CS10, and wanted to make something using the webcam in Unity. </p>\n<h2>What it does</h2>\n<p>Webcam AR is an augmented reality application that tracks an object of a specific color and projects an animated 3D model onto a webcam video based on the object's location. </p>\n<h2>How I built it</h2>\n<p>I used Unity and C# to build this application. </p>\n<h2>Challenges I ran into</h2>\n<p>It was difficult to figure out how to track objects of a specific color, as the low web cam quality results in continuous fluctuations in color readings. </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I'm proud that I managed to implement a simple AR mechanism. </p>\n<h2>What I learned</h2>\n<p>I learned how to manipulate web cam data in Unity. </p>\n<h2>What's next for Webcam AR</h2>\n<p>There aren't many augmented reality games out there, so I think this is a good proof of concept for what Unity could do in the AR field. Future directions for Webcam AR could include adding more models and the ability to change what color object is tracked through UI, as well as creating a game around it. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li></ul>\n</div>\n</div>", [""]]]