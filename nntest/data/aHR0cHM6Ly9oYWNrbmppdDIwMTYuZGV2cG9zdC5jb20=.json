[["VoiceIQ", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"VoiceIQ \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/439/576/datas/gallery.jpg\"/>\n<p>\n<i>VoiceIQ</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"VoiceIQ \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/439/566/datas/gallery.jpg\"/>\n<p>\n<i>IQbot</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"VoiceIQ \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/440/121/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"VoiceIQ \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/440/122/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"VoiceIQ \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/440/123/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"VoiceIQ \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/440/124/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>This Application was built out of our teams passion to break the barriers in effective and purposeful communications in todays fast pace world. We believe that everyone should be heard and that with such a high level of connectivity, no one should feel alone or be put in harms way.</p>\n<h2>What it does</h2>\n<p>VoiceIQ is a communications platform whose primary point of contact is its \"Intelligent Hotline\". Incoming calls are routed to our IQbot virtual attendant who's focus is to take in any and all inquiries. The question are transcribed to text and backed up to a MongoDB instance hosted on IBM's Bluemix. Once the transcriptions are received, keyword analysis is performed in order to literally highlight and prioritize potentially high risk communications. They are then routed to the browser both in text and mp3, where live users and web attendants  can answer questions and concerns. The calls are posted anonymously to protect the privacy of our users. An attendant then responds to the question through either live video-chat, in-browser voice calling or by commenting. In the case of comments the response is routed back to the user via SMS.  </p>\n<h2>How we built it</h2>\n<p>The VoiceIQ platform was built using a micro-service architecture that utilizes  mongoDB deployed on IBM's Bluemix. We integrated the Twilio voice, video and programmable SMS API's. The application Architecture is handled by the express application framework and is deployed to Heroku with a NodeJs back-end.    </p>\n<h2>Challenges we ran into</h2>\n<p>We are big fans of the API first model at Twilio, however, due to an internal  network issue at NJIT we were forced to at the last minute spin up an alternate instance of  our webRTC video chat. We also found that with the rapid growth of Twilio the documentation across the different services varied significantly. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are proud of the fact that we were able to create a contextual communications platform that has the potential to solve a number of real world concerns while improving the quality of human life.</p>\n<h2>What we learned</h2>\n<p>We learned that there is no substitute for hard work and that persistence always overcomes the distance.</p>\n<h2>What's next for VoiceIQ</h2>\n<p>VoiceIQ will continue to iterate. We fell just shy of releasing our profile feature. We will also be releasing realtime cross platform notifications to campus administration in order to more effectively prevent potentially harmful situations.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongoose\">mongoose</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jade\">jade</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/webrtc\">webrtc</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag\">passportjs</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://voipiq.herokuapp.com/\" rel=\"nofollow\" target=\"_blank\" title=\"https://voipiq.herokuapp.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>voipiq.herokuapp.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["front end, design, twilio, back end logic", ""]], ["TranSend", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"TranSend \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/439/482/datas/gallery.jpg\"/>\n<p>\n<i>Sample chatbox</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"TranSend \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/439/573/datas/gallery.jpg\"/>\n<p>\n<i>Another chatbox</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"TranSend \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/439/634/datas/gallery.jpg\"/>\n<p>\n<i>Nickname selection and home page</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p><a href=\"https://github.com/NJIT-SIG-WEBDEV/chat-translation\" rel=\"nofollow\">https://github.com/NJIT-SIG-WEBDEV/chat-translation</a></p>\n<h2>Inspiration</h2>\n<p>Communicating with others who speak other languages and learning other languages from people.</p>\n<h2>What it does</h2>\n<p>It allows other people to message each other in real-time while translating other languages to English.</p>\n<h2>How we built it</h2>\n<p>We used a node.js based web app with Google Translate api served on Amazon's afs server. Logo artwork was done with GIMP.</p>\n<h2>Challenges we ran into</h2>\n<p>Problems with Alexa, problems with hosting the app on the server, learning AFS and Git command line, managing merge requests and pulling on Github, time management</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Finishing a project for once and having something that's usable, learning aspects of new languages, managing projects, cooperation, setting a realistic scope, adaptability towards unexpected problems, completing within the 25-hour timeframe, lack of judgement amongst teammates, working together with various levels of experience and skills</p>\n<h2>What we learned</h2>\n<p>Git command line, AFS, Javascript, Socket.io, collaborating with code on the web, Alexa</p>\n<h2>What's next for TranSend</h2>\n<p>Supporting more languages, reversing to original text, feedback from bilingual users, additional graphics/improved presentation, mobile, login system/expanded security, integration with Wolfram Alpha for automatic currency and measurement conversions</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/git\">git</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/github\">github</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-alexa\">amazon-alexa</a></span></li><li><span class=\"cp-tag\">echo</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/gimp\">gimp</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/socket-io\">socket.io</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://52.87.176.113:3000/\" rel=\"nofollow\" target=\"_blank\" title=\"http://52.87.176.113:3000/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>52.87.176.113</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the graphics, mainly the logo. I also spent some time learning how to use Git command line, Github, Socket.io and Javascript!", "I wrote code enabling communication between the client and server so that users' nicknames could be displayed.", "I coded a bit of the front end and spent time getting acquainted with git and node.js. I came up with the project and its name as well as certain features.", "Served as Lead. Distributed workload, reviewed and monitored the repository, and integrated the translate APIs into the application. "]], ["HateIsHate", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"HateIsHate \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/439/362/datas/gallery.jpg\"/>\n<p>\n<i>Matt's Logo</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>To reduce the amount of hate/harassment on the internet</p>\n<h2>What it does</h2>\n<p>It changes tweets that it is mentioned in that consist of some type of hate to resemble a different type of hate</p>\n<h2>How we built it</h2>\n<p>We used AWS in order to host the server and demo webpage, and from that we have the twitter api automatically call the code and run the automatic response</p>\n<h2>Challenges we ran into</h2>\n<p>Jake - Reading and editing the tweets from the Twitter API (not natively supported by python, used tweepy for wrapper)\nCJ - Setting up the AWS to run with the website along with the python script in the background\nMatt - Creating the hate dictionary was difficult\nAaron - Series of bugs in the flavourize function in flaourize.py that consisted of indexing errors and othe small logical errors that required breaks during coding </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Fully functional twitter bot, with a fairly large and very growable dictionary</p>\n<h2>What we learned</h2>\n<p>We learned more about indexing in arrays and arrays of arrays, we learned about twitter integration, and more about the AWS service by Amazon</p>\n<h2>What's next for HateIsHate</h2>\n<p>We will be continuing development and making it more responsive to more such as retweets and a higher more precise word dictionary</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">tweepy</span></li></ul>\n</div>\n</div>", ["I wrote a Python module that converted between different flavours of hate.", "I contributed terms and catagories python dictionary. I also created the logo for the HateisHate Twitter Bot account.", "", ""]], ["NJIT ACM Chapterino", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>People coming into the office and not knowing where to go or who to ask for help</p>\n<h2>What it does</h2>\n<p>Provides basic information about the services ACM offers to NJIT students</p>\n<h2>How we built it</h2>\n<p>Love, Ravioli, android studio and a lot of internet searches</p>\n<h2>Challenges we ran into</h2>\n<p>Android fragments suck</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>The UI looks pretty good.</p>\n<h2>What we learned</h2>\n<p>Android develpment is harsh for beginners.</p>\n<h2>What's next for NJIT ACM Chapterino</h2>\n<p>SQL intergration, adding more functionality and a tutor rating system.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/RedSkyHarbor/ACMtutoring\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/RedSkyHarbor/ACMtutoring\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Flux Light", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Our body\u2019s natural rhythm is tuned to the rise and fall of the sun.\nHowever, spending time indoors with the lights on messes up this rhythm.\nExisting software exists to emulate this cycle with a computer monitor, but the monitor is not our primary source of light.</p>\n<h2>What it does</h2>\n<p>FluxLight controls a WiFi enabled light bulb to emulate this natural cycle</p>\n<h2>How we built it</h2>\n<p>We utilized lambda on Amazon web services to have Alexa send commands to our python HTTP server which controls a LIFX light bulb over Wi-Fi.</p>\n<h2>Challenges we ran into</h2>\n<p>MySQL refused to work. Sending requests from lambda to a local server was a challenge also. We solved this by continuously polling commands from NJIT AFS. AWS lambda sent requests by Alexa to AFS.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Getting it to work.</p>\n<h2>What we learned</h2>\n<p>How to use AWS lambda, Alexa by Amazon, to control Wi-Fi light through Python, and to run an HTTP server through python.</p>\n<h2>What's next for Flux Light</h2>\n<p>More commands and integration with other services.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-alexa\">amazon-alexa</a></span></li><li><span class=\"cp-tag\">aws-lambda</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag\">lifx</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag\">http</span></li></ul>\n</div>\n</div>", ["Worked on Python backend to control LIFX bulb. Implemented a couple of the commands for Alexa to control the light, through the Python backend. Wrote an Android app to control the light as well.", ""]], ["Rx?", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>This app is designed to help those without an understanding of the English language and those that find it hard to research the use of a specific drug. We came up with this app as a way to help foreigners and the elderly research the use of their medications with less hassle.</p>\n<h2>What it does</h2>\n<p>\"Rx?\" takes a picture of a prescription bottle, and returns the use of the pictured drug and the proper dosage, in the user's selected language. The user can also choose to set a reminder to use the drug, compliant to the bottle's dosage. </p>\n<h2>How we built it</h2>\n<p>The \"Rx?\" Android app sends an image through byte stream to the python flask backend. The backend then converts the image to text (OCR), natural language processing is then used to extract the name and dosage, and send that to the openFDA API, which then finds the drug bank ID in the DrugBankPlus database. This drug bank ID is then used to return a description of the drug. Following this, the description and dosage are translated, if needed, and then are sent to the Android app. Now the Android app takes that information, displays the captured image, drug description, dosage, sets a daily reminder for the given dosage, and reads the drug description out loud.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/socket-io\">socket.io</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag\">microsoft-cognitive-services</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag\">drugbankplus</span></li><li><span class=\"cp-tag\">openfda</span></li><li></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/natural-language-processing\">natural-language-processing</a></span></li><li><span class=\"cp-tag\">computer-vision</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/mdnahian/RxWhat\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/mdnahian/RxWhat\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Worked on using the openFDA and DrugBankPlus APIs using python and helped with the python flask backend.", "Worked on python flask backend with socketIO and image to text (OCR), NLP,  and text to speech.", "Worked on Android Development client side"]], ["3DSMail", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"3DSMail \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/439/612/datas/gallery.jpg\"/>\n<p>\n<i>Splash Screen</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"3DSMail \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/439/613/datas/gallery.jpg\"/>\n<p>\n<i>Receive emails</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"3DSMail \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/439/614/datas/gallery.jpg\"/>\n<p>\n<i>Send email</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>NDSMail by Bronto and my previous application, forecast3ds</p>\n<h2>What it does</h2>\n<p>Send emails over SMTP, receive emails over IMAP, and a nice GUI</p>\n<h2>How I built it</h2>\n<p>Using Lua Player Plus for the 3DS and implementing the mail protocols using sockets</p>\n<h2>Challenges I ran into</h2>\n<p>Buffering issues caused the application to freeze (might be a bug in LPP), implementing a mail protocol and using limited hardware, the keyboard didn't have an @ symbol, it's a lot of work</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Was able to successfully send an email using SMTP on the 3DS. Able to get parts of a homebrew app working, able to send/receive mail using telnet/openssl.</p>\n<h2>What I learned</h2>\n<p>How the mail protocols worked</p>\n<h2>What's next for 3DSMail</h2>\n<p>Maybe a rewrite once I'm comfortable with C++. A finished application that works.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/lua\">lua</a></span></li><li><span class=\"cp-tag\">lua-player-plus</span></li></ul>\n</div>\n</div>", [""]], ["How Was Your Day", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We wanted our first Hackathon project to be a web application in which we used some api learn a develop our skills and this idea was born from that motivation.</p>\n<h2>What it does</h2>\n<p>Basically this web app uses IBM Bluemix's emotional textual analysis api to record the sentiment of an entire text document which the user will place in. Based on the information from the API and keywords which we have chosen, we will give back a correct response.</p>\n<h2>How we built it</h2>\n<p>We used flask, server side, python to migrate api and main information while using HTML and CSS for a nice ui.</p>\n<h2>Challenges we ran into</h2>\n<p>Understanding python and HTML integration.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We finished</p>\n<h2>What we learned</h2>\n<p>Python, CSS, HTML, FLASK, IBM Watson Bluemix api</p>\n<h2>What's next for How Was Your Day</h2>\n<p>Maybe updating the keywords so that it can understand more than just the specific ones we have given it.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ibm-watson\">ibm-watson</a></span></li><li><span class=\"cp-tag\">ntlk</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Azoam/How-was-your-day-\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Azoam/How-was-your-day-\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Worked on backend and frontend. I helped design the webpage and also helped work on using the API's properly.", "I laid out the whole HTML format and contributed some ideas for words for analysis in the input. I also recommended some colors and format for the CSS display. ", ""]], ["Smart tabs", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration:</h2>\n<p>Felt the need for better tab management</p>\n<h2>What it does:</h2>\n<p>Learns user activity and manages tabs. </p>\n<h2>How we built it:</h2>\n<p>Built a chrome extension using js, jquery and angular.js. Collaborated using bitbucket via source tree. </p>\n<h2>Challenges we ran into:</h2>\n<p>Taking care of variable names when implementing machine learning algorithms on an unstructured language such as Javascript. </p>\n<h2>Accomplishments that we're proud of:</h2>\n<p>Staying awake and doing machine learning with tabs in chrome. </p>\n<h2>What we learned</h2>\n<p>Working with chrome and implementing some special events in angular (such as drag and drop)</p>\n<h2>What's next for Smart tabs</h2>\n<ul>\n<li>Organize tabs inside the windows</li>\n<li>predict how many tabs the user may want open in one window</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/chrome\">chrome</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/angular-js\">angular.js</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://bitbucket.org/njit_hack/js_plugin.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://bitbucket.org/njit_hack/js_plugin.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>bitbucket.org</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["OSIRIS", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We were inspired to build something that could help people whose interests are not being represented by the engineering community. According to a recent study, more than 1% of American people suffer from some form of paralysis, more than 50,000 of whom have a condition known as Locked-in Syndrome. These people are awake, able to think and observe everything around them, and yet they can do nothing to interact with their environment beyond slight movements of the eyes. They need a voice, and we felt obligated to give them one.</p>\n<h2>What it does</h2>\n<p>OSIRIS is an accessibility interface designed to allow people with minimal control over their bodies to be able to navigate and use computers. By utilizing computer vision technologies, OSIRIS tracks the user's eyes allowing them to control the mouse position on their computer and allowing them to click and execute different mouse functions by executing blink-based commands.</p>\n<h2>How we built it</h2>\n<p>We built OSIRIS using Python and OpenCV. The application is designed for macOS, but could be easily transferred to Windows and Linux, potentially even mobile.</p>\n<h2>Challenges we ran into</h2>\n<p>Some of the biggest challenges that we ran into were with utilizing the OpenCV libraries with C++ (Which was the language OSIRIS was intended to be built with). As result of these difficulties, we migrated OSIRIS to Python. Another issue that we came across was working to make the necessary calculations to accurately track the user's eyes in dynamic conditions, as well as translating those movements into mouse behaviors.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are extremely proud of how effective the system is given the time we had to build it, and some of the unavoidable circumstances that brought on challenges to our efforts.</p>\n<h2>What we learned</h2>\n<p>We learned a lot about several extremely intriguing concepts behind Computer Vision technology that allow for the mathematical analysis of 2-Dimensional image data and being able to then extrapolate incredulous amounts of useful information from it.</p>\n<h2>What's next for OSIRIS</h2>\n<p>We plan to work to make OSIRIS more effective in varying light conditions and variables that reduce with it's effectivity. We want to make this system accessible to anyone who may need it, with nothing more than access to a computer and a webcam.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/opencv\">opencv</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/kunalpatel446/HackNJIT2016/\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/kunalpatel446/HackNJIT2016/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the face detection and eye tracking vision software", "", ""]], ["SpeechReddit", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>We wanted to make it so that users could easily find their favorite things in their subreddits through easy means of speech.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-alexa\">amazon-alexa</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/reddit\">reddit</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/JustInTimeHero/NJITHackathon2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/JustInTimeHero/NJITHackathon2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Baymax 2.0 ", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Baymax 2.0  \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/439/366/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Our hope is reducing the expenditures of health care providers and providing health care services right in your own home. The two key elements that our team focused on is \"home\" and \"care\".</p>\n<h2>What it does</h2>\n<p>Using Alexa, this will provide a simple and user friendly A.I. for all types of medical question and providing lightning fast response on symptoms, locations on the body, alternative prices for medication, and locations of pharmacies and clinics for you usage.</p>\n<h2>How we built it</h2>\n<p>Peanut Butter and Jelly.</p>\n<h2>Challenges we ran into</h2>\n<p>Trying to get all of the animations to go in smoothly without any lag</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Providing a home healthcare A.I.</p>\n<h2>What we learned</h2>\n<p>How to build a functional AI</p>\n<h2>What's next for Baymax 2.0</h2>\n<p>World Domination</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">angular2</span></li><li><span class=\"cp-tag\">ionic2</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/typescript\">typescript</a></span></li><li><span class=\"cp-tag\">es6</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-alexa\">amazon-alexa</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li></ul>\n</div>\n</div>", ["", "", ""]], ["Carbon Dating: Nikola Tesla Route", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Carbon Dating: Nikola Tesla Route \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/439/533/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Carbon Dating: Nikola Tesla Route \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/439/534/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Carbon Dating: Nikola Tesla Route \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/439/535/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Carbon Dating: Nikola Tesla Route \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/439/536/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Back in Sophomore year, Michelle and Karina began thinking about the idea of silly scientists when making a Disney parody for their AP Calculus class -- which featured Newton and Leibniz sharing their love for Calculus and turning on each other after beginning to think that they were stealing their work and credit. The two began talking to Amar about all the silly stories they learned about scientists while researching to make this video. With more discussion, googling, and laughter, the idea for Carbon Dating was born.</p>\n<h2>What it does</h2>\n<p>Carbon Dating makes science fun! It shows the hilarious sides of scientists as well as what more serious personality traits encouraged them to pursue the things they excelled at.</p>\n<h2>How we built it</h2>\n<p>Carbon Dating was building using Ren'Py -- a visual novel game engine that requires use of Python coding. Karina was responsible for writing the codes. Michelle was responsible for writing the story. Amar was responsible for doing the art.</p>\n<h2>Challenges we ran into</h2>\n<p>We feel that we bit off more than we could chew with this project. Walking into the hackathon, we believed that we'd finish the whole Nikola Tesla story, but instead could only finish up to the winter break portion. This is barely half of the what we planned on finishing. Furthermore, because we were so determined on finishing a lot more, we weren't able to polish up what we did finish.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We're excited that we actually finished a good portion of the game, first off.. It took a lot of hard work, frustration, and resolve, but we did it. We also learned a lot about the game developing process and know how to better approach similar projects in the future.</p>\n<h2>What we learned</h2>\n<p>We learned that we should definitely expand our group. One person working on each critical aspect of a game is extremely stressful and limiting because different people are able to offer different insights. However, if only one person specializes in each area, there's not a lot of free interaction to improve these areas.</p>\n<h2>What's next for Carbon Dating: Nikola Tesla Route</h2>\n<p>We plan to begin working on Carbon Dating: Albert Einstein Route at HackPrinceton next weekend, but will definitely continue Nikola Tesla's route at a later time. We will also add Sigmund Freud, Issac Newton and other scientists at later dates.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">ren'py</span></li></ul>\n</div>\n</div>", ["All art and visuals", "", ""]], ["Landscape Generator", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Landscape Generator \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/439/506/datas/gallery.jpg\"/>\n<p>\n<i>small</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Landscape Generator \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/439/507/datas/gallery.jpg\"/>\n<p>\n<i>medium</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Landscape Generator \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/439/512/datas/gallery.jpg\"/>\n<p>\n<i>large</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Seeing various awesome creations in places like the online roleplaying community and /r/worldbuilding, we were inspired to make a program that does procedural generation of a landscape that you could gain ideas from. </p>\n<h2>What it does</h2>\n<p>The program uses a seed to create a random landscape with several hex-based biomes and more variants to the biomes. It dynamically fills the world with these biomes and draws in the terrain. It also gives the world a cute little name.  </p>\n<h2>How we built it</h2>\n<p>We used Pillow, a python module geared towards photo editing, to create the actual image. The data structure itself was designed by us and geared towards working in a hex based system. We also designed the way that our data structure is filled. We used adjacency to expand the biomes from multiple spawn points to fill up the world.  The entire system uses procedural generation and thus there are many worlds that can come out of our program.</p>\n<h2>Challenges we ran into</h2>\n<p>We had struggles with learning the Pillow API, but mostly we struggled with entropy and creating the rough algorithm to generate our worlds. We also had to create our own assets, basing them off of public domain assets. Another struggle we initially had was thinking of an appropriate data structure for our program. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are very proud of the programs appearance and final result. We are very happy that we managed to most issues that we came across mentioned in the challenges, powering through even when it seemed as if we had to give up. </p>\n<h2>What we learned</h2>\n<p>We learned a lot about the Pillow API, photo editing, as well as setting up data structures and creating algorithms. </p>\n<h2>What's next for Landscape Generator</h2>\n<p>We need to overhaul the data structure system, our 2D List system was horribly inappropriate for storing a grid of hexes, due to bound errors. We also would like to have much better assets and art, since the art we currently have was more put together than craftily made. We need to overhaul our algorithm because the current system really only works as it is because we lucked out, and it sometimes doesn't work as intended. We need to fix our image creation to be totally scalable, as that would allow much more freedom for the user. We also should get rid of some of the hard-coding we had to do to get the system running. We also need to boost the efficiency of the program, since, especially with the large maps, the program takes too long to run. A better UI would also be very beneficial to the user. Overall, given our time frame, we are very satisfied with our results, but the reality is, if we were to continue this project, we would need to do some serious renovation.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">pillow</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://drive.google.com/drive/folders/0B4dBLmfRlQHIeGtTc04takVXNUE?usp=sharing\" rel=\"nofollow\" target=\"_blank\" title=\"https://drive.google.com/drive/folders/0B4dBLmfRlQHIeGtTc04takVXNUE?usp=sharing\">\n<i class=\"ss-icon ss-link\"></i>\n<span>drive.google.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I managed the graphics, image creation, and image saving. I also helped with the generation algorithm.", "I worked on the project's core. I helped figure out data structures, methods of generation, and other essential coding and theory."]], ["Amazon Echo Guessing Game", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>Wanted to development something simple on Amazon Echo</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/xMattsterx/HackNJIT-Fall-2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/xMattsterx/HackNJIT-Fall-2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Worked with Amazon Lambda and developed the Skill", "Helping out with errors and coming up with base ideas. "]], ["Super Shopper", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>The other day in class we discussed that grocery bills are often the largest expense of those living in poverty. Super Shopper connects users with the best prices from physical and virtual markets.</p>\n<h2>What it does</h2>\n<p>Queries physical and virtual markets for the cheapest price for each item on the shopping list. The list is cloud based and accessible via user accounts. Because of this, multiple people (family members, for example) can contribute to the shopping list</p>\n<h2>How I built it</h2>\n<p>First I wrote the php scripts to retrieve and store API data and user information, then I designed the UI</p>\n<h2>Challenges I ran into</h2>\n<p>How to check the prices of one product on multiple APIs</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>That I finished the app despite working alone. Also the 'GoShopping' page that outputs the price data for each item.</p>\n<h2>What I learned</h2>\n<p>How to most efficiently interact with APIs</p>\n<h2>What's next for Super Shopper</h2>\n<p>iOS app store and an Android app</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/walmart-open\">walmart-open</a></span></li><li><span class=\"cp-tag\">supermarket-api</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-product-advertising\">amazon-product-advertising</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xcode\">xcode</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mysql\">mysql</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/nickpitoniak/SuperShopper\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/nickpitoniak/SuperShopper\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Hourglass", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Manage your free time better</p>\n<h2>What it does</h2>\n<h2>How we built it</h2>\n<h2>Challenges we ran into</h2>\n<h2>Accomplishments that we're proud of</h2>\n<h2>What we learned</h2>\n<h2>What's next for Hourglass</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/mVaks/Hourglass\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/mVaks/Hourglass\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["HackOrg", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>After seeing the hard work that goes into running a Hackthon, our team was inspired to give back to the hacker community by creating a fullstack webapp that makes running a Hackthon event a little easier.</p>\n<h2>What it does</h2>\n<p>Our app, HackOrg, allows students to create a password and sign up for an event with their email address. Upon registration, the students complete a submission form that collects key information like their name, photo, college, github link, and resume link. Upon arriving to the event, the student signs in to the app which pulls up their name, profile picture, and an entry QR code. This is then checked by event administrators to confirm their check in. Throughout the event, the students use their QR codes to get meals and (in future editions) rent out hardware.</p>\n<h2>How we built it</h2>\n<p>The app's front-end is built with Bootstrap and Handlebars.js, and the back-end uses node.js. The server-side node packages include express.js, passport.js, and mongoose.js. All data is stored in a MongoDB database, and the QR is made with a simple API found at <a href=\"http://goqr.me/api/doc/create-qr-code/\" rel=\"nofollow\">http://goqr.me/api/doc/create-qr-code/</a>.</p>\n<h2>Challenges we ran into</h2>\n<p>The biggest challenge of the project was tackling the user sign-in feature in passort.js. Our team has not yet covered user authentication in our bootcamp, so we needed to teach it to ourselves throughout the night.</p>\n<h2>Accomplishments that we are proud of</h2>\n<p>For both members of our team, Steve and Tom, this was our first Hackathon were we stayed up through submission. We are proud to have a working project which uses a technology (passport.js) that we taught ourselves.</p>\n<h2>What we learned</h2>\n<p>User authentication is a critical component in cyber security, and our team is proud to have been able to learn how to apply it to our app at this event.</p>\n<h2>What's next for HackOrg</h2>\n<p>The next steps for HackOrg are a more refined administrator sign up process and an option to track hardware rentals at the Hackathon. We believe that a refined hardware rental process can improve student experience. Our plan is to have a timed session, where users will receive a text when it is time to bring back their device to the admins so that another team can rent it. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/handlebars-js\">handlebars.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/passport\">passport</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/sfreeman422/HackathonQR\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/sfreeman422/HackathonQR\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Worked on the backend and passport related features. ", "Worked on front-end and handlebars.js."]], ["LLSIF Meme Generator", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"LLSIF Meme Generator \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/439/946/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>My inspiration was that I liked both anime and memes.</p>\n<p>Enough said.</p>\n</div>\n</div>", [""]], ["my-cv-site", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>A friend was planning on wasting the hackathon building his site.</p>\n<h2>What it does</h2>\n<p>Reads your resume (pdf) and makes a basic bootstrap site.</p>\n<h2>How I built it</h2>\n<p>Lots of reading...</p>\n<h2>Challenges I ran into</h2>\n<p>PDF sucks. Documentation sucks even more. And lists of lists becoming HTML aren't fun at 3 am.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>The pdf is read correctly and sections are determined rather accurately. Works for 5 people's resumes (as much as it can).</p>\n<h2>What I learned</h2>\n<p>PDFs sucks, but bootstrap is clutch.</p>\n<h2>What's next for my-cv-site</h2>\n<p>Configurable templates for the site. Custom CSS integration. Make it downloadable and standalone. Coordinate with GitHub to auto-generate a gh-pages site.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clojure\">clojure</a></span></li><li><span class=\"cp-tag\">hiccup</span></li><li><span class=\"cp-tag\">pdfbox</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/hemangandhi/my-cv-site\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/hemangandhi/my-cv-site\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Spellslinger", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Who doesn't want to be like Doctor Strange?</p>\n<h2>What it does</h2>\n<p>An early sorcery simulator that will allow you to be like Strange.  </p>\n<h2>How we built it</h2>\n<p>We used Leap Motion, Unity Engine, and C#.</p>\n<h2>Challenges we ran into</h2>\n<p>Neither of was was familiar with Unity, Leap Motion, Blender, or C#. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>To be able to complete this simulation, because we were a two man team, and pretty new to hacking.</p>\n<h2>What we learned</h2>\n<p>Critical thinking, self initiative research. Furthering our knowledge for all of the programs and languages we used.</p>\n<h2>What's next for Spellslinger</h2>\n<p>Additional spells and maybe even into a pvp game.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/leap-motion\">leap-motion</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/orion\">orion</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/blender\">blender</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/chiayi/hackNJITfall\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/chiayi/hackNJITfall\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["alexa-chef", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2><strong>Personal Chef Assistance Based on Alexa</strong></h2>\n<hr/>\n<h2><strong>Overview</strong></h2>\n<p>This is a simple example of an Alexa app to use with Amazon Echo, to give you access to reciepies across the world.</p>\n<ul>\n<li><strong>MessageProvider.js</strong> - A service that serves prompt message, reprompt and error messages. The messages are stored in <code>messages.json</code> to be make it easy to configure.</li>\n<li><strong>RecipeService.js</strong> - A service that parses JSON data and data manipulation.<br/></li>\n<li><strong>index.js</strong> contains the interface Amazon Alexa.</li>\n<li><strong>Messages.json and recipe.json</strong> - stores the general messages that can be configured by developer.</li>\n</ul>\n<h2><strong>Requirements</strong></h2>\n<hr/>\n<p>Install NodeJS LTS (preferably v4.3.0, so it matches AWS Lambda).</p>\n<pre class=\"language-nolang\"><code>https://nodejs.org/en/download/\n</code></pre>\n<p>Then, install the Node dependencies using this command:\n    ***\n    npm install\n    ***\nAdditionally, to test this app locally without using Amazon Echo / Alexa yet, do the following:</p>\n<ul>\n<li>Clone the project <strong>alexa-app-server</strong> from this Github repository: <a href=\"https://github.com/matt-kruse/alexa-app-server\" rel=\"nofollow\">https://github.com/matt-kruse/alexa-app-server</a>.</li>\n<li>From the project's root directory, install its dependencies:\n~~~\nnpm install\n~~~</li>\n<li>Locate the folder <strong>examples/apps</strong> and copy the Chef project folder in it. You directory path should be **alexa-app-server/examples/apps/chef</li>\n<li>Go to the <strong>alexa-app-server/examples</strong> folder, and run this command to start the test server:\n~~~\nnode server\n~~~</li>\n<li>With the server running, we can use it to test our Alexa app launch and intents. Go to this URL and play with it: <strong><a href=\"http://localhost:8080/alexa/chef\" rel=\"nofollow\">http://localhost:8080/alexa/chef</a></strong></li>\n</ul>\n<h2><strong>Using with Amazon Echo / Alexa</strong></h2>\n<hr/>\n<p>To use this app with an Alexa device, we need to do 2 things: Upload the app code to AWS Lambda, and create a new Alexa Skill in Amazon Alexa Service.</p>\n<h3>Uploading to AWS Lambda</h3>\n<p>Create an AWS account in <a href=\"https://aws.amazon.com/\" rel=\"nofollow\">https://aws.amazon.com/</a>. The Free Tier/Plan is good enough for this.</p>\n<p>Create a new zip of the files that contain the code used by the app. This includes the <strong>node_modules/</strong> directory, since these are the packages that the app depends on. Files/Folders you need to package are:</p>\n<ul>\n<li>index.js</li>\n<li>datastore/</li>\n<li>services/</li>\n<li>node_modules/</li>\n</ul>\n<p>First, we'll create an AWS role to run our Lambda function:</p>\n<ol>\n<li>In AWS, go to the IAM console</li>\n<li>Select \"Roles\" in the left menu</li>\n<li>Click in \"Create New Role\"</li>\n<li>Name your role as <strong>lambda_basic_execution</strong></li>\n<li>In Role Type screen, select \"AWS Lambda\"</li>\n<li>In Attach Policy screen, use the filter textbox to find the role \"AWSLambdaFullAccess\" and select it</li>\n<li>Complete the role creation.</li>\n</ol>\n<p>Now, go to AWS Lambda console and do the following:</p>\n<ol>\n<li>Click on <strong>Create a Lambda Function</strong></li>\n<li>Select the template <strong>Blank Function</strong> and click Next</li>\n<li>In the trigger screen, click in the empty dotted space, and select <strong>Alexa Skills Kit</strong>. This will allow the Alexa Service to run the app in Lambda. Then next</li>\n<li>Provide a name to the function, and set the field \"Existing Role\" to <strong>lambda_basic_execution</strong></li>\n<li>In the field \"Code Entry Type\", select option <strong>Upload ZIP file</strong> and upload the zip file we created before. Click next.</li>\n<li>After the function has been created, look in the top-right of the screen for the <strong>ARN</strong> string. Copy this string.</li>\n</ol>\n<h3>Creating a new Alexa Skill</h3>\n<ol>\n<li>Go to the page <a href=\"https://developer.amazon.com/\" rel=\"nofollow\">https://developer.amazon.com/</a>, sign in with your Amazon account and click in <strong>ALEXA</strong> tab</li>\n<li>Click in the option <strong>Alexa Skills Kit -&gt; Get started</strong></li>\n<li>Click in <strong>Add a new skill</strong></li>\n<li>In the \"Skill information\" screen, provide a name and an invocation name. The invocation name is what the user will use to launch your Alexa app from the device.</li>\n<li>In the \"Interaction Model\" screen, paste the <strong>Intent Schema</strong> and <strong>Sample Utterances</strong> that your Alexa skill will receive. You can obtain these from the <strong>alexa-app-server</strong> used during testing (check the \"Requirements\" section above about this).</li>\n<li>In the \"Configuration\" screen, select the Endpoint type <strong>AWS Lambda ARN</strong>, with region \"North America\", and provide the ARN string copied from the Lambda console.</li>\n</ol>\n<p>After this, your Alexa skill will be ready for testing. There is no need to continue with the Publishing setup, because now your registered Amazon Echo devices are able to connect to your Alexa skill.</p>\n<p>The screen \"Testing\" in Alexa Skill Kit has an Alexa Simulator that helps testing your app without using an Echo device.\nYou can use it to listen how Alexa would say a response. Or enter an utterance defined in your Alexa skill to check that your Lambda function will run correctly when contacted by an Amazon Echo.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-alexa\">amazon-alexa</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag\">lambda</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-dynamodb\">amazon-dynamodb</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/jjpatel361/alexa-chef\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/jjpatel361/alexa-chef\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the node.js and setting up the AWS Lambda and Dynamo DB. Majorly worked on writing the implementation in JS", "I majorly worked on Amazon's Alexa Skill Kit, also helped in setting up the AWS Lambda, Dynamo DB."]], ["Annie", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>In the growing world of technology, people are working longer hours and weirder hours. However, these same people still wish to have the fulfilling life of a parent. So they have kids but then have to put them in daycare all day. Not everyone can afford this daycare and sometimes the child is just left at home alone. These kids are often left without any human interaction and essentially raised by the television shows they watch or games they play. These kids then don't develop the proper social skills and have problems not just communicating, but fitting in to social situations.</p>\n<h2>What it does</h2>\n<p>Annie aims to help alleviate this problem by starting kids at a young age with her. She speaks with the kids and asks them about their day. She always is a source of positive reinforcement, making the children feel as if there is someone they can always talk to. She will also play games with the child allowing them to win at a higher level, but lose when they aren't trying to win. She then sends off a log file to their parent or guardian to let them know how their kids are doing and what is new with them. This helps the parents stay connected to their child as they can talk about Annie as well, knowing their conversations. It's almost like having an imaginary friend for them to talk with, but that imaginary friend actually talks back and will tell the parent the conversations they have.</p>\n<h2>How I built it</h2>\n<p>I implemented some very simple ends of Natural Language Processing to help Annie figure out what the child is saying. I then had some pre-written responses for her to determine which to use and then use based on the situation and the context of the conversation. Everything about Annie is making sure to say the right thing in the right context.</p>\n<h2>Challenges I ran into</h2>\n<p>Keeping the child engaged and keeping Annie understanding the conversation. Natural Language Processing is far too vast a field for me to implement in a day, so I had to simplify certain concepts, while also restricting the strength of others. Furthermore, I had to teach Annie how to win at a game only at sometimes. At first she was perfect and would win every time, something that wouldn't be fun for a child. At the same time, she had to play somewhat intelligently otherwise the child would also become disinterested. </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Getting Annie to speak as well and fluently as she does. I myself can't find ways out of her conversational loops.</p>\n<h2>What I learned</h2>\n<p>At all times, you must be aware of your time constraints. Sometimes features you want to implement, you won't have time to implement right away, so you have to sacrifice the things that might look nice, in exchange for making sure everything works securely.</p>\n<h2>What's next for Annie</h2>\n<p>Implementing more natural language processing as well as teaching her more games. The more games she knows, the higher likelihood the child will play with her. The more the child plays with her, the more they will talk to her. The more they talk to her, the more their social skills develop.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag\">servlet</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/natural-language-processing\">natural-language-processing</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/SpudManTwo/Annie\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/SpudManTwo/Annie\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/SpudManTwo/Annie\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/SpudManTwo/Annie\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Cyber-dome", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Having previously worked on educational video games for a high school organization, TSA (Technology Student Association), and even placing first nationally, our team has had a lot of experience working with Unity. VR has been something that we have all wanted to develop for, and being that MLH has Rift headsets, we thought this would be the perfect opportunity to try it out. </p>\n<h2>What it does</h2>\n<p>Cyber-dome is a virtual reality experience that combines the benefits of the Rift with the near perfect motion tracking capabilities of Leap Motion. By coupling the two, the user is immersed in a new world where they are able to attack and defend against \"hacker\" bots. Cyber-dome demonstrates the seemingly limitless possibilities of both the Rift and Leap Motion as well as the great functionality between the two devices. </p>\n<h2>How we built it</h2>\n<p>In order to create the world that Cyber-dome takes place in, one of our team members created a desert region in Blender. After implementing the basic scenery, he went to work creating various models of enemies for the user to fight against while some others started working on how to use Leap Motion to cast attacks from the left and right hands. Everything was compiled in Unity as it has the best compatibility given our time frame, and once the project was finished we pushed it onto GitHub.</p>\n<h2>Challenges we ran into</h2>\n<p>Over the course of development, there were several programming and hardware issues that we encountered that hindered our progress, and in some cases led to gameplay alterations. While the Leap Motion is great at tracking hand movements, it did not function properly when we tried to create sword-fighting mechanics. The tracker could not process that one hand was trying to make a jabbing motion, or even grip the sword for that matter. As a result, we had to change the game from sword-based combat to projectile-based combat. While programming the various to spawn in different waves upon completion of prior ones, there was an issue where some bots were spawning in with a different rotation than they were supposed to have, or in some cases, could not even move and proceeded to float off the ground. Eventually this was corrected through changing the collider on the ground. Aside from these minor issues, the development process overall was relatively smooth.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>First and foremost, we are very proud that we were able to successfully craft a VR experience from scratch that works in conjunction with Leap Motion, and is fun to play. The amount of work that was put in by the team is nothing short of amazing, with our lead programmer and modeler truly showing their proficiency in their respective software. Our modeler is specifically proud of the final boss model that he created, but we cannot say anymore about it as it is a surprise for those that experience Cyber-dome. </p>\n<h2>What we learned</h2>\n<p>The most important thing we learned at this event is that while the development process for VR and motion controls is similar to that of a regular game, it is much more difficult to get everything to work the exact way that it is intended to be. The best example of this would be our aforementioned problem of having to switch from our intended sword-based combat to the projectile-based one in the final product. Had we used a controller instead of Leap Motion, it would have been simple to make a sword compatible, but because we were using Leap Motion, we had to overcome that hill by thinking about various solutions. The fast-paced problem solving strategies that we had to employ to efficiently find solutions is certainly a big takeaway for all of us. </p>\n<h2>What's next for Cyberdome</h2>\n<p>We would like to continue working towards our original goal, which would be a full, on-rails VR experience, complete with the sword-based combat we originally wanted, and possibly more enemies. What would be even more interesting would be to add support for multiplayer so that a group of people could take on hordes of hacker bots together, making for an even more complete experience. Another addition we could create is the inclusion of more areas to fight in, such as a grass plains area, or an arctic tundra. The limit for where Cyber-dome goes is on us, so hopefully we will be able to continue to develop it, and create the experience we want users to have.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/oculus\">oculus</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/leap-motion\">leap-motion</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/blender\">blender</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/photoshop\">photoshop</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/iphone-sdk\">iphone-sdk</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/MnMaxon/HackNJIT-Fall-2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/MnMaxon/HackNJIT-Fall-2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Assisted in the programming of various scripts for the project and tested the product throughout its stages of development. ", "Created all the 3D models, texturing, rigging and animation for the project.", "", ""]], ["Google Calendar Project Scheduler", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>I wanted something like this, so I decided to make it.</p>\n<h2>What it does</h2>\n<p>This app helps you find time to work on projects, assuming you use Google Calendar. It looks through your calendar and slots in new events based on a few input parameters.</p>\n<h2>How I built it</h2>\n<p>I used Android Studio.</p>\n<h2>Challenges I ran into</h2>\n<p>Google Calendar API is real funky.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I made it.</p>\n<h2>What I learned</h2>\n<p>A lot about using google API's and modern Android permission use.</p>\n<h2>What's next for Google Calendar Project Scheduler</h2>\n<p>A whole bunch of features, like sharing the events with collaborators, optimizations in finding time for you, ability to ignore weekends, and more!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-calendar\">google-calendar</a></span></li></ul>\n</div>\n</div>", ["I made it."]]]