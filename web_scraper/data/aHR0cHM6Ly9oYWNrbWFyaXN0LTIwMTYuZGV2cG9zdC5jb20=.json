[["MaristTwitterBot", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>MaristTwitterBot</h1>\n<p>A nifty twitter bot that tweets the entirety of the Marist College Student Handbook and Code of Conduct</p>\n<p>This bot was written in Python 3.5.2 for hackMarist 2016\nThe packages used to build this bot were as follows:\npip\nsetuptools\nurllib3\njson\nrequests\ntweepy\nDataManager\nand of course the twitter API</p>\n<p>This is one of my personal first projects in Python 3.5.2, I had previously worked scarcely with Python 2.7, however, this still proved to be a fun challenge and a nice way to hone my skills.</p>\n<p>This project is based off a number of bots including the one built for the LACUNY \"Build Your Own Twitter Bot Day\" project. A series of bots created for a raspberry Pi event in Austin TX, and scripts made by Faisal-K. I edited some key parts of the code from all of these projects, updated the urllib2 to the more recent urllib3, added additional libraries changed the text files used, the frequency of the processes. Furthermore I had to update the python language itself since these projects were from 2015. All in all this project was a fun beginner learning experience for me, and a nice way to start my Hackathon Career.</p>\n<p>You can find the CUNY committee that is responsible for the original project here (<a href=\"http://commons.gc.cuny.edu/groups/lacuny-emerging-technologies-committee/\" rel=\"nofollow\">http://commons.gc.cuny.edu/groups/lacuny-emerging-technologies-committee/</a>)</p>\n<p>You can find Faisal's homepage here:\n<a href=\"http://faisal-k.com/\" rel=\"nofollow\">http://faisal-k.com/</a></p>\n<p>Don't forget to follow the twitter associated with this bot\n  You can find that here: <a href=\"https://www.twitter.com/DidTheFoxesWin\" rel=\"nofollow\">https://www.twitter.com/DidTheFoxesWin</a>\n        Or @DidTheFoxesWin</p>\n<p>This bot evolved from being a bot which would tweet out whether or not the Marist Red Foxes sports teams won their games, to a bot to tweet out the entire student handbook, to a more simple bot that finds tweets associated with Marist College, follows the Tweeters, and adds them to a list so as to document who is talking about Marist College; hence the @name.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/JoeWeiner/MaristTwitterBot\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/JoeWeiner/MaristTwitterBot\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I did the project solo"]], ["TwitchPlaysNest", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"TwitchPlaysNest \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/433/946/datas/gallery.jpg\"/>\n<p>\n<i>how it looks from the computer running it</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>I was inspired by a few things:</p>\n<ol>\n<li>the semi-recent trend of \"twitch plays\" livestreams, where twitch chat is integrated with a computer running something (pokemon, installing linux)</li>\n<li>the ever-increasing popularity of IoT devices</li>\n<li>the insurmountable yet rising security challenges that the IoT Creates.</li>\n</ol>\n<h2>What it does</h2>\n<p>Parses twitch chat, and if somebody sends a command, fulfills it. ive also set up a website, twitchplaysnesthome.com, to use as a way to inform people about the dangers of IoT, specifically as it relates to security</p>\n<h2>How I built it</h2>\n<p>first things first, we need a way to take info from the twitch chat. twitch runs its chat services off of IRC. for that i used pircbot, a freely available java API for IRC bots. after setting things up there i needed to have it actually do something. using leapdroid, an android emulator, i was able to set up keyboard macros to execute commands. last but not least, i used nests' home simulator to build a virtual house for the internet to play with</p>\n<h2>Challenges I ran into</h2>\n<p>I managed to spend a while trying to set up a python solution for the IRC interperetation. turns out it was made for 32 bit systems. but thankfully there was old faithful java. another major hurdle was ensuring that the output would work correctly.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>a guy said it was \"stoopid\", so theres that. in all seriousness though i am proud that i was able to create something that could easily run for days on end uninterrupted. i also am proud about how i was able to constructively use what i view as a growing problem that, even with recent events such as the dyn DDOS attack, still isnt discussed as in depth as i would like it.</p>\n<h2>What I learned</h2>\n<p>i learned a few things:</p>\n<p>1.incorporating another library and making it work to my needs\n2.the weird, long process of getting a domain name\n3.the twitch community is odd</p>\n<ol>\n<li>what goes on in the backend of streaming services like twitch</li>\n</ol>\n<h2>What's next for TwitchPlaysNest</h2>\n<ol>\n<li>directly incorporate nest API for easier use, and more advanced commands (few in mind that didnt make the cut: set temp directly, not just by hitting up or down, turn on fire alarm remotely)</li>\n<li>support more of nests devices (smoke/carbon monoxide detector,security camera)</li>\n<li>gui that doesnt require access to twitch or nest for commands</li>\n<li>outlast Vine</li>\n</ol>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/nest\">nest</a></span></li><li><span class=\"cp-tag\">pircbot</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Chris-Holt/TwitchPlaysNest\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Chris-Holt/TwitchPlaysNest\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"http://twitchplaysnesthome.com\" rel=\"nofollow\" target=\"_blank\" title=\"http://twitchplaysnesthome.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>twitchplaysnesthome.com</span>\n</a></li>\n<li><a href=\"https://www.twitch.tv/twitchplaysnest\" rel=\"nofollow\" target=\"_blank\" title=\"https://www.twitch.tv/twitchplaysnest\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.twitch.tv</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["RoadJams", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"RoadJams \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/434/203/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"RoadJams \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/434/201/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>RoadJams</h1>\n<p>Create a playlist that matches the length of your road trip using your group's Spotify preferences.\n<a href=\"http://roadjams.herokuapp.com/\" rel=\"nofollow\">Try it out on Heroku!</a></p>\n<p>Scroll down and your music should be added to the playlist!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/socket-io\">socket.io</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/spotify\">spotify</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/kburk1997/RoadJams\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/kburk1997/RoadJams\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"http://roadjams.herokuapp.com/\" rel=\"nofollow\" target=\"_blank\" title=\"http://roadjams.herokuapp.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>roadjams.herokuapp.com</span>\n</a></li>\n<li><a href=\"http://roadjams.io\" rel=\"nofollow\" target=\"_blank\" title=\"http://roadjams.io\">\n<i class=\"ss-icon ss-link\"></i>\n<span>roadjams.io</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the frontend and integrating socket.io. It was my first time using node and socket, which had a fairly steep learning curve, but in the end we had a working project.", "I helped plan the database structure and some of the overall workings of the app; I also worked on integrating a Node wrapper package for the Spotify API, so that we weren't using hand-written HTTP requests. We ended up not using the database because of complications with integrating it with Node.js, but we still have a working proof-of-concept, and it was a good way to learn some Node!", "I worked on the server side and the client side. I helped implement Express.js routing, Socket.io async programming, and jQuery DOM manipulation. I also added database methods for future integration with Heroku PostgreSQL."]], ["SlackButton", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>SlackButton</h1>\n<p>Configure an amazon IoT button to send messages to a slack channel</p>\n<p>Uses AWS Lambda, API Gateway, and DynamoDB for data storage and communication with the button</p>\n<p>Allows for complete customization of all aspects of the message, including three unique messages depending on the type of button press (Single, Double, Long)</p>\n<h2>Collabarators</h2>\n<p>Dan Gorman, Barbara Stall</p>\n<h1>Setup and Configuration - Tutorial with pictures on <a href=\"https://github.com/dangothemango/SlackButton\" rel=\"nofollow\">Github</a></h1>\n<h2>AWS Configuration</h2>\n<h3>updateTable Function</h3>\n<ul>\n<li>Once in AWS select Lambda from the list of services</li>\n<li>Click 'Create Lambda Function'</li>\n<li>Select 'microservice-http-endpoint' from the list of templates</li>\n<li>Change Security to 'Open'</li>\n<li>Configure as shown, using the /updateTable/uploadThis.zip fill out your role name using something like \"SlackButton\" remember this for later</li>\n<li>Finish the setup until you see this screen</li>\n<li>Copy that URL you'll need it for later</li>\n</ul>\n<h3>DynamoDB Table</h3>\n<ul>\n<li>Once in AWS select DynamoDB from the list of services</li>\n<li>Click table</li>\n<li>Configure as shown</li>\n</ul>\n<h3>IOT Button and onPress Function</h3>\n<ul>\n<li>Once in AWS select Lambda from the list of services</li>\n<li>Click 'Create Lambda Function'</li>\n<li>Search for and select the IoT template</li>\n<li>Follow the prompts to setup the IoT button</li>\n<li>Configure the function as shown below</li>\n<li>The most important thing here is to make sure the role is the same role you made in the updateTable function</li>\n<li>Use /onPress/uploadThis.zip</li>\n<li>Once the code has been uploaded, you must change line 33 to the name of the button you will use, any character except spaces and 39 to your webhook url which we havent created</li>\n</ul>\n<h2>Slack Custom Integrations</h2>\n<h3>Incoming Webhook</h3>\n<ul>\n<li>go to https://.slack.com/apps/build</li>\n<li>select Make a Custom Integration</li>\n<li>Select 'Incoming Webhooks'</li>\n<li>Configure this any way yould like too and then copy the webhook URL into line 39 of your onButton Function</li>\n</ul>\n<h3>Slash Command</h3>\n<ul>\n<li>go to https://.slack.com/apps/build</li>\n<li>select Make a Custom Integration</li>\n<li>Select 'Slash Command'</li>\n<li>The only important configurations here are the URL box must be the API URL we saved from the updateTable function, and it must be a POST method</li>\n<li>For the purposes of the tutorial, we will assume the command chosen was /button</li>\n</ul>\n<h1>Usage</h1>\n<ul>\n<li>The only required argument is Button name, the rest are optional as follows</li>\n<li>-p: The message you want to display on a single press</li>\n<li>-d: The message you want to display on a double press</li>\n<li>-l: The message you want to display on a long press</li>\n<li>-e: The slack emoji you would like to display as the buttons photo</li>\n<li>-u: Alternately a url to the icon you would like to use as the photo</li>\n<li>-c: the default channel is the one active when the command is sent, use -c to overwrite</li>\n<li>Url responses and direction for AWS is handled automatically</li>\n<li>Note: -u, once set will override -e</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/dangothemango/SlackButton\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/dangothemango/SlackButton\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://hackthis.slack.com\" rel=\"nofollow\" target=\"_blank\" title=\"https://hackthis.slack.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>hackthis.slack.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["the shallots net", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Markov Chains</p>\n<h2>What it does</h2>\n<p>Scrapes new titles then makes it's own</p>\n<h2>How I built it</h2>\n<p>Javascript, html, php, json, python</p>\n<h2>Challenges I ran into</h2>\n<p>Parsing Javascript Object Notation with Javascript</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Figuring out how to get javascript to read a local text file.</p>\n<h2>What I learned</h2>\n<p>Javascript can't read text files easily.</p>\n<h2>What's next for the shallots net</h2>\n<p>Deep Learning Neural Networks and influencing the political atmosphere.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">javscript</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag\">markov-chains</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://theshallotsnet.domain.com/\" rel=\"nofollow\" target=\"_blank\" title=\"http://theshallotsnet.domain.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>theshallotsnet.domain.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I wrote the Markov Chain algorithm that turned an array of news titles into new titles based on word pair frequencies. ", "For this application, I wrote the function that scraped necessary information from the JSON file we stored our text in as well as an image API that generated related images to our articles. I also helped to spruce up the page with the css framework bootstrap.", ""]], ["Stop Boolean!", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We were inspired by the HackHarassment prompt. </p>\n<h2>What it does</h2>\n<p>We created a website based game that teaches children how to deal with and combat cyberbullying.</p>\n<h2>How we built it</h2>\n<p>We used html5, css, and gimp to create our site.</p>\n<h2>Challenges we ran into</h2>\n<p>Since our knowledge of programming is extremely limited and we are taking our first Introduction to Programming class this semester, we ran into various problems.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Since we are new to programming, we are proud that we were able to finish a project.</p>\n<h2>What we learned</h2>\n<p>We learned how to use github, how to create buttons, as well as many other commands.</p>\n<h2>What's next for Stop Boolean!</h2>\n<p>We hope to help kids learn more about online bullying.</p>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/michbart4/Hackathon2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/michbart4/Hackathon2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["conText", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>conText</h1>\n<p>Use English language modelling to detect when someone else is trying to send messages as you. If the neural network thinks the writing style isn't like you, it will report that.</p>\n<p>Python</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">tensorflow</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/exzackly/conText\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/exzackly/conText\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Email Keeper", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration: \"Her\" <a href=\"https://www.youtube.com/watch?v=aPZTjJAp_6g\" rel=\"nofollow\">https://www.youtube.com/watch?v=aPZTjJAp_6g</a></h2>\n<h2>What it does: It allows user to listen to emails, allows them to open the email, and gives them the option to delete email.</h2>\n<h2>How we built it: We used Google's Gmail API, the Web Speech API, JavaScript, HTML, and Python Server.</h2>\n<h2>Challenges we ran into: Getting Python Server to run, getting JavaScript functions to run in order, and learning how to implement the APIs (logic and syntax).</h2>\n<h2>Accomplishments that we're proud of: We created something with APIs, which we have never done before. It was cool to program something that would be useful in the real world.</h2>\n<h2>What we learned: We learned how to use the Gmail API, Web Speech API, and became more familiar with JavaScript.</h2>\n<h2>What's next for Email Keeper: Fixing the error where the Web Speech API is picking up its own voice. We also want it to be able to send reply emails. Also, we want to incorporate IBM Watson API to understand user input intuitively. In the future, this could be developed into an app (which was what we at first had in mind), and could be extended to other services in order to enhance productivity and bring a hands-free experience to the user. This would ultimately become a pocket A.I that helps to manage your life.</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li></ul>\n</div>\n</div>", ["", "", ""]], ["Extreme Robot Skating", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Passion for game design and innovative technologies</p>\n<h2>What it does</h2>\n<p>Skating around as a robot in a vr environment</p>\n<h2>How we built it</h2>\n<p>AWS: Lumberyard game engine </p>\n<h2>Challenges we ran into</h2>\n<p>Unable to find out how to submit it, oculus rift issues</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We got it to work!</p>\n<h2>What we learned</h2>\n<p>How to use mechanics in a vr environment</p>\n<h2>What's next for Extreme Robot Skating</h2>\n<p>Extreme Robot Skating 2: The Tony Hawk Years</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/oculus-gear-vr\">oculus-gear-vr</a></span></li></ul>\n</div>\n</div>", ["I helped build parts of the world.", "", ""]], ["Carving Stencil - SketchAPumpkin.com", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Carving Stencil - SketchAPumpkin.com \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/434/249/datas/gallery.jpg\"/>\n<p>\n<i>carving_stencil_thumbnail</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration - I was designing a jack-o-lantern with a friend when we realized we did not plan well enough ahead, and I made some poor decisions in cutting.   I was remembering this when going to the hackathon and thought this idea would be a huge help.</h2>\n<h2>What it does - Carving Stencil allows you to carve a virtual pumpkin, then export just the cut marks into an image file.  This image file can then be printed and used on a real pumpkin to carve a jack-o-lantern.</h2>\n<h2>How we built it - We used HTML and CSS for the main webpage, while implementing javascript for all canvas and interactive aspects.</h2>\n<h2>Challenges we ran into - We originally were going to use WebGL but felt the time restraints would limit the functionality too much.  We also were having issues understanding how canvas' resolution and size interacted with the overall webpage's resolution and size.</h2>\n<h2>Accomplishments that we're proud of - We were able to complete it and will actually be using it for a real pumpkin.</h2>\n<h2>What we learned - We learned a lot about CSS organization and over functionality of javascript (mostly interacting with HTML's canvas).</h2>\n<h2>What's next for Carving Stencil - We are hoping to add more art and carving techniques like ovals, triangles, and other segment tools.  We can also create other tools for stencil makers (not just for pumpkins).</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://goo.gl/Tz63VR\" rel=\"nofollow\" target=\"_blank\" title=\"https://goo.gl/Tz63VR\">\n<i class=\"ss-icon ss-link\"></i>\n<span>goo.gl</span>\n</a></li>\n<li><a href=\"https://d2qg98zuwafi7v.cloudfront.net\" rel=\"nofollow\" target=\"_blank\" title=\"https://d2qg98zuwafi7v.cloudfront.net\">\n<i class=\"ss-icon ss-link\"></i>\n<span>d2qg98zuwafi7v.cloudfront.net</span>\n</a></li>\n<li><a href=\"https://www.sketchapumpkin.com\" rel=\"nofollow\" target=\"_blank\" title=\"https://www.sketchapumpkin.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.sketchapumpkin.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Helped Kevin clean up the CSS, and assisted in the creation of JS functions to enable the drawing on the canvas in HTML.", ""]], ["Hector and OptiWare", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>kittens</p>\n</div>\n</div>", ["I designed and developed the Hector distribution site", "I designed and developed the OptiWare software.", ""]], ["Spell Check", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>My classmate, Leslie.</p>\n<h2>What it does</h2>\n<p>It's an unfinished set of filters trying to find a suggested word.</p>\n<h2>How I built it</h2>\n<p>Python</p>\n<h2>Challenges I ran into</h2>\n<p>Implementation and usability- I couldn't narrow down the available options to the extent I wanted to,</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Getting the filters to correctly sort by common spelling mistakes.</p>\n<h2>What I learned</h2>\n<p>I've learned the potential opportunities of using lists in my code.</p>\n<h2>What's next for Spell Check</h2>\n<p>Add additional functions for silent 'p' mistakes.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/oburek/Hackathon-2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/oburek/Hackathon-2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]]]