[["Twitch Steers HackUMBC", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://player.vimeo.com/video/185218441?byline=0&amp;portrait=0&amp;title=0#t=\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Twich Plays Pokemon Go stream. Let people navigate the game.</p>\n<h2>What it does</h2>\n<p>A camera show where the car goes on the Twitch stream. The chat controls the car based on their inputs. The car has collistion detection to prevent it from running into objects when running. </p>\n<h2>How we built it</h2>\n<p>Grut the RC Car and replace it with the Raspberry Pi 3. Use Python and Twitch to control the car</p>\n<h2>Challenges I ran into</h2>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<h2>What's next for Twitch Steers HackUMBC</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li><li><span class=\"cp-tag\">rc-car</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">twitch</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/github\">github</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/vlucent/TwitchSteersMyCar\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/vlucent/TwitchSteersMyCar\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://www.twitch.tv/hackumbcdrives\" rel=\"nofollow\" target=\"_blank\" title=\"https://www.twitch.tv/hackumbcdrives\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.twitch.tv</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Worked on reverse engineering the stock RC circuitry. Designed a replacement for the internal circuitry with a Raspberry Pi 3 and a Motor IC H-Bridge. Worked on getting a RPi camera to stream live video to Twitch.", "Worked on replacing R/C circuit board with a Motor IC H-Bridge and a Raspberry Pi 3.", "", "", ""]], ["PartyPal", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<h2>What it does</h2>\n<p>PartyPal is a geolocation based, crowdsourced map of party listings, reviews and warnings. </p>\n<h2>How we built it</h2>\n<p>RAMEN (react, alt, mongo, express.js, node) fueled web app</p>\n<h2>Challenges we ran into</h2>\n<p>Integrating react with Google Maps API</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Great backend</p>\n<h2>What we learned</h2>\n<p>The importance of giving enough time for implementation</p>\n<h2>What's next for MyPartyPal</h2>\n<p>Round out the UI, configure hosting/DNS, change the world</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/react\">react</a></span></li><li><span class=\"cp-tag\">alt</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li></ul>\n</div>\n</div>", ["RAMEN chef.", "", "", ""]], ["Park Pronto", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Park Pronto \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/418/851/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Park Pronto \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/418/850/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Park Pronto \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/418/866/datas/gallery.jpg\"/>\n<p>\n<i>'A' Parking lots</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Park Pronto \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/418/867/datas/gallery.jpg\"/>\n<p>\n<i>Satellite mode</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Park Pronto \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/418/865/datas/gallery.jpg\"/>\n<p>\n<i>Easy &amp; convenient feedback system</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Park Pronto \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/418/863/datas/gallery.jpg\"/>\n<p>\n<i>Upcoming week predictions</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Park Pronto \u2013 screenshot 7\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/418/864/datas/gallery.jpg\"/>\n<p>\n<i>Get a ride to any location</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Problem statement</h2>\n<p>\"50 years of parking woes\" -Retriever weekly</p>\n<p>UMBC has a major parking problem. There are 7250 parking spots and 11,276 issued permits. That means an oversubscription by 55%. \nTo put things into perspective, UMBC students, faculty and general staff spend 76 years annually looking for parking. In those 76 years, they burn 178,000 gallons of fuel worth $76,000.</p>\n<h2>State-of-the-Art (Current research)</h2>\n<p>The two popular techniques in use currently to detect open parking spots are Sensors and Computer Vision. </p>\n<p>Sensors : Although sensors have a very high accuracy rate, they are very expensive to deploy and run. By my estimate, UMBC will have to shell out $10 million to put sensors in the parking lots.</p>\n<p>Computer Vision : A camera takes a picture of the parking lot every minute and sends it to a central server, where the system using sophisticated techniques, determines the positions of empty parkings. The downside with this approach is that it suffers from very low accuracy. The main reasons are how the parking is laid out around campus and occlusion from trees and buildings.</p>\n<h2>Park Pronto approach</h2>\n<p>Park pronto utilizes a crowdsourcing approach to solve this problem. The users can see the available parking spots, categorized by permit types, on a mobile app. They can then also leave feedback about the current occupancy of a parking lot.</p>\n<p>But, that's not all. Park Pronto is not just another dumb crowdsourced parking aggregator. Firstly, it maintains a 'naughty' &amp; 'nice' score of all it's users, based on their feedbacks. It also induces a periodicity function from past data. It then reinforces the system by using the user's realtime updates. The key features are lot id, time of day, occupancy, user score and day of week. Using these features, Park Pronto is better able to gauge parking occupancy levels when faced with insufficient or untrustworthy user recommendations.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Park Pronto tries to solve a very burning issue in UMBC. Parking woes. It gives a new spin on an existing problem which currently has no good solution.</p>\n<h2>What's next for Park Pronto</h2>\n<p>In the coming weeks, we will be launching the app on both Android and iOS. In the future, we would also integrate with Apple CarPlay and Android Auto for more hassle free integration. The learning algorithm will get better at predicting parking lot occupancy levels over time from the information and patterns it learns from previous data.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-maps\">google-maps</a></span></li></ul>\n</div>\n</div>", [""]], ["Officer-Says", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Officer-Says \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/419/117/datas/gallery.jpg\"/>\n<p>\n<i>Our Team</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Officer-Says \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/419/118/datas/gallery.jpg\"/>\n<p>\n<i>Demoing the Infrared Sensors</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>In todays political climate, when the discussion of social justice came about, we immediately thought of the many unfortunate incidents that end so horribly because of such impulsive actions. Despite the inherent dangers in policing, there are some far too willing to end up on the wrong side of the gun, or rather put others there, particularly persons of color. this game was partially an amazing journey to learn the immersive world of virtual reality, and a biting satire of those in society who would deny this phenomenon.</p>\n<h2>What it does</h2>\n<p>It open's the eyes to individuals who might not see racial prejudice's in today's world. It portrays a way of communicating with the police not everyone sees and to some extent, why. The idealized structure was for a police officer to pull over either a randomly selected white or black person, see routine processes biased from the law enforcement. it also featured a system of interacting with the inside of the vehicle with the leap motion technology, with the actual mechanics remaining the same, but under very different circumstances, i.e. the law enforcement gives the black person a much shorter fuse, and a more dangerous outcome.</p>\n<h2>How we built it</h2>\n<p>We built our project on Unity 3D utilizing the Oculus Rift Virtual Reality features, as well as the Leap Motion Detector to create a immersive atmosphere for the user. We used C# and some Javascript for scripting, and the Unity Asset Store for Assets. </p>\n<h2>Challenges we ran into</h2>\n<ul>\n<li>Virtual Reality</li>\n<li>Linear Transformations</li>\n<li>Leap Motion Detection</li>\n<li>Lack of Tape</li>\n<li>Lack of Sleep / Time</li>\n</ul>\n<h2>Accomplishments that we're proud of</h2>\n<p>Rich Immersive Atmosphere and artistic direction\nlarge amount of learning, time, and dedication</p>\n<h2>What we learned</h2>\n<p>The Unity SDK, C#, JS, 3D Modeling, </p>\n<h2>What's next for Officer-Says</h2>\n<p>Hopefully we are able to add more content and fully realize the game, also hopefully accumulating to a release on steam!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/glsl\">glsl</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag\">smalltalk</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/tsteinholz/Officer-Says\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/tsteinholz/Officer-Says\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I was a programmer. I set up and maintained the source repository and got the sdks loaded. I worked on recording the audio with Vincent as well as making game object dynamic. Also worked on some lighting elements.", "I was a programmer who's main task was providing functionality for the controls. I also created the timer", "I was a programmer that worked on the interactivity and dynamic aspects of the game (being able to touch things in game and have hands etc.). I used C# scripting and unity to work on the backend development of the game. I also of course helped make the design of the game(ideas and gameplay factors, not artistic elements).", "I worked primarily on the environment and artistic element, and also with the creative spark. I also helped with structure flow, logic, and occasional programming."]], ["IMUCAP", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Our team was inspired by the apparent lack of VR MMOs. We felt that third person MMOs were a field yet to be explored in the world of virtual reality. Motivated by this, we thought about the best way of bringing an immersive experience to third person MMOs. We were further inspired by the high-end motion capture suits used by profesional animators. After some consideration, we arrived at our final product idea: an affordable heading sensor driven motion capture system to be used in third person VR MMO melee-fighting games. We also created a simple demo to demonstrate the basic capabilities of our system.</p>\n<h2>What it does</h2>\n<p>Our product uses multiple 9-axis IMUs to measure a player's joint rotation and an AHRS algorithm to animate the player. It is intended to be used in a VR game, as it would greatly increase the sense of immersion in the game.</p>\n<p>Our small scale system that we built at HackUMBC uses two IMUs: one between the right wrist and elbow and one between the right elbow and shoulder. This gives us axial control of the player's right forearm and upper arm, as demonstrated in our simple sword-swinging demo.</p>\n<p>Our team was limited to two IMUs by costs, however more IMUs can be integrated into the system to provide complete control of all major articulated joints in the body. By our estimates, a full body system would cost under $150 (including controllers and IMUs, not including the VR headset that would work with games using the system). This is significantly lower than commercial motion capture suits that start in the thousands.</p>\n<h2>How we built it</h2>\n<p>Our system was built by connecting one MPU9250 to an Arduino Uno and another to an Arduino Mega. We separated the IMUs onto two different controllers to ease device addressing. We secured the IMUs onto their controllers with tape and we secured the controllers onto velcro bands using string and tape. The velcro bands were strapped onto the user on the upper arm and forearm. Both of the Arduinos streamed their IMU data to the target over a USB C/USB A cable to the target computer.</p>\n<p>We created a demo for our system in Unity. We simply applied transformations to the player model's joints based on data from the respective joints in our motion capture system. We designed the game to be played in an Oculus VR headset to demonstrate the level of engagement our motion capture system can add to games.</p>\n<p>Our demo is a simple game that allows a player to slash floating orbs with an imaginary katana.</p>\n<h2>What's next for IMUCAP</h2>\n<p>We plan to create a full-body motion capture suit using our system in the future. We would like to create the full suit to prove the full capabilities of our system.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/oculus\">oculus</a></span></li><li><span class=\"cp-tag\">ahrs</span></li><li><span class=\"cp-tag\">c-sharp</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n</div>", ["", "", "", ""]], ["BreezyRide", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to create a project that had some meaning and purpose with the intent of helping the widest possible audience travel as safely, quickly and efficiently as possible. When we heard the Lyft Presenter Michael Bishoff speak, we were compelled to utilize Lyft data and connecting platforms to benefit Lyft drivers, and potentially drivers in general. We also saw the opportunity to integrate <strong>big data</strong> with <strong>Lyft API</strong> information to improve driver safety and traffic flow!</p>\n<h2>What it does</h2>\n<p>The BreezyRide web application provides users with visual information, SMS alerts to help inform drivers of accident occurrence, traffic, or other potential hazards and delays. By providing drivers with this information, drivers will be able to more safely and efficiently deliver passengers to their desired locations.</p>\n<h2>How we built it</h2>\n<p>Many tools were applied to reach our great product! For the overall design and layout of the website we used Bootstrap along with the aforementioned programming resources mentioned above.</p>\n<p>We connected three big data sets: <em>National Highway Safety Administration</em> data provided by the U.S. Department of Transportation, <em>Census Data from 2014</em>, and Lyft API data. We performed machine learning algorithms to calculate accident risk scores by zip code in Maryland. We also visualized this data in an interactive way for drivers to use on the fly.</p>\n<p>We connected a number of APIs together including <strong>Google Maps</strong>, <strong>Twilio</strong>, and <strong>Lyft</strong>.</p>\n<p>We thank <strong>Domain.com</strong> for providing us with a great domain name.</p>\n<h2>Challenges we ran into</h2>\n<p>Learning how to connect with the Lyft API and identifying our target audience which we can best benefit with the data. Special thanks to Michael Bishoff for assisting with the Lyft API.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Integrating big data, machine learning, and multiple APIs to accomplish a product useful for drivers. We are really excited to see how drivers can benefit from this!</p>\n<h2>What we learned</h2>\n<p>Team communication and compromise are vital to success, technical language, and great memories!</p>\n<h2>What's next for the BreezyRide Web Application</h2>\n<p>Real-time updates to drivers in a safe manner via their cell phones.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag\">data</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/lyft\">lyft</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/machine-learning\">machine-learning</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/r\">r</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-maps\">google-maps</a></span></li><li><span class=\"cp-tag\">stata</span></li><li><span class=\"cp-tag\">geospatial-analysis</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://www.breezyride.com\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.breezyride.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.breezyride.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Beige", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<h1>HackHarrassment.</h1>\n<h2>What it does</h2>\n<p>Blocks Twitter users that spout a number of user-defined trigger words. </p>\n<h2>How we built it</h2>\n<p>With Python 3.5, Visual Studio, and sweat.</p>\n<h2>Challenges we ran into</h2>\n<p>We realized learning advanced sentiment analysis was not going to happen in one night.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>It does what it's supposed to do, and it does it well.</p>\n<h2>What we learned</h2>\n<p>How to use the Twitter API, a good amount about sentiment analysis, and how to install Python packages when they're being brats.</p>\n<h2>What's next for Beige</h2>\n<p>The addition of sentiment analysis would be entirely beneficial.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">tywthon</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/em1382/hackumbc\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/em1382/hackumbc\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the infrastructure and main algorithm.", "I worked on implementing the trigger words dictionary and tester, as well as unimplemented sentiment analysis algorithms.", "I helped inspire the original idea and worked on an unimplemented front-end tester. "]], ["Automated Sniffing Node", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<h2>What it does</h2>\n<p>Roves around looking for unsecured wifi networks, connects  to it then begins capturing network traffic</p>\n<h2>How we built it</h2>\n<p>Broke into 2 main tasks: \n1.Get the RC car to autonomously drive \n2.Setup an automatic capture of wifi packets</p>\n<h2>Challenges we ran into</h2>\n<p>Automating tasks that require root permissions\nObstacle avoidance of anything more complex than a wall</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Automated packet gathering and sending the information to a remote location</p>\n<h2>What we learned</h2>\n<p>A lot about linux command line and SFTP\n.</p>\n<h2>What's next for Automated Sniffing Node</h2>\n<ol>\n<li>Refine</li>\n<li>\n</li><li>Profit</li>\n</ol>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c\">c</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bash\">bash</a></span></li><li><span class=\"cp-tag\">wireshark</span></li><li><span class=\"cp-tag\">rc-car</span></li><li><span class=\"cp-tag\">sftp</span></li></ul>\n</div>\n</div>", ["Setting up linux servers, software development.  Research and implementation of Wireshark and tshark", "", ""]], ["updoot.com", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"updoot.com \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/418/782/datas/gallery.jpg\"/>\n<p>\n<i>example doot page 1</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"updoot.com \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/418/783/datas/gallery.jpg\"/>\n<p>\n<i>updoot.com homepage</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"updoot.com \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/418/784/datas/gallery.jpg\"/>\n<p>\n<i>example doot page 2</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We live in a world where upvoting services are held back by bloatware. What if we had Facebook likes, without the Facebook? This is what our prototype updoot.com does. It gives us a glimpse into the future of simplified upvoting without extra unneeded features.</p>\n<h2>What it does</h2>\n<p>Search for anything you want, and upvote (updoot) it as many times as you want by clicking on the number. Updoot counts are global and update in real time across all users. Be wise with your updoots though, as you are throttled to 1000 an hour.</p>\n<h2>How we built it</h2>\n<p>Hosted on one AWS micro EC2 instance. Uses sails js for the backend logic. Websockets are used for live updating updoot scores. The front end is build in html css and javascript, with a small amount of help from bootstrap.</p>\n<h2>Challenges we ran into</h2>\n<p>Connecting our domain name to our EC2 instance was confusing because we had never done that before. Getting the animations right took some time.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Live updating of updoot scores across all users.</p>\n<h2>What we learned</h2>\n<p>How to use websockets more efficiently. How to connect a domain name to an IP address.</p>\n<h2>What's next for updoot.com</h2>\n<p>Next we take down Facebook, and become the ubiquitous platform for upvoting anything you want.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sails-js\">sails.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/websockets\">websockets</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag\">domain.com</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-ec2\">amazon-ec2</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://updoot.com/\" rel=\"nofollow\" target=\"_blank\" title=\"http://updoot.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>updoot.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Sortathon", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Sortathon \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/419/073/datas/gallery.jpg\"/>\n<p>\n<i>#hHackathonSort</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Help next years Hackathon participants that don't have a group get paired up with people that will be more beneficial as a team</h2>\n<h2>It is a forum that asks users questions during sign up and based on their selections it will put them into groups with people of similar answer choices.</h2>\n<h2>We used java script and html mostly with some php on side.</h2>\n<h2>The issue that we faced was mostly time management.</h2>\n<h2>Finishing the project was the most exciting thing. Also getting the project to work how we wanted was good.</h2>\n<h2>This Hackathon was exciting. My team and I learned a lot. Everything from software to hardware. We also learned a lot of Java Script and HTML.</h2>\n<h2>The next update will feature a redesigned GUI and better user interface with involvement and feedback from servers.</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://www.hackumbc.com\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.hackumbc.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.hackumbc.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["AsisText", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"AsisText \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/418/706/datas/gallery.jpg\"/>\n<p>\n<i>Image Search</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"AsisText \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/418/709/datas/gallery.jpg\"/>\n<p>\n<i>Math</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"AsisText \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/418/716/datas/gallery.jpg\"/>\n<p>\n<i>Weather</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We wanted a virtual assistant that we can use anywhere we go even without internet. We needed this because we have grown accustomed to other assistance however they are all internet based.</p>\n<h2>What it does</h2>\n<p>AsisText uses SMS and MMS to give you information that you would normally need internet for. It can give you the weather, news, images from the internet, Wikipedia articles, and even lets you browse the web with just sms. Not only can it do this but you can create alarms where the service will call any phone number you give it in the future.</p>\n<h2>How we built it</h2>\n<p>We used Twilio to handle the messaging and many other APIs for the various other information. Twilio sends text messages sent to AsisText to PHP running on a server in amazon web services. The PHP then calls different APIs according to what information the user need and sends it back to Twilio.</p>\n<h2>Challenges we ran into</h2>\n<p>Some problems we ran into were scheduling calls and text messages in the future. We had to learn how to use Cron jobs in Linux.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We're are proud of how well we were able to seamlessly implement many APIs to create a service that works so well.</p>\n<h2>What we learned</h2>\n<p>We learned how Cron jobs work in Linux. We also learned a lot about using PHP and various APIs. We learned a lot about how MMs and SMS work and how Twilio and automated calls work.</p>\n<h2>What's next for AsisText</h2>\n<p>We hope to implement more features into the service like a better web browsing experience. Also we would love to add features to access the scores of sports games</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag\">sms</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/nmittu/asistext\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/nmittu/asistext\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", "", ""]], ["Weathergram", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Inspired by videos of real world holograms brought to life by simple CD cases and some elbow grease, we decided to take the next logical leap and make an interactive experience for the user. As we worked on our hack, we learned more about the medium and gained inspiration through trial and error.</p>\n<h2>What it does</h2>\n<p>Our hack displays holograms depicting weather conditions in various areas of the world, with the user simply needing to enter the name of a city to access real time weather data in a informative and entertaining format. </p>\n<h2>How we built it</h2>\n<p>The light from a phone, tablet, or laptop screen experiences what is known as total interal reflection. Due to the perfect 90* angle of the plexiglass prism, all of the light is reflected from the screen forward to the user which gives the illusion of a hologram. We also utilized an internal database of world cities and their respective locations of the geographical coordinates as well as a external weather api to give up to date information on weather across the globe.</p>\n<h2>Challenges we ran into</h2>\n<p>The image display library in python known as opencv2 was having difficulty switching from one image to another semlessly when user input was given. We got around this using an ingenious threading implementation that puts the user input into a list, a list that happen to be part of the loop condition for the image display code. This allowed us to seamlessly move between different images in our display.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are very proud of the entier hack. From the hand crafted database of cities and coordinates to the fantastic hologram projector, we have nothing but pride for our work these past 24hrs.</p>\n<h2>What we learned</h2>\n<p>We learned that even the most simple ideas can be flushed out into something incredible with just a bit of harwork and caffinated water.</p>\n<h2>What's next for Weathergram</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">cv2</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/dark-sky\">dark-sky</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/pcuste1/hack2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/pcuste1/hack2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Ride Retrievers", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Ride Retrievers \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/419/189/datas/gallery.jpg\"/>\n<p>\n<i>logo </i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>People dont have money to travel some methods of transportation. Lyft api was also a big influence.</p>\n<h2>What it does</h2>\n<p>It compares prices and times between different transport companies.</p>\n<h2>How we built it</h2>\n<p>Website made with html + css + javascript. JsNode , JQuery , C3 , and D3 used to make the charts </p>\n<h2>Challenges we ran into</h2>\n<p>Nearly impossible to include data from lyft api into our charts. Our partner had to leave health issues and had to leave early. Due to this  we could not utilise the files that used the Lyft api.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Making the charts and accessing the lyft apis.</p>\n<h2>What we learned   How to use python to access a web server , how to use the Google geolocation api , make charts using d3 and c3.</h2>\n<h2>What's next for Ride Retrievers</h2>\n<p>Refine code so that it can be hosted on a web domain. Add region shading to show the range of desired prices for client</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/notepad\">notepad++</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jade\">jade</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/backplane-javascript\">backplane-javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n</div>", ["I wrote up the whole NodeJS backend and implemented the Uber and Lyft APIs into the application.", ""]], ["Ordyr", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Ordyr \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/419/144/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Ordyr \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/419/141/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Ordyr \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/419/142/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Ordyr \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/419/143/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>I absolutely hate it when I have to wait for waiters to collect my order or when I have to stand in line to get food.</p>\n<h2>What it does</h2>\n<p>Ordyr is an Android app that allows people to order restaurant food from their phones. After a user is seated, instead of having to call over a waiter, they can simply request food from the app. Each order is sent to the kitchen over time, and at the end of the meal, the user pays for the entire meal with PayPal.</p>\n<h2>How I built it</h2>\n<p>The Ordyr app was built in Android Studio with the Lyft API for getting rides to restaurants and PayPal for payment.</p>\n<h2>Challenges I ran into</h2>\n<p>Getting the UI to look decent. Integrating PayPal. Perfecting the idea.</p>\n<h2>What I learned</h2>\n<p>I learned that the Lyft API is super user-friendly. </p>\n<h2>What's next for Ordyr</h2>\n<p>After fixing some payment issues, I would like to get Ordyr into as many restaurants as possible!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/lyft\">lyft</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/paypal\">paypal</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://ordyr.strikingly.com\" rel=\"nofollow\" target=\"_blank\" title=\"http://ordyr.strikingly.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>ordyr.strikingly.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Sustainable Star", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Sustainable Star \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/419/093/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration: Eco_Ambassadors Program at UMBC</h2>\n<h2>What it does: Allows students to view materials that can be recycling and compost at different dining locations on college campuses.</h2>\n<h2>How I built it: Has a website showcasing some environmental concerns that were present at hackUMBC. Displays  an application that allows students to view materials that can be recycle and compost at various food venues on college campuses. Tracks how much a student recycling daily, and display their ranking compare to other students at their university.</h2>\n<h2>Challenges I ran into: Switching throughout the GUI and resolving overlapping frames</h2>\n<h2>Accomplishments: I learn alot of php and java development</h2>\n<h2>What I learned: PHP, SQL, Java development</h2>\n<h2>What's next for Sustainable Star: Implementing it at other colleges</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">hml</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/smendimasa/Sustainable-Star\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/smendimasa/Sustainable-Star\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["ICSIDE", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>There are no good IDE's for introductory computer science students, hence where the name ICSIDE(Introductory Computer Science Student Integrated Development Enviornment). They also struggle to connect to the gl, or remote linux servers, to work on their projects. So all of this came into the challenge of developing an IDE that solves this issue</p>\n<h2>What it does</h2>\n<p>There is a difference between what it does and what it should do. It should be able to highlight C++ and Python syntax as well as find syntactical errors. While also local and remote compiling to gl along with gl file viewing. What we actually accomplished was the syntax highlighting for C++ and local compiling of the C++ using g++. </p>\n<h2>How we built it</h2>\n<p>We built ICSIDE in C++ using wxWidgits. The background tasking was also done in C++.</p>\n<h2>Challenges we ran into</h2>\n<p>There was simply not enough time to complete the project.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are very proud of the fact that the ui shows up and we can type into it. It did come like this by default, so this was a big milestone for us. Also getting our syntax highlighting was a high point!</p>\n<h2>What we learned</h2>\n<p>C++ is a bad language for string processing, and wxWidgets is misleading in what it comes with.</p>\n<h2>What's next for ICSIDE</h2>\n<p>Completing the IDE to the standards that we wanted to achieve as well as getting it to the CS students!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li><li><span class=\"cp-tag\">cmake</span></li><li><span class=\"cp-tag\">wxwidgets</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/erictg/hackathonUI\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/erictg/hackathonUI\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Cure Corp", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>A game to have fun</p>\n<h2>What it does</h2>\n<p>You compete against the world to find a cure for a antivirus and antibiotic resistant illness.\n(Inspires others?)</p>\n<h2>How we built it</h2>\n<p>We used GIMP to create icons, sprites, and backgrounds, then used HTML, CSS, JavaScript, JQuery, and gedit to edit</p>\n<h2>Challenges we ran into</h2>\n<p>Java had too many restrictions and wasnt as portable as js</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>The game in general, the graphics with layered canvases and changing gifs.</p>\n<h2>What we learned</h2>\n<p>Java is less flexible than javascript, and html canvases are useful when combined with z-indexing</p>\n<h2>What's next for Cure Corp</h2>\n<p>More levels, scores, (competitive multiplayer?)</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://curecorp.cf/\" rel=\"nofollow\" target=\"_blank\" title=\"http://curecorp.cf/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>curecorp.cf</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I came up game mechanics and I drew a bit of the art that is used in the actual game.", "I came up with the original concept of the game, and worked on original art for the game.", "I set up the domain and web servers using 000webhost and freenom.com, made (a large portion of) code for the game, and worked on the GUI.", ""]], ["SP", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>Invalid</p>\n</div>\n</div>", [""]], ["OrgMind", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"OrgMind \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/419/052/datas/gallery.jpg\"/>\n<p>\n<i>Simple user search with results in accordian</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Looking for tutorials or videos to learn a new subject can be hard. Often the best resources are not the first in a search and it can often be overwhelming to find somewhere to start.</p>\n<h2>What it does</h2>\n<p>Allows users to submit links related to a topic. Links can be voted on for usefulness. </p>\n<h2>How I built it</h2>\n<p>TypeScript and stuff. </p>\n<h2>Challenges I ran into</h2>\n<p>Back-end REST API in NodeJs and Express that uses a firebase database. (Doesn't work)\nFront-end React-Redux to complex for small stuff.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Written in 1hr and 30 minutes.</p>\n<h2>What I learned</h2>\n<p>NodeJS, ExpressJS. TypeScript is Awesome. </p>\n<h2>What's next for OrgMind</h2>\n<p>Actually build out the backend to work. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/typescript\">typescript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/react\">react</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/redux\">redux</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/NinjaLabib/OrgMind\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/NinjaLabib/OrgMind\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["SlayIt", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>Something</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://climegarm.herokuapp.com/get_weather/37.42/-122.08\" rel=\"nofollow\" target=\"_blank\" title=\"http://climegarm.herokuapp.com/get_weather/37.42/-122.08\">\n<i class=\"ss-icon ss-link\"></i>\n<span>climegarm.herokuapp.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Predictive Tweet Risk", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Predictive Tweet Risk \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/419/046/datas/gallery.jpg\"/>\n<p>\n<i>Offenders</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We were thinking about big data, and how it can be used to stop crime before it happens. There are systems currently in place to search for terrorism keywords, however we focused our on efforts on already offending people, and focus more on violent/malicious words.</p>\n<h2>What it does</h2>\n<p>Our program goes through a .CSV file of sexual offender names and details, and searches for them on twitter by name, and once it finds someone, it looks through their most recent tweets and flags tweets with concerning keywords.</p>\n<h2>How we built it</h2>\n<p>We used the Twitter API, with the python-twitter module, as well as the public data on sexual offenders to build our entire project on python. </p>\n<h2>Challenges we ran into</h2>\n<p>Confirming whether it is the right user or not, which we tried fixing by only counting tweets of names that had less than three accounts. Learning how to use the Twitter API, and also running into problems with the rate limit of the API. Also some accounts were set to private so we had to skip those.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>It is able to retrieve tweets and search for keywords, and we have already found a couple tweets that fits our danger criteria.</p>\n<h2>What we learned</h2>\n<p>We learned how to use the Twitter API, and how to parse data from a .CSV file.</p>\n<h2>What's next for Predictive Tweet Risk</h2>\n<p>We well expand the keywords, and make a website that has these flagged tweets embedded so that a human can make their own conclusion about the tweets and act accordingly.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/danielengbert/predictive-crime\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/danielengbert/predictive-crime\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I created a python program to run through a CSV file to pull out the meaningful data (names of Sex Offenders) and send them to the second part of the program that runs them through the Twitter API.", "I worked on using the twitter API to search for users by name and retrieve their tweets."]], ["Twotor", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration: Tutoring is hard to organize, this will help peers get together</h2>\n<h2>What it does: helps students find peers to find someone to help with school</h2>\n<h2>How I built it: android studio, java</h2>\n<h2>Challenges I ran into: organization, coding, syntax</h2>\n<h2>Accomplishments that I'm proud of: joining all together, design of app</h2>\n<h2>What I learned: java</h2>\n<h2>What's next for Twotor: Server implementation, login, payements, edline integration</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li></ul>\n</div>\n</div>", [""]], ["H.A.R.A.M.B.E. A.P.P.", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>Presenting the:\nHackathon Application Regarding Attention Management Bulletin Enforcement Assisting Persistent Procrastinators</p>\n<ul>\n<li>aka, the H.A.R.A.M.B.E. A.P.P.</li>\n</ul>\n<h2>Inspiration</h2>\n<p>Both team members are pretty terrible procrastinators. We recognize the helpfulness of the occasional 'poke' to help keep on track.</p>\n<h2>What it does</h2>\n<p>Two functionalities:\n1) The first is a custom \"Reminder,\" where the user enters a message they need to be persistently reminded about. They hit go and... well, that notification is there for good.</p>\n<p>2) The second is a set of friendly, tough-love reminders that are pushed to the user's notification bar at semi-random time intervals.</p>\n<h2>How we built it</h2>\n<p>The app was built entirely in Android Studio and tested on an Android 6.0 emulated device.</p>\n<h2>Challenges we ran into</h2>\n<p>The semi-randomly timed background service which pushes notifications was/is tricky. Still working at quirks at the time of the writing.</p>\n<p>Additionally, we were unable to test the application on an Android phone due to technical difficulties, so troubleshooting that/testing using an emulator wasted some resources and time.</p>\n<p>Also, apparently the newly released Android 7.0 - Nougat - does not like persistent notifications. So this app is not so practical as of.. a month ago.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>It works... sort of...?</p>\n<h2>What we learned</h2>\n<p>Background services in Android are not super easy to deal with. Android 7.0 is crushing Doug's dreams of a world filled with persistent notifications.</p>\n<h2>What's next for H.A.R.A.M.B.E. A.P.P.</h2>\n<p>Development is unlikely to continue for this iteration of the application, but a more feature-rich version could be considered in the future.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["DayGo", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>DayGo</h1>\n<p>Where the day goes!</p>\n<p>Our idea branched off the thought of a visualization of the day ahead of you. There are currently plenty of apps that show you past events, and everything is based off the past. Our thought was, since everyone is looking towards the past, why not look toward the future? DayGo is a new, and innovative way to experience your day BEFORE it actually happens. </p>\n<p>It takes your daily schedule, and creates a short virtualization of the events you have planned for the day. We managed to pull together resources to host an online website that gathers your routine for the day and outputs it into video format. </p>\n<p>Some future additions to this app will be a sharing option for social media, connection to your google calendar to easily manage your schedule, syncing the application with your alarm clock and TV to play the video as you wake up, and adding music to enhance the experience.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag\">domain.com</span></li><li><span class=\"cp-tag\">giphy-api</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/vanstorm9/DayGo\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/vanstorm9/DayGo\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I used Javascript in order to use the Giphy API and I learned a lot from it.", "", ""]], ["HackSearch", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Our personal experiences at Hackathons</p>\n<h2>What it does</h2>\n<p>The app shows you nearby hackathons, allows you to request a lyft to a hackathon, look for or create postings for hackathon projects and join teams at hackathons of your choosing. </p>\n<h2>How I built it</h2>\n<p>Firebase backend. Android Studio Frontend. XML GUI.</p>\n<h2>Challenges I ran into</h2>\n<p>GitHub version control issues, getting used to firebase</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>First time ever using GitHub or firebase!</p>\n<h2>What I learned</h2>\n<p>How to use GitHub and firebase</p>\n<h2>What's next for HackSearch</h2>\n<p>Applying personal profiles for each individual user </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/zackkhan/HackUMBC\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/zackkhan/HackUMBC\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Terptimizer", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We detected a frustrating problem on our College Park campus concerning schedule crafting.  It is an unavoidable duty of every student, and we desire to make it a more pleasant experience for all.  It proves very helpful for students to actually create an outline of their preferred schedules before having to commit by registering for classes.</p>\n<h2>What it does</h2>\n<p>Terptimizer is a play on words for \"Terp Optimizer,\" a website designed to calculate potential schedules and provide options for students prior to having to lock-in on their desired courses one-by-one.  It was intended to have several additional features such as course-time preference and potential free-days, but unfortunately, we were not able to implement these due to a lack of time.</p>\n<h2>How we built it</h2>\n<p>We split the job evenly between front-end (stylistic and functional) to back-end (code-heavy and logical).  One of the front end members worked on the input page, while the other worked on the output page, and the two coincided to connect these pages to the back-end code.</p>\n<h2>Challenges we ran into</h2>\n<p>None of our group members were familiar with front-end web development, so two of us were forced to spend the majority of our time simply learning the requisite languages.  Furthermore, we experienced significant difficulties with transmitting data from front-end to back-end due to our lack of familiarity with the languages.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are proud of our individual successes in both back-end code logic and front-end design, given the short amount of time we were given to learn the necessary languages.</p>\n<h2>What we learned</h2>\n<p>We all learned a great deal about the importance of preparation, time allocation, duty distribution, and many useful things about coding itself from out first Hackathon.  We hope to continue to learn from seeing the works of other teams.</p>\n<h2>What's next for Terptimizer</h2>\n<p>Due to our unfortunate lack of time and experience, we were not able to put everything we had into this project, but we hope to finish this project and add the features we desired in order to create an improved schedule builder for College Park students.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/apache\">apache</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/tomcat\">tomcat</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Java-Benders/terptimizer-backend_v2\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Java-Benders/terptimizer-backend_v2\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["MAC Address Spoofing ", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"MAC Address Spoofing  \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/419/025/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<h2>What it does</h2>\n<h2>How we built it</h2>\n<h2>Challenges we ran into</h2>\n<h2>Accomplishments that we're proud of</h2>\n<h2>What we learned</h2>\n<h2>What's next for MAC Address Spoofing</h2>\n<p>MAC address is an hardware embedded address in an Network Card. I have built a script in Python using nmap package which will help us to filter all the MAC address in a given Network. My script will list all the MAC address in the Network and randomly select one MAC address or the User can select any one MAC address from the list and assign it to his Network Interface Card and can do illegal stuffs in a Network.\nIn the script we can modify in such a way that one of the MAC address can be assign automatically by the script itself to the Network Interface card.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/mthevar/MAC-Address-Spoofing\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/mthevar/MAC-Address-Spoofing\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Looked in to Nmap documentation to find the MAC address attributes in the Nmap output", ""]], ["Project Manager", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Project Manager \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/419/022/datas/gallery.jpg\"/>\n<p>\n<i>Login Screen</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Project Manager \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/419/071/datas/gallery.jpg\"/>\n<p>\n<i>Project Menu Screen</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration :</h2>\n<p>We were inspired to create this app because we felt that a lot of communication apps prevent us from connecting and sharing our projects efficiently.</p>\n<h2>What it does :</h2>\n<p>It creates a friendly and organized environment where group mates can discuss their projects, plan ahead, and properly manage to work on their project no matter what the subject of that project is. </p>\n<h2>How we built it :</h2>\n<p>We started by thinking how we could help these types of communities in which people work on group projects, and we thought that it is a good idea to make communication and planning even easier than it was before for them. </p>\n<h2>Challenges we ran into :</h2>\n<p>Integrating the JSQMessage Library which was not completely updated for swift 3.0 and it was in beta mode. Also, we had problems with the time given to finish this application.</p>\n<h2>Accomplishments that we're proud of:</h2>\n<p>We are proud that we were able to make a responsive and user-friendly app in a short period of time because of the challenges that we endured. The challenge was that our team was comprised of one developer and one graphic designer and we were working on a complex app which uses different libraries, databases, and different programming languages. </p>\n<h2>What we learned: We learned that we were able to collaborate well. New programming and design skills. Also, since this was our first experience in hackathon we learned about hackathons, finding mentors, and networking.</h2>\n<h2>What's next for Project Manager: In the future updates, we will be adding support for different types of documents to the app, so users would be able to quickly share their progress more in depth.</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag\">alamofire</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag\">jsqmessenger</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/uikit\">uikit</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sketch\">sketch</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["Keyword Finder", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Keyword Finder \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/419/019/datas/gallery.jpg\"/>\n<p>\n<i>Sample Results Page</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Keyword Finder \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/419/024/datas/gallery.jpg\"/>\n<p>\n<i>Sample Pie Chart</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Keyword Finder \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/419/028/datas/gallery.jpg\"/>\n<p>\n<i>Java GUI to Input File</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We were inspired to make this program after seeing many college students having difficulty reading through dense texts because of potentially difficult/important words.</p>\n<h2>What it does</h2>\n<p>This program take a text document or pdf and sorts all of the different words into a binary search tree. It then displays the words in order of most reoccurring in a table. The purpose of this is to highlight key words in a document that the user might need to pay attention to as it is most likely an important topic in that section of text. However, a large amount of very common, insignificant words such as \"and, was, too, etc.\" have not been included as those are not very helpful in distinguishing important concepts.</p>\n<h2>How we built it</h2>\n<p>We used Java to build the GUI to enter the file. We then used the Dropbox API to upload our results to the cloud, where it is then formed as a static website by pancake.io.</p>\n<h2>Challenges we ran into</h2>\n<p>We had some difficulty with formatting the tables on the results page. We also had to spend some time with allowing the program to input pdfs.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are proud that our program can take the data parsed through the file and produce a pie chart of the relative frequency of starting letters. We are also proud that our program works with pdfs, as originally, it only accepted txt file.</p>\n<h2>What we learned</h2>\n<p>We learned how to practically use a binary search tree to sort through large amounts of text. We also learned how to use basic features of the Dropbox API.</p>\n<h2>What's next for Keyword Finder</h2>\n<p>We hope to implement this algorithm to potentially make a program that can summarize the input text by locating key words.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/dropbox\">dropbox</a></span></li><li><span class=\"cp-tag\">pancake.io</span></li><li><span class=\"cp-tag\">pdfbox</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://hackumbcproj.pancakeapps.com/\" rel=\"nofollow\" target=\"_blank\" title=\"http://hackumbcproj.pancakeapps.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>hackumbcproj.pancakeapps.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on CSS for the websites, as well as page content. I also helped produce the algorithm to remove excess punctuation around words read in.", "I programmed the Java component to read the input file and write to the output html."]], ["Moodsic", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>After we attended the NSA Tech Talk, someone told us that we can try to make a program that would match songs with moods. We thought about using an api to take pictures of people and have the api determine the mood based off of the pictures. We thought about using Amazon Echo to play the song after the api talks to it.</p>\n<h2>What it does</h2>\n<p>It has links that would take the user to go to external links, as well as determine the best song based off of mood after seeing pictures of nature. One link takes the user to an api that takes a picture and then automatically determines the mood based off of the picture. The other link allows the user to determine a mood and/or genre, and then finds the songs that best match one or both of them.</p>\n<h2>How we built it</h2>\n<p>We used HTML to make the front-end web site, but we tried altering an api to get it to talk to Echo, but the latter didn't work.</p>\n<h2>Challenges we ran into</h2>\n<p>We had difficulty trying to figure out the api interface to talk Echo.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are proud of being able to use external links that can help determine moods and songs for us. We were also proud of having the user think for him/herself in terms of moods and songs based off of nature photos.</p>\n<h2>What we learned</h2>\n<p>We learned that whenever we come up with an idea, it is not always easy to make the idea reality. We also learned that we can make alternatives and tweak up our idea a little to make the final project close to actual idea.</p>\n<h2>What's next for Moodsic</h2>\n<p>Hopefully, one day we can actually get the computer api to talk to Echo.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://userpages.umbc.edu/~vphil1/Moodsic/moodsic.html\" rel=\"nofollow\" target=\"_blank\" title=\"http://userpages.umbc.edu/~vphil1/Moodsic/moodsic.html\">\n<i class=\"ss-icon ss-link\"></i>\n<span>userpages.umbc.edu</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Star Beam", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/lpuHNcEwjoE?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n</ul> </div>\n<div>\n<p>Refer to power point.</p>\n<p>Team consists of Zonaib Latif, Ibrahim Pasha the visionary and hardware guy, James Guan software, Connor Strang software. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag\">ir</span></li><li><span class=\"cp-tag\">atx-power-supple</span></li><li><span class=\"cp-tag\">rgb-led</span></li><li><span class=\"cp-tag\">transistor</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://drive.google.com/a/umbc.edu/file/d/0ByFRWuZ0rsmOVVJzdVZnX3N4cFE/view?usp=drivesdk\" rel=\"nofollow\" target=\"_blank\" title=\"https://drive.google.com/a/umbc.edu/file/d/0ByFRWuZ0rsmOVVJzdVZnX3N4cFE/view?usp=drivesdk\">\n<i class=\"ss-icon ss-link\"></i>\n<span>drive.google.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["identifier website", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>I go to high school and this is my first time in a hackathon and my fist time coding</p>\n<h2>What it does</h2>\n<p>what it dose is you put a picture and the object like drink and it would find if there is a object like drink and it would say true if not it would say false</p>\n<h2>How I built it</h2>\n<p>python clarifai,flask i use to build these</p>\n<h2>Challenges I ran into</h2>\n<p>challenges i ran in to is that i dont know what stuff mean so i have to learn a new language</p>\n<h2>Accomplishments that I'm proud</h2>\n<p>im proud of building a website</p>\n<h2>What I learned</h2>\n<p>i learned a new language</p>\n<h2>What's next for identifier website</h2>\n<p>making it more prettier.\n.... . . </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n</div>", [""]], ["LineHopper", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>LineHopper provides a user interface easily accessing and organizing relevant portions of a consumer goods database to control a shopping list in real time, by entering product codes as the products are picked up.  As such it provides real time access to relevant information about the products and compiles goods for an expedient purchase allowing the customer to \"skip the line\".  </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/joshbenner851/Linehop\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/joshbenner851/Linehop\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"http://webdev.cse.msu.edu/~bennerjo/LineHop/\" rel=\"nofollow\" target=\"_blank\" title=\"http://webdev.cse.msu.edu/~bennerjo/LineHop/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>webdev.cse.msu.edu</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I assisted with the Javascript coding, adding relevant data structures and a means of removing stored data elements.  ", "I worked on the android mobile barcode scanner portion on the interface. This way a customer may easily snap a picture of the barcode, using Zebra crossing library, thus successfully decoding a UPC. ", "I managed the team and did most of the Javascript and connecting the API's and also did a good portion of the styling/CSS", ""]], ["Lyft Event Discovery (aka \"LED\")", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/eFqOrai5K0w?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Moving to a new city can be a difficult transition to make, especially when you don't have any friends, a reliable means of transportation, or know of any events to attend.  </p>\n<h2>What it does</h2>\n<p>Lyft event discovery enables you to discover interesting events near by. It then allows you to Lyft Line to the event with other people who will also be attending. You ultimately get to hit three birds with one stone: you get to find interesting events, meet new people, and ride at a discounted rate. </p>\n<h2>How we built it</h2>\n<p>We built a web crawler to find local events near you, we designed the app using Sketch and Flinto, and developed the app in android studio. </p>\n<h2>Challenges we ran into</h2>\n<p>Categorizing the event data, learning how to develop android apps, and losing our data on one of the borrowed laptops. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We built an app that we would actually use and overcame versioning issues. </p>\n<h2>What we learned</h2>\n<p>How to work as a team, how to build android apps, and how to source, refine, and utilize large data sets (big data). </p>\n<h2>What's next for Lyft Event Discovery ()</h2>\n<p>Implementing the Ice breaker game that we developed to help facilitate introductions among riders. Waiting to hear back from Lyft corporate development about our impending acqui-hire </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sql\">sql</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xml\">xml</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sketch\">sketch</a></span></li><li><span class=\"cp-tag\">flinto</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/JeffreyWang98/Lyft-Event-Discovery.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/JeffreyWang98/Lyft-Event-Discovery.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the Android application, bringing together my teammates contributions. I built the GUI based on the design my teammate gave me. The event data we scraped from meetups.com was used to populate the app. I ran into many minor issues with formatting the display to match the designs. As I worked with the event data, I encountered many errors due to the method of parsing the JSON files.", "", "", ""]], ["Cardfight!! Vanguard Deck Builder", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>I wanted to create a deck builder because searching through cards in the internet can be tiring, so having saved decks (whether they are complete or incomplete) creates conivence.  </p>\n<h2>What it does</h2>\n<p>This application allows people to create, load, edit, and delete decks. There are 2 decks in the game, one deck containing 16 cards (known as the G Zone), and another deck containing 60 cards (known as the Main deck). When someone creates a new deck, one could type in a card name, and the name will be searched within the database dump given. Once the name is found, the card effects and pricing would be found. The pricing would come from another website and it API. After a deck is made, it can be saved by the user and loaded by the user. From there, the user can edit or delete cards. There is another option to delete decks as well. The decks will contain price totals once all cards and their prices have been identified. </p>\n<h2>How I built it</h2>\n<p>I used Android Studio to create the application (to be later sent to my Android phone). I also used Sublime Text 2 to open the XML database dump from the Cardfight!! Vanguard Wikia. </p>\n<h2>Challenges I ran into</h2>\n<p>The first challenge I ran into was opening a database dump from the Cardfight!! Vanguard Wikia. I was not able to open the database because my Unarchiver would not open it. So with help from a mentor, he was able to open and send it. The second challenge was how to get the pricing of the cards given, since it requires the API of another website- but only by request. Due to time, I was not able to get a request through. </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I was glad to understand about how to use buttons, background images, and searching through database dumps.</p>\n<h2>What I learned</h2>\n<p>I learned more about android programming. I learned how to create buttons and interactions, I learned how to get a background image to fit in the application, and I learned how to grab a file and open it. </p>\n<h2>What's next for Cardfight!! Vanguard Deck Builder</h2>\n<p>In the future, I plan to learn more how to read databases, and how to search for specific items- items such as card effects and pricing. To get pricing, I would need to ask permission from the website that own the API and work from there. More of this would be possible if I had more time to work on the project itself. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sublime-text\">sublime-text</a></span></li></ul>\n</div>\n</div>", [""]], ["SnapCal", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>In college, there are always a lot of events going on. It can get really hard to keep track of the events and no one has time to stop in front of a flyer and record the information. Hence, snapcal was born.</p>\n<h2>What it does</h2>\n<p>You can take a quick picture of any event flyer and the application will extract all the text from it, understand it and automatically create a calendar object. From here you can call a lyft to the event location or have it scheduled for you automatically. </p>\n<h2>How we built it</h2>\n<p>We built an android application that uses google's cloud vision API to analyze the text on any event flyer. It then looks for things such as text size to get a title, location, and the date and time of the event to generate a comprehensive calendar event.</p>\n<h2>Challenges we ran into</h2>\n<p>Figuring out what is the title, location and date and time was the biggest challenge. Although our implementation isn't perfect for the hackathon it can be improved in the future.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We figured out android and wrote a really useful program that we can all use.</p>\n<h2>What we learned</h2>\n<p>Android, google cloud vision api, lyft api</p>\n<h2>What's next for SnapCal</h2>\n<p>To make it more robust for a variety of different flyers and integrate google calendar in the work flow.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/lyft\">lyft</a></span></li><li><span class=\"cp-tag\">cloud-vision</span></li></ul>\n</div>\n</div>", ["", "", "", ""]], ["Quiz Bowl", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration We all participate in It's Academic in school and wanted to implement the same ideas into our code</h2>\n<h2>What it does Out of multiple categories, the user could pick which set of questions they decided to answer, but some topics didn't fit</h2>\n<h2>How we built it We used Java through JGrasp</h2>\n<h2>Challenges we ran into While trying to re-run a program with a while loop, we ran into the error of not running the second time through the loop.</h2>\n<h2>Accomplishments that we're proud of We were able to get at least one topic to work.</h2>\n<h2>What we learned To re-run a program doesn't require multiple while loops, but it is better to use do-while loops.</h2>\n<h2>What's next for Quiz Bowl To complete the actual game, so that the user will have the free will to choose any topic to answer and get a decent practice out of the program.</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["SmallFoot", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>I had learned about the concept of an Ecological Footprint in my Environmental Science and Conservation class at UMBC, and it hit me really hard how much of a strain humans are putting on the planet.  It was something I was aware of in the past, but seeing it quantified was a much harder thing to swallow.  I immediately began reading and looking for ways to reduce my own Footprint.  The amount of information was overwhelming, and the size of the changes I would have to make in my own life to contribute in any significant way were staggering.  I thought that if it seemed this daunting to me, someone who is passionate about this subject and wanting to dedicate my life to helping solve the problem, it must be truly off putting for someone who is less knowledgeable about the issue as a whole.  I thought that it would be helpful for people to have a place to go where, not only is their footprint calculated, but they can get help in reducing that figure. </p>\n<h2>What it does</h2>\n<p>This app is built to assess the Carbon emissions and land usage of the user based on a series of questions relating to such things as transportation and eating habits.  The app will then present values, display rankings in relation to the users friends and other users across the nation as a way to help the changes become social (because saving the planet will take all of us).  Thirdly, the app will present a series of suggestion and challenges to help guide the user to a smaller footprint.  Last, the app will conduct weekly surveys of users who can then update their profiles based on their weekly habits.  This is one way to track progress.</p>\n<h2>How we built it</h2>\n<p>After coming up with the idea I went to my roommate Agniva and asked him if my plan was possible.  He was instantly on board.  Agniva introduced Deepanjan to the team and the two of them said they would create the backend, architecture, and business logic of the app.  I ran into Dave one day on campus and though he was hesitant about his abilities, he agreed to take on the challenge of creating a user interface.  I handled the data collection, app design, and writing.</p>\n<h2>Challenges we ran into</h2>\n<p>Honestly, I think it was Dave that may have had the biggest challenge.  We were asking him to create a working Android interface in 24hrs when interfaces weren't his specialty at all.  He had to learn very quickly and implement fresh knowledge.</p>\n<p>Deepanjan told me that he and Agniva spent the first 12hrs simply trying to create the platform.  I heard there discussions and there were a few times that it sounded really intense. </p>\n<p>My challenge was that all the information I wanted was spread across government websites, small scientific organizations and farming blogs.  There wasn't a totalitarian database of calculations and data I could draw from.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Having gotten so far in only 24hrs!  The meat and bones of the app are created; and it wasn't a small undertaking to get that all done.</p>\n<h2>What we learned</h2>\n<p>I think we all learned that coming at a project like this from different specialties and backgrounds is actually a really good thing.  We all had a job that we were trying to do and the team really fit together to make this idea a reality.</p>\n<h2>What's next for SmallFoot</h2>\n<p>Polishing up the UI and Database.  Drawing from more sources would allow for better averages and more accurate measurements to present to the user.  We are going to incorporate ways of making recycling easier; and we are going to create an area of the app dedicated to climate change literacy.  Finally, we are hoping that in the future we can make the app have a more competitive spirit between users by awarding SmallFoot swag- and maybe even sponsor swag- to make the process of reducing your footprint a more immediate reward.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">vs</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sql\">sql</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag\">hope</span></li><li><span class=\"cp-tag\">determination</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://SmallFoot.visualstudio.com/SmallFoot/ADD-TLabs%20Team\" rel=\"nofollow\" target=\"_blank\" title=\"https://SmallFoot.visualstudio.com/SmallFoot/ADD-TLabs%20Team\">\n<i class=\"ss-icon ss-link\"></i>\n<span>SmallFoot.visualstudio.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I came up with the initial app idea, collected data from the web, and helped design the user interface.", "Android UI", "", ""]], ["Super Special Awesome College Simulator 2016", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We are college kids and we thought it would be cool to make a program that simulates college life.</p>\n<h2>What it does</h2>\n<p>It offers the user typical college situations and the user must choose what they will do.  What the user might not expect is that there are some things that are out of their control and up to chance, and their score is affected by these factors!</p>\n<h2>How we built it</h2>\n<p>In Java, we initialized a score variable and used multiple if else statements (based on user decisions) and random numbers to affect that score </p>\n<h2>Challenges we ran into</h2>\n<p>Compiler errors, code sharing, not enough coding time</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Demoing! Building a program in 24 hours.</p>\n<h2>What we learned</h2>\n<p>We need to leave a lot of time to code.  We should ask real people for help instead of the internet.</p>\n<h2>What's next for Super Special Awesome College Simulator 2016</h2>\n<p>There is still a lot of work to do and many ideas there were not implemented.  We will try to make the point system more realistic and add more factors such as anxiety, motivation, sexual health, etc.  We are open to connecting with University Health Services to get accurate data to better represent the score.  This program will be a tool for prospective students to see what college might be like to help them navigate their first year and avoid downfalls.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["Era of Chaos", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to make a capture the flag game with multiple character. </p>\n<h2>What it does</h2>\n<p>It is a multiplayer tank game. </p>\n<h2>How we built it</h2>\n<p>We build it using Unity 3d.</p>\n<h2>Challenges we ran into</h2>\n<p>The server took to long to set up, and we were fighting with each other. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We got multiplayer and a tank to work and move around separately. </p>\n<h2>What we learned</h2>\n<p>We must work as a team and not overestimate what we can do. If we were calmer and not blaming each other for doing badly we could've made a better game.</p>\n<h2>What's next for Era of Chaos</h2>\n<p>We will try to get the multiplayer to work. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li></ul>\n</div>\n</div>", ["I created the terrain and added the tank.", "I worked on the design and basics of the game, providing insight and effort into almost all the parts of the game.  I was involved in the almost all of the parts, and I attempted to create another type of playable character, but did not have the resources to do so.", ""]], ["Every 10 second Change you Public IP address randomly", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Every 10 second Change you Public IP address randomly \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/418/957/datas/gallery.jpg\"/>\n<p>\n<i>Tor.py Script Output</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<h2>What it does</h2>\n<h2>How I built it</h2>\n<h2>Challenges I ran into</h2>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<h2>What's next for Every 10 second Change you Public IP address randomly</h2>\n<p>In today's Internet world , privacy plays an important role, Tor helps us to changes our public address anonymously through out world.\nMy Python script randomly changes the public IP address every 10 Seconds and displays the location of the IP address \nI have built with the help of Python language and tor application on Ubuntu running on port 9050\nMy script can be used to send anonymous request to any web page with small modification . If we see the server all request seems to originates from different location of the world</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/mthevar/Switching-IP-address\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/mthevar/Switching-IP-address\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Generated the JSON scripts to retrieve the information from the IPInfo", ""]], ["Know all", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We want to make this app because it can be very helpful towards a social justice cause. It can inform people about other people\u2019s religion, which they might otherwise not read or even know about. This can further advise people to not make remarks and offend people, regardless of them realizing what they said or not. We want to make people understand the world around them better especially because of where we live, the United States of America. Its one of the most diverse countries in the world, if not the most diverse. Even just here at this Hackathon, there\u2019s people from so many different cultures. We want to be interesting and/or cool to know someone else\u2019s religion, not to look down upon them because they\u2019re different from yourself.</p>\n<h2>What it does</h2>\n<p>-On first startup of the app, you are greeted with a screen asking you to login/create an account and a scroll list with Upcoming events and News for all of the religions implemented into the app, you must login to choose what Religions to specifically follow and to take advantage of the other Personalization options.</p>\n<p>-When on your feed/Home, Calendar, and your \u201cManage Account\u201d page, you can swipe in from the left and choose between the aforementioned pages.</p>\n<p>-When choosing a certain Religion, each Religion to have a home page where you can read about it (Background, History, their rituals, etc..) </p>\n<p>-Opening the calendar lets you see any upcoming events, specially marked days, or any holidays for the different Religion feeds that you subscribed to/followed.</p>\n<p>-As for the tests, you\u2019ll be able to test your knowledge on different religions, you get to choose which ones to take the test on, and you can also take the full test which will combine many questions from the different religions.</p>\n<h2>How we built it</h2>\n<ul>\n<li>We brain-stormed on the requirements and what all needs to be convered under this  project.</li>\n<li>Worked upon getting the mockups ready.</li>\n<li>We used android studio to start developing it.</li>\n<li>We planned to use sqlite as database.</li>\n</ul>\n<h2>Challenges we ran into</h2>\n<ul>\n<li>We planned of building it as an android app though none of us in the team is familiar with android development.</li>\n</ul>\n<h2>Accomplishments that we're proud of</h2>\n<p>-To get an idea different than the ones already in place.\n-Team work.\n-Learned basics of android development over night.\n-Able to finish the basic functioning of the app.</p>\n<h2>What we learned</h2>\n<p>-Knowledge of android development.\n-Innovative thinking.</p>\n<h2>What's next for Know all</h2>\n<p>-Few parts are still left in the app to be worked upon. If developed with all our milestones decided, this app would definitely serve for good of people.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/swatilax/Know_All\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/swatilax/Know_All\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Country Escape Game", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We are both beginners to coding in Java and to get ourselves more familiar we decided to make a simple game to implement different concepts in the language.</p>\n<h2>What it does</h2>\n<p>This program is an RPG game which allows the user to play as either a spy or a hacker who's goal is to get the spy out of Soviet Russia while being produced by the Russian Government.</p>\n<h2>How I built it</h2>\n<p>We wrote this program using mars eclipse.</p>\n<h2>Challenges I ran into</h2>\n<p>The learning curve was hard to get used to so we basically had constantly had problems with the language.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Finishing it.</p>\n<h2>What I learned</h2>\n<p>I have gotten myself more familiar with the language of java.</p>\n<h2>What's next for Country Escape Game</h2>\n<p>To deepen the plot and to practice more concepts in JAVA.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">mars-eclipse</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n</div>", [""]], ["Body Camera Feed Distribution Network", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Protecting law enforcement and the community by making the video from body cameras easily accessible to all.</p>\n<h2>What it does</h2>\n<p>It encrypts the video stream of a camera using AES encryption and broadcasts that encrypted stream out via a wireless LAN. Anyone in range can download the encrypted data. If the police department decides that the video needs to be public the key will be released allowing all to view the video stream knowing that nothing with the stream has been tampered with. </p>\n</div>\n</div>", ["", "", ""]], ["Cash In!", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>When you split purchases with other people, it's hard to calculate the exact amount of money that each person owes, and people tend to forget who and how much they owe after a while.</p>\n<h2>What it does</h2>\n<p>Cash In! lets you take a picture of a receipt and scans it for items, which are then made into a list in which you can select which person that was bought for. It keeps track of who owes another person and how much they owe. It also keeps an image of the original receipt so you can can view it at a later time.</p>\n<h2>How I built it</h2>\n<p>Cash In! was built using the <code>Django web framework in Python</code>. The front-end is <code>HTML5</code> and <code>CSS3</code> with the <code>Bootstrap CSS Framework</code>. All data is stored in a <code>sqlite3</code> database.</p>\n<h2>Challenges I ran into</h2>\n<ul>\n<li>Making sure users can only see what they need to</li>\n<li>Finding a good way to analyze the text that came from the tesseract output</li>\n<li>Submitting a receipt by taking a picture</li>\n</ul>\n<h2>Accomplishments that I'm proud of</h2>\n<ul>\n<li>Writing this in 24 hours </li>\n<li>Having OCR that works often</li>\n<li>Building a Django app from scratch</li>\n<li>Making it (somewhat) extensible</li>\n</ul>\n<h2>What I learned</h2>\n<ul>\n<li>Tesseract</li>\n<li>OCR</li>\n<li>Django</li>\n<li>SQL</li>\n<li>HTML</li>\n<li>CSS</li>\n<li>Javascript</li>\n</ul>\n<h2>What's next for Cash In!</h2>\n<p>We want to add a way to make payments quickly and securely between users. We also want to improve the OCR by giving it more training. One thing we may want to add in the future is support for purchases that don't come with receipts such as online purchases.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/django\">django</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/tesseract\">tesseract</a></span></li><li></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sqlite\">sqlite</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://3f7b7e04.ngrok.io/\" rel=\"nofollow\" target=\"_blank\" title=\"https://3f7b7e04.ngrok.io/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>3f7b7e04.ngrok.io</span>\n</a></li>\n<li><a href=\"https://github.com/ovkulkarni/hackumbc\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ovkulkarni/hackumbc\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the design and user experience of our webpage.", "I made many of the python files that managed the OCR. I designed the logo, and helped with some of the front end pages.", "I designed and made some of the html/css/javascript code we used for our site.", "I wrote the backend and some of the user-facing pages."]], ["SlackInspector", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>SlackInspector</h1>\n<p>This is a slack bot which will add monitoring on the required slack channels and report the messages with details if they are found offensive.</p>\n<h2>Overview</h2>\n<p>This is implemented using </p>\n<ol>\n<li>Hubot - a scriptable chat bot</li>\n<li>MongoDB</li>\n<li>IBM Watson AlchemyLanguage API</li>\n</ol>\n<p>The dashboard is implemented using</p>\n<ol>\n<li>AngularJs</li>\n<li>same MongoDB instance</li>\n</ol>\n<h2>Installation Details</h2>\n<ol>\n<li>Node 6.x and MongoDB have to be installed.</li>\n<li><p>Create a bot integration in Slack web page as mentioned below:\n<img alt=\"Browse Apps &gt; Hubot\" data-canonical-url=\"images/addConfig.png\" src=\"https://res.cloudinary.com/devpost/image/fetch/s--ADUXgxKX--/v1/images/addConfig.png\"/></p></li>\n<li><p>Save the integration by filling the details and save the Slack token generated.\n<img alt=\"Browse Apps &gt; Hubot &gt; Save Integration\" data-canonical-url=\"images/appintegrationsettings.png\" src=\"https://res.cloudinary.com/devpost/image/fetch/s--RZXGQOoP--/v1/images/appintegrationsettings.png\"/></p></li>\n<li><p>Run the following commands for building required node modules and starting the bot:</p>\n<pre class=\"language-nolang\"><code>npm install\nHUBOT_SLACK_TOKEN=xoxb-************-************ ./bin/hubot --adapter slack &amp;\n</code></pre></li>\n<li><p>Add the bot as a normal user in the slack channel where monitoring has to be done.</p></li>\n</ol>\n<h2>Functionality</h2>\n<ol>\n<li>The bot will monitor every message in the channel and checks whether it has any foul words in it. This would be first level of filtering<sup>[1]</sup>.</li>\n<li>If any bad words are found, then the message will be sent to IBM Watson AlchemyLanguage API to get the emotion levels of the message<sup>[2]</sup>.</li>\n</ol>\n<p><img alt=\"FlowChart\" data-canonical-url=\"images/flowchart.png\" src=\"https://res.cloudinary.com/devpost/image/fetch/s--w4DvWT4A--/v1/images/flowchart.png\"/></p>\n<ol>\n<li>If the emotion results of Anger/Disgust/Fear turned out to be greater than 30%, then the users in the Slack channel will be notified with a link to report this. (The user will be unaware of the entire process)</li>\n</ol>\n<p><img alt=\"dashboardview\" data-canonical-url=\"images/dashboardview.png\" src=\"https://res.cloudinary.com/devpost/image/fetch/s--B9M4I-Mw--/v1/images/dashboardview.png\"/></p>\n<ol>\n<li>Upon clicking the link, the report will be submitted. (Stored in MongoDB)</li>\n</ol>\n<h2>Admin Dashboard</h2>\n<p>Admin can login to a web application to see the submitted reports and other statistics.</p>\n<h2>User Dashboard</h2>\n<p>User can see the usage statistics of the words entered with timely displayed graphs.</p>\n<h2>References</h2>\n<p>[1] . Foul Words Dataset - #link#</p>\n<p>[2] . IBM Watson Developer Cloud - AlchemyLanguage API - <a href=\"https://www.ibm.com/watson/developercloud/alchemy-language.html\" rel=\"nofollow\">https://www.ibm.com/watson/developercloud/alchemy-language.html</a></p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/typescript\">typescript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/coffeescript\">coffeescript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/shell\">shell</a></span></li><li><span class=\"cp-tag\">batchfile</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/phanindrakannaji/SlackInspector\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/phanindrakannaji/SlackInspector\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I developed back end code for interacting node server and to make mongo db calls from there", "", ""]], ["Hackman", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration We wanted to design a game for the oculus rift, but it did not work with our computer and we didn't know what else to do, so we decided to use java to put together a pacman game and came up with the title \"Hackman\" as a pun.</h2>\n<h2>What it does It's really just Pacman. It may not be a very original project, but we spent a good amount of time putting it together and learned a bit more about java, considering we basically learned how to code in java from a friend within an hour.</h2>\n<h2>How we built it We looked at some free examples online to help us as a guide to how the program should look because my partner never coded anything before this and I usually use C++ which is pretty different. We took notes on how to set it up and then worked on making the game our own (as much as something like Pacman could be our own) from there.</h2>\n<h2>Challenges we ran into There were a lot of bugs in the code and as we type this there are still some left so we aren't entirely sure that the game will run, but you can see we put effort into the code and had a pretty long night looking up java tutorials online to try to understand the language better. Even if our project wasn't necessarily a success, we still learned a lot from it so we feel like that's a job well done anyway.</h2>\n<h2>Accomplishments that we're proud of We are proud that we managed to spend almost a whole night learning some of the ins and outs of this language because although the program we have written may not succeed, we at least learned some java which is pretty cool and can help us with future projects.</h2>\n<h2>What we learned We learned how to write a little bit of java and that the success of a program isn't necessarily more important than the effort put into the program.</h2>\n<h2>What's next for Hackman If we can get the program running, we would like to figure out a way to customize the game a bit more.</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/maddiew/Hackman/projects/1\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/maddiew/Hackman/projects/1\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Autonomous Parallel-Parking Car", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>kdlsj</p>\n<h2>What it does</h2>\n<p>asd</p>\n<h2>How I built it</h2>\n<h2>Challenges I ran into</h2>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<h2>What's next for Autonomous Parallel-Parking Car</h2>\n</div>\n</div>", ["", "", ""]], ["event.cntxt", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>After waiting in long lines to get into conferences, hackathons, concerts, and other events, we decided that there should be a better way to streamline the check-in/registration process.  </p>\n<h2>What it does</h2>\n<p>event.cntxt uses Estimote beacons to streamline event check-in/registration and gather relevant and useful information about event attendance.  The data collected is displayed in an online web application that the event host can log on and view.  In addition, we integrated the Lyft API to allow attendees to request rides to the event from the mobile application.</p>\n<h2>How I built it</h2>\n<p>We built the web application using JavaScript, HTML5, SCSS and Angular.js.  The mobile application was developed using the Android SDK and Java.  Both parts use Firebase to store back end data.  </p>\n<h2>Challenges I ran into</h2>\n<p>-Using AngularMaterial.js to style the web app\n-Setting up the Firebase database</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>-Lyft API integration\n-Creating a material design inspired website</p>\n<h2>What I learned</h2>\n<p>-Angular\n-SCSS</p>\n<h2>What's next for event.cntxt</h2>\n<p>In the future, we want to add push notifications through the mobile app so that event hosts can get information out to attendees quickly.  We also want to analyze more data for display through the online web app for event hosts to utilize.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/angular-js\">angular.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/scss\">scss</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/estimote\">estimote</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/donniepropst/event.cntxt\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/donniepropst/event.cntxt\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["clackUMBC", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"clackUMBC \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/419/385/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Current system for polling data with clickers is flawed</p>\n<h2>What it does</h2>\n<p>Polls audience with multiple choices</p>\n<h2>How we built it</h2>\n<p>Socket.io mainly for websockets for each user</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/socket-io\">socket.io</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/plotly\">plotly</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/handlebars-js\">handlebars.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://clackumbc.com\" rel=\"nofollow\" target=\"_blank\" title=\"https://clackumbc.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>clackumbc.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Leap Band", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/RbbLW7g6kys?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Leap Band \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/418/748/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Leap Band \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/418/194/datas/gallery.jpg\"/>\n<p>\n<i>One person playing</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Leap Band \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/418/578/datas/gallery.jpg\"/>\n<p>\n<i>Multiple People</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>In HackUMBC Spring 2016, we discovered the potential that the Leap Motion sensor has as a means to interact with art. We were able to create a very personal connection between human and machine, awing the senses by linking our hand motions with sounds and animations . Inspired from our breakthrough, we decided to up the level, creating a multiplayer vision of the new art form with more control over our sound output and visuals. </p>\n<p>Our new project, Leap Band, utilizes the socket server: socket.io, the javascript sdk for Leap Motioon: leap.js, and a flexible javascript library we found for synthesizing sound: wad.js. With these technologies, anyone with a leap motion sensor and a web browser can visit our site and join the band. All of the users of our project can hear each other's instruments and see each other's animations, creating some serious potential for fun jam sessions and a feeling of community among all the leap motion users who have been dreaming of multiplayer games.</p>\n<p>We started our project with a vision and an idea of how to get it done. When hacking time came, we were immediately on task. Eric Hebert and Kevin Miller started working on the web socket server, and Cory Ferrier and I (Nat Baylon), worked on the web client and started researching javascript libraries for visuals and tone production. Three hours in, our socket server was basically set up, and a couple hours after that, our first instrument, made by Cory: the drums, were ready to be tested. The moment we saw that we could play our air drums and hear output on Eric's laptop where we were locally hosting the socket server, we knew that we would be able to accelerate forward and really get going with creating instruments. Then came the piano, which I made, the techno instrument by Eric, and the guitar by Kevin. I got inspiration from Kevin to map the space sensed by the leap motion sensor to an array of pitches, thus creating a scale. The last instrument I made is a blues instrument; the left hand plays chords in the blues progression by moving horizontally, and the right hand plays pitches in the blues scale by moving vertically. We reached our end goal very smoothly and comfortably, and we had a fun time.</p>\n<p>We are proud of our hack, and hope more people can see the potential of interactive art.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/leap-motion\">leap-motion</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/websockets\">websockets</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/socket-io\">socket.io</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag\">es6</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/LeapBand/leap-band-client\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/LeapBand/leap-band-client\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I implemented the first instrument, the drums. Afterwards I did everything for the frontend UI as well as added the visualization system for each instrument. Afterwards I implemented the system by which band members switch to a different instrument.", "I worked on making some  of the instruments, including piano and the Blues. The blues allows a person to jam with themselves; playing chords in the blues progression in the left hand, and the blues scale in the right hand. the left hand moves horizontally,, and the left vertically.", "I helped setup the server with socket.io networking, and having the client communicate with the server. I also helped setup a framework for supporting multiple instruments using the leap motion as input and synchronizing over the network. I helped with making the visualizations go with the beats of the music based on pitch, speed, and other factors.", "I worked on the networking and framework construction with Eric. We wanted to set up a system that would have minimal latency between clients while also allowing new instruments to be added with ease. I also worked on getting the \"guitar\" instrument to function"]], ["morsecrack", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>intersted in learning more languages</p>\n<h2>What it does</h2>\n<h2>How I built it</h2>\n<h2>Challenges I ran into</h2>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<h2>What's next for morsecrack</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n</div>", [""]], ["STUDI-BOT", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/7we1tG0_DdU?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"STUDI-BOT \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/418/725/datas/gallery.jpg\"/>\n<p>\n<i>Working action</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"STUDI-BOT \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/418/721/datas/gallery.jpg\"/>\n<p>\n<i>Break action</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"STUDI-BOT \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/418/722/datas/gallery.jpg\"/>\n<p>\n<i>Standard</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"STUDI-BOT \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/418/723/datas/gallery.jpg\"/>\n<p>\n<i>Candy release action</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"STUDI-BOT \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/418/724/datas/gallery.jpg\"/>\n<p>\n<i>The physical robot</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"STUDI-BOT \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/419/065/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>When you have attention problems it can be hard to know what exactly works for you when you study, and its also just... hard to sit down and make yourself study! We came up with the idea of an 'accountabilibuddy' for studying that encourages you to do your best while also tracking how well your brain is working so you can figure out exactly what works for you personally while you study and what doesn't!\n We really hope STUDI-BOT can eventually turn into a system that can actually help people who have attention and learning problems feel encouraged to work hard and do their best! </p>\n<h2>What it does</h2>\n<p>Combining the pomodoro method with Pavlovian positive reinforcement and the MUSE headband brainwave tracking we made a system that tracks how well you're focusing over a period of time. The study period involves 25 minutes of work, and 5 minutes of break, on a successful break the robot will dispense a candy to encourage the user! To make the app more user friendly we designed a non-threatening character, \"Charles\" to keep you going and cheer you on! At the end of your study session, a graph of your brain wave activity over your study period is displayed so you can figure out what worked for you during your study session and what didn't. </p>\n<h2>How we built it</h2>\n<p>Using python tkinter we made a gui that shows the image of the character during different phases, working, pausing, and resting (for breaks). Using the existing MUSE jdk to access and record data streamed from MUSE into matlab and we plotted the data using a python script using scipy and matplotlib, to show the brain activity of the user over time. The robot was built using cardboard and plastic bottles we found around the hackathon! We constructed in the robot a lever system that mimics that of old fashioned Amish m&amp;m \"machines\" but motorized with a microservo, and powered by the arduino. The python tells the arduino when to drop candy through serial, and then the arduino moves the servo to two predefined locations.  At the end of the session the graph of brain activity is shown in a different window</p>\n<h2>Challenges we ran into</h2>\n<p>We started with doing an android app but discovered we might not be able to communicate from the computer for the arduino to run to the phone, because of limitations on UMBC's wifi network, so we switched to a gui python app. Then muse had some problems with their SDK not being completely available for PC version, so we had to scavenge on the internet for a different solution, eventually, downloading an earlier version of the sdk from google's archives worked. We also had some mechanical problems with converting rotational movement from the servo into horizontal movement for the drawer like system, so he turned out much bigger than we thought he would be and his design varied from what we originally wanted, which was a physical version of the images we made, into a different dude, which is fine because it just means that instead of one friend, you have two! (But in the future we would like him to look like the image! </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>The python gui is multithreaded to work more efficiently and the drawer system works with multiple candies in the system (as it should), also because we weren't even sure if we could get data from the muse, we are very happy that we got the muse to give us data :) </p>\n<h2>What we learned</h2>\n<p>We learned how to work with python TK in a way that updates the timer every second for countdown, how to use the MUSE's data collection software to get data from the head sensor, and when to give up when the UMBC wifi just sucks at giving a reliable ip. </p>\n<h2>What's next for STUDI-BOT</h2>\n<p>We would like for it to have a smaller more efficient physical interface, one that isn't as... clunky (and looks like the original concept), and it would be cool if we could get real time data to alert the user when they aren't paying attention to their task, which would require more time with the muse and a fair amount of data collection and machine learning.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/muse\">muse</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/zimmermegan/STUDI-BOT\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/zimmermegan/STUDI-BOT\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I was the idea person, I came up with this after I saw the muse and thought, wow it would be really cool if I could see what make me focus better while I study. The HRI design and interface design were my main concerns but I also worked with arduino and python TK to get the software to communate with the hardware, also worked to help design the draw system for the candy dispensing. ", "I wrote most of the source code for both the Arduino and the Python Tkinter GUI.", "I created the physical model and candy dispensing mechanisms. To do this, I re-purposed cardboard and empty water bottles to mimic the wooden old fashioned versions of candy dispensers.", "I created the pipe for reading the data from the muse, the python back-end code to process the correct raw data, and the python front-end code to display the data on a series of graphs. I also worked on the android app and muse back-end functionality before we switched to pure python. Finally I created a python app that launches the native windows cmd commands on separate threads to tie the project together with the gui."]], ["SoHungry", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/rNXEzdunIqI?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"SoHungry \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/418/959/datas/gallery.jpg\"/>\n<p>\n<i>Start</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"SoHungry \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/418/978/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"SoHungry \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/418/979/datas/gallery.jpg\"/>\n<p>\n<i>Restaurant Menu</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"SoHungry \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/418/980/datas/gallery.jpg\"/>\n<p>\n<i>Generating QR_Code With Order Information</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p><em>Fast food being too slow</em></p>\n<p><em>Terrible and rude customers slowing down lines</em></p>\n<p><em>Terrible staff and employees that slow down lines</em></p>\n<p><em>Interns peer-pressured to remember and order huge amounts of Starbucks' orders</em></p>\n<h2>What it does</h2>\n<p>Reduces the time invested for food orders by remembering them with a self-generated QR_Code. Additionally, </p>\n<h2>How we built it</h2>\n<p>Ionic + Nodejs with various front-end and back-end modules. </p>\n<h2>Challenges we ran into</h2>\n<p>Dealing with massive amounts of data.\nCreating a system that can scale for huge amounts of orders and users.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Providing a minimum viable product to run.</p>\n<h2>What we learned</h2>\n<p>Never underestimate the power of caffeinated water. </p>\n<h2>What's next for SoHungry</h2>\n<p>Android and iOS market.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ionic\">ionic</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/angular-js\">angular.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/typescript\">typescript</a></span></li><li><span class=\"cp-tag\">qr-code</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sass\">sass</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/VietAnhh/SoHungry\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/VietAnhh/SoHungry\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Snyft", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We knew it would be a long Hackathon so snacks would be a necessity. </p>\n<h2>What it does</h2>\n<p>Delivers snacks to people who request them.</p>\n<h2>How we built it</h2>\n<p>We used the Particle Photon Wifi module as the microcontrolller to conroll a servo wirelessly. The servo is used to press the trigger on the RC controller to make the RC car go forward and backward. Then, we created a website where users can enter their position and have the car drive snacks to them. The website reads their position and sends a message to the Photon telling the RC car how far to drive. </p>\n<h2>Challenges we ran into</h2>\n<ul>\n<li>Figuring out how to automate the driving of the RC car. </li>\n<li>Figuring out how to get the users position and use it to tell the RC car how far to go. </li>\n<li>Integrating Node JS into the project.</li>\n</ul>\n<h2>Accomplishments we're proud of</h2>\n<ul>\n<li>Autonomating control of the RC car. </li>\n<li>Being able to control the car from a website. </li>\n<li>Sleek web site design. </li>\n<li>Learning new things we haven't seen before.</li>\n</ul>\n<h2>What we learned</h2>\n<ul>\n<li>How to use Particle Photon Wifi module like an arduino. </li>\n<li>How to connect Photon to a website.</li>\n<li>How to use  Node JS.</li>\n</ul>\n<h2>What's next for Snyft</h2>\n<ul>\n<li>Longer distances. </li>\n<li>More precise direction. </li>\n<li>GPS. </li>\n<li>Bigger cargo for more snacks.</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/particle\">particle</a></span></li><li><span class=\"cp-tag\">photon</span></li><li><span class=\"cp-tag\">rc</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/servo\">servo</a></span></li><li><span class=\"cp-tag\">wifi</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c\">c</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://snyft.herokuapp.com/\" rel=\"nofollow\" target=\"_blank\" title=\"http://snyft.herokuapp.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>snyft.herokuapp.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Exploring Data from ratemyprofessor.com", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to build fully automated crawl and scrape application that will go through ratemyprofessor.com to explore and visualize the relationship between Quality Score, Difficulty Level, and NLTK Sentiment Analysis of student comment. </p>\n<h2>What it does</h2>\n<p>We collected 351 reviews of 21 professors of UMBC CSEE Department from ratemyprofessor.com</p>\n<p>We were able to write a little script in Python that can take in CSV file of comment to produce a new table with corresponding sentiment analysis. It included whether a comment was neutral or polar(positive, or negative). Each positive and negative polarity has a score, and they add up to 1.  </p>\n<p>Our Graphs:\n-Figure 1. Histogram of Quality Score given a comment was negative, positive, or neutral.\n-Figure 2. Scatter plot of Quality Score vs Positive Sentiment Score of all student reviews.\n-Figure 3. Scatter plot of Average Quality Score vs Average Difficulty Score. Each point represents a professor.\n-Figure 4. Average Positive Sentiment vs Average Difficulty Score. Each point represents a professor.</p>\n<h2>How I built it</h2>\n<p>-We used Python NLTK Sentiment Analysis API to analyze the comment of student and find  a sentiment score and create a new table with a sentiment label and positive sentiment score.\n-We used Excel to create our graphs.</p>\n<h2>Challenges I ran into</h2>\n<p>-We have tried import.i.o. to crawl and import the website, but could not train it to retrieve all the necessary data. One of team members had to manually record the data point.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>-We wrote a script that integrates NLTK API for Python to get the sentiment score of large data set of comment</p>\n<h2>What I learned</h2>\n<p>-We were able to get some insight into what we do not know, and what we can accomplish by improving on our current skill gaps specifically crawling and scraping a website.</p>\n<h2>What's next for Exploring Data from ratemyprofessor.com</h2>\n<ul>\n<li>Write crawling and scraping script to get more data points automatically</li>\n<li>Learn how to produce data visualization using Python</li>\n<li>Work with  more data and learn statistics to get more better insight from data</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/excel\">excel</a></span></li><li><span class=\"cp-tag\">api</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://drive.google.com/open?id=0B-CnV92T0_p5Y19qRmFselgzcjQ\" rel=\"nofollow\" target=\"_blank\" title=\"https://drive.google.com/open?id=0B-CnV92T0_p5Y19qRmFselgzcjQ\">\n<i class=\"ss-icon ss-link\"></i>\n<span>drive.google.com</span>\n</a></li>\n<li><a href=\"https://drive.google.com/open?id=0B-CnV92T0_p5VDh0MU9XdjhBeWM\" rel=\"nofollow\" target=\"_blank\" title=\"https://drive.google.com/open?id=0B-CnV92T0_p5VDh0MU9XdjhBeWM\">\n<i class=\"ss-icon ss-link\"></i>\n<span>drive.google.com</span>\n</a></li>\n<li><a href=\"https://drive.google.com/open?id=0B-CnV92T0_p5a1FjT2hqaUxEbG8\" rel=\"nofollow\" target=\"_blank\" title=\"https://drive.google.com/open?id=0B-CnV92T0_p5a1FjT2hqaUxEbG8\">\n<i class=\"ss-icon ss-link\"></i>\n<span>drive.google.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Pellan Town Tale", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>I like to play old text-based RPGs, and one of the main games I played when I was in middle school was a text-based MMORPG. I wanted to do a project that wasn't too stressful and helped solidify my Python skills, so I wrote this game from the ground up.</p>\n<h2>What it does</h2>\n<p>The player has just arrived at a small town named Pellan town. The townsfolk seem wary of this new arrival, and seem to be particularly scared of the catacomb in the graveyard in the outskirts of town. </p>\n<p>It's a simple text based adventure game where the user inputs commands to interact with the world around them.</p>\n<h2>How I built it</h2>\n<p>I coded this in Python 3, mainly focusing on utilizing its object-oriented aspects. Zones are read in and saved in an object from .txt config, as are NPCs. </p>\n<h2>Challenges I ran into</h2>\n<p>Designing this was a bit of a challenge. Handling how interactions are handled and how information of the area around the player is handled took some thinking.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>That I made this and it's not entirely broken.</p>\n<h2>What I learned</h2>\n<p>More about object-oriented Python 3. That Python is amazing, and can do things like having a dictionary of functions.</p>\n<h2>What's next for pellan-town-tale</h2>\n<p>I might continue to work on it. I want to add more interactions to the NPCs and have stuff like an item drop system, a shop system, and a stats system.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/lwbrown42/pellan-town-tale\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/lwbrown42/pellan-town-tale\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["D\u00e9fitness - Pundamainia", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"D\u00e9fitness - Pundamainia \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/418/651/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"D\u00e9fitness - Pundamainia \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/418/507/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"D\u00e9fitness - Pundamainia \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/418/481/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"D\u00e9fitness - Pundamainia \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/418/483/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"D\u00e9fitness - Pundamainia \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/418/508/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"D\u00e9fitness - Pundamainia \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/418/509/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"D\u00e9fitness - Pundamainia \u2013 screenshot 7\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/418/484/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"D\u00e9fitness - Pundamainia \u2013 screenshot 8\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/418/494/datas/gallery.jpg\"/>\n<p>\n<i>PebbleCloud</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"D\u00e9fitness - Pundamainia \u2013 screenshot 9\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/418/654/datas/gallery.jpg\"/>\n<p>\n<i>Octocat Doodle Challenge! \"We are FIRED UP!\"</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"D\u00e9fitness - Pundamainia \u2013 screenshot 10\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/418/655/datas/gallery.jpg\"/>\n<p>\n<i>Soylent Doodle Challenge! </i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Many apps can track your activity, but they are boring! Working out for mere statistics makes exercise seem like a chore. With our app, we wanted to make exercise more exciting than ever.</p>\n<h2>What it does</h2>\n<p>Using a variety of fitness challenges, our app encourages people to get up and move. Users will perform an exercise (running, high knees, butt kicks) for a certain time or distance (50 m, 100 m, 200 m/ 1 min, 3 min, 5 min) corresponding to the difficulty level (easy, medium, hard, respectively).  </p>\n<h2>How we built it</h2>\n<p>We programmed the app in PebbleCloud using the C language. </p>\n<h2>Challenges we ran into</h2>\n<p>The first challenge we ran into was the biggest. As high school students, we have limited programming experience; Besides that, none of us had ever even learned the C language! We did our best to learn it in the first few hours.\nSome difficulties we had with programming were controlling the buttons, synchronizing them with screen changes, and measuring the distance traveled by the user. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are proud of getting the app to work. </p>\n<h2>What we learned</h2>\n<p>Asking a mentor for help is very useful! Also, a lot of persistence is needed to learn an new language.</p>\n<h2>What's next for D\u00e9fiteness</h2>\n<p>We plan to add a larger variety of challenges with different difficulty levels and exercises. In addition, we want to add a leader board so users can see their own and their friend's high scores for friendly competition. </p>\n<h2>Our Domain</h2>\n<p><a href=\"http://www.pundamainium.org/\" rel=\"nofollow\">http://www.pundamainium.org/</a></p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c\">c</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Tellawn/deFit\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Tellawn/deFit\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://cloudpebble.net/ide/project/366883#\" rel=\"nofollow\" target=\"_blank\" title=\"https://cloudpebble.net/ide/project/366883#\">\n<i class=\"ss-icon ss-link\"></i>\n<span>cloudpebble.net</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Snapstreet VR", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Build Your World in a Snap</h2>\n<p>When we were kids, we built entire worlds out of simple shapes and watched adventures unfold from above. Using the HTC Vive, Snapstreet lets you build your world with easy tools and then take a step into it just like we've always dreamed of. Building Blocks are a toy of the past when you can make your imagination into a <em>virtual reality</em>.</p>\n<h2>Features</h2>\n<ul>\n<li>Full room scale VR support with the HTC Vive and Unreal Engine 4.</li>\n<li>Snap together tiles to build a custom city design.</li>\n<li>Teleport around your own virtual space to build to your heart's content.</li>\n<li>Shrink down and explore your city streets from the ground.</li>\n</ul>\n<h2>Challenges</h2>\n<p>As a one man programming team, there was no time for breaks or naps. Figuring out bugs in the code was quite challenging without another developer to rack my brain with, but it was a challenge well worth it for the experience I've gained while working with the project. </p>\n<h2>TODO</h2>\n<p>Here's a list of improvements that could be made to the game, given more time to expand on it:</p>\n<ul>\n<li>Ability to spawn more tiles into the environment</li>\n<li>Custom hand models for world building</li>\n<li>Greater detail for truly interactive worlds</li>\n<li>New types of environments and other dynamics to add to the interactivity</li>\n</ul>\n<h2>Why?</h2>\n<p>Aside from the fun application of using this to build and explore a world, virtual reality has opened up opportunities that we've never had before. We're now not only able to design architecture on computers, but we can physically explore them before turning those plans into real life projects that could range anywhere from a desk chair to an entire city block. This is the future of architectural design.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">htc-vive</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unreal-engine\">unreal-engine</a></span></li><li><span class=\"cp-tag\">steamvr</span></li></ul>\n</div>\n</div>", ["", "", ""]], ["MedAppeal", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"MedAppeal \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/420/514/datas/gallery.jpg\"/>\n<p>\n<i>MedAppeal</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Motivation</h2>\n<p>Medical insurance providers often deny claims. 95% of their customers do not appeal. Of those who do, 61% lose. Meanwhile, 96% of people use the web for legal advice.</p>\n<h2>What it does</h2>\n<p>We ask simple questions about your medical situation then build an appeal using AI.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/react\">react</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li></ul>\n</div>\n</div>", ["I worked on the back-end in Flask/Python and helped worked with the React front-end", "I worked on the React front-end and helped develop content for the expert AI.", "I worked on the binary tree and mapping of key phrases/paragraphs that would serve as the expert AI, designed the logo and made the presentation.", "I also worked on the binary tree mapping and worked on the presentation"]], ["hackUMBadChoices", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"hackUMBadChoices \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/418/592/datas/gallery.jpg\"/>\n<p>\n<i>Choosing</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"hackUMBadChoices \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/418/593/datas/gallery.jpg\"/>\n<p>\n<i>Top</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"hackUMBadChoices \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/418/594/datas/gallery.jpg\"/>\n<p>\n<i>Intro</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>hackUMBC-journey (Now, hackUMBadChoices)</h1>\n<p>VR game project created in 24 hours for the UMBC hackathon.\nWe came up with an idea to develop a Web VR game with multi platform integration.\nIt runs in any modern browser (IE, I'm looking at you) and you can make it run in your VR headset as well, including Google Cardboard, Oculus Rift, HTC Vive, you name it!\nThe domain is set up at domain.com: umbadchoices.com</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag\">a-frame</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/GabrielShaad/hackUMBC-journey\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/GabrielShaad/hackUMBC-journey\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["LyftvsUber", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"LyftvsUber \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/418/566/datas/gallery.jpg\"/>\n<p>\n<i>lyftvsuber</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Ran out of ideas and wanted to do something with the lyft api</p>\n<h2>What it does</h2>\n<p>Brings up a google map and lets the user search for a destination. Then it brings up the pricing and ETA for the Lyft and Uber car services, which the user can then choose from to get a ride.</p>\n<h2>How we built it</h2>\n<p>Android studio, google maps api tutorials</p>\n<h2>Challenges we ran into</h2>\n<p>Incompatibilities with multiple components of the app, android studio was really slow, getting started with google maps</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Getting an app done</p>\n<h2>What we learned</h2>\n<p>Do more research beforehand</p>\n<h2>What's next for LyftvsUber</h2>\n<p>Improvements to the map options like selecting an area to request\nSelect starting destination\nBetter UI\nFix specific cases</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-maps\">google-maps</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/lyft\">lyft</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/uber\">uber</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/adamwang97/LyftvsUber\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/adamwang97/LyftvsUber\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Google map API, lyft functionality", "", ""]], ["Nowate", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Nowate \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/418/491/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Nowate \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/418/561/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>No one likes to arrive at their favorite restaurant and find a huge line waiting for them. Even calling the establishment can be a hassle with busy nights and cranky hosts.  That\u2019s why we created a web application that will allow you to find the wait times of ALL of your favorite restaurants in one place!</p>\n<h2>What it does</h2>\n<p>Nowate.com is an application that crowd-sources data from all users at all restaurants in the area. People at the restaurant submit the number of people in their party and the current wait for that amount of people. The users at home can then input their own criteria and look for the restaurant of their choice. If the line at one is too long, they can look at another! The wait time is measured in minutes, and each submission to the website by users at the restaurant is time stamped. </p>\n<h2>How we built it</h2>\n<p>We used Ubuntu 16 server (Digital Ocean), running an Apache web server with Python Flask in the back-end and HTML with JINJA2 in the front-end. Each location on the site is correlated with a view on the server,  and each view is the final product of multiple HTML files. Each form on the web page has a corresponding Ajax route that sends user data to the server where we can store, manipulate, and analyze it. We also use a mySQL database to store information. Also, we used SSL Encryption in order to protect the data of the users and secure the web page. </p>\n<h2>Challenges we ran into</h2>\n<p>One of the biggest challenges was incorporating the SSL Encryption. It required a very specific process, and the tutorials and keys required to integrate the encryption were not always easy to follow and use. Also, energy was another limiting factor due to the fact that everyone stayed up all night.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are proud that everyone had their own niche in the project whether it was creating the logo or generating ideas. People sometimes forget that coding isn't all that matters when creating a software idea.</p>\n<h2>What we learned</h2>\n<p>We learned how to brainstorm and problem-solve as well as learned how to make a great web design.</p>\n<h2>What's next for nowate.com?</h2>\n<p>Hopefully widespread usage and a more comprehensive database!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/apache\">apache</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mysql\">mysql</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ubuntu\">ubuntu</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://nowate.com\" rel=\"nofollow\" target=\"_blank\" title=\"https://nowate.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>nowate.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["CampusRapeStats", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"CampusRapeStats \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/418/837/datas/gallery.jpg\"/>\n<p>\n<i>2014 Data</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>CampusRapeStats</h1>\n<p>The goal was to raise awareness of sexual violence on campus by creating a website with map visualization of sexual violence statistics in the US. Created with google maps APIs and python's geocoding API, as well as mongodb for processing data. Data collected from the US Department of Education Campus Crime Reports.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://campusrapestatscom.domain.com/\" rel=\"nofollow\" target=\"_blank\" title=\"http://campusrapestatscom.domain.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>campusrapestatscom.domain.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["crowdtunes", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>A friend once mentioned to us that it took him ten years of experience playing jazz music to acquire the instincts necessary to improvise good songs. This comment inspired us to develop a tool that would help computers learn the rules of producing pleasant-sounding tunes.</p>\n<h2>What it does</h2>\n<p>CrowdTunes generates random sequences of tunes and asks users to rank the quality of the song on a scale from 0 to 5. After gathering sufficient votes on each song sequence, it is capable of composing longer songs by combining the highest-rated note sequences. The application also records each note sequence produced and the associated votes, producing training data that could help machine learning algorithms learn the techniques for automatically producing beautiful music.</p>\n<h2>How we built it</h2>\n<p>The bulk of the application was written in python, using the Django Framework to handle back-end processing and database storage. We used the pydub python library to generate random tune and song sequences. Users can interact with the application from a web browser, with a frontend that was built in HTML, CSS, Javascript, and Bootstrap. We deployed our application on a Platform-as-a-Service cloud called Heroku.</p>\n<h2>Challenges we ran into</h2>\n<p>One of our challenges was to make our songs database match up with our song's file storage system. We also had problems with downloading the same things to run our code with - some of us had Linux and some of us had Windows, but that's good, because that means that we know our website will work with both now. </p>\n<p>On a higher level, the team was not very familiar with the languages and frameworks being deployed, particularly with django. As a result, debugging was rather chaotic, with frenzied research, educated guessing and sometimes random guessing. Our website's model - how it was going to display and organize the music, how the votes would be used, how the songs would be combined, etc. - evolved constantly throughout the process as we learned more about the code's abilities and limitations. </p>\n<p>On a lower level, some of the more persistent issues we encountered dealt with the misalignment between the songs in the database and the songs in the file storage system, avoiding duplicates while generating filenames, and integrating html with python code.</p>\n<p>As a whole, these obstacles mostly stemmed from our naivety about the relevant technologies. In overcoming them we greatly expanded our knowledge base.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>The first time our random song successfully blasted out of the speakers was a great moment for us. It felt great just to be able to create something as artistic through music via seemingly cold and indifferent software. </p>\n<p>It's also interesting to be able to work with and analyze data. Here, we not only collect information but also use it to improve our software continuously. </p>\n<p>We're very happy that we were able to learn such a dense package of technologies in a short time frame, and had fun while doing it.</p>\n<h2>What we learned</h2>\n<p>On a technical level, we learned a tremendous amount about the workings of github, django, html and a variety of other technologies. But perhaps the most illuminating part of our project was just how many consecutive hours we were willing to work on it - hours that few of us would put into our homework assignments. It seems to say something about what motivates people, if something independent of our academic record could inspire such work ethic. It's easy to put your effort into a project if you're working on something cool and meaningful, and are surrounded by equally exciting people.</p>\n<h2>What's next for crowdtunes</h2>\n<p>We want to apply machine learning to the random song generation by analyzing which kinds of note and tempo arrangements receive the most up-votes and weighting our probability distribution accordingly. This information can be stored uniquely for each visitor via a log-in system, and could be plotted via interactive data visualizations. We can also add more criteria for the music such as a wider pitch range, chords, other instruments and a greater tempo variation. To pull all of these elements together, we could work on boosting the website's popular appeal through better graphics and a robust incentives structure.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/django\">django</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag\">pydub</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/heroku\">heroku</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/github\">github</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://crowdtunes.herokuapp.com\" rel=\"nofollow\" target=\"_blank\" title=\"http://crowdtunes.herokuapp.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>crowdtunes.herokuapp.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I helped come up with the idea and develop the initial designs.  I also learned a lot about using django python for web development.", "", "", ""]], ["Punchr.io", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Punchr.io \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/418/617/datas/gallery.jpg\"/>\n<p>\n<i>Menu</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We initially picked up a Pebble smartwatch, but had trouble deciding what to do with it. We then asked a <em>graduate student</em> for advice, and he said we should do any stupid and ridiculous thing we could come up with. So someone suggested an app that measures and quantifies punches.</p>\n<h2>What it does</h2>\n<p>You press a button on the watch, wait until the countdown ends and the device vibrates, then punch something. The app logs accelerometer data to the phone for punch analysis and exits. The phone displays interesting and relevant statistics.</p>\n<h2>How we built it</h2>\n<p>We used a linux-based sdk on linux virtual machines, as well as the CloudPebble online IDE, to write C code for the pebble. Additionally, we used Android Studio to create the proper Android app for logging purposes.</p>\n<h2>Challenges we ran into</h2>\n<p>Pebble documentation isn't very well organized, and error codes are not always very expressive in what causes them, so we figured out how to make proper event handling that doesn't crash.</p>\n<h2>What we learned</h2>\n<p>We probably never want to develop for the Pebble ever again.</p>\n<h2>What's next for Punchr.io</h2>\n<p>We might implement a sharing feature, but that will not be directly on the Pebble smartwatch since it's a terrible device.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/pebble\">pebble</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c\">c</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag\">cloud</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/llamapunch/AndroidLogger\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/llamapunch/AndroidLogger\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/llamapunch/watchapp\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/llamapunch/watchapp\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Figured out most event handling, tuned logging and accelerometer code, made graphics.", "I made the ui, including the button click for the pebble app. I also centralized the code that other members wrote.", "Integrated the inter-device communications with existing cloud-based technologies", "I worked on the Android app that logged the data and created the graph."]], ["Brain Game Supreme Extreme Mega Adjective Amazing App!", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://player.vimeo.com/video/185208910?byline=0&amp;portrait=0&amp;title=0#t=\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to make a application that focused on the act of focusing! So we started brainstorming and looked into brain games mixed with a set schedule to keep on tracking while studying.</p>\n<h2>What it does</h2>\n<p>Currently our app is a proof of concept and uses a basic GUI to notify you that you have been studying for a certain amount of time and gives you the oppertunity to take a small break by selecting a random \"brain game\" from our list. After another set time the user is notified that their break is over and is asked to continue studying, we think this will greatly increase some students productivity as they will be able to step away for a second and get other creative juices flowing hopefully increasing the overall focus and quailty of work. </p>\n<h2>How we built it</h2>\n<p>Our app is a somewhat simple mock up made in python to show how easy this would be to implement!</p>\n<h2>Challenges we ran into</h2>\n<p>We had quite a bit of trouble using commands from easygui as there is not much documentation on how it works. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>That we we're able to get past the very picky loops for python.</p>\n<h2>What we learned</h2>\n<p>Brainstorming is very important!</p>\n<h2>What's next for Brain Game Supreme Extreme Mega Adjective Amazing App!</h2>\n<p>Hopefully if others show interest we can make a much more clean UI with exact data for our timing system. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n</div>", ["Programmed using pythons devilish loop system.", "Tested, and researched"]], ["The Tree of Knowledge", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<pre class=\"language-nolang\"><code> The Tree of Knowledge grew out of a common dilemna we had when trying to learn new skills. Often, we did not know where to jump into a new skill, or the literature on that new skill was disorganized and lacked focus. We decided that a tree structure would provide an excellent means of organization, and would allow us to show the connections between skills. As soon as we saw the fliers for HackUMBC go up, we knew we had to build it.\n</code></pre>\n<h2>What it does</h2>\n<pre class=\"language-nolang\"><code> The Tree of Knowledge is a website which allows users to easily jump into a new topic. The demo we built today uses programming as a broad topic area, but the site could be extended to other STEM fields, and even to the humanities. Categories are then listed under the broad topic area (in this case Java and Python), and from there users can open up links which teach them everything from basic syntax to more advanced functions. We have made every effort to source the links from reputable websites, and we have also added an editing feature so that selected users may make changes to the site.\n</code></pre>\n<h2>How we built it</h2>\n<pre class=\"language-nolang\"><code> The Tree of Knowledge relies heavily on JavaScript; in particular, we made extensive use of the AngularJS library. The tree is stored as a JSON (JavaScript Object Notation) object, which is stored server side and sent to the client side via a Java Rest API. From there, the JSON is parsed by the JavaScript, and topic names and other content are printed as tables. From here, some CSS and Bootstrap magic is used to make the diagram display nicely. It is worth noting that editing the webpage in browser actually edits the JSON. \n</code></pre>\n<h2>Challenges we ran into</h2>\n<pre class=\"language-nolang\"><code> Our biggest issue was visualizing the JSON in a way that looked like a tree diagram. Originally, we had planned to use lines drawn with the Canvas tool, but we had difficulties sizing and resizing the canvas. We later tried using SVG lines, before deciding to ditch the idea of lines entirely. We found that the site looked enough like a tree diagram as is that drawing lines between the elements would have created unnecessary clutter.\n</code></pre>\n<h2>Accomplishments that we're proud of</h2>\n<pre class=\"language-nolang\"><code> Overall, we are very proud of our finished product. We believe that our demo is solid enough to demonstrate the format we have created, and that we could apply this format to other areas. We are proud of the fact that The Tree of Knowledge is a simple yet powerful format for organizing data that could be useful to educators as well as learners.\n</code></pre>\n<h2>What we learned</h2>\n<pre class=\"language-nolang\"><code> Entering the hackathon, Zach and I (Matthew) had a very minimal understanding of Java and JavaScript. We learned very much about these two useful languages and how they can interact to produce complex web apps. Mark had a relatively high level of knowledge of both of those languages going into this project, and he too was able to advance his skills, as well as learn about how JavaScript and Bootstrap integrate into webpage design. \n</code></pre>\n<h2>What's next for The Tree of Knowledge</h2>\n<pre class=\"language-nolang\"><code> Our development team hopes that The Tree of Knowledge can be expanded upon and developed into a useful tool for learners and educators in all fields. We will either expand the site to cover topics besides programming, or find a way to create a templated version of the tree that can be filled with custom content. Furthermore, we would like to integrate accounts somehow so we can designated editors besides ourselves, and so that people can keep track of visited parts of the tree. The Tree of Knowledge is in its elementary stages, but with the right support, it can grow into something much greater.\n</code></pre>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/angular-js\">angular.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/mgr1/Tree_of_Knowledge/tree/HackUMBCF16\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/mgr1/Tree_of_Knowledge/tree/HackUMBCF16\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["onTracker", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"onTracker \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/418/148/datas/gallery.jpg\"/>\n<p>\n<i>Temp UI</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to create an extension which would help users be more efficient when working with the internet</p>\n<h2>What it does</h2>\n<p>Currently, it keeps track of Top 5 Websites Visitied, a piece of code which would warn users if they decide to go onto a site which they deem to be non-efficient (i.e. User inputs \"facebook.com,\" then a warning would be given to the user everytime he or she goes to a Facebook link, an alarm which will sound if the user is inactive, a note taking section, and hopefully more before the expo. </p>\n<h2>How we built it</h2>\n<p>We built it using Javascript, HTML, CSS, and the Chrome API's.</p>\n<h2>Challenges we ran into</h2>\n<p>Overall, working with Chrome was difficult, since it was our first time building a Chrome extension</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are proud of the fact that we made a decently functioning Chrome Extension</p>\n<h2>What we learned</h2>\n<p>We learned what goes behind building Chrome Extensions, as well as learn the Chrome API's</p>\n<h2>What's next for onTracker</h2>\n<p>Hopefully, add more features, with \"Time Spent on Websites\" being a priority</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/chrome\">chrome</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["TableWars", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"TableWars \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/418/065/datas/gallery.jpg\"/>\n<p>\n<i>Keyword Suggestions. Medieval men fighting. Retrieved October 2, 2016, from Keyword Suggestions</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We were inspired by tabletop games. </p>\n<h2>What it does</h2>\n<p>It allows the player to position its fighters and jump in and actually join the fight.</p>\n<h2>How I built it</h2>\n<p>We used Unity and C#.</p>\n<h2>Challenges I ran into</h2>\n<p>Getting the map scale in the game right.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>This is one of the first VR games that we've made. And to do it in 24 hours makes us even more proud.</p>\n<h2>What I learned</h2>\n<p>We learned about object oriented design.</p>\n<h2>What's next for TableWars</h2>\n<p>Hopefully, update the art and visuals. Maybe add more classes.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag\">vr</span></li></ul>\n</div>\n</div>", ["I designed the terrain and locations.", ""]], ["flopstream", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>flopstream</h1>\n<p>flopstream is a website that exists to allow those who do not have musical floppy drives to experience their compositions in retro. By uploading a midi file to the site, it will be played, recorded, and uploaded to youtube for anyone to see.</p>\n<h2>Goals</h2>\n<p>The main goal for this project was for it to be functional, and actually allow the hardware to talk effectively with both the web server as well as the youtube api.</p>\n<h2>Challenges</h2>\n<p>There were many different challenges that we faced while working on this project which served to help us learn more about how to solve the very problems. Using the express.js framework on NPM turned out to be extraordinarily helpful, as many issues has been at least partially solved already.</p>\n<h3>Hardware To PC</h3>\n<p>Getting the hardware to talk to the PC was difficult because the Arduino communicates with a Java Swing application. With a minimal amount of time available to us, we ended up using the <code>robotjs</code> package to have our program control the mouse, and therefore the drives. This solution reminded me strongly of AutoHotkey, and proved to be an entertaining bodge.</p>\n<h3>Recording the Drives</h3>\n<p>To actually record the drives, we planned initially to use a raspberry pi camera, but found that MLH didn't have any for use to use. Our backup ended up being my laptop's webcam, which presented an interesting challenge to get both the video and audio recorded from a command line application. The eventual solution became to use VLC Media Player's command line interface.</p>\n<p>This, and many other instances of external Linux commands in this project were accomplished using <code>shelljs</code>, which made it easy to run commands and retrieve their output.</p>\n<h3>Uploading to YouTube</h3>\n<p>Uploading to YouTube ended up being as simple as calling a free command line application. After caching the o-oath token, the process is seamless and provides the url back to the express application for insertion into the page.</p>\n<h2>Moving Parts</h2>\n<p>Getting all of the different parts of this project moving and working together turned out to be a very challenging and rewarding experience. I ended up working on the majority of all the back end work for making the application work, while David spent most of the time crafting the user interface so that it would be easy and simple to submit a file and get a YouTube link back. About half of our time was spent working on the individual parts of the project, while the rest was spent integrating it all together, and we finished with more than 6 hours left to sleep before the exposition!</p>\n<h2>In conclusion...</h2>\n<p>This was a very fun project to work on as a team, and one that served to get both of us much more acquainted with both node.js as well as express.</p>\n<h4>Developed by @ocelotsloth &amp; @bruno207 at Hack UMBC 2016</h4>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/shell\">shell</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag\">diy</span></li><li><span class=\"cp-tag\">recycled</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/ocelotsloth/flopstream\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ocelotsloth/flopstream\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on getting all of the hardware and API's talking to one another. Once the front end was complete, it all was able to fit together with relative ease, which was pretty cool to see.", "I spent my time building the Front-End of the web app with express, bootstrap and the Jade tempting engine. I have worked with bootstrap before but have not done any js work. Working on this hack with Mark gave me the opportunity to build in an entirely foreign environment and come out with a successful hack."]]]