[["Polyglot", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Polyglot \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/539/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Polyglot \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/546/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Polyglot \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/547/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>POL\u00b7Y\u00b7GLOT</h2>\n<p>/\u02c8p\u00e4l\u0113\u02cc\u0261l\u00e4t/ noun: <em>a person who knows and is able to use several languages</em></p>\n<p>During our trip to Japan last Summer, we were having difficulties communicating with the people to ask for simple things such as  directions, ordering foods, how much things are worth, \" how do i get from (place) to (place)\" , \"where is the nearby restroom\" , \"how much is this bag worth\" ,\"what is the favorite food here\" &amp; \"can you please take a picture of us\". The experience propelled us to create a device that will enable people to communicate with each other without language barriers.</p>\n<h2>What it does</h2>\n<p>Polyglot translates speeches to our conversation counter-party. Furthermore, by using the smartphone app we created, our partner will be able to select from the list of languages available the desired language they want to hear. </p>\n<h2>How we built it</h2>\n<p>By using two Raspberry Pi, one of the Pi becomes the client where it has the Google speech to text API and transfer the .txt file to the server using sockete io. Then the server recieve the file that it translate and turn it into speech using the Microsoft API. The server Pi is also connected to an android device and they act as client and server respectively. The android device sends the language that they want to hear and the Pi set it in the device. </p>\n<h2>Challenges we ran into</h2>\n<p>Connecting all the devices (two Raspberry Pi and Android Application) together. Learning the microsoft and google API for translating the speech. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Finishing the devices and finally able to know what people are speaking. Able to freely control the language selection through smartphone</p>\n<h2>What we learned</h2>\n<p>Learned API's, JSON, Http Protocol, Fragments, Threading </p>\n<h2>What's next for Polyglot</h2>\n<p>We believe Polyglot will be able to redefine the term \"communication\". Since what we have now is a one-way communication device, we would like to further developed it so that it will be two way. In addition, we would like to implement onboard processing to eliminate the hassle of relying on Wi-Fi. Definitely a lot smaller with a more stylish design &amp; making it a wearable technology. Finally, we would like to add more languages to our database without compromising fluency and/or accuracy.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag\">shellscript</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/socket-io\">socket.io</a></span></li><li><span class=\"cp-tag\">microsoft-cognitive-services</span></li><li><span class=\"cp-tag\">bing-speech-api</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/fernando0315/Polyglot.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/fernando0315/Polyglot.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Speak EZ", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Speak EZ \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/648/datas/gallery.jpg\"/>\n<p>\n<i>Home Page</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Speak EZ \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/649/datas/gallery.jpg\"/>\n<p>\n<i>Speech Options</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Speak EZ \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/650/datas/gallery.jpg\"/>\n<p>\n<i>Speech Analysis Page</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Speak EZ \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/647/datas/gallery.jpg\"/>\n<p>\n<i>Speech Analysis Results</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Speak EZ \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/646/datas/gallery.jpg\"/>\n<p>\n<i>Speech Analysis Results Continued</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Speak EZ was inspired by my Engineering, Innovation, and Design class, where we were given the task to design a phone system.  While thinking of ideas for the task, I thought that maybe an app to help you learn to speak better through speech analysis would be helpful.  So at HackHarvard, I decided to built this app.  While implementing the app, I was not sure which speech API would be best, so I decided I would build in the Google, Apple, and Microsoft APIs that I had access to for speech recognition, and allow for easy switching between the three.</p>\n<h2>What it does</h2>\n<p>The app will talk to you by using AVSpeechUtterances, explaining all of the commands and functions as the user explores the app.  The user is then prompted with three speech modes, timed presentation, interview question, and freestyle.  Each speech mode is slightly different, where the timed presentation will give the user feedback on their current time, the interview question will pick a random question for the user to talk about, and freestyle just analyzes any speech.  In the analysis of speech, Speak EZ looks for:</p>\n<p>Time/Length of Speech,\nFiller words (ex. um, uh)\nSentiment Analysis word by word (Positive/Negative)\nCommon Word Choice\nWord Complexity (Difficulty of words)</p>\n<h2>How I built it</h2>\n<p>I built Speak EZ in XCode 8 with Swift 3.  It was made with the integration of Google, Apple, and Microsoft's speech APIs in order to give the user a choice of whichever API they like best.  The speech analysis is mostly done through Microsofts Cognitive Services APIs.</p>\n<h2>Challenges I ran into</h2>\n<p>One of the biggest challenges I ran into is the detection of filler words.  Most speech APIs filter out filler words like um, as it is unlikely that people actually want to say them.  </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I am proud that I got all three speech APIs working as well as the sentiment and frequency analysis.</p>\n<h2>What's next for Speak Ez</h2>\n<p>I will continue to work on it and if I am satisfied with the results, I would like to publish it.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/objective-c\">objective-c</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ios\">ios</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-web-speech-api\">google-web-speech-api</a></span></li><li><span class=\"cp-tag\">microsoft-speech-api</span></li><li><span class=\"cp-tag\">microsoft-sentiment-analysis-api</span></li><li><span class=\"cp-tag\">apple-speech-recognizer</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/avfoundation\">avfoundation</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Averylamp/Presentor-Practice\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Averylamp/Presentor-Practice\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Ace The Interview", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Being in third year of university, it was that time of the year where each one of the team members had to go through the dull and tedious process of filling out job applications. Following this tedious process, would generally be an interview of some sort to evaluate the candidate against the job requirements and criteria. However, in today's world, we, as applicants, are able to see a paradigm shift in the classic interview process - most interviews are turning into online (webcam) based interviews which record the candidate's answers and analyze the answers based on machine learning algorithms. Having to answer through a webcam while being timed certainly adds to the nerve racking experience that an interview usually is. Our product, thus helps you to practice your interviewing skills through mock interviews on our website, and provides feedback and tips on how to improve based on multiple machine learning algorithms.</p>\n<h2>What it does</h2>\n<p>Our product is a web-application that provides one a platform to practice online interviews and receive quick and accurate feedback on their responses based on machine learning analysis. The experience involves a 2 step process which first: includes a mock webcam based interview and second: provides the user with personalized feedback. The interview questions are behavioural to prevent loss of generality and provide feedback based on various factors including but not limited to: facial expressions, vocabulary used, and delivery of speech. The final phase of the website, provides the feedback in conjunction with graphs that visually depict the statistical performance of the candidate. </p>\n<h2>How we built it</h2>\n<p>We used node.js for the back end and express to handle with routing. To transfer data between the client and server, we used socket.io. The audio is transcribed into text using Watson API and the plots are made with charts.js.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>One of the greatest accomplishments of this project involves being able to provide a solution to others facing the same challenges as us when it comes to online interviews. Knowing that we can make a positive impact amongst many other interviewees through our platform, most definitely adds to the achievements of the team.  </p>\n<h2>What we learned</h2>\n<p>We gained a great deal of exposure to different API's, machine learning algorithms, and different web architecture design patterns.</p>\n<h2>What's next for Ace The Interview</h2>\n<p>The next steps for Ace the Interview involves improving the current platform further by adding our own machine learning techniques to provide more accurate feedback. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ibm-watson\">ibm-watson</a></span></li><li><span class=\"cp-tag\">cognitive</span></li><li><span class=\"cp-tag\">microsoft-api</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/chart-js\">chart.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/socket-io\">socket.io</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/stanleysu/aceInterview\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/stanleysu/aceInterview\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Arrow-AI", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Arrow-AI \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/765/datas/gallery.jpg\"/>\n<p>\n<i>Arrow-AI</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>ArrowAI</h1>\n<p><a href=\"https://azuredeploy.net/\" rel=\"nofollow\"><img alt=\"Deploy to Azure\" data-canonical-url=\"http://azuredeploy.net/deploybutton.png\" src=\"https://res.cloudinary.com/devpost/image/fetch/s--5trKx4yN--/http://azuredeploy.net/deploybutton.png\"/></a></p>\n<h2>What is ArrowAI?</h2>\n<p>ArrowAI is a medical diagnostic assistance tool that currently helps with the diagnosis of Huntington\u2019s disease, but can be expanded to assist with a variety of other movement disorders. </p>\n<h2>What is Huntington\u2019s Disease?</h2>\n<p>Huntington\u2019s is a progressive neurodegenerative disorder that often present later in life with no earlier indications. It is a dibilitating disease for which there is no cure. However, early detection allows for management that helps releive some of the morbidity associated with the disease. </p>\n<h2>What does this tool do?</h2>\n<p>ArrowAI uses the LeapMotion sensor to capture motion of the hand and note abnormalities in hand motions to assess the onset and severity of the disease in those at risk. In addition to using motion capture, rather than relying on hard cutoffs, ArrowAI uses a cloud based learning model to learn from the test results or normal and control subjects to increase diagnostic accuracy over inflexible guidelines. </p>\n<h2>How do I use this?</h2>\n<ol>\n<li> Plug in your LeapMotion sensor </li>\n<li> Click the start test button below</li>\n<li> Follow the instructions for each test</li>\n</ol>\n<h3>Note: This test is not definitvely diagnostic, but rather is to help people catch their symptoms early so that they can seek help when it will be most beneficial. This is not a substitute for assessment by a health care professional.</h3>\n<h1>Finger Taps Test</h1>\n<p>Tap your finger over the sensor at the height marked by the frame around it. Make sure your finger dips below the height of the frame when going down, and goes above it when coming back up. Do this as fast as you can in 15 second. Place your hand over the sensor when you are ready to begin.</p>\n<h1>Fist- Hand- Palm Sequence</h1>\n<p>Make a fist over the sensor, and then open the hand, and then turn it over. Repeat this sequence as many times as you can over 15 seconds. Place your hand over the sensor when you are ready to begin. </p>\n<h1>Technologies Used</h1>\n<p>LeapMotion sensor gathers raw data and tap detection.</p>\n<p>For Finger Taps Test, when the index finger is pressed under a threshold relative to the leap sensor, a tap is registered. The time between each registered tap is tracked for single tap interval and standard deviation calculation. </p>\n<p>For Fist Hand Palm test, the orientation of palm and clench threshold is used to calculate one \ncycle. Number of cycles, cycle intervals and standard deviants are calculated.</p>\n<p>Sensor data is taken from LeapMotion and processed by Azure Web Apps. By using Azure ML we can detect the progression of the early symptoms to high accuracy and Azure Power BI analyzes data and graphs are shown to the user.</p>\n<p>The end result is a high accuracy tracking device for patients with Huntington\u2019s disease. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/leap-motion\">leap-motion</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/plotly\">plotly</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/azure\">azure</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/declan1397/Arrow-AI\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/declan1397/Arrow-AI\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["BankHero", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"BankHero \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/429/968/datas/gallery.jpg\"/>\n<p>\n<i>Send Money Screen</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"BankHero \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/429/969/datas/gallery.jpg\"/>\n<p>\n<i>Login Screen</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"BankHero \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/429/970/datas/gallery.jpg\"/>\n<p>\n<i>Transfer Money Screen</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"BankHero \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/429/971/datas/gallery.jpg\"/>\n<p>\n<i>Deposit Screen</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"BankHero \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/429/972/datas/gallery.jpg\"/>\n<p>\n<i>Math Calculation for Investing</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"BankHero \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/429/973/datas/gallery.jpg\"/>\n<p>\n<i>Input Screen</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"BankHero \u2013 screenshot 7\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/429/974/datas/gallery.jpg\"/>\n<p>\n<i>Explanation of why to investing</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"BankHero \u2013 screenshot 8\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/429/975/datas/gallery.jpg\"/>\n<p>\n<i>Interactive Advice Screen</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"BankHero \u2013 screenshot 9\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/429/976/datas/gallery.jpg\"/>\n<p>\n<i>Asking BankHero for Advice</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"BankHero \u2013 screenshot 10\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/429/977/datas/gallery.jpg\"/>\n<p>\n<i>Transactions Screen</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>One of the apps that I use the most on my iPhone is the banking app so I can control my financials. Looking at most banking apps they seem to very boring and very convoluted, too many pages, too many options. With an app that so many people use it begs the question, \"Why aren't these apps modern and really useful?\". I set out to make the banking application not only very interactive but also very helpful as well! This is my take on reworking well-known gadget and creating the next iteration of a common solution that is mobile banking. </p>\n<h2>What it does</h2>\n<p>This app is an all-in-one revolutionized banking application that uses Speech-To-Text technology, a beautiful UI/UX and a smart AI to improve the banking experience. This application is feature packed, some notable one is direct interaction with the app using voice commands (ie Navigate the app, request certain data, ask for financial advice), an intelligent algorithm that determines potential financial growth with the user's current banking transactions cross-referencing the financial markets and as well as quick access UI to many banking features. Essentially this application is an interactive mobile teller in your pocket. </p>\n<h2>How I built it</h2>\n<p>The app was built using Swift 3 to create an iOS application for the front end. The application uses Alamofire to create web requests to the Capital One Hackathon API (Nessie), which is the back-end of this application. The iOS application uses brand new iOS 10 Speech Recognition technology in conjunction with API.ai to create a conversational user experience. In additional the FaceBook Pop framework was utilized to create a modern and eye-catching user interface. </p>\n<h2>Challenges I ran into</h2>\n<p>I ran into many challenges some notable ones was finding and API for historic stock market data. The best source for historic stock market data is from Yahoo Finance however they did not use JSON and have little documentation on their API. The only reliable option was to parse a CSV file but many CSV parsing frameworks were not compatible with Swift 3, this lead me to create a robust CSV parser that turns the CSV into a usable dictionary for the app. Another notable challenge I ran into was handling the many networking endpoints from the Capital One API. In many instances, in order to get a particular value you needed to make multiple consecutive network requests and things start to get really messy. Since my application uses voice interaction and does not directly conform to a specific data model, the challenge was to determine the most efficient way to handle the networking layer. </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>One aspect of this hackathon I am proud of is participating as an individual instead of a team. However, I still interacted with many other colleagues and learn things beyond the scope of my app. I am proud that I am able to put a lot of different APIs together to create something cool. </p>\n<h2>What I learned</h2>\n<ul>\n<li>Networking</li>\n<li>AI </li>\n<li>More Swift 3.0 </li>\n<li>Capital One API </li>\n<li>Banking</li>\n<li>Stock Market trends </li>\n</ul>\n<h2>What's next for BankHero</h2>\n<ul>\n<li>Get in contact with Banks to see if they would be interested in applying some of the banking features into their app. </li>\n<li>Consider making the application an extension to existing banking application (if possible) </li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/capital-one\">capital-one</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/api-ai\">api.ai</a></span></li><li><span class=\"cp-tag\">speech-to-text</span></li><li><span class=\"cp-tag\">alamofire</span></li><li><span class=\"cp-tag\">facebook-pop</span></li><li><span class=\"cp-tag\">yahoo-finance</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/objective-c\">objective-c</a></span></li></ul>\n</div>\n</div>", ["I worked on the whole application. First time using the Capital One API and making so many network requests. First time playing around with FaceBook pop and creating a fully interactive conversational UX mobile application. "]], ["Prspectiive", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to allow people to be able to use social media as a mirror, to see what ideas they reflect</p>\n<h2>What it does</h2>\n<p>It takes your twitter feed, then calculates your happiness/positivity levels based off your past 200 tweets</p>\n<h2>How we built it</h2>\n<p>We deployed our Node.js application on the Microsoft Azure Server. Then we used twitter authentication APIs to access a users tweets, retrieving the first 200 tweets. Then using Microsoft Cognition Services APIs, we performed a sentiment analysis on the tweets and calculated your feed's average happiness level.</p>\n<h2>Challenges we ran into</h2>\n<p>Deploying our web application on a server proved to be incredibly difficult. We struggled for all of Friday before manging to accomplish the task on Saturday morning.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>It was our first time creating a full-stack web application from scratch, something that proved to be a very tough, but very valuable experience</p>\n<h2>What we learned</h2>\n<p>Working as paired programmers was an important part of our project and it really helped us learn how to keep calm and positive towards each other, even under great pressure.</p>\n<h2>What's next for Prspectiive</h2>\n<p>We want to integrate more advanced features like topic analysis, so a user can see what kind of topics make up their feed. In addition, we want to implement a tracking feature, so users can see how their topics and sentiment changed over time. Finally we want to actually focus on the aesthetics and user experience of the site, so users can make the most of their prspectiive experience.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/azure\">azure</a></span></li><li><span class=\"cp-tag\">microsoft-cognition-services</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twitter\">twitter</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/angular-js\">angular.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag\">domains.com</span></li><li><span class=\"cp-tag\">microsoft</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://prspectiive.com\" rel=\"nofollow\" target=\"_blank\" title=\"http://prspectiive.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>prspectiive.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Misc Dev Stuff", ""]], ["ConTroll", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"ConTroll \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/730/datas/gallery.jpg\"/>\n<p>\n<i>No More Trolls</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Our original idea was to use Sentiment Analysis to determine whether or not Twitter users were bots, but we soon realized that we could use the same technology for a much better purpose: Helping to make the internet a more friendly place.</p>\n<h2>What it does</h2>\n<p>ConTroll searches through every tweet in which the current user is mentioned, and runs each tweet through Microsoft's Azure Machine Learning Sentiment Analysis and IBM's Watson AlchemyLanguage API, as well as our own algorithm, to determine whether or not the message of the tweet is offensive. If the tweet is determined to be offensive, the author of that tweet is put on a temporary list, and after all tweets have been analyzed and the temporary list has offensive users, the current user can block those trolls with one click. (And should there be a mistake of blocking users by accident, there is a feature to unblock the most recent batch)</p>\n<h2>How we built it</h2>\n<p>ConTroll is written in python, with Flask as the framework, and makes use of a couple different APIs. We used Twitter OAuth to get messages a user is mentioned in and to block/unblock offensive users, and we used Microsoft's Azure Machine Learning Sentiment Analysis to analyze messages that a user is mentioned in. For the front end, we used Material Design Lite and a healthy amount of JavaScript. The app is also hosted on Microsoft Azure.</p>\n<h2>Challenges we ran into</h2>\n<p>One major issue is that the sentiment analysis would give low sentiment ratings to empathetic statements, such as \"I'm sorry for you\" or \"That sucks.\" This wasn't the desired behavior for ConTroll, so we have to implement our own algorithm on top of the sentiment analysis to increase the accuracy of the app.</p>\n<p>Also, we had a pretty major merge conflict and had to manually re-add a lot of code at 8am, so that was pretty challenging too.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>For one, actually finishing any app during any hackathon is pretty good, so we're proud that we at least finished this. Also, we're proud of increasing the accuracy of the sentiment analysis with our own algorithms, and arguably the most important, we're very, very proud of our loading animation.</p>\n<h2>What we learned</h2>\n<p>We learned how to use sentiment analysis to analyze text, as well generally using Flask as a framework for webapps.</p>\n<h2>What's next for ConTroll</h2>\n<p>Allow users to change sensitivity threshold of algorithm and add custom blacklisted words</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/azure\">azure</a></span></li><li><span class=\"cp-tag\">mdl</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ibm-watson\">ibm-watson</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://Con-Troll.com/\" rel=\"nofollow\" target=\"_blank\" title=\"https://Con-Troll.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>Con-Troll.com</span>\n</a></li>\n<li><a href=\"https://github.com/jknollmeyer/ConTroll\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/jknollmeyer/ConTroll\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Developed backend and calls to Twitter API", "Developed the algorithm to determine whether or not a tweet should be considered a \"troll\" using text analysis APIs ", "Developed frontend"]], ["CarryOnAndKeep.com", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Cyber-bullying is an issue that impacts 18.6% of American children, according to the US Department of Education. As victims, and perpetrators of cyber-bullying, we felt compelled to take action against it. We believe that developing a platform where children can feel safe to communicate with each other, like a safe space, if you will, would allow children to effectively learn to not only be successful communicators, but also be politely social, bearing in mind the realities around them. While we understand that reading and analyzing messages is a violation of privacy, we also recognize the values of doing so, so long as a positive end-goal is targeted.</p>\n<p>By teaching bullies to \"keep calm\" and helping victims of bullying to \"carry on\", we hope to guide children into a more respectful future.</p>\n<p>And, we also just sort of wanted to mess with Azure :)</p>\n<h2>What it does</h2>\n<p>Carryonandkeep.com is a simple messaging interface that allows for person to person communication, but also acts as a check on the content of messages being sent. By analyzing the sentiment of messages, and then classifying them through machine learning algorithms, we identify when and how a person is bullying, and alert the sender before it reaches the recipient. While every message is read in a clear violation of privacy, we believe that this infraction could be justified by our reducing bullying.</p>\n<h2>How we built it</h2>\n<p>We built a web app hosted with Firebase and stored data in real time with Firebase, implementing sentiment analysis tools from Microsoft Azure to adjudicate every message. We used Material Design Lite for the front-end design.</p>\n<h2>Challenges we ran into</h2>\n<p>This was our first college hackathon, so we were learning how they work and learning web development as we went. We had quite a few issues with authenticating Azure's API (turns out, we were using the wrong API keys). We hit issues with Firebase's API, as it is not as straightforward as SQL, but were able to overcome those with a little help from our good friend, StackOverflow.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Implementing a messaging service from scratch, while incorporating material design and Google accounts. We added text and image sharing to the table, while maintaining a sleek UI. We used Azure APIs to do complex language analytics, to detect feeling behind messages. We also implemented a machine learning Naive Bayes algorithm to distinguish between self deprecation, bullying, and different offensive types of statements. </p>\n<h2>What we learned</h2>\n<p>We learned a lot about algorithm design, Firebase/NoSQL data structures, Azure, and Material Design! It was a lot of fun, overall!</p>\n<h2>What's next for CarryOnAndKeep.com</h2>\n<p>We hope to continue to improve the fundamental service we provide: a safe space for messaging that prevents microagressions and bullying. We hope to add more language analytics, to detect the type of offensive statement one may be making, and to look at subject and verb sentence structure to more accurately identify harassment. We want to be able to distinguish between emotions and feelings in the text.</p>\n<p>We also hope to turn this into a full fledged messaging service, with group chat capabilities, and an infrastructure that can support a large number of people.</p>\n<p>We also hope to use Twitter and Wikipedia APIs to give more depth to our training set. We also want to let the users report questionable behavior, and add that data to the training set.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag\">material-design-lite</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/azure\">azure</a></span></li><li><span class=\"cp-tag\">domain.com</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://www.carryonandkeep.com\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.carryonandkeep.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.carryonandkeep.com</span>\n</a></li>\n<li><a href=\"https://friendlychat-c038d.firebaseapp.com\" rel=\"nofollow\" target=\"_blank\" title=\"https://friendlychat-c038d.firebaseapp.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>friendlychat-c038d.firebaseapp.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["EchoLock", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"EchoLock \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/065/datas/gallery.jpg\"/>\n<p>\n<i>Effortlessly manage your websites to be authenticated using the Echo.</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>As online security becomes increasingly important, user authentication continues to become more complex and time-consuming for users. We set out to simplify user login by building EchoLock, a pragmatic and secure way to authenticate users. EchoLock is a hassle-free, two-factor authentication system that leverages the convenience of the Amazon Echo. </p>\n<p>With the EchoLock Google Chrome extension, users are offered a non-intrusive experience for accessing the sites they love. The Chrome extension is able to directly interact with the user and store hashed passwords into our MongoDB database. As they are surfing the web and asked to login to one of their websites, EchoLock is able to detect if the password is stored in our database, and makes a call to our API on our EC2 server to activate the Echo. Upon activation, the Echo asks the user if they would like to login, providing a seamless and secure experience for the user.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-alexa\">amazon-alexa</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-ec2\">amazon-ec2</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/chrome\">chrome</a></span></li><li><span class=\"cp-tag\">aws-lambda</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/npm\">npm</a></span></li><li><span class=\"cp-tag\">webpack</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/jackrzhang/EchoLock-Web\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/jackrzhang/EchoLock-Web\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/mayankmmmx/EchoLock-API\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/mayankmmmx/EchoLock-API\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Force", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>My goal is to map all software development to a single platform. ONE, ONE+, and Trinity were the first steps in that mission, but now the platform requires a Turing complete language that can compete with Java and C.</p>\n<h2>What it does</h2>\n<p>Force can replace and seamlessly integrate with any general purpose turing complete language by using a Trinity powered transpiler.</p>\n<h2>How I built it</h2>\n<p>Currently, only documentation exists for Force. However, the syntax of Force is defined by ONE and ONE+, and the compiler will be implemented in Trinity.</p>\n<h2>Challenges I ran into</h2>\n<p>The specification is still incomplete and development on the compiler has yet to start.</p>\n<h2>What's next for Force</h2>\n<p>Force may be the only language I use once it's complete.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag\">one</span></li><li><span class=\"cp-tag\">one+</span></li><li><span class=\"cp-tag\">trinity</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Kaeon-ACE/Force/blob/master/src/force/specification/Force%20Specification.tri\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Kaeon-ACE/Force/blob/master/src/force/specification/Force%20Specification.tri\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["TweetStream", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We are greedy money lovers and we like easy ways of making money. We decided that having others help us predict what stocks to invest in would be a great idea!</p>\n<h2>What it does</h2>\n<p>Our app accepts a company name from the user. \nIt then searches twitter for the first 100 tweets with the company name as an hashtag. \nIt runs each of these tweets through Microsoft's Text Analytics Sentiment API, which assigns a score of 0 to 1, with 0 being negative sentiment and 1 being positive sentiment. \nOur app then finds the raw stock data of the company from Quandl API. \nIt then compares the changes in the twitter sentiment data with the stock market data over the same period of time.</p>\n<h2>How we built it</h2>\n<p>We used Python to build the code that interacted with the Twitter API, and then with Microsoft Text Analytics API. We also used Python to pull the financial data from Quandi API. \nWe used d3.js to display the data and wrote a webpage to host our app. We created the front end using html, css and Js. </p>\n<h2>Challenges we ran into</h2>\n<p>Mapping our data onto a graph was the hardest part for us. It took us a while to find a graphing software, and then it took even loger for us to make it auto generate our data. Collecting the data itself was not too bad. </p>\n<h2>Accomplishments that we're proud of</h2>\n<h2>What we learned</h2>\n<p>We learned a lot about Microsoft's Machine Learning APIs and how to use them in cool ways. We learned how to graph our data using js frameworks and how to present our data in a slick format. </p>\n<h2>What's next for TweetStream</h2>\n<p>This app has huge amounts of potential. When we can expand the number of tweets we can track, from our hard limit of 100 (a rule set by Twitter API) to larger numbers, we believe that the data can become much more reliable and useful in terms of seeing correlations. We are also not limited to tweets, as we could expand our idea and move on to other sorts of social media data.  </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/d3-js\">d3.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twitter\">twitter</a></span></li><li><span class=\"cp-tag\">api</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/azure\">azure</a></span></li><li><span class=\"cp-tag\">mcs</span></li><li><span class=\"cp-tag\">microsoft</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon\">amazon</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/domain\">domain</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://tweet-stream.net/\" rel=\"nofollow\" target=\"_blank\" title=\"http://tweet-stream.net/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>tweet-stream.net</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["a bit of everything. teamwork.", "", "", ""]], ["waypaver", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"waypaver \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/069/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>waypaver</h2>\n<p>Bunch of students who have basically no web experience whatsoever cobble together a little web application over the weekend for Hack Harvard 2016 - waypaver. </p>\n<p><strong>What it does</strong></p>\n<p>waypaver detects the presence points of interests (which are tourist attractions or places for food) along a path between two points. The user then has options to add any of these additional points to their road trip, and a new path (with new attractions!) is automatically drawn for them.</p>\n<h2>How it's built</h2>\n<p>Figured that now is a good of a time as any to try our hand learning some web dev stuff, and we're all pretty decently proud of what we've made. Built using good ol' JavaScript, CSS, and HTML, we also tried out the Google Maps, Geonode, Routes api's (and a few more) Can check it out on our GitHub!</p>\n<h2>Challenges</h2>\n<p>Time and work management - making sure that group members aren't doing the same thing at the same time. Learning basically a whole new area of development - HTML, CSS, JavaScript. Also, getting our domain up and running was a total nightmare: our account was insufficiently privileged to actually edit the site, and we spent a large amount of time tussling with staff and support.</p>\n<h2>What We Learned</h2>\n<p>A lot. A whole lot.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-maps\">google-maps</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://waypavernet.domain.com/\" rel=\"nofollow\" target=\"_blank\" title=\"http://waypavernet.domain.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>waypavernet.domain.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on all of the front end stuff - all the HTML, CSS, etc. Also did the user input to JavaScript things.", "", ""]], ["Worldesque", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Worldesque \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/356/datas/gallery.jpg\"/>\n<p>\n<i>desktop web app</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Worldesque \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/357/datas/gallery.jpg\"/>\n<p>\n<i>Mobile web app</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Worldesque \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/396/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>The theme of the hackathon is \"Hack the past\". Harvard is a world leading educational institution, leading to the birth of many great, world-leading companies including Microsoft and Facebook. We share their vision of making the world more connected. </p>\n<p>As a result of our vision for the world and our curiosity for new technologies, we decided to combine it together and create this great service.</p>\n<h2>What it does</h2>\n<p>1) Take a photo of a road / door / any sign from your phone and upload to the server.</p>\n<p>2) Wait for the magic to happen</p>\n<p>3) View gif which explains what the sign is trying to communicate to you.\n    Using microsoft's translator API, we're able to make this app multilingual. </p>\n<h2>How we built it</h2>\n<p>Our front-end is an web application which is used for capturing and image and uploading it to the server. </p>\n<h2>Challenges we ran into</h2>\n<ul>\n<li>Android app development</li>\n<li>Being able to complete a product with technologies never used before</li>\n<li>Pivoting from Android app front end to web app front end due to tech issues</li>\n</ul>\n<h2>Accomplishments that we're proud of</h2>\n<ul>\n<li>Combine several state-of-the-art Microsoft API in the field of cognitive sciences.</li>\n<li>Combine several back-end technologies and make everything work seamlessly</li>\n</ul>\n<h2>What we learned</h2>\n<ul>\n<li>Android is very challenging</li>\n<li>How to implement Microsoft's APIs</li>\n</ul>\n<h2>What's next for Worldesque</h2>\n<ul>\n<li>Use augmented reality for overlaying the images onto the sign to be replaced in the video stream.</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">microsoft-cognitive-services</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bing-translator\">bing-translator</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bing-search-api\">bing-search-api</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/microsoft-project-oxford\">microsoft-project-oxford</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">php7</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/arghasarkar/HackHarvard2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/arghasarkar/HackHarvard2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Created the full API pipeline that integrates 5 different Microsoft API", "I worked with the front-end of the app using android studio,  and with building the website. ", "", ""]], ["IoC (Internet of Chess)", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/jdfun7hKiwg?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"IoC (Internet of Chess) \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/156/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"IoC (Internet of Chess) \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/157/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"IoC (Internet of Chess) \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/158/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"IoC (Internet of Chess) \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/159/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"IoC (Internet of Chess) \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/267/datas/gallery.jpg\"/>\n<p>\n<i>Stock photo used to initially test output (see output below)</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"IoC (Internet of Chess) \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/268/datas/gallery.jpg\"/>\n<p>\n<i>Terminal output from sampling RBG from pixels in chess piece positions</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>I love the game of chess and hacking hardware, so I set out to make a robot that could play chess better than any human ever could. Combining my idea of robotics with heavier software, we decided to build a web app from which users could play against other users or against an AI, all with the game taking place on a real chess board.</p>\n<h2>What it does</h2>\n<p>Users can play chess on our web app, iochess.com, against another user or an AI. IoChess is designed such that one chess player can play chess on a physical board against a user on the other side of the world playing on the internet. A Raspberry Pi camera mounted above the board samples the current game state and user RGB analysis of pixels from the board photos to determine moves made by the physical user. </p>\n<h2>How we built it</h2>\n<p>IoChess is built using two stepper motors to have control in the x and y axes. A solenoid mounted on a moving platform is able to drag ferromagnetic pieces from beneath the board. Our custom designed and built API handles game states and passes data to the raspberry pi, which stores the current game state. Any changes in game state learned about from the API side are then passed via serial to an Atmel microcontroller, which interprets changes as coordinates and moves the pieces into their newly assigned positions. Pieces that are taken by a web user or AI are placed along a plane beside the board by the robot. </p>\n<h2>Challenges we ran into</h2>\n<p>This was an incredibly ambitious project for a 36 hour hackathon, in terms of both hardware and software. We simply did not have enough time to get everything up and running to our meticulous standards, and we certainly to continue this project over the coming weeks. We did, however, have the opportunity to make an incredible amount of progress in just two days, and we learned to hack on a lot of new technologies. </p>\n<h2>What's next for IoC (Internet of Chess)</h2>\n<p>We ultimately intend to produce IoChess as a stand alone, web-connected unit such that players can play their friends without being in the same room. The robot will simply be present to assist the absent party in physical move making. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag\">stepper</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/docker\">docker</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/kmacdough/hack-harvard\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/kmacdough/hack-harvard\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Wrote a flexible backend API for creating/playing chess games, that allows for games to be made/played on the web or on the board.", "", ""]], ["Lovebird", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Lovebird \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/966/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Haven't we all been that shy little kid with that embarrassing crush? Even though we're in college, everyone has that inner middle schooler in them, wondering if our young love is requited. But some of us are also computer programmers, and don't have the time or the confidence among other things to actually go out and ask. The embarrassing and messy reality that is life will not get in our way! Why not just tell a mutual third party that let's the other know? And why not automate this with a neat little Facebook bot?</p>\n<h2>What it does</h2>\n<p>You basically text Lovebird the name of your crush and it searches through all current users of the bot. If you and you crush both text each other's names, we send you a match! If your crush has not used the bot, we'll keep the crush's name on record and text you once your crush does.</p>\n<h2>How I built it</h2>\n<p>I created a Ruby on Rails site and attached my bot to it. The bot is written in Ruby and it is running on a heroku server, and sends API requests with the Facebook Messenger platform. </p>\n<h2>Challenges I ran into</h2>\n<p>Checking functionality of the bot was difficulty because I constantly had to upload the code to my server and test it through facebook's messenger platform, so I couldn't write basic tests or test features locally.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I did not hurl my computer across the room while dealing with Facebook's mess of a platform that makes testing almost impossible. </p>\n<h2>What I learned</h2>\n<p>Making the core of the project is like 20% of the work. Turning a fun hobby project into a somewhat polished app is like 80% of the work. So many bugs. So many. gah.</p>\n<h2>What's next for Lovebird</h2>\n<p>Hopefully some matches are made ;) We need to get approved by Facebook to go public, so it is limited to some users.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ruby\">ruby</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ruby-on-rails\">ruby-on-rails</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/facebook-chat\">facebook-chat</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/facebook\">facebook</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/heroku\">heroku</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://m.me/yourlovebird\" rel=\"nofollow\" target=\"_blank\" title=\"http://m.me/yourlovebird\">\n<i class=\"ss-icon ss-link\"></i>\n<span>m.me</span>\n</a></li>\n<li><a href=\"https://github.com/rylegames/babble\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/rylegames/babble\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["drunkChess", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"drunkChess \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/413/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We really wanted to go along with the theme of building something off of classic technology. Nothing gets more classic than a good old game of chess, we decided to take it up a notch and make drunkChess.</p>\n<h2>What it does</h2>\n<p>drunkChess is a web app that allows you to play inebriated chess while sober. Challenge friends and test your cognition in this medium to difficult game. </p>\n<h2>How I built it</h2>\n<p>We used node, express, socket diode to communicate to different users, react flux to build up an app location, chess.js for move validation and checkmate detection. We went through different requirements such as putting things on the playfield, looking for checkmate, and whether everything was working for players.</p>\n<h2>Challenges I ran into</h2>\n<p>It was hard integrating everything together, and we still couldn\u2019t host it because it was hard to integrate all the java script technologies together. There was also a lot of debugging which took a long time. </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Some of us are first time hackers and we are proud of how the final product came out. We learned a bit about programming.</p>\n<h2>What I learned</h2>\n<p>We learned how to work with React js, the Facebook framework, and use it. Most of our team didn\u2019t know how to code so we picked up a lot of things from Java</p>\n<h2>What's next for drunkChess</h2>\n<p>We are hoping that we could improve drunkChess to include different levels of play, make it more mobile. Eventually, we would want to make it an available Facebook game.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/SuriGill/drunkChess\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/SuriGill/drunkChess\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Coder's Bragging Rights", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Coder's Bragging Rights \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/317/datas/gallery.jpg\"/>\n<p>\n<i>Cumulative Web Hits</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Coder's Bragging Rights \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/318/datas/gallery.jpg\"/>\n<p>\n<i>Most Popular sites</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Coder's Bragging Rights \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/319/datas/gallery.jpg\"/>\n<p>\n<i>Popular Searches</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Coder's Bragging Rights \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/320/datas/gallery.jpg\"/>\n<p>\n<i>Search Frequency at HackHarvard over time</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>As we sampled for data, it was pretty obvious how touchy a subject data is.  Even for the simple scope of the hackathon, many, many people were unwilling to share.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/chrome\">chrome</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://52.70.98.235/\" rel=\"nofollow\" target=\"_blank\" title=\"http://52.70.98.235/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>52.70.98.235</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["FinishItForMe", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Hackathon are great experiences where we can learn new things and meet new people in exciting new places.\nMany good ideas are born in these events, but some never make it further because contestants go back to their occupations and lack time or simply forget about it.</p>\n<h2>What it does</h2>\n<p>FinishItForMe is a platform allowing us, hackers, to share our ideas with the world so that someone could take over and possibly make the project grow. Most popular projects would gain more visibility and could lead to great community efforts!\nA project is presented with a description, some code and idealy a github link for the community to continue the work on the project. Progress will be available for the creator of the idea to see.</p>\n<h2>How I built it</h2>\n<h2>Challenges I ran into</h2>\n<p>Due to transportation planning issues, we will have to leave before the presentations :(((</p>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<h2>What's next for FinishItForMe</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/asp-net\">asp.net</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/entity-framework\">entity-framework</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Houcine19/FinishItForMe.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Houcine19/FinishItForMe.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Automeet", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Automeet \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/984/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Everyone searching for something: love success...\nBut there is one thing no one can get more of?\nTime!</p>\n<h2>What we found</h2>\n<p>It is hard to remember what time Eddie is free, what time Tony is free. \nAlso, it is hard to know who will be free tomorrow 8 PM for dinner.</p>\n<p>We have a good idea to fix that problem. <strong>How about linking The Calendar from All my friends?</strong></p>\n<h2>What it does</h2>\n<p>As you register, the APP will access user's calendar data, and analyze them.</p>\n<p>It is a smart algorithm, we can tell you what time you can make appointment when both people free.</p>\n<p><img alt=\"Alt text\" data-canonical-url=\"http://i.imgur.com/jmvMY5t.png\" src=\"https://res.cloudinary.com/devpost/image/fetch/s--qJ_K3Tp9--/http://i.imgur.com/jmvMY5t.png\"/>\n<img alt=\"Alt text\" data-canonical-url=\"http://i.imgur.com/t3qUzbN.png\" src=\"https://res.cloudinary.com/devpost/image/fetch/s--_wW2OCrJ--/http://i.imgur.com/t3qUzbN.png\"/>\n<img alt=\"Alt text\" data-canonical-url=\"http://i.imgur.com/8cP2Fsr.png\" src=\"https://res.cloudinary.com/devpost/image/fetch/s--nyCCezOE--/http://i.imgur.com/8cP2Fsr.png\"/>\n<img alt=\"Alt text\" data-canonical-url=\"http://i.imgur.com/71GCSuE.png\" src=\"https://res.cloudinary.com/devpost/image/fetch/s--Wwg_6OFb--/http://i.imgur.com/71GCSuE.png\"/></p>\n<p>As the picture shows, you can easily know who you can make dating with:)</p>\n<p>So finally, this APP will make it easy to make appointment.</p>\n<h2>How we built it</h2>\n<p>We first get the brainstorming, and come up with our ideas.\nThen, we design the<br/>\nWe use Python with flask as the backend coding. HTML as the front end.</p>\n<h2>Challenges we ran into</h2>\n<p>We got trouble into the Google Calendar API\nOur team takes long time to do that.....overnight</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are not a team only do the coding without talking to people.\nIn the other sides, we talk a lot with people. \nWe found \"Capital One\" to help us with debug.\nWe found two new friends from Canada, who give us genuine suggestion for our APP\nWe also make serval new friends from Harvard and MIT team.\nWe gain something other than pure developing.</p>\n<h2>What we learned</h2>\n<p>We have a great team work together, good team spirit:\nGuy working hard on the backend and database; Jack make a web design and front end coding; Kevin do the Android part APP; Yubo do the product design and communication between teammates. \nWe also test our APP with new friends, getting feedback from them.</p>\n<p>We realize that we come as a team, work as a team. We learn that team collaboration should based on what you do. \nPeople respect you not because what you say, but base on what you do.</p>\n<h2>What's next for Automeet Team</h2>\n<p>We are going to add Apple Calendar for future development\nWe hoping for better user experience \nWe are going to make this app into a startup company in our school and let everyone in BU use it.\nWe get confidence and passion on that</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-calendar\">google-calendar</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-dynamodb\">amazon-dynamodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag\">cloud9</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://automeet-zkn.c9users.io/\" rel=\"nofollow\" target=\"_blank\" title=\"http://automeet-zkn.c9users.io/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>automeet-zkn.c9users.io</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Designed the website using html, css and just learned and used Bootstrap for this project", "Backend API in Flask ", "I designed the button and linked it to Google calendars. I attempted to do an android front end of the app.", ""]], ["Spacebaby", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We think SpaceEngine is pretty cool, but find the fact its Windows only limiting. Why not make it available to more people as a webapp?</p>\n<h2>What it does</h2>\n<p>SpaceBaby currently provides a rudimentary scale model of the Solar System, with ambitions to map all of NASA's available data on the Universe. </p>\n<h2>How we built it</h2>\n<p>We built SpaceBaby in Javascript, specifically using the Babylon.js WebGL API. </p>\n<h2>Challenges we ran into</h2>\n<p>The physics for modeling even rudimentary orbits in the Universe turned out to be significantly difficult - quickly expanding into the realm of employing Kepler's Laws. Thankfully we had a physicist on our team, though we were marred by the limitations of the API of our choice. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Even getting the Solar System modeled as far as we did. </p>\n<h2>What we learned</h2>\n<p>How to use WebGL in a basic way, and hopefully, for the future, when to abandon an API that doesn't fulfill our expectations. </p>\n<h2>What's next for Spacebaby</h2>\n<p>General relativity and pure WebGL. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag\">babylon.js.</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/ng1355/spacebaby\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ng1355/spacebaby\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Assisted in coding the orbits for tge individal planets. ", "Provided the physics behind code.", ""]], ["yucky.io", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>yucky.io\ngame that focuses on pathogen influences on cellular level</p>\n<p>files explanation:</p>\n<ul>\n<li>game.js is the main javascript file that codes for the game</li>\n<li>bundle.js is compiled by browserify command\nbrowserify game.js &gt; bundle.js</li>\n<li>player.js defines the characteristics and behaviour of the player object, this should be mostly fine </li>\n<li>node_modules contains the packages npm needs to run the game on a client side dont touch anything there i dont think we need any new packages for now </li>\n<li>package.json contains information for packages and scripts dont touch anything there, it turns out npm manages packages on a directory level and not a global level like homebrew AHHHHHH</li>\n<li>index.html contains a canvas element for javascript to draw on</li>\n</ul>\n<p><strong><em>plans for the future</em></strong></p>\n<ul>\n<li>implement swarming so the red cells change colors and follow the virus around and the swarm grows</li>\n<li>have white blood cells have an opening for the virus to enter and slowly infect </li>\n</ul>\n<p><strong><em>plans for the future future</em></strong></p>\n<ul>\n<li>make this a beautiful mmo game i GUESS</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/lazaroshi/yuckyio\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/lazaroshi/yuckyio\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Multi-functional IoT Oscilloscope (MFIOTO)", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Multi-functional IoT Oscilloscope (MFIOTO) \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/924/datas/gallery.jpg\"/>\n<p>\n<i>Raspberry Pi Screen on MFIOTO</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>What is it</h2>\n<p>MFIOTO is a raspberry pi that is dumping it's terminal output over serial which is read by a Teensy 3.5 Microcontroller.  The Teensy converts the text into analog voltages where it is then plotted on the screen of an oscilloscope that is older than some of our members. With this you can use the Terminal on the pi with the oscilloscope as the screen.  We also added several obvious IoT necessities to the terminal to really make the user at home.</p>\n<h2>Inspiration</h2>\n<p>One of our teammates brought an oscilloscope older than some members of our team, and we thought, why not innovate and disrupt the oscilloscope industry? There hasn't been much change to oscilloscopes lately, and we were determined to change that. We want to make it easy for everyone using oscilloscopes to be able to multi-task while performing their work, as well as provide them the ultimate super-user experience.</p>\n<h2>What it does</h2>\n<p>In additional to full oscilloscope functionality, the MFIOTO is the first oscilloscope with a full operating system, allowing users an infinite range of possibilities. From text editors to running full scale programs, the MFIOTO can handle any task the user throws it. We added a special feature of integration with Twitter, allowing users to easily update their social media while performing other tasks, or on the go.</p>\n<h2>How we built it</h2>\n<p>Using a Teensy 3.5, we generated analog waveforms that was read into the oscilloscope via two channels, and we putthe scope into an xy view mode to get 2 dimensional movement. The output voltage of one channel was read into the oscilloscope as the x-values, whereas the output voltage of the other channel was read as the y-values. Although the signals being analog were continuous, we plotted discrete points onto the display in order to show text. Using a python script, we converted ASCII characters into arrays of \"pixels\", so that they could be populated into the display. Running the Teensy program, we then converted the pixels into analog signals using the built in 12 bit Digital to Analog Converters.  Then these signals were shown on the oscilloscope monitor, allowing text to be shown and refreshed according to the user's requests. Once that was up and running, we connected a Raspberry Pi to our Teensy microcontroller, and was able to route the terminal through to the oscilloscope display. Lastly, we built a couple scripts utilizing the Twitter API, and loaded those into the Raspberry Pi. </p>\n<h2>Challenges we ran into</h2>\n<p>We all lost a bit of our souls each goal we accomplished because this thing should seriously not exist.  I'm still a little mad with myself personally.</p>\n<p>Analog voltages don't behave nicely all the time, which limited our screen resolution.  It's possible with better probes or a purpose built setup we could get a higher Signal to Noise Ratio and get more resolution.</p>\n<p>Backspace is something we took for granted, but turns out it's just an ascii string in disguise that just gets handled by the display. Oh wait, that's us! MFIOTO has full support for pressing backspace and expecting characters to actually disappear.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>MFIOTO is the first oscilloscope that has a full operating system, as well as integration with Twitter. Never in the history of oscilloscopes has technology allowed such performance and convenience available to users.</p>\n<h2>What we learned</h2>\n<p>We learned a lot about hardware programming, as well as converting analogue signals to information that could be used for useful purposes, such as displaying data. We also learned a great deal on how oscilloscopes work, as well as how to operate one.</p>\n<h2>What's next for Multi-functional IoT Oscilloscope</h2>\n<p>Our next steps for MFIOTO is to enable video replay and multi-colored representation on the display, as well as allow users to connect other peripherals to this device for increased productivity. We also want to support different types of oscilloscopes and maybe expand to something else like spectrum analyzers.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">arduino-(teensy)</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li><li><span class=\"cp-tag\">oscilloscope</span></li><li><span class=\"cp-tag\">electrical-engineering</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/love\">love</a></span></li><li><span class=\"cp-tag\">soldering-iron</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/lylecheatham/HackHarvard\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/lylecheatham/HackHarvard\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Askii", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Askii \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/300/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Askii \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/399/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Askii \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/337/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Askii \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/390/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Askii \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/391/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p><strong>fear</strong></p>\n<h2>What it does</h2>\n<p>Users post anonymous questions and receive anonymous answers from other users. Must have a college.harvard.edu email to join. Possible uses include honor code questions, Harvard-specific tips, general advice.</p>\n<h2>How we built it</h2>\n<p>We used Swift to develop an ios app, and we used PHP, HTML, CSS, Python, and Flask to develop a website. ios app and website are backed by Firebase for live updates across all platforms.</p>\n<h2>Challenges we ran into</h2>\n<p>integration of HTML and Firebase for the website, connecting website to domain name</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Fully functional mobile app, sick name</p>\n<h2>What we learned</h2>\n<p>all the hacks (but no hardware)</p>\n<h2>What's next for Askii</h2>\n<p>possible distribution to student body?, adding ability to flag posts, implementation of harvardaskii.com</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xcode\">xcode</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/eazy123/HackHarvard\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/eazy123/HackHarvard\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Learn German - the natural way! ", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Learn German - the natural way!  \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/088/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>AUDIO DEMO: <a href=\"https://www.dropbox.com/sh/1lv8gp6yicc4tz0/AAAPCECZ-Nx2PK82ll80ORCRa?dl=0\" rel=\"nofollow\">https://www.dropbox.com/sh/1lv8gp6yicc4tz0/AAAPCECZ-Nx2PK82ll80ORCRa?dl=0</a></p>\n<h2>Inspiration</h2>\n<p>Our team consists of Quirin and Stephanie. We are an interdisciplinary team made up of an electrical engineer (Quirin) and a communications scientist (Stephanie). We moved to the U.S. two months ago as visiting students at GeorgiaTech (Quirin) and Columbia University (Stephanie). </p>\n<p>Throughout the past weeks, we have encountered quite a few Americans trying to learn German. What everyone struggled with most was speaking and correctly pronouncing words. We thought that this was of utmost importance though, because when you travel to a different country with a different language, speaking is the most important thing - spoken language connects people and enables you to make new friends. </p>\n<p>Quirin had ordered the new Amazon Dot as a smart home gadget just before HackHarvard. When we learned that only recently, it had been enabled to not only understand and speak English, but also German, we decided that we had to make use of this awesome new feature: We wanted to enable people to learn languages easier and more adapted to how they're actually used: as spoken word between one or more people, enabling them to communicate from face to face. </p>\n<h2>What it does</h2>\n<p>By means of the Echo skill we created, Alexa takes over the job your parents probably did in the past: She quizzes you on your vocabulary. In order to do so, she randomly selects an English word from a given set of words and asks you to translate this word into German. She then listens to your translation and checks whether it is correct or not. This works because after a very recent update, Alexa is able to understand both English and German (see challenges). </p>\n<h2>How we built it</h2>\n<p>On the hardware side, we used an Amazon Echo Dot. Therefore, we used the Alexa platform and AWS Lambda, where we ran our code. </p>\n<p>We built the skill in German language in order for Alexa to be able to understand answers given in German and speak perfect German. We then used the phonetic alphabet in order for Alexa to give instructions in English (see Challenges section). </p>\n<h2>Challenges we ran into</h2>\n<p>The biggest challenge was that the Amazon Echo Dot is actually only able to be switched to German starting on October 26 - i.e. right after HackHarvard. Therefore, we could only test our program on the computer. </p>\n<p>Furthermore, Alexa cannot do English and German simultaneously, i.e. she cannot speak English and understand German at the same time. For this reason, in order for Alexa to understand the German reply of the user, the whole game had to be in German. However, we wanted English instructions for better usability. We solved this challenge through using the phonetic alphabet: This means Alexa still speaks German, but in order to get her speak English as authentically as possible, we used the phonetic alphabet for the English sections. </p>\n<h2>Accomplishments that we are proud of</h2>\n<p>For the first time ever, we worked with Amazon Alexa. Through reading up on the topic, we were able to create a functioning prototype for a vocabulary trainer. </p>\n<h2>What we learned</h2>\n<p>As a non-techie, everything was new for Stephanie. ;-) Apart from that, through using Alexa for the first time, we learned about the capabilities and limitations of the tool. </p>\n<h2>What's next for German - the natural way!</h2>\n<p>Next up is extending the vocabulary. For now, we worked with a limited amount of manually entered words. The goal, however, would be to enable the program to load an entire dictionary automatically in order to massively increase the available vocabulary. Also, the vision is to have several levels of difficulty for learners at different stages, in order to customize the learning experience. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-alexa\">amazon-alexa</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Koerner/HackHarvard\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Koerner/HackHarvard\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["wandaless", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"wandaless \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/188/datas/gallery.jpg\"/>\n<p>\n<i>Our logo!</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Each member of our team was born in a different place and we are all living away from our families.  The problem we wanted to tackle at first was providing a group of people with a long-haul flight plan with departures from all over but arrivals at the same places, but this vision extends to helping a group of friends explore, for example, a new city.  Our group wandered around Boston on friday and didn't really know the best places to visit or what the best way to get between them was.  <strong>So:</strong> If we could talk to a bot to add the places we absolutely wanted to see, find the best route (or a good enough route: this is the travelling salesman problem we're dealing with, after all) </p>\n<h2>What it does</h2>\n<p>-The user tells the bot where they want to go (i.e. \"cambridge ma\", and that location is mapped to a proper place name by the bot (i.e. \"Cambridge, Massachussets, USA\"), which is then passed to the google maps api to return the lat/long.  As a session proceeds, new locations are added to the page's array of locations which are mapped out.</p>\n<h2>How we built it</h2>\n<p>The server's backend is built in java; the chat and the chatbot are embedded from \"Motion AI\" which is a platform to graphically programming a chatbot's responses to human language.  We call the google maps API for mapping purposes.</p>\n<h2>Challenges we ran into</h2>\n<p>-Finding the right chatbot: we spent a lot of time trying to set up an XMPP (Extensible Messaging and Presence Protocol) server with various chatbots (most notably wit.ai) which was overwhelming.  We found motion.ai towards the end of the hackathon, which was perfect for our needs.\n-Working with JSONs for the first time\n-Debugging!</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>-Having the google maps api up and running!\n-Getting the chatbot working!</p>\n<h2>What we learned</h2>\n<p>-Play to your strengths\n-API calls\n-Google Cloud services is not as friendly as Google\n-America <strong>does</strong> run on Dunkins\n-Someone on our team knows how to make beautiful logos!</p>\n<h2>What's next for wandaless</h2>\n<p>-Enabling group chat and sign-in\n-Location suggestion (a monetizable feature)\n-Emphasis on public transit</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag\">motion-ai-(chatbot-service)</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://wandaless-147202.appspot.com/\" rel=\"nofollow\" target=\"_blank\" title=\"http://wandaless-147202.appspot.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>wandaless-147202.appspot.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["PictoStory", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"PictoStory \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/298/datas/gallery.jpg\"/>\n<p>\n<i>Home Page with Generated Seed</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"PictoStory \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/313/datas/gallery.jpg\"/>\n<p>\n<i>Seed</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"PictoStory \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/323/datas/gallery.jpg\"/>\n<p>\n<i>Seed</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"PictoStory \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/324/datas/gallery.jpg\"/>\n<p>\n<i>Seed</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration:</h2>\n<p>For as long as humans have existed, new ideas and creativity have been driving forces like no others.  In today's society, there are so many people and so many great ideas that it can be difficult to push your thinking outside of the norm and actually think of something original.  Whether it's practical, disruptive or incredibly weird, a new idea can be incredible useful, rewarding and most of all fun.  PictoStory generates idea seeds from a photo.  These small snippets act as a unique source of inspiration.  PictoStory is good at thinking outside the box, because it isn't bounded by very much!</p>\n<h2>What it does</h2>\n<p>PictoStory allows the user to upload any photo to the site for further analysis.  Using Microsoft's Computer Vision API and Emotion API, Pictostory can mold otherwise random phrases to be associated with attributes of a photo.  PictoStory's default state randomly generates the structure of a sentence using a basic context free grammar (CFG) for the English language, then assigns nouns, verbs, adjectives etc to the missing components based on relations to the attributes in the photo.  For example, based on the emotion readings of an image, more positive or negative adjectives can be selected to complete a sentence.  Pictostory also features two custom options.  First, there is the \"gangster\" option (click the square CD button in the top right to toggle on and off).  This option is essentially basic mode with an initial greeting and final conclusion in less formal English.  Second, there is the \"template\" option (click the rail track button in the top right to toggle on and off).  This options doesn't generate the sentences randomly by computing the branches of a CFG, but rather has a group of stored sentence formats to model off of.  This mode often yields more dramatic and sensible statements, so be sure to check it out.  Some of the template phrases used for the model are original while others are based of of famous lines from Shakespeare's plays.</p>\n<h2>How I built it</h2>\n<p>I used ReactJS to build the front end of PictoStory.  Client-side javascript functionality provides all of PictoStory's functionality in addition to handling interactions with Microsoft's Computer Vision and Emotion API.  I used my github account to host the site.  (liampalmer43.github.io)</p>\n<h2>Challenges I ran into</h2>\n<p>I ran into some pretty annoying bugs while making PictoStory, especially when dealing with modifying and storing images.  Some of them seemed impossible at first, but with enough digging I luckily found solutions to every major problem I encountered and I know I'm better off because of it!  Overcoming these bugs was very rewarding.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I'm very proud of building an initial working program, and then iterating over and over again while tweaking existing code and implementing knew functionality.  At the beginning I didn't really have a solid idea of what I was going to create.  I just worked through one idea at a time.  There was never a shortage of ideas or improvements, but only a shortage of time.  This is the first time I've ever stayed up all night without sleeping at all!  </p>\n<h2>What I learned</h2>\n<p>I learned that programming for long periods of time can be incredibly rewarding if you are passionate about what you're doing.  I look forward to more experiences like this and hope to find a career one day where I feel the same way.</p>\n<h2>What's next for PictoStory</h2>\n<p>Next, I think it would awesome to look into algorithms and techniques for better forming AI speech.  This could expand PictoStory to be even more legible, although is quirkiness is very enjoyable at times.   Lastly, I'd like to try it out for 5 minutes, and record a good idea that it gives me.  Having tested this out many times, I know PictoStory can be incredible wacky (especially in standard mode) and will never fail to surprise.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/react\">react</a></span></li><li><span class=\"cp-tag\">microsoft-computer-vision-api</span></li><li><span class=\"cp-tag\">microsoft-emotion-api</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://liampalmer43.github.io/\" rel=\"nofollow\" target=\"_blank\" title=\"https://liampalmer43.github.io/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>liampalmer43.github.io</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["CYCL", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"CYCL \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/292/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"CYCL \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/293/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"CYCL \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/294/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"CYCL \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/295/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>After living in the Boston/Cambridge area for some time, we began to notice the high rate of bicycling accidents that occurred day to day. In order to provide cyclists with a more informed sense of traffic safety, our team built CYCL so that users can monitor areas of high bicycling traffic accidents to become more aware and alert of their surroundings during their commutes.</p>\n<h2>What it does</h2>\n<p>CYCL uses pre-existing data about bicycle related traffic accidents to generate a predictive statistical model that we loaded onto a Raspberry Pi, and used a GPS to determine the user's location and determine the safety levels of biking in that area. </p>\n<h2>How we built it</h2>\n<p>First we used MATLAB and Python to create a statistical model of the data set. Then we used Node.js to interface with the GPS and various hardware models we created. </p>\n<h2>Challenges we ran into</h2>\n<p>Various challenges we ran into included difficulties involved in creating the outer casing for the device and mounting it on the handlebars in a sleek yet practical way. It took multiple testing trials to fully calibrate the device so that it shows the safety score during a real bike ride.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We're proud of creating a hardware device even though majority of the team's background had never worked with the circuitry and learned much of it throughout the course of this hackathon.</p>\n<h2>What we learned</h2>\n<p>We learned how to handle problems in fast and efficient ways as well getting practice in Python, MATLAB, and Node.js.</p>\n<h2>What's next for CYCL</h2>\n<p>There is a lot more functionality that can be integrated into CYCL, as currently it only outputs a safety score when the cyclist is on the road. In the future with further testing, CYCL has a lot of potential to change it's user's behaviors.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/hardware\">hardware</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/patrickhpan\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/patrickhpan\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Hire Hydrant", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Hire Hydrant \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/226/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We are college students, and thus constantly in the throes of the job search process. We wanted to create a service that would improve the experience for both potential employers and employees, hopefully leading to a better match. Static resumes are the de facto standard, yet they feel outdated in today\u2019s modern age. And for good reason - the first resume was created by Leonardo da Vinci in 1482, and the format hasn\u2019t changed much since. We thought this would be a fitting challenge for Hack Harvard 2016\u2019s theme of \u201chack the past.\u201d </p>\n<h2>What is it</h2>\n<p>As involved as it is, the hiring process today is still incredibly impersonal. Up until the personal interview stage, a potential employer may have only seen your static resume and run-of-the-mill cover letter. Building one\u2019s brand through a personal website has been touted by many recruiters as vitally important, yet it remains an arduous process. With Hire Hydrant, we aim to make the process a matter of minutes instead of days. It will open the floodgates to many new employers by serving them a tailored experience when they visit your personal webpage. Hire Hydrant automatically recognizes when a potential employer visits your page and discreetly serves them a custom campaign that you\u2019ve created to market yourself.</p>\n<h2>Functionality</h2>\n<p>Hire Hydrant allows users to create an account or login with LinkedIn and enter all of their relevant data like work experience, skills, etc (This data would ideally be pulled from LinkedIn in a matter of minutes but due to LinkedIn\u2019s limited API access for non-partner\u2019s, this data has to be manually hardcoded in for now.) This data is then automatically formatted into a clean, attractive layout which could easily supplant a personal website. The user can then create custom campaigns for each potential employer, which will be served automatically. Hire Hydrant detects the IP address of anyone who visits your page and searches through companies\u2019 public registrations to find matches and silently route them to a customized version of your website that is tailored to their specific organization. In this customized page, you can speak directly to the employer in page in the form of a hybrid resume / cover letter page.</p>\n<h2>Process</h2>\n<p>We built our webapp using Meteor, with a React frontend and MongoDB database. We used Flow Router for dynamic routing. We used the IP API to query for information about the location of the visitor. We split up tasks between eachother.</p>\n<h2>Challenges we ran into</h2>\n<p>We encountered a number of challenges throughout the development process. Many of these speed bumps came from lack of familiarity with the frameworks and libraries used. Coding in React.js is done declaratively, which simplifies many tasks but requires a large paradigm shift for those used to imperative languages. React.js also limits the libraries that can be used, which, when combined with the added layer of complexity and abstraction from Meteor.js, meant that simple tasks either took longer than they should have or couldn\u2019t be implemented at all. We were also unable to get the DNS on our Domain.com domain to switch over in time.</p>\n<h2>What we learned</h2>\n<p>We learned a lot about developing with Meteor and React, and the pros and cons of both. This experience also taught us a lot about working through obscure issues - we found ourselves digging through the source code of libraries looking for solutions. </p>\n<h2>Accomplishments</h2>\n<p>We were excited about the overall design of the website, especially the branding. The logo and name are both eye-catching and memorable. We were also proud of the site\u2019s ability to recognize and categorize visitors by IP address. We are proud of the software architecture on the backend, and the functional user interfaces on the frontend.  All in all, this was our first hackathon doing purely hardware, and we definitely had a great time learning.</p>\n<h2>What's next for Hire Hydrant</h2>\n<p>There were a few features we were planning on implementing during the hackathon that didn\u2019t make it in, as well as others we thought about for the future. Chief among the planned features was organizing skills, achievements, and the like based on employer. This would make campaigns more robust and differentiate them even more from traditional cover letters. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/meteor-js\">meteor.js</a></span></li><li><span class=\"cp-tag\">react.js</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li></ul>\n</div>\n</div>", ["", "", ""]], ["Shoal", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Shoal \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/948/datas/gallery.jpg\"/>\n<p>\n<i>Landing page</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Shoal \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/949/datas/gallery.jpg\"/>\n<p>\n<i>Sample study group chat</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Shoal \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/972/datas/gallery.jpg\"/>\n<p>\n<i>Sample class discussion chat </i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Shoal \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/983/datas/gallery.jpg\"/>\n<p>\n<i>Create a discussion of your own</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Shoal \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/985/datas/gallery.jpg\"/>\n<p>\n<i>Add new study group members by email </i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Shoal \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/989/datas/gallery.jpg\"/>\n<p>\n<i>Get matched with a new study group </i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>As a team of individuals who study best in groups, we\u2019ve always been familiar with the struggle of trying to find new friends to study with. Somehow in this world of social networks, it is unbelievably difficult to do something as simple as finding people to go to the library with. </p>\n<p>Although students are extremely tech savvy, the obsolescence of the \u2018just make friends\u2019 method, and the embarrassment of telling 400 other people in a Facebook group that you\u2019re poor at math has left a lot of students, like us, is a very awkward situation. </p>\n<p>We discussed among ourselves long before this hackathon how amazing it would be if there was a tool that matched students with new study partners. It didn\u2019t take long before it clicked - we knew that it was our job to turn this idea into a reality, and we did.</p>\n<h2>What it does</h2>\n<p>Shoal offers a clean and simple way to discuss your classes, share notes, and form study groups. Students can easily create new channels within their college courses to discuss homework, assignments, and exams. Students can also form private and public study groups using Shoal\u2019s built in study group finder.</p>\n<p>Shoal lets students seamlessly upload and share files with their peers. Our timeline-based model lets students easily find lecture notes, assignments, and lab documents.</p>\n<h2>How we built it</h2>\n<p>Shoal was built from the ground up using a modern front-end web stack on top of a robust Django backend (plus lots of caffeine). </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We\u2019re really proud to include a flexible study group finding tool with Shoal. Given a desired course and topic, Shoal will find other students interested in forming a study group using advanced compatibility algorithms.</p>\n<h2>What's next for Shoal</h2>\n<p>We\u2019d love to add a more robust file-sharing system with support for collaborative Google Doc files. This would allow students to keep up-to-date master notes for each of their courses.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/django\">django</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sass\">sass</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n</div>", ["", "", ""]], ["Fittr", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Fittr \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/184/datas/gallery.jpg\"/>\n<p>\n<i>Profile Page</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Fittr \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/185/datas/gallery.jpg\"/>\n<p>\n<i>Authorization to allow step and location tracking</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Fittr \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/186/datas/gallery.jpg\"/>\n<p>\n<i>Profile Page with image and details</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Fittr \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/187/datas/gallery.jpg\"/>\n<p>\n<i>Landing page of Fittr</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Fittr \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/235/datas/gallery.jpg\"/>\n<p>\n<i>Tinder card UI</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Fittr \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/246/datas/gallery.jpg\"/>\n<p>\n<i>Stat comparison</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>One of the main problems for gym beginners has always been the lack of a support system to keep themselves driven towards their goals. We believe that having someone to share your journey towards a fitter lifestyle is necessary and Fittr provides a great platform for finding the ideal gym buddy.</p>\n<h2>What it does</h2>\n<p>Fittr uses a Tinder-esque matching algorithm to match you up with a gym partner, taking into consideration: geographical proximity, weight and one's favourite exercise. The caveat is that the matching process is anonymous until both users have \"swiped-right\" on each other.\nOnce the user has a match, Fittr keeps you motivated by employing a point based reward system, which pits you in a friendly competition against your partner on a daily basis, based on the number of steps the user walks and his consistency of \"checking into\" the gym. </p>\n<h2>How we built it</h2>\n<p>Fittr is a native iOS application built on a AWS backed server, running on Node.js and MongoDB. We use Google Maps, Cloudinary and Apple CoreMotion APIs to drive different facets of our mobile application. Fittr simulates the Tinder card swiping UI as well as its matching algorithm, to provide a seamless experience to the user. </p>\n<h2>Challenges we ran into</h2>\n<p>Initially we faced some hurdles while setting up our remote AWS EC2 cluster. The next big obstacle was to perfect the right-left swiping motion of the profile cards. We solved this by standardizing a deprecated open source library to provide an almost perfect experience.</p>\n<h2>Accomplishments that we're proud of</h2>\n<ol>\n<li>Setting up our remote AWS EC2 cluster</li>\n<li>Integrating multiple APIs to serve our need in different areas</li>\n<li>Replicate the panning gesture of profile cards</li>\n</ol>\n<h2>What we learned</h2>\n<p>A robust backend system is essential for any platform, web or mobile and also the importance of constantly coordinating one's efforts with their team members, to meet pressing deadlines.</p>\n<h2>What's next for Fittr</h2>\n<p>Fittr is just the beginning of a bigger vision which includes integrating complex workout routines and Machine Learning to provide personalized recommendations, when it comes to finding gym partners and designing workout routines!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/HackHarvardFittr\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/HackHarvardFittr\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["This was my first experience developing an iOS application whose backend is hosted by an external server. I primarily worked on designing and developing the application from ground up with my teammates. We overcame a lot of problems together and this personally boosted my confidence! All in all it was an enriching weekend to say the least.", "I wrote the entire backend in node (using MongoDB as the database), it was initially hard to get HTTP requests working seamlessly with the newer iOS libraries (Alamofire on Swift 3) but we figured it out in the end :) ", "I worked on the native iOS application. I implemented a few features like step count (using Apple's Core motion API), the image picker functionality and a few others. I also worked a bit on the front-end part of the app.  "]], ["Jigsaw 2.0", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/aPToNUqgXcM?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Jigsaw 2.0 \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/270/datas/gallery.jpg\"/>\n<p>\n<i>The web interface.</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>Jigsaw 2.0 is a puzzle that you need to learn to solve. It features a modular design that favors plug-and-play adaptation and requires that the user be inquisitive and adventurous to win. Each sensor module contributes either input or output. Input can take the form of light, sound, touch, motion, and more, while output can similarly range from light to sound. With no directive from the game itself, the user must creatively trailblaze a path to success, using the full range of their puzzle-solving arsenal. The goal is to activate all of the lights on the board. Be careful: some actions will turn off more lights than they turn on!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag\">grove</span></li></ul>\n</div>\n</div>", ["", "", ""]], ["DollarTime", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"DollarTime \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/219/datas/gallery.jpg\"/>\n<p>\n<i>DollarTime!!! Time is money</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Its usually boring to do minimum wage job on campus ,which usually involved with sitting at the same place for hours. \nI just want to make something that makes that kind of job a little bit more exciting.</p>\n<h2>What it does</h2>\n<p>DollarTime will (or is suppose to) calculating the money you are making by seconds and also can generate a income log for every user. </p>\n<h2>How we built it</h2>\n<p>Ruby on Rails (backend)\nJavaScript / HTML / CSS (frontend)</p>\n<h2>Challenges we ran into</h2>\n<p>Using Facebook login API to generate a simple user profile. (Solved!)\nSetting up relationship between models and some rails routing problem. \nRan out of time. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Learn ruby on rails from the beginning. \nUtilize facebook login API (this is awesome)!!!\nFinished a simple clock using JavaScript.\nHost the app on my desktop server in dorm. </p>\n<h2>What we learned</h2>\n<p>Using Facebook API \nRuby On Rails fullstack development </p>\n<h2>What's next for DollarTime</h2>\n<p>Setup the correct relationship for different models. \nGet the income log function to work.\nFinish up with the front end dev.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ruby-on-rails\">ruby-on-rails</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/NaichuanZhang/DollarTime_HackHarvard\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/NaichuanZhang/DollarTime_HackHarvard\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Everything "]], ["MoodMusicBot", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>Suggests songs to the user based on their perceived emotions.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/azure\">azure</a></span></li></ul>\n</div>\n</div>", ["", "", "", ""]], ["TextIt", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"TextIt \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/182/datas/gallery.jpg\"/>\n<p>\n<i>Contacts view</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"TextIt \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/193/datas/gallery.jpg\"/>\n<p>\n<i>Alarm view</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"TextIt \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/196/datas/gallery.jpg\"/>\n<p>\n<i>To-do view</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>HackHarvard2016: \"TextIt\"</h1>\n<p>This Android app, called TextIt, creates a convenient way for a person to store, organize, and keep track of information through incoming text messages. The app listens to all incoming text messages and, when the incoming text matches a specific pattern, parses the text message and either sets an alarm (for in the future) or simply creates a \"to-do\" list in the app. Both the alarms and the to-do list can be easily managed in the app.</p>\n<p>For example, after downloading the app, receiving the text message \"textit/alarm/10/23/2016/10/45/am/Remember to submit your Hackathon project!\" will automatically create an alarm in the app that will ring on October 23rd, 2016 at 10:45am with the alarm message at the end of the text string.  Receiving the text message \"textit/todo/Have a great time at HackHarvard!\" will automatically add an item to a \"to-do\" list in the app that the user can then efficiently manage.</p>\n<p>Not only can the user of the app send themselves these text messages to easily set reminder alarms and add things to their to-do list, but ANY incoming text with the above mentioned forms will be parsed and hence entered into the app.  This means that anybody who has your phone number can set alarms on your mobile device and add things to your to-do list.  But don't worry!  The app imports all of the contacts from your phone and you can easily specify which phone numbers you are willing to accept these kinds of texts from.  The power is all yours!</p>\n<p>Uses:\n1.) Parents can send their kids texts to automatically set reminder alarms and add chores to the to-do list.\n2.) Sleeping in with your phone on silent and have a midterm in 10 minutes? Well your friend can text you and automatically set an audible alarm in your phone to wake you up.</p>\n<p>Texting is something that most people are good at. They are used to the UI and entering data in this form. So reading incoming data from text messages will create a simple and universal way to manipulate data on your phone.  No data or internet connection necessary!  All you need is the app and text messages and you're good to go :)</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/lucaspalmer8/TextItAndroid\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/lucaspalmer8/TextItAndroid\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Speechify", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Speechify \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/617/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Speechify \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/620/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Speechify \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/622/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Speechify \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/621/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Speechify \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/176/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Speechify \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/618/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Sometimes, we don't have enough time to seat down and read something interesting, something we love, etc. But now, with Speechify is posible to listen to that while you are doing others activities! :)</p>\n<h2>What it does</h2>\n<p>It's an Mac/iOS app that takes all the text you want and turns it into audio! :D</p>\n<h2>How we built it</h2>\n<p>Using Apple technologies as Xcode, iOS latest version and Swift latest version</p>\n<h2>Challenges we ran into</h2>\n<p>In Mac app was to find a way to read the text at the same time it was selected.\nIn iOS app was to make a share extension in order to add text outside the app without open it</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Everything works well!</p>\n<h2>What we learned</h2>\n<p>How to process text to turn it into audio </p>\n<h2>What's next for Speechify</h2>\n<p>There are great plans :)</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xcode\">xcode</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mac\">mac</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/abnerabbey/HackHarvard\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/abnerabbey/HackHarvard\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["It's a Mario", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"It's a Mario \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/171/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"It's a Mario \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/172/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"It's a Mario \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/173/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"It's a Mario \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/174/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Since the theme of this hackathon is about the old and the new, we thought about reviving old classic video games into real games using modern technologies. </p>\n<h2>What it does</h2>\n<p>The player can control the up and down motion of Mario and jumping onto objects, as well as the speed of forward movement of the passing landscape. </p>\n<h2>How I built it</h2>\n<p>The entire map is set on a tyvex scroll with laser-cut and color-painted objects rotating in the background. </p>\n<h2>Challenges I ran into</h2>\n<p>Throughout the process, we had to switch the control systems several times and till the end, we couldn't get the arduino sensor parts and motor parts working. When we were packing, we did not anticipate the lack of electronic and related parts to hack with. </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>But still, we are proud that the end product is enough to show the concept of our idea and the amount of work we put into making the goal. </p>\n<h2>What I learned</h2>\n<p>Pack more materials and electronic parts instead of just tools (even though without those we wouldn't have make progress we have right now)</p>\n<h2>What's next for It's a Mario</h2>\n<p>Make it actually work with Arduino. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">lazer-cut-plywood</span></li><li><span class=\"cp-tag\">tyvex</span></li><li><span class=\"cp-tag\">acrylic-paint</span></li><li><span class=\"cp-tag\">potentially)-arduinos</span></li></ul>\n</div>\n</div>", ["", "", ""]], ["Valhista", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>We're concerned about the fact that most information consumed by the public is via stories is completely disconnected from the evidence they may or may not be based on. Even textbooks used in schools, which ought to have higher standards of rigor, are often clumps of narratives, nary a primary source cited where necessary. This situation conditions people throughout society to give much less scrutiny to the information they're presented, and of the fields of knowledge that are stung by this norm, history may bear the greatest burden.</p>\n<p>Our application takes the visualization and narrative present in the presentation of history as timelines but also adds a component that connects of the narrative to evidence, bridging the gap between primary sources and tertiary syntheses like timelines. There are many timelines but not like ours.</p>\n<p>I built it primarily to be most accessible, intending to approach some historians immediately after the hackathon, and so as a webapp. The visual timeline was implemented in javascript and its canvas framework, and computations having to do with time were written in with it there. With visualization, rendering, and computation we combined and built our project.</p>\n<p>A big challenge was figuring an optimal way to communicate both the stories and evidence and connect them at the same time. We had to consider multiple different types -- this was somewhat unexpected, as it was perhaps one of the only non-technical considerations of the project.</p>\n<p>I'm proud of building the tool such that it's able to do what I set out for it to do.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/cyanoats/Valhista\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/cyanoats/Valhista\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Diffy", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Diffy \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/238/datas/gallery.jpg\"/>\n<p>\n<i>A demo picture</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Diffy \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/239/datas/gallery.jpg\"/>\n<p>\n<i>Our project detected what on the shelf has been changed</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Diffy \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/165/datas/gallery.jpg\"/>\n<p>\n<i>Success!</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Diffy \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/166/datas/gallery.jpg\"/>\n<p>\n<i>Hard at work</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>One of our team members regularly purchases canned soup, and she ran out without realizing it. She wondered if she could create something to automatically order more food when she ran out.</p>\n<h2>What it does</h2>\n<p>Diffy uses computer vision and OpenCV and RoboRealm to identify visual changes, to alert users when something is no longer there. \nOur demo involves identifying when things are missing from a pantry, so that new food can be automatically ordered.</p>\n<h2>How we built it</h2>\n<p>We first constructed a demo shelf, stocked with standard food items, and set up a live webcam feed. Then, we used OpenCV and RoboRealm to separate the output of the webcam into distinct frames and analyze sequential frames for visual changes, correcting for minute changes that we don't care about as well as changes in lighting. We then used Microsoft's Cognitive Services API for image recognition, the result of which is sent to a text-to-speech package to be read aloud.  Finally, we built an Arduino with an ultrasonic distance sensor, so that the camera's output is only used and analyzed when motion is detected (the Arduino also helps the system avoid detecting a change when a person is between the camera and the shelf.</p>\n<h2>Challenges we ran into</h2>\n<p>Separating the live webcam video feed into discrete images; \nPutting the various independent components together; \nSetting up the picture such that the Microsoft Cognitive Services API can recognize it</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Getting the project to run successfully within 24 hours</p>\n<h2>What we learned</h2>\n<p>How to think in terms of processing an image in CV</p>\n<h2>What's next for Diffy</h2>\n<p>Porting Diffy from a computer into an online server, such that a low-power WiFi-connected camera can be set up anywhere</p>\n<h2>Applications</h2>\n<p>Logistics and item tracking; \nDetecting theft; \nMedical cabinets; \nRestocking supplies; \nFood notification at events (like HackHarvard!)</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/opencv\">opencv</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/microsoft-project-oxford\">microsoft-project-oxford</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/microsoft-office-research\">microsoft-office-research</a></span></li><li><span class=\"cp-tag\">roborealm</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li></ul>\n</div>\n</div>", ["I designed and built the shelf we use to show off the product.", "", "", ""]], ["Laptap WiFi", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>The inspiration for Laptap WiFi began when Robby found the procedure of getting into a wifi network extremely tedious and time consuming, especially when he is at a business meeting. He wanted to create an efficient solution where he would be able to connect to the WiFi seamlessly. </p>\n<h2>What it does</h2>\n<p>Laptap WiFi uses an RFID card which you tap on to the RFID reader to create a WiFi</p>\n<h2>How we built it</h2>\n<p>We built Laptap WiFi using a mix of Python, Bash, and C.</p>\n<h2>Challenges I ran into</h2>\n<p>One of the more difficult challenges that we had was trying to figure out a way to compress a 70 digit number into 10 digits, because the RFID can only hold up to 10 digits.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We are proud that we figured out a way to work around the main challenge of compress a 70 digit number into 10 digits. </p>\n<h2>What I learned</h2>\n<p>During this hackathon some of us learned bash and how to push and pull things from GitHub</p>\n<h2>What's next for Laptap WiFi</h2>\n<p>The future for Laptap WiFi is to make our program faster.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bash\">bash</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c\">c</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Robbitron16/LapTap-Wifi\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Robbitron16/LapTap-Wifi\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I used the RSA encryption system to convert the wifi network name and password into a 10 digit number that the RFID reader would be able to use.", "", "", ""]], ["Switter", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Switter \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/245/datas/gallery.jpg\"/>\n<p>\n<i>iPad View</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Switter \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/241/datas/gallery.jpg\"/>\n<p>\n<i>Switter Logo</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Switter \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/243/datas/gallery.jpg\"/>\n<p>\n<i>Analytics Dashboard</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Switter \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/242/datas/gallery.jpg\"/>\n<p>\n<i>Analytics with Live Feed</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Switter \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/244/datas/gallery.jpg\"/>\n<p>\n<i>Sign in page, but still a good photo!</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>How financially literate are <strong><em>you</em></strong>? Are you comfortable investing your own money, or do you let it slowly fade away in management fees and nickel-and-dime savings accounts? Global financial literacy tests show that just 57% of adults in the U.S. are financially literate, so if you\u2019re not informed with your money, you\u2019re <em>definitely</em> not alone!</p>\n<p>We created Switter to give everyday people the chance to explore, experiment and ultimately educate themselves on the topic of investing, without risking any of their hard-earned cash. To a lot of people investing seems like magic and so far removed from their daily lives that it would be impossible to learn. We disagree.</p>\n<h2>What it does</h2>\n<p>Twitter is a platform for financial exploration. It combines live data from social media feeds with cutting edge machine learning to display public opinion (sentiment) about publicly listed companies. Here\u2019s how it works:</p>\n<ol>\n<li>Enter the company names/tickers that you are interested in</li>\n<li>The system analyzes social media posts relating to those companies, and shows a statistical analysis of the public opinion around them</li>\n<li>You can then compare the historic prices with the public opinion at the time, and decided whether or not to invest</li>\n<li>You have just completed your first financial experiment! </li>\n</ol>\n<h2>How we built it</h2>\n<p>Our team met for the first time ever at HackHarvard, and we all had similar goals: build a challenging technology project that could help people connect with and learn about traditionally disconnected topics. We were lucky enough to have complimenting skillsets and were able to split the project into two major parts and get to work quickly.</p>\n<p>The visual interface was built almost entirely from scratch and we even did a little user testing during the hackathon. The database and API technologies were entirely new to our team but successfully leveraged technology from HP, Twitter, Yahoo, MongoDB and more.</p>\n<h2>Challenges we ran into</h2>\n<p>There were challenges throughout the project, but learning (and sometimes biting off more than you can chew) is all part of the hackathon experience. On the backend, one of the biggest challenges was handling so many asynchronous requests from multiple sources in our API. The front end team also experienced a few hiccups, mainly managing state with React-Redux. </p>\n<p>And of course time constraints were also a big challenge (big thanks to the organizers for the caffeine supply).</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>While we realize Switter isn\u2019t at the stage it needs to be at to make the impact we want it to, we\u2019re thrilled to have completed an MVP of our vision and have something that we can demo and get useful feedback from. It was also awesome to find such a great team just through the HackHarvard group. </p>\n<h2>What's next for Switter</h2>\n<p>We believe Switter can play a real role in informal finance education, but to get to that point it needs to become more of a generalized learning platform. Here\u2019s what we have in mind:</p>\n<ul>\n<li>Expand the number of news and social media sources used for displaying sentiment about different companies</li>\n<li>Add an extensive \u201cresources\u201d section with embedded videos and learning modules for financial education</li>\n<li>Test the idea of a \u201cmock investing\u201d section with users to see if that would be a big enough benefit to justify its development</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/react\">react</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/redux\">redux</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag\">hpe</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/yahoo-query-language\">yahoo-query-language</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twitter\">twitter</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/chart-js\">chart.js</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/rametta/HackHarvard2016-client\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/rametta/HackHarvard2016-client\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/helfi92/HackHarvard2016-api\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/helfi92/HackHarvard2016-api\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Ear-Out", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Currently, hospital call systems for nurses consist of a wired contraption, inconvenient for patients to use, especially when they lack full function of their body. In emergencies, it would be difficult-to-impossible for a debilitated patient to signal for help on their own. As a automated system, the data could then also be collected and be put to good use.</p>\n<h2>What it does</h2>\n<p>In the case of need the patient is able to contact their caretaker, whether a family member or a nurse, to come assist them. Over the duration of the care, the caretaker is able to track and view information about their patients to help assess conditions and seek improvements.</p>\n<h2>How I built it</h2>\n<p>We used the Amazon Alexa Skills Kit to detect voice commands, which are processed on AWS and interacts with our Django backend. Client data is stored in a database and served on an API, which is called upon by both our analytic website and mobile app.</p>\n<h2>Challenges I ran into</h2>\n<p>Overall, learning the Amazon Alexa APIs was one of the harder parts of the project because of our unfamiliarity of its documentation.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We were proud of creating a whole platform for our service, taking into account all user roles such as administration, patients, caretakers, etc... We are able to provide a fully featured product as a result.</p>\n<h2>What I learned</h2>\n<p>One of the most critical things we learned was the process of designing functionality for a very specific audience. We were able to brainstorm and consider what features would be best for our app.</p>\n<h2>What's next for Ear-Out</h2>\n<p>We aim to ultimately provide a full system for patients under care. The voice commands could be extended to provide more options for patients, and the service could be tailored to specific facilities, with detailed maps and visualisations.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/django\">django</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/angular-js\">angular.js</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/satchelfrench/Ear-Out\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/satchelfrench/Ear-Out\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I built the Alexa application, the backend/api and user admin console. ", "", ""]], ["PacMen", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/Bjfw8FR9CxM?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"PacMen \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/121/datas/gallery.jpg\"/>\n<p>\n<i>Login Screen</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"PacMen \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/120/datas/gallery.jpg\"/>\n<p>\n<i>Inside of the game</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Since the hackathon's theme is \"hack the past\", we wanted to bring something fun, somethings interactive and something that gets people together. Therefore, we brought addiction from the past. Let us introduce to you -&gt; Multiplayer PacMen</p>\n<h1>What it does</h1>\n<p>The game follows the concept of the original Pacman, but instead of Player Vs Ghosts, it's Player Vs Players. The winner will be the first person who earns 100 points.</p>\n<h2>Please use keys: \"W\", \"A\", \"S\" &amp; \"D\" to navigate.</h2>\n<h2>Challenges we ran into</h2>\n<p>The biggest challenge, which is also the biggest highlight of this game, is to deliver a smooth and synchronous multiplayer experience to the gamer. In order to achieve that, we developed a solid NodeJs backend with Web Sockets connected to Firebase, ensuring lightning speed data transfer with zero delays. Since the team has limited exposure to Phaser, a HTML5/Canvas gaming framework, the UX are limited and may glitch upon excessive data input. However, we implemented many software design patterns such as singleton and object pool to enhance UI efficiency.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Certainly, we are proud to deliver a project that works, the functionalities it offers and the potential it holds. Our backend is so well-built and seamless that we turned it into a SDK. The SDK provides both the backend and the database in a Three-Tier Architecture, only short an UI for the specific platform. Consequently, the game is not only limited to the current web platform, rather it can be expanded to other platform (desktop, mobile or VR) easily when connected to our backend SDK.</p>\n<h2>What we learned</h2>\n<p>Most importantly, the team learned collaboration. Under few hours of sleep with patience growing thin, we felt like constant communication and cooperative team work is crucially important to our success. Accessing the situation and ordering tasks in appropriate sequence boosted our efficiency greatly.</p>\n<h2>What's next for PacMen</h2>\n<p>There are countless possibilities for this game. We only had time to launch Level 1 of the game. There are more levels to come and more awesome interactive features to come such as fire spitting, teleporting and special power ups etc.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/phaser-js\">phaser.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/socket-io\">socket.io</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/canvas\">canvas</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://www.pacmen.online/\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.pacmen.online/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.pacmen.online</span>\n</a></li>\n<li><a href=\"https://github.com/x65han/HackHarvard\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/x65han/HackHarvard\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/DZcoderX/HackHarvard\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/DZcoderX/HackHarvard\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["InstaCal", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/6FmWoplUFXI?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"InstaCal \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/849/datas/gallery.jpg\"/>\n<p>\n<i>Find an event you want to attend</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"InstaCal \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/850/datas/gallery.jpg\"/>\n<p>\n<i>View the text fields that are auto-filled</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"InstaCal \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/848/datas/gallery.jpg\"/>\n<p>\n<i>Add any additional information</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"InstaCal \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/847/datas/gallery.jpg\"/>\n<p>\n<i>Confirm the event is in your iCal</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>InstaCal</h1>\n<p>This iOS app enables a user to take a text-based picture that contains information about a particular event. They can then have that information automatically stored to their Outlook, iCalendar, Google Calendar, Yahoo! Calendar, and even AOL as an event. This app implements the Microsoft Cognitive Services Optical Character Recognition API.</p>\n<p>To Use:</p>\n<ol>\n<li>Take a picture</li>\n<li>Confirm the information</li>\n<li>Send to mobile Calendar</li>\n</ol>\n<h1>How we built it</h1>\n<p>We developed this app in Xcode using swift. To capture the content of an image taken, we  implemented the Microsoft Cognitive Services Optical Character Recognition API. The resulting JSON file was then analyzed to find key terms such as dates and timings. Finally, we exported the necessary information to the necessary calendar. </p>\n<h1>Inspiration</h1>\n<p>As busy students who rely heavily on online calendars, we\u2019re often frustrated by how easy it is to miss the amazing events held at Harvard. We all had run into the problem where we\u2019d take a picture for a flyer of a cannot-miss event to remember to go, and then would never go to the event because it wasn\u2019t in our calendar. That\u2019s why we created InstaCal, a solution to our college needs, so that all the events we want to go to are automatically added to our calendars!</p>\n<h1>Accomplishments we are proud of</h1>\n<p>We were excited to implement Microsoft\u2019s cognitive services API for text-recognition to efficiently export calendar events to our to help solve a problem we faced in our everyday lives. We also loved making our app name and minimalistic interface, and bonding with our teammates.</p>\n<h1>What we learned</h1>\n<p>None of us had previous Swift experience, and we all got hooked on app development. We also learned how to use Microsoft APIs, which are incredibly powerful and we\u2019re so excited to use.</p>\n<h1>Challenges we ran into</h1>\n<p>One initial challenge was trying to create a platform independent web-based app. However, after realizing that this was not necessarily feasible within the given time, we had to settle for an iOS app that could only be used on an apple device. </p>\n<h1>What's next for InstaCal</h1>\n<p>The next step for InstaCal is the implementation of an Android complement to our app. We also would love to enhance our app with additional features, incorporating the future of OCR, like converting handwriting to vectorized text!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag\">microsoft-api</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/theTejMahal/InstaCal\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/theTejMahal/InstaCal\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["HoloBackSpeaker", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>IoT devices are becoming a larger part of our everyday lives. The Hololens is an awesome new product in the world of augmented reality. What if we combined the two in order to facilitate a more intuitive interaction between consumers and IoT devices in the home? That's exactly what we did, using network protocols to connect the Hololens and a Sonos speaker, 3D-modeling in Unity for the user interface, and Vuforia to distinguish the location of the speaker in a room. Although, the ImageTargets from Vuforia did not successfully deploy to the actual Hololens, and the Vumarks could not be created in time, the project successfully interfaces with the speaker and Hololens to create an enhanced user experience. The user can control their speaker through a holographic display that allows them to select options such as skipping a song, or pausing a song, that automatically appears whenever the user gazes at the device. The album artwork from each song is also found and displayed holographically for the user. Overall, we are still gaining familiarity with Unity and the process of deploying to the Hololens, but we are grateful for the opportunity to dev on Hololens and learn more about it this past weekend. We would like to expand HoloBackSpeaker to other IoT devices in the home, as we believe it has the potential to make even the most confusing of devices in the home easier, and more natural to use. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag\">uwp</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/microsoft-hololens\">microsoft-hololens</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/love\">love</a></span></li><li><span class=\"cp-tag\">sonos</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/johanos/HoloBackSpeaker2\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/johanos/HoloBackSpeaker2\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Unity design and backend ", "", ""]], ["PresentUp", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"PresentUp \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/106/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"PresentUp \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/107/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We thought it might be helpful to have a way to improve and practice presenting seminars or other public speaking tasks besides chanting in front of a bathroom mirror. We wanted to make an application that would provide a more curated form of feedback to the presenter which helps them improve more quickly.</p>\n<h2>What it does</h2>\n<p>It records the visual and audio of an individual speaking and tracks their body movements and facial features to evaluate how engaged they are as speakers and if they are fidgeting too much. It also transcribes their speech to further generate feedback on their pace of speaking for instance and how many filler words they use. </p>\n<h2>How we built it</h2>\n<p>We used the Cognitive api from Microsoft's Project Oxford to recognize facial expressions of the speaker and to track the face as well. We used Express for the routing and used d3 to generate some visualizations for the </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Building something that we would use and something that might be helpful to others as well.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/microsoft-project-oxford\">microsoft-project-oxford</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/d3-js\">d3.js</a></span></li></ul>\n</div>\n</div>", [""]], ["HeartGrid", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration:</h2>\n<p>Heart diseases and suicide are the first and the tenth leading cause of death in the United States respectively. Heath care is getting more and more expensive and seeing a doctor is getting harder. According to research, it was found that there is a great correlation between a persons\u2019 heart rate (more precisely resting heart rate) and depression. It is unfeasible for physicians and psychiatrists to continuously monitor heart rate and mental state. It\u2019s not practical (or objectively possible) for patients to keep logs of their internal states throughout the day.</p>\n<h2>What it does:</h2>\n<p>For patients suffering from depression and heart problems, we remove the systematic need of inpatient doctor visits by providing a means to capture their daily mental and physical health progression autonomously. What the service does is real-time and historic data analysis and visualization, cognitive services API.\nReal time heart rate is streamed from Microsoft band through an android app we built. The data is analyzed and presented on our website. The website can be accessed by the doctor to monitor his patients\u2019 heart rate in between visits. Patients are asked to take daily pictures that are analyzed by Microsoft's emotion API. The website alerts the doctor in case of the patient is having any heart discrepancy or emotional breakdown. </p>\n<h2>How we built it</h2>\n<p>An Android app that uses Microsoft's emotion and face APIs, takes a picture of the user and analyze his/her emotions; which are then sent to the dashboard to plot in real time user's emotions as well as heart rate which is being monitored by Microsoft's band. The dashboard is hosted on heroku, it uses node.js and google sheets API to plot the data and alert the Doctor when the heart rate/emotions spikes over a critical value.</p>\n<h2>Challenges we ran into:</h2>\n<p>Uploading our data to the cloud took a lot of time. And we got stuck on pulling our data from the cloud to the dashboard.</p>\n<h2>Accomplishments that we're proud of:</h2>\n<p>Deploying the dashboard to a cloud and being able to store data in a cloud. </p>\n<h2>What we learned:</h2>\n<p>We learned a lot.</p>\n<h2>What's next for HeartGrid:</h2>\n<p>Integrate machine learning where our service will be able to make sense of the data and find the person\u2019s average physiological heart rate. This could eventually help in generating custom mental health care plans.\nIn addition, expanding the service to help athletes perform better and understand their physiological capacities. \nFinally, we are hoping that there would be a Microsoft Band HeartGrid which helps detects Heart Rate Variability (HRV). HRV can help in detecting precisely many heart conditions and diseases.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ajax\">ajax</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/heroku\">heroku</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://heartgrid.org/\" rel=\"nofollow\" target=\"_blank\" title=\"http://heartgrid.org/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>heartgrid.org</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Emojiverse", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Emojiverse \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/116/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Emojiverse \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/183/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Emojiverse \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/024/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Emojiverse \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/201/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Emojiverse \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/202/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to find a fun and cool way similar to Snapchat to show off recent advances in computer vision such as face tracking and emotion analysis.</p>\n<h2>What it does</h2>\n<p>It tracks human faces in an image and replaces them with emojis that match the emotions on their face.</p>\n<h2>How we built it</h2>\n<ul>\n<li>Android User Interface</li>\n<li>Flask/python computer vision processing backend with OpenCV</li>\n<li>Azure cloud storage</li>\n<li>Microsoft Cognitive Services to recognize faces and emotions</li>\n<li>AWS mysql database to hold all photos</li>\n</ul>\n<h2>Challenges we ran into</h2>\n<p>SERVERS AND NETWORK CONNECTION. CAN'T GET ENOUGH OF THEM.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>First time using so many API's and integrating them. We were able to complete our main goal and wrap it up nicely in a fairly well designed interface that allows you to save and share your photos on social media.</p>\n<h2>What we learned</h2>\n<p>We learned how much setup many of these various components involved, especially when using new API's and their dependencies. Also, we learned how to set up and communicate with a server.</p>\n<h2>What's next for Emojiverse</h2>\n<ul>\n<li>Video Tracking</li>\n<li>Object recognition and replacement to create the ultimate Emojiverse</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/azure\">azure</a></span></li><li><span class=\"cp-tag\">microsoft-cognitive-services</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/opencv\">opencv</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/ryan9lim\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ryan9lim\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Created the Android frontend, Apache local server with a php backend, and set up the AWS mysql database", "Curated emoji library, designed loading interfaces, and connected server to Emojione JSON database", "", ""]], ["ShopLens", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"ShopLens \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/087/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>ShopLens</h2>\n<p>No time to go grocery shopping? Too bored to leave your house? Can't bother surfing around Peapod? </p>\n<p><strong>ShopLens</strong> is here!</p>\n<p>ShopLens is a Microsoft HoloLens application that enables users to shop through an augmented reality environment. Sitting on your coach or cooking in your kitchen; just wear your HoloLens and do your shopping!</p>\n<p>...</p>\n<p>The ShopLens team</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag\">microsoft-cognitive-services</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/photoshop\">photoshop</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/azure\">azure</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/microsoft-hololens\">microsoft-hololens</a></span></li></ul>\n</div>\n</div>", ["", "", ""]], ["WoodYouFollowMe - a robot that moves its legs with you", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"WoodYouFollowMe - a robot that moves its legs with you \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/075/datas/gallery.jpg\"/>\n<p>\n<i>Logo</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"WoodYouFollowMe - a robot that moves its legs with you \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/076/datas/gallery.jpg\"/>\n<p>\n<i>ExoSkeletion</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"WoodYouFollowMe - a robot that moves its legs with you \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/077/datas/gallery.jpg\"/>\n<p>\n<i>The robot walker</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"WoodYouFollowMe - a robot that moves its legs with you \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/079/datas/gallery.jpg\"/>\n<p>\n<i>ExoSkeleton control</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Having a robot react as a human was always a goal in the robotics industry. As robots become more advanced by being powered by much powerful computers, the human brain is still one of the most powerful. Creating a robot that has the reaction time of a human and does what a human can do is still a complex task. But having a robot being controlled by a person, that mimics the movement is much simpler. </p>\n<h2>What it does</h2>\n<p>This robot has four joints; two hips and two knees, that are controlled by servo motors to lift and lower when a person wearing a specially designed exoskeleton controls it. </p>\n<h2>How we built it</h2>\n<p>We 3D printed all the parts and attached them with bolts. The exoskeleton was built by having metal bars connected together with potentiometers to track the person's leg positions. The robot and the exoskeleton suit are powered by Arduino YUN boards that communicated between themselves using WiFi. The legs of the robot move thanks to servo motors that are placed at the joints. The plastic that we used for the robot is wood-infused PLA to create a more ancient feel to the robot's exterior. </p>\n<h2>Challenges we ran into</h2>\n<p>Communication between the exoskeleton and the robot was the initial problem that we had to solve. We needed to know the IP addresses of each board, to allow communication with each other. Building a balanced robot that is capable of walking was a challenge that was fixed by having to lift the robot into the air but the robot lost the capability to walk. Calibrating the servo motors and the potentiometers to be synchronized was a long and repetitive process that required careful calculations. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are very excited to be able to easily pass information from the exoskeleon suit to the robot. Having releatively close human angles when the robot walks is also a  nice sight to see. </p>\n<h2>What we learned</h2>\n<p>We learned how to pass information by WiFi using HTTP protocols from one Arduino YUN board to another. This will be able to allow us to further build on wireless communication between boards. We learned that balance of mechanical constructions is a key part in the build process and must be taken into account right away, or else the construction might fall... A log wiring and soldering was used during the build process and the whole team enjoyed doing some electrical engineering. </p>\n<h2>What's next for WoodYouFollowMe</h2>\n<p>Next we would like the robot to have a moving camera on top of it, so that the user can see where the robot is going. We want to stream the video feed from the robot into VR, and the person wearing the headset will feel like they are the robot. Having the robot able to walk is the main goal after this competition, so that we are able to explore and walk with the robot. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c\">c</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/3dprinting\">3dprinting</a></span></li><li><span class=\"cp-tag\">potentiometers</span></li><li><span class=\"cp-tag\">servo-motors</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Vicos4/WoodYouFollowMe\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Vicos4/WoodYouFollowMe\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Bl3ndr", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Jamba Juice can't afford many employees :P</p>\n<h2>What it does</h2>\n<p>It makes you a smoothie!</p>\n<h2>How I built it</h2>\n<p>W/ table saw, drill, jigsaws, hacksaws, Particle Photon, Twilio</p>\n<h2>Challenges I ran into</h2>\n<p>Making a blender cover, manufacturing the whole thing.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Turning a toggle switch on and off using a servo :)</p>\n<h2>What I learned</h2>\n<p>How to use Particle Photon, drills, and manufacture stuff!</p>\n<h2>What's next for Bl3ndr</h2>\n<p>A portable version Bl3nder\nP.S. Or a Bl3nder that really works</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">tablesaw</span></li><li><span class=\"cp-tag\">drill</span></li><li><span class=\"cp-tag\">acrylic</span></li><li><span class=\"cp-tag\">wood</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/particle\">particle</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/bng8/ChurnTheButter\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/bng8/ChurnTheButter\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["The Visual Constitution", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"The Visual Constitution \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/066/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"The Visual Constitution \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/067/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>One of our team is a student at Harvard Law, and every semester she takes classes with students from around the world, some of whom have never studied American law before. The professors always have to recommend basic materials on the structure of American government, but these students don't always have the time to read them, and it can be hard to absorb so much material from a book. We all know how complicated questions about the Constitution can be. What if there was a web app that not only told you what the Constitution says, but does so in words you can understand, and with helpful context and explanations to go along?</p>\n<h2>What it does</h2>\n<p>Our app allows users to browse the Constitution by clause, providing interesting facts, outside resources, and definitions of terms along the way. In addition, it gives users the chance to simplify any clause into modern language.</p>\n<h2>How we built it</h2>\n<p>Our app uses TNLP (Truly Natural Language Processing) to simplify the Constitution. We use Bing Analytics to locate patterns in the archaic language that can be programmatically transformed into more familiar phrases.</p>\n<h2>Challenges we ran into</h2>\n<p>Lack of sleep, of course (and the resulting code confusion). It was difficult to set up the initial architecture, given the multilevel tree structure of the document. It also took a while to interface with the three different Microsoft APIs that we used.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We think we've come up with some clever linguistic adaptations to clarify the language, and we think our app is beautiful.</p>\n<h2>What we learned</h2>\n<p>We all learned a lot about Javascript and the APIs we worked with. We also all picked up some interesting factoids about the Constitution and about natural language processing.</p>\n<h2>What's next for The Visual Constitution</h2>\n<p>We'd like to keep building content and increasing the sophistication of the language processing. We think the app could be very useful for students of all ages and backgrounds.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">mern</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag\">bing-news</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bing-search-api\">bing-search-api</a></span></li><li><span class=\"cp-tag\">microsoft-linguistic-analysis-api</span></li><li><span class=\"cp-tag\">html/css</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://www.visualconstitution.com\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.visualconstitution.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.visualconstitution.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["CoinChat", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Bots are becoming more powerful and conversational these days, allowing users to have mini-assistants for simple tasks. Certain bots act as financial advisors, helping you control your spending. CoinChat takes this a step further, by allowing you to take control of your entire bank account. </p>\n<h2>What it does</h2>\n<p>With CoinChat, you can perform transactions, scan and deposit checks, and view your accounts balance and information. This can all be done with a simple conversation with the advanced, and friendly  AI.</p>\n<h2>How we built it</h2>\n<p>We used Microsoft LUIS, along with the Cognitive Services API to power the bot, training it with different intents and utterances to make it robust. The Capital One API powers the banking functionality, allowing us to open, perform deposits and perform transactions on accounts. </p>\n<h2>Challenges we ran into</h2>\n<p>Integrating LUIS into the application. Setting up Azure. Finding appropriate documentation. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>This is our first time working with NLP and OCR, and it worked quite well</p>\n<h2>What we learned</h2>\n<p>More about NLP and Computer Vision</p>\n<h2>What's next for CoinChat</h2>\n<p>More banking functionality! Better, more conversational responses from the bot. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/azure\">azure</a></span></li><li><span class=\"cp-tag\">cognitive-services</span></li><li><span class=\"cp-tag\">bot-framework</span></li><li><span class=\"cp-tag\">nessie</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/timmui/CoinChat\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/timmui/CoinChat\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Hangman", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>The goal of the game is very similar to Hangman. However, this version is more educational specific and more directed towards certain subjects. There will be a question asked and the answer is hidden. If you don't know the answer, you can guess a letter. Be careful, it's three strikes and you're out! Everything is through speech recognition so enunciate! Hopefully this is a good study tool!</p>\n<h1>Note: Ignore the username and password. Just click log in and start and you should be fine.</h1>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/ketruong/HangmanVoice.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ketruong/HangmanVoice.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["No Swiping", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>No Swiping</h2>\n<p>Our app facilitates lending and borrowing of things like books, tools, kitchenware, and games, especially for the college student sector of the population. People earn points for lending items and they spend points when they borrow.</p>\n<h2>The Future of our Project</h2>\n<p>We want to include profile pages so that people can be rated on their returns.\nWe hope to include filtering by location and solidify out filter-by-category system.\nWe also love our fox theme, and would like to include some more animations. It is a particularly foxy theme, we think.\nWe also want to make it like Venmo, where if users run out of points, they can pay for more.</p>\n<h2>Things we Learned</h2>\n<p>We gained plenty of experience in troubleshooting the sqllite database. Furthermore, we gained valuable experience in front-end development and design. For example, we taught ourselves the basics of Bootstrap(!!)</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/laurachevalier4/HackHarvardFall2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/laurachevalier4/HackHarvardFall2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Vitae", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We attend BU's job fair where they handed out a 30 page packet of companies attending. Not only was this a waste of paper, but it was lacking a \"search\" feature. We also had about 30 copies of our Resume printed out on paper that we had to go digging into a folder to find it. This brought about Vitae.</p>\n<h2>What it does</h2>\n<p>This app brings Job fairs to enter the 21st Century. It allows you to share your resume efficiently from Google Docs and 100% paperless. It also allows you to see companies that are attending the Job Fair and search there list of needed employees. </p>\n<h2>How we built it</h2>\n<p>Front end using Swift for iOS app, backend node.js, express and hosted on Heroku</p>\n<h2>Challenges we ran into</h2>\n<p>Google Drive API, Express uploading files, storing files local on device</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Being able to sign in with Google, Upload a file, generate a QR Code, Scan it and show Resume.</p>\n<h2>What we learned</h2>\n<p>iOS front end tricks and HTTP requests</p>\n<h2>What's next for Vitae</h2>\n<p>Testing, allow company reps to upload their information. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/iphone-sdk\">iphone-sdk</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-drive-api\">google-drive-api</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/bcootner/resumeq\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/bcootner/resumeq\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/bakpakin/ResumeQBackend\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/bakpakin/ResumeQBackend\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the front-end developing for iOS in xCode using Swift. ", ""]], ["MemeHub", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>M e m e s .</p>\n<h2>What it does</h2>\n<p>It is an iOS app that generates memes for the user.</p>\n<h2>How we built it</h2>\n<p>We used Swift.</p>\n<h2>Challenges we ran into</h2>\n<p>We honestly had no idea what to hack, so we went with memes.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We made the world a better place.</p>\n<h2>What we learned</h2>\n<p>We learned how to program in Swift and how to use XCode.</p>\n<h2>What's next for MemeHub</h2>\n<p>Users can submit their own memes to be generated for other users.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/maCaroniSalad/Memehub\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/maCaroniSalad/Memehub\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Water Sound Pad", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Water Sound Pad \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/015/datas/gallery.jpg\"/>\n<p>\n<i>Main web app setup with menu.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Water Sound Pad \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/018/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Water Sound Pad \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/019/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Water Sound Pad \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/020/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Water Sound Pad \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/021/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We had wanted to make a simple and clean audio pad web app that would present cool-looking effects to echo the feeling of the music. HackHarvard seemed like a good venue to try to develop something like this, so we decided to go ahead and hack it up.</p>\n<h2>What it does</h2>\n<p>The web app allows a user to hit keys on the keyboard that serve as audio pads whose output is reflected by water ripples and a changing sphere in a small interactive environment. </p>\n<h2>How we built it</h2>\n<p>We used Evan Wallace's LightGL - an very lightweight implementation of more conventional heavy WebGL libraries - in order to make the web app and shade the various objects as necessary. We also used Evan Wallace's caustic effects in order to correctly simulate fluid dynamics in the app. We obtained the sounds for the sound pads from <a href=\"http://www.freesound.org\" rel=\"nofollow\">www.freesound.org</a> and worked them into the app with HTML5's audio player.</p>\n<h2>Challenges we ran into</h2>\n<p>Both of us were new to LightGL, and it turns out that it is ways different from other WebGL implementations. We ran into some challenges over how to implement some conventional WebGL effects in LightGL, but we overcame them.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We're proud that we did end up getting at least part of our initial vision implemented and that we were able to overcome some of the difficulties we had with LightGL.</p>\n<h2>What we learned</h2>\n<p>We learned, at least at a proficient level, how to use LightGL and also how to define shaders in this system.</p>\n<h2>What's next for Water Sound Pad</h2>\n<p>What we want to do next is enhance the visual effects even further with dynamic ambient lighting and add looping functionality.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/webgl\">webgl</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/isaykatsman/watermixingpads\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/isaykatsman/watermixingpads\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on modifying the front-end to include beat-pad interaction and also on some of the backend shaders for the effects we used.", ""]], ["Musie", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Musie \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/937/datas/gallery.jpg\"/>\n<p>\n<i>screen #2</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Musie \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/938/datas/gallery.jpg\"/>\n<p>\n<i>screen #1</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Musie \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/939/datas/gallery.jpg\"/>\n<p>\n<i>screen #3</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Musie \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/940/datas/gallery.jpg\"/>\n<p>\n<i>screen #6</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Musie \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/941/datas/gallery.jpg\"/>\n<p>\n<i>screen #4</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Musie \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/942/datas/gallery.jpg\"/>\n<p>\n<i>screen #7</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Musie \u2013 screenshot 7\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/943/datas/gallery.jpg\"/>\n<p>\n<i>screen #5</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Musie \u2013 screenshot 8\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/944/datas/gallery.jpg\"/>\n<p>\n<i>screen #8</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>The inspiration for this application stemmed from the inconvenience of searching for the right music at the right time. Why not use your facial expressions (or others) and let us handle the songs for you!</p>\n<h2>What it does</h2>\n<p>This mobile app generates a playlist of songs based on the emotions captured in a photo. The emotions are identified using Microsoft\u2019s Cognitive API, from which we leveraged their leading algorithms in emotion detection. Combined with a mobile device, your phone now becomes the \u201cemotional\u201d mobile jukebox!</p>\n<h2>How we built it</h2>\n<p>We built it using Java alongside with the Android SDK, Spotify\u2019s SDK and powering the emotion detection is Microsoft\u2019s Cognitive Emotion API. We also made use of third party libraries to assist us in generating features such as the Radar Graph that depicts the emotions detected by the Microsoft Cognitive API. For the UI and prototype, we used Figma, Sketch3, Adobe Illustrator and Invision.</p>\n<h2>Challenges we ran into</h2>\n<p>We ran into some troubles midway through after connecting Spotify and our application together, the issue was to do with prioritizing what to accomplish at first, and soon transitioned into more of a technical problem that involved the use of Microsoft Cognitive API. We initially had some issues with the transmission of data from the user to the API, but that got resolved quickly with the aid of the kind mentors at the Microsoft booth. After jumping over the hurdle, the bulk of the other issue was detecting and tracing the issues that the application faced.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Producing a working functioning application within 36 hours, and it makes some pretty sick tunes too!</p>\n<h2>What we learned</h2>\n<p>We learned that prioritizing over the quantity of features wasn\u2019t the most important thing, rather the quality and experience that we gain from creating the application together as a team. Effective communication and teamwork is required from both the developers side of things and the graphical, arts side of the application.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag\">microsoft-cognitive-api</span></li><li><span class=\"cp-tag\">figma</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sketch\">sketch</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/adobe-illustrator\">adobe-illustrator</a></span></li><li><span class=\"cp-tag\">adobe-premiere</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/liyucun/HackHarvard\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/liyucun/HackHarvard\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the design of Musie, including wireframe, UI/UX design and final prototype.", "Worked on the backend for the majority of the project, learning how to integrate Spotify's SDK into our application.", "", ""]], ["Newsmap", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Newsmap \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/934/datas/gallery.jpg\"/>\n<p>\n<i>general UI</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>The initial idea was to create a map of all the instances where global warming was affecting communities across the world. However, our idea evolved into a more general concept of visualizing a wider range of global events. Visualization became the primary goal of our web app as we found that the concept of visualization creates a bigger impact on us as readers of the news. We believe that by highlighting a snippet from the news coverage through a gif, we can garner greater interest for the events.</p>\n<h2>What it does</h2>\n<p>Newsmap takes in videos of most recent global news and produces a gif form the video at the location of the news on a map of the world, and if the user browsing the application deems it interesting, they can enhance and navigate to the article if desired.</p>\n<h2>How we built it</h2>\n<p>We built the web app by using the jvector maps API to acquire location data. The rest of the structure was built with python and javascript. Gifs of the videos were taken from the top news playlist of the world news channel and YouTube and were made into gifs using imgur. Then, the gifs were embedded into the map to produce a cool interactive representation of news.</p>\n<h2>Challenges we ran into</h2>\n<p>Most of our challenges were due to the complexity of API and the large size of the data that we were analyzing from news APIs. We also encountered challenges in the graphic design of the web app, such as the rendering of the gifs.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are proud of finishing a product that meets the interests of our group.</p>\n<h2>What we learned</h2>\n<p>We learned a lot about application of APIs like jvectormap.</p>\n<h2>What's next for Newsmap</h2>\n<p>The next step is to specify our news data even further and utilize Youtube APIs and other news centre APIs to automate our back-end process. As well as an automated process of resizing the gifs to match the dimensions of the regions.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/imgur\">imgur</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/github\">github</a></span></li><li><span class=\"cp-tag\">xampp</span></li></ul>\n</div>\n</div>", ["", "", ""]], ["Hungry Holmes", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Hungry Holmes \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/126/datas/gallery.jpg\"/>\n<p>\n<i>SignUp Page</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Hungry Holmes \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/129/datas/gallery.jpg\"/>\n<p>\n<i>List of College Campuses</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Hungry Holmes \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/131/datas/gallery.jpg\"/>\n<p>\n<i>Adding a new campus</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Hungry Holmes \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/299/datas/gallery.jpg\"/>\n<p>\n<i>Explorer Mode : Choosing cuisine Preferences to find food</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Hungry Holmes \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/216/datas/gallery.jpg\"/>\n<p>\n<i>Explorer Mode : Setting time - Searching Food based on time preferences</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Hungry Holmes \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/222/datas/gallery.jpg\"/>\n<p>\n<i>Announcer Mode : Setting cuisine preferences</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Hungry Holmes \u2013 screenshot 7\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/269/datas/gallery.jpg\"/>\n<p>\n<i>Announcer Mode : Tagging Venues, Meal Types, Expiration Times</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>37 Million tonnes of food waste generated annually. \n$144 B is wasted on food. \nAn average student contributes to 142 pounds of food waste per year.\nThe environmental impact is huge: Food waste is the single largest component going into municipal landfills, and quickly generates methane.\nThe social impact : 1 in 7 people are food insecure. </p>\n<h2>What it does</h2>\n<p>Hungry Holmes is to minimize food wastage from campus wide events and venues. It is a crowdsourced map for students on campuses to tag/find venues that have leftover/free food based on location, cuisine, time and expiration. </p>\n<h2>How we built it</h2>\n<p>Technologies used : Firebase, Google Maps API , </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Not only would this app work to minimize food wastage, it a handy tool for cash strapped students to find food alternatives. </p>\n<h2>What we learned</h2>\n<p>The-all-you-can eat style of hospitality in college campus events is problematic. We found that redistributing surplus food would be beneficial to the organizers and the student community. This app is a quirky take on bringing students to collaborate to reduce food excess problems.</p>\n<h2>What's next for Hungry Holmes</h2>\n<p>Launch a pilot run in 5 college campuses and measure minimizing wastage outcomes. </p>\n<p>Credit : Noun Project for Icons.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag\">maps</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Skouriskaze/FindFood\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Skouriskaze/FindFood\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["?", "", ""]], ["Deep Sense", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Deep Sense \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/865/datas/gallery.jpg\"/>\n<p>\n<i>Logo</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Deep Sense \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/074/datas/gallery.jpg\"/>\n<p>\n<i>Screenshot-1 </i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Deep Sense \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/078/datas/gallery.jpg\"/>\n<p>\n<i>Screenshot-2</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Creating a more exclusive experience of enjoying images</p>\n<h2>What it does</h2>\n<p>Takes an image, finds the sentiment of the image and does object recognition. Later a RNN makes a poem on the image. The RNN is trained on famous poets of the past like Shakespeare,Robert Frost and T.Elliot. The RBM generates the music from the image based on its sentiment.The RBM is trained on famous musicians and try to convey the feelings of happiness, sadness, scary and suspense.</p>\n<h2>How we built it</h2>\n<p>We created two deep generative models: RNN and RBM. Later, we used the Microsoft Cognitive Services API to get objects and emotions given an image. This API has been implemented in the iPhone. As soon as the iPhone receives the tags and emotions, it sends to the servers for text and music generation. Connection between the iPhone and the servers is established using Flask and Rest APIs. On top of that, we create a GIF using 20 frames of the image. We provide the user a culmination of all senses in the form of text, music and image using just a picture. What makes it even more interesting is, the text and music is dynamically generated by the computer. And, the poems generated are created based on the style of different poets.</p>\n<h2>Challenges we ran into</h2>\n<ol>\n<li>Deep neural nets require a lot of computation power due to which training takes a lot of time. And since we were creating models for different poets and different emotions of song, time was a huge constraint.</li>\n<li>Establishing communication between our servers (laptops) and the iPhone was very complicated. We used sockets  initially but it wasn't working.</li>\n<li>After working on the previous problem for few hours, we came up with the idea of implementing Flask and creating our own Rest APIs.</li>\n<li>Learning something as diverse as Rest APIs was a challenging problem.</li>\n<li>After creating all the models of the project, getting everything to perfect together was difficult, but we completed it.</li>\n</ol>\n<h2>Accomplishments that we're proud of</h2>\n<ol>\n<li>Two of our members did not have enough expertise on front end development. But, they learnt about Flask and Rest APIs and was able to merge it with their existing back-end code.</li>\n<li>The fact that we were able to work together as a team on different concepts and implementations and ultimately being able to merge everyone's code without much difficulties shows how well we communicated as a team.</li>\n<li>Initially we didn't think of implementing GIFs for a given image. It was one of our team-mate's idea that lead to that and this kind of shapes up our entire application as a whole.</li>\n<li>We created a new iteration of GIF which includes music and text generation.</li>\n<li>Most importantly, we have been able to inculcate modern state of the art techniques to bring back the art form of legendary poets and musicians into something which is considered to be the most famous form of media -- Image. This is our version of 'Hack the Past'.</li>\n</ol>\n<h2>What we learned</h2>\n<ol>\n<li>We learned the importance of working together as a team and communicating at every point of time. This gives all the members an idea of the progress being made by the members.</li>\n<li>Setting a deadline for every task boosts up the performance of all the team members and also gives enough time to validate an evaluate the project at the end.</li>\n</ol>\n<h2>What's next for Deep Sense</h2>\n<ol>\n<li>Our main motive will be to entertain the users by providing a fun, intuitive and an interesting UI which not only presents the information in a fun way but also brings back the memory of poets and musicians who are not alive, by dynamically generating poems and songs in their style.</li>\n<li>Along with the existing RBMs and RNNs, we can introduce a recommendation engine that suggests users about poets with respect to the location of the user. eg: If the user is in Cambridge, MA suggestions like Robert Frost might pop up. In India, suggestions like Rabindranath Tagore might appear.</li>\n<li>For the users, we will be improving the performance of our app for a better overall experience.</li>\n<li>In terms of research, our data can be used by scientists to measure correlation between different forms of data -- image, text, music and come up with better models of interaction between different forms of media.</li>\n</ol>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">microsoft-cognitive-services</span></li><li><span class=\"cp-tag\">tensorflow</span></li><li><span class=\"cp-tag\">keras</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/iphone-sdk\">iphone-sdk</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ios\">ios</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/VergaraF/Deep-Sense\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/VergaraF/Deep-Sense\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked in the development of the iOS app using Swift. I mainly worked in the backend of the iOS app, implementing Microsoft Cognitive Services API (Computer Vision and Sentiment Analysis), in Swift. Then, I helped to implement the restful API developed in Python (Flask). Lately, I contributed with the communications between server and iPhone, where I created and played MIDI (audio) files in iOS. I strongly contributed in the main design of the app. ", "I worked on creating the Restricted Boltzmann Machine to generate music.\n(Blogs of Dan Shiebler on RBM's and RNN'S really inspired me to explore on this technique more.)\nThe Microsoft Cognitive Services were used to detect the sentiments in the image and I created a  deepRBM, kind of a stacked RBM architecture for music generation.Using that I trained 5 models on sentiments like: \n1. Happiness \n2. Sadness \n3. Scary \n4.Suspense", "I worked on the front-end of the app and connecting the iOS app to the backend. In the front-end, I worked on implementing the AVFoundation camera to allow the user take a 20 frames of an image taken in 0.5 seconds. I also worked with Fabian to decode the base64 into MIDI and this was one of our biggest challenges.", "I worked on the poem generation part of the backend. I used Keras with Tensorflow as the backbone. Models were trained on .txt files containing poems of famous poets. \nAfter getting access to the poem, I was responsible for writing a server program which interacts with the iOS device. This was done using Flask and my own Rest API."]], ["-", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"- \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/296/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"- \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/327/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<h2>What it does</h2>\n<h2>How we built it</h2>\n<h2>Challenges we ran into-</h2>\n<h2>Accomplishments that we're proud of</h2>\n<h2>What we learned</h2>\n<h2>What's next for -</h2>\n</div>\n</div>", ["", ""]], ["AR+", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"AR+ \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/835/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"AR+ \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/834/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"AR+ \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/840/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"AR+ \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/833/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"AR+ \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/832/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"AR+ \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/836/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"AR+ \u2013 screenshot 7\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/838/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"AR+ \u2013 screenshot 8\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/837/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"AR+ \u2013 screenshot 9\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/431/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"AR+ \u2013 screenshot 10\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/432/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"AR+ \u2013 screenshot 11\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/839/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"AR+ \u2013 screenshot 12\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/842/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"AR+ \u2013 screenshot 13\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/841/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"AR+ \u2013 screenshot 14\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/844/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"AR+ \u2013 screenshot 15\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/424/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"AR+ \u2013 screenshot 16\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/846/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"AR+ \u2013 screenshot 17\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/845/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Bringing back old technology we though all the way back when people used to write in caves. The creativity of cave painting and today's graffiti shares similarity of empowering community, story telling, entertainment, and a lot of times, they form territories. AR+ is the new cave painting of the new era.  </p>\n<h2>What it does</h2>\n<p>AR+ is a social platform integrated in AR that invites users to interact each other through creativity </p>\n<h2>How we built it</h2>\n<p>2 Programmers and 2 Designers worked head to head using coding skills and design skills that they have learned. We had 4 people with different background. We have educational background in programming, designing, and business. </p>\n<h2>Challenges we ran into</h2>\n<p>Challenges were debugging and also trying to come up with a tangible presentation within 3 days without sleep was our challenge. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are proud that we have formed perfectly matched teammates. Even though we are from different background our passion drove ourselves forward. </p>\n<h2>What we learned</h2>\n<p>We learned how to work with people from different majors. </p>\n<h2>What's next for AR+</h2>\n<p>This is a strategy pitch for Microsoft. \nwe want to continue building AR+ platform \nto have positive social impact. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag\">rhino</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/adobe-illustrator\">adobe-illustrator</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/photoshop\">photoshop</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/adobe-creative-sdk\">adobe-creative-sdk</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sketch\">sketch</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["Time.Me", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Time.Me \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/666/datas/gallery.jpg\"/>\n<p>\n<i>Home page</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Time.Me \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/667/datas/gallery.jpg\"/>\n<p>\n<i>Trip overview</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Time.Me \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/673/datas/gallery.jpg\"/>\n<p>\n<i>Number of riders at the stop1</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Time.Me \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/671/datas/gallery.jpg\"/>\n<p>\n<i>Number of riders at the stop5</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration - To make my own morning commute easier.</h2>\n<h2>What it does - Finds the 5 least congested transit stops.</h2>\n<h2>How we built it - Built a back end to simulate the real world that pulls live data on transit stops and their population. Connected the back end with the front end in a simple and easy to use interface.</h2>\n<h2>Challenges we ran into - Connecting the fronted with the back end.</h2>\n<h2>Accomplishments that we're proud of - Creating a product that can have immediate impact on the average human.</h2>\n<h2>What we learned - Working together as a team and effective time management.</h2>\n<h2>What's next for Time.Me - Improve the GUI. Provide a recommended route instead of leaving the decision up to the app user.</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/love\">love</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mysql\">mysql</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/heroku\">heroku</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-maps\">google-maps</a></span></li><li><span class=\"cp-tag\">api</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/DulanjiJ/HackHarvard/\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/DulanjiJ/HackHarvard/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/DulanjiJ/HackHarvard/\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/DulanjiJ/HackHarvard/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Senti Audio", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Senti Audio \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/110/datas/gallery.jpg\"/>\n<p>\n<i>home page</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Senti Audio \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/115/datas/gallery.jpg\"/>\n<p>\n<i>camera music player view</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Senti Audio \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/153/datas/gallery.jpg\"/>\n<p>\n<i>Sample training data</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We were inspired by old-school music players like jukeboxes and iPod shuffles. Sometimes, not knowing what song is playing next can be an exciting thing.  </p>\n<p>Process:\n-&gt;Our machine learning model organizes the mp3 files in a user's phone based on the emotion most prominent in the song\n-&gt;The user takes a picture of themself\n-&gt;The app determines an emotion associated with that picture (Microsoft Cognitive API) \n-&gt;The app starts playing a list of songs that have the emotion from the picture tagged to them</p>\n<h2>How we built it</h2>\n<p>A lot of googling and Christophe's debugging skills. Combining snippets of code we found online here and there helped.</p>\n<h2>Challenges we ran into</h2>\n<p>Android studio is a difficult IDE to work with. Using the audio signal processing library was really tough because it had really poor documentation and wasn't used widely at all. We also had no experience with signal processing. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Made our own training data for a neural network.(AWS)\nUsed a complex (basically underground) library for audio signal analysis.\nHave </p>\n<h2>What we learned</h2>\n<p>How to use signal processing libraries \nHow to train a neural network\nData aggregation and analysis</p>\n<h2>What's next for Senti Audio</h2>\n<p>Build our own neural network\nBetter training to categorize songs</p>\n<p>Some food for thought:\n\"I want my world to be fun. No rules, no nothing. Like, no one can stop me. No one can stop me.\" - Justin Bieber\n\"I'm looking forward to influencing others in a positive way. My message is you can do anything if you just put your mind to it.\" - Justin Bieber, Stratford, Ontario </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag\">tarsosdsp</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/machine-learning\">machine-learning</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/NgHanson/SentiAudio\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/NgHanson/SentiAudio\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["StudyNow", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"StudyNow \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/661/datas/gallery.jpg\"/>\n<p>\n<i>StudyNow Search Groups Page</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"StudyNow \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/662/datas/gallery.jpg\"/>\n<p>\n<i>StudyNow Group Page</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"StudyNow \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/663/datas/gallery.jpg\"/>\n<p>\n<i>StudyNow Profile Edit</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"StudyNow \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/664/datas/gallery.jpg\"/>\n<p>\n<i>StudyNow Home Page</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Everyone knows the feeling of walking into a class and feeling like you don't know anyone. It's daunting and scary. What's even more scary is that many people choose to do nothing about it, and they live through the whole class alone, from start to finish. Nick and I wanted to change that by creating an outlet for people to form groups and study or do homework together, specifically built around classes. We wanted people to go out and talk to others by making them fill out information and send out requests to study, while removing the initial hurdle of awkward introductions and superficial interactions</p>\n<h2>What it does</h2>\n<p>StudyNow is a web application that lets you create a profile, equipped with your classes, free time, and a short bio, and then sends you off to make or request to join groups. Study groups are given their own page to upload PDFs, post meeting notes, plan future events, etc, to incentivize students to join as many as they can. As a result, the network of communication keeps growing, and classes suddenly start to feel like a great way to meet many new people. </p>\n<h2>How we built it</h2>\n<p>We used the python framework Django, along with a SQLite database, as the backbone of this project. We took advantage of Django's smooth form and model handling in order to quickly move onto important functionality, such as joining groups, ediitng profiles, and matching similar free times. We handled mostly all the logic with django, and used bootstrap for our front-end design work.</p>\n<h2>Challenges we ran into</h2>\n<p>From the very beginning, two of the four teammates we had wanted to work with dropped from the team, so we lost a lot of coding power from the start. However, by reprioritizing and really focusing on what we wanted to get done, we managed to produce the most important features of this project. Our technical challenges involved trying to incorporate AJAX into Django, which there is no standard way of doing, and we decided was not fundamental to our app in the end.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We're proud of building a working web application in two days with just two people. We're proud that we were able to incorporate as much functionality as we did, and that we were able to get a working test run of all the important features</p>\n<h2>What We learned</h2>\n<p>Prepare for the worst! Learn the ins and outs of your web framework before you get to the competition, and most importantly maintain a high degree of communication between each other.</p>\n<h2>What's next for StudyNow</h2>\n<p>We want to incorporate AJAX and create responsive pages in our application. We want to incorporate more functionality for groups that would entice people to join, such as announcements, calendars, events, and etc. We want to bring this application to the next level by enriching our design and templates with more eye catching and popping designs.</p>\n<h2>Getting Started</h2>\n<p>Using a virtual environment and python 3, run the following code</p>\n<pre class=\"language-nolang\"><code>pip3 install -r requirements.txt\n./manage.py makemigrations\n./manage.py migrate\n./manage.py runserver\n</code></pre>\n<p>Then go to <a href=\"http://localhost:8000\" rel=\"nofollow\">http://localhost:8000</a> and you're all set</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/django\">django</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/BrianGuo/HackHarvard/tree/master\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/BrianGuo/HackHarvard/tree/master\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["JASS - Jam as a Service", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"JASS - Jam as a Service \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/610/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>The Google Home. We like the way it works and we thought we should work on something that can be used by people with their IOT and connected Devices.</p>\n<h2>What it does</h2>\n<p>It records speech from any audio source including Google Home, Amazon Echo, a Cell phone or a computer and converts the speech to text. Sentiment analysis is done on the text using Microsoft Text Analytic API and a score between 0 (saddest) to 1 (happiest) is assigned to the what was said. Next, we take part of the analyzed text and send it to Datamuse API to generate words that seem like, sound like, rhyme like the individual words passed to it. These words will be arranged together with an algorithm that makes them sound and work good together.</p>\n<p>Features:\n    Listen to Audio\n    Converts speech to text\n    Does sentiment analysis of text from speech\n    sync lyrics to beats and uses rhymes and rhythms</p>\n<h2>How we built it</h2>\n<p>We built with love at Harvard</p>\n<h2>Challenges we ran into</h2>\n<p>A few issues with setting up and provisioning the three Microsoft API's. The other challenge we encountered was making the API's work together with the Datamuse API. Finally, we had limited time so we hardly completely polished the sound generation.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>It's something I'll use</p>\n<h2>What we learned</h2>\n<p>Start early. Build fast. Adapt.</p>\n<h2>What's next for JASS</h2>\n<p>The audio generation will be improved to make the resulting jam sound better. Additionally, we plan to to add facial recognition to detect emotions. In addition to that, we want to make JASS listen ubiquitously to users. Our plan is to bring JASS to Google Home, the Echo and the Hololens.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/azure\">azure</a></span></li><li><span class=\"cp-tag\">bing-speech-api</span></li><li><span class=\"cp-tag\">microsoft-luis</span></li><li><span class=\"cp-tag\">microsoft-text-analytics-api</span></li><li><span class=\"cp-tag\">datamuse-word-finding-query-engine</span></li><li><span class=\"cp-tag\">vanilla-javascript</span></li></ul>\n</div>\n</div>", ["", "", "", ""]], ["Congeneality", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>The inspiration for this project came from traditional genome-wide association studies (GWAS) that look for genetic variants associated with a specific trait. All of us have backgrounds biology and software development so we wanted to see how we could interweave the two and help accelerate variant discovery, while also providing a foundation for normal people to harness the power of their genomes. </p>\n<h2>What it does</h2>\n<p>In its early stages, Congeneality works best by taking a person's genetic data from 23andMe, and personality information from twitter. Using IBM Watson's Personality Insights API, Congeneality is able to receive insights on people's personality characteristics, needs, and values. This version of the web app focuses on the big five personality traits and 20 different single-nucleotide polymorphic (SNP) sites. The true power of Congeneality comes when there is enough statistical power to infer a person's genotype from their personality and vice versa. The genetic data and personality information is stored anonymously.</p>\n<h2>How we built it</h2>\n<p>We used three APIs: Twitter API, IBM Watson Personality Insights API, and the 23andMe API. For hosting, we used Heroku. We wrote several statistical algorithms to make relevant connections between genetic data and personalities. </p>\n<h2>Challenges we ran into</h2>\n<p>Two of us on the team had never used node.js so that was one hurdle we had to overcome. One of us was participating in a hackathon for the first time and one had never done any web development. One of the biggest challenges we ran into was the flow of data from the client and server, which kept us up the whole of the last night. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Being able to streamline the data collection is something we are proud of, especially considering how long it takes to complete traditional GWAS. We're also proud to have the web app running considering our team's overall lack of experience in web development.</p>\n<h2>What we learned</h2>\n<p>We learned a lot about web development and hosting. Two of us also learned a whole new programming language, node.js. We also learned how to use the APIs we chose for this project.</p>\n<h2>What's next for Congeneality</h2>\n<p>The future applications for a platform like this are tremendous. Congeneality has the ability to be a very advanced platform for things such as dog matching, dating, family planning, marketing, and much more. It is important to keep in mind user privacy, however, and for this reason, we chose to keep all data anonymous. We think genetic data has the ability to soon transform various industries, not just healthcare.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/postgresql\">postgresql</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/heroku\">heroku</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twitter\">twitter</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ibm-watson\">ibm-watson</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/23andme\">23andme</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/reevejd/HH2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/reevejd/HH2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Designed and implemented the PostgreSQL database, took care of hosting, wrote Node.js server code to manage database inserts and queries.", "", ""]], ["SpamBack", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"SpamBack \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/594/datas/gallery.jpg\"/>\n<p>\n<i>Spam Fighter God</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Annoying Spam</p>\n<h2>What it does</h2>\n<p>Get Even</p>\n<h2>How we built it</h2>\n<p>Energy drinks</p>\n<h2>Challenges we ran into</h2>\n<p>Basic talk</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Went shopping</p>\n<h2>What we learned</h2>\n<p>Coding's hard</p>\n<h2>What's next for SpamFighter</h2>\n<p>Make emails great again</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ruby\">ruby</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/machine-learning\">machine-learning</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/natural-language-processing\">natural-language-processing</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/gmail\">gmail</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/oauth\">oauth</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-gmail-oauth\">google-gmail-oauth</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/nltk\">nltk</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/LaxOn/SpamFighter\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/LaxOn/SpamFighter\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Spam filter machine learning algorithm, get mails from gmail mail box", "I worked on getting Oauth from Google API to work in JS and Java. Turns out Python is the easiest for that purpose. I also put together a little chatbot that replies the spam emails with a different message every time", "I spammed back", ""]], ["3D Snake Hologram", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"3D Snake Hologram \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/589/datas/gallery.jpg\"/>\n<p>\n<i>Setup</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>I was inspired by the 3D pyramid hologram videos on the internet. Holograms of jellyfish, fireworks, birds and much more. Here's an example: <a href=\"https://www.youtube.com/watch?v=7YWTtCsvgvg\" rel=\"nofollow\">https://www.youtube.com/watch?v=7YWTtCsvgvg</a> </p>\n<p>As a result, I begged to ask the question, can it be used as an interactive tool, whether it be a game like snake, or as a tool for everyday life.</p>\n<h2>What it does</h2>\n<p>Takes the classic old-school two-dimensional snake game and brings it into the 21st century with a three-dimensional component. Simple interface with key commands (r to start a new game, s to start the game, up and down for the y-direction, left and right for the x-direction, c and space for the z-direction.</p>\n<h2>How I built it</h2>\n<p>I built it using a java GUI setup. Using a simple 2D game that was placed on multiple Panels in a JFrame, with a lot of related components that needed to communicate with each other to synchronize the motion of the snake.</p>\n<h2>Challenges I ran into</h2>\n<p>Initially, I was trying to get all my JPanels to respond to key/action listeners. However, I noticed that focus was the issue so I had to learn how to key bind and then manipulate the key binding for each JPanel to produce the desired effect.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I am proud that I was able to implement this game in Java because I have heard Java's GUI is not the most user-friendly and multiple people recommended I start over with Python instead. However, I stuck course and persevered.</p>\n<h2>What I learned</h2>\n<p>I learned that the future is within our hands. People often use the same technologies, recycling the same APIs and hardware like Alexa and the Hololens. I just wanted to show that something new can be done that can make people question the technological process.</p>\n<h2>What's next for 3D Snake Hologram</h2>\n<p>Possible interaction between a webcam and the 3D pyramid hologram interface. Allowing recognition and reactions to nearby motions or gestures. I think this is a piece of hardware that I can be proud of because I don't need anything external other than my monitor, plexiglas and code.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag\">keybindings</span></li><li><span class=\"cp-tag\">jframe</span></li><li><span class=\"cp-tag\">jpanels</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/ssajnani/3D_Snake_Hologram\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ssajnani/3D_Snake_Hologram\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["CheckYourBias", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"CheckYourBias \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/555/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"CheckYourBias \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/556/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"CheckYourBias \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/562/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Social media has changed the way we consume news drastically over the years. Today, 62% of U.S. adults get their news from social media. \nScholars worry that this role of social media will lead to  \u201cecho chambers,\u201d where users see posts only from like-minded friends and media sources. This can be dangerous, as users are only solidifying their own perspectives without even being exposed to an alternative view.</p>\n<h2>What it does</h2>\n<p>Check your bias allows users to uncover their bias and discover an alternative view by evaluating their news source. </p>\n<p>The service allows users to compare news sources, articles and author according to their biases toward certain topics and to explore alternate points of views on these topics. </p>\n<h2>How we built it</h2>\n<p>CheckYourBias is built as a service in the cloud. It exposes a very simple API. </p>\n<p>The back-end is a REST like endpoint powered by flask and made in Python 3 using Microsoft Cognitive Services. This infrastructure is itself hosted on Microsoft Azure. </p>\n<p>The front-end is a native Android App. </p>\n<h2>Challenges we ran into</h2>\n<p>All team members stepped out of their comfort zone in order to learn new technologies. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We managed to create a solid team composed of four people from two different countries, 4 different universities and who didn't know each other before the event. </p>\n<p>We integrated the business and engendering sides in order to deliver a project with a powerful impact. </p>\n<h2>What we learned</h2>\n<p>Automating text analysis and obtaining meaningful data from the existing tools can be a challenge. Even with powerful APIs, it's still a challenge to make sense of the data and identify the emerging patterns in it. </p>\n<h2>What's next for CheckYourBias</h2>\n<p>Since linguistics understanding is such a rapidly evolving field it's hard to predict. Maybe a version in French ! </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">microsoft-cognitive-services</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/azure\">azure</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag\">smrry-api</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/HackHarvardCYB/CheckYourBias/tree/master\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/HackHarvardCYB/CheckYourBias/tree/master\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/DhruvaAlam/CYBApp\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/DhruvaAlam/CYBApp\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Speechify", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Speechify \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/484/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Speechify \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/488/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Speechify \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/494/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>I'm dyslexic and use text to speech on the mac 100+ times a day but text to speech is a hassle + time consuming to use</p>\n<h2>What it does</h2>\n<p>both highlight and reads out text from your computer in one stroke, configures better text to speech, allows users to pause text to speech half way through, send text to phone as spoken track + make audiobooks on the fly.</p>\n<h2>How we built it</h2>\n<h2>Challenges we ran into</h2>\n<p>Xcode 7.3.1 to Xcode 8, clicks, Harvard's wifi. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>So many</p>\n<h2>What we learned</h2>\n<h2>What's next for Speechify</h2>\n<p>Every kids with dyslexia out there will not only dream of this software but have it accessible to them. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag\">macos</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ios\">ios</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sketch\">sketch</a></span></li></ul>\n</div>\n</div>", ["", "", ""]], ["AG Future", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"AG Future \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/442/datas/gallery.jpg\"/>\n<p>\n<i>todo list / activity log</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"AG Future \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/443/datas/gallery.jpg\"/>\n<p>\n<i>control panel for greenhouse and outdoor fields</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"AG Future \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/444/datas/gallery.jpg\"/>\n<p>\n<i>data visualization and give suggestion</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"AG Future \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/445/datas/gallery.jpg\"/>\n<p>\n<i>data visualization and give suggestion</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"AG Future \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/447/datas/gallery.jpg\"/>\n<p>\n<i>data visualization and give suggestion</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"AG Future \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/446/datas/gallery.jpg\"/>\n<p>\n<i>data visualization and give suggestion</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"AG Future \u2013 screenshot 7\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/448/datas/gallery.jpg\"/>\n<p>\n<i>data visualization and give suggestion</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"AG Future \u2013 screenshot 8\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/449/datas/gallery.jpg\"/>\n<p>\n<i>homepage</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>HACK THE PAST, agriculture is the first level of economics and ag tech was proposed few years ago but without many implementations. Now farmer can use our app to better manage their products. Yeh, they can even get suggestion from our app in the future. Btw, agriculture is an old industry and technology today is quite new! HACK THE PAST!! :)</p>\n<h2>What it does</h2>\n<p>Help generalize report about whether forecast and rainfall situation. We can analyze the future environment conditions, including temperature, precipitation, atmospheric pressure, etc. We provide super cool and beautiful data visualization about the information we present. Our app in the future can be equiped with advanced machine learning algorithms and huge database to give advice based on the whether and some other conditions, in order to give advice about what is the ideal combination of illumination and oxygen concentration, etc. in a greenhouse, but also prediction about harvest time and unit price for the products. (Yes, the predition about market is also based on machine learning technique). Also it will keep track of activities by farmers and system itself, and provides a simple to do list.</p>\n<h2>How we built it</h2>\n<p>We built a web app, to visualize the data we fetch from the Internet (with web crawler implemented with python), present the sugguestion about farming and greenhouse management. We use HTML5, CSS3, JavaScript and lots of API like Google Chart, AngularJS to make our amazing website.</p>\n<h2>Challenges we ran into</h2>\n<p>Sometimes got stuck in some usage of API and how to organize the data we have in order to improve user experience and better help user to farm.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>It's Marc's first Hackathon outside of Canada and Eric's first Hackathon! We made it! Also we are really proud of our cool and beautiful website. We can believe what we have made in the last 30 hours.</p>\n<h2>What we learned</h2>\n<ol>\n<li>How to cooperate with teammates, which is really important! In such a short time, good communication and cooperation are the key to eventual success.</li>\n<li>How to design user interface and improve user experience, how to consider the experience of a user from user's perspective.</li>\n</ol>\n<h2>What's next for AG Future</h2>\n<p>Map our app to some hardwares like some sensors that detect the environment conditions, or some drones that can carry cameras to give a closer look at the farms (even when the manager or farmer is not closed to the farm). Also we want it to equip with powerful machine learning techniques so that we can give feedbacks about current conditions and give advice and suggestions for future improvement. Besides, for new farmer with less experiment, our app will give him/her enough information and advice telling him what may be right and what may be harmful to the crops, and more importantly all the info is presented in a user-friendly way. Moreover, besides from giving advice about when to harvest, we can give advice about when is the best period to sell their products and how long it may last, with what price they sell can get most profit.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/angular-js\">angular.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-chart\">google-chart</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://agfuture-mastero.rhcloud.com/\" rel=\"nofollow\" target=\"_blank\" title=\"http://agfuture-mastero.rhcloud.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>agfuture-mastero.rhcloud.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Backend server, Front-end, framework, integration. ", ""]], ["Web Breakz", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Web Breakz \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/324/datas/gallery.jpg\"/>\n<p>\n<i>This is what Web Breakz looks like when you first go to the link and arrive at the home page.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Web Breakz \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/325/datas/gallery.jpg\"/>\n<p>\n<i>After you push the button to \"judge me and my internet use\" you get a timer that counts 30 minutes until your next break.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Web Breakz \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/421/datas/gallery.jpg\"/>\n<p>\n<i>Once your break is here, the time goes to zero and you can \"stop this madness.\"</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Web Breakz \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/426/datas/gallery.jpg\"/>\n<p>\n<i>You know the sound is playing if it is indicated on your web browser's tab, opposite side of the favicon.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Web Breakz \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/357/datas/gallery.jpg\"/>\n<p>\n<i>You can then push the \"judge\" button again for another countdown.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Web Breakz \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/332/datas/gallery.jpg\"/>\n<p>\n<i>This is what the about page looks like after you go to it through the \"why am I here?\" button.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Web Breakz \u2013 screenshot 7\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/371/datas/gallery.jpg\"/>\n<p>\n<i>Once scrolled to the bottom of the page, you find the rest of the questions/answers and there you find a button to go back to home.</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We were inspired by our procrastination on doing school work due to us surfing the web. We wanted to create an app that would help us get back on track while also being fun and easy to use.</p>\n<h2>What it does</h2>\n<p>Web Breakz gives the user a countdown for 30 minutes. After those 30 minutes of productivity, the web app has a funny sound go off to alert the user of break time. You also have an about page all about being a productive human and being a part of the procrastination nation (actually it just has info about the app).</p>\n<h2>How we built it</h2>\n<p>We used JavaScript to actually build the countdown on the home page through multiple functions working together. Since it is a web app, we used HTML to build the site up, CSS to stylize to our aesthetic tastes, and python to bring the app together as a whole.</p>\n<h2>Challenges we ran into</h2>\n<p>We really wanted the user to be able to input how long the countdown would go on until their break, but for some reason the form on the HTML homepage file wasn't sending the variables over to the JavaScript file. Since this just wasn't working out, we ended up changing the code a bit to always countdown 30 minutes until break time. We also wished we could've somehow detected if the browser was in use so the application could yell at the user for surfing the web when it wasn't break time.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are super proud of the countdown since it was a pain to try and figure out how to actually come up with the time counting down through the push of a button. We are also very proud of making the soud work every time since it was glitching out for a long time throughout our testing. Last thing, the aesthetic of this app looks clean, simple, and retro to keep you going through your work.</p>\n<h2>What we learned</h2>\n<p>We learned that we can actually link variables from a form to JavaScript even if we couldn't get it working in the end. We also learned that we need to brush up on our JavaScript since the python and HTML/CSS wasn't as difficult and frustrating to get down than the countdown with JavaScript.</p>\n<h2>What's next for Web Breakz</h2>\n<p>Web Breakz can be even more user-friendly by allowing the user to choose how long they want to work before they take a break. We also would like to have the sound byte be randomly chosen from an array of sound bytes on the back-end to change it up a bit so the app is more fun to use.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/rebeccaruva/web-breakz\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/rebeccaruva/web-breakz\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"http://web-breakz.appspot.com/\" rel=\"nofollow\" target=\"_blank\" title=\"http://web-breakz.appspot.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>web-breakz.appspot.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Twitter Reddit Trakker", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Twitter Reddit Trakker \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/478/datas/gallery.jpg\"/>\n<p>\n<i>Screenshot of TRT in action! Figure shown is comparing various sports-related subreddits</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Twitter Reddit Trakker \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/423/datas/gallery.jpg\"/>\n<p>\n<i>Distribution of Tweets around 2am</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Twitter Reddit Trakker \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/422/datas/gallery.jpg\"/>\n<p>\n<i>Trending topics on /r/reddit-politics and their sentiments</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We started with the idea of using the Microsoft Cognitive Services API to analyze news and social media text. We wanted to be able to be able to compare different sources across the Internet on the basis of content trending in their communities and attitude.</p>\n<h2>What it does</h2>\n<p>In a way, it helps support anthropology research.  Our tool produces various visualizations about the popularity and sentiments surrounding trending topics on the web. Data can either be obtained for what's trending this instant, or analysis can be run on data saved from the past. The visuals allows for one to easily get a snapshot of online communities and interpret what is important to their members.</p>\n<h2>How we built it</h2>\n<p>We programmed in Python 2, which all members were fairly knowledgeable about prior to this hackathon. Retrieving text from <a href=\"https://dev.twitter.com/rest/public\" rel=\"nofollow\">Twitter</a> and <a href=\"https://www.reddit.com/dev/api/\" rel=\"nofollow\">Reddit</a> required writing web scrappers and accessing their apis. Natural language processing was provided by the <a href=\"https://www.microsoft.com/cognitive-services/en-us/text-analytics/documentation\" rel=\"nofollow\">Microsoft Cognitive Services API</a>. Graphs were produced with the <a href=\"http://matplotlib.org/index.html\" rel=\"nofollow\">matplotlib</a> and <a href=\"https://docs.scipy.org/doc/numpy/reference/\" rel=\"nofollow\">NumPy</a> libraries. 1000 goldfish and 36 hours later, we finished our app.</p>\n<h2>Challenges we ran into</h2>\n<p>It took a bit of time of our team to get started-- we didn't come to the hackathon with any ideas beforehand. Once we settled on our project we still encountered issues with lack of prior experience, time (two members had other commitments during the event), and technical problems such as authentication, and data validation, which we all overcame.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Seeing our app produce the first graphs was an exciting time-- even at that early time we were trying to interpret what it might mean about that corner of the Internet! Additionally, I think we all got to try something new, which was valuable.</p>\n<h2>What we learned</h2>\n<p>We learned about language processing and analyzing different kinds of data -- textual and numerical.</p>\n<h2>What's next for Twitter Reddit Trakker</h2>\n<p>Experimenting with more sources (such as news RSS feeds, Google Trends, Facebook, ect.), different visualizations, and finding notable posts and adding hover text to graph!!!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twitter\">twitter</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/reddit\">reddit</a></span></li><li><span class=\"cp-tag\">microsoft-cognitive-services-api</span></li><li><span class=\"cp-tag\">matplotlib</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/jmullercuber/HackHarvard2k16\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/jmullercuber/HackHarvard2k16\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I helped produce visualizations, analyzed data, and set up the project file organization", "", ""]], ["Epsilon", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Epsilon \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/420/datas/gallery.jpg\"/>\n<p>\n<i>Logo</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>As college students, we have very busy lives and often need a calendar management system like Google Calendar. Whenever a new task comes up, we must manually go to our calendar and find an empty slot. We felt this could be done even more efficiently by building an application which found those empty times for you.</p>\n<h2>What it does</h2>\n<p>Epsilon connects to your Google Calendar account to access all events you have scheduled. A user can then specify a new event which has arisen, along with information about how long it will be when and when it needs to be done by. The app will then find an open time in the calendar that the event can be scheduled to.</p>\n<h2>How I built it</h2>\n<p>We built the front-end of the app using Bootstrap. The actual algorithm was implemented in javascript. AngularJS was used to connect the front-end UI and backend logic.</p>\n<h2>Challenges I ran into</h2>\n<p>The original algorithm was implemented in Python. We initially tried to connect the Javascript through an AJAX interface. However, this was deemed not feasible after some time, so the algorithm was rewritten in Javascript. There were also some issues dealing with asynchronous calls to the Google Calendar API.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Getting a working app in 36 hours.</p>\n<h2>What I learned</h2>\n<p>Google Calendar API, building any application is hard; it requires a lot of thought and effort on everyone's part.</p>\n<h2>What's next for Epsilon</h2>\n<p>Extending functionality, such as supporting multiple events to be added at once, inserting recommended event into user's calendar.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-calendar\">google-calendar</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/angular-js\">angular.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/julie-jiang/hackharvard---cool-name-pending\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/julie-jiang/hackharvard---cool-name-pending\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["money clip", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to work with the (beautifully-documented) Capital One Nessie API and capitalize on the (simulated) data it provides to make an app that would help users better understand their spending habits. Our idea was that the app could preemptively curb spending by reminding users of their budget/tendency to spend more in a given area.</p>\n<h2>What it does</h2>\n<p>We made a prototype of an app that locates users and tells them how much money they spent the last time (day) they were in the (500 m) area (depicted on the map). It also reminds them of how much they allocated for their monthly budget and how much money is left.</p>\n<h2>Usage Notes</h2>\n<p>Run by opening Nessie-iOS-Wrapper.xcworkspace in Xcode and running \"money clip\" in the simulator. Setting the simulator's location (Debug &gt; Location &gt; Custom Location...) to latitude: 42.373208, longitude: -71.119428 makes the simulator seem to be in Harvard Square, near where our Capital One purchase data is.</p>\n<h2>How I built it</h2>\n<p>We used Capital One's Nessie API and Firebase to make our Swift project in the Xcode developing environment. The app pushes and pulls spending data from Capital One's API and uses Firebase to store the users information (login and budget).</p>\n<h2>Challenges I ran into</h2>\n<p>Figuring out how to use Xcode, and setting up Nessie and Firebase were difficult. The short time period also limited what we were able to tackle.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We were proud of getting our app to compile. Also, getting both APIs to work was a challenging obstacle that was really satisfying to overcome.</p>\n<h2>What I learned</h2>\n<p>We learned how to work with the Capital One and Firebase APIs and CocoaPods. We also learned how to work with asynchronous pulling of data from the cloud.</p>\n<h2>What's next for money clip</h2>\n<p>If we had had more time, we would have finished implementing the Firebase account sign-up/authentication and stored more individual user data (beyond budget) in Firebase. Also, we would make more details about the users' previous purchases available so that they could make more informed decisions.</p>\n<p>One of the main things we wanted to do with our app was have it give push notifications to users, even when the app was closed. However, neither of us have an Apple Developer's account, so we could not implement that feature.</p>\n<p>In the future, it would be great to actually implement such an app (with other features as well) so as to increase people's awareness of their spending habits.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/iphone-sdk\">iphone-sdk</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xcode\">xcode</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/cocoapods\">cocoapods</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/capital-one\">capital-one</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://drive.google.com/drive/folders/0B7jNYgu5wNWJVmYyWjQ3R204QnM?usp=sharing\" rel=\"nofollow\" target=\"_blank\" title=\"https://drive.google.com/drive/folders/0B7jNYgu5wNWJVmYyWjQ3R204QnM?usp=sharing\">\n<i class=\"ss-icon ss-link\"></i>\n<span>drive.google.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["GIVZ", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>GIVZ will enable people to donate \"Venmo-style\" to non-profits from their mobile devices in less than 10 seconds. The GIVZ platform will act as a digital wallet, simplifying the giving process, as well as tracking donations, storing receipts for 501c3 donations, and notifying recipients of honorary/memorial gifts. The platform will also have a social media component, allowing each user to create a personal profile containing their favored organizations and causes.   As an example, this would make it simple for others to easily identify and make a donation \"gift\" of $10 to a friend\u2019s favorite charity on their birthday. Let\u2019s knock down barriers to giving and make cumbersome processes a thing of the past.</p>\n<h2>Inspiration</h2>\n<p>People are aggravated by the entire giving process. As a result, charitable giving in the US is limited because it is inconvenient and time consuming. People don\u2019t give as much as or as many times as they otherwise would if the giving process was quick and convenient. </p>\n<h2>What it does</h2>\n<p>GIVZ would be one of the only end to end solution for donors to seamlessly give to, track, discover, and communicate with charitable organizations. GIVZ is a platform where individuals can donate (in honor of themselves or others) instantly from their mobile devices. The Company\u2019s fast, convenient, and connected interface leverages proven mobile payment methods to make donating simple and intuitive.</p>\n<h2>How we built it</h2>\n<p>We built GIVZ using a framework called Ionic. We chose Ionic because it allowed us to quickly develop the solution and test it on many platforms. Ionic is written in Web Application-based languages, but allows for an easy port to both iOS and Android native apps. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We made a very clean app with surprisingly few major setbacks. What we are most proud of is that this app can have an extremely positive impact on society. </p>\n<h2>What we learned</h2>\n<p>We learned how to use the Ionic framework extensively. We honed our web development, MongoDB, Angular.js, and finance processing API skills (thank you Nessie). </p>\n<h2>What's next for GIVZ</h2>\n<p>The GIVZ team is looking forward to staying in touch despite being spread across the North American continent!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/angular-js\">angular.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ionic\">ionic</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ios\">ios</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag\">webapp</span></li><li><span class=\"cp-tag\">surfacepro</span></li></ul>\n</div>\n</div>", ["Node.js + mongo backend server, and user authentication in Ionic Framework.", "", "", ""]], ["On Budget", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Prototype designed to scrape amazon.com for a given product name to be combined with Capital One API information on bank balance to estimate purchasing power. Vision: lightweight browser add-on that searches for the lowest-price alternative and providing detailed information on affordability.</h2>\n<p>Installation: take a look at README.md\nDerived from the Capital One API Demo App, and powered by internet searchez.\nRun run.py to start Flask, and go to</p>\n<p>localhost:5000 - to access your money-spawning menu, and\nlocalhost:5000/bananas - to get to the search bar.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag\">swag</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/HenryChowKH/Scrapy-Capital-One\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/HenryChowKH/Scrapy-Capital-One\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Pong Hub Presidential Version", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Pong Hub Presidential Version \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/254/datas/gallery.jpg\"/>\n<p>\n<i>Our game in action!</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Starting with this year's HackHarvard theme of \"reinventing the past\", we were inspired to recreate a classic game that had us mesmerized in the past to mesmerize people in the present. In the spirit of today's interest in virtual reality and augmented reality, we decided to add an augmented reality twist to the old game of Pong. Moreover, as Canadians in America, we wanted to show our investment in America's political scene by adding a \"presidential\" twist to our game of Pong.</p>\n<h2>What it does</h2>\n<p>Using Leap Motion, we set the control of the paddles to interact directly with the gamer as opposed to indirectly through the keys. Integrating animations and sound effects to add to our presidential theme, we have made Pong Hub: Presidential Version into a battle not just between two paddles, but also between the two presidential candidates. </p>\n<h2>How we built it</h2>\n<p>Starting from a base template of the old pong game in Javascript, we modified the game by implementing augmented reality in order to control the paddles. The main tool we used is the Orion Leap Motion. Using the Javascript API, we were able to write code that tracked the (x,y,z) coordinates of each player's hand (controller), as well as other characteristics such as palm direction, palm velocity and which hand was being used. Acquiring this data in vector form, we mathematically mapped each hand into a controller object. Within this object, we interpreted data using palm velocity sensitivity to create a smooth experience. In addition, we spent a good amount of time defining coordinate threshold values in order to distinguish each player's controller (to minimize interference/ noise between each player).</p>\n<h2>Challenges we ran into</h2>\n<p>Most of our team had homework assignments due, upcoming midterms, and girlfriends to text back.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Finishing the homework assignments ..... and completing the project within the 36 hours.</p>\n<h2>What we learned</h2>\n<p>We learned how to balance sleep and work life... just kidding, we didn't sleep!</p>\n<h2>What's next for Pong Hub Presidential Version</h2>\n<p>We want to implement virtual as well, but were unable to do so because of lack of operating system compatibility. We also want implement other classic games with modern technologies.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/leap-motion\">leap-motion</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://www.ponghub.org/\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.ponghub.org/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.ponghub.org</span>\n</a></li>\n<li><a href=\"https://github.com/johnwu10/pong\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/johnwu10/pong\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Tax Graphs", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We were curious as to why all the U.S are in rigid brackets. We wanted to be able to experiment with other ideas and see what happened.</p>\n<h2>What it does</h2>\n<p>The chart uses U.S. Census Data along with a customization tax plan (from the graph) to calculate Federal Tax Revenue and possible taxes for an individual income.</p>\n<p>You can:</p>\n<ul>\n<li>Drag the points or the slider on the left to customize the graph.</li>\n<li>Click on the lines to add more points.</li>\n<li>Set presets of existing, proposed, and joke tax plans.</li>\n<li>Enter income and view the tax plan's effect below.</li>\n</ul>\n<h2>How we built it</h2>\n<p>We used d3.js to build, update, and interact with the chart. We used react to manage data and the DOM. We also spectre (a css framework) for pretty styling. </p>\n<h2>Challenges we ran into</h2>\n<p>d3 and react are complex libraries which required much research. Maintaining performance while constantly calculations (such as while dragging points) was a significant challenge as well.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>The interactivity of the graph, namely the ability to drag and add points. The realtime updating of the table data based on the graph configuration.</p>\n<h2>What we learned</h2>\n<p>We learned how to used d3 and react. We also learned how to maintain performance when doing frequent data updates.</p>\n<h2>What's next for Tax Graphs</h2>\n<p>Tax Graphs could certainly be improved with addtional tax and income data. Most strikingly, only single filer data is provided for the tax plans and average deductions are not accounted for. Additionally, dragging points does not seem to work in Firefox.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/react\">react</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/d3-js\">d3.js</a></span></li><li><span class=\"cp-tag\">es6</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag\">babel</span></li><li><span class=\"cp-tag\">webpack</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://taxgraphs.surge.sh/\" rel=\"nofollow\" target=\"_blank\" title=\"http://taxgraphs.surge.sh/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>taxgraphs.surge.sh</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Sinkr", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Sinkr \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/013/datas/gallery.jpg\"/>\n<p>\n<i>Getting pictures to train the cup detection algorithm</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Sinkr \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/022/datas/gallery.jpg\"/>\n<p>\n<i>Cups!</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Pong is as old as college, and as college students, God only knows how many games of pong we play a week.  How much time is spent arguing about who won which game and wasted trying to figure out whose shot is actually the best?  Clearly, this is an objective game, and we can track it so that the champion is always undisputed.</p>\n<p>So, how do we determine who truly is the best at getting balls into cups? Obviously, the solution is a system that will make our difficult, difficult pong-playing lives just a little bit easier by constantly watching over our games and keeping track of our scores over time, all in the name of making the world a better place.</p>\n<h2>What it does</h2>\n<p>Sinkr uses computer vision to track when a ping pong ball hits a cup in pong. This data is then sent to iOS clients, allowing them to follow the game live.  We also use our database to keep a leaderboard of top players</p>\n<h2>How we built it</h2>\n<p>The ball/cup tracking is handled using OpenCV, a computer vision library for Python.  Our backend, also written in Python, stores information in a Google Firebase database in order to communicate with our front-facing iOS app written in Swift.</p>\n<h2>Challenges we ran into</h2>\n<p>One of our first big problems was setting up the camera to track the cups. We didn't have an external webcam, so setting up the computer physically in a good position to track was hard.  We ended up modifying the algorithm to compensate for the challenges that came with having a physical laptop as the deadweight for our camera</p>\n<p>Additionally, we ran into issues using machine learning (Haar Classification) to track the cups, as it took around 8 hours to finish creating the algorithm, and did not work at first. So, we shifted towards a color-tracking based approach.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>This is our first time working with computer vision, and so we're glad to see that working pretty well.  Additionally, we got our entire front-end app and database working in pretty much the last third of the time allotted after scrapping an earlier plan to have a GUI on the same computer as our image processing.</p>\n<h2>What we learned</h2>\n<p>We definitely learned a lot about how to train Machine Learning algorithms, and just overall a good amount about OpenCV and computer vision.</p>\n<p>Additionally, we learned to use Firebase to communicate in real time between our computer and the clients.  Specifically, we had to figure out which data was crucial to the success of our program and the best ways to organize the information in a way to quickly be processed.</p>\n<h2>What's next for Sinkr</h2>\n<p>In addition to some polish to the machine learning/training and overall ball/cup tracking, we'd like to polish up our app some more. Additionally, we'd like to expand to Android and/or the web. </p>\n<p>Other features we'd like to see are facial recognition to automatically attach a face to an account and record your stats to the cloud, and more advanced pong statistics to record.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag\">red-solo-cups</span></li><li><span class=\"cp-tag\">sharpies</span></li><li><span class=\"cp-tag\">facetime-hd-camera</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/azure\">azure</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/opencv\">opencv</a></span></li><li><span class=\"cp-tag\">ping-pong-balls</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/TheSafo/Sinkr\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/TheSafo/Sinkr\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Helped with setting up the GUI in the iOS client. ", "I worked on training our machine learning algorithms and the iOS client", "I worked on the backend of the database and interacting with the computer vision algorithms in addition to designing the GUI.", "I did all the computer vision stuff"]], ["Emotification", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Emotification \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/182/datas/gallery.jpg\"/>\n<p>\n<i>Logo</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Emotification \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/518/datas/gallery.jpg\"/>\n<p>\n<i>Home Screen</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Emotification \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/240/datas/gallery.jpg\"/>\n<p>\n<i>Website</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Large numbers of notifications devalue individual ones, making user tracking of important smartphone notifications such as text messages and emails harder. Users are essentially being spammed by notifications, especially on android with undismissable notifications.</p>\n<p>What is the goal of notifications? That's a question that our team came up with a few answers for. Notifications should contain maximal relevant information in an ultimately sparse experience. The loading of the notification tone to integrate music theory as a information channel is an intuitive step forward in smartphone UX. Major vs minor key, dissonant vs harmonic, lower pitch vs higher pitch, these are just some of many possibilities. </p>\n<h2>What it does</h2>\n<p>Important notifications have their text grabbed by our Android app Emotification, which sends it to Microsoft's Sentiment Analysis of their Cognitive Services suite. The resulting score (0 to 1, with 1 denoting happier and 0 denoting sadder) is sent to our server which compiles a C chord (with C as the base note) of a octave between 0 and 8 corresponding with happiness. C is the base note, and either a major chord (E then G) or a minor chord (Eb then G) is created. Emotification then plays the custom .midi file created by our server.</p>\n<h2>How we built it</h2>\n<p>Android Studio was used to build the Android application. Our server uses python with Flask as the server library and Mingus as the audio library. Amazon Web Services EC2 hosts our python code.</p>\n<h2>Challenges we ran into</h2>\n<p>Human hearing range only includes about 10 octaves (from 0 to 10), and the highest range of human hearing is not present in all of the population. Extremely high pitches can also irritate some. These two effects combined limit our octave range to about 8 octaves. The individual associations between different tones and happiness/sadness is variable, and even well documented effects such as major key chords being perceived as happier than minor key chords are still susceptible to this vulnerability. AWS Lambda is a rather opinionated web platform and was troublesome to work out.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>A flexible pipeline that was created by a team of people who had never known each other 36 hours before this deadline. Our Emotification software includes custom server code, a custom Android application, and use of multiple web API's. All of this complexity is presented in an user-friendly format, with a simple .apk application that has a logo and options.</p>\n<p>Powerful text to speech support which includes support for Unicode emojis increases accessibility options for modern smartphones.</p>\n<h2>What we learned</h2>\n<h2>What's next for Emotification</h2>\n<p>Loudness equalization for perceived human hearing differences between pitches (extremely low and extremely high pitches sound quieter even when the sound level in decibels is the same).\nFinding funding so that team members may drop out of school to pursue this project full time. We got the soylent and the red bull portions down already.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">microsoft-cognitive-services</span></li><li><span class=\"cp-tag\">microsoft</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/natural-language-processing\">natural-language-processing</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/machine-learning\">machine-learning</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://www.emotification.org\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.emotification.org\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.emotification.org</span>\n</a></li>\n<li><a href=\"https://github.com/mdnahian/Emotification\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/mdnahian/Emotification\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://drive.google.com/file/d/0B2ICQ09Rd0SbWTFubmNjMFVibFU/view?usp=sharing\" rel=\"nofollow\" target=\"_blank\" title=\"https://drive.google.com/file/d/0B2ICQ09Rd0SbWTFubmNjMFVibFU/view?usp=sharing\">\n<i class=\"ss-icon ss-link\"></i>\n<span>drive.google.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Created the android app and background process to get text from all notifications and put it trough Microsoft Cognitive Text Analytics Emotion API. ", "", "", ""]], ["tell somebody", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"tell somebody \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/153/datas/gallery.jpg\"/>\n<p>\n<i>Home screen</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"tell somebody \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/166/datas/gallery.jpg\"/>\n<p>\n<i>Logo</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>I always spend some time trying to come up with a social awareness related hack, but generally end up going with a project a little less serious. However, this time around the #HackHarassment theme really inspired me as to what I could do to develop a product that might actually help others.</p>\n<h2>What it does</h2>\n<p>tell somebody is a platform that schools can integrate into their recommended tech, where students can submit reports of harassment, or commend their peers on their exemplary actions. The goal is to promote a healthier environment where students look forward to receiving well-deserved recognition from their peers, and can feel comfortable anonymously reporting harassment they might encounter.</p>\n<h2>How I built it</h2>\n<p>I started with the backend and endpoints, using Ruby on Rails. I chose Rails because it would integrate well with Postgres, which is my preferred database.</p>\n<p>Next, I focused on building out the app. I used React Native as I've had lots of experience with it building another project, so I was very familiar with the environment, and it would allow me to produce both an Android and iOS app simultaneously.</p>\n<h2>Challenges I ran into</h2>\n<p>I've only ever developed a website with Rails before, so wrapping my head around how I would develop an API and RESTful endpoints was a bit difficult. I needed to learn how I could return JSON rather than render html webpages, and how the app would interact with the endpoints.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>The UI is a little bland and simple, but I really feel happy with it. It took next to no thought to design a page, but it gives the app a feeling of seriousness, and of simplicity, hopefully prompting users to understand that nothing more needs to be said or done about harassment so long as they speak up.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ruby-on-rails\">ruby-on-rails</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/react-native\">react-native</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/joseph-roque/tell-somebody\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/joseph-roque/tell-somebody\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Speed ER", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>It all began when Anand dislocated his shoulder while running into a wall. His parents took him to the closest Emergency Room in town, only to wait for over 3 hours in unbearable pain before the nurses could even get a X-Ray of his shoulder. That's when he realized an incredibly glaring problem that no one was even remotely attempting to solve. Not only were patients with varying amounts of excruciating pain forced to sign several documents before even being admitted, but they were also, in most cases, forced to wait for an indefinite amount of time before being looked at by a doctor or a nurse. In fact, according to the Center for Disease Control and Prevention, the average ER wait time in the United States is 55 minutes. Some, including 49-year old Illinois resident Beatrice Vance, have unfortunately passed away while in the waiting room at the ER. \nSuch incredibly troubling cases have raised discussion about the problem at hand, but virtually no one has stepped forward to offer a solution. In fact, some physicians have even begun to advise their patients to completely avoid the ER. Anand and George, however, insisted otherwise. George had a lot of experience working in hospital and emergency rooms and suggested that this platform would be an excellent one to not only decrease Emergency Room wait times for patients, but also to make Emergency Rooms more efficient. </p>\n<h2>What it does</h2>\n<p>Speed ER speeds up the amount of time between the time of injury of the patient and care for the patient. It allows anyone to create profiles in which they can enter in their health history and medical records, and allows hospitals to quick pull up and view these profiles when necessary. Also, when the patient injures himself or herself, he or she can report the injury with a few clicks and discover the most optimal Emergency Room to go to based on the estimated travel time and estimated average wait time. For life-threatening injuries, the platform would direct you to the closest hospital and place you at the top of the queue with no wait time. The patient would also be able to notify the hospitals that they will be arriving at the hospital soon, which would allow hospitals to have enough time to prepare for an incoming patient.</p>\n<h2>How we built it</h2>\n<p>HTML5, CSS3, Javascript, jQuery, Google Place Search and Place Details Web Service APIs, HTML5 Speech Recognition API, Flask, AWS RDS, MySQL</p>\n<h2>What we learned</h2>\n<p>We learned how to use Flask for web app development, geolocation and speech APIs, and the AWS Relational Database Service. </p>\n<h2>What's next for Speed ER</h2>\n<p>We plan to work with hospitals to frequently update their average wait times every quarter of an hour in order to allow those using this platform to receive the most accurate and optimal choice of hospital to go to for treatment. We also plan to build a centralized system in which all patients would sign a single consent form (electronically) as opposed to signing a different consent form every time at hospitals. Furthermore, we plan to introduce two-factor authentication to increase an additional layer of security on confidential health information. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-web-speech-api\">google-web-speech-api</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-maps\">google-maps</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/anandnk24/SpeedER\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/anandnk24/SpeedER\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Designed UX, built backend, implemented Google Maps and Places APIs", "Designed and built the front-end, implented HTML5 speech API"]], ["-", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<hr/>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://AlyssaWang.github.io/\" rel=\"nofollow\" target=\"_blank\" title=\"https://AlyssaWang.github.io/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>AlyssaWang.github.io</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["SayWhatYouThink", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/1d7FCWOqxzo?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n</ul> </div>\n<div>\n<h1>Say What You Think</h1>\n<p>A project to automatically document your source code based on what you say. So while typing out your code, all you need to do is have our application running in the background. Hit a combination of keys to start documenting for any programming language supported by our application and speak the comment out loud. A small mike appears on the screen to to indicate that the app is listening and will type out your comment into the IDE or whatever editor you have in the foreground. </p>\n<p>The below combinations can be used for :</p>\n<ul>\n<li>Ctrl + Alt + P : Python style comments</li>\n<li>Ctrl + Alt + C : C, C++, Java, C# comments</li>\n<li>Ctrl + Alt + L : Racket style comments</li>\n<li>Ctrl + Alt + N : Type plain text</li>\n<li>Ctrl + Alt + X : To toggle hot key suspension.</li>\n<li>Ctrl + Alt + Z : To terminate application at any point in time.</li>\n</ul>\n<h1>API usage</h1>\n<ul>\n<li>Bing Speech Recognition API</li>\n<li>AutoHotkey</li>\n</ul>\n<h1>Platforms</h1>\n<p>Windows only for now, maybe we can make it cross-platform later if we can find a good cross-platform alternative to AutoHotkey.</p>\n<h1>Programming Language Support</h1>\n<ul>\n<li>C/C++</li>\n<li>Java</li>\n<li>JavaScript</li>\n<li>Python</li>\n<li>C#</li>\n<li>Racket</li>\n</ul>\n<h1>Team Members</h1>\n<ul>\n<li>Michael Bowe\n\n<ul>\n<li>Original !dea, and Speech Recognition API wrapper</li>\n</ul></li>\n<li>Purva Kamat \n\n<ul>\n<li>C#er</li>\n</ul></li>\n<li>Tirthraj Parmar \n\n<ul>\n<li>AutoHotKey guru and Doc libs</li>\n</ul></li>\n<li>Joyal Shah\n\n<ul>\n<li>Yet another C#er</li>\n</ul></li>\n</ul>\n<h1>How to use?</h1>\n<p><a href=\"https://github.com/mgbowe1/SayWhatYouThink/blob/master/Main/Readme.md\" rel=\"nofollow\">https://github.com/mgbowe1/SayWhatYouThink/blob/master/Main/Readme.md</a></p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag\">autohotkey</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag\">batchfile</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/mgbowe1/SayWhatYouThink\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/mgbowe1/SayWhatYouThink\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Our application was made up of four components. The AutoHotKeyComponent that registers the hot key combinations, a C# class library which implements the interaction with Bing APIs, a C# library that format documents for the requested programming language and a C# application that ties the libraries together. I worked on the C# application, the documentation library and helped setup the project architecture.", "- I developed the main exe file which runs in background. \n- It then waits for a specific hot key for language specific documenting and calls the speech recognition manager to process user speech. \n- I also developed the documentation library used by speech recognition manager to convert the text retrieved using bing search api to a language specific commenting format. \n- Then in main executor file I developed functionality to fetch the documented text and type it wherever the cursor is.\n- Also, I also added an indicator icon to signal when the program is listening.\n- Developed a javascipt to test various functionalities of executable before using it with bing speech api.", "I brought the idea and wrote the speech recognition wrapper.", "- I provided the console application which would in turn be consumed by auto hot key application to receive in hot key inputs\n- Developed and tested a NodeJs application and javascript file to be in turn used by auto key application\n"]], ["MicroAED", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"MicroAED \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/150/datas/gallery.jpg\"/>\n<p>\n<i>CAD rendition of our prototype</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Many die from cardiac arrest, we want to reduce the number down from 264,222 to 0. Every 1 minute, the survival rate of cardiac arrest decreases 10% without AED intervention.</p>\n<h2>What it does</h2>\n<p>A smartphone-based AED that is ultraportable, lightweight, cheaper, but still equally effective.</p>\n<h2>How we built it</h2>\n<p>Using some hardware (AED paddles, capacitors, EKG processor), Azure, android studio.</p>\n<h2>Challenges we ran into</h2>\n<p>Trouble with the domain, some difficulties with CAD drawing.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Shrinking an AED down 85% in size and driving down cost by an additional 90%. </p>\n<h2>What we learned</h2>\n<p>Learned extensively just how much heart issues affect the world.</p>\n<h2>What's next for MicroAED</h2>\n<p>Developing the next iteration of the prototype, securing seed funding.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/azure\">azure</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/hardware\">hardware</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/autodesk\">autodesk</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/3dprinting\">3dprinting</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/github\">github</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://myhearthertz.org/\" rel=\"nofollow\" target=\"_blank\" title=\"http://myhearthertz.org/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>myhearthertz.org</span>\n</a></li>\n<li><a href=\"https://ryanhugh.github.io/AED2.0\" rel=\"nofollow\" target=\"_blank\" title=\"https://ryanhugh.github.io/AED2.0\">\n<i class=\"ss-icon ss-link\"></i>\n<span>ryanhugh.github.io</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Developed the website, the hardware, solidified the idea, researched the topic of said idea.", "I worked on the website, created the 3D Model in Autodesk Inventor, and set up the DNS settings for the website. ", "I formed the team, worked on the development of the project and the business research.", "I coded the Android app."]], ["Octofeels", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/Pgyo_w3X_aw?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Octofeels \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/052/datas/gallery.jpg\"/>\n<p>\n<i>Feel ALL the octofeels!</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Octofeels \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/053/datas/gallery.jpg\"/>\n<p>\n<i>You're angry? Oh no!</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Octofeels \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/054/datas/gallery.jpg\"/>\n<p>\n<i>That's better!</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>SO MANY OCTOFEELS</h1>\n<p><strong>How do you feel today?</strong> <em>Sad? Angry? Neutral? Contemptuous?</em></p>\n<p><strong>How would you like to feel?</strong> <em>Surprised? Happy? Disgusted? Fearful?</em></p>\n<p>Let us (and Microsoft Cognitive Services) tell you how you feel right now through emotion recognition and help you feel how you <strong>want</strong> to feel! Choose one of eight emotions (octo-emotions, if you will) you want to experience, and we will generate content to help you do you!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/angular-js\">angular.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/github\">github</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag\">microsoft-cognitive-services</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://octofeels.tk\" rel=\"nofollow\" target=\"_blank\" title=\"http://octofeels.tk\">\n<i class=\"ss-icon ss-link\"></i>\n<span>octofeels.tk</span>\n</a></li>\n<li><a href=\"https://github.com/stellarxo/octofeels\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/stellarxo/octofeels\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"http://octofeels.com\" rel=\"nofollow\" target=\"_blank\" title=\"http://octofeels.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>octofeels.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I set up the architecture of the app and helped with the backend of the app. I was the official candy monster of the team.", "I provided the hand-drawn animations for each of the eight basic emotions and filmed the demo reel. ", "", ""]], ["Wikiverse", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://player.vimeo.com/video/191501739?byline=0&amp;portrait=0&amp;title=0#t=\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Wikiverse \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/203/datas/gallery.jpg\"/>\n<p>\n<i>Wikipedia web in action</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Wikiverse \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/431/251/datas/gallery.jpg\"/>\n<p>\n<i>Wikipedia web in action</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Wikiverse \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/150/datas/gallery.jpg\"/>\n<p>\n<i>Concept sketch</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Everyone on the team was passionate about visualization, especially its potential in virtual reality. We were deciding on what data set to use and Wikipedia data seemed to be the most generalized and interesting, considering the variety and immense size of its data set.</p>\n<h2>What it does</h2>\n<p>Above all else, Wikiverse is an experience for the user. After entering in any keyword and putting on the Oculus Rift, the user enters into a galactic virtual environment. Nodes of Wikipedia page titles appear in clusters in every direction, forming a constellation of knowledge, surrounded by atmospheric music from Interstellar and a jarring voiceover from a text-to-speech program.</p>\n<h2>How we built it</h2>\n<p>We built a server using node.js to query the Wikipedia API by keyword, extracting the title, text, and a randomized array of four links for every page. We then passed the resulting json data to our Unity project, where we generated nodes for each link page title received. This process continues, generating a spherical web of links to wikipedia pages. The lines are drawn in slow animation for effect and to show that links are unidirectional. Background music, visual effects and text-to-speech were implemented using Unity and the espeak API.  </p>\n<h2>Challenges we ran into</h2>\n<p>There were a lot of challenges with integrating with the Oculus since no one on the team had made any VR projects before. Another challenge was figuring out the best way to make a model that was visually appealing as well as informative. Wikipedia had lots of information we could use to build our map, but finding a balance between overwhelming and impressing the user proved to be difficult and took trial and errors. We ran into a lot of problems with quaternions and spherical coordinates, as well as texture mapping and getting the line renderer to display all the lines.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Surprisingly, we had our project in a relatively \"finished\" state the night before this hackathon ended. Of course, there are always improvements to be made and features to be added, but we were really satisfied with the effect we achieved. When everything came together, we were pleasantly surprised by how truly immersive our project turned out to be. </p>\n<h2>What we learned</h2>\n<p>None of us really had any experience in creating something in VR, or using the Oculus Rift or Unity, so the entire process was a great learning experience!</p>\n<h2>What's next for Wikiverse</h2>\n<p>Unfortunately, none of us actually possess Oculus Rift, so it would be difficult to develop this project further (unless we happened to procure some in the near future). However, we truly liked working on this project, and hope that we get a chance to work on it some more.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/oculus\">oculus</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sketch\">sketch</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag\">wikipedia-api</span></li><li><span class=\"cp-tag\">espeak</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/BairnOwl/wikiverse-server\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/BairnOwl/wikiverse-server\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Unity", "", "", ""]], ["Edgar Alan Turing", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Edgar Alan Turing \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/429/960/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>Edgar Alan Turing</h1>\n<p>Text Generation with LSTM Neural Networks using <a href=\"https://keras.io/\" rel=\"nofollow\">Keras</a> running on top of <a href=\"http://deeplearning.net/software/theano/\" rel=\"nofollow\">Theano</a>.</p>\n<h1>Training</h1>\n<p>By using the Amazon Web Services infrastructure, we were able to access GPUs to speed up the training of our deep learning models.\nA Community Amazon Machine Image was used (ami-125b2c72), which was made for the Stanford CS231n class.\nThe following are the specifications for the GPU Graphics Instance that was used:</p>\n<pre class=\"language-nolang\"><code>g2.2xlarge:\n  15 GiB memory,\n  1 x NVIDIA GRID GPU (Kepler GK104),\n  60 GB of local instance storage,\n  64-bit platform\n</code></pre>\n<p>The models each trained for 50 epochs, which took between 4 and 9 hours on Amazon's GPUs, depending on the size of the text files.</p>\n<p>The training loss for the models went as follows:\n<img alt=\"alt text\" data-canonical-url=\"https://raw.github.com/evanotero/edgar-alan-turing/master/photo.png\" src=\"https://res.cloudinary.com/devpost/image/fetch/s--Cd4iYPJj--/https://raw.github.com/evanotero/edgar-alan-turing/master/photo.png\"/></p>\n<h1>Results</h1>\n<p>The different authors' models vary in performance, with the Edgar Allan Poe model performing poorly, and the JK Rowling model showing the most promise. Additional to these two, we also ran models on the works of Dante Alighieri, JRR Tolkien, and and William Shakespeare. The models show both a base-level understanding of the English language, reliably forming proper words and sentences, and a higher level understanding of character, plot, and rhythm, creating sequences of text featuring similar dialogue and rhythmic patterns to those of the authors they were modeled from. </p>\n<h1>Web Application</h1>\n<p>Available at <a href=\"edgaralanturing.com\" rel=\"nofollow\">edgaralanturing.com</a> (backend is currently under construction).</p>\n<p><em>Created for HackHarvard 2016.</em></p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/shell\">shell</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/photoshop\">photoshop</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/evanotero/edgar-alan-turing\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/evanotero/edgar-alan-turing\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"http://www.edgaralanturing.com/\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.edgaralanturing.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.edgaralanturing.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["EmotiMap", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p><strong>The Old</strong>\nIt all began with the feels. For centuries, humans have attempted to record the wide range of emotions they feel through literature and arts.</p>\n<p><strong>The Transition</strong>\nWith an average daily volume of over 500 million tweets, Twitter is an incredible treasure trove of data. But what to do with this data?</p>\n<p><strong>The New</strong>\nEnter Emotimap. Emotimap integrates the old with the new by quantifying emotions through lexicon based sentiment analysis of Twitter tweets in real time.</p>\n<h2>What it does</h2>\n<p>Unlike other apps, Emotimap is a fast, lightweight, and scalable cross-platform solution that provides a full suite of tools to optimize your social media success, including:</p>\n<p><strong>Real-time analysis:</strong> Near-instantaneous updates, keeping you up with the latest trending topics</p>\n<p><strong>Cross-platform syncing:</strong> So you can keep up-to-date on the go</p>\n<p><strong>Beautiful visualization tools:</strong> To help you understand what people are feeling</p>\n<p>.....And more!</p>\n<h2>How we built it</h2>\n<p>A partial list of APIs and libraries used in the creation of Emotimap.</p>\n<p><strong>Twitter Search API</strong>\nThe Twitter Search API was used to search for and retrieve tweets that matched a keyword or hashtag. Then, the tweets were parsed and analyzed.</p>\n<p><strong>Microsoft Azure</strong>\nLexicon based sentiment analysis and natural language processing was done using Microsoft Azure to measure tweet sentiments.</p>\n<p><strong>Firebase REST API</strong>\nWe used the Firebase database and web hosting service seamlessly integrate everything together, from the tweets to the website.</p>\n<p><strong>Google Maps API</strong>\nThe MarkerClusterer library was used in conjunction with the Google Maps API to display tags to show tweet volume trends.</p>\n<p><strong>D3.js</strong>\nThis Javascript library was used to apply transformations on the data, creating the real-time line graph.</p>\n<p><strong>Google Charts</strong>\nWe used Google Charts to display customized bar graphs and pie charts. </p>\n<h2>Challenges we ran into</h2>\n<p>With this many APIs, a major challenge was figuring out how to integrate everything. We wanted to be able to add new tweets while accessing the old tweets, all in real-time, without running into any problems. To do this, we used a NoSQL database hosted by Firebase to simultaneously sync with everything, which saved us tons of headache. Firebase also provided a web hosting service that allowed us to access our finished product from any computer, instead of hosting it on a local server. </p>\n<p>In addition, managing all the different languages was also a difficult task, as certain libraries did not play well with others. With everyone working on their own component, merging everything back together took some time. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are proud of having used Microsoft Azure and natural language processing for the first time. In addition, none of us had used Twitter's API, so being able to learn something new was exciting :)</p>\n<h2>What we learned</h2>\n<p>We learned how to use different APIs,  how to access things from a database, and how to integrate everything together. We also learned how powerful machine learning and natural language processing can be.  </p>\n<h2>What's next for EmotiMap</h2>\n<p>The next steps for EmotiMap involve expanding to other social media sites, adding new search terms, and adding other natural language languages and processes, such as key phrase extraction.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/angular-js\">angular.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/azure\">azure</a></span></li><li><span class=\"cp-tag\">npl</span></li><li><span class=\"cp-tag\">googlemapapi</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-chart\">google-chart</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/d3-js\">d3.js</a></span></li><li><span class=\"cp-tag\">ui-bootstrap</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twitter\">twitter</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/enie123/EmotiMap\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/enie123/EmotiMap\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://twitter-emotions.firebaseapp.com/\" rel=\"nofollow\" target=\"_blank\" title=\"https://twitter-emotions.firebaseapp.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>twitter-emotions.firebaseapp.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Storeel", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Storeel \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/504/datas/gallery.jpg\"/>\n<p>\n<i>Home Page of Website</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Storeel \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/475/datas/gallery.jpg\"/>\n<p>\n<i>No options selected</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Storeel \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/476/datas/gallery.jpg\"/>\n<p>\n<i>Expanded Story</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Storeel \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/477/datas/gallery.jpg\"/>\n<p>\n<i>From advanced parsing</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Storeel \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/479/datas/gallery.jpg\"/>\n<p>\n<i>Memes Option</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Storeel \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/430/482/datas/gallery.jpg\"/>\n<p>\n<i>Story Mode Option</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to create a way for people to tell stories and exchange ideas in a more expressive way. One of the best ways to communicate with anyone, regardless of international barriers, is through image sharing. By integrating our pipeline with popular social media, we found a new outlet for people to connect. We hope to provide a new way to present ideas and communication between people, eventually leading to a new standard for media.</p>\n<h2>What it does</h2>\n<p>We built a website that brings a story to life by displaying a sentence by sentence breakdown into images. Furthermore, we provide a descriptive gif which is easily sharable by URL or directly on Twitter or Facebook. This easily made gif currency allows people to communicate in expressive and unique ways, breaking the language barrier and providing a fun outlet for creative expression. </p>\n<h2>How we built it</h2>\n<p>We harnessed the power of Microsoft Cognitive Services to help us perform our natural language processing including using their constituency parser and POS Tagger. We also used Bing Image Search to find good candidates for images that comprise our story.</p>\n<h2>Challenges we ran into</h2>\n<p>It was difficult for us to set up the Microsoft Cognitive Services. We found it particularly challenging to properly set up the promises. Converting. We spent a large portion of our time tuning the natural language processing in order to get the sort of performance that we desired. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>In the end, we are proud of the ease of sharing stories with other people. A core focus of Storeel was the social elements, which are at the core of telling a great story. We also really like the high level of customization that allows each people to find the story that best matches the story that they want to communicate. </p>\n<h2>What we learned</h2>\n<p>Two of the three of us had little experience in web development, and we learned a huge amount specifically about javascript. We learned about and enjoyed exploring natural language processing. </p>\n<h2>What's next for Storeel</h2>\n<p>There is integration with Twitter API. As well, there is the addition of many more filters and modes. We've got Meme mode, Advanced mode, Story mode, and counting! </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag\">microsoft-cognitive-services</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twitter\">twitter</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/angular-js\">angular.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/imgur\">imgur</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/A-lxe/storeel\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/A-lxe/storeel\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on implementing the POS tagging and constituency parsing for generating queries. I also designed random sampling for generating unique gifs. ", "", ""]]]