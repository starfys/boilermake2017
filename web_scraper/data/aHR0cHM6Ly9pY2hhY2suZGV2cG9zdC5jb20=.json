[["Stylist", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Stylist \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/350/051/datas/gallery.jpg\"/>\n<p>\n<i>Dashboard view</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Stylist \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/350/052/datas/gallery.jpg\"/>\n<p>\n<i>Javascript quiz question</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Stylist \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/350/053/datas/gallery.jpg\"/>\n<p>\n<i>English quiz questions</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Stylist \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/350/054/datas/gallery.jpg\"/>\n<p>\n<i>Training session configuration</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>Stylist</h1>\n<p>Stylist teaches developers good programming and documentation style through a quiz where \nquestions are automatically generated from prior projects.</p>\n<ul>\n<li>Programming Languages:\n\n<ul>\n<li>Javascript (Google style guide)</li>\n</ul></li>\n<li>Documentation:\n\n<ul>\n<li>Strunk and White's \"The Elements of Style\"</li>\n</ul></li>\n</ul>\n<h2>Javascript</h2>\n<p>We use <a href=\"jscs.info\" rel=\"nofollow\">JSCS</a> to lint code extracted from a user-submitted\nGithub repository following the Google style guide.</p>\n<h2>English Language Linting</h2>\n<p>We use a <a href=\"https://github.com/feynmanliang/StrunkAndWhiteLinter\" rel=\"nofollow\">fork</a> of\na <a href=\"https://github.com/deniseli/StrunkAndWhiteLinter\" rel=\"nofollow\">Strunk and White english\nlinter</a> by @deniseli.\nThe rules which are checked include:</p>\n<ul>\n<li>Context free:\n\n<ul>\n<li>Exclamations</li>\n<li>In-word dashes</li>\n<li>Parenthesis</li>\n<li>First-person</li>\n</ul></li>\n<li>Context dependent:\n\n<ul>\n<li>Singular possessive</li>\n<li>As <em>or</em> Then</li>\n<li>As to Whether</li>\n<li>Oxford comma</li>\n<li>Date format</li>\n<li>Omit needless words</li>\n<li>Loose sentences</li>\n</ul></li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag\">apacheconf</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/github\">github</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag\">jscs</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/feynmanliang/stylist\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/feynmanliang/stylist\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the Frontend.", ""]], ["fish", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/HwgzEDMJw0E?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"fish \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/350/182/datas/gallery.jpg\"/>\n<p>\n<i>screenshot</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>evolvingANN</h1>\n<p>A 'fish tank' with a set of creatures that evolve each generation with the goal of collecting food and avoiding danger.</p>\n<p>Each creature is controlled by an artificial neural network, and training is carried out by a genetic algorithm, mixing the 'chromosomes' of the 'fittest' from to form the next generation.</p>\n<p>Written in python, using the pygame module for graphics, during ichack16.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/lanejr/evolvingANN\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/lanejr/evolvingANN\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Treasure", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Treasure \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/350/198/datas/gallery.jpg\"/>\n<p>\n<i>Front page</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Treasure \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/350/188/datas/gallery.jpg\"/>\n<p>\n<i>List your treasure</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Treasure \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/350/189/datas/gallery.jpg\"/>\n<p>\n<i>Add location and details</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Treasure \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/350/190/datas/gallery.jpg\"/>\n<p>\n<i>Look at the details of what you find</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Treasure \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/350/191/datas/gallery.jpg\"/>\n<p>\n<i>Find treasures around you!</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Treasure \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/350/230/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to make a tool that helps people share with their neighbours what they not need anymore. One man trash is another man's treasure!</p>\n<h2>What it does</h2>\n<p>Treasure helps community get tighter, people explore and find new cool stuff. It lets you list your stuff and find what other people have listed around you.</p>\n<h2>How we built it</h2>\n<p>Treasure is an Android application that relies on a Elasticsearch backend. All the search and insertion operation are made by a Django powered RESTful API.</p>\n<h2>Challenges we ran into</h2>\n<p>Location, location, location</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>It actually works pretty well, we're pretty surprised</p>\n<h2>What we learned</h2>\n<p>Android, AWS, Banter</p>\n<h2>What's next for Treasure</h2>\n<p>Treasure Hunts - Organized city roams to find new treasures</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/elasticsearch\">elasticsearch</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/django\">django</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/robknows/ICHack16\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/robknows/ICHack16\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the backend, realized the API entry points and the query to the Elasticsearch instance.", "I pair programmed with Tom(Fangyi) on the front end and also offered help to Fred while he worked on the backend with Vince. ", "I made the UI and ViewController for the Android App.", "", ""]], ["GitStash", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>The inspiration is pretty obvious - Github goes down at least once a week and is a threat to productivity and peacefulness alike. Therefore we are allowing users to cache all/specific repos (subject to selection on the UI) to our mirror which updates every time something new is committed. We have created a proxy acting as a 'Git server' that goes through Git unless it is unavailable - in which GitStash will be called so users can still pull from these repos and work can continue.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/handlebars-js\">handlebars.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/golang\">golang</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/postgresql\">postgresql</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/github\">github</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://gitstash.herokuapp.com/\" rel=\"nofollow\" target=\"_blank\" title=\"https://gitstash.herokuapp.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>gitstash.herokuapp.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Commeta", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Running into different comment registrations, not being able to post comments anonymously and having content moderated by site owners is annoying. </p>\n<h2>What it does</h2>\n<p>It makes sense to outsource comments to a single provider, one login, community moderation.</p>\n<h2>How I built it</h2>\n<p>I built it on a Flask framework and used Firebase to store data in the backend.</p>\n<h2>Challenges I ran into</h2>\n<p>Cross site cookies isn't allowed. I needed to change my project architecture to get it working.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Making it alone from start to finish and not giving up on all the features which I had planned to bake in.</p>\n<h2>What I learned</h2>\n<p>There are a lot of workarounds required to building something that works for every website and even after that it probably doesn't.</p>\n<h2>What's next for Commeta</h2>\n<p>Using Machine Learning to stop spam.\nMaking a solid voting system for community moderation.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/azure\">azure</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/heroku\">heroku</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://commeta.herokuapp.com/chat/http%3A%2F%2Fwww.bloomberg.com%2Feurope\" rel=\"nofollow\" target=\"_blank\" title=\"https://commeta.herokuapp.com/chat/http%3A%2F%2Fwww.bloomberg.com%2Feurope\">\n<i class=\"ss-icon ss-link\"></i>\n<span>commeta.herokuapp.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["MyoGaming", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>The Myo gesture control armband seemed really interesting to us so we wanted to see what cool things we could make with it.</p>\n<h2>What it does</h2>\n<p>There are two simple games controlled by the Myo.</p>\n<p>The first is a top down space shooter where the player shoots asteroids through a gesture as well as controlling the ship by moving their arm.</p>\n<p>The second is a first person shooter that uses VR through Google Cardboard. The Myo is used in order to control shooting while the VR is used to control player movement.</p>\n<h2>How we built it</h2>\n<p>The assets for both games were from two Unity tutorials. We then edited the behaviours slightly to use the Myo device rather than the default controls. We also had to replace the player completely in the second game as it was originally top down.</p>\n<h2>Challenges we ran into</h2>\n<p>Trying to incorporate the Myo with Android.</p>\n<p>Replacing the top down controller with a first person controller.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We managed to understand a completely new API and managed to get it running.</p>\n<h2>What we learned</h2>\n<p>We learned a lot of the basics of Unity as well as the Myo API.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/helicopter88/ic_hack_2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/helicopter88/ic_hack_2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["AutoAlarm", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration: Thomas Allerton</h2>\n<h2>What it does: Sets an automatic alarm at a given time calculated from the distance and time of the next upcoming event, as well as accounting for factors such as journey time and morning routine</h2>\n<h2>How we built it: Blood, sweat and tears</h2>\n<h2>Challenges we ran into: Solving git merge conflicts and setting up the Android emulator</h2>\n<h2>Accomplishments that we're proud of: Successfully using the APIs</h2>\n<h2>What we learned: How to use the Android IDE as well as the different Google API's</h2>\n<h2>What's next for AutoAlarm: More functionality and customisation of settings e.g. set ringtone</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-maps\">google-maps</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag\">google-calendar-api</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://gitlab.doc.ic.ac.uk/mzc14/IChack2016.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://gitlab.doc.ic.ac.uk/mzc14/IChack2016.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>gitlab.doc.ic.ac.uk</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Worked on the UI Design of the app using the Android IDE.", "I worked on developing retrieving the calendar data mainly using the API. During the duration of the project I helped with different components. I learnt a lot about using APIs and linking together all the components", "Co-built the stuff to do with setting alarms.", "Alarm clock package,\nRepeaterChecking of the alarm, and providing moral support to teammates.", "", ""]], ["VizChess", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to use an oculus rift, and wizard's chess seemed pretty cool</p>\n<h2>What it does</h2>\n<p>A chess game for oculus rift in which the player can walk around on the board. Online multi-player is also implemented</p>\n<h2>How we built it</h2>\n<p>Server was written in Golang, client was created using Unreal 4 with C++</p>\n<h2>Challenges we ran into</h2>\n<p>Getting libraries to work with unreal: the provided headers failed to compile\nGetting networking to work</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Getting networking running\nA working move checker on the server</p>\n<h2>What we learned</h2>\n<p>Don't use Unreal\nAlso, bring a more powerful computer if we want to use VR</p>\n<h2>What's next for VizChess</h2>\n<p>Consignment to the indie game graveyard (just kidding, probably)</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/golang\">golang</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unreal-engine\">unreal-engine</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://bitbucket.org/callummance/vizchessserver\" rel=\"nofollow\" target=\"_blank\" title=\"https://bitbucket.org/callummance/vizchessserver\">\n<i class=\"ss-icon ss-link\"></i>\n<span>bitbucket.org</span>\n</a></li>\n<li><a href=\"https://github.com/mhl787156/VRChessUnreal\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/mhl787156/VRChessUnreal\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["ParkWare", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"ParkWare \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/350/228/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>ParkWare</h1>\n<p>Five overzealous newbie hackathoners use machine learning and computer vision technologies to find empty parking spaces. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/shell\">shell</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/makefile\">makefile</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/opencv\">opencv</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-prediction\">google-prediction</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-maps\">google-maps</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ajax\">ajax</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Jiantastic/ParkWare\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Jiantastic/ParkWare\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Crowdcast", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Crowdcast \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/350/247/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Reddit has a lot of text-based quality content that is unavailable to people who may prefer to listen to that.</p>\n<h2>What it does</h2>\n<p>Generates podcasts from subreddits</p>\n<h2>How we built it</h2>\n<p>The server uses watson api to synthesize the posts. Client provides playlist based podcast app</p>\n<h2>Challenges we ran into</h2>\n<p>Creating sound for posts longer than a few paragraphs</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Everything</p>\n<h2>What's next for Crowdcast</h2>\n<p>User accounts , mobile client</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/react\">react</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ibm-watson\">ibm-watson</a></span></li><li><span class=\"cp-tag\">dropwizard</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/chrome\">chrome</a></span></li></ul>\n</div>\n</div>", ["", "", ""]], ["Yoda Chat", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>The prizes were definitely a huge motivation, but most of the inspiration for this project came from the fact that I wanted to build a webchat with Node JS and AngularJS. But, at the same time I was interested in natural language processing so I decided to combine the two for all the Star Wars fans out there!</p>\n<h2>What it does</h2>\n<p>It's a webchat that automatically translates the user's input into Yoda's words.</p>\n<h2>How we built it</h2>\n<p>It's a simple chatroom built with Node JS, but with an algorithm that converts the user's sentences using natural language processing techniques.</p>\n<h2>Challenges we ran into</h2>\n<p>Running Python alongside Node JS. Node JS is an unfamiliar language, so that was definitely a challenge. And deployment on Heroku was new.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>It actually works and we're proud to demonstrate that it does!</p>\n<h2>What we learned</h2>\n<p>A lot of Node JS and web development.</p>\n<h2>What's next for Yoda Chat</h2>\n<p>It could be developed as a popular service, especially since the rest of the Star Wars franchise is set to be released over the next couple of years.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://secure-plains-95387.herokuapp.com/\" rel=\"nofollow\" target=\"_blank\" title=\"https://secure-plains-95387.herokuapp.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>secure-plains-95387.herokuapp.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["ProcrastEnabler", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/yCTcA6V6QBE?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Just a fun project about procrastination.</p>\n<h2>What it does</h2>\n<p>A java app that uses the webcam to read user's eye patterns and executes various commands, like opening websites. Useful for quickly switching between websites to appear like you're working!</p>\n<h2>How I built it</h2>\n<p>OpenCV in Java for image processing and Java Swing for the GUI</p>\n<h2>Challenges I ran into</h2>\n<p>Finding OpenCV documentation for Java,\nIssues with OpenCV on MacOS</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Eye tracking and managing to handle the API</p>\n<h2>What I learned</h2>\n<p>How not to use Git and OpenCV</p>\n<h2>What's next for ProcrastEnabler</h2>\n<p>ProcrastEnabler can be extended to support more eye patterns and scripts</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/opencv\">opencv</a></span></li><li><span class=\"cp-tag\">swing</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xml\">xml</a></span></li></ul>\n</div>\n</div>", ["I worked on the UI, as well as the loading and management of eye pattern configurations and external scripts to be executed by the program.", "I worked on implementing the EyeDetector, the Calibrator, the CameraFeed and the heuristic Calculation class to determine open/closed eye.", "I worked on the implementation of the input from the camera to run commands by matching patterns in Java.", "I worked at back-end, accessing the camera and processing the data in a way in which my teammates can use it. Helped at coming up with a solution to finding out if an eye is open or closed. Contributed at CameraFeed and Calculation class."]], ["MySongBook.io", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"MySongBook.io \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/350/259/datas/gallery.jpg\"/>\n<p>\n<i>Songs screen</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>I had a lot of guitar songs which I needed to organise, view and print songbooks of. This program makes this task much easier to do.</p>\n<h2>What it does</h2>\n<p>You first login through Facebook, paste a URL to a guitar song to add it to your collection, and the linked website is automatically parsed and relevant data such as artist, title and content are extracted and saved to a database. You can then view and delete the songs and download all of them as a songbook in PDF format. The chords are also highlighted, making it easier to play the songs.</p>\n<h2>How I built it</h2>\n<p>24 hours of hard work, lot of caffeine.</p>\n<h2>Challenges I ran into</h2>\n<p>Not getting Facebook API to do what I wanted for a long time.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Finishing in time.</p>\n<h2>What I learned</h2>\n<p>How to work with Facebook API, how to parse HTML using DOM in PHP, improved my REGEX knowledge, learned how to set up a web server and a database quickly...</p>\n<h2>What's next for MySongBook.io</h2>\n<p>Adding support for more guitar song websites, perhaps extending the project outside guitar songs as well.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mysql\">mysql</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/facebook\">facebook</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://mysongbook.io\" rel=\"nofollow\" target=\"_blank\" title=\"http://mysongbook.io\">\n<i class=\"ss-icon ss-link\"></i>\n<span>mysongbook.io</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Facebook Offliner", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>facebook</p>\n<h2>What it does</h2>\n<p>Makes your life easier.</p>\n<h2>How I built it</h2>\n<p>JS</p>\n<h2>Challenges I ran into</h2>\n<p>Had to sleep.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Managed to do it.</p>\n<h2>What I learned</h2>\n<p>FB api</p>\n<h2>What's next for Facebook Offliner</h2>\n<p>New features</p>\n</div>\n</div>", [""]], ["Doom in Haskell", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Doom in Haskell \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/350/260/datas/gallery.jpg\"/>\n<p>\n<i>the floating hand appears to be a platform-specific issue?</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to learn OpenGL and thought making a simple game engine would be quite cool.</p>\n<h2>What it does</h2>\n<p>Loads the original WAD (short for where's all the data?) files of the game back from 1993. Renders the levels in a 3D environment that resembles the classic game.</p>\n<h2>How we built it</h2>\n<p>eyeballing</p>\n<h2>Challenges we ran into</h2>\n<p>Floor and ceiling rendering is tricky and is not implemented properly. The techniques used in the original engine cannot be applied because that assumes rendering on the CPU and we really wanted to do OpenGL. The archaic file format is also a bit inconvenient to work with, especially in a strongly typed setting. Raw 1:1 bindings to OpenGl aren't too nice either. nullPtr in Haskell just doesn't feel right.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Managed to draw pixels on the screen</p>\n<h2>What we learned</h2>\n<ul>\n<li>(some) OpenGL.</li>\n<li>How to sweep unsafe code under the carpet and randomly get segfaults in 'pure' code</li>\n</ul>\n<h2>What's next for Doom in Haskell</h2>\n<p>Nothing really, it was planned to be a weekend hack and thus has fulfilled its purpose\n(it is currently a bit broken, might fix up the simple low hanging fruit)\nlet's just say the no-clip cheat is turned on by default, and turning it off is not implemented yet\nand a bit (very) inefficient too</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">haskell</span></li><li><span class=\"cp-tag\">type-classes</span></li><li><span class=\"cp-tag\">ghc-extensions-(lots)</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/levex/haskell-doom\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/levex/haskell-doom\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Worked on the low-level stuff.", "", ""]], ["IC_HACK_16_CAVE_SURVIVOR", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Magic Tower / Binding of Isaac /Scavenger</p>\n<h2>What it does</h2>\n<p>Try to survive in a cave and fight against monsters.</p>\n<h2>How we built it</h2>\n<p>Unity with C#</p>\n<h2>Challenges we ran into</h2>\n<p>Our team is relatively new to the Unity Engine, thus we needed to cope with the steep learning curve Unity Engine presented and then built something upon it.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Animation and Good game arts by our team mate.</p>\n<h2>What we learned</h2>\n<p>C# and Unity Engine.</p>\n<h2>What's next for IC_HACK_16_CAVE_SURVIVOR</h2>\n<p>Generating endless map and adding more game modes, like the timing mode which the player should try to beat as much monster as he can in the certain time limit.</p>\n</div>\n</div>", ["Built up the UI design and help developing the backend.", ""]], ["Dinner With", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>Scan a receipt and request money from friends</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/iphone-sdk\">iphone-sdk</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ruby\">ruby</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ruby-on-rails\">ruby-on-rails</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/egnwd/ic-bill-hack\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/egnwd/ic-bill-hack\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the OCR", ""]], ["Desky", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Desky \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/350/224/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We as software developers usually work on multiple screens but it is always not the case that we have a monitor with us. So we came up with an idea to solve this problem with all the desktops and workspaces being projected in 3D on your phone using the fantastic Google Cardboard.</p>\n<h2>What it does</h2>\n<p>It basically runs on your local machine and local network and captures all the active spaces on your computer and transmits them to our Android application where you use it with the help of Google Cardboard to project every workspace in virtual reality. These spaces keep on refreshing so that you can get a real time view of your desktop.</p>\n<h2>How we built it</h2>\n<p>For the front end of the application we have used Unity along with Google Cardboard SDK for Unity 3D. For this Unity project we have used certain GameObjects which run on C# scripts to query the back end and get the latest update of the desktop screens and workspace. Whereas on the back end we run a node.js server which streams the images which are captured from X11 using FFMpeg.</p>\n<h2>Challenges we ran into</h2>\n<p>The basic idea was to use Android Studio but then we switched to Unity after a great talk by David. But none of our team members had experience in Unity so we had to learn everything from the basics, learn C# etc. Another challenge was to refresh the stream constantly so that we don't miss out on anything going on. On the back end it was tough streaming the images correctly and efficiently.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>First accomplishment would be not sleeping for almost 24 hours. Second would be to pick up a new programming language in a day and make something useful with it. Learning new software and SDK from scratch.</p>\n<h2>What we learned</h2>\n<p>We learned C#, Unity and core features of Linux to capture the image. Maybe some experience in Karaoke singing as well. Also we worked with graphics a little bit so it was good. Above all we learned how to use Google Cardboard.</p>\n<h2>What's next for Desky</h2>\n<p>Using live video feeds instead of image feeds. Better rendering in 3D and mayb full HD resolution.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-cardboard\">google-cardboard</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://github.com/SomeRandomTeam\" rel=\"nofollow\" target=\"_blank\" title=\"http://github.com/SomeRandomTeam\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the front end of the application. Wrote some code in C# and didn't sleep much. Ate a lot. Yeah! maybe that's it...", "I worked on sending out the stream and image data from the Linux machine to the Android Unity application. Also helped out with some parts of the Unity application.", "", "", ""]], ["Alpaca", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We saw a gap in the market between music applications which allow users to create and share playlists and the DJ and live music industries.</p>\n<h2>What it does</h2>\n<p>We have tried to combine the best of both worlds by creating an application to allow users to vote on and select the DJs candidate tracks. They are also able to up-or down-vote the current song being played, as well as suggest tracks, which other people also vote on.</p>\n<p>Meanwhile, the DJ receives visualised live data through live graphs and charts, showing not just the song votes and participant reactions, but also the amount of movement (i.e. dancing) of the crowd in live-time.</p>\n<h2>How we built it</h2>\n<p>We created an API using the web framework, Django, to integrate a front-end web interface and an Android application with an online database. Live data is passed between these.</p>\n<h2>Challenges we ran into</h2>\n<p>Effective workflow using Git branching was difficult, as was effectively coordinating tasks between a team of five. Some problems were also posed by different Android versions.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>The final product and its excellent features and quality are the things we are most proud of.</p>\n<h2>What we learned</h2>\n<p>Effective technical team working, Django development and Android development.</p>\n<h2>What's next for Alpaca</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/django\">django</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/last-fm\">last.fm</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/highcharts\">highcharts</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://wecantdancesowemadestatistics.com/\" rel=\"nofollow\" target=\"_blank\" title=\"http://wecantdancesowemadestatistics.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>wecantdancesowemadestatistics.com</span>\n</a></li>\n<li><a href=\"https://github.com/AlpacaICHack\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/AlpacaICHack\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I created a library of methods as an interface between the app and the server. I also worked on threading the app to prevent blocking in the UI.", "Front-end Django web page integration with the database API.", "Worked on the Android App and hardware api calls.", "Server side!", "Website"]], ["Gov Feed", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>When reading the news, I always wanted a directed source for when officials were being quoted.</p>\n<h2>What it does</h2>\n<p>A user-friendly feed for accessing exterior ministry statement, sortable by automatically generated keywords.</p>\n<h2>How I built it</h2>\n<p>It uses web crawlers by import.io to access the statements directly from the government website. It then uses indico.io machine learning api to generate keywords for each entry and store them together with other information in mongo DB. The user can query the keywords and only be shown the statements that relate to a specific topic.</p>\n<h2>Challenges I ran into</h2>\n<p>Integrating indico.io into mongo DB proved very difficult due to lacking documentation.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Integerating UK and US feeds using machine learning APIs.</p>\n<h2>What I learned</h2>\n<p>Machine learning APIs</p>\n<h2>What's next for Gov Feed</h2>\n<p>Expand the number of countries crawled by Gov Feed.\nEnabling to sort query results chronologically and by relevance.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag\">mangodb</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li></ul>\n</div>\n</div>", [""]], ["FinanceMotion", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Our primary inspiration for this project were the sponsors. As this is a Hackathon, we decided it would be best to adopt the theme of the event instead of working on something unrelated.</p>\n<h2>What it does</h2>\n<p>Our project is a web application at it's core but comes with a twist. It cannot be navigated using a mouse and keyboard. All the user interaction is done via gesture tracking and state control. The gesture tracking is powered by Leap Motions Controller which uses a set of cameras to achieve accurate finger, hand and arm tracking.   </p>\n<h2>How we built it</h2>\n<p>The first thing we did was to split the project into its smaller components; namely the gesture recognition part and the web user interface part. 2 of us worked on the first while the remaining 3 on the later. </p>\n<p><strong>Gesture Recognition</strong>\nLeap Motion has created a variety of libraries that can be used to interact with the Controller. We used the one written in Javascript in order to make the interfacing with the website as effortless as possible. While working on this project we discovered that even though the controller has a wide range of \"preset\" gestures, we needed to add some new ones such as the whole hand roll (X - Y axis). We also discovered that while the technology is certainly impressive, it comes with some limitations. For example, some gestures appear to be more accurate than others and there were occasions where the Controller was picking up a lot of unrelated noise. The noise can be cancelled by keep track of how long each object has been in view for, but unfortunately we did not have enough time to implement this. </p>\n<p><strong>User Interface</strong>\nFor the user interface we wanted to use as much available code as possible. The charts were generated using the Google Chart libraries and the financial data were taken from fixer.io. For styling, we used the Materialize CSS framework in order to make the website look decent with the least amount of effort possible. </p>\n<h2>Challenges we ran into</h2>\n<p>The biggest challenge we had was getting all the data necessary asynchronously while also keeping the performance at acceptable levels. Also, we found that it was difficult to get the sensor to work once we deployed our website to Azure.</p>\n<h2>What we learned</h2>\n<p>The Leap Motion controller is an impressive device and can have a wide range of applications</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/azure\">azure</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/leap-motion\">leap-motion</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://ichack16.azurewebsites.net\" rel=\"nofollow\" target=\"_blank\" title=\"http://ichack16.azurewebsites.net\">\n<i class=\"ss-icon ss-link\"></i>\n<span>ichack16.azurewebsites.net</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Worked on the hand gesture recognition and part of the graph visualization algorithms", "Created the second graph on website. Used JavaScript with Google Charts to make visualization and JQuery to get data from server.", "...", "Assited with the graphs", "Helped with Data selection and website user interface (not coding)."]], ["HackChat", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Students in lectures keep texting each other, not paying attention to the lecturer. This app poses a limit to this.\nThis app is also an excellent tool against spammers.</p>\n<h2>What it does</h2>\n<p>You have to play games, in order to earn points, in order to send messages.</p>\n<h2>How we built it</h2>\n<p>Using html css javascript and socket.io for the backend.</p>\n<h2>Challenges we ran into</h2>\n<p>Creating multiple rooms and inviting friends for a game. Unfortunately because of the short time we couldn't do neither, only one room an single player games. We also wrote two more games in javascript that unfortunately did not manage to implement.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Learning the structure of the backend for a chat, and at the same time using javascript to write cool and traditional games.</p>\n<h2>What we learned</h2>\n<p>Learning the structure of the backend for a chat, and at the same time using javascript to write cool and traditional games.</p>\n<h2>What's next for HackChat</h2>\n<p>Creating multiple rooms and inviting friends for a game. Facebook login</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/socket-io\">socket.io</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://hack-chat.herokuapp.com/\" rel=\"nofollow\" target=\"_blank\" title=\"http://hack-chat.herokuapp.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>hack-chat.herokuapp.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["phalanx", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>What it does</h2>\n<p>It gathers metrics, logfiles and alerts from supported platforms. At present the only \"host\" adaptor provided is a generic \"Linux\" one (i.e. literally just the box you're on) but I wanted to add, e.g. a \"Docker\" one that allows discovery of services within Docker containers, etc. etc.</p>\n<p>It's supposed to be simple to set up - it has very few dependencies, just Go (on some server somewhere!) and Postgres, unlike some reporting stacks which are quite complex to put together. I like to think I kept to that.</p>\n<h2>How I built it</h2>\n<p>Literally just me! I decided it might be interesting to see how far I could get trying to work on the app alone, full-stack.</p>\n<p>I fleshed out the backend collection agent first, which was a ton of fun. I think the first code that went in was the code that interacts with DBus to gather some interesting data about the number of packages installed on your system.</p>\n<h2>Challenges I ran into</h2>\n<p>It's actually quite hard to do everything alone :o) but I knew that going in, anyway.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>The backend supports shuttling logs upwards, and the architecture is designed such that you can chain nodes together.</p>\n<p>The provisioning system is super neat as well - you end up with (eventually, once the server support is there) a binary containing a one-time use, embedded certificate which can be used for generating proper key material on the target server.</p>\n<h2>What I learned</h2>\n<p>Red Bull sugar free tastes like death.</p>\n<h2>What's next for phalanx</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/go\">go</a></span></li><li><span class=\"cp-tag\">grpc</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/react\">react</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/icphalanx\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/icphalanx\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["ICHackEclipse", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>The sims</p>\n<h2>What it does</h2>\n<p>Puts diamonds around the head and make them usable (recognize people on facebook with your camera)</p>\n<h2>How we built it</h2>\n<h2>Challenges we ran into</h2>\n<p>Reading JSON</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Reading JSON</p>\n<h2>What we learned</h2>\n<p>Reading JSON, working with alamofire and 3rd party libraries in XCode</p>\n<h2>What's next for ICHackEclipse</h2>\n<p>Recognize everything!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/iphone-sdk\">iphone-sdk</a></span></li><li><span class=\"cp-tag\">kairos-api</span></li><li><span class=\"cp-tag\">alamofire-api</span></li></ul>\n</div>\n</div>", ["", "", "", ""]], ["perspective", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"perspective \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/350/298/datas/gallery.jpg\"/>\n<p>\n<i>example</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Most machine learning algorithms aim to show people content that is most similar to their views already. We believe you should always listen to the other side.</p>\n<h2>What it does</h2>\n<p>It's a news website that displays articles from different viewpoints and sources. It automatically finds opposing views for a certain article and tries to highlight the key sentences.</p>\n<h2>How we built it</h2>\n<p>With great difficulty.</p>\n<h2>Challenges we ran into</h2>\n<p>Our language processing algorithms didn't live up to their expectations</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Some articles have been processed surprisingly accurately</p>\n<h2>What we learned</h2>\n<h2>What's next for perspective</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/django\">django</a></span></li><li><span class=\"cp-tag\">meaningcloud</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/postgresql\">postgresql</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["VRFileViewer", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We showed up to the hackathon with little to no ideas about what to make or do. However after seeing the google cardboard and the ease of use with unity, we felt we'd be able to make something fairly substantial. We then decided on a VR file viewer as an interesting way of searching through and looking at files. The ideas developed form there throughout the hackathon to the finished product.</p>\n<h2>What it does</h2>\n<p>Our project, VR file viewer, currently takes a folder full of images and populates a virtual world with interactive frames with these images on them. The world is easily traversable using the magnetic switch on the Google Cardboard and the head tracking of the phone. The hack also currently includes a method of playing music through this file viewer, and can easily be shown to switch between files when run on a PC, repopulating the world with images for each folder.</p>\n<h2>How we built it</h2>\n<p>Using Unity, the C# programming language and much caffeine, eventually a working product made its way onto a phone. We split the work between the two of us by one creating the main world and user interactions, and the other working on algorithms and working out how Unity handled files which were to be implemented in the final product. </p>\n<h2>Challenges we ran into</h2>\n<p>Unity is a little awkward at times, and the Google Cardboards were prone to being difficult to put together and stay together, as well as the apps made through unity heating the phone to a large extent and causing memory leaks. These were only small hurdles though.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Getting a full finished product together in time even with a small team of two. We are also very proud of the positive responses we got whenever other participants tried our product.</p>\n<h2>What we learned</h2>\n<p>How to code better in C# as well as dealing with file systems etc. from within other environments such as unity. We also learned that flexible plans are the most likely to succeed.</p>\n<h2>What's next for VRFileViewer</h2>\n<p>Cloud support,  iOS implementation, more filetypes supported, multi user environments so others can see what you're looking at- possibilities are endless.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://www.dropbox.com/s/uv2cyu3papidncl/icHack.apk?dl=0\" rel=\"nofollow\" target=\"_blank\" title=\"https://www.dropbox.com/s/uv2cyu3papidncl/icHack.apk?dl=0\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.dropbox.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["SPLIT", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"SPLIT \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/350/306/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"SPLIT \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/350/308/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>At University, we tend to go out to restaurants a lot for big friends gathering. But every single time, we spend as much time talking about our lives than about the bill.\nFor the sake of enjoy more quality time with our friends, we thought of way to make this process of splitting the bill faster.</p>\n<h2>What it does</h2>\n<p>Split is a very simple and straightforward app. Take a picture of your receipt, we\u2019ll analyse it and convert it to a simple table. From then on, each person just tap the elements he ate and even shared with some other people, and the magic is done.\nEverything will be calculated, from sharing starters between some people to service charge and tip splitting.</p>\n<h2>How we built it</h2>\n<p>Swift with Microsoft Oxford Project's OCR for text recognition.</p>\n<h2>Challenges we ran into</h2>\n<p>Using an OCR is WAY more complicated than we expected. After having used Tesseract, post-image processing, we still didn\u2019t get anything good enough for the product quality we were aiming at. We therefore moved on to using Microsoft\u2019s Project Oxford OCR which was a lot more accurate. Unfortunately, we couldn\u2019t implement it on our iOS devices because of a common problem but we plan on doing it next.\nAlso, the project was meant to be completed by three people, but unfortunately, one of us feeling sick had to go back home. We still did it and (hopefully?) made him proud (and jealous).</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>It works! We can split bills and individual elements!</p>\n<h2>What we learned</h2>\n<p>That Paul Balaji is an awful rapper.</p>\n<h2>What's next for SPLIT</h2>\n<p>We\u2019re going live ASAP! The main reason why we came to the hackathon is to actually get this project done and functional..!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag\">microsoft-project-oxford-ocr</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/atttali/split.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/atttali/split.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["asfasf", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"asfasf \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/350/327/datas/gallery.jpg\"/>\n<p>\n<i>asfasg</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<h2>What it doesasfasfasfa</h2>\n<h2>How I built it</h2>\n<h2>Challenges I ran into</h2>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<h2>What's next for asfasf</h2>\n</div>\n</div>", [""]]]