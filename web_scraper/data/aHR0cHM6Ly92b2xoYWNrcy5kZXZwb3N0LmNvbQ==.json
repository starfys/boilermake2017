[["eventgetLIT", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>eventgetLIT didn't start out very bright. </p>\n<p>Three young woman from Atlanta ventured into the Big Orange Country with little idea of what to expect out of Volhacks. (But all great stories start with naive heroines, right?) Having never attended a hackathon and two of three members not coming from strict computer science backgrounds didn't make for a promising start. </p>\n<p><em>We just want to make something work,</em> they said. <em>If we don't embarrass ourselves, we'll be fine,</em> they said. </p>\n<p>They expected many scenarios to come out of Volhacks - many of them centered around frustrations with their abilities (or inability) to accomplish their goals, insecurities about knowing what the hell was going on, potential feelings of incredible triumph of surpassing insurmountable odds - </p>\n<p>Yeah, none of this really happened. </p>\n<p>Perhaps looking back, it's strange to think that this experience could have been any different than what it has been. Our three heroines expected a dungeon out of Min Kao: no fun, no sun, snacks only for Android developers (but seriously, at the very least a marginally tense environment filled with people panicking to code at every moment). Yet, within their first hour they found that perhaps some of their fears were exaggerated if not unfounded. And at the very beginning of this 36 hour journey they were charged by a Knight of MLH to learn how to weave a story with a Vessel of Knowledge: the Amazon Echo. </p>\n<p>At this point in the story, it should be noted that our beloved main characters were chalked full of adrenaline and Moe's. So they're up for anything. Taking the Vessel of Knowledge in stride, they retreat to their mattress fortress to answer the questions: <strong>how do we program with this thing</strong>, <strong>crap, can we even use python?</strong>, <strong>how do we turn Alexa ON????</strong>, <strong>IS IT ON YET?</strong> - but as with every hero's journey, there is a mentor, a wizard who can speak magical words and things become clear. In this case, there are two: Marsal and Andrew. </p>\n<p>Marsal and the three heroines actually hail from the same kingdom. However, he took time out of his schedule trying to spread the Gospel of the Mighty Yak Overlord to check in on the team. Quite honestly, just the fact that at least one person had some genuine interest in the hack gave the young heroines the extra push to ground themselves and remember: if they can be okay with no showers for the weekend, they can write some damn code. </p>\n<p>Andrew was an unknown to the young women. Indeed, he went out of his way to seek them out. As fate would have it, in the past Andrew, had been such a wielder of the Vessel. Time and time again throughout the 36 hours, he would offer words of wisdom and suggestions on strategy. </p>\n<p>More than their mentors though, throughout this entire process, these women were reminded that they were more self-sufficient than they remembered. Getting a masters degrees comes with a complementary masters in Googling which came quite in handy to learn how to tackle different aspects of the Hack. They collaborated and throught through all logic structures to ensure that as many parameters and edge cases that they could think of would be solved. One hour bleed into two hours into four hours.. and as time passed, the things they learned grew exponentially: </p>\n<p><code>Intent Schemas, Utterances, Lambda Functions, APIs, GitHub, Pull Requests, Slack Slack Slack, Terminal Commands on Crack</code></p>\n<p>And I suppose this brings you to this point at this time: the end of Volhacks. The End of a Journey. Maybe you've seen our Demo, maybe you haven't yet. Maybe you're just browsing through the projects. But at the end of all this, there's only one take away you need: </p>\n<p>Our hack works. And right now, we're as lit as you can get. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-alexa\">amazon-alexa</a></span></li><li><span class=\"cp-tag\">amazon-lambda</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/eventbrite\">eventbrite</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-url-shortener\">google-url-shortener</a></span></li><li><span class=\"cp-tag\">imagination</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Yihsuan/eventgetLIT\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Yihsuan/eventgetLIT\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Puggr", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Puggr \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/418/045/datas/gallery.jpg\"/>\n<p>\n<i>Map view, where you can see what's going on</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Puggr \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/418/047/datas/gallery.jpg\"/>\n<p>\n<i>The new event screen, where you can invite the world to tag along with you</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Puggr \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/418/046/datas/gallery.jpg\"/>\n<p>\n<i>The profile view, where you can see who you're logged in as</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>When brainstorming, we all agreed that it was difficult to find enough people to play a game of Soccer or Ultimate Frisbee, or to find people that were already playing those games.</p>\n<h2>What it does</h2>\n<p>Puggr is for anyone who wants to find a group of people to do something with!\nWith Puggr you can look around your location for users or groups that are looking for others to join in on whatever they\u2019re doing.</p>\n<h2>How we built it</h2>\n<p>We built it with Swift, Firebase, and <em>lots</em> of HYPE Energy Drinks</p>\n<h2>Challenges we faced</h2>\n<p>Challenges included finding a nice backend that would handle authentication along with storing data points for location and what activities were happening. Initially we were going to go with AWS for handling all that, however Firebase ended up being the perfect match for our app's feature set! (and it was wonderfully simple to get configured from scratch)</p>\n<h2>Proud Achievements</h2>\n<p>Fast updates for user submitted activities and our quick learning of how Firebase integrates with Swift for development. For 3/4 of the team, this is their first ever hack!</p>\n<h2>Whats next for Puggr</h2>\n<p>Going forward there is a whole lot we can do to expand and improve Puggr. A major expansion, would of course, include writing an Android app to complement the iOS app, which we wrote over the hackathon.\nGeneral improvements and quality of life tweaks could include:</p>\n<ul>\n<li>List of specific activities (soccer, football, board games) to speed up user's interactions with the app. </li>\n<li>Option to tweak scanning area</li>\n<li>Set up notifications for when a certain activity occurs nearby</li>\n<li>Notify you when another user checks into an activity</li>\n<li>Reservation system</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ios\">ios</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/puggr/iOS\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/puggr/iOS\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I wrote and designed the iOS app and designed the icon (and really the whole design language of everything)", "I worked on the Puggr.net site, helped establish a backend.", "", ""]], ["TensorTube", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"TensorTube \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/417/731/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>\"Hey guys!\" said Grant. \"See these beautiful horses in this video?\" </p>\n<p>Jeremy dropped his XBox controller and slowly turned his gaze towards Grant's monitor. \"I don't see anything?\" he queried. </p>\n<p>Grant sighed, \"Well, it's too late now, the video has moved on.\" </p>\n<p>Doug piped up. \"Wouldn't it be cool if we could somehow see the timestamps of interesting objects in YouTube videos?\" </p>\n<p>\"Well, we actually can, using machine learning!\" suggested Alex.</p>\n<p>And thus, an idea was born.</p>\n<h2>What it does</h2>\n<p>Upon navigating to the website, users can enter a YouTube URL to analyze, or select from a database of already cached videos. After entering a URL, users must wait for the website to process the video. Upon completion, the page returns a list of the top ten most relevant tags, along with click-able timestamps to find the items.</p>\n<h2>How we built it</h2>\n<p>We used TensorFlow and ImageNet for the classification and modeling of the neural network. We used Flask and Amazon Web Services (AWS) for the web application, and pytube and openCV for the video processing.</p>\n<h2>Challenges we ran into</h2>\n<p>It took a significant time to set up the web server.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>The wide scope of areas this project covered, ranging from low level machine learning algorithms to front end web development.</p>\n<h2>What we learned</h2>\n<p>We learned about how to set up a server on AWS, and how to use machine learning algorithms to classify various types of data.</p>\n<h2>What's next for TensorTube</h2>\n<p>We plan on parallelizing the object recognition in order to give an immense speed up in processing and compute time.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">tensorflow</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/opencv\">opencv</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag\">imagenet</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://www.tensortube.tech/\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.tensortube.tech/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.tensortube.tech</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["City Trail", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"City Trail \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/417/843/datas/gallery.jpg\"/>\n<p>\n<i>Website Initial Landing</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"City Trail \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/417/933/datas/gallery.jpg\"/>\n<p>\n<i>Turn 1: 4 Players routes via esri</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>City Trail</h1>\n<p>Similar to Oregon Trail where we use ESRI mapping, path finding, and\ndemographic data to create a realistic chase to the finish!\nIt is a multiplayer game which can handle games between 5-10 people. \nCircles are players, Squares are bikes/cars, and the X is the finish.</p>\n<p>\n<img data-canonical-url=\"https://github.com/costrouc/volhack-citytrail/raw/master/img/app-screenshot.png\" src=\"https://res.cloudinary.com/devpost/image/fetch/s--ffZpWHCp--/https://github.com/costrouc/volhack-citytrail/raw/master/img/app-screenshot.png\"/>\n</p>\n<p>Uses:</p>\n<ul>\n<li>AWS for hosting</li>\n<li>ARCGIS heavily (described below)</li>\n<li>Flask for server side, Bootstrap and VanilaJS for Front End</li>\n</ul>\n<h2>How do we use ARCGIS</h2>\n<ul>\n<li>Custom Mapping (We created our own Vector Theme)</li>\n<li>Graphical Layer by drawing images and paths on map.</li>\n<li>Route Finding and we limit path by current mode of travel (WALK, BIKE, CAR)</li>\n</ul>\n<p>\n<img data-canonical-url=\"https://github.com/costrouc/volhack-citytrail/raw/master/img/app-screenshot1.png\" src=\"https://res.cloudinary.com/devpost/image/fetch/s--4Vp_kiga--/https://github.com/costrouc/volhack-citytrail/raw/master/img/app-screenshot1.png\"/>\n</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/costrouc/volhack-citytrail\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/costrouc/volhack-citytrail\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["HeartTrends", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"HeartTrends \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/417/760/datas/gallery.jpg\"/>\n<p>\n<i>Node-RED program visual program flow</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"HeartTrends \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/417/761/datas/gallery.jpg\"/>\n<p>\n<i>Bluemix Heart Trends Dashboard Card</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"HeartTrends \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/417/790/datas/gallery.jpg\"/>\n<p>\n<i>Twilio text alert screenshot</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>We Blogged Our Journey</h2>\n<p><a href=\"http://www.christopherpineda.com/HeartTrends_WatsonIoT.html\" rel=\"nofollow\">http://www.christopherpineda.com/HeartTrends_WatsonIoT.html</a></p>\n<h2>Inspiration</h2>\n<p>We were inspired by <a href=\"http://blogs.discovermagazine.com/d-brief/2015/07/28/smart-mirror/\" rel=\"nofollow\">The MIT Smart Mirror</a> and the IBM Watson IoT Platform tech talk.</p>\n<h2>What it does</h2>\n<p>By providing alerts to emergency contacts when a patient's heart rate enters critical ranges, we believe that our web service can save lives.</p>\n<h2>How we built it</h2>\n<p>We used the IBM Watson IoT Platform on Bluemix. We simulated data from a heart rate monitor and fed that into Bluemix. Once that data is parsed, we evaluate it against custom value ranges to determine if the readings are within a safe range. If the reported heart rate is above or below the designated safe range, we mark the reading as critical and begin the alert portion of our product. We trigger an HTTP request that pulls a JSON object from a database that contains the name of the patient\u2019s emergency contact. We use this information to send the contact a critical alert using the Twilio API. Additionally, we record and visualize all heart rate data so that it can be reviewed by the patient\u2019s healthcare team.</p>\n<h2>Challenges we ran into</h2>\n<p>The third member of our team caught a stomach flu the morning of the event. We found this out just 4 hours before departing from Biloxi, Mississippi. We also encountered a caching issue when setting up the JSON for our patient contact data.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Convincing our employer to let us attend this awesome competition. Completing the IBM challenge and taking home a Raspberry Pi 3.</p>\n<h2>What we learned</h2>\n<p>How to setup and deploy a project using IBM Bluemix. Using Node-RED\u2019s graphical interface to control the flow of data amongst Bluemix services and Third-Party APIs such as Twilio.</p>\n<h2>What's next for HeartTrends</h2>\n<p>By adding authentication and a backend database, this product can be made to work worldwide. We will add a variety of sensors.  Watson also has the power to automatically translate the alerts to many different languages.  We\u2019ll also be educating our employer about how we can create scaleable complex web services to quickly deploy solutions using IBM Bluemix.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bluemix\">bluemix</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag\">node-red</span></li><li><span class=\"cp-tag\">iot-platform-starter</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://heart-trends.mybluemix.net/\" rel=\"nofollow\" target=\"_blank\" title=\"http://heart-trends.mybluemix.net/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>heart-trends.mybluemix.net</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Road-Rant", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>Road-Rant</h1>\n<p>On our way up to this hackathon (all the way from Atlanta!) we came across all kinds of people on the open road. Most were fine, some were jerks, and even fewer yet were very generous. </p>\n<p>We thought it would be pretty interesting to have drivers be accountable for how they are on the road when they're not driving so we made Road Rant. </p>\n<p>This multi-platform device consists of an android app, an ember.js web app, and a rails backend. Together they allow users to easily post a review of someone's driving, look them up, and even see where there is the highest volume of 'mean' drivers. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ruby\">ruby</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ember-js\">ember.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sass\">sass</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ruby-on-rails\">ruby-on-rails</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/kennethhyman/roadrant\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/kennethhyman/roadrant\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/kennethhyman/roadrantember\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/kennethhyman/roadrantember\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/ddakev/RoadRant\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ddakev/RoadRant\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["We all chipped in on just about everything. I started off scaffolding the backend, then moved to connecting it with ember as a front-end, from there I went back to back end briefly to make a seeding class, and then finished up on the ember.", "I worked on the Android client front end and its integration with the back end.", ""]], ["Parkit", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>VolHacks ( Parkit App )</h1>\n<h2>Created by:</h2>\n<h4>Muhammad Salad, Abas Shekh, Cody Hill, and Trevon Williams</h4>\n<h3>App Idea</h3>\n<p>The basic idea of the app uses ardiuno to count the amount of cars going and leaving a parking garage using the Arduino Uno's ultrasonic senor, to ensure reliablilty of apps car count. The Ardiuno connects to a Firebase server built on Amazon's webservices, running in a virtual machine. ( We didn't have a wifi shield for the Arduino but we have proof of being able to manipulate the data in Firebases JSON file. ) The Android app we used to allow the users to connect, utilies Firebase to get accurate open parking slot numbers in parking garages around campuses. We incorprated esri's geo mapping to provide a beautiful UI experience, which allowed us to apply navigation and useful description of Campus's. </p>\n<h3>API's used</h3>\n<ul>\n<li>Esri / Argc</li>\n<li>AWS</li>\n<li>FireBase</li>\n</ul>\n<p>Copyright 2016 CharlotteHack</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/github\">github</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/esri\">esri</a></span></li><li><span class=\"cp-tag\">argc</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Salad7/VolHacks\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Salad7/VolHacks\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Worked on the back-end, setting up AWS, firebase, and connecting it to android. ", "Implementing Esri API. ", "", ""]], ["NoteGen", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>A passionate interest in music and programming.</p>\n<h2>What it does</h2>\n<p>You are a tiny space ship. Move the mouse to move around and dodge the graphical representations of musical notes generated by a computer. But don't hit the notes or you dead.</p>\n<h2>How we built it</h2>\n<p>Blood. Sweat. Tears. Caffeine. Oh, and code stuff.</p>\n<h2>Challenges we ran into</h2>\n<p>Sleep deprivation and a lack of sleep.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>The musics, the graphic designs, and the sweet JavaScript code.</p>\n<h2>What's next for NoteGen</h2>\n<p>More notes.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://notegen.tech.s3-website-us-east-1.amazonaws.com/\" rel=\"nofollow\" target=\"_blank\" title=\"http://notegen.tech.s3-website-us-east-1.amazonaws.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>notegen.tech.s3-website-us-east-1.amazonaws.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["orangeyougladwedidntsingrockytop", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Joke:\nQ: \"knock knock\"\nA:\"who's there\"\nQ:\"Banana\"\nA:\"Banana who?\"\nQ: \"knock knock\"\nA:\"who's there\"\nQ:\"Banana\"\nA:\"Banana who?\"\nQ: \"knock knock\"\nA:\"who's there\"\nQ:\"Banana\"\nA:\"Banana who?\"\nQ:\"Orange You glad I didn't say Banana?\"</p>\n<h2>What it does</h2>\n<p>It is a website</p>\n<h2>How we built it</h2>\n<p>Notepad and HTML</p>\n<h2>Challenges we ran into</h2>\n<p>Posting HTML file to domain</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>The pun</p>\n<h2>What we learned</h2>\n<p>Websites are complicated</p>\n<h2>What's next for orangeyougladwedidntsingrockytop</h2>\n<p>Sleep</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/mdemorat/orangeyougladwedidntsingrockytop\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/mdemorat/orangeyougladwedidntsingrockytop\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"http://orange-u-glad-we-didnt-sing-rockytop.com\" rel=\"nofollow\" target=\"_blank\" title=\"http://orange-u-glad-we-didnt-sing-rockytop.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>orange-u-glad-we-didnt-sing-rockytop.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Video Home Storage", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Video Home Storage \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/417/944/datas/gallery.jpg\"/>\n<p>\n<i>Video Home Storage tape drive</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Video Home Storage \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/417/942/datas/gallery.jpg\"/>\n<p>\n<i>Circut to control buttons</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Video Home Storage \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/417/937/datas/gallery.jpg\"/>\n<p>\n<i>Wiring of VCR controls</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Video Home Storage \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/417/938/datas/gallery.jpg\"/>\n<p>\n<i>VCR Composite Input</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Video Home Storage \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/417/936/datas/gallery.jpg\"/>\n<p>\n<i>Back of VCR</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Tape backup is the best solution for companies to store large amounts of data. This market has a very high cost of entry for consumers. We want to create a solution that will allow anyone to use tape backup. Our solution is the Video Home Storage.</p>\n<h2>What it does</h2>\n<p>The Video Home Storage is a home tape backup solution. You can store files to and read file from the magnetic tape drive. Your magnetic tapes are VHS cassettes and your drive is a VCR.</p>\n<h2>How we built it</h2>\n<p>We used a VCR, TV tuner, Arduino, computer, and some software to transform the VCR. The TV tuner read the output of the VCR. The Arduino was used to control the play, stop, records, and eject buttons. The computer encoded files in to a video format and output them to the VCR. The VCR would finally record it to the VHS inside.</p>\n<h2>Challenges we ran into</h2>\n<p>Communication,\nCorrecting video channels,\nMaking the circuits for the VCR controller,\nThreading ,\nTV tuner card</p>\n<h2>Accomplishments that we are proud of</h2>\n<p>Control VCR with our computer,\nRecord video from a computer to a VCR,\nRecord video from a VCR to a computer,\nTurn data into images,\nTurn images into data</p>\n<h2>What we learned</h2>\n<p>Analog Coax standards,\nManipulating Arduino registers,\nRange of carrier frequency,\nRotate right equals in C#,\nScaling for NTSC color,\nSerial communication with Arduino,\nSerial out with C#</p>\n<h2>What's next for Video Home Storage</h2>\n<p>We currently have a working prototype of the system, but there is a multiple features we would like to add. We have a theoretical max yield of 2Gb per VHS cassette. We would like to attempt to reach a close data yield. We realized that we could record over a VHS with a movie on it. We would like to embed our data stream into a full movie. This would allow you to watch the movie on the tape and store the file. This would make it very hard for someone to detect the data stream without knowing of it. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/net\">.net</a></span></li><li><span class=\"cp-tag\">vcr</span></li><li><span class=\"cp-tag\">vhs</span></li><li><span class=\"cp-tag\">vhf</span></li><li><span class=\"cp-tag\">ntsc</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/AwesomeShayne/VideoHomeStorageFE\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/AwesomeShayne/VideoHomeStorageFE\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/AwesomeShayne/VideoHomeStorageMC\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/AwesomeShayne/VideoHomeStorageMC\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/AwesomeShayne/VideoHomeStorageTIB\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/AwesomeShayne/VideoHomeStorageTIB\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I was in charge of developing the user interface and implementing parity. I learned a lot about the things you can do with C#/.NET which allowed me to implement communication over serial for controlling the VCR.", "I primarily worked on the codec that allowed us to transform data into a stream of images, and back again", ""]], ["Catana", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Catana</h2>\n<p>Catana is the way to cut down online harassment. Definitely not cutting down on cats. or <strong>Fat</strong> stacks ;)</p>\n<p>We end harassment online by stopping it at the source. In a world where everyone is online, people are threatened and harassed every day, leading to a less pleasant world. By using our chrome extension, users can feel safe and at home when on the interwebs, especially that <em>nasty</em> social media (web 2.0).</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/shell\">shell</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/JonathanGrant/VolHacks\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/JonathanGrant/VolHacks\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the Chrome Extension's ability to replace harassment terms with nice words and cats!", "", ""]], ["Piece of Mind", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Piece of Mind \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/417/993/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Why</h2>\n<p>To design, build, and experiment making inspirational robot prototypes with your hands and mind.</p>\n<h2>How</h2>\n<p>Pick up and place pieces in a meditative learning environment with an added capacity for color.</p>\n<h2>What</h2>\n<p>HTC Vive Roomscale VR + Muse Brain Sensing combined to design machines in a brand new way.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">htc-vive</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bluemix\">bluemix</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/muse\">muse</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag\">node-red</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/docker\">docker</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/websockets\">websockets</a></span></li><li><span class=\"cp-tag\">steamvr</span></li></ul>\n</div>\n</div>", ["I connected the Muse Headband to our IBM Bluemix analysis and to our Unity engine in a way that we could make meaningful use of the data.", "", ""]], ["RIPSim", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>As members of the UTK IEEE Robotics Team, we have built many robots between us -- enough to appreciate the difficulty in building and testing autonomous robots. RIPSim is an opportunity to create a new tool to assist future development of robots.</p>\n<h2>What it does</h2>\n<p>RIPSim provides simulation capabilities to the RIP system. RIP (Robotics Integrated Platform) is a rapid prototyping and development framework developed by the UTK IEEE Robotics Team to build small scale autonomous robots. RIPSim builds on this and allows for simulating designs and code prior to physical implementation. </p>\n<h2>How I built it</h2>\n<p>This was a team effort with members of the robotics team. The graphical aspect was developed through Unreal Engine while the actual simulation backend is programmed in Python. The simulation is integrated in a branch of RIP with direct modifications to the structure of the framework to allow for integrated simulation and testing. </p>\n<h2>Challenges I ran into</h2>\n<p>The process of simulating a robot is a non-trivial affair. Other technical challenges include establishing a high speed, reliable interprocess communication system to move the simulation data to the Unreal Engine Visualizer. Another technical issue encountered was determining a manner to properly convert and simplify the CAD models of various components. The standard conversion process we first used from STEP to OBJ files generated far too many vertices for real time rendering on a laptop, so we were required to be more careful in the generation of OBJ model files.  </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>This project is really ambitious from a technical perspective, but this project is something which offers immediate usefulness to the robotics team and to the platform as a whole. I am proud of the entire team accepting such a difficult task and making significant progress towards our goals. </p>\n<h2>What I learned</h2>\n<p>This project helped team members expand their knowledge of 3D graphics, CAD model formats, and Unreal Engine development. The project also required careful consideration of how to integrate a \"fake\" runtime environment for the existing RIP code base to allow for a simulated robot dealing with simulated time. </p>\n<h2>What's next for RIPSim</h2>\n<p>We fully plan to complete the development of RIPSim and include it as an important part of the RIP system. Additionally, another hackathon team investigated building a robot from components in a VR environment. We would love to integrate their system with our simulator to create a full virtual development system for robotics. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/websockets\">websockets</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unreal-engine\">unreal-engine</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/utk-robotics-2017\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/utk-robotics-2017\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["TurretGunner", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/zVWyaRmjdT4?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"TurretGunner \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/417/927/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"TurretGunner \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/417/929/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>The inspiration behind the game was the old arcade classics of Asteroid, Space Invaders, and Missile Command. I wanted to revive the classic using the up and coming virtual reality technology, specifically Google Cardboard VR. </p>\n<p>In the game, the player controls a laser turret by moving there head. By pressing a button on the side of the Google Cardboard, the turret fires a pulse of energy which will destroy an asteroid with enough hits. </p>\n<p>The game was built using Unity, the Google VR SDK for Unity, and assets from Unity's Asset Store. </p>\n<p>The biggest challenge was rendering readable text for the user as most virtual reality technology distorts an otherwise clear picture.</p>\n<p>Although I could add more features, increase performance, and add a lot of spit and polish, this is the product of my first hackathon and is also the first game that I will be proud to say I created it.</p>\n<p>First, I will expand the control to be compatible with a mouse and keyboard for PCs as it relies on a mobile device's gyroscope at the moment. </p>\n<p>Right now the player is just practicing on asteroids, how will they face an armada of alien invaders? Perhaps more turret can be built and operated by other gunners.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li></ul>\n</div>\n</div>", ["Solo Project"]], ["InboxAnalyzer", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"InboxAnalyzer \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/417/802/datas/gallery.jpg\"/>\n<p>\n<i>Waves</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"InboxAnalyzer \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/417/804/datas/gallery.jpg\"/>\n<p>\n<i>Lines</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<pre class=\"language-nolang\"><code> We are interested in learning how to analyze data in new and interesting ways.\n</code></pre>\n<h2>What it does</h2>\n<pre class=\"language-nolang\"><code>Our program takes asks a user to log in to their Google account, in order to access their Gmail inbox. Then, it goes through the inbox and finds quantity and frequency of unique senders. The output is then visualized by use of the Initial-State visual API. The visuals generate a robust and stylized output that is easier to interpret.\n</code></pre>\n<h2>How we built it</h2>\n<pre class=\"language-nolang\"><code>We started with Google's Gmail service, which has API's ready-to-use with near seamless integration. Using this API, we were able to access the user's Gmail account, scan through each email in their inbox, and retrieve the sender's domain.\nAll of the driving code was created using python.\n</code></pre>\n<h2>Challenges we ran into</h2>\n<pre class=\"language-nolang\"><code>Figuring out exactly what data to display was a challenge, considering just how much the Google API can pull from an account. Inherit in emails, a sender's domain could very well be an alias, which would possibly skew our results. \nAnother obstacle was pulling the information from the Gmail API and sending it to Initial State. Luckily, Initial State had very helpful tutorials on our integration method (from Python).\nOne challenge, left unconquered, is incorporating our program in an html page.  \n</code></pre>\n<h2>Accomplishments that we're proud of</h2>\n<pre class=\"language-nolang\"><code> We were able to successfully integrate, not one, but two API's with little to no prior experience with them.\n</code></pre>\n<h2>What we learned</h2>\n<pre class=\"language-nolang\"><code>Gmail API\nmultiple Python integrations\nInitial State Visualization API\n</code></pre>\n<h2>What's next for InboxAnalyzer</h2>\n<pre class=\"language-nolang\"><code>We look forward to the possibility of extending features, such as: \n    --publishing in the website where anyone can access our program\n    --linking together results from multiple users, in order to generate a broad report about domains' behavior\n    --generating a course of action in order to cut down on unwanted emails\n    --adding support for other email provider such as Yahoo and Hotmail\n    --and many more possibilities\n</code></pre>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-gmail-oauth\">google-gmail-oauth</a></span></li><li><span class=\"cp-tag\">initial-state</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/nshah7/Inbox_Analyzer\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/nshah7/Inbox_Analyzer\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Dungeon VR - Google Cardboard ", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Dungeon VR - Google Cardboard  \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/418/068/datas/gallery.jpg\"/>\n<p>\n<i>An ominous entry prepares the player for the dark gritty world of... DUNGEON VR!</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Dungeon VR - Google Cardboard  \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/418/069/datas/gallery.jpg\"/>\n<p>\n<i>The Grand Prize</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Dungeon VR - Google Cardboard  \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/418/070/datas/gallery.jpg\"/>\n<p>\n<i>Honest-2-Lyfe Shiny 3D Grafixs!</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>I have always enjoyed playing video games and have been interested in VR, but the monetary barrier has prevented me from being able to experiment in it. This project allowed me to also learn the basics of Unity as well as play around with Google Cardboard for a limited VR Experience</p>\n<h2>What it does</h2>\n<p>Each member of our team worked on a separate project, but collaborated with each other. My project was a dungeon type puzzle explorer games made from scratch. It consists of 2 rooms which has switches and buttons that allow for further exploration. In the second part of the maze, I have hidden a secret button that will open up a wall revealing the 3D scanned version of myself.</p>\n<h2>How we built it</h2>\n<p>Nobody in our team had any experience with Unity so the first day, we loaded up example projects and looked at how the different components were coded and interacted with each other. At that point we began working on our own projects, and I started making a map from scratch and simply played around with things to learn the limitations of what I could do.</p>\n<h2>Challenges we ran into</h2>\n<p>Since we were unfamiliar with Unity, we spent a great deal of time trying to figure out how to translate our ideas into Unity's pre-existing libraries. The biggest hurdle we faced though, we on the night before we had to submit our projects. We had working versions of our projects but when we tried to combine them together into a single APK, we ran into a lot of compilation errors with Unity. However these errors were related to scripts that we did not even use, and we could not figure out why they were popping up or how to fix them. I had made some final polishes to my project and we were planning on having an initial 3D menu where a player could choose which demo to view. Because these errors showed up, we were unable to combine the projects into a gallary like we were originally planning and submitted each working project individually.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>I personally was proud of my small level. I played around a lot with the texture shaders and managed to achieve a very pretty looking wet look on the floors and walls. I was also proud of the torch I had created from scratch, which included a light emitter with a short script I wrote to produce flickering, as well as a simple particle system to give it some ambiance. I think the team is proud of their ability to quickly learn and make interesting projects that we could immediately test using the Google Cardboard</p>\n<h2>What we learned</h2>\n<p>I, and presumably my whole team, learned a lot about Using Unity and the limitations and opportunities of VR.\nI had been wanting to learn Unreal Engine and these projects definitely lessened the mental stigma I had about diving into something I have little knowledge about. I think that after this, I will be much more willing to learn how to use other Game Engines and Languages.</p>\n<h2>What's next for Volhacks Dungeon VR</h2>\n<p>I will install Unity on my desktop and attempt to recover my work, although I am not sure If I will be able to get the original file working again. However I know how everything was done so I can easily recreate it in much less time, and I can see myself continuing my project to see what else I can make. If what I end up with is enjoyable and polished enough, I think I could even potentially put it up on the Google Play Store.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag\">structure-scanner</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://drive.google.com/file/d/0B96-oN-1KZDPMmcySHRfRHFSdVE/view?usp=sharing\" rel=\"nofollow\" target=\"_blank\" title=\"https://drive.google.com/file/d/0B96-oN-1KZDPMmcySHRfRHFSdVE/view?usp=sharing\">\n<i class=\"ss-icon ss-link\"></i>\n<span>drive.google.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Dank Jones Industrial Average", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>While using Reddit, we decided we needed an objective way to rank the dankest memes of the internet.</p>\n<h2>What it does</h2>\n<p>Using Google Trends and Google Custom Search Engine, a numerical measure of a meme's online popularity was created. This score is calculated for a number of memes and the dankest is returned. We have attempted to interface this with the Alexa Skills Kit for Amazon Echo.</p>\n<h2>Challenges we ran into</h2>\n<p>We had issues with security while trying to interface with our AWS-based database, as well as configuring the Alexa Skills Kit to work as desired.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We're proud of the idea and that we completed as much as we did with the setbacks that we encountered.</p>\n<h2>What we learned</h2>\n<p>We learned that libraries and configurations can often be the hardest part of a project, and that more planning would have greatly improved our chance of success.</p>\n<h2>What's next for Dank Jones Industrial Average</h2>\n<p>Next steps would include getting the calculated data into the database and then utilized by Alexa as originally planned.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-alexa\">amazon-alexa</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/cnorick/meme-stocks\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/cnorick/meme-stocks\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["ForestScene_VR", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"ForestScene_VR \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/417/808/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"ForestScene_VR \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/417/809/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>This is part of the application suite we made.</p>\n<p>The file has a lot of assets (the app is a little over 100 MB). I can't get it under 92 so here are 3 scripts I wrote.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-cardboard\">google-cardboard</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li></ul>\n</div>\n</div>", ["", "", "", ""]], ["LED cube 4x4x4", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/9Ieu3CbPfF8?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"LED cube 4x4x4 \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/417/800/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"LED cube 4x4x4 \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/417/801/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"LED cube 4x4x4 \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/417/803/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"LED cube 4x4x4 \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/417/805/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>The LED is one of the most common electrical parts that we use in daily life because of its duration, cheap cost, and wide use. We can found it in the RC car, the desk lamp, and flashlights, etc. When these devices stop working, they are not recycled or recycled in improper ways leading to waste money and resources. Since the LED is extremely durable, it normally remains working on the old device. Therefore, I decided to recycle old LEDs by building a LED cube to decorate my house. </p>\n<h2>What it does</h2>\n<p>The LED cube displays lights in several effects such as raindrop, snake, blink. It also can be easily programmed depending on your interest.  </p>\n<h2>How I built it</h2>\n<p>I soldered 64 LEDs to a 4x4x4 cube. At each layer, the positive leads were solderd together so I could use one output pin from the Arduino to control the current flow in one layer. After finishing four layers, I soldered the negative leads together by stacking the individual layers on the top of each other. I connected twenty pins from Arduino to four layers and negative leads at the bottom. The light turned on when the positive pin is high and negative pin is low. I wrote a code that let Arduino pins low and high in specfic time to control 64 LEDs individually. </p>\n<h2>Challenges I ran into</h2>\n<p>During my soldering process, I accidentally burned a LED causing a whole system stop working. I had to use a  multimeter to detect the broken LED and replaced it by another one. </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>This is my first experience of soldering but I did not fail. </p>\n<h2>What I learned</h2>\n<p>I learned how to solder and use a simple code.</p>\n<h2>What's next for LED cube 4x4x4</h2>\n<p>I will upgrade it by adding an ethernet shield to the Arduino so I can control the cube by using my phone. Furthermore, I will upgrade it to an 8x8x8 cube to create more amazing light effects and even use it simulate a moving object in 3D. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li></ul>\n</div>\n</div>", [""]], ["Tactical Traps", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Tactical Traps \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/417/795/datas/gallery.jpg\"/>\n<p>\n<i>Demo Level 1 example</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Tactical Traps \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/417/796/datas/gallery.jpg\"/>\n<p>\n<i>Example of using the level editor to place a trap</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Artificial intelligence is a topic that interested our whole group. Even though implementing an intelligent system into a game is a challenging task for a single weekend, we wanted to explore how far we could get.</p>\n<h2>What it does</h2>\n<p>Tactical Traps is essentially a puzzle/strategy game in which the player attempts to place obstacles throughout floors of a building to impede the progress of thieves attempting to steal a valuable artifact from the top floor. We intended to design the enemy AI such that it would learn from past failures due to being caught in one of the player's traps. </p>\n<h2>How we built it</h2>\n<p>We designed the game from scratch using the Unity game engine. We used C# scripting to implement various behaviors on objects within the game.</p>\n<h2>Challenges we ran into</h2>\n<p>AI is a complicated topic with which our group was inexperienced. We also realized how time consuming and detail-intensive game development can be, even with the aid of a game engine like Unity. These issues were compounded with the fact that we had only a couple of days to fully implement a complicated system.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We were able to implement a lot of the base systems and components of the user interface for our game. We learned quite a bit more about Unity functions and features as well, which could help with future projects. Our C# knowledge has also grown quite a bit.</p>\n<h2>What's next for Tackle Traps</h2>\n<p>Many core components to our game are still incomplete. Hopefully, we can find time to continue developing our project into a more complete game.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://gitlab.com/calebmaskew/SecurityGame.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://gitlab.com/calebmaskew/SecurityGame.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>gitlab.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the graphical user interface for the game as well as all of the animations for the game character.  I did all the scripting involved in interacting with said GUI and provided an API for the character movement scripter to use my animations.  Being the most experienced with Unity, I also helped the team work through general unity issues.", "", ""]], ["winternet", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"winternet \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/417/779/datas/gallery.jpg\"/>\n<p>\n<i>Vols win!</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>winternet</h1>\n<p>A small javascript game written during hackathon 2016</p>\n<p>Contributors:\nChris Dean,\nHannah Hajdik,\nKelsey Veca,\nSam MacLean</p>\n<h1>Running the game</h1>\n<p>Run the code <code> node server.py </code></p>\n<p>If you do not have <code>node</code> you can use <code>apt-get install node</code> or your distro's equivalent.</p>\n<p>You can access the game on port 3000.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/kveca1/winternet\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/kveca1/winternet\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"http://www.how-to-inter.net\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.how-to-inter.net\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.how-to-inter.net</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Alexa read my slack ", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Early in the hackathon there were a bunch of @channel notifications we missed out on because we were just being too lazy to check the app</h2>\n<h2>What it does: with a command alexa pulls from slack on a single channel a message then plays the message back though the speaker on the echo</h2>\n<h2>How we built it: using a raspberry pie with an amazon echo linking them together with aws and python code to make a skill</h2>\n<h2>Challenges we ran into : learning higher level python than what i was taught, learning alexia's api and how to write skllls which was a big roadblock</h2>\n<h2>Accomplishments that I'm proud of : getting the skills to work</h2>\n<h2>What I learned: more about python how to do implementation with alexa skills</h2>\n<h2>What's next for Alexa read my slack i have no clue for this specific application after the hackathon but will use skills leaned to make more alexia skills</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-alexa\">amazon-alexa</a></span></li><li><span class=\"cp-tag\">microphone</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/malcovious/VOLHACKS\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/malcovious/VOLHACKS\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Eyebleach", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Eyebleach \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/417/775/datas/gallery.jpg\"/>\n<p>\n<i>Sample output of the app</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>Eyebleach</h1>\n<p>Project for Volhacks 2016</p>\n<p>Written in Python using Twilio and Reddit APIs to deliver pictures of cute\nanimals straight to your phone via text.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/reddit\">reddit</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/connorgoggans/Eyebleach\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/connorgoggans/Eyebleach\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["what_a_hack", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Tech talks at VolHacks</p>\n<h2>What it does</h2>\n<p>Visualization of how people feel about two 2016 presidential candidates through sentiment analysis of tweets (using #trump and #hillary)</p>\n<h2>How we built it</h2>\n<p>Used IBM Bluemix to create a Node_RED flow that first extracts tweets with the hashtags #trump and #hillary and then performs sentiment analysis of these tweets. The sentiment score generated was then pipelined into Initial State to visualize how people feel about the candidates in real time.</p>\n<h2>Challenges we ran into</h2>\n<p>Transferring data from Bluemix to Initial State</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>It works!</p>\n<h2>What we learned</h2>\n<p>Big data analysis, networking</p>\n<h2>What's next for what_a_hack</h2>\n<p>Add more hashtags/keywords for analysis\nWe can apply our method to other real-time data sets (marketing applications?)</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bluemix\">bluemix</a></span></li><li><span class=\"cp-tag\">initial-state</span></li><li><span class=\"cp-tag\">node-red</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://app.initialstate.com/#/tiles/6c60edd4-c785-4acd-8ca5-a693002c923b\" rel=\"nofollow\" target=\"_blank\" title=\"https://app.initialstate.com/#/tiles/6c60edd4-c785-4acd-8ca5-a693002c923b\">\n<i class=\"ss-icon ss-link\"></i>\n<span>app.initialstate.com</span>\n</a></li>\n<li><a href=\"https://twisttest.mybluemix.net/red/#\" rel=\"nofollow\" target=\"_blank\" title=\"https://twisttest.mybluemix.net/red/#\">\n<i class=\"ss-icon ss-link\"></i>\n<span>twisttest.mybluemix.net</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["MicroRemote", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"MicroRemote \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/417/750/datas/gallery.jpg\"/>\n<p>\n<i>MicroRemote</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Internet of Things</p>\n<h2>What it does</h2>\n<p>Scan a barcode on any food item with your iPhone. If an entry for that food item is found, your microwave will start cooking with the cook time stored in the database. If the entry is not found, then the user can make an entry to store in the database. All info sent between our backend and iOS app is encrypted with AES256CBC. We wrote our backend with a Python framework written by Steven Sheffey himself. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ios\">ios</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">raspberry-pi-3</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Zotzy/MicroRemote\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Zotzy/MicroRemote\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["@fakeDonaldTrump", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Donald Trump's ridiculous and controversial tweets are sometimes nonsensical and it can be hard to decipher whether a real person actually wrote them. These tweets strive to elicit the same response. </p>\n<h2>What it does</h2>\n<p>@fakeDonaldTrump is a rip on the actual presidential canditate's twitter account, @realDonaldTrump. It uses several hundred tweets from Donald Trump's twitter history along with a Markov Chain algorithm to predict Trump's next tweet.</p>\n<h2>How I built it</h2>\n<p>To build @fakeDonaldTrump, I downloaded and changed <a href=\"https://github.com/TehMillhouse/PyMarkovChain\" rel=\"nofollow\">TehMillhouse's PyMarkovChain</a> to better fit my needs, then I used <a href=\"http://snapbird.org/\" rel=\"nofollow\">Snap Bird</a> to download the @realDonaldTrump's tweets. I then used <a href=\"http://textmechanic.com/text-tools/basic-text-tools/find-and-replace-text/\" rel=\"nofollow\">TextMechanics'</a> awesome RegEx functions to get rid of some of the junk like URLs, tweet dates, devices, etc. After that I wrote a simply Python script to tie it all together and let people see or even tweet their own ridiculous campaign slogans!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">markov-chain</span></li></ul>\n</div>\n</div>", [""]], ["badwebsite", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Accomplishments that I'm proud of</h2>\n<p>No one should be proud of this website.</p>\n<h2>What's next for badwebsite</h2>\n<p>Hoping to try and make it worse soon.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://www.isitamag.net\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.isitamag.net\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.isitamag.net</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["what3words travel journal haiku", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"what3words travel journal haiku \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/417/720/datas/gallery.jpg\"/>\n<p>\n<i>first haikus from my Friday commute</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Recently, I listened to the Gimlet Media podcast Surprisingly Awesome. They mentioned what3words and its application in the Mongolian postal service. In areas without addresses people tell narratives to describe shipping and travel routes. Now that what3words and ESRI have mapped the whole world, we need to add the story back into life. Share a haiku that describes your recent travels with your friends.</p>\n<h2>What it does</h2>\n<p>It takes a JSON file from your google location services (LocationHistory.json). It then generates an xml file of the haiku worthy what3words translations of your latitude and longitude changes. A code source from <a href=\"https://github.com/Paurian/EULA-haiku-generator-Using-Ruby\" rel=\"nofollow\">https://github.com/Paurian/EULA-haiku-generator-Using-Ruby</a> is used to create a random haiku from locations along your journey.</p>\n<h2>How I built it</h2>\n<p>RUBY!!! Used ruby gems to grab unique lat and longs of your provided JSON file and then more gems to select strings with 5 and 7 syllables. The code generates an XML code that feeds into Paurian's haiku generate.</p>\n<h2>Challenges I ran into</h2>\n<p>Being a NOOB! Getting access to the what3words API which I am still not sure I am techinically allowed to share my developer key from and working with ruby hashes in ways I haven't done before.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>FREAKING HAIKUS!!!!! And creating a short hand for people to share there locations and share what3words and ESRI tech.</p>\n<h2>What I learned</h2>\n<p>Ruby, Linguistics, ArcGIS applicaitons. </p>\n<h2>What's next for what3words travel journal haiku</h2>\n<p>I would love for what3words travel journal haiku to help people share details of their travels and movements in a human readable way. I would also like to create a website where people can upload their travel journal haikus. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/linux\">linux</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ruby\">ruby</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/rubygems\">rubygems</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/esri\">esri</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/what3words\">what3words</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/github\">github</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/jbird9/what3wordstraveljournal\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/jbird9/what3wordstraveljournal\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["NoteGen-Old", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>A passionate interest in music and programming.</p>\n<h2>What it does</h2>\n<p>You are a tiny space ship. Move the mouse to move around and dodge the graphical representations of musical notes generated by a computer. But don't hit the notes or you dead.</p>\n<h2>How we built it</h2>\n<p>Blood. Sweat. Tears. Caffeine. Oh, and code stuff.</p>\n<h2>Challenges we ran into</h2>\n<p>Sleep deprivation and a lack of sleep.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>The musics, the graphic designs, and the sweet JavaScript code.</p>\n<h2>What's next for NoteGen</h2>\n<p>More notes.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/midi-js\">midi.js</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://notegen.tech.s3-website-us-east-1.amazonaws.com/\" rel=\"nofollow\" target=\"_blank\" title=\"http://notegen.tech.s3-website-us-east-1.amazonaws.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>notegen.tech.s3-website-us-east-1.amazonaws.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["KnoWait", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"KnoWait \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/417/711/datas/gallery.jpg\"/>\n<p>\n<i>KnoWait -- Know where there's no wait NOW.</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration -- KnoWait was birthed from a need for busy students such as ourselves who don't have time to wait 30min.+ in longs lines for food. Thus, we strive for  _ no waiting_ by letting the user <em>know</em> instantly.</h2>\n<h2>What it does -- It is an easy-to-use web app which uses neural networks and various inputs (such as number of employees, number of reciepts, peak-times, etc.) to calculate wait-times for it's users. The app is simple and concise with a emphasis placed on UI/UX, machine-learning algorithms, multi-platformed responsive web design and web development.</h2>\n<h2>How I built it -- The idea for the app was fleshed out by wireframes built with Adobe Fireworks, built with HTML, CSS, and the Bootstrap for the initial user-experience and then integrated neural networks to calculate the NOW (Navigation.Openings.Waitimes.) feature which integrates the Google Maps JavaScript API.</h2>\n<h2>Challenges I ran into -- Customizing Bootstrap in CSS -- in other words, buildling off of Bootstrap -- was extremely difficult to do for our designs; building them again in Android Studios; Using PHP code for the first time to run the Python scripts; Ultra reponsive web pages for any viewports.</h2>\n<h2>Accomplishments that I'm proud of -- Accurate wait-times that have accurate \"Waitimes\" whether we feed real or model inputs into the neural network algorithim; Best UI/UX in all of VolHacks.</h2>\n<h2>What I learned -- The meaning of tenacity.</h2>\n<h2>What's next for KnoWait -- Inverse color theme for Daylight feature for an option on how the user views the app. Fully develop front-end animations with jQuery and AngularJS. Expand KnoWait not only restaurants, but anywhere where needless waiting is involved.</h2>\n<p>Thank you, we had fun here at VolHacks and hope to be back again!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/angular-js\">angular.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xml\">xml</a></span></li><li><span class=\"cp-tag\">neural-networks</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/gimp\">gimp</a></span></li><li><span class=\"cp-tag\">fireworks</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/visual-studio\">visual-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/shell\">shell</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-maps\">google-maps</a></span></li><li><span class=\"cp-tag\">vi</span></li><li><span class=\"cp-tag\">mamp</span></li><li><span class=\"cp-tag\">wamp</span></li><li><span class=\"cp-tag\">ui</span></li><li><span class=\"cp-tag\">ux</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/TaylorHarvin/KnoWait\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/TaylorHarvin/KnoWait\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]]]