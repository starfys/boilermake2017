[["Funsquare", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/ECAedF58jpc?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Funsquare \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/423/882/datas/gallery.jpg\"/>\n<p>\n<i>AR</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>Startup, #Most Technically Impressive Hack, #The 8-Breaker, #Best Hack Design</h1>\n<h2>Inspiration</h2>\n<p>Thought about location based augmented reality integrated with real-time trending data.</p>\n<h2>What it does</h2>\n<p>The app accesses a phone camera and places AR markers on buildings that are trending on Foursquare.</p>\n<h2>How we built it</h2>\n<p>Augmented Reality, Wikitude, Android studio, Docker, Digital Ocean</p>\n<h2>Challenges we ran into</h2>\n<p>Algorithm for tagging buildings based on location was difficult. Example code didn't always compile. Peso F with html 2D map hit a roadblock pretty late. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Never had previous experience with AR, but managed to get a functioning app with location/category markers using Foursquare. </p>\n<h2>What we learned</h2>\n<p>Don't give up at roadblocks. Be ambitious and explore a field we're unfamiliar with.</p>\n<h2>What's next for FunSquare</h2>\n<p>Be able to tap on pop-up markers and find out more information about the venue. Toggle between 2D map and live AR camera. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/augmented-reality\">augmented-reality</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/foursquare\">foursquare</a></span></li><li><span class=\"cp-tag\">api</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/docker\">docker</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/digitalocean\">digitalocean</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag\">startupapi</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/iganbold/hackny-frontend\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/iganbold/hackny-frontend\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Defending Hackerspace", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2><strong>Inspiration</strong></h2>\n<p>We had never worked with VR before and were curious as to what we could do with it and overall what we could learn from working with a relatively recently developed innovation that will likely become commonplace in the near future. With the Oculus Rift, we decided to make a simple game that was inspired by an idea a mentor offered us to work on as a way to learn some essential understandings in VR game development and have fun with it.</p>\n<h2><strong>What it does</strong></h2>\n<p>The player uses their hands to launch objects at projectiles that are aimed at the player in an effort to \"defend the hackerspace\" or in this context, preserve their life-force.</p>\n<h2><strong>How we built it</strong></h2>\n<p>We used C# to make scripts to run in Unity, which is the engine that our game used. Additionally, we created models and text in Unity.</p>\n<h2><strong>Challenges we ran into</strong></h2>\n<p>None of the team members were familiar to C# and so learning the language was a huge challenge. Other specific challenges we ran into would be programming the direction the object traveled, programming the spawn point of the projectiles, and programming object collision. Of course there were many more, though minor compared to the ones listed above.</p>\n<h2><strong>Accomplishments that we're proud of</strong></h2>\n<p>While creating the game, we accidentally made a byproduct that could have served as Paint.net for the Oculus Rift, which we thought was pretty neat. Overall, we were proud of just being able to learn how to use C# and our ability to make an almost-finished product given the little experience we had before working with VR.</p>\n<h2><strong>What we learned</strong></h2>\n<p>We learned basic functions in C# as well as some commands specific to vectors and various physics concepts. We also have a better understanding as to how the Oculus Rift and Leap Motion function. </p>\n<h2><strong>What's next for Defend Hackerspace</strong></h2>\n<p>For the game, we would create a (better) UI system, add more player functions and options, and really fine-tune the game to make it run smoother and appear more appealing.In the future, we hope to create better, more in-depth projects involving VR.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/leap-motion\">leap-motion</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/oculus\">oculus</a></span></li></ul>\n</div>\n</div>", ["", "", "", ""]], ["SoundScape VR", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/UVZTKbcxNo4?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We're passionate about music and Virtual Reality, so we decided to combine the two to create an unique immersive experience that has never been attempted. Our goal was to create a procedurally generated world out of an user selected song that pulsates and reacts to its ebbs and flows. We wanted to bring music into a new dimension, and to create an immersive and interactive experience out of it.</p>\n<h2>What it does</h2>\n<p>SoundScape is an immersive experience that builds an entire virtual, unique and interactive world using an user picked song as a reference. After the world is built, various elements in the world come alive and react to the song's beat, tempo, frequency, volume and other aspects of the music as it plays. The user can move their hands around freely, interact with randomly generated objects, and even create trailing light in a way rave enthusiasts have always dreamed of being able to do.</p>\n<h2>How we built it</h2>\n<p>We built this using the Unity3D Game Engine and Leap Motion. We developed algorithms to map beats and frequencies of user-selected songs to generate unique environments that respond to the music as well as the user's actions within its world.</p>\n<h2>Challenges we ran into</h2>\n<p>Procedural environment generation with a performance, getting audio to map to the VR space in a meaningful and beautiful way, engineering a gorgeous experience and designing fun interactions that made sense with the musical theme.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We were able to create a very unique virtual-reality musical experience, making the best use of the latest technologies to develop a way to live, breathe and interact with audio-generated worlds.</p>\n<h2>What we learned</h2>\n<p>A lot about how music works (general theory, waveform, frequencies, beat, using the audio data), Virtual Reality development, Leap Motion integration and new creative ways to manipulate 3D environments with music.</p>\n<h2>What's next for Soundscape</h2>\n<p>We want to turn it into a multiplayer experience, improve our algorithms so we can create even more expansive worlds, and add even more novel ways for you to physically interact with sounds.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/oculus\">oculus</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/leap-motion\">leap-motion</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li></ul>\n</div>\n</div>", ["Helped set up the VR environment and made it responsive to music", "Unity Development, Environmental and Interaction Design", "", ""]], ["Dynamo", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Dynamo \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/423/881/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>Dynamo</h1>\n<p>Chrome extension to manage productivity by organizing task priority</p>\n<p>Doug and I lead pretty busy lives - being part of organizations, doing research, and juggling it all while trying to graduate on time.</p>\n<p>As a result, I originally came up with the idea of making an app that can manage the assignments, day-to-day tasks, and major projects and keep the info on our browsers, and eventually to our mobile devices.</p>\n<p>We thought it would be important to \na: \nhave the tasks ordered by priority\nand </p>\n<p>b:\nbe able to log, display, and review progress in these tasks.  </p>\n<p>Making events on our calendars would eventually be forgotten without lots of reminders and notifications.\nMaking notes was suspect to being inconsistent with progress without a central app.</p>\n<p>From this, Dynamo was born.\nDynamo uses no APIs or external libraries currently - we coded this entirely with css, html, and js.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Ezrabl42/Dynamo\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Ezrabl42/Dynamo\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked mostly on the back- end functionality in JS and worked on some emergency HTML front- end elements", "I designed and wrote the front-end as well as merged the JS with the front end components."]], ["ClownSpotter", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"ClownSpotter \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/423/726/datas/gallery.jpg\"/>\n<p>\n<i>screenshot</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Safety should be everyone's priority! ClownSpotter helps you find out where those hostile clowns are and where they are conducting their funny business!</p>\n<h2>What it does</h2>\n<p>ClownSpotter lets you submit sightings of clowns in your area! Just fill in the date and location to help keep our map up to date. Look at where the clowns have been spotted all across the globe!</p>\n<h2>How we built it</h2>\n<p>We used Flask as the web framework, implemented a database in MongoDB and used Bootstrap to give more live to our ClownSpotter web app!</p>\n<h2>Challenges we ran into</h2>\n<ul>\n<li>Lack of knowledge in different technologies.</li>\n<li>Not being familiar with the clarifai API beforehand.</li>\n<li>Being scared of clowns.</li>\n</ul>\n<h2>Accomplishments that we're proud of</h2>\n<p>All of our team members know how to use pull and push now! We learned a lot and we had fun this weekend. We are happy we got to participate and help the world prevent scary clown encounters.</p>\n<h2>What we learned</h2>\n<p>Learned how web servers work in tandem with databases through the use of rest endpoints and learned how to appreciate the user friendliness of MongoDB. We also learned about HTML, Git commands, and teamwork skills during sleep deprivation times.</p>\n<h2>What's next for ClownSpotter</h2>\n<p>Implementing image upload option for Report It, using the clarifai API to verify image classification, and implementing data visualization libraries for geographical mapping in the Where Are They site.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ajax\">ajax</a></span></li><li><span class=\"cp-tag\">eve</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/love\">love</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/anaparravera/ClownSpotter.githttps://github.com/anaparravera/ClownSpotter.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/anaparravera/ClownSpotter.githttps://github.com/anaparravera/ClownSpotter.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/anaparravera/ClownSpotter\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/anaparravera/ClownSpotter\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", "", ""]], ["iScavengerHunt #clarifai #twilio #firsttime", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We combined 3 ideas we brainstormed to create an idea we all be interested in. The ideas were gaming, clarefai, and twilio. We wanted to use those ideas and tools in order to create, hence iScavengerHunt was formed.</p>\n<h2>What it does</h2>\n<p>You can create scavenger hunts. \nMonitor scavenger hunts.\nParticipate in scavengers hunts.\nUsing clarefai api to see if you got the right answer.\nMost of all, have fun. </p>\n<h2>How we built it</h2>\n<p>We built it with Android Studio. </p>\n<h2>Challenges we ran into</h2>\n<p>Incoprating clarefai and twilio into Android Studio.  Debugging and timing. Learning the apis. Working on multiple projects.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Working on project we actually like to do and building it even if it's a prototype. Having fun and learning new technologies. </p>\n<h2>What we learned</h2>\n<p>We learned how to use various APIs. </p>\n<h2>What's next for iScavengerHunt</h2>\n<p>Putting it all together. Test run and optimize the algorithm. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/awaheed9019/iScavengerHunt\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/awaheed9019/iScavengerHunt\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Created the Android App which the scavenger hunt organizers and teammates can use. Front end and back end with SQLite Database.", ""]], ["Text2Song", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>DJ music with lower power</p>\n<h2>What it does</h2>\n<p>Text2Song takes your text from SMS and tells the Amazon Echo what to play based on the song you requested.</p>\n<h2>How I built it</h2>\n<p>Text2Song was bulit using Twilio API, YouTube API, and Node.js</p>\n<h2>Challenges I ran into</h2>\n<p>Forgot to call my CSS file, Setting up enviorments   </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I learned BootStrap, How to use Twilio API</p>\n<h2>What I learned</h2>\n<p>I learned how to use Bootstrap to make better websites, instead of having to write up my own css file everytime. </p>\n<h2>What's next for Text2Song</h2>\n<p>Adding play, pause, skip feature, queuing the songs</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/youtube\">youtube</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/alexa\">alexa</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/renisalcedo/text2song\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/renisalcedo/text2song\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I contributed on the back-end with the development of the core funtionalities on the nodejs server.", "", ""]], ["Keyboard Keyboard", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We found a piano and had an idea.</p>\n<h2>What it does</h2>\n<p>Read notes to use a piano as a keyboard and plays music through the laptop keyboard too!</p>\n<h2>How we built it</h2>\n<p>Python standard lib + googling + pyaudio + scipy + numpy</p>\n<h2>Challenges we ran into</h2>\n<p>pyaudio was picky.\nPianos are weird.\nLaptop mics suck.\nSignal transformations are hard.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>The tones played. The frequencies showed.</p>\n<h2>What we learned</h2>\n<p>1) Don't trust pianos.\n2) Python key listening sucks.\n3) Wav files are chunky.\n4) Chip tune is fun.\n5) Incessant chip tune will make sleepy people want to jump off buildings.\n6) Poking people in the belly makes chip tunes (requires at least 3 people).</p>\n<h2>What's next for Keyboard Keyboard</h2>\n<p>Functionality. Better frequency recognition. Better tone output. Better mics.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/numpy\">numpy</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/scipy\">scipy</a></span></li><li><span class=\"cp-tag\">audacity</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/ViggyNash/KeyboardKeyboard/tree/master\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ViggyNash/KeyboardKeyboard/tree/master\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Worked on audio input parser, fixes and suggestions for output parser.", ""]], ["ok emoji dot com ", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"ok emoji dot com  \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/548/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"ok emoji dot com  \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/549/datas/gallery.jpg\"/>\n<p>\n<i>android</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>University of Pennsylvania has been hit by a wave of suicides, coupled by something called 'Penn Face',  something where students outwardly show happiness whilst being incredibly stressed and overworked. We believe that these two issues are strongly related, and there needs to be some sort of reassurance for students to see that they truly are not alone in the struggle of college. This problem is one all over competitive universities in the world, and we hope to solve it.</p>\n<h2>What it does</h2>\n<p>By allowing students to anonymously submit and see the emotions around campus, we hope to allow students to show how they are truly feel without personally feeling vulnerable. This way, students will be able to see that they are not alone when upset or angry, even though it may often seem that way.</p>\n<p>We have a native Android application that allows for emoji selection and a web app that shows the mean emotions.</p>\n<h2>How we built it</h2>\n<p>Emoji selection is built with native Android. Persistence is built with Firebase. Web app is built with Javascript, JQuery, HTML5, and CSS. The emojis are open source Twitter emojis.</p>\n<h2>Challenges we ran into</h2>\n<p>Creating an intuitive UI for emoji selection and a comfortable, uncrowded, yet unempty emoji display took an incredibly long time.</p>\n<h2>What's next for ok emoji dot com</h2>\n<p>We hope to putt up ok emoji dot com as a public art exhibition at the University of Pennsylvania</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twitter\">twitter</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://okemoji.github.io/\" rel=\"nofollow\" target=\"_blank\" title=\"https://okemoji.github.io/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>okemoji.github.io</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Android dev, backend w/ firebase", "I worked on front-end design elements and created the emoji display algorithm.", "I did front-end mobile development and the Android aspect of GUI.", "Worked on front end functionality and handling communication between front end and the firebase database."]], ["StegoChat", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Steganography is the practice of hiding or concealing secret messages in such a way that even the existence of those messages is kept secret.  Though widespread in antiquity, the idea is still very applicable in a modern age where people may want to maintain complete confidentiality and privacy over their communications.</p>\n<h2>What it does</h2>\n<p>StegoChat is a simple chat application which allows its users to chat in the clear or covertly with messages hidden steganographically within images.</p>\n<h2>How we built it</h2>\n<p>We devised a simple steganographic message hiding scheme within images that provides a loose baseline of secrecy.  We then implemented this scheme as a front-end javascript library and then incorporated it as a component to a simple chat application.</p>\n<h2>Challenges we ran into</h2>\n<p>Our method of steganography involves fine-level bit manipulation--something which is not one of Javascript's strengths.  We additionally ran into some initial hitches in the way of unexpected behavior of the Flask debug server, but we resolved this by relying on a production WSGI holder.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We were able to completely implement a primitive version image-based steganography in a high-level language.</p>\n<h2>What we learned</h2>\n<p>Steganography is very much alive, interesting, and useful.</p>\n<h2>What's next for StegoChat</h2>\n<p>We can improve our method of steganography for its use case.  Namely, we can provide a greater guarantee of indistinguishability from generic images by making use of a combination of other cryptographic primitives and unused bits of information present in images.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/YanrongWo/StegoChat\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/YanrongWo/StegoChat\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Derived a simple steganographic protocol for images; implemented it in JS.  Did various troubleshooting for real-time event issues.", ""]], ["Ordr\u2022In", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Ordr\u2022In \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/423/714/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Ordr\u2022In \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/423/706/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to use the APIs that were available from the sponsors at hackNY, and we came up with this idea of being able to mash a few APIs together.</p>\n<h2>What it does</h2>\n<p>Receives images of food in text messages and orders whatever food you took a picture of for you</p>\n<h2>How we built it</h2>\n<p>Node.js and express app with Twilio, Clarifai, and EatStreet APIs to handle the texts, image recognition, and food ordering, respectively. The web app is hosted on AWS.</p>\n<h2>Challenges we ran into</h2>\n<p>Clarifai's image recognition is really general and you typically don't get the expected image tags for different types of food.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We're proud to have finished merging the front end and back end in time for submission, and for successfully calling the appropriate APIs.</p>\n<h2>What we learned</h2>\n<p>It was my first exposure to Twilio and Clarifai, and none of us have ever used the EatStreet API before, so we got to explore a lot of new APIs in a single project.</p>\n<h2>What's next for Ordr\u2022In</h2>\n<p>We plan on polishing our item detection algorithm in order to be more specific as to the type of food that is being reviewed. For example, fried chicken is both under chicken AND food, so it'd be better if we can pinpoint exactly what type of food it is that the user is looking for. We may also include options for the user to select how vague or specific they planned their picture to be, so they may choose  from a wide range of options.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li><li><span class=\"cp-tag\">eatstreet</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://54.161.199.138:8080/\" rel=\"nofollow\" target=\"_blank\" title=\"http://54.161.199.138:8080/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>54.161.199.138</span>\n</a></li>\n<li><a href=\"http://github.com/dominusbelli/ordrin\" rel=\"nofollow\" target=\"_blank\" title=\"http://github.com/dominusbelli/ordrin\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the backend, used EatStreet to look through restaurant's menus to find a food that matched the tag given by Clarifai. Then I order that item through EatStreet  automatically for the user.", "", ""]], ["dnd-Monster-Lookup", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>I play DnD and I instantly combined the <strong>mongo</strong> and <strong>clarifai</strong> APIs after the demos</p>\n<h2>What it does</h2>\n<p>Right now it runs in the terminal as a python script that talks to a java jar that runs mongo for lookups</p>\n<h2>How I built it</h2>\n<p>Learned both APIs on the fly and crossed my fingers!</p>\n<h2>Challenges I ran into</h2>\n<p>I am not strong in web development, so there is no fancy web app. Also, clarifai does not know fantastical beings so it is also limited to regular animals.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I learned mongo and clarifai enough to put this together!</p>\n<h2>What I learned</h2>\n<p>That I have much more to learn</p>\n<h2>What's next for dnd-Monster-Lookup</h2>\n<p>Hopefully a web app with one of the many frameworks out there</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/dwalkerbeta/dndtest\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/dwalkerbeta/dndtest\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I did everything with the help of fruit by the foot"]], ["PicGenie", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"PicGenie \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/423/698/datas/gallery.jpg\"/>\n<p>\n<i>PicGenie in action, scanning a cute cat picture.</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>No one knows everything. Luckily for us, we live in the age of information. Unfortunately, it often seems that the hardest thing about learning is finding out what to ask. With PicGenie, users are liberated from needing to luckily chance upon the correct keywords, and instead search whatever they want directly through pictures of the world.</p>\n<h2>What it does</h2>\n<p>PicGenie allows users to text a picture to 508-762-4753, and receive back a guess and short wikipedia description of what that picture is thought to be. The searches are then displayed in a ring graph data visualization.</p>\n<h2>How we built it</h2>\n<p>We used twilio to receive the pictures, clarifai to get the most pertinent tag, the wikipedia api to retrieve the tag word's description, Charts.js to create a data visualization, and Flask to provide the infrastructure</p>\n<h2>Challenges we ran into</h2>\n<p>It was quite challenging to get so many API services to work together nicely. In particular, using Flask to simultaneous affect both the returning messages and the data visualization was tricky to implement.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are proud of getting a project with so many moving parts off the ground.</p>\n<h2>What we learned</h2>\n<p>We learned that in a project like this, reliable progress can only be made when work is partitioned effectively.</p>\n<h2>What's next for PicGenie</h2>\n<p>We want to improve our parsing of the clarifai json that was returned, so that we can provide better image recognition. In addition, our data visualization will be made more dynamic and accessible to the end user.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag\">charts</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/wikipedia\">wikipedia</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/revoxx5/PicGenie\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/revoxx5/PicGenie\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I set up the Flask framework, and was responsible for intergrating all of the different API so that they worked together. I also created some functions in the AI and the Data Visualization portions of the code.", "I worked on the communication between our twilio account to and the clarifai and Wikipedia apis.", "", ""]], ["Election Sentiment", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Election Sentiment \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/423/689/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Election Sentiment \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/423/690/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Recently, many people have been using Twitter as a platform to voice their opinions about candidates in this upcoming election. We wanted to analyze and visualize that data, providing people another platform to discuss solely the election.</p>\n<h2>What it does</h2>\n<p>Analyzes sentiment of tweets about the election to provide people more insight into the coming elections by plotting charts and graphs of tweets about the election. It also acts as a new and unique platform to discuss about the election. </p>\n<h2>How I built it</h2>\n<p>Retrieved tweets about the election using PubNub and performed sentiment analysis on them using the HP Haven On Demand API.  We used the JSON returned by the API to plot the charts and graphs using EON.js</p>\n<h2>Challenges I ran into</h2>\n<ul>\n<li>Deciding the best way to visualize the data</li>\n<li>Getting the random avatars for messaging</li>\n<li>Displaying the tweets</li>\n</ul>\n<h2>Accomplishments that I'm proud of</h2>\n<ul>\n<li>The real time list of tweets fetched from PubNub</li>\n</ul>\n<h2>What I learned</h2>\n<ul>\n<li>Tweets can be fetched without having to use OAuth</li>\n</ul>\n<h2>What's next for Election Sentiment</h2>\n<ul>\n<li>User authentication and authorization</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/pubnub\">pubnub</a></span></li><li><span class=\"cp-tag\">eon.js</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/elizabethsiegle/hackNY16\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/elizabethsiegle/hackNY16\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["InstaAnalytics", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Have you ever wondered how many likes your next Instagram picture will get? What captions your followers like the best and what hashtags are trending? Well now you can, with InstaAnalytics. </p>\n<h2>What it does</h2>\n<p>InstaAnalytics takes data from your old posts and uses machine learning to  find specific patterns within these older posts. Theses patterns are then analyzed and will return how many likes your next post will get. </p>\n<h2>How we built it</h2>\n<p>We built the app using a python foundation. We put up a quick flask backend server and used the clarify api to analyze the picture. A user will upload a picture and the picture will get run through our machine learning algorithm. We used the scikit-learn library to run linear regression algorithms. We gathered metadata like followers, following, and likes on previous pictures. </p>\n<h2>Challenges we ran into</h2>\n<p>Due to timing of the hackathon we could not use our initial plans of using convolutional neural networks and random forest regression algorithms. It would have taken months to feed meta data into these algorithms. Due to this we had to settle with a linear regression algorithm. We also had very limited knowledge of the Clarifai api and machine learning as a whole; so a majority of our time went to learning foundations of machine learning. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>With the lack of overall machine learning experience we were still able to put together a working application. Our application is able to take in a picture, run the machine learning algorithm through the picture and able to generate a number for the likes the picture will get. </p>\n<h2>What we learned</h2>\n<p>We learned a lot about machine learning and the algorithms that go behind them. We learned how to use flask and the Clarifai api. We learned to work together in a team in a really small amount of time. </p>\n<h2>What's next for InstaAnalytics</h2>\n<p>We are planning on really scaling InstaAnalytics into a bigger application. We are going to rewrite our machine learning algorithm to use a more complex one like convolutional neural networks and random forest regression algorithm. Gather even more meta data to get better models. Eventually figure out which hashtags and comments will generate the most likes for a user. This will eventually be moved to other different social media like Twitter and Facebook to analyze different posts. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/scikit-learn\">scikit-learn</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Naim08/InstaAnalytics\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Naim08/InstaAnalytics\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["NYC Parking Finder", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"NYC Parking Finder \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/423/674/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Finding parking in manhattan is difficult. It would be convinient to be able to find available parking around your destination. This is what NYC Parking Finder was attempting to solve.</p>\n<h2>What it does</h2>\n<p>In theory, it allows the user to enter their destination and display it on a map with corresponding markers of parking in a 5 mile radius around it. This makes it easier to see what options you may have to park.</p>\n<h2>How I built it</h2>\n<p>Node, Angular, Express</p>\n<h2>Challenges I ran into</h2>\n<p>I reached the Geocoding APIs rate-limit</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>wiring up the angular and node web app</p>\n<h2>What I learned</h2>\n<p>How to wire up angular on node using express as well as using the geocoding api</p>\n<h2>What's next for NYC Parking Finder</h2>\n<p>Complete the rest of the app. Displaying map and markers.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/angular-js\">angular.js</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/fe-li-pe/NYC-parking-finder\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/fe-li-pe/NYC-parking-finder\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Duck This", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>This is for a website my brother made as a hack a few years ago. The next generation has arrived, and I decided it was time to hack his hack. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/sara/DuckThis\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/sara/DuckThis\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["LingoTag", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"LingoTag \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/423/695/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<h2>What it does</h2>\n<p>LingoTag lets the user take a picture, analyzes it using the Clarifai API, and displays the top attributes in two languages, one in English and the other in a language that the user chooses.</p>\n<h2>How we built it</h2>\n<p>We used React Native, which is built on JavaScript, and the Ignite CLI as a boilerplate generator. </p>\n<h2>Challenges we ran into</h2>\n<p>Implementing JavaScript and React-Native, and tackling unfamiliar run-time errors. </p>\n<h2>Accomplishments that we're proud of:</h2>\n<p>It was one of the teammates' first hackathon. </p>\n<h2>What we learned</h2>\n<p>For most of us, we learned a new language, React Native. \nWe also learned how to incorporate a physical camera in an app.</p>\n<h2>What's next for LingoTag</h2>\n<p>The next step for LingoTag is to improve on the part where it displays contents of the image in two languages. As of now, it only supports English. Also, we want to allow the user to choose a photo from his/her photo album. Finally, we want to incorporate the logo that we designed. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/react-native\">react-native</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/tuvttran/LingoTag\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/tuvttran/LingoTag\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Packaroo", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Packaroo \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/423/555/datas/gallery.jpg\"/>\n<p>\n<i>Splash</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>I love hackathons. I don't mean the food and drinks offered or the coding or designing. What I like the most about these events is the productive working atmosphere and the possibly for hackers to meet and inspire each other. The problem of hackathons is that those who have never attended a hackathon do not know what to bring to them without suffering.</p>\n<h2>What it does</h2>\n<p>Packaroo is a web app that allows you to create \"inventory packs\" that will allow others to see what you brought to a certain setting, event, or trip. Whether you're creating your pack for a short vacation or a 24-hour hackathon, users will be able to see what is the ideal inventory to have to be in a comfortable position. With Packaroo, users will never forget to bring an item to their plans.</p>\n<h2>How we built it</h2>\n<p>Zhi developed the back-end with flask and hosted it through AWS.\nDerek and Will developed the front-end with React and Bootstrap.\nKevin designed the UI and UX of the web app.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/react\">react</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/williammeger/packaroo\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/williammeger/packaroo\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["lin-manuel-miranda-watchface", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Trying to inspire myself when working with Alexa was a big fail</p>\n<h2>What it does</h2>\n<h2>How I built it</h2>\n<h2>Challenges I ran into</h2>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<h2>What's next for lin-manuel-miranda-watchface</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c\">c</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/pebble\">pebble</a></span></li></ul>\n</div>\n</div>", [""]], ["Box_Game", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Box_Game \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/423/610/datas/gallery.jpg\"/>\n<p>\n<i>Screenshot</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>FIRST HACKATHON</p>\n<p>First program I coded outside of class</p>\n<h2>What it does</h2>\n<p>Spawns randomly generated white blocks that a player can hide behind. Very simple, no complex objective or collectibles.</p>\n<h2>How I built it</h2>\n<p>Watched a youtube tutorial (credited in comments in game.java)</p>\n<h2>Challenges I ran into</h2>\n<p>Program was complex for me, many classes, never worked with anything like that before</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Having a running, working project\nOverall, very proud to have something worked on for hours; felt good to finish around 4 AM. Enjoyed the experience, now I have something to both talk and think about</p>\n<h2>What I learned</h2>\n<p>Key commands, virtual keyboard, tempObjects, JFrame, programs that span multiple classes</p>\n<h2>What's next for Box_Game</h2>\n<p>Ideally I want to continue working on it, pushing the updates to GitHub, and make something actually fun, or interesting.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/crimsoncoast/Box_Game\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/crimsoncoast/Box_Game\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Fresh Life", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/tatJYeCmOL4?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Fresh Life \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/423/569/datas/gallery.jpg\"/>\n<p>\n<i>Donate Page</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Fresh Life \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/423/570/datas/gallery.jpg\"/>\n<p>\n<i>Index Page</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Fresh Life</h2>\n<p>I was inspired to create this web app after working with the homeless and wanting to find a socially innovative way to help people be healthier while also helping the community.</p>\n<p>Send a photo of your fresh groceries to our handy phone number! Through some awesome AI (or, maybe, a little bit of magic) we then see what you're buying and how much you're spending on it. From there, we help you develop a healthy eating plan and purchase next week's groceries more efficiently and for cheaper. From there, you donate that extra cash to local food pantries so they can forward social equity in your community.</p>\n<p>Right now we have a working demo but we hope to expand further functionality in the future. We also completed several python scripts including one that worked with an API to help pull food information.</p>\n<p>We ran into some issues trying to use MongoDB and we really struggled to work well with Django</p>\n<p>I'm really happy that we were able to realize the project in a functional demo. I also really like the domain we registered <a href=\"http://www.phreshmylife.com\" rel=\"nofollow\">www.phreshmylife.com</a> I'm also really happy that we were able to complete the python scripts for the majority of the core functionality. It was also really great working with some first time hackers and helping them learn new skills and have a really awesome time.</p>\n<p>The next steps are to complete the django implementation and make the website work more resourcefully and for multiple users. We also need to finalize the twilio and clarifai implementation.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/django\">django</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/bocaaust/FreshLife\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/bocaaust/FreshLife\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I did the entirety of the front-end development and set up most of the back-end", "", "", "", ""]], ["Treat Yo' Self", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Treat Yo' Self \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/423/536/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Treat Yo' Self \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/423/540/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We were driven by emotion and the desire to engage human element into technology. </p>\n<h2>What it does</h2>\n<p>Our project utilizes Clarifai's face-recognition API to detect facial expressions on the human face, namely in the form of a selfie. The facial expression calls on a random gif using the GIPHY API.</p>\n<h2>How we built it</h2>\n<p>We used JSON, Curl, Twilio API, GIPHY API, terminal, flask, python, and Clarifai's API.</p>\n<h2>Challenges we ran into</h2>\n<p>Exposing the local host to a public server, which would serve as a link for parsed data from Clarafai's API.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We were able to send texts to and from our phone with Twilio API and GIPHY API. Additionally, we were able to gather specific classes from results. </p>\n<h2>What we learned</h2>\n<p>We familiarized ourselves with Terminal syntax as well as with 3 other APIs.</p>\n<h2>What's next for Treat Yo' Self</h2>\n<p>Getting it on a public server! #treatyoself</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/giphy\">giphy</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/git\">git</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/curl\">curl</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Teresawithoutah/Treat-Yo-Self\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Teresawithoutah/Treat-Yo-Self\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Pics out for Chuck Norris", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We felt that people had misconceptions about who Chuck Norris really is. We wanted to correct the misunderstandings and show you exactly who Chuck Norris is.</p>\n<h2>What it does</h2>\n<p>Send 347-329-2364 a picture of anything. We'll send you back a Chuck Norris fact related to that picture.</p>\n<h2>How we built it</h2>\n<p>We used two and a half APIs: Twilio, Clarafai, and the Chuck Norris API, which we kind of used by stealing its database and storing it in a .txt file. </p>\n<h2>Challenges we ran into</h2>\n<p>Installing Clarafai API, figuring out Twilio's methods, and installing Mac OS.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are very proud of the service we are bringing. I hope that everyone will correct their misconception about Chuck Norris.</p>\n<h2>What we learned</h2>\n<p>Developing this web app on Windows is not recommended.</p>\n<h2>What's next for Pics out for Chuck Norris</h2>\n<p>Our web server will continue to run for as long as it takes for people to understand who Chuck Norris really is. Start learning today.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/the-internet-chuck-norris-database\">the-internet-chuck-norris-database</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag\">chuck-norris</span></li><li><span class=\"cp-tag\">firsthack</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/RedolentSun/hackNY.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/RedolentSun/hackNY.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["i worked on the back end setting up ngrok and handling api requests to twilio. Also author of the failed spotify part. ", "I consolidated everyone's code into one project. I also wrote code to implement the APIs. Did not make any driver functions.", "I worked on putting ideas  together in order to make this work. This was the first time working with API, so I really wanted to experience the use of it. Now with this project, we can go further with APIs, for future projects.", "I came up with the idea and wrote the algorithm to find the best Chuck Norris fact related to the tags spit out by Clarafai. I was also the dedicated JSON parser. Sad user of Windows"]], ["Tic-Tac-Toe", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We want to make a game firstly with decent UI.</p>\n<h2>What it does</h2>\n<p>It is a mini version chess. The rule is very simple. The user whose chess sums up to 3 wins.</p>\n<h2>How we built it</h2>\n<p>We divided this project into two parts. One is UI part, the other is the alogithm part.</p>\n<h2>Challenges we ran into</h2>\n<p>The algorithm is a little bit tricky because there are three situations in total which should be considered of.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We finially used video, audio to implement the final as a signal to tell who is the winner.</p>\n<h2>What we learned</h2>\n<p>We learn how to build interactive UI using audio and video.</p>\n<h2>What's next for Tic-Tac-Toe</h2>\n<p>We would like to build more complicated Tic-Tac-Toe, like 4x4, 5x5, or nxn. The algorithm is similar</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/wang2542/hackny.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/wang2542/hackny.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Px.", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Px. \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/496/datas/gallery.jpg\"/>\n<p>\n<i>A early concept design on how I would like the app to look like in the future.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Px. \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/798/datas/gallery.jpg\"/>\n<p>\n<i>Strongbadia, a la pixel</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Px. \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/495/datas/gallery.jpg\"/>\n<p>\n<i>Using Clarifai, you're able to check what your image might look like to people. :)</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Px. \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/423/185/datas/gallery.jpg\"/>\n<p>\n<i>You're able to open &amp; save files</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p><a href=\"https://pxdot.com\" rel=\"nofollow\"><img alt=\"Screenshot\" data-canonical-url=\"https://github.com/alaingalvan/pxdot/raw/master/assets/brand/screenshot.png\" src=\"https://res.cloudinary.com/devpost/image/fetch/s--5TZt0CTT--/https://github.com/alaingalvan/pxdot/raw/master/assets/brand/screenshot.png\"/></a></p>\n<h1><a href=\"https://pxdot.com\" rel=\"nofollow\">pxDot</a></h1>\n<p><img alt=\"Release\" data-canonical-url=\"https://img.shields.io/badge/release-0.1.0-4dbfcc.svg?style=flat-square\" src=\"https://res.cloudinary.com/devpost/image/fetch/s--WXdvZiJt--/https://img.shields.io/badge/release-0.1.0-4dbfcc.svg%3Fstyle%3Dflat-square\"/> <a href=\"https://david-dm.org/alaingalvan/pxdot\" rel=\"nofollow\"><img alt=\"Dependency Status\" data-canonical-url=\"https://david-dm.org/alaingalvan/pxdot.svg?style=flat-square\" src=\"https://res.cloudinary.com/devpost/image/fetch/s--8ejIoTUs--/https://david-dm.org/alaingalvan/pxdot.svg%3Fstyle%3Dflat-square\"/></a> <a href=\"https://david-dm.org/alaingalvan/pxdot#info=devDependencies\" rel=\"nofollow\"><img alt=\"devDependency Status\" data-canonical-url=\"https://david-dm.org/alaingalvan/pxdot/dev-status.svg?style=flat-square\" src=\"https://res.cloudinary.com/devpost/image/fetch/s--DiL5V6DL--/https://david-dm.org/alaingalvan/pxdot/dev-status.svg%3Fstyle%3Dflat-square\"/></a></p>\n<p>A pixel art app for game developers and artists. Speed up your development time with a strong toolset designed by the best pixel artists in the industry. Powered by Electron, React, Redux, Web Pointers, WebGL 2, Clarifai.</p>\n<h2>Features</h2>\n<ul>\n<li><strong>Pallete Management</strong> - Manage your palletes across sprites to maintain a consistant pallete for your entire game, with built in Pallete analysis tools and automatic color correction.</li>\n</ul>\n<h3>Planned Features</h3>\n<ul>\n<li><p><strong>Dithering Brushes</strong> - Take advantage of dithering research normally reserved for gifs to make your pixel art amazing.</p></li>\n<li><p><strong>Smart Deformations</strong> - Transform your sprites without worrying about losing fidelity, rotate, scale, and skew to your heart's content.</p></li>\n<li><p><strong>Animations</strong> - build your animations with onion skinning, bones, or a mix of both! Load bone animations from blender and render them out as pixel art!</p></li>\n<li><p><strong>Command Pallete</strong> - Similar to most text editors, you can type away commands to get things done faster.</p></li>\n<li><p><strong>Extensions</strong> - Add more features with the extension api, make a custom brush script, generate some art procedurally, you name it! Our API features Type Definitions for your JavaScript or TypeScript code for autocomplete &amp; code linting.</p></li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/typescript\">typescript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/webgl\">webgl</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/react\">react</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/redux\">redux</a></span></li><li><span class=\"cp-tag\">electron</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/canvas\">canvas</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://pxdot.com\" rel=\"nofollow\" target=\"_blank\" title=\"http://pxdot.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>pxdot.com</span>\n</a></li>\n<li><a href=\"https://github.com/alaingalvan/pxdot\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/alaingalvan/pxdot\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Working, solo, did everything lol. "]], ["Spotter", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Spotter \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/717/datas/gallery.jpg\"/>\n<p>\n<i>Spotter uses computer vision to predict if freckles or moles have a high probability of melanoma</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>In 2016, ten thousand people will likely die of melanoma. In countries such as the United States, many if not the majority of these deaths could have been prevented.  </p>\n<p>According to skincancer.org, \"The estimated 5-year survival rate for patients whose melanoma is detected early is about 98 percent in the U.S. The survival rate falls to 63 percent when the disease reaches the lymph nodes, and 17 percent when the disease metastasizes to distant organs.\" </p>\n<p>As I, an individual with a voluminous amount of freckles and moles, I must get a yearly body exam from a doctor to ensure of no skin irregularities. Many, however, can not afford these exams, which often cost around $150 to $200. </p>\n<p>With these ideas in mind, we developed a website to help individuals detect malignant melanoma and atypical skin lesions on their persons. Users submit an image and within seconds that image is analyzed for its probability of containing malignant melanoma.</p>\n<p>Using Clarifai's API, I created two sets of images. One set contained only malignant freckles or moles. The other set contained only benign freckles or moles. With these two datasets, I was able to input a new image and compare it to both image sets. Clarifai is able to understand that there are clear differences between the two sets as severely malignant moles have clear physical peculiarities such as being, for example, asymmetrical and multicolored.  </p>\n<p>Then I parsed the probability of an image being malignant and displayed it. Moreover, I analyzed the probabilities I received and created a scale that I believe is impressively accurate.</p>\n<p>The Scale:\nThe probability is on a scale from 0% being the most benign to 100% being the most malignant. \nThrough my own research and modeling, I used the following logic. </p>\n<p>Probability of Malignancy:</p>\n<ol>\n<li>High: Greater than 70%</li>\n<li>Moderate to High: 66% to 70%</li>\n<li>Low to moderate: between 56% and 66%</li>\n<li>Low: less or equal to 56%</li>\n<li>Not a freckle: less than 20%</li>\n</ol>\n<p>I found this scale to be very impressive. While I am in no way suggesting it meets the standards to be used medically nor do I believe it should be used for anyone to make any form of medical decision, I was highly proud of myself for creating this piece of software, that at least in theory, could save someone's life. </p>\n<p>The biggest challenge I had with the project had to do with user input and saving images. I used heroku and thought that I would be able to skip using a proper database of images in favor of folders of images. This turned out to be naive and I wasted several hours by trying for this shortcut, ultimately deciding to use Amazon Web Services. The second biggest challenge I had was just about building my dataset to be as accurate as possible. </p>\n<p>In the future, I would like to make my dataset have several hundred images in order to be more scientifically sound. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["Can I park", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Can I park \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/649/datas/gallery.jpg\"/>\n<p>\n<i>Feedback screen</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Can I park \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/650/datas/gallery.jpg\"/>\n<p>\n<i>Feedback screen</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Can I park \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/651/datas/gallery.jpg\"/>\n<p>\n<i>Home screen</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Can I park \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/652/datas/gallery.jpg\"/>\n<p>\n<i>Home screen</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>Android Application that checks if location is risky to park in based on historical data from NYC Open Data (<a href=\"https://nycopendata.socrata.com\" rel=\"nofollow\">https://nycopendata.socrata.com</a>).</p>\n<p><a href=\"https://data.cityofnewyork.us/City-Government/Parking-Violations-Issued-Fiscal-Year-2016/kiv2-tbus\" rel=\"nofollow\">https://data.cityofnewyork.us/City-Government/Parking-Violations-Issued-Fiscal-Year-2016/kiv2-tbus</a></p>\n<p>Based on the Parking Violations Issued in 2016 (updating in real-time), we provide estimates of likeliness of parking infractions. We use google maps API to find user location and specific GPS Coordinates. Using the spot selected by the user, we query the nearby parking infractions of the closest street, weighted based on distance and relative frequency.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-maps\">google-maps</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/nyc-open-data\">nyc-open-data</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/ryan9lim/can-i-park\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ryan9lim/can-i-park\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the backend part, fetching data and processing it", "I worked on the Android frontend, including Google Maps and sending get requests to remote server."]], ["autotag", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>Autotag generates hashtags for your images and posts them on your Twitter so that you don't think of them on your own. Users visit our website, authenticate with their Twitter account and enter their phone number. They will receive a phone number. Now they can text images to that number, and we will tweet that image along with the hash tags.</p>\n<p>We used the Twilio API to send and receive text messages and the Clarifai API to generate relevant tags. Finally we used the Twitter API to make tweets. For our server, we used Express.js on top of Node.js, powered by a MongoDB database. Our frontend was made using AngularJS.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mean\">mean</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/angular-js\">angular.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twitter\">twitter</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://hackny-autotag.herokuapp.com/\" rel=\"nofollow\" target=\"_blank\" title=\"https://hackny-autotag.herokuapp.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>hackny-autotag.herokuapp.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the backend with Jason. We created the REST API end points. It use twilio and clarifai api to generated hashtags for images sent from phone", "", ""]], ["CustomWindows", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"CustomWindows \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/420/791/datas/gallery.jpg\"/>\n<p>\n<i>Different types of windows</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"CustomWindows \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/420/788/datas/gallery.jpg\"/>\n<p>\n<i>Creating a FlatWindow</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"CustomWindows \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/420/789/datas/gallery.jpg\"/>\n<p>\n<i>Creating a SidebarWindow</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"CustomWindows \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/420/790/datas/gallery.jpg\"/>\n<p>\n<i>Creating a CircularWindow</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>CustomWindows</h1>\n<p>CustomWindows is a java library that allows developers to create specially customized JFrame's for their java applications. Instead of having to use the default design of a JFrame, the user can choose from a number of different window themes, or even extend the library's classes to create their own, unique themes.</p>\n<p>The user can choose what kinds of title bars to use for their windows as well as change the color of the title bar and content area of the window. It is up to the developer to decide how he/she wants to mix and match the different themes and colors to create their own custom window.</p>\n<h1>Future of CustomWindows</h1>\n<p>In the near future, I plan on improving CustomWindows to allow for easier customization of windows as well as improving the layout of other GUI elements on the screen. I also plan on adding more themes that users can choose from if they do not want to create their own.</p>\n<ul>\n<li>Year: 2016</li>\n<li>Language: Java</li>\n<li>Programmer: Adeola Uthman</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Authman2/CustomWindows\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Authman2/CustomWindows\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]]]