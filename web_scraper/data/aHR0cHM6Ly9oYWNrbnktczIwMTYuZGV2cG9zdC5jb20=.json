[["Interface", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>As motivated language learners, we aspired to create an app that enhances the language learning experience and refines language skills. We created, Interface, an IOS app that takes text from popular foreign language articles for users to read. Currently, Interface offers articles in Chinese, Spanish, French, and Swedish. </p>\n<p>Although the user of Interface may have been learning a particular language for multiple years, it is inevitable that they will come across a word that is not in their personal vocabulary. With interface, the user can scroll over the unknown vocabulary word, and in return, Interface gives the English definition.  However even if a vocabulary word is rendered, the user won\u2019t necessarily remember the word. To solve this problem, we aspired to use Quizlet to help the user memorize their new vocabulary. When a word is scrolled over to identify a particular definition, Interface inserts it into a Quizlet flashcard. This not only optimizes the language learning experience by storing unknown vocabulary words together, but also allows the user to use memory games and techniques offered by Quizlet to enhance learning.</p>\n<p>In the future, we hope to add more languages to Interface and implement new studying methods using the vocabulary words.  </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ios\">ios</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bing-search-api\">bing-search-api</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-translate\">google-translate</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/jackcook/interface\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/jackcook/interface\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/claireglendening/interface-backend\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/claireglendening/interface-backend\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Toast Printer", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Toast Printer \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/586/datas/gallery.jpg\"/>\n<p>\n<i>Progress Picture 1: Toaster Disassembled 7:00 PM</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Toast Printer \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/587/datas/gallery.jpg\"/>\n<p>\n<i>Progress Picture 2: Box Acquired 7:30 PM</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Toast Printer \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/588/datas/gallery.jpg\"/>\n<p>\n<i>Progress Picture 3: Rigging Started 9:00 AM</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Toast Printer \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/589/datas/gallery.jpg\"/>\n<p>\n<i>Progress Picture 4: Rigging 10:00 AM</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Toast Printer \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/590/datas/gallery.jpg\"/>\n<p>\n<i>Progress Picture 5: More Rigging 10:30 PM</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We were inspired by our desire to only consume Instagrammable food.\nOn our way over here, we were talking about a restaurant at Penn that people only go to take pictures of beautiful french toast and through a few conversation tangents, we somehow landed on the idea of building a toaster that could toast images onto bread. </p>\n<h2>What it does</h2>\n<p>Given an image of any size, it is scaled to fit on the bread and is toasted onto it.</p>\n<h2>How we built it</h2>\n<p>From a software perspective, we wrote a simple Python processing script using Pillow that took an image as an input and outputs a 2-dimensional bitmap of the image in black and white. </p>\n<p>On the hardware side, we disassembled a fairly cheap toaster bought from K-Mart. We rigged up a box with wires and the disassembled toaster and extended our heating source with coils and copper wire. From there, we took our software and paired it with an Arduino Uno that takes in x-y coordinates and a binary value which then translates to whether to toast a given \"pixel\" on our toast. It iterates through the entire piece of bread until the image is completely printed.</p>\n<h2>Challenges we ran into</h2>\n<p>Hackathons generally don't have toasters on loan for hacking and hot things are hot.</p>\n<h2>What we learned</h2>\n<ul>\n<li>Python, Numpy, and Pillow</li>\n<li>Review of trigonometry and physics</li>\n<li>Hardware rigging involves fun math</li>\n</ul>\n<h2>What's next for Toast-Printer</h2>\n<ul>\n<li>Printing multi-colored images</li>\n<li>Web interface to allow people to interact with the toaster with greater ease</li>\n<li>Applying butter or jam to toast </li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">a-toaster</span></li><li><span class=\"cp-tag\">servos</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/helenqu/toast-printer\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/helenqu/toast-printer\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Peer Wifi", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Our inspiration are from people surround us that has a huge data usage from their phone carrier but didn't use all of their data by the end of the cycle and the data would go wasted, so we are building a application that would help them get rid of those extra data that they don't need..</p>\n<h2>What it does</h2>\n<p>This application provide a platform for the users to sell mobile data, and allows other users to buy.</p>\n<h2>How I built it</h2>\n<p>We built an android application , using Parse framework of Mongodb as our database and we also include Paypal api as our payment option.</p>\n<h2>Challenges I ran into</h2>\n<p>We ran into many Challenges, most of them is related to authenticating and setting up Wifi Manager on the android application, in which we solve most of them by doing research online.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<p>I learned a lot from this experience, like set and login to a remote server, </p>\n<h2>What's next for Peer Wifi</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/parse\">parse</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/mdnahian/peer-wifi\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/mdnahian/peer-wifi\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Worked on MongoDB and Android Backend.", "Worked on Android app.", ""]], ["Drone Regulator", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/3hwcpmqxgDU?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Drone Regulator \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/914/datas/gallery.jpg\"/>\n<p>\n<i>Demo shot 1</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Drone Regulator \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/948/datas/gallery.jpg\"/>\n<p>\n<i>Demo shot 2</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Drone Regulator \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/972/datas/gallery.jpg\"/>\n<p>\n<i>Drone + Controller</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Federal Aviation Administration (FAA) frequently changes drone laws, but most US citizens aren't familiar with the details and the enforcement of these legislations. What if we could build a drone navigator app that helps you seamlessly follow all of the FAA regulation without any effort?</p>\n<p>It's as <strong>easy</strong> as running one</p>\n<pre class=\"language-bash\"><code>node index.js\n</code></pre>\n<h2>Features</h2>\n<ul>\n<li>A web-based drone navigator app that lets you <strong>control your drone with a PlayStation DualShock 4 controller</strong> and/or a keyboard</li>\n<li>Provides <strong>dynamic local airspace regulatory information</strong> such as altitude (<em>not available indoor</em>), prohibited airspaces, and potentially dangerous weather</li>\n<li><strong>Real-time video stream</strong> of the drone's first-person camera right on your browser</li>\n</ul>\n<h2>How?</h2>\n<ul>\n<li>Extract real-time geolocation data using the <a href=\"http://www.parrot.com/products/bebop-drone/\" rel=\"nofollow\"><strong>Parrot Bebop drone</strong></a>'s embedded GPS module</li>\n<li>Reverse-engineered <a href=\"https://www.airmap.com/\" rel=\"nofollow\"><strong>AirMap</strong></a> to extract dynamic airspace data and overlay the regulatory information on top of <a href=\"https://www.mapbox.com/\" rel=\"nofollow\"><strong>Mapbox</strong></a>'s vector map.</li>\n<li>Integrate the Bebop drone and all of the input/output devices together with <a href=\"https://cylonjs.com/\" rel=\"nofollow\"><strong>Cylon.js</strong></a></li>\n<li>Update and maintain communication channel with <a href=\"http://socket.io/\" rel=\"nofollow\"><strong>Socket.IO</strong></a></li>\n</ul>\n<h2>Challenges we ran into</h2>\n<ul>\n<li>Reverse-engineering <a href=\"https://www.airmap.com/\" rel=\"nofollow\"><strong>AirMap</strong></a>'s closed SDK to extract data</li>\n<li>Implementing real-time video stream with JavaScript H.264 decoder</li>\n<li>Integrating multiple input devices (PlayStation DualShock 4, keyboard)</li>\n</ul>\n<h2>What's next?</h2>\n<ul>\n<li>Automatically notify the air traffic operator when within 5 miles of an airport (from the <a href=\"https://www.faa.gov/regulations_policies/\" rel=\"nofollow\"><strong>FAA safety guideline</strong></a>)</li>\n<li>Auto-pilot mode that traverses desired destinations via <a href=\"https://en.wikipedia.org/wiki/Scalar_potential\" rel=\"nofollow\"><strong>potential field methods</strong></a></li>\n<li>Automatically warn the user about the nearby regulations</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag\">cylon.js</span></li><li><span class=\"cp-tag\">bebop-drone</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/socket-io\">socket.io</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mapbox\">mapbox</a></span></li><li><span class=\"cp-tag\">browserify</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jade\">jade</a></span></li><li><span class=\"cp-tag\">airmap</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/BebopFAA/web-controller\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/BebopFAA/web-controller\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Adaptive Wireless Mesh-Networking", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Adaptive Wireless Mesh-Networking \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/643/datas/gallery.jpg\"/>\n<p>\n<i>Screen Capture of Simulation</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Adaptive Wireless Mesh-Networking \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/646/datas/gallery.jpg\"/>\n<p>\n<i>Web Visiulization</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Adaptive Wireless Mesh-Networking \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/658/datas/gallery.jpg\"/>\n<p>\n<i>OpenMote TICC2538</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Adaptive Wireless Mesh-Networking \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/660/datas/gallery.jpg\"/>\n<p>\n<i>OpenBase, Gateway network tunnel and flashing interface</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Adaptive Wireless Mesh-Networking \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/661/datas/gallery.jpg\"/>\n<p>\n<i>OpenBattery, battery power and sensors</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>With the increasing number of internet connected devices (IOT), current wireless networks are beginning to strain. For example, in most home wireless a standard star-topology is being used, meaning that there are a lot of devices connected to a single wireless router, this inevitably leads to slower transfer speeds with a larger number of devices. We all like to get our videos fast, no one wants to wait for buffering. :) So one option is to use mesh-networks with adaptive routing, this allows ever device/node to act as a \"router\" allow for multi-hop systems. In simple terms this allows internet traffic to be routed through the most efficient path to the internet, this is only possible by increasing the number of possible traffic paths. This improves a lot of factors, like packet congestion, response rates, evenly distributed network traffic and many other things.</p>\n<p>We also saw a lot of different implementations of this system to provide reliable and fast wireless internet over large areas, like in the city of New York. But our favorite application would in Smart Cars, currently smart car technology is designed to operate independently from other cars on the road, meaning that they are not sharing any additional information while in operation. This is a waste, because some of the most promising aspect of these technologies is that they can outperform humans, they cannot do this as well without access to a lot of data for their environment. While current technologies like cellular data, Bluetooth, and other radio technologies can accomplish some of the capabilities of a mesh network, none of them can offer the same performance, reliability, and interconnect ability. These factors is what drove us to developing a mesh network that had adaptive routing. </p>\n<h2>What it does</h2>\n<p>We are using a 802.15 wireless development kit (OpenMote) to implement a adaptive wireless mesh-network, this network is capable of adapting in real time to changes in topology i.e. removing nodes, adding additional traffic, network congestion and several other factors. Our development kit is equipped with TI CC2538 SoC (System on a Chip), this chip contains a  32-bit Cortex-M3 microcontroller and a CC2520-like radio transceiver. We flashed our devices with the open source IOT Contiki OS. We then used the IPv6 TCP/IP in Contiki and the custom designed Linux kernel and drivers to interface with our hardware and implement  Routing Protocol for LLN(Low Power Lossy Environments) (RPL). While one person worked on developing the firmware, and low level drivers and C code to implement the routing algorithm, our other member develop our front end visualization, which received data from the sensors and plotted it in a Web Interface. </p>\n<h2>How we built it</h2>\n<p>We utilized the contiki 3.0 open source IPv6 TCI/IP stack and RPL routing API and libraries to write our embedded application. We wrote all of the device driver as our specific device isn't natively supported in Contiki, until the most recent version which doesn't include full-support. We used the network simulator (Cooja) to simulate the hardware behavior and network functionality of the code we wrote before flashing the code onto each device using a Segger JTAG. For the web visualization, we used Node.js to interface with web hook to the Plot.ly data visualization API. We utilized Microsoft Azure IOT Hub and HTTP request to interface and store our data, which then relayed the data to the Plot.ly API for visualization. </p>\n<h2>Challenges we ran into</h2>\n<p>We ran into a lot of device flashing and firmware problems, as the documentation involved in implemented Contiki and a adaptive mesh-network was mostly theoretical. This caused a lot of problems while developing our low-level driver. We also ran into a lot of problems actually getting the data off of the sensors, since they operate on a different wireless standard than the provided wireless, we solved this problem by using one of laptops as a IPv6 to IPv4 network tunnel. For our visualization we originally tried to use PowerBi but were unable to get the live updating working so we abandoned it for Plot.ly. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Get the routing simulated and flash onto hard, being able to read temperature data form the individual nodes and connecting that into a IOT visiulization in roughly 24 hrs. Neither of us got any sleep and we are so proud of what we were able to accomplish. </p>\n<h2>What we learned</h2>\n<p>We learned low-level development of hardware drivers wants to make you scream at the world. But we both got a lot of valuable experience working with Wireless networks and low-level driver. We also got some experience utilizing IOT resources on Microsoft Azure thankfully, we found some very helpful tutorials on setting up our front-end visualization which allowed us to focus on our network development. One of the most valuable lesson we learned was time management and the importance of recruiting ahead of time. </p>\n<h2>What's next for Adaptive Wireless Mesh-networking</h2>\n<p>We don't know we most likely refine this for fun and see what we can do with it. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c\">c</a></span></li><li><span class=\"cp-tag\">contiki</span></li><li><span class=\"cp-tag\">openmote</span></li><li><span class=\"cp-tag\">ti-cc2358</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ajax\">ajax</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/azure\">azure</a></span></li><li><span class=\"cp-tag\">plot.ly</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/james-novino/HackNY\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/james-novino/HackNY\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["YUGE!", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"YUGE! \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/283/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"YUGE! \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/286/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"YUGE! \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/294/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>As 19- and 20- year olds, this is the first Presidential election in which we will be voting, and it also happens to be one of the most chaotic (yet entertaining) elections in America's recent history. Sometimes it's easy to become fearful of the future and the consequences of who the nation chooses as a leader. But we realized that it's possible to make light of this situation regardless of how daunting it may seem.</p>\n<h2>What it does</h2>\n<p>Trump is trying to build his wall and its up to you to stop him! He's dropping blocks of the wall down from above, but if you place blocks of the same color next to each other, you earn points and take money from Donald Trump!</p>\n<h2>How we built it</h2>\n<p>We used iOS and Swift programming language to build the game.</p>\n<h2>Challenges we ran into</h2>\n<p>We originally wanted to build a game similar to Tetris and Bejeweled, where three or more adjacent blocks of the same color would explode and destroy Trump's wall (We also wanted a Bernie Sanders power up that blew up two rows of blocks). Unfortunately, due to time constraints and technical issues we were unable to complete these goals (yet!).</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Most of our team had very little knowledge of Swift and iOS development prior to HackNY. After 24 hours, we are proud to say that we have learned a great deal about both iOS programming and algorithms, and how closely related they are to the concepts we've learned in Computer Science courses.</p>\n<p>It also reminded us of how much you can build in such a short amount of time, and how much <em>more</em> you can build if you had more time.</p>\n<h2>What's next for YUGE!</h2>\n<p>IT'S GONNA BE YUGE </p>\n<p>But seriously, we want to definitely accomplish our original goals and hopefully publish it in the near future. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ios\">ios</a></span></li><li><span class=\"cp-tag\">walls</span></li><li><span class=\"cp-tag\">bricks</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/jeetpatel1022/YUGE\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/jeetpatel1022/YUGE\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the layout and programming of the iOS application. I wrote the backend and worked with my teammates to determine the most efficient algorithms for the app. ", "I worked on designing the app as well as coming up with possible algorithms to find matching blocks. I am generally inexperienced in iOS programming, but being part of the production of this app provided me with much more information about Swift, XCode, and game development. I also thoroughly enjoyed creating 8-bit-style caricatures of one of today's most notorious political figures.", ""]], ["Pictorious", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to build something enjoyable but also a little bit unpredictable, in an exciting way.  Evan brought up the idea of \"wikipedia racing\", where people start on one page and try to get to another that's about a completely different topic.  We thought that it might be really neat to do something similar, but with using gifs as the vehicle instead of wikipedia pages.</p>\n<h2>What it does</h2>\n<p>The user starts out by giving a gif and a word that they need to match (or we provide default ones for them if they leave the fields empty).  The objective of the game is to find a gif that will match up with the word.</p>\n<h2>How I built it</h2>\n<p>We built the app in iterative steps: first we went over how to call the APIs, then we put down some boilerplate HTML/CSS, and then we did an initial test with loading different gifs on a webpage.  From there, we split up the remaining tasks according to expertise and preference.  However, we always looked to each other for input and direction.  The shape that our project took differed in some ways from what we had originally imagined - but then again, we were looking to make something a little bit unexpected!</p>\n<h2>Challenges I ran into</h2>\n<p>All of us faced some roadblocks in regard to inexperience with some of the technologies/languages we used, or with seemingly inexplicable errors between the front and back ends.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We worked as a team to support each other with mentorship and encouragement.  I believe that everyone wanted to contribute something to the final product, so when we did create a working app it was a thrill for all of us.  </p>\n<h2>What I learned</h2>\n<p>As for me personally, I need to improve my knowledge of Javascript.  On a more significant note, I have come to appreciate the energy of a hackathon and the way it pushes people to dive into their creativity and that of others as well.  I hope that I can take some of this spirit with me into my daily life.</p>\n<h2>What's next for Pictorious</h2>\n<p>It would be great to add more robust support for concurrent users.  Perhaps we could also expand the back end so that users can register and create races for others.  Another nice feature would be to let people share their race results with others and invite them to compete.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag\">html/css</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/pictomelee/pictorious.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/pictomelee/pictorious.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"http://pictorious.racing\" rel=\"nofollow\" target=\"_blank\" title=\"http://pictorious.racing\">\n<i class=\"ss-icon ss-link\"></i>\n<span>pictorious.racing</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I helped to set up/maintain the basic Flask infrastructure for the back-end.  I also supported the full stack development.", "I worked on the Python for the back end. I also helped out with the JS, which was my first time learning/using it.", "I worked the full stack, wrangling JS on the front and helping out with the Python on the back.", ""]], ["TinCam", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/Fs-m7oWcXVk?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"TinCam \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/434/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"TinCam \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/441/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"TinCam \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/442/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Cheap cameras can have a number of great use cases and applications. They can be used to inspire amateur photography, protect people from being jumped on their way home, and even from unlawful confrontations with law enforcement.</p>\n<p>In an age where surveillance is the norm, but not openly accessible, countersurveillance is the only way to protect yourself. Enter, TinCam.</p>\n<h2>What it does</h2>\n<p>Upon startup and button click, it finds an open public Wifi Network or mobile hotspot, and sends a stream of photos or videos to a Dropbox account that it is connected with. Even if the hardware is destroyed, the footage is preserved.</p>\n<h2>How we built it</h2>\n<ol>\n<li>Eat an entire tin of Altoids in one sitting</li>\n<li>Rinse the tin out</li>\n<li>Dry the tin</li>\n<li>Write some Python code</li>\n<li>Cover everything on the inside of the tin with electrical tape</li>\n<li>???</li>\n<li>Profit!</li>\n</ol>\n<h2>Challenges we ran into</h2>\n<p>Fitting into the form factor, debugging code on a Raspberry Pi A+</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>It fits! Best of all, it works!</p>\n<h2>What we learned</h2>\n<p>Raspberry Pis are powerful.</p>\n<h2>What's next for TinCam</h2>\n<p>What do you mean? It's a hackathon project.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li><li><span class=\"cp-tag\">altoids</span></li></ul>\n</div>\n</div>", ["Hardware configuration, craftsmanship, and system design.", "Python scripting, WiFi roaming and memes.", "", ""]], ["Bunnybot", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/H1NkAlrd0KE?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Bunnybot \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/696/datas/gallery.jpg\"/>\n<p>\n<i>The singing Bunnybot :)</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>One of our members has a VERY profound love of cats. Because of physics she does not have the time to take care of an actual pet cat. We thought that I'd be a good idea to bring a stuffed cat to life to keep her company during bouts of physics-induced stress. Unfortunately, Duane Reade does not have stuffed cats -- however, they did have a stuffed Easter bunny left over from their premium Easter collection (it was $3). </p>\n<h2>What it does</h2>\n<p>It sings and purrs... like a bunny, because bunnies purr. </p>\n<h2>How we built it</h2>\n<p>We used an Arduino Uno, two touch sensors, one buzzer, and one LCD backlight. </p>\n<h2>Challenges we ran into</h2>\n<p>We tried to use an Intel Edison to pull data from the internet, however we had a very hard time setting up the Intel development environment. Apparently, the LCD backlight has a switch that dictates whether or not text can be displayed in addition to a backlight. We discovered this by accident after five hours of HARDCORE CODE ANALYSIS. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We figured out how to code simple songs using the buzzer. </p>\n<h2>What we learned</h2>\n<p>We learned that hardware can be very unpredictable and frustrating. Rather than dwelling on the problem, we chose to find alternatives and try other options. </p>\n<h2>What's next for Bunnybot</h2>\n<p>If we could get Intel Edison to work with Twilio, we would like to make the Bunnybot a gift for a loved one. We want for the Bunnybot to display short text messages from a specific number(s). </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag\">sensor</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Toad22222/bunnybot\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Toad22222/bunnybot\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Make or Break", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Sometimes, people break things. But it's often expensive and inconvenient to track down or hire a professional. What if you could find someone right in your college dorm who knows how to fix your broken stuff? Or if you could make a quick buck fixing things for other people?</p>\n<h2>What it does</h2>\n<p>Make or Break allows you to be a maker or a breaker, or both. It matches people who have broken stuff and nearby people who just might know how to fix them. Just post a request and set a price. Based on your text and photos, Make or Break will tag your problem and try to pair you with the right handyman. As a maker, the app will help you find relevant jobs for you within the correct geographic region.</p>\n<h2>How we built it</h2>\n<p>On the front end, we built mobile apps for iOS and Android.</p>\n<p>On the back end, we wrote a RESTful API in Flask. Sign-in is handled by unique usernames. The user may define areas of expertise and maximum range within which they are willing to accept jobs. All user data is stored in a SQL database. After they have registered, they may submit jobs.</p>\n<p>When submitting a job request, the user may send a text description, a photo, and a price. Clarifai and a Python implementation of the Rapid Automatic Keyword Extraction (RAKE) algorithm are used to generate tags for the job. The user may revise these at any time. Images are stored on Amazon S3.</p>\n<p>When looking for jobs to accept, the user browses through a list filtered by distance calculated by the haversine formula and by tag matching. When the user accepts a job, a chat instance is opened between maker and breaker through SimpleChat and Firebase. When a job is completed, we use the Capital One Nessie API to simulate a bank transfer between the two parties according to the agreed-upon price.</p>\n<h2>Challenges we ran into</h2>\n<ul>\n<li>we initially intended to use the Twilio IP Messaging service for our chat, but we had issues with the SDK and with accounts being banned for suspicious activity</li>\n<li>conflicting python distributions and environments</li>\n<li>converting between base64 and urls for Clarifai and Amazon S3</li>\n<li>building a native Android app for the first time</li>\n</ul>\n<h2>Accomplishments that we're proud of</h2>\n<ul>\n<li>Building an end-to-end functional product</li>\n<li>Successfully integrating a bunch of APIs</li>\n</ul>\n<h2>What we learned</h2>\n<ul>\n<li>How to write Android apps</li>\n<li>How to work with the CapitalOne API</li>\n<li>How to work with the Clarifai API</li>\n</ul>\n<h2>What's next for Make or Break</h2>\n<ul>\n<li>Actual authentication</li>\n<li>\"similar\" tags as opposed to identical matching (more NLP)</li>\n<li>Maker ratings</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ios\">ios</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/capital-one\">capital-one</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/natural-language-processing\">natural-language-processing</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sqlalchemy\">sqlalchemy</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/neil1023/makeorbreak-backend\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/neil1023/makeorbreak-backend\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/jayrav13/makeorbreak-ios\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/jayrav13/makeorbreak-ios\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/SaurabhPalaspagar/makeorbreak-android\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/SaurabhPalaspagar/makeorbreak-android\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Built the portions of the Flask API involving NLP, Capital One API, database", "Worked on portion of the flask API related to Clarifai", "I worked on the Android client and UI", "Build the android app with Raisa.", ""]], ["CraveSpot", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/mhiYCaHvd54?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"CraveSpot \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/333/datas/gallery.jpg\"/>\n<p>\n<i>Home page to our website</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"CraveSpot \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/628/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"CraveSpot \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/629/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"CraveSpot \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/630/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"CraveSpot \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/631/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"CraveSpot \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/632/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"CraveSpot \u2013 screenshot 7\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/633/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Figuring out what to eat is a struggle</p>\n<h2>What it does</h2>\n<p>We've all been there - arguing with friends over what to eat when there's a group hang out. CraveSpot is the solution to your problems. It will help remedy your friendships (including with your estranged cousin) and give you an option that makes everyone happy. </p>\n<h2>How we built it</h2>\n<p>PHP, HTML, CSS, Android</p>\n<h2>Challenges we ran into</h2>\n<p>Setting up the API</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Getting the app to communicate with our webserver</p>\n<h2>What we learned</h2>\n<p>PHP, Rest API, Web Services</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://github.com/theryan722/cravespot\" rel=\"nofollow\" target=\"_blank\" title=\"http://github.com/theryan722/cravespot\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"http://ryanoday.com/hackathons/cravespot\" rel=\"nofollow\" target=\"_blank\" title=\"http://ryanoday.com/hackathons/cravespot\">\n<i class=\"ss-icon ss-link\"></i>\n<span>ryanoday.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the android app, server hosting and backend.", "I worked on writing the PHP to gather data from Foursquare. ", "I worked on the front end aspect of this project by making the website and designing the app"]], ["Urban H2O", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Urban H2O \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/478/datas/gallery.jpg\"/>\n<p>\n<i>Logo</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Urban H2O \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/484/datas/gallery.jpg\"/>\n<p>\n<i>Homepage</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Urban H2O \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/485/datas/gallery.jpg\"/>\n<p>\n<i>Map</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Since 2014, communities in Flint, Michigan have been facing a water contamination crisis. Because of the decision to change Flint's water source, the water people in Flint have been drinking has lead contamination. Especially in the aftermath of the Flint water crisis, we think it's important for us to be able to visualize water quality complaints reported to our government.</p>\n<h2>What it does</h2>\n<p>We decided to build a web app enabling people to see how water quality complaints are distributed throughout New York City and what types of water issues are being reported in their neighborhoods.</p>\n<h2>How we built it</h2>\n<p>We built the backend using node.js, mongodb, express.js, and mongoose. The map was created using cartodb and pulls from NYC Open Data. The front end involved HTML and CSS. We also designed the logo. The image on homepage is a photo we took in NYC.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongoose\">mongoose</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/cartodb\">cartodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/socrata-open-data\">socrata-open-data</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://ec2-52-91-186-187.compute-1.amazonaws.com/\" rel=\"nofollow\" target=\"_blank\" title=\"http://ec2-52-91-186-187.compute-1.amazonaws.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>ec2-52-91-186-187.compute-1.amazonaws.com</span>\n</a></li>\n<li><a href=\"https://github.com/urbanh20/UrbanH2O\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/urbanh20/UrbanH2O\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the back-end and server setup/configuration on AWS", "", ""]], ["Just Bike", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Just Bike \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/754/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Just Bike \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/760/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Just Bike \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/756/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>It was always hard for us to find safe and scenic bike trails to ride on. We would have to do long web searches to find a trail that is nearby and also matching our experience level. Sometimes we just want to go out for a quick ride that is safe and enjoyable.</p>\n<h2>What it does</h2>\n<p>Just Bike shows people different trails based on their location, experience, and encourages people to spend less time planning and more time riding.</p>\n<h2>How we built it</h2>\n<p>We used html, css, bootstrap, js, and google-maps api.</p>\n<h2>Challenges we ran into</h2>\n<p>We had no experience with backend and javascript. We had to learn everything from the beginning.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We have functioning prototype!</p>\n<h2>What we learned</h2>\n<p>We learned a lot about google maps api and javascript.</p>\n<h2>What's next for Just Bike</h2>\n<p>Implementing database, ratings, more trails and filters.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-maps\">google-maps</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag\">domain.com</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://www.justbike.net\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.justbike.net\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.justbike.net</span>\n</a></li>\n<li><a href=\"https://preview.c9users.io/pliang/justbike/index.html\" rel=\"nofollow\" target=\"_blank\" title=\"https://preview.c9users.io/pliang/justbike/index.html\">\n<i class=\"ss-icon ss-link\"></i>\n<span>preview.c9users.io</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["StationLocation", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Getting lost in the city with no data on our phones and refusing to asking for directions</p>\n<h2>What it does</h2>\n<p>It's a REST API for providing information about nearest train stations from a specific point</p>\n<h2>How we built it</h2>\n<p>We used the open NYC data set for train stations. We used python and flask for the API endpoints, and mongodb with geoJSON formatting to store data.</p>\n<h2>Challenges we ran into</h2>\n<p>We actually wanted to use java for this, but we had difficulty with that, so we switched to python. Then we wanted to incorporate it with twilio, but that was very difficult too.We also had trouble querying the database, but after we figured that out, the rest of the project went pretty smooth.</p>\n<h1>Accomplishments that we're proud of</h1>\n<p>Getting this to actually work.</p>\n<h2>What we learned</h2>\n<p>We learned how to use mongodb, and a lot about data formatting. We also learned a lot about APIs and endpoints.</p>\n<h2>What's next for StationLocation</h2>\n<p>We'll probably try to integrate it with twilio, so it's more helpful for pedestrians without cellular data. Also, adding data for MTA buses. Right now, its only useful to developers who want to include some information to their users.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/geojson\">geojson</a></span></li><li><span class=\"cp-tag\">math</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/akattelu/stationsearch\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/akattelu/stationsearch\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Hyperios", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>In light of the recent (and increasingly present threat of future) attacks by aggressive actors across the globe, we wanted to show just how devastating such tragic events can be. In the hopes that visualizing the worst can provide a concrete quantitative addition to security concerns instead of exchanging rhetoric, governments can prepare themselves and their infrastructures far better than they currently can.</p>\n<h2>What it does</h2>\n<p>Analysis of city key-point (medical, transportation, power, etc) information is done via publicly accessible databases and APIs. Hyperios then uses a genetic algorithm to optimize for a realistic operating scenario on the given city. These areas are scored on their predicated causality rate (based on localized population density of the area), importance to city infrastructure, and relation to other sites targeted. Weapons and munitions (based on cost, count, and effectiveness) are factored in to determining the most efficient, effective, and devastating strike. Pretty terrifying stuff, right?</p>\n<h2>How we built it</h2>\n<p>We built a Java backend that handled most of the data-crunching. MongoDB was an easy-to-scale and effective data store, especially with the powerful aggregate functions built into it in newer versions.</p>\n<h2>Challenges we ran into</h2>\n<p>Ubuntu by default only allowed an older version of MongoDB to be installed, causing all random document selections to fail. The $sample keyword was not understood whatsoever, and being a new database system to the both of us, it was difficult to work through the problem. On the front-end side of things, Mapbox initially seemed to be a promising API for visualization; however, when it came to the actual implementation, a poorly-documented and unbalanced amount of user experience soon created a dead end in development. Switching to the Google Maps API had some overhead, but it was ultimately better supported. In addition, it wasn't quite as pretty.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Learning a whole new database management system outside the relational database bubble, learning how to create a genetic algorithm from scratch without a library, and debugging a hackathon project of high complexity while still getting more than an hour of sleep.</p>\n<h2>What we learned</h2>\n<p>Never make assumptions about dependencies. Ever. Always be ready to cast aside your first choice or your work, and always have your mind set on the finish line. Being attached to work that isn't the best you can do means your team suffers, and if your team suffers, that's on you. Working on this wasn't easy, but it was educational and rewarding.</p>\n<h2>What's next for Hyperios</h2>\n<p>Potential improvements include country-based mapping with more API support -- for example, the Mashape marketplace had an endpoint that could map crime rates to hot spots by geolocation; examining the effects of a community with less financial resources could contribute to accuracy as well as set the stage for more machine learning techniques in the future (such as neural network deep learning).</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-maps\">google-maps</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/restlet\">restlet</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-places\">google-places</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://hyperios.net\" rel=\"nofollow\" target=\"_blank\" title=\"http://hyperios.net\">\n<i class=\"ss-icon ss-link\"></i>\n<span>hyperios.net</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["RemindMe!", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"RemindMe! \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/062/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"RemindMe! \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/063/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Initially a chrome extension, but I wanted to store each reminder in a database so it's not machine local and is receivable anywhere and anytime (given good service). Therefore, I made it a web application and wanted to try MongoDB for the first time and toy around with the API, as well as Twilio's. </p>\n<h2>What it does</h2>\n<p>Sends a text message to a certain phone with a custom message at a designated time to remind users of needing to do certain things. Allows for a person to text the twilio api with a certain number to send them a text message at a delay with a certain message that manipulates the text message body to store it into the MongoDB. </p>\n<h2>How I built it</h2>\n<p>Run a python script to enable database entry and storage using MongoDB API. This stores the user's inputted number, message, and delay in minutes. Then, another script is running alongside the first script to continuously check all database queries if the designated time is before the current time, it will send a text message using Twilio API and delete the database entry. </p>\n<h2>Challenges I ran into</h2>\n<p>Initially deciding an idea because I wanted to implement an automatic reminder upon calling \"git commit -m,\" but I decided on a more practical and universal usage for the reminder implementation. I had trouble implementing receiving text messages using the Twilio API because I had little experience with website hosting. </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>It's first hack that I actually understood what I was doing for most of the project while exploring new APIs. Using the Twiml API to receive and manipulate the body of the text and store it into the database. </p>\n<h2>What I learned</h2>\n<p>I learned how to utilize a new type of database and I better understood the structure of a Python Flask web application and its components. </p>\n<h2>What's next for RemindMe!</h2>\n<p>I hope to implement the reminder as a CLI to call remindme from the command line.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/iaora/RemindMe\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/iaora/RemindMe\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I implemented the Twilio and MongoDB API to send and receive text message reminders through a web application and \"signing up\" for a reminder through text message."]], ["DialVG", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"DialVG \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/520/datas/gallery.jpg\"/>\n<p>\n<i>running</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Playing video games through your phone with twilio is cool.\nI wanted to learn web, flask and sending messages between computers.</p>\n<h2>What it does</h2>\n<p>Allows people calling the same number to control a game with their phone dial pad.</p>\n<h2>How I built it</h2>\n<p>Using python ngrok flask and lua I'm able to create a button.txt file and read it in lua to do actions in a game depedning on the contents of the file written through python.</p>\n<h2>Challenges I ran into</h2>\n<p>lua</p>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<h2>What's next for DialVG</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/lua\">lua</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li><li><span class=\"cp-tag\">fceux</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/9/DialVG\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/9/DialVG\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/9/DialVG\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/9/DialVG\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Pranker", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Pranker \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/744/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Just felt like doing something quick with Twilio + Really like pranking people = Pranker!</p>\n<h2>What it does</h2>\n<p>You text a target number to the service, and it prank calls the target. Nuff said</p>\n<h2>How I built it</h2>\n<p>I used Python Flask for the backend and the Python Twilio REST Client for the Twilio stuff </p>\n<h2>Challenges I ran into</h2>\n<p>Ehh, actually more of a challenge was just running a public facing web server. Apparently my version of ngrok had sunsetted :/. So had to spend some time figuring that out</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Well, I had a couple of small projects I wanted to do this time. So 1 down, 2 more to go :)</p>\n<h2>What I learned</h2>\n<p>Honestly, I learned that no matter how quick you think a hack will be, it always ends up taking a couple of hours to get working the way you want.</p>\n<h2>What's next for Pranker</h2>\n<p>How about building an ML agent on the backend that tailors the responses to the target's frustration, MWAHAHA</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xml\">xml</a></span></li></ul>\n</div>\n</div>", ["All of the things!"]], ["PillowBrawl", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"PillowBrawl \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/911/datas/gallery.jpg\"/>\n<p>\n<i>FIGHT!!!</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>What inspired me to create this type of project is walking through Washington Square Park on my way to this hackathon and seeing all of the fun random people were having at the huge pillow fight.</p>\n<h2>What it does</h2>\n<p>You can fight against random people or AI</p>\n<h2>How I built it</h2>\n<p>I built it using unity</p>\n<h2>Challenges I ran into</h2>\n<p>Trying to get the physics right for pillow attack also getting the multiplayer working</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I got one of the AI's to attack with the pillow</p>\n<h2>What I learned</h2>\n<p>How to setup a network infrastructure for online games</p>\n<h2>What's next for PillowBrawl</h2>\n<p>Improving the experience by adding more features, characters and all other good stuff then launch it to the world... </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/oculus\">oculus</a></span></li><li><span class=\"cp-tag\">htc-vive</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/leap-motion\">leap-motion</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/kinect\">kinect</a></span></li></ul>\n</div>\n</div>", ["Designed & Programmed the Environment"]], ["Auto-tagged Giphy submission (unfinished)", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration: All gif submissions to Giphy are currently tagged either by a user or a Giphy team member. Clarify allows gifs to be tagged automatically with their machine learning api. Why not combine them?</h2>\n<h2>What it does: Given the gif's url, it autogenerates tags for the gif and automatically submits them to Giphy</h2>\n<h2>How I built it: I wrote a node.js script that can call the api and grab the tags for the provided gif. Then (if I finished this part), using cookie.js, the script would submit the gif and its tags to Giphy's website directly.</h2>\n<h2>Challenges I ran into: Understanding APIs, dealing with problematic environment variables, learning web-scraping with cookie.js, and having the mental competence of a baby. The last part is the only reason I didn't finish.</h2>\n<h2>Accomplishments that I'm proud of: Learning to work with an api, and new technologies in general, learning web-scraping with cookie.js.</h2>\n<h2>What I learned: A LOT (see above).</h2>\n<h2>What's next for Auto-tagged Giphy submission: Finishing the script, condensing the tags list by removing doubles (even further down the road, analyzing relationships between tags of different frame samples in order to find new tags), maybe a custom version of Giphy's submission site that internally accesses the Clarifai api (no need for external scripts).</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li><li><span class=\"cp-tag\">cookie.js</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/ViggyNash/Giphy_auto_tagging\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ViggyNash/Giphy_auto_tagging\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Cryptr", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Cryptr \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/889/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Cryptr \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/890/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Cryptr \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/891/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Cryptr \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/892/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Cryptr \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/893/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Cryptr \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/894/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Airline tickets, concert tickets, even drivers licenses use encoded but not encrypted 2d bar codes such. This means anyone can make their own fake tickets and identities, and without access to a central database, it is impossible to distinguish the real ones from the fake ones. Internet access and a robust database system are needed to be sure any given identity or ticket was issued by a reputable source. </p>\n<p>That's pretty stupid, because public key cryptography solved this problem decades ago and databases are cumbersome to set up and maintain. With algorithms like RSA, anyone with a public key can check that tickets and identities were issued by the correct authority, and forgers are unable to modify tickets once they are issued. </p>\n<h2>What it does</h2>\n<p>Cryptr uses the RSA algorithm to hash and sign plaintext messages. These messages contain information such as the name of the intended recipient, the event the ticket / ID is for, the date and an ID number. The app can also scan a qr code and verify identities as valid or invalid.</p>\n<h2>How we built it</h2>\n<p>We built this app using Swift on iOS. We relied on library wrappers and other example projects that implemented low-level cryptographic libraries such as CommonCrypto and other functionality such as QR code scanning. </p>\n<h2>Challenges we ran into</h2>\n<p>Many of the cryptography libraries available on iOS, especially the CommonCrypto library provided by apple, are very poorly documented and not easily used in a Swift app. </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We're proud that we were able to implement RSA securely. We're also quite proud of the design of the app.</p>\n<h2>What I learned</h2>\n<p>We were able to find a way to make scanning and creating QR codes quick and easy. In addition to that, we were able to develop a better understanding of the CommonCrypto library.</p>\n<h2>What's next for Cryptr</h2>\n<p>As we develop the app more, the user will be taken to a screen that displays the coded information after the signature is verified.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">rsa</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag\">qr-code</span></li><li><span class=\"cp-tag\">sha</span></li><li><span class=\"cp-tag\">cryptography</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/stevenpovlitz/CryptrHackNY\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/stevenpovlitz/CryptrHackNY\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Snapby", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>-!! Demo only, app in development</h2>\n<h2>Inspiration - Interest in computer vision, natural language processing, AI/ML</h2>\n<h2>What it does - Recognizes objects in image and creates an eBay/Amazon search</h2>\n<h2>How I built it - Python</h2>\n<h2>Accomplishments that I'm proud of - Created a basic app that employs API's to achieve an useful task</h2>\n<h2>What I learned - A great deal about the use of AI/ML API's and tools</h2>\n<h2>What's next for Snapby - Make an IOS/Android app after carefully optimizing the code and algorithm</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Pranav99/Snapby\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Pranav99/Snapby\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Keepintouch", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>I'm terrible at keeping in contact with my friends and family.  I forget to message them or initiate conversations with them or check up on them from time to time.  Most of the time, people have to message me first or I'll never remember that they exist.  My parents get sad that I don't call them enough.  </p>\n<h2>What it does</h2>\n<p>It sends reminders to your phone with frequency based off of how important you rate them on a scale of 1-10.  (How frequently you would like to be reminded to talk to them).  In addition, you can include certain notes about the person such as \"Ask Paul about his marriage\" so you know how to initiate the conversation.  </p>\n<h2>How I built it</h2>\n<p>I built a web app that has a user login system with Python/Flask and SQL.  It also uses Twilio's API to send notifications to your phone.    </p>\n<h2>Challenges I ran into</h2>\n<p>Figuring out how to implement Twilio's API to get notifications sent to my phone for an indefinite period of time.    </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I've never made a fully functioning web app that uses a user login system and sends/saves information to a database.  Also my first time using Flask and working with an API.  </p>\n<h2>What I learned</h2>\n<p>I learned how servers and databases communicate and how to use Flask!</p>\n<h2>What's next for Remembering to call parents or talk to friends</h2>\n<p>Allowing the message sent to your phone to be customized further based off of the \"notes\" you have on the person.  </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sql\">sql</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["Nxt-Stop", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>We are making a travel app that identifies user pictures and gives recommendations.</p>\n<p>The app does not have a visual representation feedback yet.</p>\n<p>The app scans through every image of a user to determine the next travel destination for the user.</p>\n<p>We've implemented OAuth but didn't have the time to parse user profiles.\nWe are able to load tags that appear in a series of photos although the app has not been able to link the user profile with the photos.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://54.187.99.155/\" rel=\"nofollow\" target=\"_blank\" title=\"http://54.187.99.155/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>54.187.99.155</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["CommCloud", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"CommCloud \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/722/datas/gallery.jpg\"/>\n<p>\n<i>About Page</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>CommCloud is a powerful tool that allows users to perform extensive computations by sharing CPU power with other computers. It works like this: the host CPU breaks up a job into individual tasks and sends each worker CPU a task. After the worker CPU completes its task, it sends the results back to the host. After the host receives all the results, the final computation can be built back together.</p>\n<p>How many hours a day do you use your computer? \nMost people would say a couple of hours; and most people don't turn their computer's off when they're not in use. What if you could generate revenue and help others during this time?</p>\n<p>Users with less powerful CPUs can increase their performance by making use of other people's idle CPUs. The idea is that users who volunteer their processing power will be compensated at least enough to break even with their bandwidth and electricity costs. The goal is to give users the ability to perform large, complex computations without the need to access a supercomputer. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/linode\">linode</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/socket-io\">socket.io</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/tonylulciuc/commcloud\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/tonylulciuc/commcloud\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/tonylulciuc/commcloud\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/tonylulciuc/commcloud\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Frontend", "", "", ""]], ["Alter-Remainder", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Most of the time it happened with me that I forget to finish my work even though I was in same area. Suppose I want to purchase food items and I just crossed supermarket. When I reached at home then I came to know that I forgot to purchase food items and I was there in the same area. In such case if I get any alert message when I am in that same area then I can finish my work at proper time and do not worry about will I forget to do that stuff.</h2>\n<h2>Send alert message to person to do some stuff from daily list if that person in that area near to bank, supermarket , registration office  etc</h2>\n<h2>It's my habit to create a list of activities on the daily basis I want to finish within a day. If I successfully finished that activity then I checked that list otherwise I use to carry forward that activity for next day. Same as that I have created listview in Android and  have created the form which will add activities in the list. If I finished same activity the I just want to press Done button then it will remove that activity from the list. At the same time , I am trying to track geographical position. As of now I have tracked Longitude and  Latitude using google map API. I am using Twilio for sending alter SMS which is successfully completed.</h2>\n<h2>Right now I am doing some part of work in IntelliJ</h2>\n<h2>I think everyone face this situation most of the time and I am trying to help people to solve their problem which they face on daily basis</h2>\n<h2>Twilio , Volley API , JSON Objects, Intellij , Google API</h2>\n<h2>While adding list application should predict which activity the person has to complete and as per the current geographical location which store near address mostly near to home using google map.</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/intellij-idea\">intellij-idea</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-maps\">google-maps</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/ShivanjaliR/Alter-Remainder\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ShivanjaliR/Alter-Remainder\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/ShivanjaliR/Alert-Messaging-System-/commit/b4c776e84ce77fc20a0b1d6c3556a2a59a7c6f7b\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ShivanjaliR/Alert-Messaging-System-/commit/b4c776e84ce77fc20a0b1d6c3556a2a59a7c6f7b\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["giphy-fai", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Gifs are way more fun</p>\n<h2>What it does</h2>\n<p>You send a still pic, it gets tags using clarifai, then sends you back a gif based on the clarifai tags</p>\n<h2>How I built it</h2>\n<p>Set up heroku, and twilio. Linked in clarifai and giphy</p>\n<h2>Challenges I ran into</h2>\n<p>Server issues, not having used heroku, flask, any of the apis before, lack of sleep.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Getting it to work finally</p>\n<h2>What I learned</h2>\n<p>Setting up Heroku, flask things, etc</p>\n<h2>What's next for giphy-fai</h2>\n<h2>How to use</h2>\n<p>Send an mms to 732 853 8297 with an image</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/heroku\">heroku</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/giphy\">giphy</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://giphy-fai.herokuapp.com/\" rel=\"nofollow\" target=\"_blank\" title=\"https://giphy-fai.herokuapp.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>giphy-fai.herokuapp.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Wander", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>The inspiration for Wander came from videos games like Pokemon and Assassin's Creed, where you have a map and a city of activities and places to go! </p>\n<h2>What it does</h2>\n<p>Our app has three phases for New York for new exploration: unknown, known, and owned. If you haven't been to let's say Soho, you can only see a grey outline of the area. Once you physically enter the area, you are given tasks to accomplish, which are given based on the FourSquare API. Once the tasks are done, you are rewarded with a Google Map, showing what you've done and other top results in the area.</p>\n<h2>How we built it</h2>\n<p>The entire app is built in Swift for iOS, and directly utilizes from the Google Maps API. Our presentation uses hard coded information from the FourSquare API, but would be easy to implement fully.</p>\n<h2>What's next for Wander</h2>\n<p>This could be expanded to act as a game between businesses and customers, whether they be locals or tourists looking for popular spots. There could be rewards and a friendly competition between friends to see if you \"own\" more sections of the city. There can be tasks like \"take a photo of a pizza\", which you can then share on instagram. This brings the joy or exploring in videos game to real life, with real goals!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ios\">ios</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/elanatee/maps\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/elanatee/maps\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["imageSong", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We were wowed by the both the Clarifai demo and the Twilio demo at teh start of the hackathon, and wanted to create something cool using those APIs.</p>\n<h2>What it does</h2>\n<p>It takes an image that the user texts in and then calls the sender with a relevant song.</p>\n<h2>How we built it</h2>\n<p>We took the tags that Clarifai analyzed from the sent image and searched Spotify for those tags, sending the user the most relevant song. We wrote our server-side program in Java and used the Clarifai and Twilio APIs.</p>\n<h2>Challenges we ran into</h2>\n<p>We spent most of our time installing the proper libraries, modules and supporting programs, running into lots of small errors which we spent our time troubleshooting.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Three of our four team members just completed their first hackathon this weekend! Working with Twilio, Clarifai, Spotify API has been challenging while trying to read the documentation and implement them in intelIj. We understood IDE, and API in a practical way through this hackathon.</p>\n<h2>What we learned</h2>\n<p>Twilio API, using server, GET, POST request connecting api and server, using gift tags, clarafai api and time management.</p>\n<h2>What's next for imageSong</h2>\n<p>We are looking forward to receive image from user and based on the color of the picture, we will send an associated song to the user. In fact this was the whole point of our project however due to changes faced with installation and even understanding the connection between different api's, our next step to actually make our dream come true.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/spotify\">spotify</a></span></li><li><span class=\"cp-tag\">twlio-api</span></li><li><span class=\"cp-tag\">spotiify-api</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/RedolentSun/Song4Image.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/RedolentSun/Song4Image.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Transmission Control Protocol Analysis Engine", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<h2>What it does</h2>\n<p>It differentiates between hosts that behave in an expected fashion and those that do not</p>\n<h2>How I built it</h2>\n<h2>Challenges I ran into</h2>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<h2>What's next for Transmission Control Protocol Analysis Engine</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n</div>", [""]], ["The Food Planet", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We are inspired by all the food instagrammers and Clarifai's API to make this happen (it's really like to eat but we are broke af so...)</p>\n<h2>What it does</h2>\n<p>Put in the photo URL and this website will tell you what ingredients there are (thank you Clarifai) and it will generate recipes for you (Yay Spoonacular!).</p>\n<h2>How we built it</h2>\n<p>Many hours of fretting over the difference between JSON and JSONP + hosting on Amazon, we still haven't quite figure it out but...\nDecided to use bootstraps standard templates and perform some jQuery magic. </p>\n<h2>Challenges we ran into</h2>\n<p>See above.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Finding really good pictures of kolache.</p>\n<h2>What we learned</h2>\n<p>We learned that we must learn what APIs do and how to actually use it</p>\n<h2>What's next for The Food Planet</h2>\n<p>Bringing it to mobile as an App, find the prices of food based on your locations/favorite grocery stores so that we can tell you how much it cost on average to recreate it, how much time it takes to make it and you decide if you want to make it :P</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li><li><span class=\"cp-tag\">spoonacular</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://rmsim.github.io/\" rel=\"nofollow\" target=\"_blank\" title=\"http://rmsim.github.io/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>rmsim.github.io</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I made the site with bootstrap and hosted it on my github", "I wireframed and prototyped everything in Sketch, starting with a complete mobile app concept before we scrapped that direction and then pivoting to a webapp design. I also designed the logo for this project.", ""]], ["In-The-Mood-For-Hue", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>In-The-Mood-For-Hue</h1>\n<p>We want to provide mood lighting that's actually based on your mood! Inspired by Zack's desire to walk into his room and have lighting change depending on the expression on his face, this proof of concept prototype will use webcam image to flash LEDs inspiring you and others around you to to listen your feelings! Been staring at your code too long and feeling kind of down? The blue LED will remind you that maybe it's time to look at some cute baby otter pictures!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/emacs\">emacs</a></span></li><li><span class=\"cp-tag\">microsoft-emotion-api</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/ZacharyThomas/In-The-Mood-For-Hue\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ZacharyThomas/In-The-Mood-For-Hue\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["To Push or Not to Push", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>idk, im sick too tired to think</p>\n<h2>What it does</h2>\n<p>whenever something is pushed, github sends a post request to my server, which then sends sms messages saying who just pushed. it updates a file somewhere, i have a listener checking for file changes in a directory written in bash somewhere that once triggered, starts up another shell script that clones the repo and tries to build the project, if it fails, it sends a sms message letting everyone know who done goofed</p>\n<h2>How I built it</h2>\n<p>nodejs, aws, bash, java, github</p>\n<h2>Challenges I ran into</h2>\n<p>triggering an automatic build of a repo</p>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<h2>What's next for To Push or Not to Push</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/github\">github</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bash\">bash</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/dominusbelli/hackny-s2016-carlin\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/dominusbelli/hackny-s2016-carlin\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["everything"]], ["TwiliPhy", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>TwiliPhy</p>\n<p>The script is run with python twiliomsg.py</p>\n<p>While it is running on a server, it works by a user sending a text message to the number 13478366734.</p>\n<p>The user may prompt anything. \nIf it is \"quote\", the user will receive a randomly generated quote from a famous person.\nIf it is someting else, so long as it exists, the user will be sent a random GIF of said thing.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/farhatnader/huntertwilio\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/farhatnader/huntertwilio\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Ahmed Hassan\nChris Hamburger\nFarhat Nader"]], ["ColorTrends", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to do cool data visualizations and decided that looking at color would lend itself to beautiful data viz.</p>\n<h2>What it does</h2>\n<p>We pulled in 70,000+ records of artwork from the Tate Collection. We then sent the images to Clarifai to get the colors of the images. Then we used D3.js to visualize trends in the data.</p>\n<h2>How we built it</h2>\n<p>Imported 70k records into a MongoDB instance. Filtered by data with non-empty thumbnailUrl fields. Processed records by appending the colors returned from the Clarifai API. Queried results and processed data with MongoDB and Python. Exported to JSON. Rendered JSON with D3.js. Developed and served on a Linode server.</p>\n<h2>Challenges we ran into</h2>\n<p>Running all records at once broke every now and then. D3 is hard. A lot of art pieces were in greyscale. We hadn't used any of these technologies before (besides Python). </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We hadn't used any of these technologies before. The machine learning from Clarifai worked great. We actually got results in a short time.</p>\n<h2>What we learned</h2>\n<p>We learned that doing data analysis on something you're familiar with is probably easier than something you have no idea about (art history). Machine learning is cool.</p>\n<h2>What's next for ColorTrends</h2>\n<p>More data analysis! </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/d3-js\">d3.js</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://66.175.209.66/\" rel=\"nofollow\" target=\"_blank\" title=\"http://66.175.209.66/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>66.175.209.66</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["SMSstuff", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>When going through customer service, we had to call and go through a series of routes to get to our destination. So we wanted to have a shortcut that allows us to go straight to our destination.</p>\n<h2>What it does</h2>\n<p>It takes inputs and you can write it all at the same time and it will take it in as a list. It also allows us to call people back with XML using one of Twilios API. There are also a couple of Easter Eggs.</p>\n<h2>How we built it</h2>\n<p>We first were getting used to Twilio's API by learning how to send and receive messages and calls. We then added more functions like Clarifai and Giphy to access images. We used JSON  to make a library to access the routes that let us travel to the destination and let us shortcut to the destination</p>\n<h2>Challenges we ran into</h2>\n<p>1) from_\n2) Also, we tried to implement a Python Interepreter, but it proved to be difficult.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Making a robotic voice talk back and making a video game using texting.</p>\n<h2>What we learned</h2>\n<p>We learned more about flask. We learned a lot of APIs from Twilio. </p>\n<h2>What's next for SMSstuff</h2>\n<p>We will probably parse information from actual database. With this, we can have users authenticate themselves as who they are and when they have been authenticated. Their phone is saved onto the database and whenever the database receive a text message from that number, they will know who it is and what information to send back.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/giphy\">giphy</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xml\">xml</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/SupaStuff/SMSstuff\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/SupaStuff/SMSstuff\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the Twilio API with Jean, Diana, and Carl. ", "", "", ""]], ["Project Cyborg", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Project Cyborg \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/370/780/datas/gallery.jpg\"/>\n<p>\n<i>Project Cyborg</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Twitter bots - but for everyone.</p>\n<h2>What it does</h2>\n<p>Takes in your favorite twitter user's handle, spits out tweets from their cyborg counterpart!</p>\n<h2>How we built it</h2>\n<p>We used the React framework with a server running on Python flask</p>\n<h2>Challenges we ran into</h2>\n<p>Learning a new framework from scratch. Also animations are hard.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>It works :)</p>\n<h2>What we learned</h2>\n<p>How to use React!</p>\n<h2>What's next for Project Cyborg</h2>\n<p>-More accurate markov chain algorithm, \n-\"featured\" accounts view for user to cyborg-ize\n-not using a JSON file as our db\n-get the project hosted somewhere</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/react\">react</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twitter\">twitter</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/kennydurkin/Project-Cyborg/\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/kennydurkin/Project-Cyborg/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked with the react front end and the page's CSS. making sure the graphics displayed properly and the react animations took place.", ""]], ["Video in Canon", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>A now defunct site a friend once showed me</p>\n<h2>What it does</h2>\n<p>The page takes a video ID from the user for a Youtube video. Then, several Youtube players are displayed, filling the page, and presenting the video with itself. However, each player is slightly delayed from the previous one.</p>\n<h2>How I built it</h2>\n<p>Apache hosts the page. Javascript to interact with the Youtube iframe player API.</p>\n<h2>Challenges I ran into</h2>\n<p>Taking advantage of Javascript's asynchronous features</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>That what I have (approximately) does what I intended</p>\n<h2>What I learned</h2>\n<p>Got more familiar with Javascript, and gleaned a little knowledge of Apache</p>\n<h2>What's next for Video in Canon</h2>\n<p>To properly take a single video stream from Youtube instead of opening several at once. It's a more elegant solution.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/apache\">apache</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/youtube\">youtube</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/JosephSKennedy/VideoInCanon\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/JosephSKennedy/VideoInCanon\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Scavenger", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Scavenger \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/943/datas/gallery.jpg\"/>\n<p>\n<i>Title </i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Scavenger \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/942/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Scavenger \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/945/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Scavenger \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/946/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Scavenger \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/941/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Scavenger \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/944/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We started off with the motivation to build a game and work with android for the first time. After tumbling from ideas like 3D Battleship to a Real-Time MTA Subway Race, we finally decided on something that not only is fun but is also something useful. We then thought about the idea of having an automated scavenger hunt, and pursued it. </p>\n<h2>What it does</h2>\n<p>Planning a scavenger hunt is a tedious process that involves either finding places or finding objects; we thought we could combine and automate that process. Our application randomly generates commonly found places and objects around you, and creates a task list for you to complete as a team.</p>\n<h2>How we built it</h2>\n<p>Using Clarifai's API, we recognized objects and using Foursquare's API, we recognized your proximity to the designated location.</p>\n<h2>Challenges we ran into</h2>\n<p>Since we all were new to android, several basic integrations posed difficult challenges for us.</p>\n<h2>What's next for Scavenger</h2>\n<p>Creating and Sharing Custom Scavenger Hunts.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/postgresql\">postgresql</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/foursquare\">foursquare</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/socket-io\">socket.io</a></span></li></ul>\n</div>\n</div>", ["I worked on two major aspects of this build: UI & API integration. This was my first experience with Android Development, and this was a huge learning experience. I was able to learn UI design following Android Material Design. l also got to spend a log of time with API integration for location geotagging with FourSquare. ", "", ""]], ["Can I Buy?", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We are not terribly good with financial decisions, and want expensive things. We feel like this is a common problem with people our age, so we made something to tell people when it was a good idea to buy things of a certain price.</p>\n<h2>What it does</h2>\n<p>It allows Capital One customers to text a number with the price of their desired possession. We calculate their average income per month as well their average expenses and based on that information tell them if it's they can afford to buy that item. If they cannot, we also tell them when they can, if they ever can with their current income/expenses.</p>\n<h2>How we built it</h2>\n<p>We used Twilio to allow users to text us their information. We stored their phone and account numbers as a database powered by MongoDB. We then accessed their information using the Capital One API and parsed their withdrawals/deposits to figure out their average income/expenses. Then we let them know if purchasing the desired item would be smart giving that info. We hosted all this on a Digital Ocean server.</p>\n<h2>Challenges we ran into</h2>\n<p>Coming up with the idea was probably hardest. Also setting up the communication with the Capital One was initially hard but became easier as we got used to it.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Everything that we planned to make is working great.</p>\n<h2>What we learned</h2>\n<p>How to set up a MongoDB (it's surprisingly straightforward), using Capital One API, Twilio. Also learned a little Python.</p>\n<h2>What's next for Can I Buy?</h2>\n<p>Be used by real Capital One customers!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/capital-one\">capital-one</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/digitalocean\">digitalocean</a></span></li></ul>\n</div>\n</div>", ["", "", "", ""]], ["MRI Scanner", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"MRI Scanner \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/654/datas/gallery.jpg\"/>\n<p>\n<i>Original photo album</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"MRI Scanner \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/695/datas/gallery.jpg\"/>\n<p>\n<i>User selects their favorites from grouped similar images</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"MRI Scanner \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/651/datas/gallery.jpg\"/>\n<p>\n<i>Automatically selected, unique photo album with top tags</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"MRI Scanner \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/652/datas/gallery.jpg\"/>\n<p>\n<i>Unique images by tag</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2><strong>Inspiration</strong></h2>\n<p>I got back from a fantastic holiday with some friends and I wanted one combined photo album which had all of the best pictures. But between us we took hundreds of photos! And I didn't want to have sort through them manually. </p>\n<h2><strong>What it does</strong></h2>\n<p>MRI Scanner identifies similar images in a photo album and let's you quickly pick which one you like for your final album. If you don't have time for that, MRI Scanner will do all of that for you and create an album of unique photos. Once you have your final album, you can also search images based on what's in them. Only want an album with people in them? No problem!</p>\n<h2><strong>How we built it</strong></h2>\n<p>A Python backend handles image processing, the image similarity algorithm and calls to the Clarifai API for image tagging. Our algorithm computes the Spatial Envelope or \"scene\" for each photograph and uses this to identify similar images. The backend was integrated with the front end using the Django framework. HTML 5 and Javascript used to power the front end.</p>\n<h2><strong>Challenges we ran into</strong></h2>\n<p>Computing image similarity is computationally expensive and takes too long at the moment. Making the page interactive (image selection, tag selection, image carousel).</p>\n<h2><strong>Accomplishments that we're proud of</strong></h2>\n<p>Getting our image similarity algorithm to work well. Integrating image tagging and tag search functionality. Building an image carousel. </p>\n<h2><strong>What we learned</strong></h2>\n<p>How to compute image similarity, how to make calls to an API, how to use the Clarifai Api, manipulating filenames using the os module, image processing. Using more complex web dev tools. Improving at troubleshooting. </p>\n<h2><strong>What's next for MRI Scanner</strong></h2>\n<p>Fully integrating the back and front end, moving it from local host to a server, making it possible for users to upload their own photo albums</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/django\">django</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/lgraesser/Image_Similarity\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/lgraesser/Image_Similarity\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Worked on integrating all the components of the project in Django, and developing the front-end. ", "I worked on the back end and was responsible for image processing, our image similarity algorithm, and getting image tags using the Clarifai API"]], ["Morrow Peak", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Morrow Peak \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/808/datas/gallery.jpg\"/>\n<p>\n<i>main menu</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Morrow Peak \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/807/datas/gallery.jpg\"/>\n<p>\n<i>house party level</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Morrow Peak \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/774/datas/gallery.jpg\"/>\n<p>\n<i>the loading screen</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>CONTROLS</h2>\n<ul>\n<li>arrows to move</li>\n<li>space to select and interact with NPCs and objects, enter to advance dialogue</li>\n<li>i to open inventory, esc to back out through menu</li>\n<li>m to open map</li>\n</ul>\n<h2>MULTIPLE LEVELS</h2>\n<ul>\n<li>space at the house's front door to go to the coffee shop</li>\n<li>space in the middle of the first table in the coffee shop to go back to the house</li>\n</ul>\n<h2>Inspiration</h2>\n<ul>\n<li>Undertale</li>\n<li>Columbia student life</li>\n</ul>\n<h2>What it does</h2>\n<p>It sets the scene for your ex-best-friend's death</p>\n<h2>How I built it</h2>\n<p>Without sleeping</p>\n<h2>Challenges I ran into</h2>\n<p>Reading anything into the game, loading different levels</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Making pixel art for 8 hours straight</p>\n<h2>What I learned</h2>\n<p>About ten percent of Unity and a heck of a lot of c#</p>\n<h2>What's next for Morrow Peak</h2>\n<p>Making the entire town</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag\">no-sleep</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://www.dropbox.com/sh/11d6i0949r9why5/AAAIOAJKi5Bws2ssls1S329Ma?dl=0\" rel=\"nofollow\" target=\"_blank\" title=\"https://www.dropbox.com/sh/11d6i0949r9why5/AAAIOAJKi5Bws2ssls1S329Ma?dl=0\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.dropbox.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["All the art, and half the code, story, and dialogue.", "The other half of the code, story, and dialogue."]], ["HACKERMECH SHOWDOWN", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"HACKERMECH SHOWDOWN \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/820/datas/gallery.jpg\"/>\n<p>\n<i>WAOW</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"HACKERMECH SHOWDOWN \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/951/datas/gallery.jpg\"/>\n<p>\n<i>SCHMOWZOW!</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>HACKERMECH SHOWDOWN</h1>\n<h3>INTENSE 1v1 MECH BATTLES IN TERMINAL, CODE YOUR WAY TO GLORY</h3>\n<hr/>\n<h2>Overview</h2>\n<p>HACKERMECH SHOWDOWN is a 1v1 in terminal game where the goal of the game is to defeat your opponent's mech in an epic fight to send them back to the scrapyard. </p>\n<p>Each round, a few mech parts are selected out of a global pool of parts and made available to you. Your own mech is powered by your own strategical ingenuity and coding skills: You have ten minutes to write the JavaScript code that controls the actions of your mech.</p>\n<hr/>\n<h2>Build</h2>\n<p>Our front-end terminal application is written in the only real dev language, Node.js, using the <a href=\"https://github.com/chjj/blessed\" rel=\"nofollow\">blessed</a> library.</p>\n<p>Our back-end is powered by--you guessed it: Node.js, along with express.js, docker, and mongoDB.</p>\n<hr/>\n<h2>Credits</h2>\n<p>This project was built in less than 24 hours at the <a href=\"https://github.com/chjj/blessed\" rel=\"nofollow\">hackNY 13</a> hackathon at NYU.</p>\n<p>Check out our <a href=\"https://github.com/AvocadosConstant/hackermech-showdown\" rel=\"nofollow\">github repo</a>!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag\">blessed</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/AvocadosConstant/hackny-spring-2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/AvocadosConstant/hackny-spring-2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I'd just like to interject for a moment. What you\u2019re referring to as \"the only real Dev language\" is in fact, the Node.JS runtime environment or as I\u2019ve recently taken to calling it, Node+JS. Node is not a language unto itself, but rather another free component of a fully functioning JavaScript runtime made useful by the JavaScript core syntax, parser utilities and vital language components comprising a full Dev language as defined by Alan Turing and his great descendant Steve Jobs.", "", "", "", "", "", ""]], ["MobiSkate", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Try it yourself</h2>\n<p>You can play our game at <a href=\"http://letsskateboard.online/\" rel=\"nofollow\">letsskateboard.online</a></p>\n<h2>What it does</h2>\n<p>If you have a phone (or other accelerometer enabled web-device), and another machine, you can use your phone as a tilt-sensitive controller to control a skateboard on the other screen for a great deal of fun!</p>\n<h2>How we built it</h2>\n<p>Socket.io (managed by a node.js server) allows your phone (or other accelerometer enabled web-device) to act as a controller and communicate with another computer which acts as the display.  </p>\n<h2>Challenges we ran into</h2>\n<p>We probably should have brushed up on our Linear Algebra before this hackathon!  Also, we are both new to socket.io and enjoyed learning the new technology.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>As always, shipping a hack we can be proud of.</p>\n<h2>What we learned</h2>\n<p>This was a great chance to experiment and learn many new things!  Neither of us had used socket.io or the html5 accelerometer API before this hackathon.  </p>\n<h2>What's next for MobiSkate</h2>\n<p>Of course, while we are happy with what we are able to create in our limited time, this project could obviously use a great deal more polish.  </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/socket-io\">socket.io</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/three-js\">three.js</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://letsskateboard.online/\" rel=\"nofollow\" target=\"_blank\" title=\"http://letsskateboard.online/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>letsskateboard.online</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["HacKonneKt", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>What drove us to work on this project was an issue that we found to be annoying, but prevalent, at hackathons - finding an available space to work. After experiencing this at more than one hackathon, we came to the agreement as a team that this process could be improved. So we took the challenge.</p>\n<h2>What it does</h2>\n<p>HacKonneKt streamlines communication between hackathon organizers and participants, and allows participants to efficiently find and select spaces for hacking. HacKonnekt allows administrators to label available rooms and allows participants to signup for rooms online, all while automatically updating participants on room availability in real time. Administrators can also use HacKonnekt can send real time updates and reminders of the hackathon event schedule through our Twilio-based text messaging system.</p>\n<h2>How I built it</h2>\n<p>To build this application, we uploaded a pre-filled Google spreadsheet with hackathon registrant information into a MongoDB database using node.js APIs. We then created two interfaces on the front-end, one that is admin-facing and the other is user-facing. We connected our front end and back ends and integrated the Twilio API.</p>\n<h2>Challenges I ran into</h2>\n<p>We had trouble integrating the Twilio API with our MongoDB server.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We were able to complete our project and successfully send and receive messages via Twilio.</p>\n<h2>What I learned</h2>\n<p>We gained tremendous experience in JavaScript, node.js, and MongoDB - especially Twilio.</p>\n<h2>What's next for HacKonneKt</h2>\n<p>Automatically alerting hackathon participants of scheduled events through an algorithm.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongoose\">mongoose</a></span></li><li><span class=\"cp-tag\">mongojs</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/angular-js\">angular.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li></ul>\n</div>\n</div>", ["", "", ""]], ["openMessenger", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Always wanted a web app for texting for situations like forgetting your phone at home etc.</p>\n<h2>What it does</h2>\n<p>Sends your text messages to a database which the web app uses to display the conversation. Users can text their friends via the web app without having to use their phone.</p>\n<h2>How we built it</h2>\n<p>Using basic HTML,CSS and JavaScript.</p>\n<h2>Challenges we ran into</h2>\n<p>Deciding on a non-redundant JSON structure.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Finally sending data to Firebase.</p>\n<h2>What we learned</h2>\n<p>How Firebase and JSON works.</p>\n<h2>What's next for openMessenger</h2>\n<p>Integrate it with Twilio so that the phone always doesn't have to be connected to the Internet.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/IgorGee/openMessenger\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/IgorGee/openMessenger\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/mytosus/openMessenger-webend\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/mytosus/openMessenger-webend\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Created mobile backend and contributed to database architecture and design.", "Designed the web interface using html, css, and javascript. Also contributed to the back-end", ""]], ["Quick-Hang", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Quick-Hang \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/720/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Quick-Hang \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/721/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Quick-Hang \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/732/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>Quick Hang</h1>\n<p>This is a hack for HackNY Spring 2016 by,</p>\n<ul>\n<li>Christopher Yang <a href=\"http://github.com/cyang\" rel=\"nofollow\">@cyang</a></li>\n<li>Alan Chen <a href=\"http://github.com/AlanC5\" rel=\"nofollow\">@AlanC5</a></li>\n<li>Daniel Chia <a href=\"http://github.com/danielcodes\" rel=\"nofollow\">@danielcodes</a></li>\n<li>Norman Tan @ntan3 <a href=\"http://github.com/ntan3\" rel=\"nofollow\">@ntan3</a></li>\n</ul>\n<p><img data-canonical-url=\"http://i.imgur.com/l30BuCO.jpg\" src=\"https://res.cloudinary.com/devpost/image/fetch/s--LX5IBIzW--/http://i.imgur.com/l30BuCO.jpg\"/></p>\n<p><img data-canonical-url=\"http://i.imgur.com/iZwg2ej.jpg\" src=\"https://res.cloudinary.com/devpost/image/fetch/s--D4v7KUWx--/http://i.imgur.com/iZwg2ej.jpg\"/></p>\n<h2>About this repo</h2>\n<p>We created a service that allows users to text their friends in a quick way for last minute events using the Twilio and Foursquare api. We take the locations that are listed on Foursquare and through Twilio we send selected friends a message and place of the location. This app is made for anyone with a phone that wants to hang out with their friends, but don't plan ahead of time. </p>\n<h3>How it works</h3>\n<ul>\n<li>User queries for an activity which is passed to the Foursquare API, location is also given</li>\n<li>Based on these 2 arguments, a list of available locations are provided</li>\n<li>user selects a location and can text friends to spontaneously meet up</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/AlanC5/Quick-Hang\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/AlanC5/Quick-Hang\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Joe", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Joe \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/727/datas/gallery.jpg\"/>\n<p>\n<i>Joe</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>Joe let's you listen to music through a phone call. You just need to text <code>Search { Song Name }</code> to <code>347-329-2374</code> and then select the song from the received list by replying with <code>Play { Song ID }</code>. You'll receive a phone call immediately and after picking it up, you can start listening to music straight away. Joe is always there to assist you, just text <code>joe help</code> to receive usage information. We all love joe!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/soundcloud\">soundcloud</a></span></li></ul>\n</div>\n</div>", ["I worked to the backend for the app.", ""]], ["Safeny", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Safeny \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/822/datas/gallery.jpg\"/>\n<p>\n<i>Home screen</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Safeny \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/823/datas/gallery.jpg\"/>\n<p>\n<i>Example map of directions</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Making traveling in the city a safer, worry-free experience</p>\n<h2>What it does</h2>\n<p>Using OpenNYC data sets, we parse crime statistics to find which areas in the city are safer than others. Then we get straightforward directions from your location to your destination using the safest routes possible for walking.</p>\n<h2>How we built it</h2>\n<p>Python backend to parse data sets and create a grid of safe and unsafe spots. Each tile in the grid has a score corresponding to how safe it is. We find the shortest path between two tiles with the minimum weight (safest path). We have an IOS app written in Swift to get user input and show directions to the destination using Google Maps sdk to embed a map.</p>\n<h2>Challenges we ran into</h2>\n<p>Determining how particular crimes affect the weight of a certain area in the grid.\nDetermining the size of the tiles in the grid: needs to be small enough to provide 'safe' routes, but large enough to have enough data per tile.\nCreating a routing algorithm that finds the shortest path as well as a path that avoids dangerous areas.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Parsing data sets with different standards to aggregate data and develop a proper heuristic to mark safe and unsafe spots. Also, coming up with a shortest path minimum weight algorithm for our grid.</p>\n<h2>What we learned</h2>\n<p>Aggregating 'difficult' data sets, developing more efficient algorithms to handle data and reduce computation time.</p>\n<h2>What's next for Safeny</h2>\n<p>Expanding the weight scoring algorithm to include more data sets from OpenNYC.\nRelease an android app version of Safeny.\nRelease </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/nyc-open-data\">nyc-open-data</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/sayalvarun/SafeStreet\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/sayalvarun/SafeStreet\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/linkcable/safeny\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/linkcable/safeny\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I analysed the NYC open datasets used for the scoring algorithm and worked on the backend part for mapping NYC Street data to a lat-long grid.", "I worked on the backend algorithm to compute the safest path by augmenting the google shortest path with strategically placed waypoints.", "iOS app and design", ""]], ["Pok\u00e9Face", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Pok\u00e9Face \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/684/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Pok\u00e9Face \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/685/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Pok\u00e9Face \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/686/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>I wanted to learn iOS and I thought this would be a good project to learn the basics. Plus Pokemon!!!</p>\n<h2>What it does</h2>\n<p>The app tracks your face and uses Clarifai to detect your emotions based on your face. Then it places a filter on your face based on that emotion! Currently it works with happiness and neutral in the form of Pikachu and Onix.</p>\n<h2>Challenges I ran into</h2>\n<p>I don't know iOS. LOL</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>It works?</p>\n<h2>What I learned</h2>\n<p>I learned to pick up things Swiftly.</p>\n<h2>What's next for Pok\u00e9Face</h2>\n<p>More emotions, more filters!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xcode\">xcode</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li></ul>\n</div>\n</div>", [""]], ["Beacon", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>A lot of people these days spend a lot of time on their phones. We're always looking to see what our friends are doing. So we figured, why not just go there? Beacon let's you know when a friend is doing something cool nearby so more people can do more cool things together.</p>\n<h2>What it does</h2>\n<p>Beacons allows you to place a marker in a location where you're doing something interesting. You can give your Beacon a title and some tags to describe what you're doing, then when a friend comes within range of the Beacon they'll get a notification on their phone.</p>\n<h2>How we built it</h2>\n<p>On the front-end we are developing apps for Android and iOS that allow you to place new Beacons, see a map of nearby Beacons, and search for Beacons by tags. On the back-end, we have a few RESTful endpoints for our API \\ written in Java. We store our users and Beacons with location information in MongoDB, and we use GeoSpatial queries to find out which Beacons are nearby.</p>\n<h2>Challenges we ran into</h2>\n<p>We ran into some issues getting our AWS instance up and running, as well as it being a constant battle on the mobile development side.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We did create several endpoints for our API and have them hosted on AWS as well as hosting our MongoDB instance on the cloud. Hopefully the mobile apps will be connected soon too!</p>\n<h2>What we learned</h2>\n<p>We learned a bunch of things, including but not limited to: how difficult it is to get a Tomcat server to work properly, that Zach really doesn't like programming in Swift, and that productivity drops severely after 4 am.</p>\n<h2>What's next for Beacon</h2>\n<p>We plan to complete our API and mobile apps so we can get people using it and doing cool stuff as soon as possible! This will include serving push notifications to both the iOS and Android apps regarding nearby Beacons.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ios\">ios</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/objective-c\">objective-c</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/tomcat\">tomcat</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/cdavietei/BeaconIOS\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/cdavietei/BeaconIOS\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/cdavietei/BeaconServer\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/cdavietei/BeaconServer\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/cdavietei/BeaconAndroid\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/cdavietei/BeaconAndroid\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I built the interface between the server and the database. I learned a lot about MongoDB, which actually turned out to be a great choice for our project. I also prepared methods for registering and authenticating users as well as finding beacons by locations and tags.", "I worked on creating the RESTful API backend for the app using Java and the Servlet API in conjunction with Apache Tomcat 9. Additionally  I set up the Amazon Web Services services, such as the Tomcat Server and the MongoDB instance. I was also in charge of making sure that everything could run server side with all the proper dependencies.", "I worked on all of the iOS development. I personally am not a mac nor iPhone user, so I had zero experience in Swift and Objective C. After going so far with swift, I realized what we wanted was nearly impossible with swift so I switched to Objective C and learned a second language.", "I created the Android application using Android Studio, and worked closely with my teammates on having the application interact with the database. I also assisted in the development of the initial idea for our project, such as how it would interact with users and incorporate features that would appeal to a wider audience."]], ["Knock Me Out", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Knock Me Out \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/659/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Knock. Knock. Oh man, you're locked out again, aren't you?\nGetting locked out has happened to the best of us. If for some reason that doesn't apply to you, we salute you. Otherwise, this hack is here for you!</p>\n<h2>How it works!</h2>\n<p>The peep hole in the door is replaced by a camera that's activated when someone rings the bell. The camera captures an image of the person at the door and sends it as an SMS using Twilio to the user indicating someone's visiting them. The user (house owner) in turn can choose to open the door remotely by sending back 'open' to our Twilio number which talks to a stepper motor wired to the doorknob. And voila, your family and friends are no longer locked out, wherever you are. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/go\">go</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag\">sms</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://knockmeout.org\" rel=\"nofollow\" target=\"_blank\" title=\"http://knockmeout.org\">\n<i class=\"ss-icon ss-link\"></i>\n<span>knockmeout.org</span>\n</a></li>\n<li><a href=\"http://github.com/faridasabry2/knockknock\" rel=\"nofollow\" target=\"_blank\" title=\"http://github.com/faridasabry2/knockknock\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I came up with the idea for Knock me out and we implemented this using Twilio and Clarifai's APIs at HackNY", "", "", "", ""]], ["Gather", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Gather \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/644/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>How many times have you been hungry, and you and your friend couldn't reach a mutual agreement on a restaurant? That inspired us to develop Gather, a matchmaking service based off of food preferences.</p>\n<h2>What it does</h2>\n<p>Gather is inspired by the idea that people bond over meals. The app allows users to easily decide on a restaurant or coffee shop together amongst all the choices available. However, it also provides users the option to get out of their comfort zone and meet new friends at the restaurants they love. One of the problems people face now is meeting new people, especially once they are no longer in school or in an environment where such encounters happen often and naturally.</p>\n<h2>How we built it</h2>\n<p>The app was built with objective-c and the UI, UX, and animations were made with Illustrator, Photoshop, and After Effects.</p>\n<h2>What's next for Gather</h2>\n<p>Try to incorporate the Twilio API as a notification center to inform your friends through your contacts that you have the app downloaded. We also wanted to integrate more endpoints from the Foursquare API to the cards.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ios\">ios</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/foursquare\">foursquare</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/objective-c\">objective-c</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/adobe-illustrator\">adobe-illustrator</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/photoshop\">photoshop</a></span></li><li><span class=\"cp-tag\">adobe-aftereffects</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Ripnrip/GatherTeam\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Ripnrip/GatherTeam\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the tinder cards with Xing Hui Lu and helped Caitlyn with the designing the app by choosing the color palette and animations for the UX.", "Supplied animation", "", "", ""]], ["Foodifai", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Foodifai \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/018/datas/gallery.jpg\"/>\n<p>\n<i>iOS: Initial View</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Foodifai \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/022/datas/gallery.jpg\"/>\n<p>\n<i>iOS: Selected Photo</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Foodifai \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/019/datas/gallery.jpg\"/>\n<p>\n<i>iOS: Restaurant Matches</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Foodifai \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/020/datas/gallery.jpg\"/>\n<p>\n<i>iOS: Restaurant Details</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Foodifai \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/021/datas/gallery.jpg\"/>\n<p>\n<i>iOS: Uber Request</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Foodifai \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/030/datas/gallery.jpg\"/>\n<p>\n<i>Web: Photo Submission</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Foodifai \u2013 screenshot 7\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/369/031/datas/gallery.jpg\"/>\n<p>\n<i>Web: Restaurant Matches</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>With the rise of Instagram, photos of food appear everywhere in our social media feeds. Yet, search engines for restaurants have failed to adapt to this rising trend; they require some sort of text description of what you are looking for. We want to bring restaurant search to the modern age by allowing users to find restaurants based on how they see food the most: images.</p>\n<h2>What it does</h2>\n<p>Foodifai allows users to submit a photo either from their library or by taking a new photo. The photo is then analyzed and local restaurant recommendations are presented based on what is in the photo. The user can then request an Uber from within the app to get to where they want to go. Users never have to enter in a single line of text.</p>\n<h2>How we built it</h2>\n<p>We built this project in 2 parts: iOS and web. Both the iOS and web applications utilize the Clarifai and Foursquare API's. The initial photo is sent to the Clarifai food endpoint and the top tags returned from the endpoint are fed into Foursquare. The top results are displayed to the user with some information about the restaurants.</p>\n<p>In addition, the iOS app also utilizes the Button API to allow users to request an Uber from within the app. It automatically provides an ETA and fare estimate from the user's current location.</p>\n<p>The web version was built using a mix of HTML, CSS, and Python while the iOS app was built using Objective-C.</p>\n<h2>Challenges we ran into</h2>\n<p>Throughout the development process, we ran into multiple roadblocks when using the various different API's. Since everyone on our team had very limited experience with JSON prior to the project, we struggled to properly parse the endpoint response files to get the data we needed. This challenge required hours of searching the web, playing around with code, and asking others for help until we finally retrieved what we needed.</p>\n<p>One of the later challenges we faced was with the overall User Experience. Throughout the development process, we were so focused on the functionality that we almost completely neglected the overall UX. With some time left towards the end of the hackathon, we decided to go full throttle with the UX and put our best into it. Even though none of us had extensive design experience prior to today, we ended up not only created a great UX, but also a distinctive one that gave our applications an identity.</p>\n<p>A big challenge for me specifically was spending so much time on a single project. Being that this was my first hackathon, it was tough to sit down for hours at a time and focus on the same project, trying to get every last bug out of my code. But, it was a fantastic experience and the adventure was thrilling to see a fully functional app materialize in such a short amount of time.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Even after all of our hardship with the development process - specifically with using endpoints and JSON - we managed to overcome virtually every obstacle we faced. We managed to integrate a total of 3 separate API's across 2 platforms in less than 24 hours, a feat that we originally considered to be a stretch goal Not only that, but we had ample time to focus on the UI and UX, allowing us to not only make our applications functional, but also easy to use. Our collective effort accomplished far more than we ever thought just 24 hours ago.</p>\n<h2>What we learned</h2>\n<p>Our team was very split in terms of background: 2 of us were familiar with web development while 1 was familiar with iOS and API usage. Through our collective efforts, everyone learned a bit about each other's specialties. We all also flexed our creative muscles and learned more about our specialties. After this 24 hour coding spree, all 3 of us can say that we each know web, iOS, API usage, and JSON far more than before. In fact, all of us can even say that we are now comfortable with using API's.</p>\n<h2>What's next for Foodifai</h2>\n<p>The iOS version is nearly ready for an app store release. There are some minor UI issues that need to be polished prior to release, but it is functionally complete as of now.</p>\n<p>The web version is almost functionally complete, but there are a few more features that need to be implemented, such as the ability to view a greater amount of restaurants and the ability to upload a photo. The overall design also needs to have a few tweaks just to make it easier to use.</p>\n<p>In the future, we expect to increase the overall functionality for both apps. In addition to the information they already display, we would like to display things such as ratings, tips, and possibly OpenTable reservations. There truly aren't any boundaries to what we can do and we hope to create a revolution in the restaurant search industry.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/objective-c\">objective-c</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/shell\">shell</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ruby\">ruby</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/foursquare\">foursquare</a></span></li><li><span class=\"cp-tag\">button</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/jchen2186/Foodifai\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/jchen2186/Foodifai\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the web application of Foodifai, learning how to use the various APIs as well as ensuring that both the front-end and back-end worked.", "", ""]], ["poem-in-your-pocket", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>A random idea inspired by our experiences in elementary school during the month of April which is Poetry Month. </p>\n<h2>What it does</h2>\n<p>Selects a feed from BuzzFeed and a haiku is generated from that feed. You can then text that haiku to yourself or a friend so you can have a poem in your pocket.</p>\n<h2>How we built it</h2>\n<p>Devised an algorithm for generating lines based on parts of speech and syllable count from words derived from sub buzzes. Set up a database. Set up Twillio. Deployed the web app on Heroku.</p>\n<h2>Challenges we ran into</h2>\n<p>Counting syllables and front end development</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Used two APIs. Made poetry. Good team building experience</p>\n<h2>What we learned</h2>\n<p>Web-development, BuzzFeed API. </p>\n<h2>What's next for poem-in-your-pocket</h2>\n<p>Dynamic database. More sensical language semantics. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/psuong/poem-in-your-pocket\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/psuong/poem-in-your-pocket\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://poem-in-your-pocket-psuong.c9users.io/\" rel=\"nofollow\" target=\"_blank\" title=\"https://poem-in-your-pocket-psuong.c9users.io/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>poem-in-your-pocket-psuong.c9users.io</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Some natural language processing and some front end development", "Algorithm for the haiku creation.", "Just look at my commit history. Backend and Frontend development as well as deployment in all seriousness.", "Backend Development"]], ["Lit", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to created something bold, revolutionary, and relevant to today's time. Thus, we created Lit. Lit visualizes check-ins from Swarm using Twitter. Tldr, we get a public tweet that has checked-in on Swarm and used it to visualize their location. Using Lit, you get to see which country, which city, or which place, is truly lit.</p>\n<h2>What it does</h2>\n<p>It visualizes how lit a place is. The more lights a place is, the more lit it is.</p>\n<h2>How We built it</h2>\n<p>Our backend was built is using Node, Express, and Socket.io. We used Jade to render the templates. We also used the Twit Stream API to get public check-ins on Swarm, the Foursquare API to resolve the Swarm IDs we got from the Tweets, and the Google Maps API to visualize the check-ins. It's lit.</p>\n<h2>Challenges I ran into</h2>\n<p>This was not lit. Our main issue was discovering that we could only view check-ins of our friends. However, we hacked around that by using check-ins which were publicly posted on Twitter. Another issue was using the Twit Stream API. It was not lit and difficult to use. This was also our first time using socket.io since we needed it to \"stream\" the (live) data to the front-end. It was challenging, and we asked the awesome Abhi for help. He's a genius (duh). Another issue was Jade. We learned that it was extremely difficult and unintuitive to use, but we made it. Another challenge we ran into was the quota for Foursquare requests, but we made it work! #conquering #our #fear #so #lit</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Incorporating the technologies that were necessary. We had to use a lot of APIs (THREE!!), and trying to understand each of them was quite a challenge. Also rendering all of the live data to the front-end was quite difficult, but we did it after ~4 hours. (Again s/o to Abhi )</p>\n<h2>What I learned</h2>\n<p>Socket.io, Jade, more Node, more Express, APIs, Twitter API documentation is awful, and the Foursquare peeps are great.</p>\n<h2>What's next for Lit</h2>\n<p>Navigating to the most lit location! Also, we want to be able to access more data for increased possibility of finding the most lit space</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/socket-io\">socket.io</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-maps\">google-maps</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/foursquare\">foursquare</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twitter\">twitter</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jade\">jade</a></span></li><li><span class=\"cp-tag\">twit</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/danagilliann/lit\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/danagilliann/lit\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["VoteIt", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"VoteIt \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/838/datas/gallery.jpg\"/>\n<p>\n<i>Setting up an election</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"VoteIt \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/841/datas/gallery.jpg\"/>\n<p>\n<i>Sample Election with Candidates from Foursquare</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"VoteIt \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/368/842/datas/gallery.jpg\"/>\n<p>\n<i>Voting in an election</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>VoteIt</h1>\n<p>VoteIt is an open-source voting application. It provides hook-ins for allowing\nusers to vote on selected elections (where an election could be pertaining to\nanything from a simple vote to a full-scale leadership election).</p>\n<h2>Why make this?</h2>\n<p>Voting systems are still a rarity in the open source world. There are multiple\nlibraries that provide various voting records, but many of them are\nunmaintained. VoteIt is an attempt to implement the Schulze Method, a Condorcet\nMethod, into the Go language, as well as a simple majority (initially) and apply\nit to different scenarios that people can vote on.</p>\n<p>This initial version of VoteIt takes its candidates from a query on Foursquare - the\ntop 5 results are up for election! Who will people pick?</p>\n<h2>Running</h2>\n<p>Requires Go 1.6+ and its various dependencies.</p>\n<p>Install dependencies with <code>go get -u -v github.com/robxu9/voteit</code>, and build\nwith <code>go build</code>. Alternatively, run directly with <code>go run voteit.go</code>.</p>\n<p>You need a Foursquare API ID &amp; Secret for FourSquare access. Set it in the\nenvironment as <code>FOURSQUARE_ID</code> and <code>FOURSQUARE_SECRET</code>.</p>\n<h2>License</h2>\n<p><a href=\"http://robxu9.mit-license.org\" rel=\"nofollow\">MIT licensed</a></p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/go\">go</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/foursquare\">foursquare</a></span></li><li><span class=\"cp-tag\">condorcet</span></li><li><span class=\"cp-tag\">voting</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag\">api</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/robxu9/voteit\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/robxu9/voteit\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"http://spade.robxu9.com:3001/\" rel=\"nofollow\" target=\"_blank\" title=\"http://spade.robxu9.com:3001/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>spade.robxu9.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["More or less everything from top to bottom. Ported the Schulze Method from existing implementations and descriptions, then went on to write a backend and frontend for it (not that it's pretty, mind you, but it works)."]], ["Kazooboard", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Kazoos and Sam Agnew</p>\n<h2>What it does</h2>\n<p>Kazoo music to text </p>\n<p>Higher pitch is higher in the alphabet</p>\n<h2>How I built it</h2>\n<p>Kotlin, Kazoos, and Android SDK</p>\n<h2>Challenges I ran into</h2>\n<p>I had no idea how Fast Fourier Transformations worked</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Getting it to work</p>\n<h2>What I learned</h2>\n<p>Fast Fourier Transformations</p>\n<h2>What's next for Kazooboard</h2>\n<p>Kazooboard will become the dominant form of mobile typing</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/kazoo\">kazoo</a></span></li><li><span class=\"cp-tag\">kotlin</span></li><li><span class=\"cp-tag\">jtransformations</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://myphone.biz\" rel=\"nofollow\" target=\"_blank\" title=\"http://myphone.biz\">\n<i class=\"ss-icon ss-link\"></i>\n<span>myphone.biz</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["txt-a-pizza", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>txt-a-pizza</h1>\n<h3>AI Bot to order pizza via Text Messaging (SMS)</h3>\n<h4>How it works ?</h4>\n<ol>\n<li>Twilio API is used to send messages to the Python app server</li>\n<li>The messages are parsed into Natural Language Entities using the wit.ai API to identify the items, quantity and location to deliver.</li>\n<li>The intended action(delivery/ take away/ confirmation/ cancellation) of the message is identified using a trained model which learns continuously</li>\n<li>Based on the intended actions, the bot responds to the user with corresponding messages to proceed with the order.</li>\n<li>Foursquare API is used to identified the nearby Pizza places based on the location of the user identified from the Twilio API. </li>\n<li>All the NLP data are unstructured JSONs and varies significantly based on different messages and orders. Therefore, MongoDB was used to perform CRUD on orders. </li>\n</ol>\n<h4>Tech Stack</h4>\n<ol>\n<li>wit.ai</li>\n<li>Twilio</li>\n<li>Foursquare</li>\n<li>MongoDB</li>\n<li>Python Flask</li>\n</ol>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/wit-ai\">wit.ai</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/foursquare\">foursquare</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/arvindram03/txt-a-pizza\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/arvindram03/txt-a-pizza\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]]]