[["Machine Learning - First Steps", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Machine Learning - First Steps \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/410/865/datas/gallery.jpg\"/>\n<p>\n<i>Competing for the best Fitness Score. GIF in the description!</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Machine Learning - First Steps \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/410/864/datas/gallery.jpg\"/>\n<p>\n<i>Action shot. They look posed like real dogs!</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Machine Learning - First Steps \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/410/863/datas/gallery.jpg\"/>\n<p>\n<i>Plateaus are where a pup feels comfortable and doesn't want to change, but with a lucky mutation it can overcome that (around gen 92)</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Machine Learning - First Steps \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/410/862/datas/gallery.jpg\"/>\n<p>\n<i>The dogs are simulated accurately using NVIDIA physics engine</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Machine Learning - First Steps \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/410/888/datas/gallery.jpg\"/>\n<p>\n<i>Pups wear colored \"Jerseys\" to indicate their lineage.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Machine Learning - First Steps \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/646/datas/gallery.jpg\"/>\n<p>\n<i>Variations in the dogs per generation and no muscle pairings creates a very interesting result</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>GIFs!!</h2>\n<p><a href=\"http://i.imgur.com/aPoRP5A.gifv\" rel=\"nofollow\">http://i.imgur.com/aPoRP5A.gifv</a>\n<a href=\"http://i.imgur.com/uk81En5.gifv\" rel=\"nofollow\">http://i.imgur.com/uk81En5.gifv</a>\n<a href=\"http://i.imgur.com/jxZ7sZQ.gifv\" rel=\"nofollow\">http://i.imgur.com/jxZ7sZQ.gifv</a> </p>\n<p>Presentation: <a href=\"https://docs.google.com/presentation/d/1uRFV-Djx5rJawTdk-jRuddg3tr48bpYid7b2VJb78BE/edit?usp=sharing\" rel=\"nofollow\">https://docs.google.com/presentation/d/1uRFV-Djx5rJawTdk-jRuddg3tr48bpYid7b2VJb78BE/edit?usp=sharing</a> </p>\n<h2>Inspiration</h2>\n<p>Inspired by videos like this about machine learning, and our fascination with how animals know how to move.\n<a href=\"https://www.youtube.com/watch?v=pgaEE27nsQw\" rel=\"nofollow\">https://www.youtube.com/watch?v=pgaEE27nsQw</a></p>\n<h2>What is it?</h2>\n<p>We created a physically simulated quadruped that uses machine learning to move in a 3d environment. The quadruped, which is modeled after a canine, uses a custom genetic algorithm to learn to walk. We simulated their muscles and evaluated the dogs using a fitness formula, which determines the best dogs that should start the next generation. Each dog's purpose in life (as evaluated by the fitness score) is to walk as far as possible, with bonus points for standing up and keeping their head up high.</p>\n<p>The dogs have instincts, which are rules to speed up the evolutionary process. Their primary instinct is to move the limbs in a random sinusoid pattern, not completely sporadically. They also have an optional instinct to move left and right muscles in sync. The physicality of the dogs includes many physics based bones and joints, which are stimulated by the dog\u2019s brain to move randomly. No premade animations were used and all walking patterns are emergent.</p>\n<h2>Use-cases</h2>\n<p>There are many possible future directions to explore with machine learning. These techniques can be used to make learning robots, optimize processes, and improve self driving vehicles.</p>\n<h2>Future ideas</h2>\n<p>If this project were continued, we would like to have our creatures learn to respond to variables such as seeking out food sources, avoiding obstacles, or adapting to changes in the simulated physical environment. We also had more animals planned than we had time to model but the code works for any animal, even a human or a fish. In the future, we would like to explore different gaits such as trotting or running. Motions such as sitting, standing up, and jumping may require more thorough biomechanical modeling. In the future, our models might have a flexible spine, muscles, and tendons in order to produce more lifelike simulations. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/machine-learning\">machine-learning</a></span></li></ul>\n</div>\n</div>", ["", "", "", ""]], ["ScrapForCash", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>From my time living in the boonies of Iowa I have seen large deposites of scrap metal that I think we could make a website to sell to others.</p>\n<h2>What it does</h2>\n<p>Website that allows owners and buyers to aquire scrap material. </p>\n<h2>How we built it</h2>\n<p>We are going to use a Node.js backend and a Angular.js front end with a MySQL database.</p>\n<h2>Challenges we ran into</h2>\n<h2>Accomplishments that we're proud of</h2>\n<h2>What we learned</h2>\n<h2>What's next for ScrapForCash</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/angular-js\">angular.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/linux\">linux</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["Synesthesia", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>Synesthesia started out as a random idea a couple days before the Hackathon started. The goal was to make a relaxing rhythm game that immersed the player in a different environment, but still required some small degree of input. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li></ul>\n</div>\n</div>", [""]], ["Holothon", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>Work in Progress</p>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Phippen/Holothon\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Phippen/Holothon\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Text adventure of awesomeness", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>When deciding what we wanted to make we came up with the idea of a text adventure like zork. </p>\n<h2>What it does</h2>\n<p>It is a text adventure game in which you try to turn in your homework to your professor before it is too late. </p>\n<h2>How we built it</h2>\n<p>We decided to use java and just build it for the command line.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>The creation of the game was what we were prod of.</p>\n<h2>What we learned</h2>\n<p>We learned about using sound and GUI's</p>\n<h2>What's next for Text adventure of awesomeness</h2>\n<p>Creating graphics and such world be the next step.</p>\n</div>\n</div>", ["", "", ""]], ["oprah", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"oprah \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/433/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>GForge is a revolutionary new git tool suite that allows teams to work seemlessly via web based and desktop based software. GForge aims to replace GitHub, Slack, and Atlassian by combining all those features into one. The problem, is that many users already use GitHub and need a way to transfer their projects to GForge. </p>\n<h2>What it does</h2>\n<p>Transferring the code is easy, but the issues and other project tracking information specific to GitHub is not automatic. That is where oprah comes in. Oprah is a CLA that automatically transfers the code, branches, commits, and issues from GitHub to a specified GForge repository in under a minute. Simply run the command <code>oprah</code> and all your troubles will be over. </p>\n<h2>How we built it</h2>\n<p>Node.js</p>\n<h2>Challenges we ran into</h2>\n<ul>\n<li>GitHub api query per hour limit</li>\n<li>Pagenation in callback functions</li>\n<li>3/4 were new to Node.js</li>\n<li>Authentication with GForge</li>\n<li>Windows/Linux/Mac development environments</li>\n</ul>\n<h2>Accomplishments that we're proud of</h2>\n<ul>\n<li>Completely automated</li>\n<li>Built with npm libraries</li>\n<li>Meeting our MVP well before deadline</li>\n<li>Good software engineering practices</li>\n</ul>\n<h2>What we learned</h2>\n<ul>\n<li>Node.js</li>\n<li>HTTP request protocol</li>\n<li>GitHub, GForge API</li>\n<li>npm </li>\n<li>pagination</li>\n</ul>\n<h2>What's next for Project Oprah</h2>\n<ul>\n<li>Publishing to npm package</li>\n<li>Perfecting pagination</li>\n<li>Expanding scale of both API's</li>\n<li>Code documentation</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://next.gforge.com/#/project/oprah\" rel=\"nofollow\" target=\"_blank\" title=\"https://next.gforge.com/#/project/oprah\">\n<i class=\"ss-icon ss-link\"></i>\n<span>next.gforge.com</span>\n</a></li>\n<li><a href=\"https://github.com/KrashLeviathan/oprah\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/KrashLeviathan/oprah\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the http requests to GitHub to receive the list of issues. Also worked on the conversion of that data into the Jain format needed by gforges API. ", "I worked on the git pulling/pushing and on the command line argument parsing.", "I worked on the CLI input / commands, HTTP requests, and auth.  I learned a lot about GitHub and GForge API's, as well as common practices for auth and pagination.  It was also my first working on a Node CLI!", ""]], ["H.U.S.T.L.E.", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>not blank</p>\n<h2>What it does</h2>\n<h2>How we built it</h2>\n<h2>Challenges we ran into</h2>\n<h2>Accomplishments that we're proud of</h2>\n<h2>What we learned</h2>\n<h2>What's next for H.U.S.T.L.E.</h2>\n</div>\n</div>", ["", ""]], ["Health.IO", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>What it does</h2>\n<p>Health.IO allows hospitol administrators to connect a set of monitors to a server and have it update a database. If the data that is received from the monitor represents a danger zone for the patient in question, it sends an alert to all parties who have subscribed to the patients health. These interested parties can be family, friends, or caretakers. \nAnother feature that we started to integrate is management of patient information and the monitors that are attached.\nLastly, a system for make appointments to meet with a doctor was started.</p>\n<h2>How we built it</h2>\n<p>Node.js was used for the server, with socket.io for the connections to clients. Phone gap was used to create a portable notifier.</p>\n<h2>Challenges we ran into</h2>\n<p>Cordova gave us a great deal of pain. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>The dynamic nature of the patient room announcements and the connection of monitors was a nice accomplishment. \nAlso connecting a socket.io service to a seperate domain, used in the cordova application, felt great to get done.</p>\n<h2>What we learned</h2>\n<p>We learned alot about node.js and cordova</p>\n<h2>What's next for Med.fi</h2>\n<p>Further completion of a appointment scheduler, management of monitors, and a check-in system for appointments are the goals we would love to finish. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/phonegap\">phonegap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/socket-io\">socket.io</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/tagger94/healthio-server\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/tagger94/healthio-server\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/tagger94/healthio\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/tagger94/healthio\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on getting HTML notifications set up for consumers using a web browser.", "", ""]], ["Dronie", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Dronie \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/410/728/datas/gallery.jpg\"/>\n<p>\n<i>Dronie pre-Construction</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Blending the old and the new. Uniting the nostalgia and fun of a Polaroid picture, with the modern drone age.</p>\n<h2>What it does</h2>\n<p>Dronie is a photo taking service, that will use a provided destination specified via web app to fly to a location of your choice. Once at the destination, the drone will snap a photo, print the Polaroid, and drop it before heading home.</p>\n<h2>How we built it</h2>\n<p>Dronie is the culmination of numerous systems acting as one. Starting with the location given to Dronie from the user, the web app then relays the information to the raspberry-pi attached to the drone which plots the course. The drone itself is running an auto-pilot, which we leverage to maintain stability and safety throughout the flight. Once at the destination, the raspberry-pi's attached camera captures a photo, and relays the image to the Polaroid printer over Bluetooth. The print takes roughly 60 seconds, after which the photo falls to the ground where it can be recovered by the user. The raspberry-pi then follows the same flight path back to home.</p>\n<h2>Challenges we ran into</h2>\n<p>With a multitude of separate systems, communication is not always easy. Our biggest challenges came from trying to get all of our devices to speak the same language. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We our proud that we successfully solved the communication issues discussed previously, and that we have a fully functioning, if not crude product.</p>\n<h2>What we learned</h2>\n<p>We learned a lot about working with Amazon servers, JavaScript, and communicating between a raspberry-pi and a web app.</p>\n<h2>What's next for Dronie</h2>\n<p>Since we are not only teammates but also roommates, we see ourselves continuing work on Dronie in the future.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">drone</span></li><li><span class=\"cp-tag\">asw</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li><li><span class=\"cp-tag\">polaroid-printer</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bluetooth\">bluetooth</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["BrainStorm", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<h2>What it does</h2>\n<p>u learnded thinks</p>\n<h2>How we built it</h2>\n<h2>Challenges we ran into</h2>\n<h2>Accomplishments that we're proud of</h2>\n<h2>What we learned</h2>\n<h2>What's next for BrainStorm</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/socket-io\">socket.io</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/react\">react</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/MichaelRupertDev/BrainStorm\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/MichaelRupertDev/BrainStorm\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Performers and Venues Hub", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>To help the community especially local and new bands/performers. In a way helping local venues such as bars and restaurants.</p>\n<h2>What it does</h2>\n<p>Connect performers and venues using our app. Creating a review system that allows performers and venues find their specific needs.</p>\n<h2>How we built it</h2>\n<p>We're unexperienced coders so we use frameworks to create a concept of the app and at the same time learn how to code on Android platform.</p>\n<h2>Challenges we ran into</h2>\n<p>Coding of course, since we're inexperienced. Aside from that, we need to establish user base.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Actually being serious about this project.</p>\n<h2>What we learned</h2>\n<p>Making apps is super hard.</p>\n<h2>What's next for Performers and Venues Hub</h2>\n<p>Honestly no idea because we just started.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">frameworks</span></li></ul>\n</div>\n</div>", ["", "", ""]], ["DestinationGraduation", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We needed an easy way to make our Program of Study!</p>\n<h2>What it does</h2>\n<p>It will make sure that you have all of the required classes to graduate in your plan. It will also validate whether you are planning on taking a class in a semester it is not offered (example: only offered in Spring). It can validate if you are planning to take a class that you have not planned to take the prerequisites for first. It is very helpful if you need to drop a class, move things around for a co-op, etc.</p>\n<h2>How we built it</h2>\n<h2>Challenges we ran into</h2>\n<h2>Accomplishments that we're proud of</h2>\n<h2>What we learned</h2>\n<h2>What's next for DestinationGraduation</h2>\n</div>\n</div>", ["", "", "", ""]], ["NewBot", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>TBA</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">discord</span></li><li><span class=\"cp-tag\">kitten</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n</div>", ["", "", ""]], ["Notestradamus", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Notestradamus \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/375/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We wanted an app that could reduce the hassel of manually selecting and rearranging google calendar times.</p>\n<h2>What it does</h2>\n<p>Organizes your google calendar</p>\n<h2>How we built it</h2>\n<p>We created our app on xdk using cordova, which allowed us to port it to multiple platforms (web, android, etc). </p>\n<h2>Challenges we ran into</h2>\n<p>Oauth 2 was very difficult to use with the google calendar api. We had to try multiple solutions until one worked for manipulating those events. Similarly, we had difficulty combining the large number of components we made.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Made an app with a basic interface and connected to the google api.  We also connected this to a my sql server.</p>\n<h2>What we learned</h2>\n<p>We learned how to make a multiplatform app, and that projects can be bigger than they seem.</p>\n<h2>What's next for Notestradamus</h2>\n<p>We may develop the app on our own time for fun and to see if we can create a successful app on the store.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/apache\">apache</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mysql\">mysql</a></span></li></ul>\n</div>\n</div>", ["Worked on the ui.", "", ""]], ["CarTracker", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>Inspiration</h1>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Obberton13/HISUF16-CarTracker\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Obberton13/HISUF16-CarTracker\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["AllWatch", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/oAEQ9vqnFAA?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"AllWatch \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/352/datas/gallery.jpg\"/>\n<p>\n<i>Preview</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>There are loads of old devices that are no longer good for anything but paperweights. This is a simple solution that gives them a purpose.</p>\n<h2>What it does</h2>\n<p>AllWatch uses the build in camera on a device and then checks to see if there is movement. If it detects movement, it will take and save a preview of that moment.</p>\n<h2>How we built it</h2>\n<p>Using React and javascript, we were able to build a functioning application.</p>\n<h2>Challenges we ran into</h2>\n<p>Accessing a users camera, mobile development, and domain.com were the majority of our problems. Additionally, saving files was complicated as well.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We have a working system that does exactly what it is designed to do, and it does it well. </p>\n<h2>What we learned</h2>\n<p>Entirely client sided apps, </p>\n<h2>What's next for AllWatch</h2>\n<p>Support for more devices, ability to auto export to a stream of users choice, saving preferences, and time schedule</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/react\">react</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sass\">sass</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://www.all-watch.org\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.all-watch.org\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.all-watch.org</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I mainly focused on making the UI look good. This involved taking some of the features Michael was working on and manipulating them to either look or work better for the user.", ""]], ["GForge Chat", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>This uses the GForge Next API to create a chat bot framework to add functionality to the GForge website. This allows users to do some common tasks from chat, such as creating and editing tickets and contacting coworkers. This also connects the chat to other services such as search on stackoverflow and Google Maps.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">rest</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/requests\">requests</a></span></li><li><span class=\"cp-tag\">chat</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-maps\">google-maps</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/stack-overflow\">stack-overflow</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://drive.google.com/file/d/0B67GWSpsSl9Md0ljaHNHTU9mZDQ/view?usp=sharing\" rel=\"nofollow\" target=\"_blank\" title=\"https://drive.google.com/file/d/0B67GWSpsSl9Md0ljaHNHTU9mZDQ/view?usp=sharing\">\n<i class=\"ss-icon ss-link\"></i>\n<span>drive.google.com</span>\n</a></li>\n<li><a href=\"https://github.com/midfield99/GForge_chat_client\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/midfield99/GForge_chat_client\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/midfield99/GForge_chat_client\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/midfield99/GForge_chat_client\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked with my team of innovative coders to implement GForge REST API  to obtain a feature of being able to modify project details and updates via the chat feature. ", "I worked with my amazing team on integrating internal components of GForge REST API with chat client and interfacing other REST platforms like StackExchange API, Google Maps API and Twilio API to our chat bot.", "", "", ""]], ["LyricProf", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/lkXRIDIcJcA?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"LyricProf \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/410/647/datas/gallery.jpg\"/>\n<p>\n<i>Dirty Song Example</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"LyricProf \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/410/648/datas/gallery.jpg\"/>\n<p>\n<i>Clean Song Example</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>LyricProf</h2>\n<p>A web app that checks song lyrics for FCC profanity violations.</p>\n<h2>BackStory</h2>\n<p>My friend works as a radio DJ for KURE at Iowa State University, and mentioned it would be nice to have a faster way of checking a song for FCC violations.\nI thought about it for a long time, then used this hackathon to make it a reality!</p>\n<p>He has since shared this project with his coworkers, and they seemed pretty pumped! It feels pretty cool to make something that directly helps make people's lives easier.</p>\n<h2>Uses</h2>\n<p>This app can be used as intended by <strong>radio DJs</strong>, but it could also be used by <strong>parents</strong> to censor the music they listen to with their children. It could also be used by <strong>students</strong> looking to censor their music selection for a school project.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://www.lyricprof.com\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.lyricprof.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.lyricprof.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["All me, yo"]], ["Runin", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>When starting to run again I find myself wishing I would have running times and distances automatically planned for me so I have one less excuse to not get into shape.</p>\n<h2>What it does</h2>\n<p>This program will take in a goal distance and a date, such as \"I want to run an 8k race on Oct 30th\" and our program will automatically create a training program for you, and will go one step further and find free time in your Google calendar to schedule the runs automatically for you.</p>\n<h2>How we built it</h2>\n<p>We use python as our backend for communicating with Google calendar, and we use java for our front end and training algorithm for easy future mobile deployment.</p>\n<h2>Challenges we ran into</h2>\n<p>When using two separate languages we ran into some difficulty trying to get them to work together. We overcame this by using Bash to run our entire stack in one convenient script.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We finished.</p>\n<h2>What's next for Runin</h2>\n<p>Building a mobile interface and deploying our backend to a server. Also expansion into more customizable options.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/SimKev2/Runin\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/SimKev2/Runin\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["MLH SMACKDOWN RAW", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to see how Clarifai stacked up to Google's Cloud Vision API</p>\n<h2>What it does</h2>\n<p>We compare Google Cloud Vision to Clarify by snapping an image and displaying the first 5 words each API deems relevant, then have users vote on which is a more accurate description of the image.</p>\n<h2>How we built it</h2>\n<p>We used Android as the base, and use the Clarifai and Google Cloud Vision APIs to generate the relevant text.</p>\n<h2>Challenges we ran into</h2>\n<p>Initially we wanted to scan for a search term and compile a word cloud, but there aren't a lot of great image searching APIs</p>\n<h2>Accomplishments that we're proud of</h2>\n<h2>What we learned</h2>\n<h2>What's next for GoogleVsClarifai</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li><li><span class=\"cp-tag\">cloud-vision</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/woodring63/GoogleVsClarifai\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/woodring63/GoogleVsClarifai\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Procrasti", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Partly inspired by my Create Your Own Adventure books and Sarah's interest in the vintage text-based programing, we decided to create an interactive story using text. For the subject matter, we were inspired by our limited college experience as well as the stories we have heard from around campus.</p>\n<h2>What it does</h2>\n<p>The program prints out a story, when it then prompts the user to enter an character, based on a choice. The character imputed determined the outcome, and the better outcome meant the more points you got. The more points you got resulted in your evaluation at the end of the came.</p>\n<h2>How We Build It</h2>\n<p>Python was the language we used, but we pretty much figured out each piece we needed in order to make each individual sections to work.</p>\n<h2>Challenges I We Ran Into</h2>\n<p>Neither of us had ever used python before, so we learned the language in enough time to build and create the functioning project.</p>\n<h2>Accomplishments that We Are Proud of</h2>\n<p>It works.</p>\n<h2>What I learned</h2>\n<p>Not only how a hackathon works, but how to build programs with no guidance or any idea what you are doing. Everyone was helpful in giving us tips that we were clueless about, such as programming platforms and compliers we should us.</p>\n<h2>What's next for Procrasti</h2>\n<p>We'll probably show Procrasti off to our friends, maybe create some other stories or recreate it in another programing language where we can put it on mobile application or graphics.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n</div>", [""]], ["TaggedYourPic (TYP)", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We saw online what Clarifai's API could do and thought that this would be a great opportunity to create something that can be useful to everyone. Large, general photo libraries are annoying and a pain to sort through, so we saw this as an opportunity to automate that process in a way that allows the user to retain most of the control.</p>\n<h2>What it does</h2>\n<p>Allows the user to select a folder of pictures and then sort them into new folders based on characteristics of the pictures.</p>\n<h2>How it works</h2>\n<p>We used Clarifai's API and Python 2.7 to get key words that described each photo the user selected. We then sorted through each word to hide the 'catch all' and the very rare words so that we could display only the hot words for the user. Then, we allowed the user to pick the tags that they want the photos sorted by. After that, the user selects a directory for TaggedYourPic to create folders in for each of the selected tags so we can sort the photos into those folders based on which tag most strongly correlated to each photo according Clarifai's API. </p>\n<h2>Challenges we ran into</h2>\n<p>Figuring out how to sort photos with more than one of the user selected tags into the folder that had the highest probability to be in the photo according to Clarifai's API. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Learning how to use a GUI system in Python. \nProperly sorting each photo into its stronger user chosen tag folder. \nCreating an application that can save people a lot of time. \nThinking of a cool feature using Clarifai's API and getting a version of it up and running.</p>\n<h2>What we learned</h2>\n<p>How to use a Python GUI system. \nHow to teach python to prioritize tags in order to save the user strife.</p>\n<h2>What's next for TaggedYourPic (TYP)</h2>\n<p>Allowing the user to define how they want the tags to be prioritized. \nPerhaps using this application to organize photos into nice slideshows for the user.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/conandoyled/TaggedYourPic\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/conandoyled/TaggedYourPic\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the overall concept and logic, the front end, and some with the backend sorting algorithms.", ""]], ["Rate ISU", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/4xLU60KGX6M?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Rate ISU \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/410/831/datas/gallery.jpg\"/>\n<p>\n<i>AccessPlus</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Rate ISU \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/410/832/datas/gallery.jpg\"/>\n<p>\n<i>AccessPlus</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Rate ISU \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/410/833/datas/gallery.jpg\"/>\n<p>\n<i>Schedule Planner</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Rate ISU \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/410/834/datas/gallery.jpg\"/>\n<p>\n<i>Schedule Planner</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>There's a lack of information about the current professor when registering for classes.</p>\n<h2>What it does</h2>\n<p>Rate ISU will display the professor rating next to it's name on classes.iastate.edu and accessplus.iastate.edu (Schedule). It will also redirect you to the professors page in Rate My Professor to read the review.</p>\n<h2>How we built it</h2>\n<p>We parsed through the HTML source code of both Iowa State's and Rate my Professor websites and extracted the necessary elements.</p>\n<h2>Challenges we ran into</h2>\n<p>Learning JavaScript and using it for the first time.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Making a tool that would facilitate students life when registering for classes.</p>\n<h2>What's next for Rate ISU</h2>\n<p>Promote it and have people at Iowa State use it!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n</div>", ["", "", "", ""]], ["hackReCaptcha", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/z5ptpZJLgPA?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"hackReCaptcha \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/678/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>HACKreCAPTCHA</h1>\n<p>HACKreCAPTCHA is an easy-to-use anti-anti-robot tool to help users solve some ridiculously hard questions generated by reCAPTCHA.</p>\n<p>How HACKreCAPTCHA works?</p>\n<p>The main steps of how it works are as follows: </p>\n<ol>\n<li><p>Capture the images generated by reCAPTCHA; </p></li>\n<li><p>Extract the keyword in the question; </p></li>\n<li><p>Use Thesaurus to find all possible synonyms of that keyword - List synonyms_keyword; </p></li>\n<li><p>Use Clarifai to generate the tags of each images - List tags; </p></li>\n<li><p>Compare List tags with List synonyms_keyword, if there are words from two lists match with each other, the corresponding image will be selected as one of the correct images.</p></li>\n</ol>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/recaptcha\">recaptcha</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/yutingguo/hackReCaptcha\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/yutingguo/hackReCaptcha\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Front-end design; reCAPTCHA API and Thesaurus API; Project documentation and discription.", "", "", ""]], ["medicine prescription website", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>helping people</p>\n<h2>What it does</h2>\n<p>display information</p>\n<h2>How I built it</h2>\n<p>php, sql</p>\n<h2>Challenges I ran into</h2>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<h2>What's next for medicine prescription website</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sql\">sql</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/jiahan8/Hackathon\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/jiahan8/Hackathon\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["MemeMarket", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Can we apply stock pricing techniques to popular memes on r/AdviceAnimals?</p>\n<h2>What it does</h2>\n<p>Through our own formula, we calculate a \"price\" for a meme based on link karma, number of comments, and frequency of it within the top 100 posts within the subreddit. We then store this price and return data in a visual format to the user.</p>\n<h2>How we built it</h2>\n<p>The backend is built in NodeJS, Express, and MongoDB. We query a chain of APIs, including a small Github API, Reddit, and Clarifai for image fetching and comparison. The frontend is built in Angular 2 and PrimeNG and Material for the charts and design.</p>\n<h2>Challenges we ran into</h2>\n<p>-Number of requests to Clarifai\n-Rate of requests to Clarifai\n-Angular CLI working with third party libraries</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>-Delivering a visually pleasing application\n-Creating a sufficiently complicated formula for price calculation</p>\n<h2>What we learned</h2>\n<p>WebApps are straightforward but easy to mess up. NodeJS and MongoDB are great for spinning up simple apps.</p>\n<h2>What's next for MemeMarket</h2>\n<p>Integrate a payment system so users can actually purchase memes to influence the price.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/angular-js\">angular.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/reddit\">reddit</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["Pantri", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Pantri \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/029/datas/gallery.jpg\"/>\n<p>\n<i>Our sick icon</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Pantri \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/031/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Pantri \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/032/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Pantri \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/034/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Pantri \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/057/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We never know what to cook with we what we have!</p>\n<h2>What it does</h2>\n<p>It's an app that tells you what recipes we you can make with the ingredients you have, and helps keep track of all your food.</p>\n<h2>How we built it</h2>\n<p>An android front end talks to a REST server in the cloud (running using Ruby.)</p>\n<h2>Challenges we ran into</h2>\n<p>Classifying ingredients.  Organizing data from Recipes scraped online.  Having a good Android user experience with networking.  Polishing the cooking UI.  Android search widget.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>It works.  It's not that bad actually.</p>\n<h2>What we learned</h2>\n<p>Nothing is as simple as it first seems.  Use time saving API's</p>\n<h2>What's next for Pantri</h2>\n<p>IPO in the Fall of 2017, IPA tomorrow.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ruby\">ruby</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/BenniG123/Pantri\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/BenniG123/Pantri\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Twitch Plays Dungeons & Dragons", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p><strong>Twitch Plays Pokemon</strong> was an international, internet sensation when it first arose years ago. We sat down and thought about what could be something crazy we could have the Twitch chat play and we instantly thought, <em>\"Could we make them play Dungeons &amp; Dragons</em>?\"</p>\n<h2>What it does</h2>\n<p>Twitch Plays Dungeons and Dragons (D&amp;D) reads information from Twitch's built-in chat function and marks votes on how the Twitch Player Character acts.</p>\n<h2>How we built it</h2>\n<p>We built a Java code to construct a GUI that can facilitate the twitch.tv chat. A bot made from pIRCbot reads and interprets messages to gather votes for a democratic experience for the D&amp;D character's next action or decision.</p>\n<h2>Challenges we ran into</h2>\n<p>The implementation of the GUI into the code had proven itself to be the most difficult part of our code. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are excited that we were successfully able to read the Twitch chat and interpret the messages for meaningful data. The code we have written has the opportunity to let thousand of people collectively play on one individual in a D&amp;D campaign.</p>\n<h2>What we learned</h2>\n<p>Not only did we improve on our knowledge of the Java language and object-oriented programming, but we also gathered valuable experience in cooperative programming.</p>\n<h2>What's next for Twitch Plays D&amp;D</h2>\n<p>The immediate goals is to expand on the diversity of options the Twitch chat can make. A long-term goal would be to use the pIRCbot and the vote collection system to allow the Twitch chat to play as the Dungeon Master (DM).</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag\">pircbot</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twitchtv\">twitchtv</a></span></li><li><span class=\"cp-tag\">open-broadcasting-software</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/dsbis/TwitchDnD\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/dsbis/TwitchDnD\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["ISUHackathon16", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>WHAT IT DOES</p>\n<ul>\n<li>Maximize the efficiency of time management with a 2D chart.</li>\n<li>Helps connect current students with the previous academic experiences.</li>\n<li>Has the potential to become a fast and easy research hub for class registration.</li>\n</ul>\n<p>TECHNOLOGIES &amp; CHALLENGES</p>\n<ul>\n<li>Has a huge potential to extend the API library for external databases. </li>\n<li><p>Technologies used: JavaScript, jQuery, Google Visualization API,\nFacebook Comment Plugin, HTML &amp; CSS. </p></li>\n<li><p>Creating a whole new database from the ground up and connect it to the system.\nWe hard coded the sample database base on subjective inputs. </p></li>\n<li><p>Parse the courses\u2019 names and difficulty levels to graph the analysis. \nImplements an array of data structure and string conversion functions. </p></li>\n<li><p>Quantify subjective courses' rankings based on various \npersonal experience from senior students and alumni. </p></li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/actionscript\">actionscript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/markdown\">markdown</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/lendkhoa/ISUHackathon16\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/lendkhoa/ISUHackathon16\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["The Apocolypse", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"The Apocolypse \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/623/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Developement of The Apocolypse</h2>\n<p>After a long, chaotic process of development, we decided to take a simple approach to the final product. It would still be a handheld, but what was originally a crippling weakness (the fact that the only two buttons on the device were basically stuck doing one operation) turned into a fascinating exercise in human psychology.</p>\n<h2>What exactly is it?</h2>\n<p>The idea is simple. On the device's screen you will be told a question, and the only option is to respond \"yes\" or \"no\" (one button for each, naturally). Even if it is truly subject or factually wrong, the answer is ALWAYS yes, for which you will be congratulated by the device as a small vibration will be produced by the inner motor. Conversely, choosing no will always result in the device berating your poor judgment (and no vibrations).</p>\n<h2>Okay, so why do I care?</h2>\n<p>Nobody knows this when picking up the device, however, and this yielded interesting results. Some people messed around with it for several minutes and never realized the game was rigged. Others kept answering honestly on the false hope that just ONE of these times, the answer would be no. Others still just kept pressing the Yes button in a Pavlovian desire to feel that ticklish vibration in their hands. Only a couple people actually called us out on the rigging of the game.</p>\n<h2>That seems pretty cool! But I'm still not convinced...</h2>\n<p>Part of this is probably the choice of questions. The machine asks \"Are you okay?\" or \"Is anything real?\" and the user usually has some kind of emotive response regardless of whether they say Yes or No. It's really the questions that continuously fool someone who isn't already in the loop into thinking their answers have any kind of validity. It is an exercise in true absurdity.</p>\n<h2>I think I get it now. Will we get to see more of this?</h2>\n<p>Obviously, the project was originally intended to be more complex, but the troubles of working with the Arduino and an intended Bluetooth functionality forced us to think differently. The device is a result of the chaos of development, and so the device itself reflects disorder, which, as it turns out, is a fine instrument in messing with peoples' heads, and so we can expand this under-developed genre of human and computer psychology and fascination. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag\">lcd</span></li><li><span class=\"cp-tag\">buttons</span></li><li><span class=\"cp-tag\">wires</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li></ul>\n</div>\n</div>", ["", "", "", ""]], ["Bad Apples Against Humanity", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/iX4p0Bg_ou0?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Cards Against Humanity (CAH) has been a hit among college students. But sometimes you get an itching to remember you're going to burn in hell, but are also lacking a CAH deck. In this predicament we usually would use an online version of CAH. However, all of the existing online CAH games are designed for participants who are physically separate, and thus not really playing together. Thus, the social aspect of being in a circle with nothing but cards is lost. We wanted to provide a digital deck that interacts with its users very similarly to an actual deck of cards by bringing back the social aspect of the original, dead tree version.</p>\n<h2>What it does</h2>\n<p>Each person's phone displays a listing of the cards they can play, and the Card Czar's phone displays the black card. Upon the selection of a white card to play, a phone presents the back of a white card. The player then places their phone, as if it was a face down white card, on the table. Once all white cards are played, the game server shuffles the upside down white cards between the players' phones, such that the Card Czar cannot identify who played which card by phone. Then, all the white cards simultaneously turn over. The Card Czar taps the white card which they like the most. The white cards then return to the phones from which they were played, and displayed with the phone owner's score. The black card moves to another player/phone, and the cycle repeats.</p>\n<h2>How we built it</h2>\n<p>There is static HTML, CSS, and JS served directly to clients through Apache or similar, and a custom game server written in Java. The game server can run multiple lobbies, each with their own set of clients. The client establishes a websocket connection with the game server, which transfers all data between client and server for the remainder of the gaming session. The game server is state based, and thus only executes instructions when invoked by client interaction. The clients listen for state change commands from the server, and in essence act simply as remote viewing ports. The clients have only instantaneous knowledge of what to display, as all logic and data is kept and managed by the game server.</p>\n<h2>Challenges we ran into</h2>\n<p>Handling when a client disconnects or reconnects, which could occur at any time.\nCentering anything on the webpage. CSS. all. the. way.\nIntegration testing. Its difficult to test the client without the server, and vice versa.\nHunting down lots of bugs and logical errors.\nSession management and message routing.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We actually played a full game. It worked and we had fun.\nLewis learned HTML, Javascript, CSS, and Jquery in night.</p>\n<h2>What we learned</h2>\n<p>Use split, not substring.\nDon't be sick for a hackathon. (Pretty sure we'll all be sick on Monday).\nWebsocket!\nLots of Javascript and animations.\nThe magic of friendship.</p>\n<h2>What's next for Bad Apples Against Humanity</h2>\n<p>The code is very buggy and poorly written. However, we like the concept and believe that it has a lot of potential. As of such, we intend to rewrite a lot of the code and keep it online for others to enjoy.</p>\n<h2>Note about links</h2>\n<p>ISU firewalled our domain right after we registered it, so if it doesn't work, go straight to it with the IP.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/websockets\">websockets</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/eclipse\">eclipse</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/photoshop\">photoshop</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/git\">git</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://baah.mobi/\" rel=\"nofollow\" target=\"_blank\" title=\"http://baah.mobi/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>baah.mobi</span>\n</a></li>\n<li><a href=\"http://45.55.137.94/\" rel=\"nofollow\" target=\"_blank\" title=\"http://45.55.137.94/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>45.55.137.94</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I helped in creating the front end of the web page. Used javascript and spoke with the server through websockets. I used HTML and CSS to help create the user interface.", "Spent a good majority of the weekend learning enough of HTML, CSS, and JavaScript and jquery to understand and make suggestions on what our code contained and improvements and logical operands to create condensed code, I than began working on a mobile app to allow for better client side retention to the server and for a qr reader to allow others to join easier.", "I created the server backend in Java. It spoke with the clients' javascript through websockets. All game rooms are purely event based, and thus only consume CPU when work is guaranteed. I had many challenges with synchronizing state, along with storing and routing data in an organized manner.", "I worked with Javascript more than I ever had before. Using jQuery, I animated a lot of the user interface and navigation, and styled the GUI with CSS. Through Javascript, I interacted with the server using web sockets and traded information. Because of this, I had to write a sizable amount of logic in the front end;"]], ["WebGL Wrapper for JavaScript", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"WebGL Wrapper for JavaScript \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/126/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<ul>\n<li>Computations with GPUs are fast.</li>\n<li>Why don't we just use GPU when we have huge and heavy computation tasks.</li>\n</ul>\n<h2>What it does</h2>\n<ul>\n<li>Converts data to GL texture.</li>\n<li>Compiles mathematical JavaScript functions to GLSL.</li>\n<li>Runs the function on GPU using the texture.</li>\n<li>It's really promising, especially for scientific computation applications.</li>\n</ul>\n<h2>How I built it</h2>\n<ul>\n<li>Handled the WegGL stuff with JavaScript</li>\n<li>Used igloo.js to make things faster.</li>\n<li>Coded a script in PHP to transform JS functions to GL Shading Language functions to use with fragment shader.</li>\n<li>Used jquery for interface.</li>\n</ul>\n<h2>Challenges I ran into</h2>\n<ul>\n<li>It wasn't easy to transform a JS code to GL Shading Language.</li>\n<li>Even some functions under JavaScript's Math doesn't have counterpart in GLSL, needed to implement some of them.</li>\n<li>The base framework that I working with(igloo.js) did not have support for some datatypes that I needed to use, so I needed to change the source code of it some.</li>\n<li>Since textures and pixels can store limited number of bits, it wasn't easy to make this work with big numbers, I overcame this problem with some mathematical tricks.</li>\n<li>Still have some limits on size of numbers(as bits) because of the nature of shaders and textures.</li>\n</ul>\n<h2>Accomplishments that I'm proud of</h2>\n<ul>\n<li>I had a normalized precipitation model with discharge from Iowa Flood Center. According to my benchmarks, it calculates an area's discharge with size of <code>1024*1024</code>, 3 times faster than vanilla JS on V8 engine.</li>\n</ul>\n<h2>What I learned</h2>\n<ul>\n<li>How to use fragment shaders.</li>\n<li>Computation with WebGL</li>\n<li>GL Shading Language</li>\n</ul>\n<h2>What's next for WebGL Wrapper for JavaScript</h2>\n<ul>\n<li>Some extra built-in functions would do this project better.</li>\n<li>I may develop a framework to deal with more complex computation tasks with for instance computation priorities etc.</li>\n</ul>\n<h2>Notes,</h2>\n<ul>\n<li>Be sure that your browser supports WebGL.</li>\n<li>It's tested with Google Chrome, and best works on Chrome so far.</li>\n<li>If wanted to run locally, make sure you have php installed and configured.</li>\n<li>You can see your JS code's compiled version to GLSL by using web browser console.</li>\n<li>Computation results should be printed to screen within a few seconds after you run the code.</li>\n<li>It solves 1024*1024 texture default, even you gave only 1 pair of numbers as data.</li>\n<li>Sample result can be seen in Image Gallery.</li>\n<li>Speed increase can be clearly seen with large amounts of data.</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/webgl\">webgl</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/apache\">apache</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/glsl\">glsl</a></span></li><li><span class=\"cp-tag\">igloo.js</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://webgl-wrapper.herokuapp.com\" rel=\"nofollow\" target=\"_blank\" title=\"https://webgl-wrapper.herokuapp.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>webgl-wrapper.herokuapp.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Aye Aye Caption", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/JJpSgPzFsyo?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Aye Aye Caption \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/109/datas/gallery.jpg\"/>\n<p>\n<i>Home Page after taking picture</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Aye Aye Caption \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/110/datas/gallery.jpg\"/>\n<p>\n<i>Generated Meme!</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Aye Aye Caption \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/139/datas/gallery.jpg\"/>\n<p>\n<i>Group Pic!</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Memes are all around us, so we wanted to give back to the meme community, and let everyone be memes!</p>\n<h2>What it does</h2>\n<p>Aye Aye Caption allows people to take pictures and turn them into memes.</p>\n<h2>How?</h2>\n<p>We built it using react-native, so we have a functioning ios and android app. We also have a node backend that is deployed on heroku for processing information from the picture. Our db is mongodb.</p>\n<h2>Challenges</h2>\n<p>React native is still in its infancy, so it was a little bumpier than we would have liked. </p>\n<h2>Accomplishments</h2>\n<p>We created something that people could use, which is pretty neat. Also, giving back to the memers and the dreamers is a bonus!</p>\n<h2>Learned</h2>\n<p>React native, development mobile applications, clarifai api, deploying to heroku, mongodb, express, clarifai api!</p>\n<h2>What's next?!?</h2>\n<p>Moar Social Media Support! (Twitter, Insta, Reddit, the world), achievements, google play / apple store release, video support, more memes and airhorn.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/react\">react</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/react-native\">react-native</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/heroku\">heroku</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/love\">love</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/JeffHask/HackISUFall2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/JeffHask/HackISUFall2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/nischayv/HackISUFall2016Server\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/nischayv/HackISUFall2016Server\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Excuser", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We were inspired by a love for fun and an interest in using APIs more extensively. </p>\n<h2>What it does</h2>\n<p>The website gives you an excuse personalized by your location and recent news event</p>\n<h2>How we built it</h2>\n<h2>Challenges we ran into</h2>\n<p>We were initially going to build an excuse maker that referenced local news stories. We were having difficulty finding an API that could accurately pinpoint news by specific location, so we changed tactics.  </p>\n<p>Chris handled most of the parsing, and he did a wonderful job handling the difficult components.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Successfully using an API! </p>\n<h2>What we learned</h2>\n<p>It is easy to bite off more than you can chew, but even if you do get a little ambitious, you can learn a lot from the experience.</p>\n<h2>What's next for Excuser</h2>\n<p>We were extremely close to implementing random images for the user to select as an inspiration for their excuse. We are in the process of using the Clarifai API to generate tag words for those random images and use the most popular result as the keyword for our news search.  </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/eteters/excuser.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/eteters/excuser.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["prep4.tech", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"prep4.tech \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/270/datas/gallery.jpg\"/>\n<p>\n<i>Scheduling an interview</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"prep4.tech \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/271/datas/gallery.jpg\"/>\n<p>\n<i>Home</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"prep4.tech \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/419/datas/gallery.jpg\"/>\n<p>\n<i>Interviewing!</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"prep4.tech \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/510/datas/gallery.jpg\"/>\n<p>\n<i>Providing feedback</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We have all had big interviews, or have big interviews coming up. We know what it's like to get shaky and nervous, and to stumble over your words in an interview. </p>\n<h2>What it does</h2>\n<p>Prep4tech helps drastically reduce that nervous anxiety by pairing you with people from anywhere in the world, at an appropriate skill level, to practice your technical interviewing skills. By practicing with others, you can grow more comfortable thinking on the spot and verbalizing your thought process - two of the most fundamental skills to have in an interview situation.</p>\n<h2>How we built it</h2>\n<p>We built Prep4tech in node hosted on AWS. We built real-time code collaboration and video streaming components in react to make the interview process seamless and painless.</p>\n<h2>Challenges we ran into</h2>\n<p>Developing a scalable application with realtime video and data streaming proved to be quite the process! </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Not only did we finish the goal we set out to achieve, we made a product that our peers can use to become better programmers and communicators. </p>\n<h2>What we learned</h2>\n<p>Hackathons are always a great learning experience. This year we learned how to work especially well together as a team, contributing a total of just over 210 commits in 36 hours! Beyond that, we spent a lot of time learning about real time communication, furthered our knowledge of the AWS solution suite, and all of the new features of ES6.</p>\n<h2>What's next for prep4.tech</h2>\n<p>We plan to continue polishing prep4tech and adding features over the coming weeks, preparing for a full fledged release by the end of the year to help our peers secure full time positions and internships!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/react\">react</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-ec2\">amazon-ec2</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/webrtc\">webrtc</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://prep4.tech\" rel=\"nofollow\" target=\"_blank\" title=\"https://prep4.tech\">\n<i class=\"ss-icon ss-link\"></i>\n<span>prep4.tech</span>\n</a></li>\n<li><a href=\"https://github.com/Mrparkers/hackisu-fall-16\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Mrparkers/hackisu-fall-16\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Front End: Javascript, ReactJS, Semantic-UI, SASS", "", "", ""]], ["Amputee Mouse", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Amputee Mouse \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/193/datas/gallery.jpg\"/>\n<p>\n<i>The mouse on a person in use</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Amputee Mouse \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/194/datas/gallery.jpg\"/>\n<p>\n<i>The mouse arm band</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Amputee Mouse \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/195/datas/gallery.jpg\"/>\n<p>\n<i>The overall setup</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Amputee Mouse \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/192/datas/gallery.jpg\"/>\n<p>\n<i>The Edison-Arduino combo</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration:</h2>\n<p>One of our team members has a cousin who is missing part of her arm. This was to work as a concept specifically for people with similar limb loss but for one fifth the price of other products on the market.</p>\n<h2>What it does:</h2>\n<p>The Amputee Mouse acts exactly like a mouse would for a normal computer but does not require a hand to operate.</p>\n<h2>How we built it:</h2>\n<p>A lot of trial and error</p>\n<h2>Challenges we ran into:</h2>\n<p>Using C++ to control the software side of the project</p>\n<h2>Accomplishments that we're proud of:</h2>\n<p>Finishing the project within the allotted time</p>\n<h2>What we learned:</h2>\n<p>A lot about python and Arduinos </p>\n<h2>What's next for Amputee Mouse:</h2>\n<p>We would like to continue working on this project with the IEEE club at ISU to create a full prototype and test it in the field.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li><li><span class=\"cp-tag\">edision</span></li></ul>\n</div>\n</div>", ["", "", "", ""]], ["Holographic Zombie Survival Game", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/lzHw-h_Nvlw?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n</ul> </div>\n<div>\n<h2><strong>Inspiration</strong></h2>\n<p>Microsoft's HoloLens brought the augmented reality to a whole new level. Using the functionalities it provides alongside with the Unity Technical Preview and it's rich asset store, many educational and research-focused products can be developed.</p>\n<h2><strong>What it does</strong></h2>\n<p>Even though I started working towards research-oriented ideas to solve or facilitate real-life problems, unfortunately this project turned out to be yet another zombie survival game, this time however, they are in your home, work, or wherever you want them to be. The reason for this change of plan is that building complex solutions with a whole new platform in just one and a half days, is simply not possible. Thanks to the some of the zombie designs in the Unity's asset store, I was able to do simple survival game with minimal AI, enough to demonstrate HoloLens' capabilities.</p>\n<h2><strong>Challenges I ran into</strong></h2>\n<p>More errors than I count... Very limited amount of guidance for HoloLens on the internet. I could only completed around %40 percent of he things I was planning for the game, due to lack of resources on the internet and the obvious time limitation for debugging.</p>\n<h2><strong>Accomplishments that I'm proud of</strong></h2>\n<p>Didn't sleep for 2 consecutive days and I'm happy to see some results.</p>\n<h2><strong>What I learned</strong></h2>\n<p>Looking into the eyes and teeth of a human-sized zombie that stands right in front of you, and 'kindly' trying to eat you, is a little bit more creepy than I thought it would be.</p>\n<h2><strong>What's next for Holographic Zombie Survival Game</strong></h2>\n<ul>\n<li>Gun, shooting animation, shooting sound</li>\n<li>Smarter zombies or enemies</li>\n<li>Modeling the room before playing so that the zombies fit the real-world better. </li>\n</ul>\n<p>Note: Zombie designs are not belong to me.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/microsoft-hololens\">microsoft-hololens</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/visual-studio\">visual-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li></ul>\n</div>\n</div>", [""]], ["ourState", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<h2>What it does</h2>\n<h2>How we built it</h2>\n<h2>Challenges we ran into</h2>\n<h2>Accomplishments that we're proud of</h2>\n<h2>What we learned</h2>\n<h2>What's next for ourState</h2>\n</div>\n</div>", ["", "", ""]], ["Hello Math", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/HXI6-hB_Bo4?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Initially, we wanted to connect Amazon Echo with Facebook Messenger. We found that to be a bit tricky with Facebook's strict API rules. Instead, we wanted to make an easy serach solution on Wolfram Alpha.</p>\n<h2>What it does</h2>\n<p>You may prompt your Amazon Echo and search the Wolfram Alpha computational engine.</p>\n<h2>How we built it</h2>\n<p>We used Amazon Web services along with the Amazon Developer Portal to create new skills, or commands, for Alexa (Amazon Echo). Using the Developer Portal allowed us to create sample utterances that Alexa could recognize as our commands. With Amazon Web services, we uploaded code to service the requests sent from Alexa.\nUsing Wolfram Alpha's search engine API in Java, we fetch results from Wolfram and return them into speech.</p>\n<h2>Challenges we ran into</h2>\n<p>Wolfram Alpha's API only allows those who register for an AppID. The problem was, we didn't have an AppID until the start of this idea at HackISU. Each AppID takes 24 hours to fully register. We were not able to test code written until Sunday </p>\n<h2>What we learned</h2>\n<ul>\n<li>Register for API's sooner, anticipating delay.</li>\n<li>Javascript/jQuery</li>\n<li>Amazon Web services, specifically AWS Lambda</li>\n<li>Amazon Development Portal, specifically Alexa Console</li>\n</ul>\n<h2>What's next for Echo UNLIMITED</h2>\n<ul>\n<li>Simplify queries for unique searches</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-alexa\">amazon-alexa</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/wolfram-technologies\">wolfram-technologies</a></span></li></ul>\n</div>\n</div>", ["I worked on the project website using HTML/CSS and jQuery.", ""]], ["GamePlay", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Have you ever wished you could go and meet people out on the street to play a sport, but never had the chance?</h2>\n<h2>What it does</h2>\n<p>GamePlay is an opportunity for you to find someone who wants to play the same sport as you and wants to find a matching location and time. </p>\n<h2>How we built it</h2>\n<h2>Challenges we ran into</h2>\n<h2>Accomplishments that we're proud of</h2>\n<h2>What we learned</h2>\n<h2>What's next for GamePlay</h2>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/gcttong/testing\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/gcttong/testing\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["The Cantor Programming Language", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<div class=\"alert-box alert\">\n        This image is currently processing. Please be patient...\n      </div>\n<img alt=\"The Cantor Programming Language \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"https://devpost-challengepost.netdna-ssl.com/assets/defaults/software-d4334efb72013df43784baffede9d379.gif\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>Follow me on github!: <a href=\"https://github.com/vtomole\" rel=\"nofollow\">https://github.com/vtomole</a></p>\n<h2>Inspiration</h2>\n<p>Set Theory is the foundation of mathematics. It is the foundation for Zermelo-Fraenkel axioms(ZFC), The axioms are the 9 rules that are used to build up on all of mathematics. If a language can be created that can model these axioms, then that language could theoretically be used to model all of mathematics (superficially, without dealing with the concept of infinity)</p>\n<h2>What it does</h2>\n<p>It defines the basic properties of sets, such as union,intersection, set difference, symmetric difference, and power set.</p>\n<h2>How I built it</h2>\n<p>Common Lisp.</p>\n<h2>Challenges I ran into</h2>\n<p>I ran into great difficulty trying to define the cantor-product, which is a necessary function for my language. I struggled a bit on defining the power set too, but thank you stack-overflow!</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I am proud that I was able to accomplish this my myself.</p>\n<h2>What I learned</h2>\n<p>I learned how to build a tiny toy compiler that generated Common Lisp code. I've never put so much effort into coding 3 lines in my life, it was worth it.</p>\n<h2>What's next for The Cantor Programming Language</h2>\n<p>Now that the foundations are set. I can then move on to defining real numbers. I can use the functions to define Set Theory functions (the relation between the input and output of two sets). This programming language is not general, so it would be great to have it work on file/io. The main goal is build a Turing machine with it to prove that it's Turing\nComplete. I also need to create a syntax for it, since it doesn't have any.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">common-lisp</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/vtomole/cantor\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/vtomole/cantor\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on extending a programming language so that I can embed the one that I designed into it. "]], ["CollegeCredit", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"CollegeCredit \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/448/datas/gallery.jpg\"/>\n<p>\n<i>a screenshot of our webpage</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We each had to undergo this process ourselves, and felt that college support was severely lacking.</p>\n<h2>What it does</h2>\n<p>It tests whether or not a class at a community college will transfer credit to other colleges.</p>\n<h2>How we built it</h2>\n<p>We built a website in HTML and utilized JavaScript to create action boxes to retrieve the user's input, and determine if the user will be able to transfer to the colleges in question with their college credit. Finally, we dressed the site up with CSS.</p>\n<h2>Challenges we ran into</h2>\n<p>After some difficulty getting a hold of ISU's department of admission, we were informed that Iowa State has implemented its own solution, generated with the school's data. After much debate our team decided to support multiple colleges simultaneously, for comparing results across several schools.</p>\n<p>We also ran into problems establishing a live website. Unfortunately, ISU's network quarantines all sites less than 24 hours old. We circumvented this by utilizing GitHub pages, but this too was quarantined several minutes later. To out chagrin, the original site, <a href=\"http://www.collegecreditproject.com\" rel=\"nofollow\">www.collegecreditproject.com</a> is still quarantined, even after more than 24 hours have passed.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Our simple method of adding or removing target colleges functions well, while remaining user-friendly.</p>\n<h2>What we learned</h2>\n<p>Our team members learned firsthand the difficulties and virtues of group projects. As freshmen this year, we each had prior experience in different languages, and none in large projects like the ISU Hackathon. By working together and discussing our plans, we learned about delegation, cooperation, and the virtue of a repository on GitHub! We also - as any group will - experienced difficulties in the group process, but managed to overcome them.</p>\n<h2>What's next for CollegeCredit</h2>\n<p>We would like to continue our work with data from multiple schools, and prioritize the user's experience rather than individual college agendas.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n</div>", ["As the individual to suggest this project, I was placed in charge of managing our workload. After getting the ball rolling by writing up the first iteration of our HTML webpage, I continued to actively distribute tasks to team members, avoiding conflicts and work wasted on replicated code.", "I worked on almost all of the JavaScript. I fixed some of the deprecated/obsolete HTML.", "", ""]], ["Hackathon the Game", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/iN1ZX7LXbJ0?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to tell the story of our first time at a hackathon</p>\n<h2>What it does</h2>\n<p>Tells the story of our experience at our first hackathon</p>\n<h2>How we built it</h2>\n<p>We built individual mini games about our experiences and linked them together</p>\n<h2>Challenges we ran into</h2>\n<p>Unity handles collisions strangely, tackling that was a huge challenge.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Completing a project that we were not sure would be feasible.</p>\n<h2>What we learned</h2>\n<p>Planning is a huge requirement when working in a team of four people, and having experience in the tools you are using is a huge benefit.</p>\n<h2>What's next for Hackathon the Game</h2>\n<h1>Hackathon the Game:</h1>\n<h3>The 8-bit 2d VR Experience:</h3>\n<h6>The reHackening</h6>\n</div>\n</div>", ["", "", "", ""]], ["FountainView", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"FountainView \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/325/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We saw a YouTube video of an art project that used high speed water valves and strobe lights to make water seem like it was flowing backwards.</p>\n<h2>What it does</h2>\n<p>We created 8 high speed water valves out of G2 pens and automotive relays. Embedded software was written for a TI CC3200 ARM M4 wireless microcontroller that switches the valves with millisecond precision to draw images with the water drops.</p>\n<h2>How we built it</h2>\n<p>We used Pilot G2 pens, relays, and various plumbing equipment to create 8 high speed water valves. A TI CC3200 ARM M4 controls each solenoid through H-bridge driver circuitry. The software abstracts away the difficult timing details and presents a very simple API that can be used to create images and animations.</p>\n<h2>Challenges we ran into</h2>\n<p>It was very difficult to create working high-speed water valves. All four of us spent the majority of our time just trying to make the water valves work.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>The software was a huge success and works very well.</p>\n<h2>What we learned</h2>\n<p>It would have been much easier to just buy premade water valves.</p>\n<h2>What's next for FountainView</h2>\n<p>The CC3200 has WiFi, and we'd like to give it a sweet web interface.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c\">c</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/EricMiddleton1/FountainView\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/EricMiddleton1/FountainView\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["PocketWatch", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"PocketWatch \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/280/datas/gallery.jpg\"/>\n<p>\n<i>Event List - Desktop/Web</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"PocketWatch \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/281/datas/gallery.jpg\"/>\n<p>\n<i>TaskList - Desktop/Web</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"PocketWatch \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/282/datas/gallery.jpg\"/>\n<p>\n<i>Task List - Mobile</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"PocketWatch \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/283/datas/gallery.jpg\"/>\n<p>\n<i>Task List - Desktop/Web</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"PocketWatch \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/284/datas/gallery.jpg\"/>\n<p>\n<i>Account Settings - Mobile</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"PocketWatch \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/285/datas/gallery.jpg\"/>\n<p>\n<i>Event List - Mobile</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Bri is a very detail oriented person. Her schedule planning consists of her writing down a list of tasks and checking them off as they get done. She decided it would be so much easier if her phone notified her when she had a gap in her calendar and that she had time to work on one of her top priority tasks rather than her having to schedule that herself.</p>\n<h2>What it does</h2>\n<p>It will help you schedule your tasks when there is availability on your calendar!</p>\n<h2>How we built it</h2>\n<p>The backend is in Node.js and MySQL. The Android and IOS apps were build through Ionic which builds on top of Cordova. The desktop app was built mostly with Node.js, Ionic and HTML. We also used some css skills to make it look prettier!</p>\n<h2>Challenges we ran into</h2>\n<p>Getting the phone apps and desktop apps to communicate properly and then getting those to communicate with the servers.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Learning Node.js, Ionic and having it as multi-platform.</p>\n<h2>What we learned</h2>\n<p>That it is important to plan the features of the project within the time scope.</p>\n<h2>What's next for PocketWatch</h2>\n<p>Adding features such as time buffers, adding events to the calendar, etc.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/apache\">apache</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ionic\">ionic</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mysql\">mysql</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://ticktasktock.com\" rel=\"nofollow\" target=\"_blank\" title=\"https://ticktasktock.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>ticktasktock.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Paintifai", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Paintifai \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/157/datas/gallery.jpg\"/>\n<p>\n<i>Logo</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>Our website uses the Clarifai API to pull the most prominent colors found on an image and display them on the screen. Additionally, it gives a general name for each color, as well as a hex value. Along with that, there is a link with each color that goes to the Pantone for it, so that they can easily find paint to match the color.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/annie-hua/Paintifai\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/annie-hua/Paintifai\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Lightning Chemistry", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Lightning Chemistry \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/382/datas/gallery.jpg\"/>\n<p>\n<i>LightningChemistryLogo</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration - for a software engineering class (SE 185) at Iowa State University an online textbook is used called zybooks by zyante that is more of an integrated web learning environment. It uses a combination of reading passages, multiple choice, animated graphics, and an IDE that checks output to teach the programming language C. As a programmer, chemistry is not always a strong suit and with taking it simultaneously with the course SE 185, it made sense to develop something that would be an aide in the class.</h2>\n<h2>What it does - This program begins with a foundation chapter, learning significant figures. It combines reading quizzes to check your understanding by randomly generating numbers for practice problems. You can complete an infinite number of practice problems that will be different each time and explain the answer behind it.</h2>\n<h2>How we built it - Using Xcode and Apple's programming language Swift. We created plain text descriptions of algorithms used in chemistry and implemented them in our code.</h2>\n<h2>Challenges we ran into - Trying to do too much at once, learning Swift, debugging, app crashing -- essentially there were a lot of challenges we ran into, but were able to overcome them and make a running app :)</h2>\n<h2>Accomplishments that we're proud of - We are most proud of the fact that coming into hackathon we had 0 to little knowledge of swift and throughout the course of the weekend we were able to utilize the internet and the collaboration with the mentors from several different sponsors to make something great!</h2>\n<h2>What we learned - We learned a lot about teamwork, setting reasonable goals: Do we want it, do we need it, or is it  cool? , utilizing internet resources to learn about a programming language, debugging skills increased significantly, networking skills, tons of  cool info about our sponsors and attending companies!</h2>\n<h2>What's next for Lightning Chemistry -- Lightning Chemistry started with an important foundation -- significant figures. What's to come next is vocabulary readings and quizzes, chemical nomenclature test (naming of compounds), periodic table , rules of ionization -- essentially more of the fundamentals of chemistry, and eventually really getting into the various calculations!</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xcode\">xcode</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ios\">ios</a></span></li></ul>\n</div>\n</div>", ["I wrote pseudocode algorithms for our data manipulation and computation and helped to test and debug the code generated from them. I also assisted in preraring and generating the teaching content in the app.", "", "", "", ""]], ["A Game of Rhythm and Light", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Much like popular game franchises Guitar Hero and Rock Band, Rhythm based games are a lot of fun.  Using the power of modern micro-controllers, we can condense the whole system down to a comfortable desktop size.</p>\n<h2>What it does</h2>\n<p>Lights appear in time with a song being played on speakers.  When the lights reach a marked spot on our _ Play Tube _, the corresponding frequency is played on the speaker and a certain touch sensor expects to be pressed.  Your accuracy in pressing the correct sensor at the correct time correlates to the award you receive in the form of up to 50 points per note.</p>\n<h2>How we built it</h2>\n<p>The focus of play is a _ Play Tube _ consisting of five meters of _ Adafruit Neopixel _ Light Strip wrapped around a tall cylinder.  The cylinder is slightly augmented in shape to create a flatter viewing surface.  The lights are controlled by an Arduino 101 controller with a Grove Base Shield with 4 Capacitive touch sensors.  A PWM output pin uses a damper circuit and a 3.5mm jack equivalent to send audio frequencies straight to any set of speakers.  The entire system is powered by a 5V 12A Power Supply to a wall outlet.  The song is a custom 8-bit rendition of Still Alive by Jonathan Coulton, and is represented within the Arduino's program as three lists of Note Frequencies, Note Lengths, and corresponding game column respectively.</p>\n<h2>Challenges we ran into</h2>\n<p>After the majority of development being complete, an unobserved electrical circumstance caused the _ Play Tube _ to be completely unresponsive.  This caused an urgent reorganization and strategizing on how to otherwise represent the same information with extra parts on hand.  Luckily with some extra single LEDs and some reprogramming, we were able to show a comparison between the notes you play and the expected notes of the song.  With the new LEDs being powered through the Arduino and not directly from the power supply, more current than that provided by a computer by USB connection is required.  Unfortunately the Input voltage pins on our borrowed Arduino 101 are fried, yet fortunately we have  several Arduino Unos available.  Due to the downgrade, the entire program required more memory than an Uno contains, thus a design involving two Unos working in tandem was implemented and the functions of the program were divided evenly among the boards.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We accomplished more with the Arduino framework than any of us had done before.  We implemented not only input, but output in simultaneously visual and auditory mediums to create an interactive and exciting activity with a lot of room for growth.  Nothing makes you search for your own motivation more than having the entire focal point of 60 man-hours of work in the making go entirely out of commission.  Despite this dizzying setback we were able to bounce back and push to create an entirely novel way of interfacing visually with the player in only a fraction of our 36 hour build.</p>\n<h2>What we learned</h2>\n<p>We learned a lot about finding innovative ways to apply physical components.  With code, you can create, destroy, and change whatever you want, whereas with components, you can only apply.  The possibilities are near endless, but require an innovative mind to use them in a way that accomplishes what seemed impossible with the individual parts.</p>\n<h2>What's next for A Game of Rhythm and Light</h2>\n<p>Applying Addressable LED lights has a lot of potential, and with a repaired or replaced _ Play Tube _, and additional songs, A Game of Rhythm and Light could be a cool desktop activity or DIY project for any Tech Junkie.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://drive.google.com/file/d/0B3KhRqLF2rcvSjlJVXg5ZkNMQlk/view?usp=sharing\" rel=\"nofollow\" target=\"_blank\" title=\"https://drive.google.com/file/d/0B3KhRqLF2rcvSjlJVXg5ZkNMQlk/view?usp=sharing\">\n<i class=\"ss-icon ss-link\"></i>\n<span>drive.google.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I found how to cause the arduino to produce sound. To do this I used the tone function populated with each notes frequency and the time between each note measured in eigth notes. I found the pitch and duration from Sebastian Wolff's arrangement of Still Alive. I also chose which column on the _Play Tube_ would send the note down to give the feel of playing a piano with relatively higher frequency notes being to the right of notes near by in the song.", "", ""]], ["Talk Lock", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/sk_GA9v4_6Q?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Talk Lock \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/463/datas/gallery.jpg\"/>\n<p>\n<i>team member 1</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Talk Lock \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/471/datas/gallery.jpg\"/>\n<p>\n<i>team member 2</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Talk Lock \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/472/datas/gallery.jpg\"/>\n<p>\n<i>team member 3</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Talk Lock \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/412/479/datas/gallery.jpg\"/>\n<p>\n<i>i love programming</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to find a way to incorporate the Amazon Echo more seamlessly into everyday life. Then we thought of how outdated the physical key system is and decided to have our own try at modernizing it.</p>\n<h2>What it does</h2>\n<p>With Talk Lock, you are able to simulate unlocking a door by giving a passcode. As a user, you are able to preset one of two modes - <em>password mode</em>, which simply prompts you for the password, or the fun and flirty <em>lyric mode</em>, which tosses a random song at you and expects you to complete the missing lyric. With password mode, it is also possible to change the current password after confirming the old password.</p>\n<h2>How we built it</h2>\n<p>We focused our design around the Amazon Echo. To get our skill up and running, we made a Lambda function to handle the skill-specific functionality. For the speech input, suggests utterances and answers were set in the skill building interface Amazon provides in its Developer Console.</p>\n<h2>Challenges we ran into</h2>\n<p>Originally we had wanted to integrate with a physical locking mechanism. However, we developed the idea for this project rather late in the course of the hackathon and had limited hardware available. Unfortunately, the Spark Core that we rented out was unable to connect to any of the Wi-Fi networks securely, and as a result we were unable to implement this feature.</p>\n<p>Additionally, our team has a wide range of experience levels, two of us being seniors in ECE, one a biomedical engineer, and the last in her first CS course. It was challenging dividing up tasks evenly amongst the four of us.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>The Alexa Skill works pretty well! We are especially proud of the <em>lyric mode</em> you can use to unlock the system - it's super random and weird but also incredibly gratifying to hear \"access granted\" when you get it right.</p>\n<h2>What we learned</h2>\n<p>The main thing we learned is how to make an Alexa Skill. Additionally, we learned a lot about what's possible when using an IoT device, even though we weren't able to get it up and running.</p>\n<h2>What's next for Talk Lock</h2>\n<p>The main next step would be to put Talk Lock to use by getting Talk Lock working with a physical lock so it. We may also throw in some other fun ways to unlock!</p>\n<h1>TeamInstinct</h1>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-alexa\">amazon-alexa</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/yuhaw-su/hackISU\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/yuhaw-su/hackISU\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the hardware. I was trying to use Arduino or Spark Core to exchange data on a server, in order to trigger the motor to unlock our lock.", "Implemented the skill's functionality as a Lambda function in Node.js."]], ["The WingMug ", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/3i6uhX2_644?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"The WingMug  \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/410/999/datas/gallery.jpg\"/>\n<p>\n<i>Cheers!</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"The WingMug  \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/043/datas/gallery.jpg\"/>\n<p>\n<i>Driver circuit for the linear actuator</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"The WingMug  \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/411/044/datas/gallery.jpg\"/>\n<p>\n<i>When someone messes with your mug, WingMug has got your back</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Date rape drugs are easy to slip into mugs at the bar and the drugs can be odorless and tasteless. Our goal is to help prevent date rape drugs from making their way into your drink. </p>\n<h2>What it does</h2>\n<p>Our device can register when the user is near the \"mug night mug\" and open the mug when the user is holding it. When the user is away, the mug will close and if the user is away and the mug is tampered with, the user will get a message on their phone displaying \"don't drink the kool aid\". </p>\n<h2>How we built it</h2>\n<p>We used an RFID reader to know when the user is holding the mug or not. The lid open and closes with an actuator that is run by a mosfet circuit being driven by the arduino. When the RFID reader does not detect the user's RFID tag a gyroscope will send data to the arduino indicating whether or not the mug has been tampered with. If the mug is tampered with while the mug is not in use the arduino will use bluetooth to connect to our app and notify the user the mug has been tampered with. </p>\n<h2>Challenges we ran into</h2>\n<p>3d printing is our worst nightmare.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Quickly coming up with a solution to opening and closing the actuator. We learned that we needed to reverse the voltage going to the actuator so we used two sets of mosfets to accomplish this task. </p>\n<h2>What we learned</h2>\n<p>Our group learned how to collaborate as a team and how to have all of our parts of the project come together into a comprehensive product. </p>\n<h2>What's next for The WingMug</h2>\n<p>We would also like to use an Ultra Wideband Radar System from Walabot to characterize the amount of alcohol in the users's drink. Using this and some information on the user, we can calculate the users BAC in realtime and we can program WingMug to \"cutoff\" the user if their BAC approaches a dangerous level. On that note, to the bars!   </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag\">rfid</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/3dprinting\">3dprinting</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/accelerometer\">accelerometer</a></span></li><li><span class=\"cp-tag\">gyroscope</span></li><li><span class=\"cp-tag\">linear-actuator</span></li></ul>\n</div>\n</div>", ["I assisted with the concept development before the hackathon. During, I designed, put together and debugged the H-bridge and 5V-12V level shifter that was required to drive the actuator. I also assisted with the code that was used on the arduino to control the actuator.", "I'd focused on working with the arduino peripherals and 3d printing. Some of the peripherals included and LCD RGB display, RFID shield, accelerometer / gyroscope and the H-bridge for the actuator.", "I created an Android app that pairs with the Wing Mug. The application gives you notifications and an alarm if your mug is tampered with, and it logs the time and length of the tampering. The app connects to the mug via Bluetooth. ", ""]], ["Zoo Simulator", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/yu7DaIzSYPw?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Zoo Simulator \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/410/185/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Harambe</p>\n<h2>What it does</h2>\n<p>Recaptures the Heroic final moments of Harambe's tragically short life.</p>\n<h2>How we built it</h2>\n<p>Using Unity3d.</p>\n<h2>Challenges we ran into</h2>\n<p>Not knowing much about video game development. Struggling with physics and the like.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We made a video game. That's pretty sick.</p>\n<h2>What we learned</h2>\n<p>A lot about video game development, Unity's engine, and C#.</p>\n<h2>What's next for Zoo Simulator</h2>\n<p>The Void 3D real world mapping.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/abullard/harambeSimulator\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/abullard/harambeSimulator\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://www.dropbox.com/s/0t4dlikaolksyoj/ZooSimulator.zip?dl=0\" rel=\"nofollow\" target=\"_blank\" title=\"https://www.dropbox.com/s/0t4dlikaolksyoj/ZooSimulator.zip?dl=0\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.dropbox.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the sprites and animations for the project. ", "", "", ""]], ["Jambr", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/qSsf_M7tu5o?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Jambr \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/410/953/datas/gallery.jpg\"/>\n<p>\n<i>Homepage</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Jambr \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/410/955/datas/gallery.jpg\"/>\n<p>\n<i>Output (redirects to Spotify Web Player)</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Jambr \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/410/956/datas/gallery.jpg\"/>\n<p>\n<i>Track Table</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Jambr \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/410/957/datas/gallery.jpg\"/>\n<p>\n<i>Filter Menu</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>Jambr - demo available at <a href=\"https://floating-meadow-12303.herokuapp.com/\" rel=\"nofollow\">https://floating-meadow-12303.herokuapp.com/</a></p>\n<p>Jambr is a web-based, responsive music app that imports a user's \"saved songs\" list from Spotify and creates a personal playlist based on tagging and time information. After clicking to sign in with Spotify, the user will see a paginated table that lists all of their saved songs in Spotify. Jambr automatically tags songs based on Spotify metadata (measuring things like valence, tempo, key, acousticness, etc.), local time data and (potentially) information from other APIs. In addition, users can also input custom tags to improve playlist accuracy.</p>\n<p>Once tags are added, additional information, such as weather, desired genres, and the user's mood can be selected. After submitting all required information, the resulting playlist will be automatically imported back into Spotify.</p>\n<p>Features: Tags can be deleted Sorts and Shuffles the song list to create a playlist based on user parameters Responsive Minimalistic design</p>\n<p>Potential developments: Usage of weather, location, and other API data to create more specific tags/playlists Built-in web player (would require Spotify queueing/temporary playlists) Port to iOS/Android</p>\n<p>Known Issues (to be fixed in future versions): The resulting playlist will only use the songs that have been loaded in the Jambr web-app. The user must page through all of his/her songs if he/she wishes to include them in the personalized playlist. Refreshing the page results in a blank table. In order to restart the process, the user must logout and login again The tags are not exactly accurate, in this current version of Jambr Not as responsive in Apple OS Input box for tagging does not automatically clear the current input, the user must clear it manually before adding a new tag. Input box for tagging also does not add a tag after hitting enter; the user MUST click \"Submit\"</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ruby\">ruby</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/coffeescript\">coffeescript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ruby-on-rails\">ruby-on-rails</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/scss\">scss</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sass\">sass</a></span></li><li><span class=\"cp-tag\">cloud9</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/git\">git</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/github\">github</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/heroku\">heroku</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/spotify\">spotify</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/tacos1998/Jambr\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/tacos1998/Jambr\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://floating-meadow-12303.herokuapp.com/\" rel=\"nofollow\" target=\"_blank\" title=\"https://floating-meadow-12303.herokuapp.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>floating-meadow-12303.herokuapp.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["In this project, I put most of my efforts into the UI setup and design, using HTML, CSS and Embedded Ruby (through the Rails framework) in conjunction with several other gems/libraries. Over the course of the weekend, my teammates and I learned a lot about how to plan and prioritize in order to complete a rush job.", "I mainly worked on the logic behind some of the processes as well as cleaning up some of the UI design. I mainly came to learn and experience what it's like to develop something workable in a short amount of time and I had a lot of fun.", "Worked on the interfacing with the Spotify API. Prior to this hackathon, I had no experience with the Spotify API."]]]