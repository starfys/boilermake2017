[["Sign Me", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We were actually working on an entirely different project and attempting to figure out how to properly parse the incoming data from the Kinect when we came up with this idea. While waving our arms wildly and monitoring the Kinect output, one member of the group joked that we should do sign language and see what happens. Turns out it was actually a great idea. In addition, some group members were inspired to develop this by the fact that 5% of the world's population suffers debilitating hearing loss, which includes 1/3 of the population over 65 years of age.</p>\n<h2>What it does</h2>\n<p>Essentially, Sign Me improves ease of communication between individuals who do and do not know American Sign Language. The idea is that one person will wear a camera which will record another person signing. Using an open-source interpretation algorithm, the signs are translated to English and then sent to our script hosted by IBM Bluemix, when another script also runs, sending the message to the recipient's phone.</p>\n<h2>Challenges we ran into</h2>\n<p>The installation of the devices, along with multiple software/language installation issues, especially with Python and Pip. In addition, we went through multiple languages in an attempt to get a way to work not only with getting video input, but also reading the English words that the sign language translated to. Also, our original way of handling messages ended up having to be replaced within the last hour.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bluemix\">bluemix</a></span></li><li><span class=\"cp-tag\">batch</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/kinect\">kinect</a></span></li><li><span class=\"cp-tag\">ibm</span></li><li><span class=\"cp-tag\">microsoft</span></li><li><span class=\"cp-tag\">command-line</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/visual-studio\">visual-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xaml\">xaml</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li></ul>\n</div>\n</div>", ["Worked on implementing the algorithm for sign language translation on kinect.", "I worked on the Python scripts that continuously read in the words translated by the Kinect, sent those words to the server and to the phone, and also the script that the server originally ran on for that would handle sending the text messages.", "I primarily helped implement the algorithm used to translate the input data from the Kinect into English language.", "Setting up the kinect with the given Microsoft software, OpenCV, and processing 3.0. Implementing the body skeleton recognition algorithm, and sign language to english converter. Small amount of learning IBM's Bluemix to send text messages after a certain command is given. With our initial project, outputting to arduino to execute tasks. A lot of research was gone into installing multiple softwares that aren't native to the operating system. ", "Primarily helped in deploying our web app to IBM Bluemix via Cloud Foundry and adding on extra functionalities with their IoT platform. Integrated Twilio API with the web app to parse text requests from the Kinect visualization Python script and reroute text to a mobile phone."]], ["Mirror Mirror", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Mirror Mirror \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/442/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>Mirror Mirror on the wall...</h1>\n<p>Imagine yourself waking up in the morning, walking towards your mirror and having everything you want to know about your day displayed all around you.</p>\n<p>Now that is possible with MirrorMirror! This magical mirror will display the time, weather, and upcoming events for your day. Using the Myo Armband, you can control the mirror and have it take a picture of you by a single gesture. Daily photos have never been easier!</p>\n<p>With MirrorMirror you can record how you are feeling at the time you look in the mirror by simply talking to it. Later you could go back and reflect on your emotions. This will help you become more aware of yourself, consequentially resulting in a stronger self image!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/myo\">myo</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/yuvsc/MirrorMirror\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/yuvsc/MirrorMirror\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on including facial recognition into the mirror, but after only succeeding in facial detection, and the attempt to compile the latest version of opencv overnight failed, the decision was made to leave out facial recognition until a future revision.", "Worked on backend and getting the Myo to function with the mirror. Spent quite a bit of time on the speech recognition. Tried out ember.js early on but scrapped it.", ""]], ["Kindrone", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/iVZJ8F-3cx8?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to create a hardware hack that will help the evolution of gaming. Most people get bored of using controllers to play video games because there is a missing aspect of gaming. In order to bring back this aspect, we decided on creating the Kindrone hack.</p>\n<h2>What it does</h2>\n<p>The Kindrone hack uses the kinect sensor to communicate with the AR.Drone and send readings to control and fly the drone. The gesture readings from joints above the torso are used for flying the drone.</p>\n<p>Left Hand:\nUp: Take Off\nDown: Land\nLeft: Turn Left\nRight: Turn Right\nForward: Hover</p>\n<p>Right Hand:\nUp: Fly Up\nDown: Fly Down\nForwards: Fly Forwards\nBackwards: Fly Backwards</p>\n<h2>How I built it</h2>\n<p>The Kindrone hack is compiled into a Visual Studio windows application. We mostly used C# to program the gesture controls. We used the AR.Drone project SDK found on their website to communicate between the kinect/application and drone. Visual studio was used to create the application and program the kinect controls. This hack is currently for windows only since kinect support only goes to windows.</p>\n<h2>Challenges I ran into</h2>\n<p>One of the challenges that we ran into is programming the gestures to fly the drone. We had to do a lot of trial and error to get the approximate location. Another challenge was maintain a stable connection between the drone and application because it would disconnect every few minutes.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We are proud of completing the project in the 24 hours and actually getting it to work. The completion of the project was a big effort and we really proud of it. Another thing we are proud of is the way we used the gestures.</p>\n<h2>What I learned</h2>\n<p>Every hackathon we learn something new and we believe this is the most I've learned at a hackathon. We learned 3 dimensional programmable motion, documenting and understanding code, using various sdks to build the hack.</p>\n<h2>What's next for Kindrone</h2>\n<p>We plan to add more gestures such as rolling . We also to use parallel programming to continuously monitor each gesture and have multiple gestures recognized at the same time. We would also like to add a VR so its connected to the drone camera, by doing so the user will get the complete package.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/visual-studio\">visual-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/net\">.net</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/windows\">windows</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ar-drone\">ar.drone</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["Pyed Piper", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>The natural flow of creating music requires a seamless method of recording sounds onto the computer. The current method requires using a MIDI keyboard, which restricts the creativity of the artist. Using a simple wireless device, any monophonic musical instrument can be digitized as a midi instrument or used to power insightful new human-computer interfaces.</p>\n<h1>Executive Summary</h1>\n<p>Pyed Piper is an intelligent electronic music assistant that will turn the sound of any monophonic instrument into midi notes as the musician plays the corresponding note. These midi notes can be interpreted by a computer and work with the musician's existing digital audio workstation (DAW). This allows electronic music to be created using the instrument that the musician knows best. They can even whistle. Going further, particular notes can be tied to keys so that you can use an ocarina to play Legend of Zelda: Ocarina of Time.</p>\n<p># Context of Creation\nPyed Piper was created on January 16 &amp; 17, 2016 as part of Dragon Hacks 2016, held at Drexel University in Philadelphia, Pennsylvania. Pyed Piper was created by Christopher Frederickson, Nick Felker, and Max Bareiss.</p>\n<h1>Market Landscape</h1>\n<p>There are several different applications for this technology. Electronic music artists can benefit from using more tools to compose music, moving from just a keyboard to the entire range of analog musical instruments. This can also benefit students studying music theory as they will not have to learn piano to develop simple compositions. Educational software can be written around students playing their instrument without relying on expensive, proprietary solutions. Using a musical instrument as an input device can have many purposes for musicians and gaming.</p>\n<h1>Features</h1>\n<ul>\n<li>Allows for natural instrument input</li>\n<li>Laptop software creates a virtual MIDI port which works with any MIDI supported program</li>\n<li>Laptop software can also wirelessly send / receive MIDI commands from another computer</li>\n<li>Android app can wirelessly receive MIDI commands using Marshmallow\u2019s built-in MIDI APIs</li>\n<li>Keyboard events can be sent by detecting the pitch of your instrument</li>\n</ul>\n<h1>Hardware Description</h1>\n<p>Pyed Piper consists of a software program which runs on a computer. It uses your laptop\u2019s microphone to capture sound, which can come from any monophonic instrument such as an ocarina. The sound is analyzed for its pitch and intensity and creates a MIDI command. This MIDI command can be used locally through a virtual MIDI port or sent over TCP/IP to another computer.</p>\n<p>The dataflow for Pyed Piper starts with the musician playing an instrument. This audio is then recorded by the computer, running our software. The software analyzes the note the musician is playing, and some filtering is applied to the detected note in order to improve the algorithm. The note signal can either be sent as MIDI data over a network to commercial audio software, or sent as keystroke data to any computer program, giving the musician flexibility in how their music is used.</p>\n<h1>Development Insights</h1>\n<p>Determining the pitch of audio is easy within a given octave, but extending it for a larger audio range has been an active area of research for the past fifty years. While developing our project, we restarted our project several times using different libraries and algorithms in order to reduce the effects of harmonics. </p>\n<p>A bunch of instruments -- slide whistle, electric guitar, ocarina, recorder, and even whistling -- were played in order to test the robustness of our algorithm. </p>\n<p>The greatest success came from limiting the range of pitches that could be detected. Additionally, using the ocarina provided the best results as the sound generated was the closest to a sinusoid. </p>\n<p>At that point, the project shifted to using an instrument as a general input device. The video game Legend of Zelda: Ocarina of Time has the protagonist use an in-game ocarina that is played by pressing particular buttons. These buttons were set to be called when the musician plays the corresponding notes on a real ocarina.</p>\n<p>There were a number of problems getting this project to run on Windows. Setting up libraries for the first iteration took several hours of building and installing tools to build the libraries. When we opened a terminal in a Linux based operating system, all that work was finished with a single apt-get command.</p>\n<p>Also, when we shifted the project to a general input device, there was difficulty getting keys to be pressed correctly. Although keys could be pressed down, Windows would immediately release them. There was no way to hold down a key, which prevented the game from detecting the inputs as each key needs to be held down.</p>\n<h1>Appendix A</h1>\n<h2>Version 0.1</h2>\n<pre class=\"language-nolang\"><code>Using Aubio library using Python in an Ubuntu VM created by Chris and Nick\n</code></pre>\n<h2>Version 0.2</h2>\n<pre class=\"language-nolang\"><code>Using new algorithm to detect frequencies written by Max. This algorithm runs Goertzel\u2019s algorithm for each frequency band of interest, and compares the frequencies over time to determine the note the musician is playing.\nSending MIDI messages over TCP/IP is now successful\n</code></pre>\n<h2>Version 0.3</h2>\n<pre class=\"language-nolang\"><code>Switch from pysoundboard to pyaudio for audio input by Chris and Nick\n</code></pre>\n<h2>Version 0.4</h2>\n<pre class=\"language-nolang\"><code>Using Python library SoundAnalyse  to determine pitch by Chris and Nick\n</code></pre>\n<h2>Version 0.5</h2>\n<p>Normalized autocorrelation algorithm written in python and tested by Max. Works for a single octave, but not beyond that range</p>\n<h2>Version 0.6</h2>\n<pre class=\"language-nolang\"><code>Max peak FFT based algorithm by Max. While not a proper pitch detection algorithm, it was created as a baseline. Worked worse than previous algorithms.\n</code></pre>\n<h2>Version 0.7</h2>\n<pre class=\"language-nolang\"><code>Returned to SoundAnalyse for pitch detection. Further tuned configuration.\n</code></pre>\n<h2>Version 0.8</h2>\n<pre class=\"language-nolang\"><code>Nick develops a MIDI service for Android devices running Android 6.0 Marshmallow. It can receive MIDI down messages over a TCP/IP socket and play that note with a synthesizer.\n</code></pre>\n<h2>Version 0.9</h2>\n<pre class=\"language-nolang\"><code>There is a proof-of-concept for turning analog sounds into MIDI notes, now the next step is using music as an input device for a video game, such as the Legend of Zelda: Ocarina of Time.\n</code></pre>\n<h2>Version 1.0</h2>\n<pre class=\"language-nolang\"><code>After more iterating, the game now responds to ocarina notes.\n</code></pre>\n</div>\n</div>", ["Pitch detection. Conversion to MIDI. N64 emulator integration. Ocarina player.", "I worked on the TCP to MIDI bridge, Python integration with the N64 emulator, and developed one of the pitch detection strategies.", "Python GUI, Android midi controller, helped build the audio to midi script"]], ["Dyslexify", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Dyslexify \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/676/datas/gallery.jpg\"/>\n<p>\n<i>Text Conversion</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Dyslexify \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/678/datas/gallery.jpg\"/>\n<p>\n<i>App Icon</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Dyslexify \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/679/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<h3>Dyslexia</h3>\n<p>Dyslexia is a language-based learning disability or disorder that includes poor word reading, word decoding, oral reading fluency and spelling.</p>\n<p>According to <a href=\"http://www.austinlearningsolutions.com/blog/38-dyslexia-facts-and-statistics.html\" rel=\"nofollow\">Austin Learning Solutions</a>  , every 1 in 10 people are dyselxic, and over 40 million American Adults are dyslexic, but only 2 million know about it. They also state that with proper training and education dyslexic people can learn successfully. As a responsible citizen of the world, and with the technological knowledge that we possess, we thought tht we should do something about it. </p>\n<h2>What it does</h2>\n<p>Dyslexify is an application-based aid that was built through Android Studio. The data received by the user is saved into the app to create the permuted words. An OCR (Optical Character Recognition) algorithm is used to Dyslexify a picture of text to an easy to read font for the user. </p>\n<h2>How We built it</h2>\n<p>We initially divided our team in two groups: one group working on android app development, and the other group researching on developing an efficient algorithm for OCR, keeping in mind the maximum problems that can be included in that. We also consulted a fellow hacker who has dyslexia, and it strengthened our </p>\n<h2>Challenges We ran into</h2>\n<p>Since none of our group members were dyslexic or had someone in their circle, who had dyslexia, we did not have the first hand experience about the problem. However, since we were determined to take every possible action in order to solve this, we did some onine research as well as tried to find someone who can give us a first-hand account of the problems. Luckily, we found one of the fellow hackers here, who had dyslexia and were able to discuss this sensitive topic of dyslexia with him. After the conversation and some brainstorming, and keeping in mind the limited time of the hackathon, we decided to tackle few of the problems, including the image recognition and inverted appearance of the letters.</p>\n<p>Apart from not knowing the team members in the beginning, only a couple of our team members had any background in android development. Hence in past 24 hours everyone learned android development and also tried implementing it while learning.</p>\n<p>Our other challenge was to develop an Optical Character Recognition (OCR) algorithm that extracted letters from the image as well as correctly identified the right letter.</p>\n<h2>Accomplishments that we are proud of</h2>\n<p>We are proud of whatever we accomplished, given the fact that we had almost no experience working with Android development, and we are proud that we were able to introduce to a healthy hacking experience to one of our teammates, for whom this was the first hackathon.</p>\n<h2>What We Learned</h2>\n<p>We learned a lot this year at DragonHacks. Admittedly, certain parts of our user interface was lacking a great design element. Others still used some bad  coding convention that would get even the newest developers scolded. At the end of the day, we created a product that worked, and embodied our vision of being able to help those in need.</p>\n<h2>What's next for Dyslexify</h2>\n<ul>\n<li>We are going to add additional functionalities to our application, and try to get involved with some 'learning solutions' provider so that we can understand the issues in more detail, and find ways to tackle it.</li>\n<li>We also plan on reaching out to more people affected by dyslexia and get their thoughts on our product. </li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-fonts\">google-fonts</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/github\">github</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/dropbox\">dropbox</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xml\">xml</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/vakster/Dyslexify\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/vakster/Dyslexify\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the optical character recognition API feature and the overall design of the graphics for the application. I also helped with overall debugging. ", "I worked on the camera and optical character recognition functionality. I also contributed a little to the front end", "I worked on both front and back end working with Brandon to create the application in Android Studio.  We used Java and XML to build it, testing it both on our phones and through the Android emulator.  ", "", ""]], ["Propane FueLevel", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Propane FueLevel \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/651/datas/gallery.jpg\"/>\n<p>\n<i>Rev 1 Schematic</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>This is an unformatted version of a larger document, whose link is listed below. \nA Brief Description of Contents\nThis is a simple, but complex, and yet elegant, and bewildering product developed in the span of 24 hours during the 2016 Dragon Hacks Hack-A-Thon. The collection of microcontrollers and modules is designed to carefully meet the industry needs in the monitoring of propane tanks. Great stress was exhausted to ensure that there was an external system for: level detection, leak detection, wireless communication, and energy storage. The complete process is applicable to both rural and industrial needs, and should fall neatly under any corporate budget. \n    On location, the steel propane tank will have a small, stream-lined, weather-proof plastic enclosure stuck to it with permanent magnet (rare-earth) feet. The enclosure contains an ultrasonic transducer pair, which uses well-defined technology to measure the level of the liquid propane inside the tank. The tank also comes equipped with solar cells, to generate energy, and piezoelectric contact microphones, for use specifically with detecting leakage. A wireless module, as well, is included, for communication.\n    The propane tank, or tanks, can connect to a main hub either on location or up to 1mi away, which then acts as a server. The information (liquid level, temperature, leak warnings, etc) is stored on the network, creating a \u201ccloud\u201d interface, which an administrator can access through a dashboard. \n    This low-profile, micropower solution is well integrated and is very expandable. \nIntroduction\nNow that our \u201ckeywords\u201d are out of the way (any schmuck can write keywords!) we would like to present, in more detail, each subsection of the project in detail, as well as plans for further work.\nPropane Board\nThe first version of the propane tank circuit board cost approximately $40 each, including wireless modules and sensors. The majority of the cost and power draw, of course, comes from the wireless module, which is a ZigBit product. These are available quickly off the shelf and at a good price, and as such they met our criteria. The second rev. of the board swapped the microcontroller, eliminated one of the timer chips, and increased speed, saving over $7 per board in the process. \n    The board works in a fairly simple and almost linear fashion. It uses ultrasonic sensors, with the TDC1000 XP from Texas Instruments, to measure reflections off the boundaries  within the tank. By measuring the time in between pulses with either the microcontroller, or the TDC7200 timer chip, the height of the water tank can be approximated by the equation:\nD=H - (tc2)\nto find the distance from the sensor to the boundary of the liquid propane, where t is the time elapsed, and c is the speed of sound in liquid propane (about 1000m/s) and H is the height of the tank.\n    The microcontroller we have decided on is the PIC16F720, which draws minimal power. It has communication capabilities with SPI for the TDC1000 chip, and UART for connection with the ZigBit module. \nThe ultrasonic transducers used have a resonant frequency found by \nfclk2TXFREQDIV+1 \nwhere fclk is the clock frequency of the TDC1000, and TXFREQDIV is the frequency division implemented in the firmware within the TDC1000. \n    In order to monitor potential leaks, a number of possible methods were considered. The most cost-effective and simple method was the use of piezoelectric \u201ccontact microphone\u201d transducers with a resonant frequency is the 2.7kHz range. In this way, the piezoelectric element (usually some form of NZT, quartz, or other  piezoelectric materials) will resonate with the vibrations of the tank whenever a prolonged \u201chissing\u201d sound (associated with a gas leak) propagates through the steel tank. A time-gate is necessary to minimize false-alarms and if need be, the microcontroller can provide finer digital signal processing. \n    The board runs off of a 3.3V power supply. The energy is obtained through an Li-Ion battery cell rated at 600mAh, and 3.7V. In addition to this battery, solar cells will provide charging energy to the board. This limits the need for manual recharging. \n    Going further, it may be possible to use other modes of energy harvesting, such as vibration-harvesting in ultra-micropower wireless transmitters. This is a growing area of research today, and as such the technology was not fit for this commercial project. It would result in greater price, and higher complexity, but would have benefits such as eliminating the need for batteries. </p>\n<p>Rev 1.0 of the propane tank board\nImprovements made in rev 2.0:\nNew MCU: PIC16F720\nCheaper\nMinimum features (SPI, UART) necessary\nMore IO (17)\nOptimal usage of SPI between MCU and TDC1000\nElimination of TDC7200, reducing price $6 each\nSelected parts for piezoelectric elements centered at 2.7kHz to detect hissing\nWireless ZigBee UART communication\nBuzzer interface</p>\n<p>Wireless Modules\nThe propane board connects wirelessly to a \u201chub\u201d or \u201cserver\u201d located within 1mi of the propane tank site. The board itself connects to the hub via 2.4GHz serial communication, whereupon the hub connects itself to the internet to store the data in a cloud-format using IBM\u2019s Bluemix. \n    This was, of course, the most demanding requirement, in terms of cost, power usage, and complexity. After looking into the possibility of avoiding a hub, it was decided that the hub would have a wired or wireless connection to the internet, though it may be placed up to 4000ft away. The wireless module of choice is the XB24CZ7PIT-004, a 2.4GHz transceiver that boasts nearly 1mi range, at only 30mA of transmitting current. Other promising, though obsolete, options included the ATBZ-900-B0 module, which used 900MHz signal frequency real-estate to work back and forth between the hub and the tank. Since this part is now obsolete, the XB24 was used instead.\n    The power of the wireless component in the system is its extendability. In a rural setting, one only needs some sort of wired connection within a mile of the tank in order to send away information on the tank. In an industrial setting, many tanks may be managed at once by a single hub, saving cost and reducing complexity of the system.\n    The hub is made up of a microprocessor, such as that used in the Raspberry Pi, which we found to be a very convenient prototyping tool. Since more commercialized versions of these boards exist (i.e. without headers, prototyping tools, bells, and whistles) they are definitely being considered for the commercial product. </p>\n<p>Server-Side\nOn the server side, an embedded linux computer acts as an IOT device. It sends the tank id and level in mm over the internet using the versatile and secure mqtt protocol. Receiving this data is IBM bluemix which is used to interpret and organize the data in a meaningful way. The data can be analyzed for trends and can be viewed from any location with an internet connection. Bluemix also allows for email notifications when the tank level drops below a certain threshold.<br/>\nConclusion\nThis comprehensive solution-in-a-system, tirelessly pieced together by the Freshman members of our team at Drexel University, is an effective solution to a real-world problem. We have successfully integrated a number of components in a way such that the level of propane in any given tank may be monitored, leaks detected, and information managed. From the Internet of Things, to IBM\u2019s Bluemix server, and cutting edge measurement techniques, the system is a self-contained, cost effective, and easy to use problem-solver in the propane industry. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">mcus</span></li><li><span class=\"cp-tag\">zigbees</span></li><li><span class=\"cp-tag\">tdc1000-from-ti</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/linux\">linux</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/nfarnesi4/dragonhacks2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/nfarnesi4/dragonhacks2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://docs.google.com/document/d/1wBCzxAzTLJQ1ufBNulbKriiSgfmo0c_ms5j9JEBiHjQ/pub\" rel=\"nofollow\" target=\"_blank\" title=\"https://docs.google.com/document/d/1wBCzxAzTLJQ1ufBNulbKriiSgfmo0c_ms5j9JEBiHjQ/pub\">\n<i class=\"ss-icon ss-link\"></i>\n<span>docs.google.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the hardware side, coming up with measurement methods, selecting parts, and creating schematics.", "I worked on the cloud end, retrieving the data from the sensor to be viewed from any internet browser and smartphone, provided you have a username and password.", "", ""]], ["Savitar", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/O_2auk3ujao?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n</ul> </div>\n<div>\n<p>To everyone who comes across this:</p>\n<p>CLICK THE GOOGLE SLIDES TO INFORMATION:</p>\n<p><a href=\"https://docs.google.com/presentation/d/13VXNXcQCobloyEnlgud-1r-afI24WNyevzgmiPG17wk/edit?usp=sharing\" rel=\"nofollow\">https://docs.google.com/presentation/d/13VXNXcQCobloyEnlgud-1r-afI24WNyevzgmiPG17wk/edit?usp=sharing</a> </p>\n<p>THANK YOU TO ALL OF THE SPONSORS, DREXEL UNIVERSITY, JUDGES, MENTORS, AND OTHER HACKERS FOR MAKING THIS AN AWESOME JANUARY 2016 WEEKEND! </p>\n<p>~Best of luck and may your hacking journey continue with success~</p>\n<p>With Regards,</p>\n<p>Varun Chunduru, Hersh Patel, Nehal Joshi, and Sagar Patel.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bluemix\">bluemix</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag\">nodered</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://www.kinetise.com/wsoj\" rel=\"nofollow\" target=\"_blank\" title=\"https://www.kinetise.com/wsoj\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.kinetise.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["My contribution was in the User Experience and User Interface of the application. We incorporated design-thinking methods in order to streamline the process of patient-doctor communication as best as we could.", "Circuitry, logistics ", "UI, arduino and integration ", "Responsible for the backend integration of Arduino with IBM's Bluemix Cloud Platform, specifically utilizing Node-RED and SQL."]], ["The Propane Tank Leveler 3000", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"The Propane Tank Leveler 3000 \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/719/datas/gallery.jpg\"/>\n<p>\n<i>A peak under the top, where extra wires, sensors we removed and the node resides</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"The Propane Tank Leveler 3000 \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/695/datas/gallery.jpg\"/>\n<p>\n<i>Filling the jug with water</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"The Propane Tank Leveler 3000 \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/696/datas/gallery.jpg\"/>\n<p>\n<i>First version of jug</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"The Propane Tank Leveler 3000 \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/697/datas/gallery.jpg\"/>\n<p>\n<i>Filling the jug with water</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"The Propane Tank Leveler 3000 \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/698/datas/gallery.jpg\"/>\n<p>\n<i>Screen displaying propane(water) level</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"The Propane Tank Leveler 3000 \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/717/datas/gallery.jpg\"/>\n<p>\n<i>thermal image of the jug</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"The Propane Tank Leveler 3000 \u2013 screenshot 7\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/718/datas/gallery.jpg\"/>\n<p>\n<i>Finished jug</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>About</h2>\n<p>The Propane Tank Leveler 3000 was created at DragonHacks 2016 at Drexel University.</p>\n<p>It is device that can be used to measure the amount of liquid in a container, made specifically to be used for propane tanks. </p>\n<p>We decided to do this after we saw the challenge presented by AmeriGas for this hackathon, and thought that we could figure it out a way to solve their problem. We solved this problem utilizing hardware and software by KiernanTimberlake, whose sensors allowed us to determine the levels.</p>\n<h2>How it works</h2>\n<p>Four (or any variable number, depending on the size of tank and accuracy desired) temperature sensors are placed on the outside of the container. These sensors will read a different value depending on whether or not there is liquid at the location that the sensor is at. We use this fact to determine a rough estimate of where the liquid level is.</p>\n<h2>What it\u2019s made of</h2>\n<p>Our prototype is made out of a five gallon water jug rigged with all of the wires and sensors. The node and sensors are part of Pointelist, which is developed by KiernanTimberlake. The water jug was stolen from under a table at DragonHacks.</p>\n<h2>Who made it</h2>\n<p>This project was developed by Derek Schuster and Ethan Schoen, students at Binghamton University.</p>\n<p>A huge thank you to the guys at KiernanTimberlake for your equipment and for all the help you gave us.</p>\n<p>And of course, a thank you to Drexel University for hosting this great event.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">pointelist</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag\">amerigas</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Billion-Dollar-Idea-Inc/PropaneChallenge\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Billion-Dollar-Idea-Inc/PropaneChallenge\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I helped build it and write the code", ""]], ["ASL_Teacher", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>ASL_Teacher</h1>\n<p>p177 n00bz Dragon Hack 16 project</p>\n<p>Purpose:</p>\n<p>We will be teaching a Leap Motion device to recognize the American Sign Language alphabet. Our original plan was to develop a web app that would allow the user to see a person using ASL and learn the letters and numbers, then sign ASL for the Leap Motion sensor and it would tell the user if they were correct. We were able to implement more features for teaching, including an interactive page showing videos and photos of one of our team members signing in ASL and an interactive hand in the background showing the user signing along with the demonstration using leap motion. Unfortunately, while we were able to aggregate data on the mean and standard deviation of various hand positions of ASL letters and numbers, and we were not able to create a function to compare the user's sign with the standard ASL data we gathered. Using the .tech domain acquired at DragonHacks we were able to launch our site at ASLTeacher.tech. Although our project was not as fully formed as we first imagined it to be, we made significant progress in developing an interactive web app to teach American Sign Language and show the user their progress.</p>\n<p>The site is hosted at: <a href=\"http://www.aslteacher.tech\" rel=\"nofollow\">www.aslteacher.tech</a></p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/alex-rowden/ASL_Teacher\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/alex-rowden/ASL_Teacher\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I acted as hand model. And tried to help wherever I was needed. I spent most of my time working front-end but would occasionally offer advice and fresh eyes to the back-end team.", "I worked on the backend and helped with data collection and analysis. I also provided creative design for the front end of the web app and ideas for implementation.", "Worked on backend, hardware interface", "Designed the data analysis sysmtem and helped with data collection. Besides, I did lots of research work."]], ["Rock Hand", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Rock Hand \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/432/datas/gallery.jpg\"/>\n<p>\n<i>Title Screen</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Rock Hand \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/433/datas/gallery.jpg\"/>\n<p>\n<i>Game Instructions</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Rock Hand \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/430/datas/gallery.jpg\"/>\n<p>\n<i>Gameplay</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Rock Hand \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/431/datas/gallery.jpg\"/>\n<p>\n<i>Gameplay</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Rock Hand \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/429/datas/gallery.jpg\"/>\n<p>\n<i>Ending Screen</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Nearly 40 million people in the US suffer from some form of arthritis. For many of these people, simple hand exercises can go a long way in helping them feel better. But these exercises are often boring and even painful. We wanted to create a game that would make these exercises more enjoyable.</p>\n<h2>What it does</h2>\n<p>Our game helps users complete their arthritis hand exercises in a more enjoyable way. As different hand gestures scroll down the screen, the user tries to match those gestures as closely as possible. The more gestures they match, the more points they get!</p>\n<h2>How we built it</h2>\n<p>We built our game entirely in Java using libraries for the Leap Motion to recognize the user's hand gestures. The entire \"front-end\" is coded using Java's Swing library. </p>\n<h2>Challenges we ran into</h2>\n<p>The hardest part of our project was integrating code from all three team members into the final project. We had one programmer working on the front-end and two working on the back-end. After all the individual components were coded, we ran into some trouble combining the pieces so that the front-end worked fluidly with the back-end.</p>\n<p>We also ran into a lot of trouble exporting the project to an executable jar file for presentation.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are particularly proud of the teamwork we demonstrated during this project. Each team member worked on a different component of the project, but we were still able to come together and create a very cohesive project. We area also proud of how professional our game looks. We spent a lot of time making sure everything looked as perfect as possible.</p>\n<h2>What we learned</h2>\n<p>Way too much about Swing components. </p>\n<p>But in all seriousness, we learned a lot about creating games in Java and using the Leap Motion's libraries to receive input from hand gestures.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/leap-motion\">leap-motion</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/jarwino/RockHand\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/jarwino/RockHand\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on backend development.", "Wrote backend using LeapMotion's Java libraries", "Front-End Developer"]], ["T-Translate", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/nY8lpwDpoJA?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"T-Translate \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/656/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>T-Translate</h2>\n<p>A common problem when visiting foreign countries is the language barrier. Learning the language can work, but is very time consuming and trying to translate on the go can be uncomfortable. To solve this issue, we are excited to present the T-Translator, the first translating shirt. </p>\n<p>The T-Translator works by capturing the user\u2019s speech and using Google\u2019s built-in API to translate their words into a pre-selected language. </p>\n<p>Our product helps bridge the language gap between the user and the community around them. </p>\n<p>Check us out at:\n<a href=\"http://www.t-translate.tech/\" rel=\"nofollow\">www.t-translate.tech/</a></p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li></ul>\n</div>\n</div>", ["yup", "", "", ""]], ["alexa-gapminder", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"alexa-gapminder \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/578/datas/gallery.jpg\"/>\n<p>\n<i>\"Alexa, what is the relationship between 8th grade math achievement and per-capita alcohol consumption?\" </i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>I want to get non-statisticians to explore data using the English language.\nI also want to get statisticians to talk about data using English.\nThe Alexa interface for the GapMinder database is inspired by this goal.</p>\n<h2>What it does</h2>\n<p>It takes english statements and maps them to structured queries on the GapMinder dataset.  It is flexible in the english statements it recognizes.</p>\n<h2>How I built it</h2>\n<ul>\n<li><p>I created an AWS Lambda function to respond to Alexa events.</p></li>\n<li><p>I wrote and deployed a node.js application to my new Linode server.  It crunches the data, responds to AWS Lambda, and serves visulaizations to the client. </p></li>\n<li><p>I created a graphical front-end using Highcharts and my usual front-end stack.</p></li>\n</ul>\n<h2>Challenges I ran into</h2>\n<ul>\n<li><p>The echo device cannot get past wi-fi captive portals so I had to get creative to give it internet access.</p></li>\n<li><p>I have never written an AWS Lambda function or Alexa skill before so there was a lot of conceptual overhead to get through.</p></li>\n<li><p>Things went wrong in the production environment that didn't go wrong in dev environment.  This made debugging a very time consuming process.</p></li>\n</ul>\n<h2>Accomplishments that I'm proud of</h2>\n<ul>\n<li><p>I learned some cool new technologies </p></li>\n<li><p>My hack works!</p></li>\n</ul>\n<h2>What I learned</h2>\n<ul>\n<li><p>Alexa app development</p></li>\n<li><p>The importance of changing direction when a task becomes too time consuming</p></li>\n</ul>\n<h2>What's next for alexa-gapminder</h2>\n<ul>\n<li><p>More descriptive stats names as well as units</p></li>\n<li><p>Incorporation of the _ complete _ GapMinder dataset</p></li>\n<li><p>Expansion of Alexa's supported \"Question Space\"</p></li>\n<li><p>User Authentication and Deployment to Alexa App store</p></li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-alexa\">amazon-alexa</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/linode\">linode</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/highcharts\">highcharts</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/knockout-js\">knockout.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/nathanbreitsch/alexa-gapminder\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/nathanbreitsch/alexa-gapminder\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Pay Park", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We were walking through the city while coming to Dragon Hacks and found it really inefficient to see parking meters and parking kiosks all over the city.</p>\n<h2>What it does</h2>\n<p>We built a RESTful API which the city officials can push all of the city's parking spots to. We also built an iOS app which people can use when traveling to cities to find open parking spots closest to them. They can then claim a spot they park in and also pay for it after they leave the spot, all from their phone.\nPolice officers can also built their own client app which links to our API to track parking violations.\nWe also have API endpoints set to fetch analytics data such as the most busy/open streets and times.</p>\n<h2>How we built it</h2>\n<p>The RESTful API was built in python-flask with a my-sql backend.\nThe iOS app was built in Swift.</p>\n<h2>Challenges we ran into</h2>\n<p>iOS design and collaboration.\nPopulating fake data.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Building the complete and extensive RESTful API.\nThe simplicity of the iOS app.</p>\n<h2>What we learned</h2>\n<p>Collaborating.</p>\n<h2>What's next for Pay Park</h2>\n<p>Getting funding to build out a scalable infrastructure and selling the API to cities to adapt! </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mysql\">mysql</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/sakibj/paypark\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/sakibj/paypark\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/jayrav13/park-pay\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/jayrav13/park-pay\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Worked on the iOS app, focusing on the design and UX screens including: Home Screen, Historical Payments and Currently Parked Notification.", "I built the backend in Python and Flask, set up the server and managed the hosting and application. I built the API for the iOS app to communicate with.", "I worked on the front-end iOS development and UI/UX. My work includes the Settings and Vehicles/Payments Edit screens.", ""]], ["GitLive", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"GitLive \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/625/datas/gallery.jpg\"/>\n<p>\n<i>GitLive interface</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>GitHub is a large source code sharing and collaboration website. Currently there is an archive of all GitHub events per hour, but there is no visualization of the things happening on GitHub at real time. GitLive provides real time information and statistics about what's happening on GitHub, including trending users and projects.</p>\n<h2>What it does</h2>\n<p>GitLive provides real time graphs for the events on GitHub, new repositories, new branches and tags, trending repositories, trending users and per minute statistics.</p>\n<h2>How I built it</h2>\n<p>It polls GitHub event API every 2 seconds using a modified open source project <a href=\"https://github.com/igrigorik/githubarchive.org\" rel=\"nofollow\">https://github.com/igrigorik/githubarchive.org</a>. Then this subscriber pushes the events to redis. On nodeJS side, it reads the events from redis, calculates the statistics and sends the data to the client using websocket.</p>\n<p>I used the \"MLH 2016 Hackathon Season\" AWS credit to host the website. I got a free domain from domain.com and used Let's Encrypt to get a free SSL certificate.</p>\n<p>The event polling part used the igrigorik/githubarchive.org project. I developed the nodeJS backend and visualization html by myself. The structure of the project is ruby-&gt;redis-&gt;nodejs+express+socketio-&gt;google charts.</p>\n<h2>Challenges I ran into</h2>\n<p>This is the first time for me to use ruby.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>This is my first time to build a large scale real time data visualization.</p>\n<h2>What I learned</h2>\n<p>ruby, real time processing</p>\n<h2>What's next for GitLive</h2>\n<p>I will add more trending and statistics features.</p>\n<h2>Important information of the domain</h2>\n<p><a href=\"https://gitlive.net/\" rel=\"nofollow\">https://gitlive.net/</a> was registered last night (1/16/2016). Due to DNS TTL delays, the IP records take time to be updated everywhere. Add <code>52.91.7.236 gitlive.net</code> in your hosts file if you meet DNS issues.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ruby\">ruby</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/redis\">redis</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/socket-io\">socket.io</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-chart\">google-chart</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/nginx\">nginx</a></span></li><li><span class=\"cp-tag\">letsencrypt</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://gitlive.net/\" rel=\"nofollow\" target=\"_blank\" title=\"https://gitlive.net/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>gitlive.net</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["MC Hammered", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration - Many texts that are sent while drunk are then regretted in the morning when the person sobers up.</h2>\n<h2>What it does - If the ratio of deleted characters to total words in a text is too high, a prompt will appear and the user must then tap 10 circles that appear randomly on the screen within 1 second of appearing. If they mess up, their keyboard is then locked for 10 minutes.</h2>\n<h2>How we built it - We used Android Studio and lots of YouTube tutorial videos to almost get this project working</h2>\n<h2>Challenges we ran into - Nobody in our group has worked with Android before, and most members were also new to programming as well. Lack of sleep did not help either.</h2>\n<h2>Accomplishments that we're proud of - It's a great idea with fantastic real world applications.</h2>\n<h2>What we learned - When going to a hackathon, come prepared with an idea and a thought of how to solve that idea already so you don't waste time coming up with dead end solutions and don't finish by the deadline.</h2>\n<h2>What's next for MC Hammered - Finish the app.</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li></ul>\n</div>\n</div>", ["", "", ""]], ["isthisthemainthread", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>Basically a make your own adventure where the users decide the story!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["Hacker Routes", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<div class=\"alert-box alert\">\n        This image is currently processing. Please be patient...\n      </div>\n<img alt=\"Hacker Routes \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"https://devpost-challengepost.netdna-ssl.com/assets/defaults/software-d4334efb72013df43784baffede9d379.gif\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Hacker Routes \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/800/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>It thinks the way I think when it comes to getting X to Y.</p>\n<p>Google Maps lets you search for transit or biking or walking but doesn't combine both, and definitely not bikeshare. Sometimes the feastest way is bikeshare + transit, based on personal experience.</p>\n<h2>What it does</h2>\n<h2>How I built it</h2>\n<h2>Challenges I ran into</h2>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<h2>What's next for Hacker Routes</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/phantomjs\">phantomjs</a></span></li><li><span class=\"cp-tag\">hafas</span></li></ul>\n</div>\n</div>", [""]], ["Gaea's Glimpse", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>The inspiration came to me (Harry) when I came across a weird bug that I have never seen before in my life.  When I went back home, and googled \"blue bug\" and got a bunch of weird results that were not related to insects at all.  I went searching for a species identifying application or web services, and realized that other websites were too busy in their UI or only focused on one particular set a species (only plants, mushroom, insects, and birds), but nothing that combined it all.  I got to thinking why not build a wiki-like (publicly sourced) database and simple-to-use website where anyone can do simple searches for a different type of organism that they happen to stumble upon, and why not get everyone involved.  The main inspiration came to me from stories of the past, where scientist and enthusiast gathered together to share the information that they found of any particular science they were studying, but now we are in the age of data.   </p>\n<h2>What it does</h2>\n<p>this site (still in a prototype phase) has a few purposes.  One, gather information about every type of species from plants, animals, insects, etc..  Two, bring a community of all kinds to share about information we know about species from ALL over the world because we have information about certain species, but other people who live with these animals happen to know me.  Three, most importantly, bring people together to learn and discover something new.</p>\n<h2>How we built it</h2>\n<p>Using Tomcat locally and BlueMix</p>\n<h2>Challenges we ran into</h2>\n<p>Getting Java Backend to Work in some cases</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Make it user interactive</p>\n<h2>What we learned</h2>\n<p>Web Dev\nJava Web Dev</p>\n<h2>What's next for Gaea's Glimpse</h2>\n<p>Add More Features \nMore Watson</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag\">java-servlet</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mysql\">mysql</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bluemix\">bluemix</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ibm-watson\">ibm-watson</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://gaeasglimpse.mybluemix.net/\" rel=\"nofollow\" target=\"_blank\" title=\"http://gaeasglimpse.mybluemix.net/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>gaeasglimpse.mybluemix.net</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the front end of this project", "Front End Developer and Project Designer", "", ""]], ["CARD", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/fx0fJ-Zp2mE?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>This was created part as a proof of concept, part as an explorative project into Augmented Reality.</p>\n<h2>What it does</h2>\n<p>Uses image tracking to overlay 3D images on a video and presents in 3D for a Google Cardboard.</p>\n<h2>How I built it</h2>\n<p>Unity Engine, Vuforia SDK, Android SDK, C#</p>\n<h2>Challenges I ran into</h2>\n<p>3D modeling as well as the complications of rendering such detailed models on a phone. The draw of resources is tremendous.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>That it worked.</p>\n<h2>What I learned</h2>\n<p>Time management, 3D modeling, Unity Engine, C#, animation, Vuforia SDK, Android SDK</p>\n<h2>What's next for CARD</h2>\n<p>Not sure, but the possibilities are endless for education, security, gaming, and more!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-cardboard\">google-cardboard</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/vuforia\">vuforia</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li></ul>\n</div>\n</div>", ["", "", ""]], ["3D Hand Therapy ", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/rEHAzDioZu4?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"3D Hand Therapy  \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/785/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"3D Hand Therapy  \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/786/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"3D Hand Therapy  \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/787/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"3D Hand Therapy  \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/788/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We were interested in utilizing a microcontroller for a 3D application, so we began attempting to create a 3D hand controlled by our own hand.  Once the hand was built, we made an application that is a proof of concept for potential healthcare hardware endeavors involving hand therapy associated with arthritis, hand injuries, carpal tunnel syndrome, etc.</p>\n<h2>What it does</h2>\n<p>Our glove attached to hardware controls all 5 digits of a human hand and translates movements in the real world to movements of a 3D model hand in Unity3D.  In Unity3D, we built a simple app that challenges the user to bend certain fingers when prompted.  </p>\n<h2>How we built it</h2>\n<p>We built several circuits on an Arduino board, 5 of which involved flex sensors for five fingers.  We used voltage splitting and relative value mapping to map the response voltages to numbers that can be translated to finger bending in Unity3D.  In order to communicate with Unity3D, we used an Arduino bluetooth peripheral and a Mac's bluetooth port to retrieve serial data from the Arduino and map it to each finger.  We wrote an overall hand moving class to recognize finger movement and add hand therapy app functionality.  </p>\n<h2>Challenges we ran into</h2>\n<p>In general, bluetooth connectivity, serial output from the Arduino to unity, and finger motion were our biggest challenges.  </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Communicating with Unity via a microcontroller in an intelligent way is something we're very proud of, and we're happy our aspirations produced a product that is both inexpensive and potentially useful for individuals struggling with hand-motion related ailments.  </p>\n<h2>What we learned</h2>\n<p>Our software people learned hardware.  Our hardware people learned software.  We all learned how hard it is to build out an interactive peripheral for a 3D model.  </p>\n<h2>What's next for 3D Hand Therapy</h2>\n<p>We hope this hack serves as a proof of concept for inexpensive health recover/rehab methods related to hand motion in the future.  </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bluetooth\">bluetooth</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/RickAmes/Myo-Uno-Hand\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/RickAmes/Myo-Uno-Hand\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I thought of the idea based on the components that would be for sure available to borrow. I tested and contrasted the capabilities of existing technologies with our hack (Leap motion). I helped organize the team by forming the GitHub page. I facilitated the assembly of the hardware by attaching the sensors to the glove, designing the layout of the components on a prototyping board to reduce size of final prototype, and assembling and soldering components. Educated  younger members on Computer Engineer and Programming concepts. ", "I worked on wiring the microcontroller for handling flex sensor data based on variable resistance using mapping functions inside the Arduino IDE, helped create the parser and worked on Serial communication via Bluetooth. Helped build the model in the 3D Unity interface. Learned a lot about serial communication, learned and used C# for the first time, learned about parsing and data transfer, as well as working in a team in a high pressure situation, with tight deadlines and many ideas flowing that had to be compromised into a cohesive final product.", "I worked on all parts of this application.  From the Arduino, to serial output processing, to coding the health therapy app in general, I served as a project manager and a presence in all elements of this project.  ", "Worked on transmitting data from flex sensor to computer via serial data sent  by bluetooth. assisted in construction and designing of advanced circuit layout consisting of variable voltage  flex sensors. facilitated in the development of micro controller circuits.      ", "Worked on writing C# scripts for animation and setting up  3d models inside of the unity environment. Collaborated with teammates to design hardware and resolve bugs."]], ["NodeNodeJS", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>I saw a story a while back about a guy who made a clustered supercomputer with raspberry pis, and saw that the hardware organisers had like 60+ unused RasPis that I could use to make a supercomputer.</p>\n<h2>What it does</h2>\n<p>There is a master RasPi that controls everything and a bunch of slaves that do the actual processing grunt work. The master will accept some data and a function that processes the data and then tells the slave to process each datum, receives the computed results, and returns the results.</p>\n<h2>How I built it</h2>\n<p>I threw together some Node.js</p>\n<h2>Challenges I ran into</h2>\n<p>The raspberry pis kept breaking. Constantly</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I made software that can be deployed to make a cloud</p>\n<h2>What I learned</h2>\n<p>The Raspberry Pis are not reliable at all.</p>\n<h2>What's next for NodeNodeJS</h2>\n<p>Add dozens of RasPis to increase the processing power.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/AbhinavMadahar/NodeNode.Js\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/AbhinavMadahar/NodeNode.Js\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Skin On Me", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Skin On Me \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/754/datas/gallery.jpg\"/>\n<p>\n<i>Title rotation 2</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Skin On Me \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/753/datas/gallery.jpg\"/>\n<p>\n<i>Title roation </i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Skin On Me \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/755/datas/gallery.jpg\"/>\n<p>\n<i>Headline</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Skin On Me \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/756/datas/gallery.jpg\"/>\n<p>\n<i>How it works</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Skin On Me \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/757/datas/gallery.jpg\"/>\n<p>\n<i>Image upload</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Skin On Me \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/758/datas/gallery.jpg\"/>\n<p>\n<i>Results</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>The inspiration for \"Skin On Me\" was to help identify a skin disorder some person may have but are not aware of what it actually is. This would have the potential to save many lives by catching preventable skin disorder early.</p>\n<h2>What it does</h2>\n<p>With the application the user can easily able to identify any possible skin disorder with a degree of confidence. First, the user will take a photo of their condition under normal light conditions, then the application will process the image through IBM Watsons' Visual Recognition API to determine what the skin disorder might be. The application will return the most likely skin disorder and provide useful information to the user about where to get treatment.</p>\n<h2>How we built it</h2>\n<p>We built this application using IBM Bluemix, more specifically IBM Watson APIs and services for Visual Recognition. First we created an application through Bluemix using the Internet of Things boiler plate using Node RED. With Node RED we created flows to interact with the Visual Recognition service and process our images. Results will be returned back to our web application where the user can view it.</p>\n<h2>Challenges we ran into</h2>\n<p>When creating the application using Node RED with Visual Recognition(beta), we came across through many technical issue due to unavailability of proper documentation, we ran into some serious challenges, including problems encountered with the custom classifiers, which took couple hours to figure it out.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We contributed with the knowledge of functionality of IBM's latest API with filling in the loopholes in incomplete documentation and figuring out the API eventually after getting help from IBM personnel's.</p>\n<h2>What we learned</h2>\n<p>We learned about IBM Bluemix products and services, mainly creating applications and using the Watson services for Visual Recognition. Additionally we gained practice of using Node RED for creating flows with IBMs services, and using Postman to test data calls. </p>\n<h2>What's next for Skin On Me</h2>\n<p>We intend to get Watson to work as intended, currently waiting on updates to Node RED before we can continue. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bluemix\">bluemix</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ibm-watson\">ibm-watson</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/curl\">curl</a></span></li><li><span class=\"cp-tag\">node-red</span></li><li><span class=\"cp-tag\">ibm-iot</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/akw54/Skin-On-Me\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/akw54/Skin-On-Me\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on setting up the application on IBM Bluemix, creating the front end of our application as well as collecting images to teach Watson API", "I worked on the backend of the application where I use IBM visual recognition tool to provide a classification match.  I had to insert our own preset classification using REST calls and output it to json. ", "I contributed on gathering the quality images for the purpose of machine learning, which was the core aspect of the project. I contributed a bit on front-end, mainly HTML5 and CSS3. \n", "Helped gather resources for machine learning algorithms. Made JSON schema files for disorder query. I also contributed to the web app.", ""]], ["Essay Namer", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Whenever I finish writing an essay, I always have to stop and think \"what should I name this thing??\"  I had also heard about Watson and thought that this would be a good opportunity to learn about the api while making a useful app.</p>\n<h2>What it does</h2>\n<p>It takes an essay as input and generates some possible titles based on the ideas contained inside of it.</p>\n<h2>How I built it</h2>\n<p>I utilized the concept insights service provided by IBM Bluemix in order to analyze the input text and I used python on the backend to generate the titles.</p>\n<h2>Challenges I ran into</h2>\n<p>My own confusion about how webapps run.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Learning the javascript necessary to complete the app.</p>\n<h2>What I learned</h2>\n<p>Interacting with IBM Bluemix and usage of cloud foundry tools for deployment.<br/>\n  became more familiar with javascript and web app </p>\n<h2>What's next for Essay Namer</h2>\n<p>More refined title generation (including clever use of idioms).</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ibm-watson\">ibm-watson</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bluemix\">bluemix</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://essaynamer.mybluemix.net/\" rel=\"nofollow\" target=\"_blank\" title=\"http://essaynamer.mybluemix.net/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>essaynamer.mybluemix.net</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Consensus", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Consensus \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/445/datas/gallery.jpg\"/>\n<p>\n<i>Product Visualization</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Consensus \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/542/datas/gallery.jpg\"/>\n<p>\n<i>User-review sentiment analysis</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Consensus \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/478/datas/gallery.jpg\"/>\n<p>\n<i>User-review sentiment comparison</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Consensus \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/477/datas/gallery.jpg\"/>\n<p>\n<i>Individual user food preferences</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>The inspiration of this hack came from the countless hours wasted on weekend nights trying to plan a place to go out to eat or drink. The complexity of the decision increases with the number of friends in the group. With varying preferences and food choices we decided it was high time there was an application that could help any group finally reach a <strong>Consensus</strong>!</p>\n<h2>What it does</h2>\n<p><strong>Consensus</strong> is a web application that uses Yelp-Developer API to retrieve various check-ins and reviews by all members in a group. The application then sends these user-reviews to IBM Watson's Tone Analyzer to determine the sentiment of the review. Based on this analysis each member has a profile that keeps track of their cuisine preferences. When the member joins a group his preferences are compared with the preferences of other members and the application tries to reach a consensus as to what will be the most likely places that the specific group of members would enjoy.</p>\n<h2>How we built it</h2>\n<p><strong>Consensus</strong> was built completely in python on the back-end. The Yelp- Developer API was used to retrieve food preferences of the members. \nFirst, python was used to query the Yelp API for information regarding businesses.\nNext, python was used to query IBM Watson's analysis API with individual user reviews as the input</p>\n<p>The results from IBM Watson were parsed, cleaned and then visualized for better clarity</p>\n<h2>Challenges we ran into</h2>\n<ol>\n<li>Yelp API isn't the most well organized. So that took us a while to get a hang of</li>\n<li>IBM Watson has limitations on query lengths and so we ran into some issues because of that. </li>\n<li>Our team had two members both more comfortable with back-end than Front end UI/UX, hence that was a major roadblock. But like true Hackathon Hackers we did our best to figure it out and ended up with a fairly awesome proof of concept website.</li>\n</ol>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are proud of our idea and the meaningful insights we could retrieve from social media activity. </p>\n<h2>What we learned</h2>\n<p>We got acquainted with Yelp and IBM Watson API.\nWe learned how to make a website wth decent visualizations</p>\n<h2>What's next for Consensus</h2>\n<p>We plan to pull in data from other social media websites. Especially Instagram, since posting your favorite food on Instagram in most cases a higher priority than actually enjoying the meal!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/yelp\">yelp</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ibm-watson\">ibm-watson</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-chart\">google-chart</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Mo2000/Consensus\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Mo2000/Consensus\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the backend. I created the communication between Consensus and IBM Watson, as well as most of the parsing and the final algorithm to perform the matching between the two friends.", "I worked on the Yelp API calls. Some back-end  JSON clean up and the front-end visuals. Other than that, the idea of the application was mine and also worked on the calculations for reaching a consensus based on the metrics we collected. "]], ["The Bit Mixer 3000", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"The Bit Mixer 3000 \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/751/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"The Bit Mixer 3000 \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/752/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"The Bit Mixer 3000 \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/759/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"The Bit Mixer 3000 \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/760/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Always tired of making mixed drinks at your parties? Looked into those fancy automated bartenders and realized you'll have to give up a term of classes to afford it? Don't worry, the The Bit Mixer 3000 is here. </p>\n<h2>What it does</h2>\n<p>A modular design allowing you to swap out bottles of your favorite mixers allows you to make sure your party lasts all night long! The The Bit Mixer 3000 App automatically gives you recommendations on the best drinks to make from you selection of drinks, even allowing you to remotely pour your favorite drinks!</p>\n<h2>How we built it</h2>\n<p>Using a Raspberry Pi with a custom built circuit </p>\n<h2>Challenges we ran into</h2>\n<ol>\n<li>Integrating the solenoids to the design and making then work simultaneously</li>\n<li>Working with Android Studio for the first time</li>\n<li>Using GPIO pins on a Raspberry Pi to control the solenoids through a relay for the first time</li>\n<li>Water leaking and potentionally making it not functional 20 minutes before demo.</li>\n<li>Troubleshooting the circuit/electronics since we blew out a few components.</li>\n</ol>\n<h2>Accomplishments that we're proud of</h2>\n<h2>What we learned</h2>\n<p>We learned </p>\n<h2>What's next for Bit Mix</h2>\n<ol>\n<li>Recreating the mechanical design with more structurally stable materials. </li>\n<li>Better liquid proof the electronics and the seal </li>\n<li>Adding more drink mixes and recipes<br/></li>\n</ol>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["VeggieOut!", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"VeggieOut! \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/559/datas/gallery.jpg\"/>\n<p>\n<i>Logo</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Nikush's parent's who struggle to find vegetarian restaurants. </p>\n<h2>What it does</h2>\n<p>Veggieout.tech consists of a ranking system for how vegetarian friendly restaurants are by typing in th elocation of where you are. </p>\n<h2>How I built it</h2>\n<p>I started with basic web development knowledge so I started just making the design. I soon realized how much logic would be involved in the project so I almost quit but instead decided to watch videos on jQuery and PHP. We then decided to build the front-end with the Google Places API, jQuery, HTML5, CSS3, and Bootstrap and then began programming the server-side with SQL and PHP.</p>\n<h2>Challenges I ran into</h2>\n<p>I ran into many problems bridging the API and working with it but after hours of struggling we figured out our issue. The most trouble we had was communicating variables between HTML, Javascript, and PHP at around 4:00am. Finally, we ran into trouble deploying it from the laptop to the web. It all worked out however.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Managing information in and out of a database.\nUsing Google's API's to make my application smarter.\nUsing both front-end and back-end development techniques to build every part of the website from scratch.</p>\n<h2>What I learned</h2>\n<p>I learned how to switch variables from different codes, brdige apis together in order to perform a function. and control a database. </p>\n<h2>What's next for VeggieOut!</h2>\n<p>Include Vegan and Gluten-free. Also, transorm from a demo to a real live service. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mysql\">mysql</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/phpmyadmin\">phpmyadmin</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/apache\">apache</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-maps\">google-maps</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-places\">google-places</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/git\">git</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/gimp\">gimp</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/photoshop\">photoshop</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/brackets\">brackets</a></span></li></ul>\n</div>\n</div>", ["I worked on the design of the website and the logo for VeggieOut. I did the programming using bootstrap and Adobe Photoshop. My partner worked on the front end/back end of the website. ", "I worked on the full stack, front end/back end of the website. I did the programming, jQuery, Javascript, PHP, SQL, HTML, Css and my partner designed the website"]], ["Contain The Virus", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Contain The Virus \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/709/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Contain The Virus \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/710/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Contain The Virus \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/711/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Contain The Virus \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/712/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Contain The Virus \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/714/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Contain The Virus \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/724/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<div class=\"alert-box alert\">\n        This image is currently processing. Please be patient...\n      </div>\n<img alt=\"Contain The Virus \u2013 screenshot 7\" class=\"software_photo_image image-replacement\" src=\"https://devpost-challengepost.netdna-ssl.com/assets/defaults/software-d4334efb72013df43784baffede9d379.gif\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Conway's Game of Life has always been a fascinating topic in the area of computing and we never really knew how to implement it, so we came up with this.</p>\n<h2>What it does</h2>\n<p>Provides multilevel play based on state shapes, to simulate viral spread.</p>\n<h2>How we built it</h2>\n<p>We split the work so that each of us work continuously on our fortes. Zach did the majority of the backend coding and implementation, while I did all of the front end design and html work.</p>\n<h2>Challenges we ran into</h2>\n<p>We lost almost a third of our backend at hour 22, and then ran into formatting issues at hour 23.5.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Our first Hackathon was a success!</p>\n<h2>What we learned</h2>\n<p>CSS sucks.</p>\n<h2>What's next for Contain The Virus</h2>\n<p>More levels, and loads more fun!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li></ul>\n</div>\n</div>", ["I used NetBeans to develop the back-end with javascript. This included playing with the dynamics of the game to make it entertaining as well as interacting with html elements in the webpage to update content for the user. ", ""]], ["Seeking Algo", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>Our Initial Vision</h1>\n<p>We wanted to <strong>democratize finance</strong>. Our project brings the tools and information neccesary to create the foundation of trading algorithms, and puts it on a platform that even an aspirational high schooler can access. With Seeking Algo, we hope to provide tools that will allow investors of all skill and experience levels to test their ideas, as simple or as complex as they come, on decades of financial data, including:</p>\n<ul>\n<li>Equity markets daily opens, closes, highs, lows, volume</li>\n<li>Debt markets daily opens, closes, highs, lows, volume</li>\n<li>Several dozen macroeconomic events, as mined from news sources that have been digitized, including unemployment reports, interest rates, and geopolitical conflict, to name a few</li>\n<li>Inter-period price variation, volatility variation, and short interest</li>\n</ul>\n<p>These tools can be fined tuned by the user, and as soon as our application is done crunching the numbers, there is instant feedback for the investor as to how their algo would have performed in the time period that they have selected. Hopefully, with enough exploration, investors will find algos that run so well on historical data that they will incorporate these trading strategies in their own investing, helping them find some alpha after we have helped them to seek their algorithm.</p>\n<h2>Where we ended up</h2>\n<p>We were able to compile several years' worth of financial data, and deployed a web app that lays out the user interface for future functionality expansion. We spent a large sum of time devoted to the pursuit of interesting conclusions from the usage of IBM's Bluemix and the host of Twitter tools, specifically the language analytics. Ultimately, we did not include the Twitter features in our final product, but got to realize the true power of Bluemix. In the end, we added a basic chat application alongside the web app, which Bluemix allowed us to gracefully craft in about 4 minutes. Overall, while our production didn't meet our original expectations, I'm sure my teammates and I all had a valuable experience these last 24 hours</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ruby-on-rails\">ruby-on-rails</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/heroku\">heroku</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bluemix\">bluemix</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://boiling-sierra-2472.herokuapp.com/\" rel=\"nofollow\" target=\"_blank\" title=\"http://boiling-sierra-2472.herokuapp.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>boiling-sierra-2472.herokuapp.com</span>\n</a></li>\n<li><a href=\"http://boiling-sierra-2472.herokuapp.com/\" rel=\"nofollow\" target=\"_blank\" title=\"http://boiling-sierra-2472.herokuapp.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>boiling-sierra-2472.herokuapp.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Flex Flight", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<div class=\"alert-box alert\">\n        This image is currently processing. Please be patient...\n      </div>\n<img alt=\"Flex Flight \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"https://devpost-challengepost.netdna-ssl.com/assets/defaults/software-d4334efb72013df43784baffede9d379.gif\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Star Wars and a desire to work with hardware</p>\n<h2>What it does</h2>\n<p>A Virtual Reality game in which you fly through space battling Tie Fighters. We will attach flex sensors to a glove, four in total with one on each index finger and one on each middle finger. Connecting this to the Arduino, we can then grab data that lets us know when you are bending your finger. Based on this information, your left hand controls the movement of your ship, while your right hand allows you to shoot.</p>\n<h2>How we built it</h2>\n<p>To start, we attached the flex sensors to our gloves' middle and index fingers. Those flex sensors were then attached to a breadboard, which was attached to our arduino. The arduino was then attached to our laptop, which then took in the data from the arduino as a voltage emitted by each of the flex sensors. Using this data and putting on certain ranges, we could determine whether the sensor was bent or not. From here, that data was then imported into our C# code from Unity. As this was happening, we also developed a basic outline for the Virtual Reality game.</p>\n<h2>Challenges we ran into</h2>\n<p>Our team is a very software experienced group. The three of us have all done some web development, but none of us were really familiar with any form of hardware, especially not the arduino. This presented a lot of problems as we spent most of the hackathon trying to figure out exactly how everything worked and what we could do. Our original idea had to be scrapped due to getting the wrong hardware. In addition, after setting up the arduino we had a a lot of trouble figuring out how to get it to work with Unity and just barely managed to figure that out.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We're pretty proud that we managed to get the arduino to work at all, even though it didn't all go quite as planned. We also learned a tremendous amount.</p>\n<h2>What we learned</h2>\n<p>If nothing else this hackathon was definitely a learning experience. Not only did we all learn how to work with breadboards, circuits, and the arduino, but we even learned a lot about the capabilities of the various pieces of hardware that we didn't manage to get. After this hackathon, working with hardware doesn't seem quite as scary, and we're all excited to keep going.</p>\n<h2>What's next for Flex Flight</h2>\n<p>The game is not currently working as we hoped it would, but we do know how to get both the arduino and virtual reality working as two separate entities. We definitely want to keep working at some point to figure out how to get it all as one working project.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag\">bobo-vr</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li></ul>\n</div>\n</div>", ["", "", ""]], ["watchutrynaeat", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>I was inspired by the challenge by health company to help the consumers</p>\n<h2>What it does</h2>\n<p>This program is based on the person's allergy problems diagnosed by the doctor. Our design helps you avoid food with allergens. This tracks dietary habits with the experts' advices and best recommendations tailored for your needs.</p>\n<h2>How we built it</h2>\n<p>We used HTML and CSS the skeleton of website\nand used JAVASCRIPT to create more complex web tools\nand used ajax to connect to a mongodb database to retrieve user and food data.</p>\n<h2>Challenges we ran into</h2>\n<p>Most of us didn't know html/css little to no experience to ajax and mongodb\nto connect the backend and frontend database.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We successfully created a website with a huge potential\nwhich fulfill the needs of contemparary human adults suffering \ntheir medical and allergic conditions.</p>\n<h2>What we learned</h2>\n<p>We learned css, html, javascript and mongodb, and ajax and how to implement apis.</p>\n<h2>What's next for watchutrynaeat</h2>\n<p>We're trying to make a mobile app</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ajax\">ajax</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://watchutrynaeat.com\" rel=\"nofollow\" target=\"_blank\" title=\"http://watchutrynaeat.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>watchutrynaeat.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the front-end and made the \"Feed\" page.", "I worked on the back end, creating a mongodb database of users and meals, and connected the webpage to the database using AJAX for the first time", "", ""]], ["InterviewBuddy", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"InterviewBuddy \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/614/datas/gallery.jpg\"/>\n<p>\n<i>Criteria Page</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"InterviewBuddy \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/615/datas/gallery.jpg\"/>\n<p>\n<i>Home Page</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"InterviewBuddy \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/616/datas/gallery.jpg\"/>\n<p>\n<i>Computer Science Track</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"InterviewBuddy \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/617/datas/gallery.jpg\"/>\n<p>\n<i>Business Track</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration: As a team of freshman, sophomore and junior college students, we realized that we lacked a free tool that could help us study for technical and business case interviews under a timed environment.</h2>\n<h2>What it does: InterviewBuddy is a fast-paced skill drill designed to prepare students for technical and business case interviews under real-time conditions. It is a web application</h2>\n<p>built to help students study more efficiently by providing a test bank of problems\ncollected from various online websites and books. The users selects the area they want to focus on (currently we offer only three choice: computer science, business or combination of both) and the time length they wish to practice. </p>\n<h2>How we built it: We mainly used HTML for the markup, CSS for styling, and Javascript for interactivity.</h2>\n<h2>Challenges we faced: Most of the team were not familiar with JavaScript, which was our main challenge during the hackathon. Our team also had little experience in project management, so we faced difficulties in managing our time and estimating how much time certain features would take to complete.</h2>\n<h2>Accomplishments that we're proud of: Learning JavaScript in less than 24 hours and applying it to something meaningful</h2>\n<h2>What we learned: How to make a countdown timer using JavaScript, when and when not to use database servers, how to properly use Bit Bucket and Github</h2>\n<h2>What's next for InterviewBuddy: The next step for InterviewBuddy would be to continue to upgrade our current features. We would like to integrate video interviewing into our platform that would allow the user get a feedback on his performance. The user would record a video under the time given, which would later be evaluated by someone experienced.</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li></ul>\n</div>\n</div>", ["", "", ""]], ["WebCommander", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"WebCommander \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/699/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"WebCommander \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/702/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to leverage the power of the Amazon Echo and the new and innovative interface of voice commands. </p>\n<h2>What it does</h2>\n<p>Allows the user to verbally describe to create an HTML view in the browser in real time. </p>\n<h2>How we built it</h2>\n<p>We created an Alexa Skill service in Amazon's AWS (using an Amazon Lambda function written in Java). The Lambda function at its core uses HTTP to contact the NodeJS server managing the AngularJS-based view, which frequently polls the NodeJS server for updates in its queue.</p>\n<h2>Challenges we ran into</h2>\n<p>Limited documentation for Amazon and Java-related services; difficult networking issues related to the use of non-personal networks which blocked port-forwarding and prevented effective network writing. Additionally working on very little sleep tends to turn your brain to goop. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Every part of this project was a team effort; and leveraging so many diverse, unrelated systems to produce a coherent result. </p>\n<h2>What we learned</h2>\n<p>AWS, Java networking, nodejs, working with limited documentation, working with Amazon echo, ad-hoc network rigging. </p>\n<h2>What's next for WebCommander</h2>\n<p>The sky is the limit! (Expanded community of contributors) </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/angular-js\">angular.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bluemix\">bluemix</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/zurb-foundation\">zurb-foundation</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag\">lambda</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-alexa\">amazon-alexa</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://tehjawn.github.io/dragonhacks2016s/\" rel=\"nofollow\" target=\"_blank\" title=\"http://tehjawn.github.io/dragonhacks2016s/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>tehjawn.github.io</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Search && Rescue", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/imeghx1lbEw?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Search &amp;&amp; Rescue \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/667/datas/gallery.jpg\"/>\n<p>\n<i>The drone</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Search &amp;&amp; Rescue \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/669/datas/gallery.jpg\"/>\n<p>\n<i>The ducks we were rescuing</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Search &amp;&amp; Rescue \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/671/datas/gallery.jpg\"/>\n<p>\n<i>The drone again</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>Project Search &amp;&amp; Rescue</h1>\n<h3>Mission</h3>\n<p>To reduce the cost and increase the functionality in modern search and rescue applications in a post-hurricane environment by utilizing automated quadcopter drone(s) and image recognition algorithms. Our hardware is designed to reduce the overall flight time of S&amp;R helicopters by drone-scouting a predetermined area, locating survivors, and transmitting their coordinates to the S&amp;R station. Upon further testing, our software is designed to be able to support:</p>\n<ul>\n<li>Thermal recognition (visual feed FTIR)</li>\n<li>Machine learning principles (detecting false positives)</li>\n<li>Gaussian Coordinates (stabilization and location) </li>\n</ul>\n<p>For the scope of this hackathon, our hardware has an automated flightpath in which it collects aerial images over certain \"stop points.\" As images are collected they are analyzed using modal factor RGB normalization and are \"scanned\" for objects in a certain color range (a rubber duck). Once found, the location is sent to the user in the form of Cartesian coordinates. Theoretically, once the location is sent to the user, the used is then able to go \"rescue\" the duck without having to manually search via a search and rescue helicopter. This significantly reduces the cost of S&amp;R endeavors and greatly increases the efficiency of S&amp;R teams as a whole.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag\">quadcopter</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ar-drone\">ar.drone</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/dnj26/HoldMyRamen\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/dnj26/HoldMyRamen\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I wrote the pathing and search algorithm", "I developed and worked through a lot of the image recognition system", "I worked on team formation, logistics, and design. Although this project is far outside of my scope of knowledge, I learned a lot about leadership skills, program theory, and 3D printing techniques.", ""]], ["GrooveCopter", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We saw that drones were available to be used, so we were interested in coming up with an application for one.</p>\n<h2>What it does</h2>\n<p>First, we use the drone to take pictures of the various people's in a room. Then, we use Project Oxford to register the emotions in order to determine the overall mood of the room. We then play a song off a playlist depending on the mood that was found in the room.</p>\n<h2>How I built it</h2>\n<p>We built this using node.js and python.</p>\n<h2>Challenges I ran into</h2>\n<p>Problems with the camera on the drone, and connection problems.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>The most relieving point during the project was actually getting the drone to take pictures that we could save to a computer, so that is probably the biggest accomplishment.</p>\n<h2>What I learned</h2>\n<p>Node.js.</p>\n<h2>What's next for GrooveCopter</h2>\n<p>More tunes!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ar-drone\">ar.drone</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/szaman19/GrooveCopter\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/szaman19/GrooveCopter\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Ink", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p><br/>\n</p><p></p>\n<p><br/>\n  Learn how to code <b>faster</b> by using .Ink, a very basic programming language for education.\n  <br/>\n<br/>\n<br/></p>\n<p><br/></p>\n<h2>Inspiration</h2>\n<p>Kids are getting into programming in middle school, and some of them are genuinely confused by the different data types and return types and all. Everybody still forgets semicolons. These minor setbacks make programming a chore, and getting code to compile seems futile. To combat this, we made Ink, because its the easiest way to get what you need done.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/tim-lupo/Ink\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/tim-lupo/Ink\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the Ink IDE, which was originally meant to be a web IDE but then switched to a simple Java Swing GUI.", ""]], ["So Easy A Baby Could Do it!", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"So Easy A Baby Could Do it! \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/674/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Practicing speed-cubing used to require the constant carrying of bulky timers or cumbersome smartphone apps that could not accurately measure your time. With this new Pebble smart watch interface a user can easily get accurate speed-cube timing </p>\n<h2>What it does</h2>\n<p>Our watch app measures the precise time it takes a user to solve a Rubik's cube.  The timer starts automatically when the user picks up the cube ans stops as soon as they put it down.  This allows them to get a more accurate time to their solve.</p>\n<h2>How we built it</h2>\n<p>We used Pebble's cloud developer to create an app for the watch.  This software enabled us to access the accelerator inside the Pebble.  We used the raw data flowing in from the accelerator to measure when the user picks up the Rubik's Cube, and again when they put it down.  These two measurements allowed us to find the precise time it took the user to solve the cube without any direct interaction from the user.</p>\n<h2>Challenges we ran into</h2>\n<p>Our biggest challenge was creating an algorithm that could distinguish the user picking up and putting down the cube, from every motion in between.  This algorithm required hours of testing the various readings given during different motions.  It also required testing many algorithm as we improved each one as we went along.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are most proud of finding a way to tell the difference between a user rotating the cube while solving versus just picking it up or putting it down.</p>\n<h2>What we learned</h2>\n<p>Initially, we thought it wouldn't take us long at all to make this app.  However, we were wrong in thinking that the motions we were trying to detect could be found by simply looking for a change in acceleration.  We learned that motion was a lot more complex than this, especially in a 3D system.</p>\n<h2>What's next for So Easy A Baby Could Do it!</h2>\n<p>There are a couple of ideas we had to take this idea further:</p>\n<ul>\n<li>    Keep track of the user's times, so he or she can instantly see how each solve compares to his or her average</li>\n<li>    Create a web based or mobile app platform that would graph the user's solves and let him or her see how he or she has progressed</li>\n<li>     Continue to improve the accelerator algorithm</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/pebble\">pebble</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c\">c</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/anjmittu/PebbleFace\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/anjmittu/PebbleFace\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Bargain Security", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>People get robbed too often.</p>\n<h2>What it do</h2>\n<p>The direction of the camera on the servo is controlled by Google Cardboard.</p>\n<h2>How we built it</h2>\n<p>Arduino and</p>\n<h2>Challenges we ran into</h2>\n<p>PySerial</p>\n<h2>What's next for Bargain Security?</h2>\n<p>Improvement.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/hardware\">hardware</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li></ul>\n</div>\n</div>", ["", "", ""]], ["Punching Bullets", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/EJfdhWjsIbQ?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration - VR technology is getting a lot of buzz lately, especially considering CES and Oculus's success and imminent public release of their own VR headset. As computer engineers with only 24 hours and no prior Oculus coding experience, we wanted to build a small project in Unity to showcase the technology.</h2>\n<h2>What it does - We have created a 3D game level with different rooms and interactive objects. Players can move around with the keyboard and look/aim by moving their head. Players can also shoot \"bullets\" that make a punching sound when they hit the wall. Players can interact with objects in the environment by running into them or shooting them with the bullets. Targets are placed throughout the map to practice targeting.</h2>\n<h2>How we built it - The project was made in Unity 5. Unity comes with Oculus Rift support, making it simple to bind the Oculus screen and movement to the in game camera in order to give the game an immersive feel. Blender was used to create the 3D objects that compose the level.</h2>\n<h2>Challenges we ran into - Initially, we received the Rift thinking any computer with decent graphics hardware could drive it. Running into problems using a mobile graphics card in a laptop, we resorted to using a desktop gaming setup for our project. Having the mouse and Oculus Rift both bound to the camera view caused problems when orienting the shooting direction and as such, mouse movement had to be disabled resulting in slightly harder controls but a more consistent shot.</h2>\n<h2>Accomplishments that we're proud of - Creating synchronization between the player view camera, the shooter's orientation, and the Oculus Rift orientation allows the player to simply look where they want to shoot. Despite relatively basic graphics, the Oculus integration with Unity allowed us to create an engaging VR environment.</h2>\n<h2>What we learned - Creating 3D objects in blender is easier than Unity, allowing us to spread the workload out among teammates. The Oculus Rift is very picky with compatibility, not only the graphical horsepower of the driving system but the graphics adapter configuration, operating system, display driver version, and day of the week.</h2>\n<h2>Going forward \u2013 There are plenty of improvements that could be made to this basic demo such as buttons that open doors, pressure plates, and more sound ques.  The wonderful thing about the software used here is that there are limitless possibilities to show off what the oculus rift can do.</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/blender\">blender</a></span></li></ul>\n</div>\n</div>", ["Performed extensive troubleshooting getting the Oculus Rift to interface with the computer. Developed and implemented level design with interactive components.", "I was the lead programmer. I put the parts my team members made together and integrated it into unity and made it into a game", "Assisted on implementing level design and animation.", "created the objects used in the level as well as the level templates and assisted with the animation bits (didn't make it in final project)"]], ["Boogie Break", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to design a program that would give people the chance, and a reminder, to get up and move while they're at their computer for an extended period of time. This program is designed to add fun and useful breaks into peoples' everyday lives.</p>\n<h2>What it does</h2>\n<p>Boogie Break is a web extension designed to improve the health, productivity, and stress level of its users. Every thirty minutes the user is in Google Chrome, Boogie Break will notify the user that they have been inactive for an extended period of time and direct them to a fun song or short (roughly five minute) youtube exercise video in a category of their choosing.</p>\n<h2>How we built it</h2>\n<p>We created it using javascript functions, which complemented html pages. These work together, with the help of a .json script, to give functionality to the chrome extension.</p>\n<h2>Challenges we ran into</h2>\n<p>We ran into challenges implementing our html and javascript in the Google Chrome environment. There was a lot of debugging of permissions and linking between files that needed to be ironed out to have our extension run smoothly.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are proud of our ability to start from scratch and learn how to create a Chrome extension in 24 hours -- especially since this is our first hackathon!</p>\n<h2>What we learned</h2>\n<p>We learned, and furthered our understanding of, javascript, html, css, and json programming. Only one of the three team members had experience in this field, so teamwork was very important!</p>\n<h2>What's next for Boogie Break</h2>\n<p>Future iterations of Boogie Break could feature a more developed user interface, additional options for wait time between reminder messages, and more options for type of exercise.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n</div>", ["", "", ""]], ["GyMyo", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>GyMyo</h2>\n<h2><strong>Inspiration:</strong></h2>\n<p>We wanted to develop a product that making an impact on the healthcare system and that would attack the very basic problems faced by people.</p>\n<h2><strong>Working:</strong></h2>\n<p>This is a Gym activity tracker using a single Myo or 2 Myos combined.\nIt has all the features combined together as it includes features as accelerotometer and emg data.</p>\n<p>GyMyo is programmed to find our if you are performing <strong>dumbbells, crunches or pushups</strong> and would analyse the data accordingly to find out the number of the same.\nIt also has the previous feature of <strong><a href=\"http://devpost.com/software/myowalk\" rel=\"nofollow\">MyoWalk</a></strong> included that would find out if a person has taken a fall and would inform accordingly.</p>\n<p>V 1.1\nMyo is generally an armband used for Gesture based detection. We tweaked it to be used as a <strong>gym band</strong> that finds out the different activities done in gym and the in the later version planning to include a calorie tracker too based on the calories burnt per exercise.</p>\n<p>V 1.2\nWe have included a calorie calculator too that would give a notification as to how many calories have been burnt.</p>\n<h2><strong>Challenges we faced:</strong></h2>\n<p>We started out working with 1 Myo and Edison board trying to make it IoT device but then put that away and concentrated in using <strong>ONLY Myo</strong> (2 at a time) as Edison complicated our processes.</p>\n<h2><strong>Proud Achievements:</strong></h2>\n<p>Tweaking the device to work as a leg band whereas it itself is an armband. We could actually detect the number of bumbbells, crunches done as well as send an alert message if a person falls. This can be a lot useful for <strong>Old Aged People</strong> as well as <strong>Gym and Health enthusiasts</strong>.</p>\n<h2><strong>Future Scopes:</strong></h2>\n<p>We are planning to make an app out of this which can be used for tracking gym data with more accuracy (no app provides data of the activities done in Gym automatically except treadmill.)</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/matlab\">matlab</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/myo\">myo</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/rams16592/DragonHacks16\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/rams16592/DragonHacks16\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I helped in setting up the neural networks for the system that helps in analyzing the data.", "I took care of tweaking the MYO to use it as a gym band and leg band", "I combined the tweaked Myo and neural networks to track the gym data and made the software around that."]], ["Fruit Falcon", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>What it does</h2>\n<p>It's fruit ninja that gives haptic feedback when you hit something (a bomb or a fruit).</p>\n<h2>How I built it</h2>\n<p>I used Unity (C#) and an unofficial Falcon driver for C#.</p>\n<h2>Challenges I ran into</h2>\n<p>The Falcon isn't super documented, so I had to figure it out myself.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag\">falcon</span></li><li><span class=\"cp-tag\">novint-falcon</span></li></ul>\n</div>\n</div>", [""]], ["VR Firebending Dragon Rider", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"VR Firebending Dragon Rider \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/706/datas/gallery.jpg\"/>\n<p>\n<i>Dragon Model</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"VR Firebending Dragon Rider \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/790/datas/gallery.jpg\"/>\n<p>\n<i>Side View of Dragon</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We all loved watching Avatar the Last Airbender as children and this is Dragon Hacks, so naturally a firebending dragon riding simulator came to mind</p>\n<h2>What it does</h2>\n<p>You ride through the skies on your loyal dragon as you try to destroy cubes that an evil wizard has created to kill the innocent sheep. </p>\n<h2>How I built it</h2>\n<p>We used an Oculus Rift to interact with the 3D environment that we created in Unity. To control the dragon and firebending aspects of the game, the user wears two Myos on each arm.</p>\n<h2>Challenges I ran into</h2>\n<p>Getting two Myos to work with one dongle. Using the Oculus Rift for VR. </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Novel control system for a dragon.</p>\n<h2>What I learned</h2>\n<p>How to interface with multiple Myos while in a virtual reality environment.</p>\n<h2>What's next for VR Firebending Dragon Rider</h2>\n<p>A continuation for the story presented. This would involve fighting the wizard and defeating him. We also hope to create more puzzle challenges in the future levels to come.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/oculus\">oculus</a></span></li><li><span class=\"cp-tag\">rift</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/myo\">myo</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/maya\">maya</a></span></li></ul>\n</div>\n</div>", ["", "", ""]], ["Auxilium", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Auxilium \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/652/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Auxilium \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/653/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Auxilium \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/654/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Auxilium \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/655/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Auxilium \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/705/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We seek to make life easier for people with disabilities, the elderly and anyone who needs help</p>\n<h2>What it does</h2>\n<p>Connects various daily appliances to internet to be controlled by a mobile device. Included functionalities -</p>\n<ul>\n<li>Visitor notification with face recognition</li>\n<li>Door opening with mobile device</li>\n<li>Extendable to any device with on/off states</li>\n<li>Simple communication severely disabled patients like those suffering from Locked-in syndrome</li>\n</ul>\n<h2>How we built it</h2>\n<p>We built a Internet of Things network using various technologies to interact with each other.\nBluemix, IoTF, Node Red - Internet of Things server\nAndroid Studio, Retrofit - Mobile App\nSpark core, Particle, Java - IoT devices\nMuse, Python - Signaling for severely disabled</p>\n<h2>Challenges we ran into</h2>\n<p>There is very little support available online for Bluemix and we ran into a lot of roadblocks. We ended up changing our solution and technology a lot of times because of this. We had to establish communication between 4 different things: a door camera app, an app for turning lights/doors on or off, a Bluemix server that did all the processing and a Spark core that showed the status of the locks and lights. Integrating various APIs like Twilio and Alchemy was also challenging.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Establishing communication between 4 different apps, learning a lot of new technologies that we had never worked on before and successfully completing our first ever IoT hack.</p>\n<h2>What we learned</h2>\n<p>Bluemix, Node Red, Retrofit, Spark</p>\n<h2>What's next for Auxilium</h2>\n<p>Connecting with more devices, using more public APIs for automating tasks and build a seamless integrated hub for controlling all devices connected to the Internet of Things are some of the things that we are planning to do next.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/muse\">muse</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/particle\">particle</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bluemix\">bluemix</a></span></li><li><span class=\"cp-tag\">retrofit</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag\">nodered</span></li><li><span class=\"cp-tag\">iotf</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n</div>", ["", "", "", ""]], ["AmeriToots", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>I got here late because my car broke down and had to grab a rental. Plus I beyond lost my mind in the process.</p>\n<h2>What it does</h2>\n<p>It provides tank servicers a real-time monitoring system in their trucks so they can dispatch to a location quickly.</p>\n<h2>How I built it</h2>\n<p>I used basic ultrasound principles, then hooked the data to wireless networks.</p>\n<h2>Challenges I ran into</h2>\n<p>I got robbed of time. And teammates</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>See above</p>\n<h2>What I learned</h2>\n<p>Don't wait for people if you don't have to</p>\n<h2>What's next for AmeriToots</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li></ul>\n</div>\n</div>", [""]], ["FitRhythm", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"FitRhythm \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/609/datas/gallery.jpg\"/>\n<p>\n<i>Workout and Volume Control</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"FitRhythm \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/610/datas/gallery.jpg\"/>\n<p>\n<i>Exercise Selections</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"FitRhythm \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/611/datas/gallery.jpg\"/>\n<p>\n<i>Start Page</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"FitRhythm \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/612/datas/gallery.jpg\"/>\n<p>\n<i>Desired Intensity Level</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"FitRhythm \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/613/datas/gallery.jpg\"/>\n<p>\n<i>App Icon</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>The inspiration for FitRhythm is based on our team's desire for an exercise app that motivates them.</p>\n<h2>What it does</h2>\n<p>When you listen to music, FitRhythm will change the volume of the music based on the intensity of your workout. Choose a volume that you want your music to be, and it will stay that way if your exercise remains at an constant intensity. Otherwise, your music will become quieter until you exercise more intensely. </p>\n<h2>How we built it</h2>\n<p>We used Android Studio to build an Android application from Java. The graphics were designed in Photoshop.</p>\n<h2>Challenges we ran into</h2>\n<p>At first, we were not sure whether to use an accelerometer or GPS to measure intensity of workout. However, we decided to use the accelerometer because it saves battery, and tracks relative movement rather than displacement.</p>\n<p>We also hope to make an app that would allow the user to choose their songs within the app, but time constraints did not allow us to do so.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>When we accessed accelerometer data.\nWhen the application worked!</p>\n<h2>What we learned</h2>\n<p>Android Studio, testing with Android hardware, manipulating accelerometers, using Android packages, better GitHub collaboration</p>\n<h2>What's next for FitRhythm</h2>\n<p>The world!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/photoshop\">photoshop</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/accelerometer\">accelerometer</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/jsjqian/FitRhythm.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/jsjqian/FitRhythm.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Algorithm code, accelerometer and music player research, UX design, presentation", "Pseudocode, algorithm suggestions, presentation", "Back-end algorithms, idea creation, debugging and testing", "Front-end programming, visual design, music player research, presentation", ""]], ["360\u00b0 S&G Jalape\u00f1o Helmet", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"360\u00b0 S&amp;G Jalape\u00f1o Helmet \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/728/datas/gallery.jpg\"/>\n<p>\n<i>Top View of the Heads-up Display</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"360\u00b0 S&amp;G Jalape\u00f1o Helmet \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/729/datas/gallery.jpg\"/>\n<p>\n<i>One of Two Buzzers Placed Inside the Helmet</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"360\u00b0 S&amp;G Jalape\u00f1o Helmet \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/730/datas/gallery.jpg\"/>\n<p>\n<i>Sideview of the S&amp;G System </i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"360\u00b0 S&amp;G Jalape\u00f1o Helmet \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/731/datas/gallery.jpg\"/>\n<p>\n<i>Close-up View: Ultrasonic Sensor </i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"360\u00b0 S&amp;G Jalape\u00f1o Helmet \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/732/datas/gallery.jpg\"/>\n<p>\n<i>Ultrasonic Sensors and Back View of the S&amp;G System</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"360\u00b0 S&amp;G Jalape\u00f1o Helmet \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/733/datas/gallery.jpg\"/>\n<p>\n<i>Top View of the S&amp;G System </i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Jalape\u00f1o Helmet</h2>\n<p>In 2014, there were 551 bike crashes in Philadelphia alone. In addition to injuries and fatalities, it has cost the US taxpayers several billions of dollars a year ($109 billions in economic costs and societal harm). This is not to say bikers are the problem, but rather they are <strong>not</strong> receiving enough help from the 21st century\u2019s technology to keep up with the ever-increasing number of distractions on the road (i.e., motor vehicles and pedestrians). It is extremely risky for bikers to look back for incoming cars while focusing on the road in front of them. We decided to build a device that essentially gives them one pair of virtual eyes that are strategically placed, so that they are aware of their 360\u00b0 at all time. The safety of the bikers is our main concern, and therefore, regardless of the number of assistances we installed, the lack of additional distractions resulting from the device is one of our main considerations in the hack. </p>\n<p>The 360\u00b0 S&amp;G Jalape\u00f1o Helmet is a safety and guidance system that provides uncompromising assistance to bikers. The main task is to alert the biker of surrounding objects, such as cars, and where they are\u2014relative to the biker via two buzzers placed inside of each side and two ultrasonic sensors placed on the two rear sides. The right or left buzzer will sound if the respective side of the ultrasonic sensor detects objects closing in fast. Both will sound if both ultrasonic sensors get a similar reading, indicating that an object is coming in close right behind. It won\u2019t simply alert the biker when an object is close the biker, but alert the individual depending on how fast the object is approaching the biker. This is a critical part of the process due to many complications that are inherent in nature.</p>\n<p>Additionally, the S&amp;G system will also guide the biker on where and when to turn to get to a specified place via the integrated LCD display with the help of Google Maps turn-by-turn navigation and assistance of our Android app. All mentioned components will be connected to the Arduino Mega, which connects to an Android app via the attached bluetooth module on the Arduino. The app uses the smartphone\u2019s Global Positioning System and sends a string to the LCD display that guides the direction of the biker. </p>\n<p>To better mount these components onto a helmet, we designed custom 3D parts that would make reliable connections for both the helmet and the components. The Computer-Aided Design and 3D-printing came in a lot handy when we needed an adapter for the heads-up display to mount on the helmet. We took advantage of the technology also to drastically reduce the wear-and-tear and increase the reliability of the electronics system by printing an enclosure. </p>\n<p>Before we got the up-and-running device, we had a few major challenges. We were first trying to use Edison and Android Wear for all the above functions, but it took the first three hours until we realized we couldn\u2019t set it up. So we decided it would be more efficient with the time yet a bit more challenging to build the device with the Arduino and manually to feed turn-by-turn navigation data to the LCD display with an Android app. </p>\n<p>On the hardware aspect, one of the most challenging parts was designing the custom CAD model for the heads-up display due to initial time constraints with 3D printers. Since our goal with the device is to give maximum comfort in viewing the display without compromising the view of the biker, it took us a bit more time to draft the idea on paper and then on computer\u2014and getting it right the first print. </p>\n<p>We didn\u2019t know most of the things we have done for the hack. We learned all and applied knowledge to get them all up and running. Two of the prior experiences were building an Android app and wiring the system, which to our team members, were nothing new. </p>\n<p>One area that we believe can improve is alerting the biker in a challenging dynamic such as when the bikers have to turn his or her head to make quick decisions. We think that using an accelerometer to map the surrounding objects and actively interacting more with the mobile app and the Arduino Mega will be the solution to this challenge. In order to do so as well as analyze the data will require more data gathering in real-life situations. </p>\n<p>We would like to thank you for reading about our hack!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c\">c</a></span></li><li><span class=\"cp-tag\">breadboard</span></li><li><span class=\"cp-tag\">ultrasonic-sensors</span></li><li><span class=\"cp-tag\">leds</span></li><li><span class=\"cp-tag\">lcd-display</span></li><li><span class=\"cp-tag\">buzzers</span></li><li><span class=\"cp-tag\">3d-printed-parts</span></li><li><span class=\"cp-tag\">cad</span></li><li><span class=\"cp-tag\">arduino-mega</span></li><li><span class=\"cp-tag\">helmet</span></li><li><span class=\"cp-tag\">bluetooth-module</span></li></ul>\n</div>\n</div>", ["", "", "", "", ""]], ["Snap Riffs", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>I love singing. I love sharing my favorite music with my friends. But guess what doesn't fit into my backpack?</p>\n<p>My guitar.</p>\n<p>So I made this, SnapRiffs, the solution to anyone's need to express. Take your Pebble or other Android Wear device (Pebble apps are now compatible with Android Wear smartwatches) and strum away with Snap Riffs!</p>\n<p>A simple snap of the hand with the watch coupled with the SnapRiffs Android App, and you can strum away! The phone is held in your fingering hand, like an actual fretboard. Program each of 4 frets to play a specific chord, and snap with your watch hand to hear it as if you're strumming!</p>\n<p>I had this idea for a few days and at first I was thinking of using the Myo. However I saw that that hack had already been done, plus I've been wanting to buy myself a smartwatch for a while. Now the world can share in the joy of being able to enjoy music wherever and whenever needed, given Android hardware! Please feel free to port it to iOS and WatchOS as long as you credit me!</p>\n<p>Android App: <a href=\"https://github.com/chocolatechipcookiejoe/SnapRiffs\" rel=\"nofollow\">https://github.com/chocolatechipcookiejoe/SnapRiffs</a>\nPebble App: <a href=\"https://github.com/chocolatechipcookiejoe/SnapRiffsPebble\" rel=\"nofollow\">https://github.com/chocolatechipcookiejoe/SnapRiffsPebble</a></p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c\">c</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xml\">xml</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/pebble\">pebble</a></span></li><li><span class=\"cp-tag\">pebblecloud</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/chocolatechipcookiejoe/SnapRiffs\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/chocolatechipcookiejoe/SnapRiffs\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/chocolatechipcookiejoe/SnapRiffs\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/chocolatechipcookiejoe/SnapRiffs\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["airControl", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/sWOwyAcwM-E?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"airControl \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/605/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"airControl \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/629/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Abstract</h2>\n<p>This is a program that has integrated a simple number of Kinect gestures into PC control.\nFind yourself immersed in the world of touchless control; airControl.</p>\n<h2>Features</h2>\n<ul>\n<li><p>This is a Windows PC application that will run seamlessly once the user connects a Kinect for Windows to the PC.</p></li>\n<li><p>It makes use of the skeletal tracking feature of the Kinect to track head and hand positions in real-time.</p></li>\n<li><p>The mechanics behind the gesture lie in the distance between the head and the hands in the X, Y and Z coordinates.</p></li>\n<li><p>There are voice commands for the program itself and external commands for the PC.</p></li>\n<li><p>All the user needs is a Kinect and a PC to run the application.</p></li>\n<li><p>This program works with games that can run in windowed mode. It is the chassis for integrating the Kinect into PC games.</p></li>\n</ul>\n<h2>History</h2>\n<p>Two young men unanimously decided to test out Microsoft's coolest PC toy by far: The Kinect for Windows.</p>\n<p>With no experience in the C# language, we were treading on strange ground. But, we rose up to the challenge and learnt the Kinect SDK and how to program it in C#.</p>\n<p>Initially airPower, airControl was a Visual Studio C# Windows Application designed to control Microsoft PowerPoint\nand other image and video presentation programs with hand gestures. It had only two gestures; extending the\nleft hand to swipe left, and extending the right hand to swipe right.</p>\n<p>Then, we decided to make use of all the physical dimensions. This was a big revision. 3D-Touch was integrated; the user can now control the up and down arrow keys by pushing\nout their left and right hands respectively.</p>\n<p>The airControl just did not feel complete without voice commands. We decided to add voice commands to control both the program and the entire PC, usually depending on the active application. </p>\n<p>Our dream of airControl was finally reality, and we made it so.</p>\n<h2>Usefulness</h2>\n<p>-Anyone who loves the concept of touch-less control will be very interested in this program. If this can be done in under 24 hours, imagine the limitless possibilities of gesture and voice control over our devices!</p>\n<h2>Changelog</h2>\n<p>v1.0</p>\n<p>airControl was a pretty nifty tool for handling graphic presentations without touching the PC. Calibration was set so that the user should be about 5 feet from the sensor.</p>\n<p>The current list of gesture commands:\nExtend left arm to the left: Hits the left arrow key once\nExtend the right arm to the right: Hits the right arrow key once</p>\n<p>v1.1</p>\n<p>airControl went through MAJOR  change. We debated on calling it v2.0, but so much more could be done that we decided this was only the gateway to immersive touch-less control. </p>\n<p>The current list of gesture commands:</p>\n<p>Extend left arm to the left: Hits the left arrow key once</p>\n<p>Extend the right arm to the right: Hits the right arrow key once</p>\n<p>Extend the left hand forward: Hits the up key continuously</p>\n<p>Extend the right hand forward: Hits the down key continuously</p>\n<p>Cross one arm over another: Hits the escape key</p>\n<p>Raise either hand above the head: Hits the F5 key (starts a presentation in PowerPoint)</p>\n<p>The current list of external voice commands:</p>\n<p>\"Shoot\" - Hits the Enter Key once</p>\n<p>\"Paragraph\" - Hits the Tab Key Once</p>\n<p>\"Start\" - Opens the Windows Start Menu</p>\n<p>\"Switch\" - Switches to the next open application</p>\n<p>\"Close\" - Closes the active application</p>\n<p>\"Screenshot\" - Takes a screenshot of the screen</p>\n<p>The current list of internal voice commands:</p>\n<p>\"computer show window\" - Shows the airControl window</p>\n<p>\"computer hide window\" - Minimizes the airControl window</p>\n<p>\"computer show circles\" - Makes visible the circles that track the user's hand movement</p>\n<p>\"computer hide circles\" - Hides the circles that track the user's hand movement</p>\n<h2>Video Playlist</h2>\n<p>Apart from the submitted video (since only one is allowed), we created another video showing all the voice commands. Watch it here:</p>\n<p><a href=\"https://www.youtube.com/watch?v=1ObIw1BGyc4\" rel=\"nofollow\">Voice Commands Video</a></p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/kinect\">kinect</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/visual-studio\">visual-studio</a></span></li><li><span class=\"cp-tag\">sdk</span></li><li><span class=\"cp-tag\">dragon-hacks</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://eos24@bitbucket.org/eos24/aircontrol-v1.1.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://eos24@bitbucket.org/eos24/aircontrol-v1.1.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>bitbucket.org</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I wrote the Visual C# code and configured the voice commands.", ""]], ["GIF It 2 Me", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/VR02l_JFf8Q?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n</ul> </div>\n<div>\n<p>Our only bug: please watch the video on mute. Did not realize the video was recording sound when it shouldn't have. </p>\n<h2>Inspiration</h2>\n<p>We always found text monotonous, and couldn't completely convey what we wanted to say. What better than to have gifs to that for us? How else do we convey sarcasm, apart from any gif of Chandler from Friends?</p>\n<h2>What it does</h2>\n<p>GIFit2me is a Google Chrome extension that takes in your Facebook message that you've highlighted, and copies a URL of a gif relevant to your message to the clipboard. We use the IBM Bluemix AlchemyLanguage  API to process your Facebook message. The API picks out key emotions and ideas in your message. E.g. \"The bankers are broke\" --&gt; \"finance\" and \"bank\".  We then feed these keywords to the GIPHY API which then gives us a URL to a gif that is relevant to the keywords. The URL is automatically copied to your clipboard and you can just paste the URL into your Facebook chat. Your friends see the gifs thumbnail and laugh their heads off.  </p>\n<h2>How we built it</h2>\n<p>We use Chrome to inject a script to the current webpage to send the selected text to the Chrome extension, which in turns uses IBM Bluemix AlchemyAPI to scrap out the keywords in the message, and get a relevant GIF from the internet.</p>\n<h2>Challenges we ran into</h2>\n<p>We had quite a hard time starting off because we didn't know how to access <em>your</em> selected Facebook message in the webpage</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>None of us worked with Chrome extensions or APIs before, so our idea was pretty ambitious at first. We're extremely proud of how we managed to learn everything AND pull everything off within these 24 hours. </p>\n<h2>What we learned</h2>\n<p>A LOT! We're Freshman who've taken just taken <strong>one</strong> intro level Computer Science course so we can safely say that we've come out as having learned way more than we would've had we just stayed in our dorm and ignored DragonHacks completely. All four of us went way out of our comfort zone. So, thank you DragonHacks!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xml\">xml</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ibm-watson\">ibm-watson</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/giphy\">giphy</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/github\">github</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/abhavedula/GIFit2me\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/abhavedula/GIFit2me\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Worked on the backend with the IBM Bluemix AlchemyLanguage API and the GIPHY API", "I worked on the backend, with both the IBM Bluemix AlchemyLanguage and the GIPHY API", "I worked with the Chrome extension to get selected text to the APIs and output the parsed information from them.", ""]], ["trollhack", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We STARTED by building an iOS app that would recognize a Myo armband gesture between two users and initiate an https request to get two twitter users to follow eachother.</p>\n<h2>What it does</h2>\n<p>However, this app makes a shape over a troll face ripped off Google according to movement coming from the myo armband gyroscope</p>\n<h2>How I built it</h2>\n<p>I downloaded a Myo processing library (<a href=\"https://github.com/nok/myo-processing\" rel=\"nofollow\">https://github.com/nok/myo-processing</a>) from a github user, nok, and implemented code from my older art projects. Use of this app necessitates Myo Connect running in the background.</p>\n<h2>Challenges I ran into</h2>\n<p>Creating this from scratch on the morning of the second day hours before the deadline. Not being able to go through with our original plan because it was too complicated.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Adding a music file that I produced, with volume amplitude feedback according to the 'shake' coming from the gyroscope.</p>\n<h2>What I learned</h2>\n<p>A lot of Swift and Xcode during the first day, trying to build the iOS app.</p>\n<h2>What's next for trollhack</h2>\n<p>Adding extra functionalities, making it able to run without Processing.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/processing\">processing</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/myo\">myo</a></span></li><li><span class=\"cp-tag\">myo-connect</span></li></ul>\n</div>\n</div>", ["I created this the morning of the second day of the hackathon by myself in about three hours."]], ["CERTIFI", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>There are many people who have successfully taught themselves University level material independently, but lack the degree to show for it, and thus they are unable to get into jobs they are otherwise well suited for. What we need is a way for such people to prove to employers that they have the abilities they need for the job, even though they could not complete a degree.</p>\n<h2>What it does</h2>\n<p>Our service provides testing on various subjects, the results of which can be shown to employers to compensate fr a lack of official credentials.</p>\n<p>Our tests are held to the same standards as accredited universities, and user data is protected by custom encryption algorithms.</p>\n<p>In addition, our site provides practice tests, useful feedback, and links to sources that will help users to brush up on the material. Furthermore, should a user perform badly on an exam, our service will not hold it against them on their record.</p>\n<h2>How I built it</h2>\n<h2>Challenges I ran into</h2>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<h2>What's next for CERTIFI</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n</div>", [""]], ["Zoning", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>I think we've all had the experience of trying to study when we're dead tired, or even read an article that we promised a friend we'd check out. It's in these exact moments that Zoning comes into play.</p>\n<h2>What it does</h2>\n<p>Zoning tracks whether or not your eyes are stationary for too long to see if you're \"zoning out.\" If you are, it vibrates your phone to let you know. You can also customize how long the duration between \"zone outs\" are.</p>\n<h2>How I built it</h2>\n<p>I used OpenCV in order to conduct the eye tracking, based on contour mapping and facial features, compiling it into it's IOS framework then checked whether or not a person's eye remained stationary for a certain number of frames. This allowed me to check whether someone is actually actively reading or they're not actually paying attention to the text.</p>\n<h2>Challenges I ran into</h2>\n<p>Compiling the OpenCV framework is always a bit of a nightmare. However, since I have experience with it, it was relatively simple. I'm still experiencing some issues with imposing UI elements on top of the view at the same time since the framework has to run on the main thread to access the camera.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>It works! All and all I could actually use it my every day life and it would actually serve the purpose that I wanted it to originally. I'm excited that I did what I set out to, as well as being able to work on a couple other projects and help some others out with theirs.</p>\n<h2>What I learned</h2>\n<p>This project taught me how to use eye tracking which is pretty awesome. I've done facial tracking, but never the kind of eye tracking that I'm doing with this app.</p>\n<h2>What's next for Zoning</h2>\n<p>Despite what I've accomplished, Zoning is far from a perfect product. The UI is far from glamorous because I am a coder, not a designer. I really need to bring someone else in to design UI. I also still have to figure out some of the threading issues. If I can work those out and reduce the processing power used by my phone, that would be incredible. I could also add analytics for users. As you can see, there's a lot I can do with this project, but the base functionality works, and that's enough for me.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/objective-c\">objective-c</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/opencv\">opencv</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ios\">ios</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xcode\">xcode</a></span></li><li><span class=\"cp-tag\">objectivec++</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c\">c</a></span></li></ul>\n</div>\n</div>", [""]], ["Amalg", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>Amalg</h1>\n<p>Initially developed for DragonHacks 2016</p>\n<p>Authors:</p>\n<ul>\n<li>Brandon Him</li>\n<li>Nikin Tharan</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/brh55/Amalg\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/brh55/Amalg\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["F-0 by Palm Industries", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"F-0 by Palm Industries \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/479/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>palm</h2>\n<p>\"An old dog with new tricks\": \nThe reimagination of a traditional technology used in electronic presentation\nFeatures that set our product apart from the competition</p>\n<ol>\n<li>Simplicity: Elegantly designed, with the comfort and presenter in mind, we haven't just reinvented the wheel, we just reinvented tires.</li>\n<li>Power of Customization: With 5 customizable buttons, you can decide how the presentation will run.</li>\n<li>Comfort: A specially engineered strap relieves the discomfort of those pesky sweaty hand situations and puts you in control of the presentation.</li>\n<li>Battery Life: With a powerful 800 mAh battery, the F-0 can last you an entire month without charging.</li>\n<li>Palm Protect:  provides the life of your coverage for mechanical breakdown and gives you 6 months of protection from accidental damage like drops, spills, and cracks.</li>\n<li>Feedback: Our comprehensive database will analyze the way you present and provide feedback and insight tailored just for you.</li>\n</ol>\n<p>Most conventional hardware to use while presenting, keyboard, Myo, clickers, are lacking in some aspect. Keyboards will limit your body movements, Myo is very inaccurate, and clickers are to straight forward. Our product, F-0, has been designed with the idea of perfecting comfort and usability.</p>\n<ol>\n<li>Simple: F-0 has less operations that are easily programmable so that you can focus on your presentation rather then remembering the complex computer that you sometimes hold in your hands.</li>\n<li>Customizable: We want your presentation to fit you, the feel of your hardware being an extension of your body. You can program buttons so that you can give the most comfortable presentation on stage.</li>\n<li>Comfortable: The F-0 fits perfectly on your hand, with ergonomic design you can seamlessly operate your presentation at the highest level of comfort.</li>\n<li>Accurate: The micro-controller that controls the device is set on a delay so that your presentation can seem smooth without mistakes as you get a second chance to decide your actions. No more miss clicks to mess up your flow on stage.</li>\n<li>Realtime Feedback: Our device has a pager motor incorporated into the device so that you can get physical cues in your presentation that you can set before. A simple vibration can tell you when you have an important slide coming up next.</li>\n<li>Community: We hope to get a open culture with our product with everyone contributing their body language data online. This way you can help to perfect your presentation in the fastest way possible. (talk about the accelerometer and gyroscope to record your body movements and compare them to known great presenters)</li>\n</ol>\n<p>In all we had the idea of you presenting your information in the easy and simple yet complex way possible. The F-0 allows you achieve a higher level of control and customizability with just 4 simple buttons.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c\">c</a></span></li><li><span class=\"cp-tag\">cad</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/timothychen01/palm\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/timothychen01/palm\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on product development and ideation, front end development for website, and graphic design.", "During the course of this project, I worked on idea/product development and computer aided design portions of this project. I also worked on the media parts of this project.", "I worked on the hardware sire of programming to simulate the implementation. ", "", ""]], ["Automated Door Security", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/WzYdQsa1GZQ?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>University buildings require card swipe access and 20$ for lost card replacement. \nNextfab, a maker's studio, also requires RFID card access and 25$ for lost card replacement, I usually arrive to this place with a bulk of stuff in my hands and do not want to go through the hassle of trying to find my card. </p>\n<h2>What it does</h2>\n<p>The door will be open by entering the password on an android app. If the owner forget to close the door, the door will automatically close itself within 10 seconds. Alternatively, the owner can also close the door with the option \"Close door\" in the app.\nAdditionally, the security features ensure that any stranger outside the 0.5 mile- radius cannot open/close the door even with access to the app and the password.</p>\n<h2>How we built it</h2>\n<p>We built it through serial communication through Arduino and MATLAB. The Arduino focuses on rotating the servo and detecting the input. MATLAB on the other hand detects changes in the server of a given device. There is an Android App associated to it. The app is responsible for locking and unlocking the door by sending commands.</p>\n<h2>Challenges we ran into</h2>\n<p>One of the team members started learning some hardware programming, so there were a lot of education made. The servo wasn't behaving as expected, so had to run test to see how it functions</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Completed the prototype of the project, one of the members learned new things about the Arduino and serial communication., the other member learned to teach some programming to someone new.</p>\n<h2>What we learned</h2>\n<p>New knowledge of hardware Programming and teaching programming</p>\n<h2>What's next for Automated Door Security</h2>\n<p>Add alarm detection to the users nearby.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c\">c</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/matlab\">matlab</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["Keep Talking and Nobody Explodes with Arduinos!", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>KTNE-Arduino</h1>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/gchai/KTNE-Arduino\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/gchai/KTNE-Arduino\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", "", ""]], ["Hacktivity", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>You just signed up for your first hackathon. You're excited - you have grand visions of hackathon domination. You have mad skills but what are ideas for the Ultimate Hack? Wait! You remember hearing about Hacktivity, an online meetup of new and veteran hackers and those in between. At Hacktivity, those with ideas are looking for a budding hacker such as yourself or those with skills (you) are seeking the big idea for the Ultimate Hack.\nWe used Bootstrap, CSS, HTML, and Javascript for the front end and Django and SQLite for the back end.\nDjango is always challenging to develop on and we\u2019re especially proud of our team members who learned front end web development.\nWe stayed up all night coding, committed to bringing Hacktivity to hackers everywhere.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/django\">django</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sqlite\">sqlite</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/github\">github</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/git\">git</a></span></li><li><span class=\"cp-tag\">pip</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/linux\">linux</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/terminal\">terminal</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-ec2\">amazon-ec2</a></span></li><li><span class=\"cp-tag\">putty</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/brackets\">brackets</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/tirril29/dhacks2016-hsns.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/tirril29/dhacks2016-hsns.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/tirril29/dhacks2016-hsns.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/tirril29/dhacks2016-hsns.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["A ton of backend. ", "", "", "", ""]], ["Hack-A-Java RGB", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Hack-A-Java RGB \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/539/datas/gallery.jpg\"/>\n<p>\n<i>The machine</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to make coffee when we weren't home, or awake. It would be cooler if it was brewed and ready after a notification was sent to it.</p>\n<h2>What it does</h2>\n<p>Brews coffee.</p>\n<h2>How we built it</h2>\n<p>Mr. Coffee\nBreadboard\nRaspberry Pi 2\nTouchscreen monitor for Pi 2\nA lot of circuit googling\nTearing into power supplies to supply excess energy for all of the components.</p>\n<h2>Challenges we ran into</h2>\n<p>Programming the Raspberry Pi 2 and the breadboard circuit. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We added some really cool RGB LED's to notify the user in which state the brewing process is in.</p>\n<h2>What we learned</h2>\n<p>Programming pi, basic ECE tips and tasks for better circuit building.</p>\n<h2>What's next for Hack-A-Java RGB</h2>\n<p>Setting a brew time based off of online calendars. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li><li><span class=\"cp-tag\">raspbian</span></li><li><span class=\"cp-tag\">breadboard</span></li><li><span class=\"cp-tag\">rgb-led-strip</span></li><li><span class=\"cp-tag\">mr.-coffee-drx5</span></li></ul>\n</div>\n</div>", ["I soldiered all of the connections needed as well as planned out the physical design and electrical boards/components", "I wrote the Python code that controlled that board and LED's and led the bulk of the electrical circuit design process. "]], ["Hatefred VS Dick Armstrong", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Hatefred VS Dick Armstrong \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/360/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Hatefred VS Dick Armstrong \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/361/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Hatefred VS Dick Armstrong \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/362/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>To test out the Kaeon ACE game engine, my room mate and I built a technically impressive yet obnoxious video game, but left it in an incomplete state. Seeing a HUGE waste of potential, I decided to polish it to show just how far the engine has come.</p>\n<h2>What it does</h2>\n<p>You are Dick Armstrong, hero of 'Murica. When the evil demon Hatefred threatens the US of A, you decide to take him down the American way: to shoot him until he dies.</p>\n<h2>How I built it</h2>\n<h2>Challenges I ran into</h2>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<h2>What's next for Hatefred VS Dick Armstrong</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/opengl\">opengl</a></span></li></ul>\n</div>\n</div>", [""]], ["Intelligent curtain rail", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Intelligent curtain rail \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/098/datas/gallery.jpg\"/>\n<p>\n<i>Overview System</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Intelligent curtain rail \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/266/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Intelligent curtain rail \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/274/datas/gallery.jpg\"/>\n<p>\n<i>UI System</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>It was too bright outside while we were sleeping and we were too lazy to get up and close the curtain. So, we came up a idea of a intelligent curtain that could control by Arduino sensors and cellphone APP. </p>\n<h2>What it does</h2>\n<p>It could control the curtain with multiple Arduino sensors such as the Ultrasonic sensor (to let people use hand distance to control the close level of curtain), the PIR sensor (to let user close and open the curtain with single hand wave), and the Bluetooth module (to trans the data information from cellphone app to the Arduino let user to control the curtain with screen slide.  It contained with 2 servo motor to control the rail of the curtain which gathering the signal from sensors and Bluetooth. </p>\n<h2>How I built it</h2>\n<p>First, Calibrate all the sensors. For PIR sensor the original effective angle is 145 degrees, so we built a physical barrier to shrink the detective angle down to 30 degrees. For the Ultrasonic sensor, we use SMA algorithm to filter the value of the output distance. We also setup upper and lower thresholds to filter the extreme value. \nSecond, we adjust the curtain rail position by adjusting the angle of position for the servo motor. </p>\n<h2>Challenges I ran into</h2>\n<p>It would the first time for our team to use Arduino and make a Android App. So, it need to spend lots of times on learning and find the best sensors that we need. </p>\n<h2>What I learned</h2>\n<p>We learned how to use Arduino in a effition way</p>\n<h2>What's next for Intelligent curtain rail</h2>\n<p>For future of the Intelligent curtain rail, we will focus on Android App development that could have a better UI systems and we could change the curtain material to polarizer filters that could let user to change the light intensity that could pass though the curtain. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["ArduPebble", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://player.vimeo.com/video/152063843?byline=0&amp;portrait=0&amp;title=0#t=\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"ArduPebble \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/333/995/datas/gallery.jpg\"/>\n<p>\n<i>The App Launcher</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"ArduPebble \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/333/996/datas/gallery.jpg\"/>\n<p>\n<i>Breadboard Setup</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"ArduPebble \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/001/datas/gallery.jpg\"/>\n<p>\n<i>Turning on an LED 1</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"ArduPebble \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/002/datas/gallery.jpg\"/>\n<p>\n<i>Breadboard Setup With Pebble</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"ArduPebble \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/003/datas/gallery.jpg\"/>\n<p>\n<i>Turning on an LED 2</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Bridging the Gap Between Pebble and Arduino</h2>\n<p>There are tons of Arduino and Arduino compatible microcontrollers on the market.  An especially notable board is the <a href=\"http://makezine.com/2015/04/01/esp8266-5-microcontroller-wi-fi-now-arduino-compatible/\" rel=\"nofollow\">ESP8266</a>.  The ESP8266 has 10 GPIO pins, is about the size of a fingernail, and best of all, costs about $5.  The Arduino IDE supports this board and it has gotten a lot of attention from makers since it's release due to it's IoT capabilities.  Being Pebble Smartwatch owners, we wanted to see if we could use our watches to control these boards.  Before we started, there was no documented way to do this, but we've created a great proof-of-concept that changes that.  The best part is that all of our code is compatible with other WiFi-capable Arduino boards with just a slight modification.</p>\n<h2>What it does</h2>\n<p>The ESP8266 can be programmed through a slightly modified Arduino WiFi library to connect to a wireless network and perform network functions.  We used an <a href=\"https://www.adafruit.com/products/2471\" rel=\"nofollow\">Adafruit Huzzah ESP8266 Breakout</a> during our testing because it's easy to mount on a breadboard and also features built-in serial port logic level shifting, making it easy to program with a standard FTDI serial interface.  The ESP8266 is configured to connect to a WiFi network, run a simple HTTP server, and await commands from clients.  Using Pebble.js, we wrote a Pebble timeline application that can send commands to the HTTP server.  This all works only if the Pebble is paired to a cell phone that is on the same WiFi network as the microcontroller.  <strong>This code should work on other WiFi-enabled Arduinos and shields, so long as you replace \"ESP8266WiFi.h\" with the proper WiFi library for the board.</strong></p>\n<h2>How we built it</h2>\n<p>We wanted to test a few different concepts with this project.  We put our microcontroller on a breadboard and wired it to an FTDI FT232RL serial programmer, a servo, and an LED.  After writing a simple webserver to run on the microcontroller, we wrote some other functions that can be executed by HTTP commands.  We tested concepts like turning LEDs on and off, and rotating servos to simulate the action of locking a door.  Writing the microcontroller-side software was fairly simple to write, but the Pebble-side was a little more complicated.</p>\n<h2>Challenges we ran into</h2>\n<p>At the time of writing, we couldn't find a single example of a wifi-enabled Arduino-compatible microcontroller interfacing with a Pebble smartwatch.  As mentioned earlier, the microcontroller code was fairly easy to handle.  The Pebble code was much more complicated.  Native Pebble C code doesn't have access to the internet connection of the cell phone it's paired to.  In order to gain web access, you must use the experimental Pebble.js suite, which doesn't currently work on first-generation watches (at least for now, Pebble is promising support).  Having no experience with JavaScript, all three of our members had to learn it in order to write the application.  We also ran into the issue of connecting all of the required devices to a WiFi network.  The Drexel guest WiFi doesn't support microcontrollers connecting, so we had to configure one of our phones to act as a wireless hotspot to conduct testing.  Since the Pebble SDK is cloud-based, we found ourselves switching between networks fairly often.  Once we successfully established communication between the Pebble and the ESP8266, we than began polishing our communications protocol and developing a Pebble app to control various devices connected to the microcontroller.  Overall, there was a lot of time spent reading over confusing Pebble documentation and troubleshooting issues that may have never been solved before.  One issue that we still haven't been able to establish useful communication from the microcontroller to the Pebble, that would allow us to monitor the state of whatever you're controlling.  </p>\n<h2>Some Milestones</h2>\n<p><strong>We proved that you can use a Pebble to control a WiFi-enabled Arduino</strong> \nAs far as we know this hasn't ever been successfully done.\n<strong>We were able to do this with almost no reliability issues</strong>\nWe never experienced a glitch in our code that caused erratic or dangerous behavior.</p>\n<h2>What we learned</h2>\n<p><strong>JavaScript, lots of JavaScript</strong>\nWe also learned a lot about web-server programming and how to make different platforms interact.  </p>\n<h2>What's next for ArduPebble</h2>\n<p>This is a cool concept, with some refinement it could develop into a platform for controlling devices within your home or wherever else you go.  There's no limit to how many microcontrollers you can control from your Pebble or how many things each microcontroller can do.  The Pebble itself is an incredibly convenient tool.  </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/pebble\">pebble</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/SeeingInGreen/ArduPebble\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/SeeingInGreen/ArduPebble\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I wrote the webserver running on the microcontroller, contributed to the Pebble app, and did a heck of a lot of research. ", "I assisted in developing the front-end Pebble GUI and application using JavaScript. ", "I worked on the front-end, creating the Pebble GUI using JavaScript."]], ["Recipe-chan", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Recipe-chan \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/238/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Recipe-chan \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/215/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Recipe-chan \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/216/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Recipe-chan \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/334/214/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>Recipe-chan (DragonHacks 2016)</h1>\n<h2>About</h2>\n<p><strong>DragonHacks 2016</strong></p>\n<p>Authors: Jack Aquino, Brian Chu, Laurisse Golingan, Jeremy Savarin</p>\n<p>Logo artist: Laurisse Golingan</p>\n<p>Ever get tired of old cookbooks? Worried about dirtying your smartphone while looking up recipes? Well, Recipe-chan is there for you! A fun little pebble smartwatch app that displays recipes for you,  so you don't have to worry about not having free hands! </p>\n<h2>Directions</h2>\n<ul>\n<li>Hit the center right button to see a nice DragonHacks 2016 logo!</li>\n<li>Hit the top right button to access ingredient lists for recipes.</li>\n<li>Hit the bottom button to access directions to make these recipes.</li>\n<li>Hit the back button to go back a menu</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/pebble\">pebble</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/JeremySavarin/Recipe-chan\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/JeremySavarin/Recipe-chan\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["CERTIFi", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"CERTIFi \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/333/661/datas/gallery.jpg\"/>\n<p>\n<i>Splash Page Interface</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"CERTIFi \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/333/663/datas/gallery.jpg\"/>\n<p>\n<i>Sample Quiz UI</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We all collectively realized that all of the sites where you can learn programming skills don't offer online certifications which are globally recognized by major companies. So we decided to build the interface for a potential solution to this problem.</p>\n<h2>What it does</h2>\n<p>It offers simple, intermediate, and advanced quizzes which you can take and then print out and show your certification certificate to employers, bosses, and colleagues.</p>\n<h2>How we built it</h2>\n<p>We built a website using HTML5, CSS, and JavaScript</p>\n<h2>Challenges we ran into</h2>\n<p>We attempted to build a Java applet which would allow for user profiles, which did not function, then we wanted to utilize a MySQL server, which also did not function as we wanted, and we still unfortunately do not have an authentication server.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Everything works! All of the navigation functions in their intended ways!</p>\n<h2>What we learned</h2>\n<p>We learned that using source control software can sometimes cause difficulties when there isn't proper communication about respective workflows.</p>\n<h2>What's next for CERTIFi</h2>\n<p>Implementing a user profile and authentication system which can hold a users past tests and scores.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n</div>", ["I created the site design and wrote the template JavaScript functions for the quiz questions.", "I worked on some of the content of the quizzes.", "", "", ""]], ["RedditScraper", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>Thought it would be fun :)</p>\n<p>This is my first hackathon, so I have a lot to learn</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Andrewjeska/DragonHacks\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Andrewjeska/DragonHacks\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]]]