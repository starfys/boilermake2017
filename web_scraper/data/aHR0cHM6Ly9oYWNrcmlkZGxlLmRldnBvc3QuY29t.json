[["Robart", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Robart \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/428/217/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>The Story</h2>\n<p>Digital media and it it's associated art that comes in it's domain is mostly left unchallenged and unanalyzed.\nMeanwhile, a score of unending human negativity stems from the crevices of the most hostile of keyboards. Leaving creators and it's content left unsure about it's contents.</p>\n<h2>Meet Robart</h2>\n<p>An art curator hailing from New York (the location of it's hosted server), Robart is comprehensive art analysis tool. It generates curator descriptions based off features of the photo/art/architecture/interior design it happens to have the fortune/misfortune to see.</p>\n<h2>How Does He See If He Is AI?</h2>\n<p>By using the Clarifai API we are able to get image features and run it through feature/color emotion analysis data produced by marketers and other curators. Now since we told him very descriptively about what the color and the photo is about we can have him speak on the piece.</p>\n<h2>A Gallery Fit For The Layman</h2>\n<p>After we have his opinion/objective descriptions we host it in the finest gallery of all, robart.com or localhost:3000</p>\n<h2>What's next for Robart</h2>\n<p>For version 3, we wanna make it beatbox. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/react\">react</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/darkfadr/robArt\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/darkfadr/robArt\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Might as well be an English major", "", ""]], ["publicpuzzle", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"publicpuzzle \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/306/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>MLH's slogan, learn, build, share. To create a game where everyone can work together, not against one another.</p>\n<h2>What it does</h2>\n<p>Uses the video feed from the computers camera or an external camera to create a puzzle that multiple users can solve together in real time using either mobile or pc. </p>\n<h2>How we built it</h2>\n<p>JavaScript!. We used java script, node, and html to build a server that interacts with a viewer client and player clients. </p>\n<h2>Challenges we ran into</h2>\n<p>unifying mouse and touch was difficult.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>unique concept that brings the world together in real time, just as our development in cloud 9 allowed for real time collaborative effort. </p>\n<h2>What we learned</h2>\n<p>methods for passing &amp; storing information between a server and multiple clients. Cross platform support for all devices.</p>\n<h2>What's next for publicpuzzle</h2>\n<p>an educational experience where similarly students interact in real time quiz style where everyone learns from one another. Use the client server baseline to create more public puzzles. Offer it as an architecture to create their own real time interactive experiences.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://www.tackney.com/\" rel=\"nofollow\" target=\"_blank\" title=\"https://www.tackney.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.tackney.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["As a team involved in all aspects from client, to server side to concept.", ""]], ["Toastifai", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We were having a conversation with one of our peer when we found we all had a common problem. We have all set the toaster and walked away, and ended up burning or entirely forgetting our toast! </p>\n<p>We had all thought this was an anomaly however it turns out that this is an <strong>epidemic!</strong></p>\n<h2>What it does</h2>\n<p>Our Toastifai Toaster will make the perfect toast, _ every time _.  And it will remind you when he toast is ready!</p>\n<h2>How we built it</h2>\n<p>We took a couple hundred photos of toast and \"trained\" a model with Clarifai. Then once the model determines we have the _ perfect _ toast, it will trip a relay and trigger the toaster. </p>\n<h2>Challenges we ran into</h2>\n<ul>\n<li>Plugging hardware into the wall. </li>\n<li>Frank's laptop allegedly was <strong>murdered</strong>.</li>\n</ul>\n<h2>Accomplishments that we're proud of</h2>\n<p>Finishing everything close to how we initially thought it would work! </p>\n<h2>What we learned</h2>\n<ul>\n<li>How to use Clariai's  _ awesome _ <strong>easy to use</strong> API!</li>\n<li>Teamwork :D</li>\n<li>The <strong>importance of PERFECT TOAST</strong></li>\n</ul>\n<h2>What's next for Toastifai</h2>\n<ul>\n<li>We want to tweet toast completion</li>\n<li>Recognize Bagels </li>\n<li>Recognize all forms of bread (rye, pumpernickel, sourdough, etc.)</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/opencv\">opencv</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag\">toaster</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/jessiepullaro414/Toastifai\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/jessiepullaro414/Toastifai\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"http://toastifai.tech/\" rel=\"nofollow\" target=\"_blank\" title=\"http://toastifai.tech/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>toastifai.tech</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I made the software that images the toast as well as saturates the images for the model testing. I also made the code that allowed the toaster to continually check to see if the toast was perfect and I compiled all the code on the raspberry pi. ", "I worked on the website and assisted with data collection as well as image handling and git troubleshooting.", "", ""]], ["Indago", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>Indago</h1>\n<p>A autonomous drone with a rescure protocol.</p>\n<h2>The drones job</h2>\n<p>When a disaster hits like a tsunami, earthquake, or hurricane a dangerous environment can be left behind but a rescue with a sense of duty strives to save as many lives as they can. But a dangerous environment, such as floods left behind a hurricane or unstable buildings after earthquakes, will slow down a rescue team. The drone will fly and search for humans with its camera and sends back the GPS location to the rescue team. With collsion detection the drone can also make a quick map of the area.</p>\n<h2>Inside the drone and the code</h2>\n<p>The drone is controlled by wifi by android phone. While the drone is flying video is sent to be analyze using OpenCV to see if any humans are in the images. If there are people the drone will also sent back its GPS location.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/opencv\">opencv</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Indago-Drone\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Indago-Drone\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Wrist Watch ", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>My inspiration came from the fact that I enjoy hiking in the woods by my University. However, many people always warn me to be careful when I'm out there by myself. I tend to hike with pepper spray in hand and to be honest, it sucks. I wanted to make an app that was hands free that can actively keep you safe. </p>\n<h2>What it does</h2>\n<p>Using the accelerometer technology in the Pebble, Wrist Watch detects your intentionally large movements of your arm, which initiates a vibrating count down of 10 vibrations. The user can easily get out of the app by pressing any of the buttons. However, if the user is in danger and the count down goes to 0, the application will automatically SMS emergency contacts that can be coded into the script. </p>\n<h2>How I built it</h2>\n<p>I built this using cloudpebble.io using C. </p>\n<h2>Challenges I ran into</h2>\n<p>Figuring out the accelerometer was the hardest part of the entire project. Even still, it has some bugs in it. It took me the most time to figure out. Coding in C for the Pebble was a huge learning curve for me so many hours were spent researching accelerometer functions as well as the C language. </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I can't describe how amazing it feels knowing that I got the accelerometer to finally work at the end. Although there are some bugs in it still, I am so proud of how far I have come since I came here yesterday. I'm very happy with all my small achievements I've made moving through this project over the course of 24 hours. </p>\n<h2>What I learned</h2>\n<p>I have learned so much about how to code for a Pebble watch. I've also learned about C as well as the capabilities of the cloudpebble.io platform. </p>\n<h2>What's next for Wrist Watch</h2>\n<p>There is so much that I want to continue to improve with this application. I would like to make the accelerometer work sharper when it reads x-axis values. I would also like to incorporate GPS into the emergency text messages so that the victim's loved ones can know where their exact location is. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/pebble\">pebble</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c\">c</a></span></li></ul>\n</div>\n</div>", [""]], ["Free fall beacon ", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Sometimes the pilots might panic or be unconscious to not be able to send out a SOS to the emergency channel.</p>\n<h2>What it does</h2>\n<p>This project will detect when the plane is in free fall and about to crash.</p>\n<h2>How we built it</h2>\n<p>Using the Arduino 101, we hooked it up to a bluetooth module to send data over to an android phone. It sends the coordinates of its current location to the phone.</p>\n<h2>Challenges we ran into</h2>\n<p>Getting started with android studio and receiving bluetooth packets. \nMaking the google maps api work with our app</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Making our first android app. Getting the arduino to detect free fall and shock from a crash.</p>\n<h2>What we learned</h2>\n<p>Getting started with android.\nGit\nAndroid 101 and it's IMU interfacing.\nBluetooth from adruino to android</p>\n<h2>What's next for Free fall beacon</h2>\n<p>Full scale for this project would be a device that takes black box data (ground speed and altitude) along with its IMU data and determines if it is currently experiencing a free fall that might lead to a crash. This device then would send signals out to the emergency broadcast frequency with its current location and a SOS signal. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/accelerometer\">accelerometer</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bluetooth\">bluetooth</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/dsarmiento/HackRiddleUCF\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/dsarmiento/HackRiddleUCF\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["SpectrumNavigation", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"SpectrumNavigation \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/027/datas/gallery.jpg\"/>\n<p>\n<i>Navigation Page</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"SpectrumNavigation \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/028/datas/gallery.jpg\"/>\n<p>\n<i>Start Page</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"SpectrumNavigation \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/135/datas/gallery.jpg\"/>\n<p>\n<i>Mobile App Screenshot 2</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"SpectrumNavigation \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/136/datas/gallery.jpg\"/>\n<p>\n<i>Mobile App Screenshot 1</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"SpectrumNavigation \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/428/057/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"SpectrumNavigation \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/428/058/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>SpectrumNavigation</h1>\n<p>We are a GPS tool aimed at improving the lives of the autistic &amp; disabled community. We are bringing the humanity back to navigation with easy to follow directions that describe locations of interest along the way.</p>\n<p>Our website works by taking in start &amp; end locations. It then calculates a route with google maps. It then uses google street view and a trained version of clarifai to identify landmarks to help direct users. It then prepares the landmarks into an easy to read navigation page.</p>\n<p>We completed the front-end development as well as the javascript functions and clarifai training that make the site work. If we had more time we would better integrate the front end and back end.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-maps\">google-maps</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-streetview\">google-streetview</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/bocaaust/SpectrumNavigation\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/bocaaust/SpectrumNavigation\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I did the backend integration using the three APIs for this project: Google Maps, Google StreetView, and ClarifAI using JavaScript.  The start and end addresses are fed into a Google Maps API call to get pathing information, StreetView images are retrieved for the waypoints between the start and the end locations, and finally those images are sent to Clarifai to predict against the three gas stations and five banks that we had defined in our model.  The top prediction result for each turn is then embedded in the route instructions as a named landmark that the user can use to recognize where to turn.", "I did the front-end of the website. I also helped plan out the back end as well as troubleshoot a few issues on the back end and came up with the concept for spectrum navigation to try and solve a real problem I as well as many other autistic people face. ", "I worked on collecting data set for training the model and concepts on the Clarifai API by pulling images from the google street view for 8 concepts(3 gas station and 5 national banks) for positive and negative sets."]], ["TerminalNav", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>TerminalNav</h1>\n<p>Android Application that maps out the fastest path to the next terminal.\nThe following team-members were: code-guy21, luxun2, grindlock on github</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-maps\">google-maps</a></span></li><li><span class=\"cp-tag\">airport.dat</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mysql\">mysql</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/andydng/TerminalNav\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/andydng/TerminalNav\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Home IO", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>To link smart watches to smart home appliances</p>\n<h2>What it does</h2>\n<p>sends data from a smart clock through a remote server to a pebble watch</p>\n<h2>How we built it</h2>\n<p>we designed the clock with intel Edison using node.js, we then sent the info using a json file and had a pebble app pull the information from a remote jserver using bluetooth to connect to an internet capable device.</p>\n<h2>Challenges we ran into</h2>\n<p>originally wanted to do this with arduino which would have been simpler but we had no ethernet ports for it. we also originally planned on using AWS however they never responded to our applications and we were unable to utilize it.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>bridging so far of a gap as home appliances to smart watch</p>\n<h2>What we learned</h2>\n<p>We improved our skills, in web servers, Intel edison, pebble, json and nodejs</p>\n<h2>What's next for Clockey Mc'Clockface</h2>\n<p>we want to send data from the pebble back to the home appliance in order to control it. we would also like to migrate the server to AWS</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/intel-edison\">intel-edison</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/pebble\">pebble</a></span></li><li><span class=\"cp-tag\">cloud-pebble</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/bjaury/Homeio\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/bjaury/Homeio\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Smart Home with Clarifai", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Our team loves machine learning and AI technologies and we avidly study it. As a result, we wanted to marry our electrical engineering skills with some of the amazing emerging tech we were exposed to this weekend to create a smart home system.</p>\n<h2>What it does</h2>\n<p>We take short videos and stills from a front door feed that recognizes user faces and matches them with the residents' social media connections to identify friends. Furthermore our local server amasses histories of all visitors to intelligently decide if a visitor is a regular, welcomed visitor (family, friend, neighbor), an unknown, are definitely nefarious (returning thieves, a harassing ex-boyfriend, annoying solicitors) , and a sentiment analysis associated with them by the ever-learning Clarifai system to help determine appropriate measures.\nAll of this only scratches the surface, as we have designed smart home responses to these various visit scenarios. We made a set of smart curtains from scratch, giving the user increased heating efficiency and privacy. Our light sensor detects sunrise and nightfall, calling for opening and closing of the curtains, respectively, leading to a natural awakening process that caters to our evolutionary biology's natural circadian rhythm for early momentum to a successful day, every day. The integrated temperature sensor automatically decides if the sunlight is welcomed (inside it's less than 70 degrees) and opens the blinds accordingly, saving on electric bills. Furthermore, Clarifai and our system's recognition program closes the blinds near the front door when unwanted visitors approach, and open them when welcomed visitors approach. This is a simple example of how we automate home security, privacy and environmental considerations all through Clarifai. We plan to implement simple voice controls with custom Alexa Lambda functions in the future. </p>\n<h2>How we built it</h2>\n<p>We used various micro-controllers and hacked together various circuits to run DC motors to open and close  smart blinds for the home. Arduino was relied on heavily and we started with the Yun, considered other options before settling on an uno with a motor shield base shield from Groove with a light and temperature sensor. The Facebook API was explored with node.js to simulate a browser implementing Facebook's legendary friend face recognition protocol on visitors. This complemented our existing database of residence visitor history and tags from Clarifai to offer a weighted house response affecting the window systems (curtain opening/closing) and in the near future other feedback systems such as A/V readings and text messages.  </p>\n<h2>Challenges we ran into</h2>\n<p>Primary challenges were time and a lack of preexisting work in the area. If people had published Facebook face recognition API work previously it would not have been so difficult to get running. We weren't able to finish this functionality due to a lack of time but we made promising strides and we're excited to have it running soon along with the voice recognition features. Another major challenge was dealing with fishing wire that loved to coil up as soon as it got a chance and had to be carefully wound around our spindles probably twenty times before achieving repeated flawless operation (the weakness of duct tape vs our final wall fixtures was another factor). </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are extremely proud to have implemented smart home automation in truly innovative ways (building a smart window system from scratch that reacts to visitors as an example of how we can automate all kinds of smart actions such as audible and visual announcements of the visitor and their familiarity). \nWe also are proud to have gotten extremely close to matching visitors with your social media friends, adding another layer to the tags and internal system matching functionality that guarantees UNSURPASSED security from harassment and privacy from intruders both visually through your window and audibly/physically due to alerts about visitors and a deterrant alarm system. </p>\n<h2>What we learned</h2>\n<p>We learned a ton about SDK's and API's, the state of home automation, how to deal with finicky duct tape and curly fishing line, quickly prototype alarm and motor driver circuits, program embedded systems and machine learning applications, identify visitors with sentiment analysis of unprecedented levels, and how to work as a team while having fun. </p>\n<h2>What's next for Smart Home with Clarifai</h2>\n<p>We plan to integrate Alexa and smart lights through IFTTT, as well as full Facebook friend searching for more accurate visitor information. Then we will sell our system, if possible!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python-package-index\">python-package-index</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Akount/HackRiddle\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Akount/HackRiddle\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["EvenToConnect", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"EvenToConnect \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/372/datas/gallery.jpg\"/>\n<p>\n<i>EvenToConnect Main Page</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"EvenToConnect \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/371/datas/gallery.jpg\"/>\n<p>\n<i>EvenToConnect Account Page</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"EvenToConnect \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/373/datas/gallery.jpg\"/>\n<p>\n<i>EvenToConnect Mobile Version</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Our team was looking for ways to combine social media aspects with a learning algorithm, Clarifai.</p>\n<h2>What it does</h2>\n<p>The app has two main sections: event and personal photos. The user is able to upload images either to trending events or personal gallery. The images then are automatically assigned categories based on the Clarifai image recognition system.</p>\n<h2>How we built it</h2>\n<p>The front-end consists of HTML5, CSS3, JavaScript and Bootstrap, while the backend was developed using C#.NET as well as the Clarify JavaScrip API and Amazon Webservices C# Library.</p>\n<h2>Challenges we ran into</h2>\n<p>Significant challenges connecting to the Amazon Web Services and we were unable to fully utilize the service. In addition, many of our features were not able to be realized due to time constraints and delays in developing database.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Beautiful interface and layout, mobile responsive features, and ability to successfully use Clarifai features.</p>\n<h2>What we learned</h2>\n<p>We expanded our knowledge on backend and front-end development, as well as learned much about the services and resources available for web app development.</p>\n<h2>What's next for HackRiddle_App.github.io</h2>\n<p>We would like to continue working and expanding our project by focusing on event functionalities and integrating them into the user experience.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/asp-net\">asp.net</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/starkc1/HackRiddle_App.github.io\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/starkc1/HackRiddle_App.github.io\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["My job was to write and design HTML and CSS, as well as develop other front-end user related experiences.", "I worked on developing the frontend and user experience for the web app.", "I worked on the Front End Development and the attempted hosting of the web app on github pages", "I worked on the backed coding in C# developing algorithms to select which images and categories to display on the web pages. as well as working with the Amazon Web Services and Clarifai API's"]], ["abc", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Spur-of-moment creativity</p>\n<h2>What it does</h2>\n<p>It translates ASCII text into MIDI tones</p>\n<h2>How we built it</h2>\n<p>Using a text editor and a Python compiler</p>\n<h2>Challenges we ran into</h2>\n<p>FreeVS compatibility issues</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Eh</p>\n<h2>What we learned</h2>\n<p>Collaboration is a bad idea</p>\n<h2>What's next for abc</h2>\n<p>Comments</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/PrivacyPolicy/abc\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/PrivacyPolicy/abc\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Deaf Translator", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We tried putting ourselves in the shoes of those who are unable to hear and wanted to create something that could aid in communication with people who are unfamiliar with sign language</p>\n<h2>What it does</h2>\n<p>Deaf Translator has two tabs: one that turns speech to text in real time and another that turns text to speech</p>\n<h2>What we learned</h2>\n<p>Tiny mistakes can set you way back.</p>\n<h2>What's next for Deaf Translator</h2>\n<p>The ability to recognize any language so that not only people who are unable to hear find use of it, but everyone will find use it.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">jaba</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag\">api</span></li><li><span class=\"cp-tag\">speech-to-text</span></li><li><span class=\"cp-tag\">text-to-speech</span></li></ul>\n</div>\n</div>", [""]], ["Sarcastic Task Manager", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Sarcastic Task Manager \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/429/123/datas/gallery.jpg\"/>\n<p>\n<i>Main activity</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Sarcastic Task Manager \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/429/122/datas/gallery.jpg\"/>\n<p>\n<i>Adding details to a task</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Sarcastic Task Manager \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/429/121/datas/gallery.jpg\"/>\n<p>\n<i>Notification style</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p><strong>Inspiration</strong>\nHave you ever ignored a reminder from one of your task managers? Well, we have. In fact, most people do this most of the time. Sarcastic Task Manager will be in charge of bugging you until you pay attention!</p>\n<p><strong>What it does</strong>\nHelps you be more organized in a funny way.</p>\n<p><strong>How we built it</strong>\nJava, Android Studio and SQLite</p>\n<p><strong>Challenges we ran into</strong>\nNotifications without the app running. This required setting an alarm for the system to wake up the app and execute some code. Had trouble actually implementing it and ran out of time.</p>\n<p><strong>Accomplishments that we're proud of</strong>\nThe three of us survived our first Hackathon :)</p>\n<p><strong>What we learned</strong>\nBring a pillow next time. Also, start planning a idea a bit ahead of time if possible.</p>\n<p><strong>What's next for Sarcastic Manager</strong>\nImplementing a database in a server\nPushing notifications from a server\nUse machine learning to relate the content of the second notification to what your task is (This would be awesome!)</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sqlite\">sqlite</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/TheSerrano/SarcasticManager\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/TheSerrano/SarcasticManager\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Poppycard", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>It's challenging to easily view live metrics like \"total users\" or \"how many times the ISS has orbited earth today\". Most developers and BAs have to use clunky database software or use some proprietary web tool that makes it difficult to stay up to date, especially when on the go. With Poppycard you can easily view data from an endpoint or URL and share it with a generated Poppycard link.</p>\n<h2>What it does</h2>\n<p>We ingest a URL or an endpoint that returns a JSON payload. After a URL is provided, a unique Poppycard is created and allows that live metric or information to be easily shared or viewed from a static link.</p>\n<h2>How we built it</h2>\n<p>We certainly didn't hold back. We used all the latest and greatest technologies from Node and React to Redux and MongoDB. We collaborated with GitHub and brainstormed to come up with ideas and approaches to get the job done.</p>\n<h2>Challenges we ran into</h2>\n<p>For starters <strong>poppycard.com is somehow cached on the network</strong> we suspect this will get updated but in order to view the site in the meantime, you must be connected to another network or go to the Heroku link. Also there was a large knowledge deficit but it was overcome by perseverance and insane trial-and-error.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Not passing out and finishing the project.</p>\n<h2>What we learned</h2>\n<p>New technologies and the meaning of life.</p>\n<h2>What's next for Poppycard</h2>\n<p>We're going to pursue Poppycard outside of the Hackathon so that it may be a helpful and reliable tool for anyone to use! </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/react\">react</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sass\">sass</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jade\">jade</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/heroku\">heroku</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/redux\">redux</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongoose\">mongoose</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/github\">github</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://poppycard.com\" rel=\"nofollow\" target=\"_blank\" title=\"http://poppycard.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>poppycard.com</span>\n</a></li>\n<li><a href=\"https://poppycard.herokuapp.com\" rel=\"nofollow\" target=\"_blank\" title=\"https://poppycard.herokuapp.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>poppycard.herokuapp.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Gnome Party", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>One of our team members was really interested in creating some form of educational game and everybody else in the group jumped on the idea. To deviate from the typical \"game\" experience, we decided to allow for smartphone using a library that we all had previously played on together before the hackathon.</p>\n<h2>What it does</h2>\n<p>Each player connects to the game through their smartphone using an AirConsole port (either a website or app) and takes turns controlling a garden gnome as it traverses its garden. Along the way, players will answer questions for the chance to gain currency to buy seeds to plant in the garden. The gnome that has the most seeds by the end of the match is declared the winner.</p>\n<h2>How we built it</h2>\n<p>We based the program in Unity that compiles in both C# and JavaScript. Logic for game objects was primarily written in JavaScript while the AirConsole integration was based in C# and HTML. Each object interacts with each other through Unity's native physics engine to allow movement along the board.</p>\n<h2>Challenges we ran into</h2>\n<p>The greatest challenge we ran into during this hackathon was the AirConsole integration. Due to the novelty of the library, documentation and error fixes came few and far between so integrating the system with the Unity base proved arduous. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>There was a point in time that our group became unsure if the AirConsole implementation was going to work. After sticking to debugging for several hours, we were able to integrate the smartphone controllers into the program and run through a lap of the map with no issues. The fact that we were able to achieve something of this caliber during our first hackathon is something that we are really proud of.</p>\n<h2>What we learned</h2>\n<p>Each of us gained some knowledge into the languages that we coded in. One member who had programmed in Unity before remarked that he learned more in the past 24 hours than he had in 2 months of casual coding he had done before. Another member coded for the first time in both C# and HTML.</p>\n<h2>What's next for Gnome Party</h2>\n<p>Gnome Party is still a work in progress that we plan to continue on. Many game mechanics still need to be implemented, including the question / answer system that will include question customization for teachers. Further map development, a game mechanic involving putting currency into a \"bank\" of sorts to gain seeds, and different event tile types are also in the works. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/kcook2499/Gnome-Party\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/kcook2499/Gnome-Party\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I contributed custom art assets for characters, icons, and scenery.", "", ""]], ["Goal Hunt", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>What is Goal Hunt</h2>\n<p>As individuals heading towards independence, we decided the best way to help us keep our priorities and achieve our goals was to make it ourselves to help other people such as ourselves. </p>\n<h2>What does Goal Hunt do?</h2>\n<p>The app is meant to track an individuals goal's and help them from beginning to end. It will help ensure that all users can meet their deadlines on time.</p>\n<h2>How we built it</h2>\n<p>We rendered the webpages in html, specifically using the jinja2. Data will be transferred the html code and the python code, containing most of the logic.</p>\n<h2>Challenges we ran into</h2>\n<p>During our setup, our programs weren't running, various items just simply weren't going our way. We had to completely change our idea and go with a new idea.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We got ourselves together quickly once our equipment decided to cooperate with us. We communicated well and at the end we grew as individuals and as a team</p>\n<h2>What we learned</h2>\n<p>We learned that developer environment preparation is probably the most important part of a hackathon. </p>\n<h2>What's next for Goal Hunt</h2>\n<p>The next plan for Goal Hunt is to keep adding features as we come up with new and intuitive ways to keep people on task.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag\">ginga2</span></li></ul>\n</div>\n</div>", ["", "", "", ""]], ["Gainsz", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>-Motivation to recreate the first Android App I ever had the chance to work on, to make it better.</p>\n<h2>What it does</h2>\n<p>It finds the best Calorie/dollar ratio based on the amount of money entered into the app.</p>\n<h2>How I built it</h2>\n<p>Android Studio.</p>\n<h2>Challenges I ran into</h2>\n<p>Many challenges including implementing the Google Maps API completely and implementing a library to view 3D objects.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Being able to solve many of the problems I ran into while working alone.</p>\n<h2>What I learned</h2>\n<p>How to add permissions to Android, use Google Maps API, Google APICLient, Working with 3D Objects.</p>\n<h2>What's next for Gainsz</h2>\n<p>Definitely finishing the app with all the features I originally planned for, as it is in a very early state, unfortunately.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-maps\">google-maps</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-places\">google-places</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/King-Henry/GainszV2\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/King-Henry/GainszV2\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["AlmostUnlimited", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>Hey there.</p>\n<p>We hate paying for stuff.</p>\n<p>We also love being clever.</p>\n<p>And we also love taking advantage of big companies. </p>\n<p>This is AlternateUnlimited.</p>\n<p>Upload videos by using Google's seemingly infinite server space.\nUpload audio by doing the same thing, except just smack an image along with that video and upload it over. \nUpload images by using one of the biggest image hosting services, Imgur.</p>\n<p>Bests part of it all? We store all the metadata of your files in our SUPER SEXY BACKEND that is build using Google Spreadsheet. Yea, Google Spreadsheet LOL. This means whenever you want, you can download these videos, images, and audio files back at anytime.</p>\n<p>Its a Frankenstein Cloud that we built with out bear hands of the backs of server space bought by the big companies 8)</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-spreadsheets\">google-spreadsheets</a></span></li><li><span class=\"cp-tag\">youtube-dl</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/youtube\">youtube</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/imgur\">imgur</a></span></li><li><span class=\"cp-tag\">and-a-shit-ton-of-other-stuff</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/farzaa/AlmostUnlimited\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/farzaa/AlmostUnlimited\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Team leader, skip lists, water, sound engineer", "I helped build the application from the ground up with Farza. I also created the GUI in Qt, wrapped in PySide for python. ", ""]], ["Dab bot", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/TwyYMp2fB7g?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Dab bot \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/941/datas/gallery.jpg\"/>\n<p>\n<i>dab</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>we like to dab</p>\n<h2>What it does</h2>\n<p>dab</p>\n<h2>How I built it</h2>\n<p>Arduino will always be there for you. and cardboard.</p>\n<h2>Challenges I ran into</h2>\n<p>HA</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Everything</p>\n<h2>What I learned</h2>\n<p>Dabbing has no limits</p>\n<h2>What's next for Dab bot</h2>\n<p>Pitch this robot for mass production and conquer the robotics industry</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["HackGT2016", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>Memories is a web app where the user signs into popular social media sites such as Facebook, Instagram, and Spotify. Once they do so, our system will begin saving things it feels is most important such as most liked pictures, most favorited tweets, and most played songs.  Than all this is saved in an online time capsule.  The user will receive a link that will open at a specified time, such as in something like 6 months and see what things were like 6 months ago.  The best part about Memories is the user themselves don't know whats going in the time capsule. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/farzaa/HackGT2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/farzaa/HackGT2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["QuickPark", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Our inspiration was to help fix the solution of parking at our local campus.</p>\n<h2>What it does</h2>\n<p>It tells us how many parking spots are available and it breaks it down by floor for us.</p>\n<h2>How we built it</h2>\n<p>We built it using Android Studio for the front end and Eclipse for the back end.</p>\n<h2>Challenges we ran into</h2>\n<p>Some challenges we ran into was making our elements work the way we wanted.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We were able to fully put together an app with full integration in the short time that we had by combining our individual experiences to contribute and make our team as efficient as possible.</p>\n<h2>What we learned</h2>\n<p>We learned the true challenges of how app development can really be.</p>\n<h2>What's next for QuickPark</h2>\n<p>We hope to continue work on this app to hopefully deploy a functional app that can benefit local students.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xml\">xml</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n</div>", ["", "", "", ""]], ["Cura", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>There are services that diagnose people's sicknesses, and there are services that refer patients to doctors. However, no service does both efficiently or smoothly, and it's a very important need that's not being met.</p>\n<h2>What it does</h2>\n<p>Cura takes a user's insurance coverage information and combines it with a diagnosis it creates based on the user's symptoms of sickness. A host of the nearest relevant doctors for the patient to visit is then produced. From here, the user can view each doctor and their contact information.</p>\n<h2>How we built it</h2>\n<p>We mapped symptoms of illnesses to particular illnesses. From there, we assigned doctors of a particular specialty to each illness. This then linked to a large, data-rich database of doctors in the US in order to complete the process from symptoms to doctor information. We basically integrated the doctors database with user information to produce the complete package. </p>\n<h2>Challenges we ran into</h2>\n<p>Finding an API for a symptoms checker for patients was very tough, as a good one doesn't exist. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>The app is a very complete solution to a challenge that a lot of people face: finding a doctor that their insurance will cover who can cure their ailment. This is, in our opinion, a very useful solution and we're very proud about that. We're also proud of our team spirit and the way we worked together.</p>\n<h2>What we learned</h2>\n<p>One of the things we tried and turned out very successful was the use of online real-time collaboration in writing the source code. This is the best way to work together. One thing we could have done better was plan the specifics of the program logic and flow beforehand- something we'll work on for next time.</p>\n<h2>What's next for Cura</h2>\n<p>We hope to enhance Cura's personalization by allowing users to save and comment on the doctors they get referred to, both improving the quality of recommendations and the holistic user experience. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/phonegap\">phonegap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mysql\">mysql</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.fit.edu/stanyu2013/Cura\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.fit.edu/stanyu2013/Cura\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.fit.edu</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Murmur", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>Geocache voice memos for all the funz.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/angular-js\">angular.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/apache\">apache</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ionic\">ionic</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/leonliang33/TBA-Voice\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/leonliang33/TBA-Voice\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the backend, the database, and converted the application to android", "I designed and programmed the front-end of the project.", "", ""]], ["elang", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Richard Roe was struck with a stroke of genius in the middle of the night, called his favorite professor, asked if this idea had any real embodiment.</p>\n<p>To young Roe's surprise, there was not yet an implementation of this revolutionary new programming paradigm.</p>\n<h2>Here's what it does</h2>\n<p>The secret sauce is that there is a new statement. We call it, <code>when</code>.</p>\n<p>The <code>when</code> statement monitors the state of the program to react to mutations.</p>\n<p>This project is for cool programmers only!\nIf you really want to know what it does, do what you do for every other programming language, and RTFM.</p>\n<p>Oh wait. We didn't write one.</p>\n<p>So, basically it's just C. With <code>when</code>. Have fun!</p>\n<h2>How we built it</h2>\n<p>We used some industry-standard, best practices, cutting edge tools. These include;</p>\n<ul>\n<li>Antlr (4 to be more precise. 4.5 in case you really wanted to know more details. 4.5.1 to be exact)</li>\n<li>LLVM (I have no idea which version, sorry)</li>\n<li>C (LLVM is a pain to write, so we used C for now)</li>\n</ul>\n<p>A couple of us have made non-trivial (but just barely) compilers for school before.\nWe used this invaluable experience and our software engineering knowledge to accomplish this epic.</p>\n<h2>Challenges we ran into</h2>\n<p>Practically none.</p>\n<p>In the beginning, we tried to use the Antlr plugin for Gradle. This was a mistake. It complained about the first line:</p>\n<pre class=\"language-nolang\"><code>grammar Elang;\n</code></pre>\n<p>This is ridiculous. We cried. Mainly me (Alex Ordonez). And then, we were saved (by Kim Chen). She was smart enough to doubt the plugin. She ran it the proper way with Java and an Antlr jar she found online.</p>\n<p>We marched on.</p>\n<p>Next, we faced the challenge of getting Antlr to properly generate the lexer, parser, and visitor.</p>\n<p>I don't want to go into too many details, because this is a hackathon and I don't have time for that.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We got past the Antlr error mentioned above.</p>\n<p>It works.</p>\n<h2>What we learned</h2>\n<p>Richard learned some Antlr I think.\nI liked working on this more than I liked doing the homework.\nMimi learned everything.\nKim learned more about writing a complicated compiler.</p>\n<h2>What's next for elang</h2>\n<p>Basically, replace C. We plan on taking over the world.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag\">antlr</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c\">c</a></span></li><li><span class=\"cp-tag\">llvm</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/gradle\">gradle</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://elang.tech\" rel=\"nofollow\" target=\"_blank\" title=\"https://elang.tech\">\n<i class=\"ss-icon ss-link\"></i>\n<span>elang.tech</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Kevin the Kakti", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Kevin the Kakti \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/065/datas/gallery.jpg\"/>\n<p>\n<i>Kevin</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Kevin the Kakti \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/426/981/datas/gallery.jpg\"/>\n<p>\n<i>@kevin_the_kakti</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Kevin the Kakti \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/222/datas/gallery.jpg\"/>\n<p>\n<i>Wiring</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Two electricals, one chem e, and a comp sci student got together to do their first ever hackathon together. Victoria, the comp sci, wanted to make a dabbing robot. Kaleb, the electrical engineer, talked about a plant. Everybody loves plant. But, everyone LOVES a tweeting plant. Thus, Kevin the Kakti was born.</p>\n<h2>What it does</h2>\n<p>At X minutes, Kevin is able to tweet when it has been watered (by the press of a button), if it is too hot/too cold, if there is too much/too little sun or if it notices someone in front of him.</p>\n<h2>How we built it</h2>\n<p>Kevin was lovingly handmade with the Arduino microcontroller, an additional ethernet shield (to connect to twitter), jumper wires, breadboard, capacitors, resistors, ultrasonic sensor, temperature sensor, photocell (light dependent) sensor.</p>\n<h2>Challenges we ran into</h2>\n<p>Originally, we were going to implement a moisture sensor with Kevin so it can alert whenever he needs water. However, we had the wrong hardware component to implement this, so an alternative button function was made. Combining the use of twitter and all the other functions were a challenge as well. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>our son KEVIN</p>\n<h2>What we learned</h2>\n<p>Team work truly makes the dream work</p>\n<h2>What's next for Kevin the Kakti</h2>\n<p>Ask him</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li><li><span class=\"cp-tag\">wifi</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twitter\">twitter</a></span></li></ul>\n</div>\n</div>", ["", "", "", ""]], ["EvolutionF", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>(warning: APPLICATION IS IN THE ZIP FILE GENETICALLYSELFWRITINGARTIFICIALINTELLIGENCE.zip)</p>\n<h2>Inspiration</h2>\n<p>I took inspiration from BrainFucks(pardon the crude name, I didn't make it) simplicity and a slight interest in genetic simulation.</p>\n<h2>What it does</h2>\n<p>It simulates 100 agents who have the ability to self modify their own genome as they please, with incentives of not dying if they build towards complexity.</p>\n<h2>How I built it</h2>\n<p>I built it from creating a Brainfuck interpreter and creating permutation/mutation algorithms. forcing the units to operate off of a limited genome and adapt or die.</p>\n<h2>Challenges I ran into</h2>\n<p>Front-end was the most difficult by far, I would've gone so much farther if I had assistance in it since I'm not familiar with it.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Very few people have made programs that can write themselves, at least none that I've met.</p>\n<h2>What I learned</h2>\n<p>I learned that front end development and sorting algorithms for multidimensional arrays are harder than they look. </p>\n<h2>What's next for EvolutionF</h2>\n<p>More patches for the front end most definitely. also will include templates for the agents to read and even code themselves from, while creating permanent memory for them so that they keep their knowledge in between bootups.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag\">brainfuck</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/tharrod1/EvolutionF\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/tharrod1/EvolutionF\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["CryptAPic", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"CryptAPic \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/426/961/datas/gallery.jpg\"/>\n<p>\n<i>CryptAPic login</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"CryptAPic \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/275/datas/gallery.jpg\"/>\n<p>\n<i>Whiteboard design/control flow</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>What helped inspired this project was a way to be able to send pictures in a way that no one would be able to see them unless you wanted someone, by using encryption.</p>\n<h2>What it does</h2>\n<p>Conceptually, the app allows you to:</p>\n<ol>\n<li>Take a picture using a built-in camera app.</li>\n<li>Save that picture in an encrypted manner (protected by user password)</li>\n<li>Send that picture to a specific set of recipients, where the image is encrypted such that <em>only</em> these recipients can see it (using their own passwords)</li>\n</ol>\n<p>... along with basic management tasks for a photo viewer app (rename, delete, etc.)</p>\n<p>Only this first point is properly implemented.</p>\n<h2>How we built it</h2>\n<p>We used a mobile app that used the phone's camera that securely stored the pictures and used a web service to store the pictures by encrypting it and sending it to a recipient.</p>\n<h2>Challenges we ran into</h2>\n<p>The biggest challenge was setting up a backend framework to store user data-- since the sharing functionality was intended to be based on public key encryption, the backend would have been responsible for associating users with public keys and distributing those keys. AWS was uncooperative, and it was difficult to figure out remote database communications in an Android app.</p>\n<p>Implementing cryptography ended up taking too much time to actually integrate into the app.</p>\n<p>Only one of our team members was familiar with Android development, and we lost a lot of time to setting up the development tools for that, along with working around Android's many quirks.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Getting the camera to be able to take a picture.</p>\n<h2>What we learned</h2>\n<p>How access a phone's camera and store images on a phone locally.</p>\n<h2>What's next for cryptapic</h2>\n<p>Proper encryption and being able to send it between users, and allowing encryption of other files, such as video, or documents.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/postgresql\">postgresql</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/ThomasBassa/cryptapic\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ThomasBassa/cryptapic\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I taught my teammates how to do Android development, or at least got them up and running with Android Studio & Git. Beyond that, most of my work was done in design and quality control, helping my team address issues as they arose.", "I assisted  with some of the planning for the App and added it with Firebase functionality. ", "I worked on parts of the front end such as login, view of the gallery, and being able to keep a similar aspect ratio across different smartphone screen sizes. I also implemented the camera, and the use of the buttons.", "I worked with setting up the backend database to store the key pairs for encryption and decryption using Postgresql.  "]], ["Eat-moji", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/Jai_G3lHEKc?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>During HackGT, there was a workshop on \"A Crash Course to Hackathons\" where the person leading the workshop showed everybody one of his early hacks. It was something he made with Ruby, the Google Places API, and Twilio where you text a number what you were looking for in a certain place and you would receive a text back with all the information you wanted. After seeing that, I wanted to make something similar, where you would tap/click an Emoji on some user interface, and you would receive local information based on that Emoji. After failing to implement it during HackGT, I thought I'd try it again here at HackRiddle.</p>\n<h2>What it does</h2>\n<p>As mentioned earlier, there is a user interface filled with a multitude of Emoji buttons. Each button has an id, and by clicking each one, a version of the Yelp API retrieves data about that id in the local area, and stores the data in an array. The program then retrieves the first 3 elements of this array, which are the 3 top-rated establishments of that certain term, and then outputs them for the reader.</p>\n<p>For example, clicking the burger Emoji in Daytona Beach, FL will output \"The best 3 areas for burgers are Ocean Deck, Smoke Shack BBQ, and Daytona Taproom.\"</p>\n<h2>How I built it</h2>\n<p>The front-end was built using HTML and CSS and the Bootstrap framework. The images used were taken from emojipedia.org, which has nearly every emoji variant ranging from their appearances on Apple, to Google, to Twitter. Each Emoji is a button, each with a unique ID based on what the Emojis represent.</p>\n<p>The back-end was built using JavaScript, namely JQuery. JQuery handled the click event handler, which is the main event in the application. I also included a variation of the Yelp API (a simpler, more user-friendly version), provided by one of the HackRiddle mentors, which was used for collecting the necessary data.</p>\n<h2>Challenges I ran into</h2>\n<p>I had never developed any kind of web application before. The extent of my programming experience had been class projects primarily done through the console, so taking on something entirely new was definitely a challenge. I had to learn the basics of HTML, CSS and how the Bootstrap framework worked. What was most challenging was implementing the JavaScript elements. Again, I had never worked on a web application, so figuring out how to connect the front-end and the back-end together was challenging. I also initially wanted to use the Google Places API, and the standard Yelp API, but there was a lot of difficulty in getting the right permissions. Fortunately, through it all, I had a great mentor help push me in the right direction every time I needed help.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I'm proud of myself for making my very first full web-application. I had never used any of these technologies before, so I was initially doubtful that I would be able to create something in the 24 hours provided. However, I was able to learn enough of the basics to put together something I'm really proud of. I'm particularly proud of myself for figuring out how to merge the JavaScript back-end and the HTML/CSS front-end.</p>\n<h2>What I learned</h2>\n<p>I learned the very basics of web application development (HTML, CSS, JavaScript), something I had been interested in since I became a Computer Science student. I learned how to work with a framework (BootStrap), how to merge front-end and back-end together, and how to use an API. Not bad for a noob.</p>\n<h2>What's next for Eat-moji</h2>\n<p>I'd love to flesh it out and make a lot more polished. In the future, I'd love to make it an actual website with lots of pretty colors and effects. I'd also like to provide more detailed information beyond the name of the establishments. And, if I learn graphic design, I'd like to replace the Emojis with my own artwork. Overall though, I'm happy with this start.</p>\n</div>\n</div>", [""]], ["lilBots3DWorks", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>To give all people the phone cases they deserve.</p>\n<h2>What it does</h2>\n<p>gives customers custom printed phones</p>\n<h2>How I built it</h2>\n<h2>Challenges I ran into</h2>\n<p>creating the  store</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Making a nice functioning website</p>\n<h2>What I learned</h2>\n<p>That a great idea can lead to many open doors</p>\n<h2>What's next for lilBots3DWorks</h2>\n<p>Gathering more information and creating an innovated company.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">.org-domain</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://pixlesdust.impress.ly/\" rel=\"nofollow\" target=\"_blank\" title=\"http://pixlesdust.impress.ly/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>pixlesdust.impress.ly</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["SwiftyCode", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>I wanted to be able to utilize Apples iOS 10's new iMessage App features. With this is mind, I wanted to create something that allowed people to share code quickly with one another on mobile.</h2>\n<p><strong>By using SwiftyCode, you will be able to select between multiple programming languages (Swift support only as of now), and have the most common syntax prototypes right at your fingertips. With just a tap of a button, users are able to have editable prototypes that can be shared with others.</strong></p>\n<p><strong>Utilzing Apple's newest release of Swift, I was able to create the iMessage extension. The most difficult part was dealing with text formatting changes when the user edits the text or adds more to the editor. Its been a while since I finished an app at a hackathon. Being able to have a fully functional app by the end of the hackathon is great.</strong></p>\n<p><strong>What did I learn? Well, I learned a lot about auto layout and how to apply it. I also learned even more abou Swift and specifically Swift 3.0</strong></p>\n<h2>What's next for SwiftyCode?</h2>\n<p><strong>SwiftyCode will eventually support more programming languages more than Swift and allow for the receiver to parse the received image and edit the code and send it back</strong></p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ios\">ios</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/adilanchian/SwiftyCode\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/adilanchian/SwiftyCode\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["No Strings Attached", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/3PY2-yPDR18?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"No Strings Attached \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/426/855/datas/gallery.jpg\"/>\n<p>\n<i>The glove complete</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We were sitting on the couch at 2 in the morning playing guitar hero and thought about how awesome it would be to have VR Guitar hero with a powerglove controller.</p>\n<h2>What it does</h2>\n<p>You can play Guitar hero using a glove as a controller and through an oculus rift (<strong>Warning</strong>: <em>Non-Malfunctioning Oculus Rift needed</em>)</p>\n<p>Write your own songs using our built in transcription system</p>\n<p>Allows you to look around your stage including working stage lights and animated crowd</p>\n<h2>How we built it</h2>\n<p>We took input from 4 flex sensors into an arduino and sent those values to unity to be used as controller inputs. The games was built in Unity and builds into VR</p>\n<h2>Challenges we ran into</h2>\n<p>Oculus Rift can only be used with desktop computers and the Alienware X51 kept crashing on us so we had to build all the VR parts only to not be able to demo them. The Oculus Rift CV1 <strong>MALFUNCTIONED</strong> and would not be recognized.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>being able to not only create a VR games but bring in outside hardware components to make the game even more immersive. </p>\n<p>Created a System to write your own songs for the game.</p>\n<h2>What we learned</h2>\n<p>How to better work with hardware and circuits. \nHow to connect an Arduino to Unity\nWhat the knots in sewing are for\nHow to use Hackathon resources efficiently (Thank you Namecheap) </p>\n<h2>What's next for No Strings Attached</h2>\n<p>Crowd source more songs and create and actual user base.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/oculus\">oculus</a></span></li></ul>\n</div>\n</div>", ["Worked mainly on the hardware. Made the glove and programmed the arduino to send the values from the sensors to Unity.", "I worked mostly on the gameplay elements as well as handled data transfer from the arduino to our unity environment", "Mainly worked in Unity to create the 3D world and some logical scripts. Also designed some of the models and materials used in our project. Also assisted with soldering the wires to the breadboard. "]]]