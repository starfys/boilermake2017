[["Open Mind", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Psychiatric medicine today has a bit of a predicament. Neurotransmitters are an often fickle beast to deal with; this makes explaining their function to medical students and patients very difficult. With Open Mind, visualizing neurotransmitter pathways is easy, making understanding the mind simpler for the average person.</p>\n<h2>How it works</h2>\n<p>An Arduino Due controls digital logic signals, which are sent to a breadboard and wired into a plastic skull model containing a network of LEDs. The LEDs line the skull in three colors: red, green, and blue, showing pathways for norepinephrine, dopamine, and serotonin respectively.</p>\n<h2>Challenges I ran into</h2>\n<p>The top level GUI was scrapped due to difficulty syncing the Arduino program with a C++ program for data input. Thus, data input is currently hard coded. Additionally, hardware can be difficult to control due to the need for strong connections to pass electrical current. While wiring the circuit, many LEDs experienced weak connections, which led to many rewirings and adjustments in the circuit to find the best possible results.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>The circuit that connects the LEDs to the Arduino was a challenge to set up physically. Making so many LEDs and wires work in such a small space and with limited resources was a feat. </p>\n<p>Also, each member of our team worked with something new. John made his first Arduino program, Jeremiah worked with QT for GUI, Karen designed her first web page, and Brienne wired her first circuit.</p>\n<h2>What I learned</h2>\n<p>Every member learned some new skill as mentioned in the previous section. John made his first Arduino program, using only knowledge of Verilog HDL as a background for how the delays work. Jeremiah worked with QT for GUI, spending several hours learning QT's interface. Karen designed her first web page, which is linked below. Brienne wired her first circuit and learned how circuits work well enough to do the majority of the breadboard wiring.</p>\n<h2>What's next for Open Mind</h2>\n<p>This technology could easily expand into educational tools for more body parts. The heart, muscles, digestive tract, and other parts of the body could be modeled using LEDs in a plastic model. These can be shown to students of all levels that are learning about how the body functions as well as patients that have ailments affecting them and are curious about what exactly is happening in their body.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag\">breadboard</span></li><li><span class=\"cp-tag\">wire</span></li><li><span class=\"cp-tag\">resistors</span></li><li><span class=\"cp-tag\">led</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/johntomko/open_mind\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/johntomko/open_mind\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"http://meducationtech.wix.com/meducationtech\" rel=\"nofollow\" target=\"_blank\" title=\"http://meducationtech.wix.com/meducationtech\">\n<i class=\"ss-icon ss-link\"></i>\n<span>meducationtech.wix.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["AdaptiveSemanticSimplifier", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>AdaptiveSemanticSimplifier</h1>\n<p>A tool for reading and adapting texts based on the user's reading level.\nDesigned to assist readers at any level get introduced to uncommon vocabulary by being able to simplify the problematic word or phrase with a click. The program then adapts to the reader's base level to allow them to read with the most ease and understanding, while still maintaining as much original integrity of the text as possible.</p>\n<p>We trained a linear classifier using a geometric mean algorithm to figure out which reading level the child is at and then augment future pages to reflect this level.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/eclipse\">eclipse</a></span></li><li><span class=\"cp-tag\">weka</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/PeterMash/AdaptiveSemanticSimplifier.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/PeterMash/AdaptiveSemanticSimplifier.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Mario's Rift", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We knew the popular game, Fez, had incorporated the idea of assimilating split viewpoints mentally. We decided to take it one step further and apply this to the beloved platformer, Mario, and to add Oculus Rift support. We also make a design decision to make the game harder than most platformers, since the genre has been watered down in recent years. Adding LeapMotion support helps with this idea because it requires greater body awareness, control, and timing than playing with just a keyboard and Oculus.</p>\n<h2>How it works</h2>\n<p>You see the main camera on the Oculus Rift in first person. In the top left corner is the \"traditional\" side view camera. You then have to traverse the level using spacebar (or the Leap Motion) to jump, and using the W and S keys to move forward and backward.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/oculus\">oculus</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/leap-motion\">leap-motion</a></span></li></ul>\n</div>\n</div>", ["", "", ""]], ["HackYSU Music App", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"HackYSU Music App \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/245/978/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"HackYSU Music App \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/249/234/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"HackYSU Music App \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/249/235/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>How it works</h2>\n<p>The app basically takes data from the Spotify API to give you information on favorite Spotify tracks of the people (who've also used the app, and checked in via the app) around your current geolocation. Simply check yourself in to the app (which determines your current lat/long location and city) and the app displays your favorite Spotify tracks as well as those of the people who checked in near you. Then you have the option to share and discover new music with your nearby friends!</p>\n<h2>Challenges I ran into</h2>\n<p>Data scraping with the Spotify API, integrating things with the Facebook API (initially, but we didn't have time to finish doing that part), UI designing with Dreamweaver</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>HTML5 geolocation, a wonderfully designed UI through Dreamweaver, getting Spotify data</p>\n<h2>What I learned</h2>\n<p>How to use the Spotify API, and a bit about the Facebook API (even though I didn't get the integration to work, I still had some fun playing around with it)</p>\n<h2>What's next for HackYSU Music App</h2>\n<p>We'd love to enable Facebook integration with the app, make it go mobile, implement some more cool algorithms to filter/select songs to share and discover with actual people you're friends with if there are too many to choose from (aka with more people using the app), and enhance the UI further to make it more interactive.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/dreamweaver\">dreamweaver</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/django\">django</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/spotify\">spotify</a></span></li></ul>\n</div>\n</div>", ["I worked on the frontend. I created the Html for this project in Dreamweaver. The problems I ran in to was moveing the UI to bootstrap from Dreamweaver,  never using bootstrap, and not knowing any Python. Duing this project I learnd the new version Dreamweaver. The last version I used was CS2 the version I used for this was CS6. I also learned a small bit of the Python language.", "Used Python/Django and Spotify API, integrated backend with frontend"]], ["Pebble Frisbee RPM Gauge", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>I like tangible things and I really like sensors</p>\n<h2>How it works</h2>\n<p>It spins and reads accelerometer values as it changes and converts it to rpm (roughly)</p>\n<h2>Challenges I ran into</h2>\n<p>Android dev, finding tape</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Taping a pebble to a potato salad cover</p>\n<h2>What I learned</h2>\n<p>Brushed up on C a ton!</p>\n<h2>What's next for Pebble Frisbee RPM Gauge</h2>\n<p>Android Graphs!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c\">c</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/pebble\">pebble</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/3dprinting\">3dprinting</a></span></li><li><span class=\"cp-tag\">solidworks</span></li></ul>\n</div>\n</div>", [""]], ["polygon-project", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Minimally Multiplayer; Amazon Web Services; PyGame; Grails</p>\n<h2>How it works</h2>\n<p>Sockets, custom packets</p>\n<h2>Challenges I ran into</h2>\n<p>sockets, custom packets, python</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>grails3</p>\n<h2>What I learned</h2>\n<p>python</p>\n<h2>What's next for polygon-project</h2>\n<p>more of the above</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/groovy\">groovy</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/capalmer1013/polygon-project\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/capalmer1013/polygon-project\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["CannonFodder", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Ludum Dare 32</p>\n<h2>How it works</h2>\n<h2>Challenges I ran into</h2>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<h2>What's next for CannonFodder</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/gamemaker\">gamemaker</a></span></li><li><span class=\"cp-tag\">graphics-gale</span></li></ul>\n</div>\n</div>", [""]], ["PebbleBeach", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>`        The love of the game.</p>\n<h2>How it works</h2>\n<pre class=\"language-nolang\"><code>     PebbleBeach allows the user to track midround stats from his/her pebble watch.\n</code></pre>\n<h2>Challenges I ran into</h2>\n<pre class=\"language-nolang\"><code>     It was challenging to find an open source api from which to retrieve gps distances.\n</code></pre>\n<h2>Accomplishments that I'm proud of</h2>\n<pre class=\"language-nolang\"><code>     Creating an interactive pebble app that can track strokes and putts per hole.\n</code></pre>\n<h2>What I learned</h2>\n<pre class=\"language-nolang\"><code>     Javascript, lots of javascript. Also, api's and \n</code></pre>\n<h2>What's next for PebbleBeach</h2>\n<pre class=\"language-nolang\"><code>     Continue developing the UI and create a user friendly stat tracking app.\n</code></pre>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/pebble\">pebble</a></span></li></ul>\n</div>\n</div>", ["I also helped", "I helped", "I helped too"]], ["Watch Monsters", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Watch Monsters \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/245/822/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>There are lots of games for the Pebble but most are just quick time wasters. An RPG is a 'bigger' type of game that we want players to come back to. Plus the text and menu-heavy nature of the genre works well with the minimalistic Pebble interface.</p>\n<h2>How it works</h2>\n<p>Our current version has a randomly generated countdown until an encounter. The player then enters combat with a monster. They can attack or run away, with different probabilities of escaping and dealing damage based on the player and opponent's stats. The menu system utilizes the Pebble's up, down, and select buttons.</p>\n<h2>Challenges I ran into</h2>\n<p>The first hurdle was our unfamiliarity with the platform. We all had zero to minimal pure C experience, and none of us had developed for Pebble before. Familiarizing ourselves with the SDK was half the battle. How the gameplay works at a technical level was a matter of debate for the group. We made quick compromises given the nature of a hack-a-thon to get what we have currently.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>When we started we started running through quick demos to familiarize ourselves with aspects of the SDK: the magnetometer, the accelerometers, the graphics system etc. I was <em>very</em> excited to have a black square on the screen that I could move with the watch's buttons. </p>\n<h2>What I learned</h2>\n<p>I've learned a lot. This was my first hack-a-thon and the rapid prototyping along with the division of labor was a different change of pace. Most of my programming experience has been relatively solo. Most school assignments are meant for you only - but almost all software development is done in teams and there is constant interaction.</p>\n<h2>What's next for Watch Monsters</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/pebble\">pebble</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c\">c</a></span></li></ul>\n</div>\n</div>", ["Created image assets and helped code and develop gameplay", "core functionality", "I coded much of the combat system and assisted with other design elements.", ""]], ["Make The News Less Boring", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Make The News Less Boring \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/245/207/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>XKCD has a comic that suggests making certain word substitutions while reading articles can make them more interesting.</p>\n<p><a href=\"https://xkcd.com/1288/\" rel=\"nofollow\">https://xkcd.com/1288/</a></p>\n<h2>How it works</h2>\n<p>The user enters a URL into the text box and clicks the submit button. A frame appears below the form that displays the page as if the user navigated there through the browser with certain words substituted in the article for others.</p>\n<h2>Challenges I ran into</h2>\n<p>XSS is an issue when loading a web page within another and attempting to manipulate the content of the inner page from the outer one.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I managed to work around the XSS issue by having the server request the page, replace relative links for absolute links (to ensure the page rendered properly in the iframe), and make the appropriate word substitutions in the page content before returning it to the client.</p>\n<h2>What I learned</h2>\n<p>How to work around XSS to get a page to appear in another and manipulate the content.</p>\n<h2>What's next for Make The News Less Boring</h2>\n<p>Show the user the most common words in the article and ask them to provide the substitutions. Replace words that are similar to the ones in the \"toReplace\" list (e.g. developer vs. developers).</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/asp-net\">asp.net</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/mdoleh/XKCDSubstitutions\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/mdoleh/XKCDSubstitutions\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["notification for snail mail delivery using raspberrypi", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>IoT for Snail-Mail in the 21st Century</p>\n<h2>How it works</h2>\n<p>Incorporates IoT and wifi through amazon web services for Snail mail deliveries</p>\n<h2>Challenges I ran into</h2>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Email delivery off of the raspberry-pi.</p>\n<h2>What I learned</h2>\n<p>Python, and Amazon-web-services incorporation</p>\n<h2>What's next for notification for snail mail delivery using raspberry-pi</h2>\n<p>Solar or battery powered integration</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag\">ssmtp</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n</div>", ["I worked on the Amazon-Web-Services integration for web notifications off of a webpage, and for email delivery.", "", ""]]]