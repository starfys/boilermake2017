[["TRAPP3D", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Escape the Room games were our inspiration.</p>\n<h2>What it does</h2>\n<p>You play in a 3D interactive environment wherein you must use what you find in the elevator to help aid you in your escape.</p>\n<h2>How we built it</h2>\n<p>We used Blender, Unity, Photoshop, Illustrator, and Unity's C# Visual Studio.</p>\n<h2>Challenges we ran into</h2>\n<p>Quaternions.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Visually appealing environment.</p>\n<h2>What we learned</h2>\n<p>How to use Unity, Blender, and how to code for Myo integration.</p>\n<h2>What's next for TRAPP3D</h2>\n<p>We hope to one day escape the elevator.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/oculus\">oculus</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/myo\">myo</a></span></li></ul>\n</div>\n</div>", ["I coded everything.", "I came up with the idea and most of the concept work.", "I was responsible for the textures and graphics", "3-Dimensional Design and Rendering"]], ["MemeBot", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"MemeBot \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/378/200/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"MemeBot \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/378/201/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>MemeBot</h1>\n<p>A bot for sending memes on request to users in different messaging apps. Created at Revolution UC 2016.</p>\n<h2>What does it do?</h2>\n<p>The bot is built in django, and uses python to access reddit, find memes, and reply to requests with memes.</p>\n<h2>Installation</h2>\n<p>Using your favorite linux hosting service, make sure the dependencies below are installed.\nYour bot will recieve requests on a url of style </p>\n<pre class=\"language-nolang\"><code>\"[Your domain name].com:[Open port]/GroupMe/\"\n</code></pre>\n<p>Clone this repository into a directory of your choosing.</p>\n<pre class=\"language-nolang\"><code>$git clone https://github.com/lewisku/MemeBot.git\n</code></pre>\n<p>Go to <a href=\"http://dev.groupme.com\" rel=\"nofollow\">http://dev.groupme.com</a> and login using your groupme username.\nPick a group, name your bot, and provide a callback url to the url you specified above.\nYou can provide an image if you so choose.</p>\n<p>On <a href=\"https://dev.groupme.com/bots\" rel=\"nofollow\">https://dev.groupme.com/bots</a> you'll be able to see the bots you have created.\nAdd a new line to Bots/GroupMeBots.txt with the Bot's Group ID and Bot ID, formatted as:</p>\n<pre class=\"language-nolang\"><code>[GroupID], [Bot ID]\n</code></pre>\n<p>Start your server on a port you specified earlier:</p>\n<pre class=\"language-nolang\"><code>$python Bots/manage.py runserver 0.0.0.0:[PORT]\n</code></pre>\n<p>Your server will now interpret messages for every bot you specified in Bots/GroupMeBots.txt.</p>\n<p>Great work!</p>\n<h2>Current dependencies</h2>\n<h3>Python</h3>\n<h4>Main Bot</h4>\n<ul>\n<li>Requests</li>\n<li>jsonpickle</li>\n<li>django</li>\n<li>praw</li>\n<li>beautifulsoup4</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/django\">django</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/lewisku/MemeBot\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/lewisku/MemeBot\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I created the script to search Reddit for memes, and download the images from Imgur.", "I created a function to take input from the MemeBot and communicate with the database and the meme source to return the most relevant meme", "I worked on the database.py file that helped to maintain a bank of meme objects stored as a json file. This bank was responsible for storing and organizing the memes and which ones to return.", ""]], ["Vid Quiz", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Vid Quiz \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/378/228/datas/gallery.jpg\"/>\n<p>\n<i>Add new captions within the viewer</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Vid Quiz \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/378/229/datas/gallery.jpg\"/>\n<p>\n<i>More cool stuff!</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Vid Quiz \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/378/230/datas/gallery.jpg\"/>\n<p>\n<i>Watch the video while editing!</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Vid Quiz \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/378/231/datas/gallery.jpg\"/>\n<p>\n<i>Drop a video in to quizzify it.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Vid Quiz \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/378/280/datas/gallery.jpg\"/>\n<p>\n<i>initial iOS setup</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Vid Quiz \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/378/281/datas/gallery.jpg\"/>\n<p>\n<i>initial iOS setup profile</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Often in high school, (and earlier) we watch a lot of educational videos. This is fun- except for the video guides. To make sure students are paying attention, teachers give out big packets of questions while playing videos. I thought that there must be a better, more fun, and quicker way to make sure students are paying attention, and the LISNR API helped me do this! Now anyone can embed quizzes in their app which can be received using the mobile reliever app.</p>\n<h2>What it does</h2>\n<p>The mac application is fully implemented. It opens a video and provides a gui for adding questions to it. It then sends these questions up to the LISNR API and retrieves .wav files which it embeds into the video that will transmit the questions. Finally, the app is capable of playing the final edited video.\nThe iOS app is not fully implemented. It CAN listen for sounds through the lisnr API, and is recognizing these sounds, but it just doesn't have a GUI yet. This should only take an hour or so to implement. </p>\n<h2>How I built it</h2>\n<p>I used the LISNR API and various iOS API's for video editing. I planned to use the firebase realtime API to connect the question responses back to the teacher and I will finish this functionality later!</p>\n<h2>Challenges I ran into</h2>\n<p>Integrating with the LISNR RESTful API was tough</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>This is my first mac app! </p>\n<h2>What I learned</h2>\n<ul>\n<li>AVFoundation</li>\n<li>Lisnr</li>\n<li>HTTP/JSON</li>\n</ul>\n<h2>What's next for Vid Quiz</h2>\n<ul>\n<li>I plan on finishing the iOS App (making a GUI)</li>\n<li>I plan on adding functionality for forms</li>\n<li>I plan on making a teacher portal\nI plan on finishing the iOS App and adding many cooler features!</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/lisnr\">lisnr</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ios\">ios</a></span></li><li><span class=\"cp-tag\">osx</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/avfoundation\">avfoundation</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/sahil-a/vidquizcreator.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/sahil-a/vidquizcreator.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Face Recognition and Security System", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<h2>What it does</h2>\n<h2>How I built it</h2>\n<h2>Challenges I ran into</h2>\n<h2>Accomplishments that I'm proud of</h2>\n<h1>Revolution UC 2016</h1>\n<p>This application captures the image of a person at the doorstep and recognizes if the person is known or unknown. Sends a message and image URL to all the family members if the person at the doorstep is unknown. </p>\n<h2>Technologies and languages</h2>\n<ol>\n<li><p>IBM Bluemix</p></li>\n<li><p>Python</p></li>\n</ol>\n<p>3.JavaScript</p>\n<ol>\n<li>Kairos Face Recognition API</li>\n</ol>\n<p>5.EC2</p>\n<h2>Authors</h2>\n<p>Vamshi Krishna Angajala</p>\n<p>Sayali Pendharkar</p>\n<p>Suprabha Hegde</p>\n<p>Laxmi Janakiraman</p>\n<h2>What I learned</h2>\n<h2>What's next for Face Recognition and Security System</h2>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://hub.jazz.net/project/sayalimp912/RevolutionUCHackathon2016/overview\" rel=\"nofollow\" target=\"_blank\" title=\"https://hub.jazz.net/project/sayalimp912/RevolutionUCHackathon2016/overview\">\n<i class=\"ss-icon ss-link\"></i>\n<span>hub.jazz.net</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["schwift", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"schwift \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/378/172/datas/gallery.jpg\"/>\n<p>\n<i>Intro to Schwift</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"schwift \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/378/169/datas/gallery.jpg\"/>\n<p>\n<i>Get Schwifty</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"schwift \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/378/173/datas/gallery.jpg\"/>\n<p>\n<i>Features</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"schwift \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/378/171/datas/gallery.jpg\"/>\n<p>\n<i>Hello World</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"schwift \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/378/174/datas/gallery.jpg\"/>\n<p>\n<i>Variables</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"schwift \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/378/212/datas/gallery.jpg\"/>\n<p>\n<i>Arithmetic</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"schwift \u2013 screenshot 7\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/378/170/datas/gallery.jpg\"/>\n<p>\n<i>More Variables</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"schwift \u2013 screenshot 8\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/378/211/datas/gallery.jpg\"/>\n<p>\n<i>Deletion</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"schwift \u2013 screenshot 9\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/378/175/datas/gallery.jpg\"/>\n<p>\n<i>Boolean</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"schwift \u2013 screenshot 10\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/378/176/datas/gallery.jpg\"/>\n<p>\n<i>Equality</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"schwift \u2013 screenshot 11\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/378/177/datas/gallery.jpg\"/>\n<p>\n<i>Loops</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"schwift \u2013 screenshot 12\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/378/178/datas/gallery.jpg\"/>\n<p>\n<i>Lists</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>The television series Rick and Morty: <a href=\"http://www.adultswim.com/videos/rick-and-morty/\" rel=\"nofollow\">http://www.adultswim.com/videos/rick-and-morty/</a>\nVarious Joke languages such as BrainF**k and Intercal</p>\n<h2>What it does</h2>\n<p>It operates as a simple language with built in support for dynamic typed variables, conditionals, loops, if statements, etc...</p>\n<h2>How we built it</h2>\n<p>Schwifty's interpreter is written in the Rust programming language: <a href=\"https://www.rust-lang.org/\" rel=\"nofollow\">https://www.rust-lang.org/</a>\nThe code base is made up of over 5400 lines of code.</p>\n<h2>Challenges we ran into</h2>\n<p>Figuring out how to write a programming language. A compiled language would've proved to be too difficult in the short amount of time.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>The Schwift programming language is turring complete and can actually be used to solve any programming problem, even with its basic rule set.</p>\n<h2>What we learned</h2>\n<p>Writing a programming language is incredibly difficult and challenging, but rewarding.\nWe also learned that the best way to learn a language is to NOT  attempt to write another language with it.</p>\n<h2>What's next for schwift</h2>\n<p>We would love to add functions, constant variables, and comments.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">rust</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/natemara/schwift\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/natemara/schwift\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Mental Music", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Mental Music started as a few of programmers looking to work on a cool project with awesome technology. We gained access to the Muse EEG and made the most interesting thing we could think of.</p>\n<h2>What it does</h2>\n<p>The premise of Mental Music is simple. It uses the EEG of the Muse to read the brainwaves of the user. It then takes those brain waves and converts them to sound waves. This allows the user to produce unique sounds using only their mind. </p>\n<h2>Challenges we ran into</h2>\n<p>The Mental Music team ran into several challenges when developing our application. Our primary challenges came from working with apis with little documentation and out of date examples while maintaining a good connection with our hardware.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>The Mental Music team is proud of our solution to converting the EEG output to sound data.</p>\n<h2>What we learned</h2>\n<p>Through this project we learned much about how sound data is utilized in Java. We also learned some UML diagrams useful for planning development.</p>\n<h2>What's next for Mental Music</h2>\n<p>In the future we\u2019re going to continue doing cool stuff. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag\">java-osc</span></li><li><span class=\"cp-tag\">java-oscp5</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Migsect/MentalMusic\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Migsect/MentalMusic\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Mostly worked on planning, debugging, and generally doing whatever necessary to eliminate any roadblocks we encountered as soon as possible.", "I created a simple gui, did research, and helped with playback/spreading of notes over brainwaves.", ""]], ["PlayUC", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"PlayUC \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/378/266/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"PlayUC \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/378/267/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"PlayUC \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/378/268/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"PlayUC \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/378/269/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>Punniest Domain : krackdhackviaslack.com</p>\n<h2>Inspiration - Being victims of not finding networking with people of similar interests as mine easily, we were inspired to provide people with a platform where you can find others with same interests as you, from your college, and gather up for having a good time doing what you love.</h2>\n<h2>What it does - Gives you the simplest way possible to group up with people, whenever and wherever you want to do things which you actually love to spend time on.</h2>\n<h2>How we built it - We used Xamarin studio to build the mobile app, Xamarin is a cross platform SDK, C# is used in Xamarin. For the database we used Parse REST API (Parse uses MongoDB)where we could access our resources(database) using URI endpoints over HTTP using CRUD operations.</h2>\n<h2>Challenges we ran into - Given the duration of the competition we decided to use  MongoLabs REST API for the database which we are quite comfortable with, but we run into a SSL error because we send the data to the API directly through our app and MongoLabs required us to have valid SSL certificate for each request over HTTPS, we tried to bypass the validation using some existing methods but we could not successfully connect to the server. So we had to switch to Parse which was completely new to us, here too we ran into some de-serialization issues but we overcame it and managed to finally connect our App to the Parse Web service.</h2>\n<h2>Accomplishments that we're proud of: We are proud about the whole idea of the App because finding people with similar interests is not very easy especially when you are new to the City. We also put in a lot of effort into the UI and it came out very fluid.</h2>\n<h2>What we learned: We learned that a lot of things dont go according to the plan and we have to be patient to</h2>\n<h2>What's next for PlayUC: Better UI, chats, groups and expansion.</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xamarin\">xamarin</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xml\">xml</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/parse\">parse</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag\">xamarin-studio</span></li><li><span class=\"cp-tag\">rest-api</span></li><li><span class=\"cp-tag\">postman</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li></ul>\n</div>\n</div>", ["I worked on a bit of mobile development and mostly on back end where we used the parse rest API to store data related to our app.", ""]], ["CoopKoala", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"CoopKoala \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/378/220/datas/gallery.jpg\"/>\n<p>\n<i>Landing</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"CoopKoala \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/378/221/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"CoopKoala \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/378/222/datas/gallery.jpg\"/>\n<p>\n<i>Choose Majors</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"CoopKoala \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/378/223/datas/gallery.jpg\"/>\n<p>\n<i>Day in the life - part 1</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"CoopKoala \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/378/224/datas/gallery.jpg\"/>\n<p>\n<i>Day in the life - part 2</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"CoopKoala \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/378/225/datas/gallery.jpg\"/>\n<p>\n<i>Day in the life - part 3</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Use the concept of timelines by Facebook to extend it to explain a day in the life of a co-op/intern.</p>\n<h2>What it does</h2>\n<p>Shows the timeline of a daily life of a co-op/intern. Current co-ops can enter their daily life through an online form and then other students can see it to know more about that coop and company.</p>\n<h2>How I built it</h2>\n<p>Built using HTML, CSS and Javascript with the help of a bunch of frameworks.</p>\n<h2>Challenges I ran into</h2>\n<p>Making the timeline.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>To accomplish something.</p>\n<h2>What I learned</h2>\n<p>More web dev concepts. Team planning. </p>\n<h2>What's next for CoopKoala</h2>\n<p>Make it more campus specific and enable employers/current coops to register and enter their timeline.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag\">material-design</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag\">animate.css</span></li><li><span class=\"cp-tag\">modernizr</span></li><li><span class=\"cp-tag\">smoothscroll.js</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-maps\">google-maps</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Rishabhravindra/Coop-Koala\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Rishabhravindra/Coop-Koala\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Spearheaded the development process to create a seamless UI experience.\nChose frameworks like Bootstrap and getmdl to rapidly prototype the web app. Involved in the planning process before development.  ", "Designed the timeline and worked with Rishabh to build the UI elements. Created the content and introduced functionality to Bootstrap components. ", "Made many large contributions to the project scope, and drafted ideas via white board. Collaborated with Anaya to create the logo, and worked with Rishabh to create the look and feel of the website. Gathered real life client information from Linkedin software engineers to use as career timeline examples.", ""]], ["safetyApp", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>\n</p>\n<h1>Revolution UC 2016</h1>\n<p>This application captures the image of a person at the door step and recognizes if the person is known or unknown. If the person is known the system triggers a Voice Recognition to perform the further tasks. </p>\n<p>capture.html and script2.js capture the image. enroll.html checks if the image matches with any of the images of the family members.It uses a Kairos API. script.js takes you to the voice recognition page to perform the further tasks.</p>\n<h2>Technologies and languages</h2>\n<ol>\n<li>Python</li>\n</ol>\n<p>2.JavaScript</p>\n<ol>\n<li>Kairos Face Recognition API</li>\n</ol>\n<p>2.EC2</p>\n<h2>Authors</h2>\n<p>Vamshi Krishna Angajala</p>\n<p>Sayali Pendharkar</p>\n<p>Suprabha Hegde</p>\n<p>Laxmi Janakiraman</p>\n<p>\n</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/vamsikrishna0/safetyApp\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/vamsikrishna0/safetyApp\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["PoliTweets", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"PoliTweets \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/378/241/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"PoliTweets \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/378/242/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"PoliTweets \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/378/243/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"PoliTweets \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/378/244/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"PoliTweets \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/378/245/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"PoliTweets \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/378/251/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to create a large scale visualization system for the torrent of political tweets that are flowing down the central stream of human information. Analyzing this data provides a well rounded picture of the current geopolitical landscape within the United States down to the second.</p>\n<h2>What it does</h2>\n<p>PoliTweets scans the Twitter Stream for any tweet mentioning the five current candidates for the US Presidency: Bernie Sanders, Donald Trump, Hillary Clinton, Ted Cruz, and John Katich. A C# application pulls a 1% random sample of all POTUS-hopefuls' Twitter mentions. Data is summed on a per second basis to get an idea of the current political tides by state. This is then displayed on a color-map of the United States which can be viewed on the web or the iOS app. Historical data can be browsed as well to compare changes in the political climate over time. Both the web and mobile app access this data via an API exposed by PHP.</p>\n<h2>How we built it</h2>\n<p>We built this application on Amazon Web Services so that it could remain accessible long term and available to continue to track geopolitical data as we approach the elections. The iOS app leverages the javascript representation of the data that is represented in a web browser, and presents it in an easy to use, and modern interface.</p>\n<h2>Challenges we ran into</h2>\n<ul>\n<li>Managing the large volume of data from the Twitter Stream</li>\n<li>Tackling iOS as a new platform for the group</li>\n<li>Stringing together different languages to form a cohesive user experience</li>\n<li>Porting C# to run in an AWS mono environment</li>\n</ul>\n<h2>Accomplishments that we're proud of</h2>\n<ul>\n<li>Clean, intuitive user interface in the iOS app</li>\n<li>Mirroring the user interface on both the web, and the iOS app</li>\n<li>Packaging the application so that it can run fully self sufficient on an AWS instance </li>\n</ul>\n<h2>What we learned</h2>\n<ul>\n<li>We learned how to use the bed language for each task and build APIs to communicate between them</li>\n<li>High level large scale data visualization for a consumer</li>\n<li>iOS integration with Big Data</li>\n</ul>\n<h2>What's next for PoliTweets</h2>\n<ul>\n<li>Continue to refine iOS app and release on App Store</li>\n<li>Develop a parallel Android app</li>\n<li>Track further data points for Presidential candidates</li>\n</ul>\n<h2>Domain Submission</h2>\n<p>Actual Domain: politweets.com (still waiting on DNS)\nOur Punny Alias: hocusPOTUS.net</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-ec2\">amazon-ec2</a></span></li><li><span class=\"cp-tag\">domains.com</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twitter\">twitter</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mysql\">mysql</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/iphone-sdk\">iphone-sdk</a></span></li><li><span class=\"cp-tag\">mobile-app</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ios\">ios</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/ajajack/politweet-ios\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ajajack/politweet-ios\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/ajajack/politweet-pusher\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ajajack/politweet-pusher\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/ajajack/politweet-webapp\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ajajack/politweet-webapp\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I developed the iOS app that visualizes the Twitter candidate data on the mobile platform.", "I worked on the C# back end that retrieves the data from twitter, parses it into a readable format, and adds it to a database. ", "", ""]], ["DataFun", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>We made a cool tool and it's 1 minute till 4PM...</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li></ul>\n</div>\n</div>", [""]], ["AirVideo - Wireless HD Video Streaming Player", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"AirVideo - Wireless HD Video Streaming Player \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/378/227/datas/gallery.jpg\"/>\n<p>\n<i>Video Player View</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"AirVideo - Wireless HD Video Streaming Player \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/378/226/datas/gallery.jpg\"/>\n<p>\n<i>Edison and SD Card with Rechargeable Batter</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"AirVideo - Wireless HD Video Streaming Player \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/378/235/datas/gallery.jpg\"/>\n<p>\n<i>Pebble Media Player Controller</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"AirVideo - Wireless HD Video Streaming Player \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/378/236/datas/gallery.jpg\"/>\n<p>\n<i>Gear VR Web App</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Our incredible Galaxy S6 has no expandable memory and we are stuck with 16 GB mostly filled with app data and pictures. When we are travelling or even at home, we do not want to carry around a Blue Ray Player to everywhere we go. And Netflix doesn't even have the TV shows and movies we like and it also requires massive amount of Internet Data, which thanks to our service providers are limited to 2GB a month (which is fraction of a size of a movie). So we wanted to create something portable and not waste our cellular data.</p>\n<h2>What it does</h2>\n<p>AIRVIDEO is a device where we can plug in SD Card containing our favorite TV shows and movies and we are able to connect to the device via WIFI. That simple. </p>\n<h2>How we built it</h2>\n<p>We combined an Intel Edison with a SparkFun SD Card Block and Rechargable </p>\n<h2>Challenges we ran into</h2>\n<p>Setting up and making it work with Gear VR with various platforms</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We have a working prototype that is able to connect to the WiFi of the device and play video files wirelessly from the SD Card in our phone, laptops and Gear VR. </p>\n<h2>What's next for AirVideo - Wireless HD Video Streaming Player</h2>\n<p>Refine it and encrypt the video files to prevent piracy and pitch it to movie studios.</p>\n<p>PUNNIEST DOMAIN NAME: pickingappleswithandroid.com </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/intel-edison\">intel-edison</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/apache\">apache</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/samsung-gear\">samsung-gear</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/pebble\">pebble</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/linux\">linux</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag\">c-sharp</span></li></ul>\n</div>\n</div>", ["I learned a lot about how not to make video play on mobile devices in virtual reality and how to make it work in fragments in Java (Android Apps.) Most challenging hackathon yet!", ""]], ["Network Inshelligence", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We were originally going to build a robot \"dog\", but after several hours, we were unable to get our servo motor to behave properly, and elected to change gears. We then discussed our strengths and looked at our available resources, and came up with the idea to create a remote network mapping tool which, throughout the course of development, evolved into the Cloud computing system it currently is, as we realized that there were many more applications for it than we currently realized.</p>\n<h2>What it does</h2>\n<p>The system is essentially a small scale cloud managed by a Command and Control (C&amp;C) server which divides tasks among its node computers (in this case, two Raspberry Pi 2s), which then perform the requested tasks and return the results to the C&amp;C server. We used it to map their local networks and return the findings to the C&amp;C server. Additionally, the nodes can be dropped anywhere, on any internet-connected network, and connect to the C&amp;C server.</p>\n<h2>How I built it</h2>\n<p>The Inshelligence system is consists of CentOS C&amp;C server running locally on a laptop, and x number of cloud nodes, in this case two of them. The cloud nodes are Raspberry Pi 2 Model Bs, running Raspbian, although any Linux computers could be used. The C&amp;C server has a queue of Shell scripts which get loaded to the next available Pi node (over HTTP and SSH), where the commands are run and results are returned to the C&amp;C server as .txt files. Once our setup.sh script has been run on a Linux computer, it becomes a node, and no further software need be installed. (With our network mapping use, the Pis also need the nmap program, but this -or other programs- can be quickly installed on the requisite Pis with scripts pushed to all the Pis simultaneously by the C&amp;C server.)</p>\n<h2>Challenges I ran into</h2>\n<p>We ended up running the C&amp;C server locally instead of in the cloud on AWS, as we encountered lots of difficulty with the AWS platform and couldn't get it working in a reasonable about of time. We registered the domain inshelligence.net with the intent of creating a web GUI for the system.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Our C&amp;C server architecture was built completely without 3rd party APIs, entirely from scratch out of shell scripts.</p>\n<h2>What I learned</h2>\n<p>We learned Linux shell scripting (including writing shell scripts that write shell scripts), how to set up and configure Raspberry Pis and how to set up Apache web servers.</p>\n<h2>What's next for Network Inshelligence</h2>\n<p>We'd like to host the C&amp;C server in the Cloud, and create a easy-to-use web GUI to operate the system from. We also want to improve the security of the system by adding encryption between the C&amp;C server and nodes. And in it's current state, the system gets confused if the nodes are on a different networks so we'd like to modify the server can know the different locations of the nodes and make sure any network-specific task are completed properly.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/shell\">shell</a></span></li><li><span class=\"cp-tag\">ssh</span></li><li><span class=\"cp-tag\">http</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://github.com/Tnerb76/network_inshelligence\" rel=\"nofollow\" target=\"_blank\" title=\"http://github.com/Tnerb76/network_inshelligence\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Hear Your Home", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Lisnr gave us a way for devices to converse over sound. We as team wanted to take simple communication through audio and use it to make a smart home. We all have a large number of devices at home, and our home networks weren't designed for such a heavy load. </p>\n<h2>What it does</h2>\n<p>By enabling devices to communicate through sound we have made an IoT connection for your home that has a single wifi connection. This enables you to be more aware of your house without having a ton of devices flooding your wifi router with data back and forth. We set up a Raspberry Pi Zero that can be used for any device, not just smart devices, that will play its signal that will be repeated by a repeater(another Raspberry Pi Zero) to the base. We currently have the base on an android phone, but look to try to migrate to yet another Raspberry Pi Zero in the future.  This base will push the notification to a server, which pushes to your mobile phone. By using an external server we let you know if somebody stopped by the house while you were gone, or if the kids are running the laundry like you told them to. Creating a connected and smarter house that has a smaller network impact. </p>\n<h2>How we built it</h2>\n<p>Currently we are using a Raspberry Pi 2 with a speaker and a doorbell simulator. When someone rings the doorbell, the Pi plays the lisnr tone which is picked up by the base. The base pushes the lisnr ID to a linux server that serves the notification to your phone, wherever you are in the world. </p>\n<h2>Challenges we ran into</h2>\n<p>We had a lot of trouble with sound processing. Our initial goal was to build an arduino to pick up a simulated buzzer for laundry. Then demonstrate what a repeater would look like by having another arduino. Unfortunately we didn't have the materials needed for an arduino to properly process a signal. We tried to make it happen for a good 5-6 hours. Till we finally gave up. Jacob has spent all 24 hours learning android and lisnr to build the base. He finally got the whole thing together about 30 minutes before it was due. Lisnr uses a sound that is apparently harder to process, it took three different programs till we finally found a way to get the sound played properly for the base to recognize it. </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We are proud to develop Hear Your Home. As we continue to add devices to our lives that are internet connected; solutions like ours will enable devices to be IoT without bothering you as you work on your online homework, as you work from home, or as you sit down to enjoy a movie on Netflix. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/lisnr\">lisnr</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/SpeedACMHack/HearYourHome-Hub\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/SpeedACMHack/HearYourHome-Hub\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["UC VR", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>I feel in love with Virtual Reality at my first hackathon two years ago.  Then, when I discovered A-Frames and WebVR this past December, I knew I wanted to build a VR website for the Hackathon.</p>\n<h2>What it does</h2>\n<p>UC VR is a virtual reality supported version of the University of Cincinnati's homepage.</p>\n<h2>How I built it</h2>\n<p>I built it primarily using <a href=\"https://aframe.io/\" rel=\"nofollow\">Mozilla A-Frames</a>.</p>\n<h2>Challenges I ran into</h2>\n<p>I actually only had a little over 3 hours to do this project.  This was because my previous project, Burrito Ordering Burrito fell through. Also, my headset would not allow me to show my own VR content, so I had to trick it into thinking it wasn't in a headset.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>This is only my second time making a webpage with a-frames and I'm impressed with how well it came out.</p>\n<h2>What I learned</h2>\n<p>I learned about readability in VR, optimal distances of images and other objects, and equirectangular images which are required for the spherical background of the site.</p>\n<h2>What's next for UC VR</h2>\n<p>I want to learn JavaScript in order to make the website interactive and to be able to link to other (possibly VR) webpages.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">a-frame</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://www.ucvr.tech\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.ucvr.tech\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.ucvr.tech</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["currencyPredict", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration It was an idea that Adam has had for a while and wanted to flesh out</h2>\n<h2>What it does shows historical prices of certain currencies</h2>\n<h2>How we built it we used python html and javascript to interpret and show the data and used the carry trade algorithm</h2>\n<h2>Challenges we ran into api limitations</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/zzz711/currencyPredict\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/zzz711/currencyPredict\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"http://ec2-54-173-146-91.compute-1.amazonaws.com\" rel=\"nofollow\" target=\"_blank\" title=\"http://ec2-54-173-146-91.compute-1.amazonaws.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>ec2-54-173-146-91.compute-1.amazonaws.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Crime Busters", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Crime Busters \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/378/155/datas/gallery.jpg\"/>\n<p>\n<i>CB</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>With access to machine learning and advanced analytics becoming widespread, it is time to put a dent in violent crime aroubd the university campus</p>\n<h2>What it does</h2>\n<h2>How I built it</h2>\n<p>Built the machine learning algorithms,did data analysis , and build the website using MEAN stack</p>\n<h2>Challenges I ran into</h2>\n<p>Doing data Analysis</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Data cleaning, algorithm tweeking,</p>\n<h2>What I learned</h2>\n<p>finishing everything by myself</p>\n<h2>What's next for Crime Busters</h2>\n<p>integrating this to UC </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag\">angualr</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mean\">mean</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/tableau\">tableau</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/machine-learning\">machine-learning</a></span></li></ul>\n</div>\n</div>", ["I build the entire application from start to finish in MEAN stack", ""]], ["LOLBAT", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>I wanted to create a program that ties together cybersecurity, fun, programming, and networking.</p>\n<h2>What it does</h2>\n<p>It's a dangerous challenge for your computer, and must be executed with caution. It's a program that auto-replicates until the user stops the timer. Whichever computer can survive the longest wins. When the user stops the timer, the user sends a screen shot to the lolbat email. It's like a game of chicken - who will back off first? Who is going to risk gigbytes of gibberish being written in a directory, which could crash their OS, to be the Lolbat champion?! And the website is sweet.</p>\n<p><strong><a href=\"http://www.lolb.at\" rel=\"nofollow\">www.lolb.at</a></strong></p>\n<p>\"\"\"I don't expect you guys to test this out for yourselves, I have a test env made. The files that are being replicated are harmless. The only risk is a system crash because of the amount of random data being written\"\"\"</p>\n<h2>How I built it</h2>\n<p>I used Python, then turned it to an .exe. I put the file on an aws server</p>\n<h2>Challenges I ran into</h2>\n<p>I had a difficult time working with aws (very complex) and I had trouble creating the replication program</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I proud of the website that I made. I really like designing websites and this is my best one yet.</p>\n<h2>What I learned</h2>\n<p>I learned how to use aws, register a domain, and learned how to create a .py to an .exe.</p>\n<h2>What's next for LolBat</h2>\n<p>Who knows? Maybe a GUI in the future? A feature that automatically emails the lolbat email?</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php5\">php5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://www.lolb.at\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.lolb.at\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.lolb.at</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["TAStalker", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"TAStalker \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/378/101/datas/gallery.jpg\"/>\n<p>\n<i>Portal for students to view if their TA is in their office!</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"TAStalker \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/378/143/datas/gallery.jpg\"/>\n<p>\n<i>Bluemix flow chart</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<h2>What it does</h2>\n<p>The entire point is to link the professor and teaching assistant's mobile devices to IBM Bluelink's node red to track geolocation. Once the location is tracked it will be compared to the location coordinates of the professor's office and if the coordinates of the mobile device are within a reasonable coordinate range within the coordinates of the professor's office a message will be sent to a website that will say the professor or his teaching assistants are in his office. It would be helpful for the students to know exactly when their professors are in their offices and do not have to take time to send emails back and forth to find out. </p>\n<h2>How I built it</h2>\n<p>We used node red capabilities to track the coordinate locations of one of our group member's mobile devices and then if the coordinates were in between a certain distance it would say that the teaching assistant or professor was in the office or not. We also built a webpage that we would try to send the message to so many people could see it for practical use. </p>\n<h2>Challenges I ran into</h2>\n<p>Bluemix is somewhat experimental right now and there were some problems figuring out how to use it. Once most of the bugs are fixed it should be a fantastic program to use, but it has some slow load times on the servers and there was a point where our node red project was corrupted and our group had to start over. </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We start off as 4 total strangers, and we managed to put together a project from scratch to a living service. It's far from perfect, but giving the complexity and different level of knowledge involved, we are proud to say \"we learn, we hack we ship and we grow\"</p>\n<h2>What I learned</h2>\n<p>We had some very extensive exposure with IBM IoT platform over the last 24 hours. We played around with a couple of communicating protocols and different ways for accomplishing the same thing.</p>\n<h2>What's next for TaStalker</h2>\n<p>Our outlook would be first to optimize this service for energy consumption. Then we want to try to wrap it up as a stand alone, portable, accessible package, and hoping other TAs/Professors  would adopt our solution.\nEventually we want to establish our service as a add-on service that could be integrated to systems like outlook or Canopy(Blackboard)</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bluemix\">bluemix</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag\">mqtt</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mysql\">mysql</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/laravel\">laravel</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li></ul>\n</div>\n</div>", ["I came up with the general idea and structure of TA's Here. Being  a TA myself, I like to help students and received hundreds of emails from students over my years in graduate school. TA's Here is a little side project I had always wanted to release my information to students in care.\nAside from the architecture, I also managed to setup the environment with ibm bluemix , division of labor and workflow. ", "I learned a ton about the BlueMix programming and the capabilities of Watson. It is definitely a large learning curve. I also contributed to connecting other devices to the network.", "I setup the web server and built the website.", ""]], ["twitter-bot", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Originally meant to generate text based off books.</p>\n<h2>What it does</h2>\n<p>generates \"grammatically correct\" sentences based of tweets of following on twitter</p>\n<h2>How I built it</h2>\n<p>wrote a lot of code</p>\n<h2>Challenges I ran into</h2>\n<p>twitter api and the limits on calls</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>getting the generated text to come out \"grammatically correct\"</p>\n<h2>What I learned</h2>\n<p>learned that tweets should not be treated as normal English for natural language processing</p>\n<h2>What's next for twitter-bot</h2>\n<p>collect qualitative data on trending topics</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twitter\">twitter</a></span></li></ul>\n</div>\n</div>", [""]], ["Smart Baby Monitor", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Absence of smart baby monitor connected via internet.  A baby monitor like this will allow the parents to keep a closer eye on their child.</p>\n<h2>What it does</h2>\n<p>Monitors the baby and notifies the parents if the baby has woken up</p>\n<h2>How I built it</h2>\n<p>Watson IoT, Bluemix Image recognition</p>\n<h2>Challenges I ran into</h2>\n<p>Understanding concepts and finding required documentation</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We made it do something and learned.</p>\n<h2>What I learned</h2>\n<p>IoT applications, node.js, node-RED</p>\n<h2>What's next for Smart Baby Monitor</h2>\n<p>The first things to add would be enriching the classifier and then adding more features, such as support for sound and room temperature monitoring.  Add data analytics into the application.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ibm-watson\">ibm-watson</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bluemix\">bluemix</a></span></li><li><span class=\"cp-tag\">iot</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://hub.jazz.net/project/chateracks/hackAppAlpha/overview\" rel=\"nofollow\" target=\"_blank\" title=\"https://hub.jazz.net/project/chateracks/hackAppAlpha/overview\">\n<i class=\"ss-icon ss-link\"></i>\n<span>hub.jazz.net</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Much Website", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Much Website \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/343/datas/gallery.jpg\"/>\n<p>\n<i>Doge</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2><a href=\"http://www.muchwebsite.com\" rel=\"nofollow\">Much Website</a></h2>\n<p>Very Internet.\nSo domain.\nSuch wow.</p>\n<p><a href=\"http://www.muchwebsite.com\" rel=\"nofollow\">www.muchwebsite.com</a></p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://www.muchwebsite.com\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.muchwebsite.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.muchwebsite.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]]]