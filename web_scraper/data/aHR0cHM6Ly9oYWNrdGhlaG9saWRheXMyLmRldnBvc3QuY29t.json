[["eCracker", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>What it does</h2>\n<p>The app allows two users to pull a christmas cracker, and the phone with the greatest acceleration wins.\nA joke from /r/Jokes or /r/programmerhumor is also displayed to the user after pulling the cracker.</p>\n<h2>How we built it</h2>\n<p>The server is a Node.js application using Express and SocketIO. MongoDB is used for the database, providing user -and match data storage, with Mongoose providing a model layer between the code and DB.\nVue.js allowing us to operate a single page web app with real updating features, using Webpack, vue-loader and many other modules to combine all of the Vue components into a single file. The client also uses the HTML5 acceleration API to measure data from the accelerometer.\nThe server runs on AWS Lightsail, with pm2 for managing the node application, mongoDB running in the same VM, and Apache as a reverse proxy.</p>\n<h2>Challenges we ran into</h2>\n<ul>\n<li>Getting Vue.js to work</li>\n<li>Logic flow for creating matches</li>\n</ul>\n<h2>What we learned</h2>\n<ul>\n<li>Vue.js 2.0 app structure</li>\n<li>HTML5 acceleration API</li>\n<li>Chrome network debugging is awesome for testing on a phone</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag\">vue</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/reddit\">reddit</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/socket-io\">socket.io</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/linux\">linux</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongoose\">mongoose</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://eCracker.net\" rel=\"nofollow\" target=\"_blank\" title=\"https://eCracker.net\">\n<i class=\"ss-icon ss-link\"></i>\n<span>eCracker.net</span>\n</a></li>\n<li><a href=\"https://github.com/terminal-velocity/Crackers\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/terminal-velocity/Crackers\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked mainly on the front end, as well as setting up the backend structure, and the build system with Vue for the front end.", "I worked on introducing real-time leaderboards, and creating a matchmaking system that would work efficiently with MongoDB server.", "I worked on the Node.js server and created the joke finding script."]], ["DevsConnect", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<h2>What it does</h2>\n<p>Developers can choose a location on the map, and create a dialogue box explaining their event. The event is then pin-pointed on a map with details including the exact location and any other information the developer deems necessary to include. These then update on the site for all to see.</p>\n<h2>How We built it</h2>\n<p>This was built using a number of things. We used JavaScript and jQuery to produce the scripts that take in the locations and allow the developers to upload their events. HTML and CSS was used to create the front end, with the help of bootstrap to keep it looking nice.</p>\n<h2>Challenges We ran into</h2>\n<p>We found that some of the things didn't work as we had initially expected, and we had to work out our own way around them. For example some of the scripts wouldn't upload the correct data to the dialogue boxes, and so we had to find out why this was happening, and fix it.</p>\n<h2>Accomplishments that We're proud of</h2>\n<p>We're proud of being able to work together well as a team to produce the product that we set out to make.</p>\n<h2>What We learned</h2>\n<p>Bootstrap was a new feature to all of us in the team, and we had to learn how to work with it to make the project look nice and do what we want it to do.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/esri\">esri</a></span></li><li><span class=\"cp-tag\">domain.com</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://devsconnect.com/\" rel=\"nofollow\" target=\"_blank\" title=\"http://devsconnect.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>devsconnect.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["What the Hack Am I Hearing?", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"What the Hack Am I Hearing? \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/456/876/datas/gallery.jpg\"/>\n<p>\n<i>The main part of the game</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"What the Hack Am I Hearing? \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/456/877/datas/gallery.jpg\"/>\n<p>\n<i>Can you guess the song?</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"What the Hack Am I Hearing? \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/456/879/datas/gallery.jpg\"/>\n<p>\n<i>Maybe not...</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"What the Hack Am I Hearing? \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/456/880/datas/gallery.jpg\"/>\n<p>\n<i>Welcome page</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>What the Hack Am I Hearing?</h1>\n<p>\"What the Hack Am I Hearing?\" is a small web-based game about guessing Christmas songs as quick as possible. One has 30 seconds to guess the name of each song played. The faster one guesses, the more points they get.</p>\n<h1>Development</h1>\n<p>This project has been made using HTML5, CSS3 and Javascript. jQuery was used for the front-end and Spotify Web API to grab the Christmas tracks. The design of the website was, of course, inspired by the Hack the Holidays 2 counterpart.</p>\n<h1>Challenges</h1>\n<p>The main challenge was learning on how to use Spotify's API, especially the process of grabbing the essential data and parsing it. Another difficulty I experienced was with jQuery, where some components refused to cooperate. However, I have managed to successfully overcome these issues, making this game playable.</p>\n<p><strong>NOTE</strong>: The game will not function without an access token, which is why you will not be able to play the version hosted on GitHub.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Artur96/wthaih\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Artur96/wthaih\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Who Tweeted It", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>What it does</h2>\n<p>You enter 2 twitter names and then you get a random tweet and you have to guess who it was that tweeted it</p>\n<h2>How we built it</h2>\n<p>Initially we wrote a functioning backend using ASP .NET core, however we ran into problems when trying to deploy to Azure. Hence we decided to rebuild it using Node.js and express which we deployed successfully to Heroku. Our frontend is a single page app powered by Vue.js </p>\n<h2>Challenges we ran into</h2>\n<p>Our attempts to deploy ASP .NET Core to a Microsoft Azure server failed which we were unable to fix.\nWe eventually figured out how to get Vue.js 2.0 to work, having had to upgrade from version 1.x.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We did sleep briefly this year, following our own advice from last year.</p>\n<p>Our MVP was ready more than a hour before the end of the hackathon.</p>\n<h2>What we learned</h2>\n<p>Microsoft breaks our stuff.\nHow to access REST APIs in C#</p>\n<h2>What's next for Who Tweeted It</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag\">vue</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://whotweeted-it.herokuapp.com/\" rel=\"nofollow\" target=\"_blank\" title=\"http://whotweeted-it.herokuapp.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>whotweeted-it.herokuapp.com</span>\n</a></li>\n<li><a href=\"https://github.com/EverlessDrop41/WhoTweetedIt\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/EverlessDrop41/WhoTweetedIt\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I started the backend and worked out the api authorization, aditionally I did the design/style", "I worked on parts of the Vue.js frontend as well as parts of the Node.js backend."]], ["GiftNinja", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"GiftNinja \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/456/968/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>It's a week before Christmas, and like all student's we haven't done our shopping and don't know what to get everyone. Instead of trawling across Amazon like the rest of our ilk, we decided to create a program to do it for us! secret santas can be hard, what if we buy our sister the wrong present, or even worse ... our mum!!!</p>\n<h2>What it does</h2>\n<p>the current basic version takes in tags which the user can choose 5 of for the person they are buying a present and the algorith returns 5 presents it thinks the person will enjoy.</p>\n<h2>How we built it</h2>\n<p>We created most of the logic in Python, running it all on a Django web server.</p>\n<h2>Challenges we ran into</h2>\n<p>Amazon web services didn't want to play nice with Django! After one of us spent most of Saturday and some of Sunday trying to make it work, we decided to give it a rest and present it locally!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/django\">django</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li></ul>\n</div>\n</div>", ["Synchronizing static files to django for js, and CSS. ", "honestly... I got it working :P Built the django server, delegated different functions and plugged it in, and wrote the recommendation engine including the recommendation algorithm.\nWorked with Python, Django, HTML, CSS and JS.", "", "", ""]], ["alexify", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>Alexify</h1>\n<h2>Soon to be a Spotify skill for alexa!</h2>\n<p>Just ask her how danceable a song is and she will reply with a percentage of danceability!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">spotipy</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/stanleyyork11/alexify\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/stanleyyork11/alexify\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Musical Floppies", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Musical Floppies \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/456/873/datas/gallery.jpg\"/>\n<p>\n<i>Our nearly finished model</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We wanted a Christmasy version of this: <a href=\"https://www.youtube.com/watch?v=cM_sAxrAu7Q\" rel=\"nofollow\">https://www.youtube.com/watch?v=cM_sAxrAu7Q</a></p>\n<h2>What it does</h2>\n<p>Plays music by pulsing the stepper motor driving the floppy driver read-write head at the specific frequency of the note we want to play.</p>\n<h2>How we built it</h2>\n<p>We power it using a hacked apart and soldered ATX power supply four pin power cable, and we are using an Arduino to pulse the motor control pins on the data connector of the floppy drive, and we flashed the Ardiuno with the music as part of the instructions.</p>\n<h2>Challenges we ran into</h2>\n<p>We wrote a system to stream audio over USB from a computer to the Arduino, but we then discovered that our USB-serial adaptor is broken, so we have no way of communicating with the Arduino without connecting a laptop to the same Arduino microcontroller that's connected to an ATX power supply, which we suspected could start a fire. (So we completely abandoned that idea).</p>\n<p>Therefore, we tried to make a MIDI interpreter in Python to convert MIDI audio instruction files into a list of notes and their durations, but we didn't manage to get it working in the time. Our demo involved music flashed onto the Arduino, which is not the most elegant way of communicating with it but we got the speakers working so we wanted to demonstrate that.</p>\n<p>Also, the sound is really quiet, so we made some hollow boxes that slightly improve the volume. We experimented with drinks cans but we found them to be less effective and sharper to work with.</p>\n<h2>Accomplishments that we're proud of</h2>\n<ul>\n<li>Making a floppy drive play music without needing to take it apart.</li>\n<li>Writing a very nearly functional MIDI parser</li>\n</ul>\n<h2>What we learned</h2>\n<ul>\n<li>To test serial adaptors before we spend a while programming whilst assuming they'll work</li>\n<li>About the innate simplicity and hackability of the humble floppy drive</li>\n</ul>\n<h2>What's next for Musical Floppies</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["Slayyylmao ride", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Slayyylmao ride \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/456/896/datas/gallery.jpg\"/>\n<p>\n<i>in VR</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Slayyylmao ride \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/456/899/datas/gallery.jpg\"/>\n<p>\n<i>lmaoooooo</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>Twas the night before Christmas, when all through the house\nNot a creature was stirring, not even a mouse.\nThe stockings were hung by the chimney with care,\nIn hopes that St Nicholas soon would be there.</p>\n<p>The children were nestled all snug in their beds,\nWhile visions of sugar-plums danced in their heads.\nAnd mamma in her \u2018kerchief, and I in my cap,\nHad just settled our brains for a long winter\u2019s nap.</p>\n<p>When out on the lawn there arose such a clatter,\nI sprang from the bed to see what was the matter.\nAway to the window I flew like a flash,\nTore open the shutters and threw up the sash.</p>\n<p>The moon on the breast of the new-fallen snow\nGave the lustre of mid-day to objects below.\nWhen, what to my wondering eyes should appear,\nBut a miniature sleigh, and eight tiny reindeer.</p>\n<p>With a little old driver, so lively and quick,\nI knew in a moment it must be St Nick.\nMore rapid than eagles his coursers they came,\nAnd he whistled, and shouted, and called them by name!</p>\n<p>\"Now, Dasher! now, Dancer! now, Prancer and Vixen!\nOn, Comet! On, Cupid! on, Donner and Blitzen!\nTo the top of the porch! to the top of the wall!\nNow dash away! Dash away! Dash away all!\"</p>\n<p>As dry leaves that before the wild hurricane fly,\nWhen they meet with an obstacle, mount to the sky.\nSo up to the house-top the coursers they flew,\nWith the sleigh full of Toys, and St Nicholas too.</p>\n<p>And then, in a twinkling, I heard on the roof\nThe prancing and pawing of each little hoof.\nAs I drew in my head, and was turning around,\nDown the chimney St Nicholas came with a bound.</p>\n<p>He was dressed all in fur, from his head to his foot,\nAnd his clothes were all tarnished with ashes and soot.\nA bundle of Toys he had flung on his back,\nAnd he looked like a peddler, just opening his pack.</p>\n<p>His eyes-how they twinkled! his dimples how merry!\nHis cheeks were like roses, his nose like a cherry!\nHis droll little mouth was drawn up like a bow,\nAnd the beard of his chin was as white as the snow.</p>\n<p>The stump of a pipe he held tight in his teeth,\nAnd the smoke it encircled his head like a wreath.\nHe had a broad face and a little round belly,\nThat shook when he laughed, like a bowlful of jelly!</p>\n<p>He was chubby and plump, a right jolly old elf,\nAnd I laughed when I saw him, in spite of myself!\nA wink of his eye and a twist of his head,\nSoon gave me to know I had nothing to dread.</p>\n<p>He spoke not a word, but went straight to his work,\nAnd filled all the stockings, then turned with a jerk.\nAnd laying his finger aside of his nose,\nAnd giving a nod, up the chimney he rose!</p>\n<p>He sprang to his sleigh, to his team gave a whistle,\nAnd away they all flew like the down of a thistle.\nBut I heard him exclaim, \u2018ere he drove out of sight,\n\"Happy Christmas to all, and to all a good-night!\"</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/spotify\">spotify</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/digitalocean\">digitalocean</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["Songs from Spotify", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Songs from Spotify \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/456/890/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>As it was our first hackathon, we wanted to make something simple and beautiful. The idea was to create something small and then add to it more and more if we have time. As the result, our project has a lot of small bits that are responsible for different parts of it.</p>\n<h2>What it does</h2>\n<p>It connects to Spotify.com via it's API and plays a song. While the song is on, the app translates some song's data (frequencies, volume) to the website which does some visual effects which depend on the sent data.</p>\n<h2>How we built it</h2>\n<p>Our code is 90-95% javascript. It was sort of a challenge for us as we both did not have a lot of experience in js. We picked it on purpose as hackathons are about learning, are not they ?</p>\n<h2>Challenges we ran into</h2>\n<p>Stay awake for 35 hours</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We managed to split our work so both of us had stuff to do all the time. Also, we are satisfied with the result, it is way better than we expected.</p>\n<h2>What we learned</h2>\n<p>Lots of javascript ! </p>\n<h2>What's next for Songs from Spotify</h2>\n<p>We plan at least to clean the code. Also, a login page can be made as soon as Spotify allows to play full songs from other websites. By now, a link that contains the version which was submitted on Hack the Holidays 2 is attached.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/three-js\">three.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/spotify\">spotify</a></span></li><li><span class=\"cp-tag\">audio-web-api</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n</div>", ["Worked with Spotify Web API and Web Audio API with JavaScript to get a song from spotify, to analyze the song based on frequency, to get the frequency values and to draw a histogram of the song which changes around 20 times per second. Created an app which searches for a song on spotify and if the song was not found, the user will be notified.", ""]], ["santa scrolly quick type thingy", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"santa scrolly quick type thingy \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/456/903/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"santa scrolly quick type thingy \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/456/904/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"santa scrolly quick type thingy \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/456/905/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"santa scrolly quick type thingy \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/456/906/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"santa scrolly quick type thingy \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/456/907/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"santa scrolly quick type thingy \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/456/908/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"santa scrolly quick type thingy \u2013 screenshot 7\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/456/909/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"santa scrolly quick type thingy \u2013 screenshot 8\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/456/910/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"santa scrolly quick type thingy \u2013 screenshot 9\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/456/911/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"santa scrolly quick type thingy \u2013 screenshot 10\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/456/912/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"santa scrolly quick type thingy \u2013 screenshot 11\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/456/913/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"santa scrolly quick type thingy \u2013 screenshot 12\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/456/914/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"santa scrolly quick type thingy \u2013 screenshot 13\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/456/915/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"santa scrolly quick type thingy \u2013 screenshot 14\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/456/916/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"santa scrolly quick type thingy \u2013 screenshot 15\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/456/917/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"santa scrolly quick type thingy \u2013 screenshot 16\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/456/918/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"santa scrolly quick type thingy \u2013 screenshot 17\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/456/919/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"santa scrolly quick type thingy \u2013 screenshot 18\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/456/920/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"santa scrolly quick type thingy \u2013 screenshot 19\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/456/921/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"santa scrolly quick type thingy \u2013 screenshot 20\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/456/922/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"santa scrolly quick type thingy \u2013 screenshot 21\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/456/923/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"santa scrolly quick type thingy \u2013 screenshot 22\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/456/924/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"santa scrolly quick type thingy \u2013 screenshot 23\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/456/925/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"santa scrolly quick type thingy \u2013 screenshot 24\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/456/926/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"santa scrolly quick type thingy \u2013 screenshot 25\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/456/927/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"santa scrolly quick type thingy \u2013 screenshot 26\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/456/928/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"santa scrolly quick type thingy \u2013 screenshot 27\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/456/929/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"santa scrolly quick type thingy \u2013 screenshot 28\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/456/930/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"santa scrolly quick type thingy \u2013 screenshot 29\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/456/931/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"santa scrolly quick type thingy \u2013 screenshot 30\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/456/932/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We're not quite sure</p>\n<h2>What it does</h2>\n<p>It can show you the world (If you know what you're doing)</p>\n<h2>How we built it</h2>\n<p>We're not quite sure ourselves</p>\n<h2>Challenges we ran into</h2>\n<p>Well, all of them pretty much.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Getting this far</p>\n<h2>What we learned</h2>\n<p>Don't hold on to that hope that you will actually finish it. It'll just make it more painfl in the end.\nAlso, dont write infinite while loops in unsaved code</p>\n<h2>What's next for santa scrolly quick type thingy</h2>\n<p>The recycling bin</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/esri\">esri</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["SantaScript", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>SantaScript</h1>\n<h2>Features:</h2>\n<p>\n    unwrapping numbers, evaluations, strings. <br/>\n    Declaring variables. <br/>\n    Cannot unwrap variables. <br/>\nTo add a new function. <br/>\n1. Add a new elif statement in the Lexer <br/>\n2. Add a new if statement to parse it <br/>\n</p>\n<h1>Code examples</h1>\n<pre class=\"language-nolang\"><code>$var = 1\nif $var == 1 then\n    unwrap \"True\"\nendif\nunwrap \"Hello world\"\n</code></pre>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/PerlinWarp/SantaScript\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/PerlinWarp/SantaScript\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Get out", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Get out \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/456/965/datas/gallery.jpg\"/>\n<p>\n<i>\"Christmas shoppers visiting Britain's fourth largest shopping centre, Bluewater, found themselves in traffic hell\"</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We often have great trouble telling whether or not we should be in a room, especially around christmas. Wouldn't it be so much easier if we could phone a number, and it tell us whether to stay or leave?</p>\n<h2>What it does</h2>\n<p>You call our hotline, it will listen for sound until you press #. If it detects christmas music, it'll let you know that the room is okay to be in, if it doesn't detect any music it says so, and if it detects non-christmas music it tells you to leave.</p>\n<h2>How we built it</h2>\n<p>The Spotify API is used to get a list of christmasy songs and store them in an array. Nexmo is then used to receive incoming calls, and forwards them to our Node app. It records a section of the call and sends it to the ACRCloud music recognition API. It then compares the response with our list of christmas songs, and sends a text-to-speech response using Nexmo.</p>\n<h2>Challenges we ran into</h2>\n<p>Nexmo has its <em>quirks</em> (but it ultimately pretty great). ACRCloud is horrible.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>It works.</p>\n<h2>What we learned</h2>\n<p>For some of us it was Javascript, others it was how to use specific APIs. We all learned something different.</p>\n<h2>What's next for Get out</h2>\n<p>Get out.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/nexmo\">nexmo</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/spotify\">spotify</a></span></li><li><span class=\"cp-tag\">acrcloud</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/sprusr/getout\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/sprusr/getout\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked out how to use the wonderful ACRCloud", "Learned Javascript and how to use API's with it. (Spotify, ACRCloud)", "Nexmo integration"]], ["Joe Nash Wisdom", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Joe Nash Wisdom \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/456/969/datas/gallery.jpg\"/>\n<p>\n<i>sample-wisdom</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Joe</p>\n<h2>What it does</h2>\n<p>Says something like Joe would</p>\n<h2>How I built it</h2>\n<p>With no help from Joe</p>\n<h2>Challenges I ran into</h2>\n<p>Preventing Joe seeing it prematurely</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Joe not seeing it prematurely</p>\n<h2>What I learned</h2>\n<p>Joe is unobservant when helping Luana with git</p>\n<h2>What's next for Josh Nash Wisdom</h2>\n<p>Refreshing the page for more wisdom from Joe</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ruby\">ruby</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sinatra\">sinatra</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://joenashwisdom.is-so.sexy/\" rel=\"nofollow\" target=\"_blank\" title=\"http://joenashwisdom.is-so.sexy/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>joenashwisdom.is-so.sexy</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Christmas Music Hotline", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>the inspiration behind this development was to allow anyone to have access to Spotify music on the go without the need of using mobile data or having Spotify premium</p>\n<h2>What it does</h2>\n<p>the program allows you to call a number which connects you to a call that plays a Spotify playlist full of Christmas songs</p>\n<h2>How we built it</h2>\n<p>we built the system using the python programming language and the all the API's needed to allow an audio file to be converted into a .wav file type while including SMS messages that informed the user about the song what was playing</p>\n<h2>Challenges we ran into</h2>\n<h2>Accomplishments that we're proud of</h2>\n<ul>\n<li>using the Spotify APIs to gain access to the songs and import them into our system</li>\n<li>calling the number and having a small starting message that informs the user about what number they have called</li>\n<li>playing the songs through the phone call and having it sound somewhat of decent quality\n## What we learned\nwe have learned that using certain speech to text apis can be extremely difficult due to the lack of documentation they provided. also we found that the slightest error can cause the hotline to function incorrectly\n## What's next for Christmas Music Hotline\nSpeech-to-text support</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/nexmo\">nexmo</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/spotify\">spotify</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/aaronosher/hackTheHolidays-chirstmasMusic\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/aaronosher/hackTheHolidays-chirstmasMusic\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Worked on the implementation of spotify using the spotipy library. I made a couple of custom object types to make working with playlists and tracks easier. ", "Working on speech to text api, Watson, Microsft Bing speech service and python speech SDK. Taking microphone input of LPCM 16KHz to file to be transcribed and sent to websocket for processing.", ""]], ["asksanta", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>asksanta</h1>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/ccollins18/asksanta\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ccollins18/asksanta\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["The Noot Alarm", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>An innovative approach to motivating a team for a hackathon.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n</div>", [""]]]