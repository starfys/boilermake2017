[["FrugalGoose", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"FrugalGoose \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/426/437/datas/gallery.jpg\"/>\n<p>\n<i>Searching for flights</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"FrugalGoose \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/426/436/datas/gallery.jpg\"/>\n<p>\n<i>Hotels</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"FrugalGoose \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/426/435/datas/gallery.jpg\"/>\n<p>\n<i>Photos</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"FrugalGoose \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/426/438/datas/gallery.jpg\"/>\n<p>\n<i>Booking flights!</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We both travel a lot, and thought about new ways to explore possible destinations and get an impression without having to search for a lot of information. We created this bot to make it easy to find cheap flights, get inspired to visit new destinations, and to streamline the booking process, all in one simple interface.</p>\n<h2>What it does</h2>\n<p>Our solution is realized as a Telegram bot that anyone can talk to. You can tell the bot where you want to go, or just ask for some suggestions. We use the Skyscanner API to find the most affordable destinations from your location, and Yelp to give you information on some popular local spots. You can also query the bot for hotels in the area, as well as photos. Finally, if you're convinced you like the destination, the bot can directly link you to a selection of cheap flights!</p>\n<p>You can even communicate with the bot via voice messages, just like any regular Telegram user. We use Google's Speech API to transcribe what you said and answer the query like a text message.</p>\n<h2>How we built it</h2>\n<p>We use a mixed backend of Python and Node.js. The Python backend handles the core bot features, i.e. primarily deals with generating and understanding natural language and conversational flow. It also implements the image search via Bing's API. The Node.js server was built with the idea in mind that we might extend our project with a webapp, but currently already hosts all the business logic of communicating with the Skyscanner and Yelp APIs.</p>\n<p>Both parts of the backend are hosted on an AWS EC2 instance, and the bot is accessible at <a href=\"http://telegram.me/FrugalGoose_bot\" rel=\"nofollow\">telegram.me/FrugalGoose_bot</a>.</p>\n<h2>Challenges we ran into</h2>\n<p>Language understanding and generation are hard to comprehensively implement during such a short hackathon. We also had some technical difficulties dealing with our Javascript framework stack initially. Another issue was the proper conversion of audio files for Google's Speech API.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>The bot operates very smoothly, and is quite nice to use in the end. It's the first time we've tried implementing a full chat bot. We also have very little JS experience, so what we did on that end was also a bit new for us.</p>\n<h2>What we learned</h2>\n<p>Telegram has an awesome chatbot API, Google APIs are nicely featured, Bing image search is useful.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/telegram\">telegram</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-web-speech-api\">google-web-speech-api</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bing-search-api\">bing-search-api</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-ec2\">amazon-ec2</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/skyscanner\">skyscanner</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/yelp\">yelp</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/phdowling/frugalgoose\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/phdowling/frugalgoose\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["AlexaTrainer", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/B3TValV7q_0?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"AlexaTrainer \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/426/790/datas/gallery.jpg\"/>\n<p>\n<i>Dashboard</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>AlexaTrainer</h1>\n<p>Drill Seargant Alexa guides you trough your daily home-workout routine. Just say \"Alexa, start training.\". \nView your daily progress, motivational quotes and tweets from your friends on the Dashboard.\n<a href=\"https://github.com/spejss/AlexaTrainer\" rel=\"nofollow\">https://github.com/spejss/AlexaTrainer</a></p>\n<p>.tech domain:\ngetathle.tech</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/coffeescript\">coffeescript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ruby\">ruby</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/love\">love</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/spejss/AlexaTrainer\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/spejss/AlexaTrainer\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Architecture, Android app to control the workouts using sensors (we didn't integrate it at the end)", "Designed the front-end (dashboard), APIs, connecting data to widgets,\ncloud deployment. \nAlso, the one who was doing push-ups :D", "Backend with node.js and first time using Amazon's Alexa SDK, AWS Lambda and DynamoDB", "Designed the front-end (dashboard), worked on the Alexa interface and connected its data to the widget display."]], ["TravelAlexa (AlexaEverywhere)", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"TravelAlexa (AlexaEverywhere) \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/426/449/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"TravelAlexa (AlexaEverywhere) \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/426/448/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"TravelAlexa (AlexaEverywhere) \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/426/455/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<ul>\n<li>Apple Siri.</li>\n<li>City or museums guides.</li>\n</ul>\n<h2>What it does</h2>\n<p>We wanted to connect Amazon Alexa via the Twilio API. With this connection you can have the access to all the Alexa skills. For our hack we chose to make a demo with the use case of a traveler who wants to see the best spots in a city and maybe hasn't an internet connection.</p>\n<h2>How we built it</h2>\n<p>We use a an Ionic hybrid app to get the geo location and other preferences. This is send to our flask server. The server than has our device information. After the registration you can call a Twilio phone number and ask a question. This question is than forwarded to Amauon Alexa. The response is than forwarded back to the server and from there trough Twilio back to the user. We also implemented the same functionality when you have a internet connect.</p>\n<h2>Challenges we ran into</h2>\n<p>We had some problems with the new HTTP2 protocol and therefore the piping of data to Alexa does not work how we want it to.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We build a great looking app. We learned a ton. We connected our mobile phone to Twilio and it worked :) We build our first Amazon Alex Skill.</p>\n<h2>What we learned</h2>\n<p>Development of an Amazon Alexa Skill. Sending binary data from one API to an other over a Python server. Advanced JavaScript and Python practice.</p>\n<h2>What's next for TravelAlexa (AlexaEverywhere)</h2>\n<p>Polish the app. Polish the Flask Server code. Make more Amazon Alexa Skills :) Make Amazon Alexa available through a smart voice service. In the future you can connect your smart devices with Amazon Alexa. With our app you can talk to Amazon Alex from everywhere. Therefore you can talk to all your smart devices via your phone. It's going to be a pretty awesome future.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ionic\">ionic</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/apache\">apache</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/yelp\">yelp</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-alexa\">amazon-alexa</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/axks/travelguide\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/axks/travelguide\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the backend part and integration of the Twilio API and Alexa.", "", ""]], ["KillBox", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"KillBox \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/426/467/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"KillBox \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/426/468/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"KillBox \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/426/466/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"KillBox \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/426/469/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Usually if you have physical access to a server, it doesn't matter if you have full disk encryption or not. We wanted to make a server resistant to this. </p>\n<h2>What it does</h2>\n<p>Our server is connected to a relay, which is controlled by an Arduino. The Arduino has multiple sensors (motion, capacity, tilt and switch). If any of the sensors are triggered the relay will be turned off and the server will lose all power. \nOur plan is to have full disk encryption on the server, so when it gets turned off you wont have access to the data.</p>\n<h3>Use-cases</h3>\n<p>Journalists and whistleblowers could use it to save articles on controversial topics, without having to worry about their freedom. The server could be used to run the Secure Drop project on.</p>\n<h2>How we built it</h2>\n<p>We built it using an Arduino, a Raspberry Pi, a buzzer, multiple sensors and loads of wires. The server is running Raspbian Jessie and Nginx + tor for networking. </p>\n<h2>Challenges we ran into</h2>\n<p>The capacity sensor was difficult to get right. Another issue was the full disk encryption on the server. We needed to get an old undistributed version of Kali Linux to make this work. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We made the sensors work and the entire system actually works. With the disk encrypted it would be very safe. </p>\n<h2>What we learned</h2>\n<p>That hardware takes a lot of time and setting up full disk encryption with early-ssh is hard.</p>\n<h2>What's next for KillBox</h2>\n<p>A more production ready implementation. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c\">c</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/nginx\">nginx</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/linux\">linux</a></span></li><li><span class=\"cp-tag\">tor</span></li><li><span class=\"cp-tag\">sensors</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/MTelling/KillBox\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/MTelling/KillBox\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked mostly on writing the Arduino code for reading sensor input and acting on it. Also helped connecting the sensors to the Arduino. ", "", "", ""]], ["SafeCall", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>SafeCall</h1>\n<p>Make safe anonymous calls.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/jermenkoo/42B659274B6D350C\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/jermenkoo/42B659274B6D350C\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Nerfgun Battle for Alexa", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Nerfgun Battle for Alexa \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/426/383/datas/gallery.jpg\"/>\n<p>\n<i>Our super fun testing hardware.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Nerfgun Battle for Alexa \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/426/445/datas/gallery.jpg\"/>\n<p>\n<i>Our tech stack</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Nerfgun Battle for Alexa \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/425/492/datas/gallery.jpg\"/>\n<p>\n<i>May the odds be ever in your favor...</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>Have you ever played a game with your friends and at some point, one of you asked what the score was and it suddenly hits you that no one was actually keeping track of it ? Well worry no more. We present to you the first virtual, voice interactive referee.</p>\n<p>Our project uses Amazon Alexa to start a Nerfgun game, add the players, create the teams, keep track of the health of each player, reduce it each time they get hit and when it reaches zero, it lets everyone know that that player is out of the game. It also sends the teams a message with a keyword.</p>\n<p>We had a lot of fun while bringing this project to life, but also many challenges crossed our path, since implementing skills in Alexa was new to all of us. Many were the times when we tried our code with Alexa, failed to make it work, had to go back to it, review it, improve it and try it out again and again. However this did not discourage us. All the contrary, this made us work even harder in order to make it work on time.</p>\n<p>With a little bit of effort, this project can not only be used with nerfgun games, but all types of multiplayer, score-keeping games (such may be Volleyball, Basketball, Chess etc.).</p>\n<h2>Technical Overview:</h2>\n<p>The entire functionality is implemented in one single Alexa skill. Our backend is in AWS with an AWS Lambda functions triggered by Alexa and DynamoDB for persistence during a game session.</p>\n<p>A more advanced game mode is utilizing the Twilio API to communicate with individual players when Alexa cannot say out a secret loud.</p>\n<h2>Summary about Nerfgun Battle for Alexa:</h2>\n<p>-Starts a game\n-Adds the players\n-Assigns players to teams\n-Gives feedback whenever players claim they were hit\n-Reduces the health of the player who was hit\n-When health reaches 0, it announces that the player is out\n-Once all the players in a team are out, it announces the winner\n-Restarts a new game if asked</p>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/BoazKG93/nerfgame\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/BoazKG93/nerfgame\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Helped out with the Javascript code in AWS Lambda by adding intents and configuring Alexa skills.\nImplemented the Twilio API to send SMS with codewords for the CTF mode.", "Front end design, managing and writing the different voice commands that interacts with the user and their logic. (Lambda / Node.js)", "Overall system design and backaend development (AWS Lambda / DynamoDB). Caffeine responsible", ""]], ["Docker Notifier mit Alexa Stimmenkontrolle", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We personally use Docker to run some of our own services. Since some of these are important, we were looking for a simple to use way of monitoring these services and getting notified when their state changes. Since we couldn't find anything that's simple to use and ready to go, we decided to build our own.</p>\n<p>During the hackathon, we learned about Twillio and Amazon Alexa and decided to leverage them to make our product better and easier to build.</p>\n<h2>What it does</h2>\n<p>docker-notifier is a simple Docker container which you run alongside your other containers. Once it's up and running, it will forward any Docker events to your Facebook Messenger (via Twillio) or Slack. With the help of Amazon Alexa, it will also allow you to control all your containers with simple voice commands. Or, if you prefer the old fashioned way, you can control the containers with Facebook messages.</p>\n<p>All this makes it much easier to monitor and control Docker containers.</p>\n<h2>How we built it</h2>\n<p>We built docker-notifier from several components:</p>\n<ol>\n<li>A service which listens to Docker events and propagates them to a Twillio relay and Slack\n\n<ul>\n<li>Written in Go, using the official Docker client library</li>\n</ul></li>\n<li>A Twillio relay which forwards Docker events to Twillio\n\n<ul>\n<li>Written in NodeJS</li>\n<li>Supports Facebook Messenger and SMS (untested) notifications</li>\n</ul></li>\n<li>A Twillio endpoint which allows users to register for Facebook and SMS notifications\n\n<ul>\n<li>Written in NodeJS</li>\n</ul></li>\n<li>A Facebook page from which the messages are sent</li>\n<li>A Slack custom integration hook</li>\n<li>A Docker container which packages it all into a simple, easy to use package</li>\n<li>A DigitalOcean droplet acting as a demo Docker host serving a simple HTML webpage from a container which is monitored and can be managed with Alexa</li>\n</ol>\n<p>On our GitHub page, we also provide simple instructions on how to set up your own notifier.</p>\n<h2>Challenges we ran into</h2>\n<p>This was our first encounter with Go, Alexa and Twillio, so we had to learn a lot in the process. With the amazing help of the mentors from Amazon and Twillio and with generous StackOverflow browsing, we were able to overcome difficulties.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We're proud of the fact that we built exactly what we set out to do and everything works. </p>\n<h2>What we learned</h2>\n<p>We learned a lot about how Docker, Alexa and Twillio work and have been inspired with new ideas which we might build in the future.</p>\n<h2>What's next for Docker Notifier mit Alexa Stimmenkontrolle</h2>\n<p>The next step is seeing how well the notifier performs in the real world - we'll deploy it and use it to monitor some of our own services.</p>\n<p>Development wise, the next step would be to break it up into simpler components so that other Docker users can use whatever part they need.</p>\n<p>The notifier also has support for e-mail notifications, but we didn't get the chance to test this out properly.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/love\">love</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/go\">go</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/alexa\">alexa</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/intellij-idea\">intellij-idea</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/vim\">vim</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/docker\">docker</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ubuntu\">ubuntu</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/mrPjer/docker-notifier\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/mrPjer/docker-notifier\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://m.me/jhdno\" rel=\"nofollow\" target=\"_blank\" title=\"https://m.me/jhdno\">\n<i class=\"ss-icon ss-link\"></i>\n<span>m.me</span>\n</a></li>\n<li><a href=\"http://37.139.15.23\" rel=\"nofollow\" target=\"_blank\" title=\"http://37.139.15.23\">\n<i class=\"ss-icon ss-link\"></i>\n<span>37.139.15.23</span>\n</a></li>\n<li><a href=\"http://docker-notifier.tech\" rel=\"nofollow\" target=\"_blank\" title=\"http://docker-notifier.tech\">\n<i class=\"ss-icon ss-link\"></i>\n<span>docker-notifier.tech</span>\n</a></li>\n<li><a href=\"http://dockernotifier.com\" rel=\"nofollow\" target=\"_blank\" title=\"http://dockernotifier.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>dockernotifier.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Created the Go program which listens for Docker events and forwards them to other endpoints. Integrated the program with Twillio Notify and Slack.", ""]], ["DriveBy", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"DriveBy \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/426/496/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"DriveBy \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/426/497/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Everybody knows how awefully long car trips without proper entertainment can be.\nYou're driving past hundreds of cities, but most of the time you don't know anything about\ntheir secret stories - even when they lie on your daily commute!</p>\n<h2>What it does</h2>\n<p>With only one Tap DriveBy starts telling you the most interesting facts about the places\nyou pass by. Completly hands-free you can get entertaining info about cities, architecture, nature and much more.\nPowered with the vast knowledge of Wikipedia you will never hear the same fact twice!\nYou can even use it in public transport or just for a stroll around a new city.\nEnough words - just try it yourself; No Account needed!</p>\n<h2>How we built it</h2>\n<p>We've build an Android app which uses only geolocation and an internet connection to orchestrate\ninformation retrieval from wikipedias api, processing the data into fitting chunks of information and\nreading them out to the user in the fitting situation via TextToSpeech Technology.\nThe app also uses Realm Database as persistent storage to reduce mobile data usage via caching. \nThere is even an graphical user interface which consists of heads-up notifications while traveling\nand a list of all places with corresponding links to Wikipedia is available for checking back after the\nride. </p>\n<h2>Challenges we ran into</h2>\n<ul>\n<li>API difficulties (managing merging data from multiple sources)</li>\n<li>processing text information into fitting chunks.</li>\n<li>persistent data and caching</li>\n<li>TextToSpeech management</li>\n</ul>\n<h2>Accomplishments that we're proud of</h2>\n<ul>\n<li>The main feature of the app and even some extras were completed in 24h.</li>\n<li>The functionality is independent from constrained locations. It can be used anywhere and is\nalways up to date.</li>\n</ul>\n<h2>What we learned</h2>\n<p>Everything that is listed under Challenges ;)</p>\n<h2>What's next for DriveBy</h2>\n<ul>\n<li>Improve Information preprocessing</li>\n<li>Make search radius dependent on current speed</li>\n<li>Check if other apps are streaming audio and if they are more urgent</li>\n<li>Filter information with user provided interests</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/wikipedia\">wikipedia</a></span></li><li><span class=\"cp-tag\">realm</span></li><li><span class=\"cp-tag\">retrofit</span></li><li><span class=\"cp-tag\">passion</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/28hacks/driveby\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/28hacks/driveby\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Poce", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Poce \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/426/384/datas/gallery.jpg\"/>\n<p>\n<i>DLP printer</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Poce \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/426/451/datas/gallery.jpg\"/>\n<p>\n<i>Poce screenshot</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Poce \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/426/524/datas/gallery.jpg\"/>\n<p>\n<i>Basin with projection</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>Poce - Printer operation and control engine</h1>\n<h2>Inspiration</h2>\n<p>Using a 3d printer of the DLP type ourselves we quickly noticed that there is no usable software in the wild. Usable in this case means web-based multi-platform compatible, clean coding style, creating reproducible results, pretty and intuitive ui, so basically solid but lightweight and fun to use. Plus a major requirement of ours is an open-source solution. None of the available software was able to fulfill this wishes. Something had to be done...</p>\n<h2>What it does</h2>\n<p>Poce puts the entire functionality of your printer at the tips of your fingers - wherever you are. Use it with your computer, your iPad or just any mobile device of your choice. Start prints and monitor your printer even when you are not at home. Get Twilio notifications about status, errors and success.</p>\n<h2>How we built it</h2>\n<p>Having a DLP printer and its firmware (which is ours as well but not part of the project) we utilized a Raspberry Pi 3 as a webserver hosting Poce and managing the communication between the web-interface and the actual hardware. Poce runs in Javascript / React exclusively, is as lightweight as possible and intended to be usable intuitively while not restricting the user's access to the printer's functionality.</p>\n<h2>Challenges we ran into</h2>\n<p>The first hassle after the start was the configuration of a network suitable for the development on the R'Pi. As always on an event like that time was of the essence and even minor interruptions can become problems. A merge conflict here and there or the occasional debugging of a function that worked just 2 minutes ago become a challenge when having a constant eye on the watch.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Seeing the scope of the task, we are proud of having a working system to be presented. We are proud to be committing this project to the open-source community.</p>\n<h2>What we learned</h2>\n<p>Without a doubt it pays to invest the first two hours of the time on planning, drawing, drinking coffee and thinking ahead...</p>\n<h2>What's next for Poce</h2>\n<p>Poce is definitely to be continued. This is the only open-source project of its type so we hope, in the next couple of months, to be able to push it to a point where the community will take over and help us create something useful and even more fun than we had getting it started here at jHack2016.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/react\">react</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/3dprinting\">3dprinting</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Poke-the-Game/Poce\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Poke-the-Game/Poce\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["CrimeGo", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"CrimeGo \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/426/762/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We like crime stories and it would be exciting to solve them in the real world.</p>\n<h2>What it does</h2>\n<p>There are several stories to choose from (all are self invented by members of our team). Each story has several waypoints with story sections.\nIt's location based, so you physically have to go to the location where the next story section takes place (for testing purposes you can drag your current position around)</p>\n<h2>How we built it</h2>\n<p>Two of us worked on the frontend and two of us on the backend. The two parts are completely modularized (they run in different servers and communicate with each other).\nThe backend serves the stories and their specific data that is required in different GET-endpoints (using the node.js-express routing).\nThe frontend contains the map for the waypoints and most of the game logic. </p>\n<h2>What's next for CrimeGo</h2>\n<p>The next steps are finishing the translation so that all of our cases are avialable in german and english. Some ideas we ran into during developing CrimGo where to add a twilio interface, so that the user not only has the story as a text but that it is also read to him using a phone call. Another idea was, to create a AmazonAlexa task which would support the user like the famous Dr. Watson, giving hints and some basic facts relating crime and forensic medicine and so on.\nFurthermore: More stories, more Cities/Locations, User-Content</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag\">javscript</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/intellij-idea\">intellij-idea</a></span></li><li><span class=\"cp-tag\">atom</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/git\">git</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/github\">github</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/jo2/CrimeGo\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/jo2/CrimeGo\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the node.js backend with the route endpoints.", "I have created the logo and worked on the front end with the Bootstrap Framework. Further more I have planed with my Team members the main pages of the Application.\n", "I wrote some of the stories on which the app is based. i also included the map into our page and did some javascript stuff.", "I worked on the game engine so I wrote mostly javascript code and used some bootstrap components."]], ["Commit or Die", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>At the start of this hackathon, we took a moment to reflect upon our previous hackathons. We had numerous projects that were quite promising, and which we would have loved to continue development. Unfortunately, we just didn't have time, and we forgot about them. </p>\n<p>Enter: Commit or Die</p>\n<h2>What it does</h2>\n<p>Commit or Die encourages developers to be actively involved in maintaining their projects. We found that developers remain the most committed to their work when they don't step away for an extended period of time  (30 minutes). </p>\n<p>At regular intervals, Commit or Die will look at your most recent commit, and it will determine if you still care about your project. If the commit is older than 30 minutes, it does you the favor of undoing the work you never made a priority in your life. </p>\n<p>While the hackathon version of commit or die only supports deletion and scrambling, we hope to expand this to a number of innovative ways of breaking unmaintained code, including but not limited to replacement of whitespace characters, insertion of random emojis, and changing all conditionals to be at a minimum double negatives. (This is not not not a bad idea!)</p>\n<h2>How I built it</h2>\n<p>We built this using Python, git, and a nice crontab. It's powered by the Spirit of Yolo and a bunch of magic.</p>\n<h2>Challenges I ran into</h2>\n<p>We dogfood, and discovered that Commit or Die does work on itself. We got rolled back to our most minimum feature, 'git-scramble', which will be demonstrated here. We experienced extensive harassment from open source projects that we pitched this service to. </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We've gained a new appreciation for what it means to be active developers on a project. </p>\n<h2>What I learned</h2>\n<p>We really need an SLA for this.</p>\n<h2>What's next for git-scramble</h2>\n<p>We're going to offer Commit as a service. Right now, you need to point Commit or Die to the repo you wish to force development on. In the future, you need only link it to your Github, Apache Foundation, or other open source git contributor accounts, and you too can become a great and active member of the development community. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">cron</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/git\">git</a></span></li><li><span class=\"cp-tag\">rm-rf</span></li><li><span class=\"cp-tag\">yolo</span></li><li><span class=\"cp-tag\">magic</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/tkw1536/commit-or-die\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/tkw1536/commit-or-die\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Marco Polo SMS", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/ten-oMbnrk8?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Marco Polo SMS \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/426/478/datas/gallery.jpg\"/>\n<p>\n<i>Twilio messaging api</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Marco Polo SMS \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/426/479/datas/gallery.jpg\"/>\n<p>\n<i>ngrok to expose public localhost</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Marco Polo SMS \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/426/480/datas/gallery.jpg\"/>\n<p>\n<i>Twilio phone number</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Marco Polo SMS \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/426/481/datas/gallery.jpg\"/>\n<p>\n<i>SMS for Walking Directions</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Marco Polo SMS \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/426/482/datas/gallery.jpg\"/>\n<p>\n<i>When address is incorrect</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Marco Polo SMS \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/426/510/datas/gallery.jpg\"/>\n<p>\n<i>SMS for Driving Directions</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We just arrived to Bremen for our first time, we can't find an internet connection, so we found a hard time getting to our destination ( Jacobs University) especially when not all people we met and asked for help can speak English.\nAfter we heard about Twilio Service, we said that it will very useful to have a service that helps you with directions step by step to get to wherever you want to.</p>\n<h2>What it does</h2>\n<p>It parse an SMS received from the user and send him back an SMS containing step by step description to how he can reach a destination whether by Walking, Driving, Transit or Bicycling.</p>\n<h2>How we built it</h2>\n<p>We built a nodeJs server using the Twilio Api and Google map directions service.</p>\n<h2>Challenges we ran into</h2>\n<p>It comes that the user send a not meaningful address to where he is at or where he wants to go to.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Proud to help people who are in need when they are out of internet connection or if they have no smartphone ( mostly in developed countries ). This service will help a lot of people today.</p>\n<h2>What we learned</h2>\n<p>We learned how to send and receive SMS with Twilio and how to get the full directions description between two addresses. \nExposing a localhost to the internet via ngrok.</p>\n<h2>What's next for Marco Polo SMS</h2>\n<p>The next thing is to make this service available everywhere in the world. Each country should have a known number that can be texted in hard moments.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-maps\">google-maps</a></span></li><li><span class=\"cp-tag\">ngrok</span></li></ul>\n</div>\n</div>", ["I worked on the server logic with nodeJs. I successfully integrated the twilio api and parsed user SMS content. Afterwards, I could send him back the directions to his desired address. ", "Integrating Google Maps Directions  API and parsing SMS messages using NodeJS", "I worked  on Twilio API"]], ["Botsulting", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Botsulting \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/426/439/datas/gallery.jpg\"/>\n<p>\n<i>Botsulting Logo</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Botsulting \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/426/534/datas/gallery.jpg\"/>\n<p>\n<i>Initial Start Screen</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Botsulting \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/426/536/datas/gallery.jpg\"/>\n<p>\n<i>Chose your game</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Botsulting \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/426/537/datas/gallery.jpg\"/>\n<p>\n<i> First question</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Botsulting \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/426/535/datas/gallery.jpg\"/>\n<p>\n<i>Yay I got it right... oh...</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Botsulting \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/426/538/datas/gallery.jpg\"/>\n<p>\n<i>I don't even have crocs! </i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Botsulting \u2013 screenshot 7\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/426/550/datas/gallery.jpg\"/>\n<p>\n<i>Riddle me this</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>It started as one of those random late night thoughts. What happens if you have an alarm that insults you when you snooze it? This idea of a bot insulting you stuck and it developed into \"What happens if a bot insults you for your every move in a game?\"</p>\n<p>When the time came to chose between doing something useful and doing something fun - we chose fun. \nWe developed Botsulting - a bot with 2 different games which increase your knowledge (Trivia) and logic thinking abilities (Riddle me this). What ever the outcome of your answer is, you're sure to not get the feedback you expected though. Our bot has a bit of a special attitude towards people outsmarting him and he certainly looks down on you when you get it wrong. So be careful what you answer. </p>\n<p><strong>WARNING: DO NOT PLAY IF EASILY OFFENDED OR MISSING SENSE OF HUMOR!</strong></p>\n<h2>What it does</h2>\n<p>Botsulting is a chatbot with two games which can be played single or multiplayer. The first is a trivia quiz with multiple choice as well as y/n statements. The second game is a riddle which you have to find the answer to. Beware if you don't write it exactly the way the Botsulter wants it... </p>\n<h2>How we built it</h2>\n<p>While tired, full with food (3 dinners) and tired. With help of the @botfather on the Telegram platform and lots of python code. Starting with baby-steps the Botsulter is now a full grown meanie.</p>\n<h2>Challenges we I ran into</h2>\n<p>Finding enough insults with a high enough standard.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Alena: I WASN'T USELESS!!! :D\nPau: SHE WASN'T USELESS!!! <em>phew</em></p>\n<h2>What we learned</h2>\n<p>Alena: I still have a long way to go before fully being capable of using python and its structuring.\nPau: The satisfaction after your own bot speaks his first words is priceless... the fact that those words were harsh insults is something you never forget &lt;3</p>\n<h2>What's next for Botsulting</h2>\n<p>We're planning on implementing a multiplayer game to spot the best insult-poets among your friends. But many more possibilities are thinkable and the sky is the limit ;)  </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/ofpau/botsulting\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ofpau/botsulting\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://telegram.me/botsulting_bot\" rel=\"nofollow\" target=\"_blank\" title=\"https://telegram.me/botsulting_bot\">\n<i class=\"ss-icon ss-link\"></i>\n<span>telegram.me</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I collected the pieces of my ego after being destroyed by my own bot (I'm bad at trivia) and Alena (don't know who's the meanest!)", "I was searching insults to throw at Pau to hur... errr - motivate him... "]], ["Game of Evolution", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Inspired by Conway's Game of Life</p>\n<h2>What it does</h2>\n<p>Each ant robot in the game is controlled by a Neural Network. Ant robots are divided into different tribes. Ants from different tribes can fight against each other, and those from the same tribe can reproduce. A genetic algorithm is adopted to create the new-born ants.</p>\n<h2>How we built it</h2>\n<p>We use Echo State Network for the NN.\nGenes encode the readout matrix.\nCrossover by randomly swap the weights.</p>\n<h2>Challenges we ran into</h2>\n<p>The server does not support numpy and scipy. So the backend code cannot be run on the server.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We came up with a good genetic algorithm for this agent control task.</p>\n<h2>What we learned</h2>\n<p>It's important to first install everything on the server.</p>\n<h2>What's next for Game of Evolution</h2>\n<p>Find a server that supports numpy and scipy, merge the backend and frontend, and set a website for it so that people can see how the world of ant agents evolve online.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["Security3Blockchain", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>Security kits seem expensive and still be exposed to fraudulant behaviour. You can't use a manipulated picture in court to prove that your bike was stolen or that somebody broke into your garden house. So how do you ensure that your images aren't manipulated?</p>\n<p>For those reasons we developed Security3Blockchain, a low cost security kit based on the bitcoin technology to store hash values of freshly taken images directly in the blockchain to ensure immutability.</p>\n<p>Challanging was building the complexity of this project pressured in an only 24-h time frame.</p>\n<p>In the end we were able to showcase our prototype showing that using the blockchain technology could improve the home security cam business and help our users to stay safe.</p>\n<p>We definitely learned how to develop complex solutions in a limited amout of time with limited resources. We also learned how to integrate the blockchain technology in an interesting use case.</p>\n<p>We'll keep on developing interessting stuff, so stay in touch or hit us up!</p>\n<p>Best,</p>\n<p>Team Security3Blockchain</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ionic\">ionic</a></span></li><li><span class=\"cp-tag\">cryptography</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/angular-js\">angular.js</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/security3/security3\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/security3/security3\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Alexa chess", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>Chess application running on Amazon alexa, backend server on Amazon AWS.\nControlled through voice input, the board can be displayed either in the browser or through a Unity3d application.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/alexa\">alexa</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/fabrichter/jacobshack\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/fabrichter/jacobshack\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the Unity3d frontend and helped with the backend.", "I worked on the backend, i.e. the AWS server and the Alexa stuff.", ""]], ["Flow: Make the next Big Thing", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>My main inspiration for this project was my own way of zoning out to develop and come up wth new ideas, which is an experience we're trying to simulate in a fully Virtual Reality </p>\n<h2>What it does</h2>\n<pre class=\"language-nolang\"><code>   Creates a virtual workflow with ideas contributed by your teammates, which swirl around in the empty space with you, letting you think of ways they could be better or how they could link\n</code></pre>\n<h2>How I built it</h2>\n<pre class=\"language-nolang\"><code>  I utilized Unreal Engine. Mostly blueprint programming.\n</code></pre>\n<h2>Challenges I ran into</h2>\n<pre class=\"language-nolang\"><code> Uploading to VR, creating a nice, empty environment and filling it with ideas\n</code></pre>\n<h2>Accomplishments that I'm proud of</h2>\n<pre class=\"language-nolang\"><code>  It should work!\n</code></pre>\n<h2>What I learned</h2>\n<pre class=\"language-nolang\"><code>  I learned some more about using Unreal in a way other than videogames, which is definitely an interesting experience\n</code></pre>\n<h2>What's next for Flow: Make the next Big Thing</h2>\n<pre class=\"language-nolang\"><code>   - Editability (Being able to feed inputs to the VR remotely, hopefully even live while someone uses it!)\n   -Being able to move ideas around to your liking, no need to rely on the preset patterns! (may or may not be a good idea to migrate to Vive)\n   -Support for more structured diagrams and ability to re-structure and re-evaluate them\n</code></pre>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/samsung-gear-vr\">samsung-gear-vr</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unreal-engine\">unreal-engine</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/BeerTheFern/Flow.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/BeerTheFern/Flow.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Melon", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>After spending around hour and two thinking about ideas, we thought why not work with some new technology that we have never worked with. So android it was! We came up with this idea of being more lazy to open facebook or twitter to add people. Hence we came up with Melon - a name we changed from Milan(meaning meet/connect in Hindi/Nepali/Urdu) to sound a bit cool!</p>\n<h2>What it does</h2>\n<p>So it is an android app which is personalized to each phone. It has facebook and twitter section where you login and your session id is stored. Then you connect it with other devices using the same app through nfc just by touching and they follow each other in twitter and the first one to connect sends a friend request in facebook.</p>\n<h2>Challenges I ran into</h2>\n<p>Working with API was really difficult. Specially facebook API which is not friendly for just sending request using only api. Similarly most of us were trying android for the first time so took some time to implement as well as thinking about the architecture. Sleep was also a challenge, but we enjoyed it by just sleeping.</p>\n<h2>What's next for Melon</h2>\n<p>To add more social medias to this app :) </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag\">rest</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/atabakhafeez/Melon\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/atabakhafeez/Melon\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Nasa NEO Skill for Amazon Alexa", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Nasa NEO Skill for Amazon Alexa \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/426/386/datas/gallery.jpg\"/>\n<p>\n<i>Nasa Logo</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>Tells you informations about the objects oribiting the Earth, like size, speed and the distance from the Earth.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/dariusrestivan/nasa\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/dariusrestivan/nasa\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Trips", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Trips \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/426/549/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>Trips</h1>\n<p>Trips is an innovative Android App which will find the locations a movie was made in.\nIt will calculate the cheapest route using the Skyscanner API all based on a movie search.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/lydl28/Trips\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/lydl28/Trips\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["PocketDoctor", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Not everyone has access to a doctor, so why not put one in their pocket?</p>\n<h2>What it does</h2>\n<p>Chat bot interface through SMS for medical diagnosis</p>\n<h2>How I built it</h2>\n<p>Flask server running on Heroku. Twilio API for interface, Infermedica API for backend.</p>\n<h2>Challenges I ran into</h2>\n<p>Team split up more than half way through the hackathon. First time hacking alone.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Doing it in less than 10 hours</p>\n<h2>What I learned</h2>\n<p>How to use Twilio API</p>\n<h2>What's next for PocketDoctor</h2>\n<p>Want to add more features</p>\n<h2>Disclaimer</h2>\n<p>I have reused a little bit of code from a previous hackathon that I participated in. (Basically the part which parses infermedica responses for follow up questions and diagnosis.)</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag\">infermedica</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/sourabhlal/PocketDoctor\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/sourabhlal/PocketDoctor\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["JacobsHack geolocation game", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"JacobsHack geolocation game \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/426/366/datas/gallery.jpg\"/>\n<p>\n<i>Web service</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"JacobsHack geolocation game \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/426/368/datas/gallery.jpg\"/>\n<p>\n<i>Telegram bot</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to create a multiplayer game where the main objective is to walk around and interact with other players' past actions. After some researching we decided to make a location-based <em>capture the flag</em>.</p>\n<h2>What it does</h2>\n<p>It compares your position with those objectives left by other players. Then it gives you the distance to the closest objectives or allows you to set a new objective for everybody if you have enough points.</p>\n<h2>How I built it</h2>\n<p>We used AWS to build and host the server, Python3 together with SQLite and Telegram API to make all the processing, and the Google API to add the map in <a href=\"http://ec2-52-57-89-229.eu-central-1.compute.amazonaws.com/\" rel=\"nofollow\">the objectives website</a>.</p>\n<h2>Challenges I ran into</h2>\n<p>We didn't know how to use SQL as fully as we wanted. Connecting the web server to the database and getting it to work was an adventure.\nAt some point we also needed to implement a binary search for two variables at the same time inside the SQL database. We weren't able to solve it so we just iterate over the few entries that the table contains. We will fix it in future versions.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We managed to overcome all the challenges we found in very few hours.</p>\n<h2>What I learned</h2>\n<p>How to interact with an SQL database, usage of Google APIs, how to set up a web server.</p>\n<h2>What's next for JacobsHack geolocation game</h2>\n<p>Hopefully we will fix the scalability problem and it will become popular among Telegram users!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/telegram\">telegram</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google--2\">google</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xml\">xml</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sqlite\">sqlite</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://jh-geobot.tech\" rel=\"nofollow\" target=\"_blank\" title=\"http://jh-geobot.tech\">\n<i class=\"ss-icon ss-link\"></i>\n<span>jh-geobot.tech</span>\n</a></li>\n<li><a href=\"https://web.telegram.org/#/im?p=%40JHGeoGameBot\" rel=\"nofollow\" target=\"_blank\" title=\"https://web.telegram.org/#/im?p=%40JHGeoGameBot\">\n<i class=\"ss-icon ss-link\"></i>\n<span>web.telegram.org</span>\n</a></li>\n<li><a href=\"http://github.com/fndh/Jacobs16\" rel=\"nofollow\" target=\"_blank\" title=\"http://github.com/fndh/Jacobs16\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Created the Python script", ""]], ["A-SMS Web Hook", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>This marked my first time to attend a hackathon, and participating with a project is a must in order to get the full experience. My first goal, in order to destinguish jacobshack from simply a \"jam\", was to try create something that's less of a traditional program and more of a \"bodge\" - a weird (albeit useful) combination of many things I can think of.</p>\n<h2>What it does</h2>\n<p>With this bodge, I can control my PC remotely through SMS. You can add as many actions as you want with freedom of choosing the syntax too. You can manage your SMS commands and their syntax from the \"maps\" file (supports pattern matching with regular expressions).</p>\n<h2>How I built it</h2>\n<p>My computer acts as both a client and a server in a way, but I think it'd be more precisely referred to as a server as that's what Twilio calls it. I set up a local HTTP server using Flask on Python, and then I exposed it through a program called ngrok to the internet. Twelio is the main link between SMS messages, as it \"forwards\" whatever SMS I send to my Twelio compatible number provided by the trial to the url by ngrock to which the local http server is forwarded. </p>\n<p>So I send an SMS from phone -&gt; Twelio Number -&gt; Twelio's web hook (ngrok url) -&gt; local server -&gt; runs commands on pc -&gt; sends reply SMS to phone.  </p>\n<p>For security reasons, I made such that it only listens SMS from my phone number, but this can easily be changed in the file \"info.init\".</p>\n<h2>Challenges I ran into</h2>\n<p>The biggest challenge was coming up with an idea. An alexa skill sounded very straightforward to me, and even though I had planned to work on one, I couldn't due to the fact that I don't have a credit card/paypal/bank account at this time. Same goes for the domain name which I could have used in the  my project, but couldn't proceed with checking out my free items because I couldn't enter my credit card details.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I'm mostly proud of the fact that I managed to turn in some project. At some point, my brain decided to lock itself away from me, and I was just staring at the screen or playing around without making any apparent progress. It was as if there were sounds inside my head chanting some words along the lines \"One always regrets what could have done. Remember for next time.\". No, this shouldn't be printed on a hackathon's flier while it's running. Come on.</p>\n<h2>What I learned</h2>\n<p>Before today, I didn't even know what Twilio really was. Same with Alexa. Both of which have presented quite the show today (yesterday? in the last 24 hours, whatever). Before I started, I didn't know what exactly I was going to do, but I knew I was going to need to use something like node.js. It's something that's pretty new to me. I had started setting up my environment and playing around with it around lunch time, but a while after, there was this talk by one of our dear organizers on this other python library which I didn't know much about Flask. Following the talk, I dashed back to my place and started playing with it. And well, it's just wonderful. Sorry node.js. </p>\n<h2>What's next for A-SMS Web Hook</h2>\n<p>There are still a lot of improvements to be made, some of which requires a Pro Twilio account, like  SMS notifications once a job is done (think of when you want to switch off a computer after long hours of crunching work while you're away or something). Other improvements can include jobs with custom SMS responses (e.g: send an SMS to check your laptop's battery or a download's progress, and you get a response with the value). This would be really easy to implement with a little bit of time.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://bitbucket.org/A-ManToTheRescue/a-sms-webhook\" rel=\"nofollow\" target=\"_blank\" title=\"https://bitbucket.org/A-ManToTheRescue/a-sms-webhook\">\n<i class=\"ss-icon ss-link\"></i>\n<span>bitbucket.org</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]]]