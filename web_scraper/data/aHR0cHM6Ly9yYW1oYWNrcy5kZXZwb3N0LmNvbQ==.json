[["DoctorPedia", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"DoctorPedia \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/289/636/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"DoctorPedia \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/289/637/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"DoctorPedia \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/289/638/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"DoctorPedia \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/289/639/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"DoctorPedia \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/289/640/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"DoctorPedia \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/289/641/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"DoctorPedia \u2013 screenshot 7\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/289/642/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"DoctorPedia \u2013 screenshot 8\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/289/643/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"DoctorPedia \u2013 screenshot 9\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/289/644/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"DoctorPedia \u2013 screenshot 10\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/289/645/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We hate insane medical bills! We wanted to solve this problem with a simple to use app to help us find doctors who specialize in our problems and support our insurance!</p>\n<h2>What it does</h2>\n<p>Helps you find doctors who specialize in what you're looking for who are also carried by your insurance plan.</p>\n<h2>How we built it</h2>\n<p>Carefully!</p>\n<h2>Challenges we ran into</h2>\n<p>Sleep deprivation, and getting doctor data - also getting diabetes from all the candy and RedBull.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We made an app!</p>\n<h2>What we learned</h2>\n<p>There's a lot of insurance providers.</p>\n<h2>What's next for DoctorPedia</h2>\n<p>Expanding doctor data to cover more doctors and polices.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/web\">web</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jenkins\">jenkins</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/github\">github</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/slack\">slack</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-maps\">google-maps</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/digitalocean\">digitalocean</a></span></li><li><span class=\"cp-tag\">centos</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/nginx\">nginx</a></span></li></ul>\n</div>\n</div>", ["", "", "", ""]], ["Squirrel", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Squirrel \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/289/246/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>What is Squirrel?</h2>\n<p>Squirrel was designed to be an investing consultant capable of providing stock picks to users. But there's even more. The user can ask Squirrel for ways they can invest their money. Squirrel then immediately links into their Capital One bank account to see their balances, assesses a proper portfolio allocation for stocks, and then gives them a basket of diversified stocks to invest in. Squirrel also provides connections into every single one of Capital One's API endpoints that include ATM and merchant search, along with bill, purchases, transfers, and withdrawal discovery.</p>\n<h2>Why create Squirrel?</h2>\n<p>With paychecks being deposited all the time, there's a lot of money that just sits around idly in people's bank accounts. This money could be much better leveraged if people understood how to invest, but that's often times difficult. This app makes it simple by interfacing with Capital One bank accounts and providing investing insights based on the bank account profiles. </p>\n<h2>How does Squirrel work?</h2>\n<p>Query for stock help: type \"I need help managing my money\" or \"Give me investing insights\" </p>\n<p>Query for single stock quote: type \"Look up AAPL\" or \"Find AAPL symbol\"</p>\n<p>Query for ATM location search: type \"Find ATMs near Washington D.C.\" or \"Find ATMs near me\"</p>\n<p>Query for merchants nearby: type \"Find merchants near Richmond\" or \"Find merchants near me\"</p>\n<p>Query for billing info: type \"Find my bills\"</p>\n<p>Query for deposits info: type \"Find my deposits\"</p>\n<p>Query for purchases info: type \"Look up my purchases\"</p>\n<p>Query for withdrawals info: type \"Look up my withdrawals\"</p>\n<p>Query for transfers info: type \"Discover my transfers\"</p>\n<h2>What makes Squirrel stand out?</h2>\n<p>Squirrel's amazing. Not only is it easy to use but it's intuitive. This is because we incorporated natural language processing into his language by training him with sets of possible queries. This allows us to ascertain the intentions of the user querying the text interface. Additionally, we styled an iOS simulator directly into the website, which took a ton of CSS and Javascript, so that users could test out the interface from the site.</p>\n<h2>What's next for Squirrel?</h2>\n<p>Ideally, we would add a notification system where users can subscribe to investing insights and the app can detect whenever the user deposits money into their account. We tried to implement this but ran into issues when settings a recurring timer to constantly query the user's list of deposits. It was simply too costly to do so and so we will have to figure out how to keep a database or localstore for this information.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jade\">jade</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/pebble\">pebble</a></span></li><li><span class=\"cp-tag\">markit</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/capital-one\">capital-one</a></span></li><li><span class=\"cp-tag\">nessie</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/natural-language-processing\">natural-language-processing</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/machine-learning\">machine-learning</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://nuts4squirrel.com\" rel=\"nofollow\" target=\"_blank\" title=\"http://nuts4squirrel.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>nuts4squirrel.com</span>\n</a></li>\n<li><a href=\"https://github.com/danXyu/squirrel\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/danXyu/squirrel\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Pandemic", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Pandemic \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/289/761/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Pandemic \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/289/762/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Pandemic \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/289/763/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Pandemic \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/289/764/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Concepts and Formation</h2>\n<p>This app is centered around three main challenges provided by sponsors of Ramhacks. With the idea to incorporate Capital One's banking system (Nessie) with the interactive nature of a human health issue (challenge provided by Websmith Group), our team designed an Android app used to map flu prevalence density over Google Maps' heat map feature. Density is measured by the purchase of Tamiflu over a national scale, in which a dummy data set of approximately 15,000 data points were used to populated the maps. </p>\n<p>In addition, we constructed a model for age verification and authentication as a side project during our experience.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">nessie</span></li><li><span class=\"cp-tag\">mobile</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-maps\">google-maps</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/heatmap\">heatmap</a></span></li><li><span class=\"cp-tag\">api</span></li><li><span class=\"cp-tag\">healthcare</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Throckmortra/Pandemic\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Throckmortra/Pandemic\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the python scripts to add data using the nessie API, I helped optimize the query and processing code in the heatmap", "I mainly worked on the UI of the app, as well as our side model involving the 21+ verification. ", "Android development and implementation.", ""]], ["Ramhealth", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We thought using credit card information, combining it with EEG input, and using other healthcare information would provide a really cool app experience.</p>\n<h2>What it does</h2>\n<p>Our app uses Heartrate monitors and an EEG headband to show data output. Additionally, we implemented an age/stress feature that is based on credit card purchases and account information. This includes looking for purchases like \"ABC store\" to weigh the probability of being 21 or over. Additionally, it uses information about the number of credit cards and overall wealth to determine an overall profile of the person.</p>\n<h2>How I built it</h2>\n<p>We built this program with Android Studio and attempted to include Jenkins, including setting up the server. We had occasional git issues and did not fully implement Jenkins, in the end.</p>\n<h2>Challenges I ran into</h2>\n<p>We had a major android compile error that resulted in roughly 20 man hours being wasted. We finally solved it by copying our entire project into a new project manually, which finally solved the issue. The original cause of it is still unknown.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>It works. We had a lot of hardware to work with and git was not being patient with us.</p>\n<h2>What I learned</h2>\n<p>Be very careful about the different Android builds on people`s systems.</p>\n<h2>What's next for RAMSHACKS_2015</h2>\n<p>Further implementation of a lie detection feature would be useful. It currently is rudimentary and shows many false negatives.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jenkins\">jenkins</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/bbreck3/RAMSHACKS_2015\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/bbreck3/RAMSHACKS_2015\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I implementend everything regarding age verification using banking details with capitalone's API and also the population information by zipcode (using a file from the internet with the data)", ""]], ["MoneyWatch", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"MoneyWatch \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/289/723/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>What it does</h2>\n<p>MoneyWatch is an Android application that uses the Capital One Nessie test API to detect when your bank balance is low, with notification support for the Pebble smartwatch.</p>\n<h2>What I learned</h2>\n<ul>\n<li>HTTP requests</li>\n<li>Pebble watchapp/notification development</li>\n</ul>\n<h2>What's next for MoneyWatch</h2>\n<ul>\n<li>UI/UX refinement </li>\n<li>Fleshing out Google Maps API integration</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/pebble\">pebble</a></span></li><li><span class=\"cp-tag\">nessie</span></li></ul>\n</div>\n</div>", ["", ""]], ["CashPointer", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Capital One API\nChallenges for the Hackathon\nwere interested in developing for wearables</p>\n<h2>What it does</h2>\n<p>pulls the locations of all atms within a certain radius from the current location then finds the nearest based on that.  Then calculates bearing, distance and eta to destination and displays all of that on the pebble watch.</p>\n<h2>How I built it</h2>\n<h2>Challenges I ran into</h2>\n<p>Parsing JSON\ncoding in C\ntransmitting data between pebble and android</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>parsing JSON\nnot falling asleep\nhow to code in C\nhow to send http requests from android\nusing git</p>\n<h2>What I learned</h2>\n<p>JSON \nmore Android\ngit\nC</p>\n<h2>What's next for CashPointer</h2>\n<p>a full mobile companion app integrating all features of the api possible.  Android wear support</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c\">c</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/pebble\">pebble</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/vim\">vim</a></span></li><li><span class=\"cp-tag\">arch-linux.</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/notepad\">notepad++</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-wear\">android-wear</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag\">red-bull</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jenkins\">jenkins</a></span></li><li><span class=\"cp-tag\">sleep-deprivation.</span></li><li><span class=\"cp-tag\">umm.code.</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://198.27.81.79/CashPointer.apk\" rel=\"nofollow\" target=\"_blank\" title=\"http://198.27.81.79/CashPointer.apk\">\n<i class=\"ss-icon ss-link\"></i>\n<span>198.27.81.79</span>\n</a></li>\n<li><a href=\"http://198.27.81.79/ramhacks.zip\" rel=\"nofollow\" target=\"_blank\" title=\"http://198.27.81.79/ramhacks.zip\">\n<i class=\"ss-icon ss-link\"></i>\n<span>198.27.81.79</span>\n</a></li>\n<li><a href=\"http://198.27.81.79/CashPointerSrc.zip\" rel=\"nofollow\" target=\"_blank\" title=\"http://198.27.81.79/CashPointerSrc.zip\">\n<i class=\"ss-icon ss-link\"></i>\n<span>198.27.81.79</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the JSON Parsing within android and the method to pull the json data from the api.  Along with that I created the companion android app that handled all of the location services necessary to determine a bearing to the nearest ATM. ", "I worked on the Java application to take GPS coordinates and find an ATM using Nessie API and parsing the JSON response.", "I helped Hank to parse the JSON from the Nessie API. I also got Jenkins running and building from the git repositories we set up (with plenty of help from the sponsors/mentors from Jenkins). ", ""]], ["Rams Take RVA", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Rams Take RVA \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/289/706/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Rams Take RVA \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/289/707/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Rams Take RVA \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/289/708/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Rams Take RVA \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/289/709/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Rams Take RVA \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/289/710/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Rams Take RVA \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/289/711/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration Talking to potential VCU students and new comers to RVA.</h2>\n<h2>What it does</h2>\n<p>This app shows people what it is that VCU students like to do, see, and where they like to eat. All of these locations are within walking distance of Monroe Park Campus. </p>\n<h2>How I built it</h2>\n<p>This app was build in xcode using swift.</p>\n<h2>Challenges I ran into</h2>\n<p>Cutting back features</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>The user interface </p>\n<h2>What I learned</h2>\n<p>How to do awesome animations. </p>\n<h2>What's next for Rams Take RVA</h2>\n<p>Putting in more features and adding map integration. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/yelp\">yelp</a></span></li><li><span class=\"cp-tag\">api</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sketch\">sketch</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xcode\">xcode</a></span></li></ul>\n</div>\n</div>", [""]], ["classtr", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>CLASSTR.HEROKU.COM\nthis isn't recognized as a valid link in the form. which is why it's here . </p>\n<h2>Inspiration</h2>\n<p>When registering for classes, if you don't follow the prescribed path (because you take a minor, retake a class etc). So Andrew developed a complicated tech tree of classes (think Civilization V) with the classes that can be taken next semester all in one tier, and the more prereqs something has, the further away it is. This took about 40 hours to put together, and needs to be manually updated every semester. Academic advisors love it, and have asked for PDFs of his (very unique) class tree. </p>\n<h2>What it does</h2>\n<p>This creates a live, updateable tech tree for classes (currently placeholder data) and let's you organize your semester based on what you need to take based on what you need to do, not a non-existant ideal student. </p>\n<p>If you need math 307 to unlock EGRE 355 to unlock senior design, this will show you so you know what to take next. </p>\n<h2>How I built it</h2>\n<p>We made a node.js web server on top of heroku. \nThen a github repository (github.com/excenter/classtr2) with webhooks into jenkins checks fundamental code against some defaults at every commit. \nEach commit also triggers a heroku build and deploy. \nThen a platform agnostic webkit web page (changed to work with the node web server) is rendered around a D3 data visualization of a tech tree. \nCI/CD is automated and emails any failures. </p>\n<h2>Challenges I ran into</h2>\n<p>The D3 view is very finicky to get running, and currently there are a few bugs including scroll jacking on mobile making it rare to be visible in mobile safari or mobile chrome. \ncreating webhooks with Jenkins is a multi step delicate process. \na Node web server doesn't render web pages like a good ol' fashioned distributed linux hosting. </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>rolled our own custom node web host. </p>\n<h2>What I learned</h2>\n<p>We learned Node, roll it yourself web servers, heroku, and D3.js</p>\n<h2>What's next for classtr</h2>\n<p>integrating the actual course trees for engineering majors, and the most popular minors at VCU, (extensable to any college, or dynamic tech tree related hierarchical view), fix scrolljacking on mobile, make the tree graphics more user friendly. \ninclude a preloaded course tree (search bar where you can enter a single class, or a minor and all the classes are added to the tree). </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jenkins\">jenkins</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/heroku\">heroku</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/git\">git</a></span></li><li><span class=\"cp-tag\">webhooks</span></li></ul>\n</div>\n</div>", [""]], ["Crimes@VCU", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Crimes@VCU \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/289/770/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We, at VCU, frequently receive emails about safety incidents late at night. I realized I could use public data to analyze where VCU stands in terms of crime compared to other public universities.</p>\n<h2>What it does</h2>\n<p>It analyzes on-campus crimes at public universities (&gt;4-yr curriculum) with a student population of 25,000 and above. It presents analysis on 6-7 different crimes (robbery, forcible sex offense, non-forcible sex offense, aggravated assault, motor vehicle theft, burglary and arson) in each state for a period of time (2001-2013).</p>\n<p>Use the tabs in the embedded visualization to see different views of the analysis.</p>\n<h2>How I built it</h2>\n<p>I built it using Python, pandas, Bootstrap, iPython, Google Places API, JavaScript, and Tableau</p>\n<h2>Challenges I ran into</h2>\n<p>The official data available at <a href=\"http://ope.ed.gov/Security/\" rel=\"nofollow\">http://ope.ed.gov/Security/</a> does not provide location information of universities. I used Google Places API to retrieve physical address, latitude and longitude information for information visualization purposes. </p>\n<h2>Accomplishments that I'm proud of</h2>\n<ul>\n<li>Created this project within 10 hours at great speed</li>\n<li>To our relief, this project helped me understand that VCU is safer than many other places although there are specific crimes (aggravated assault and motor vehicle theft) that occur that higher than national average incidence rate.</li>\n</ul>\n<h2>What I learned</h2>\n<ul>\n<li>Re-using Google APIs</li>\n<li>Complex information visualization</li>\n<li>Prototyping using Python, pandas, matplotlib</li>\n</ul>\n<h2>What's next for Crimes@VCU</h2>\n<p>I will expand it to other types of institutions and crimes. I will eventually create an API for this data making it easier for other developers to access the data.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-places\">google-places</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/tableau\">tableau</a></span></li><li><span class=\"cp-tag\">ipython</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://bkamapantula.github.io/viz/viz-int/vcu-crime.html\" rel=\"nofollow\" target=\"_blank\" title=\"http://bkamapantula.github.io/viz/viz-int/vcu-crime.html\">\n<i class=\"ss-icon ss-link\"></i>\n<span>bkamapantula.github.io</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Hacker Lights", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Who doesn't like blinkenlights?  We wanted to build the \"ultimate\" LED lighting system - one that supersedes the capabilities of anything else on the market today, but is simple enough for anyone to use.  At RamHacks, we took our homemade HackerLights control board, and created C++ and Network APIs for it, and then created a pair of demos showcasing the flexibility of our system when controlled via API.</p>\n<p>Finally, we wanted to make an release-quality API so that we can open-source it after this event to share with the world!</p>\n<h2>What it does</h2>\n<p>The open-source HackerLights API has several core functions:</p>\n<ul>\n<li>Set All LEDs to a color</li>\n<li>Set all LEDs individually</li>\n<li>Play a prerecorded pattern</li>\n<li>Pause, Play, and adjust the playhead position</li>\n</ul>\n<p>This can be done either over a network, or via a local serial connection.  The core feature of the HackerLights controller is full-motion, full-color light patterns.  Patterns can be of unlimited length, and are stored uncompressed and run at 30 frames per second.## How I built it</p>\n<h2>Challenges I ran into</h2>\n<p>We primarily used C and C++ programming which we are comfortable with, but ran into problems such as how you get around circular dependency errors.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>No magic smoke.</p>\n<h2>What I learned</h2>\n<p>During Ram Hacks, we learned how to build and and debug an API from scratch and the various tools available to programs to simplify such design.</p>\n<h2>What's next for Hacker Lights</h2>\n<p>The next step for Hacker Lights is to create more examples and tutorials on using the new Hacker Lights API. By creating more examples and documentation for the new API, we will be able to build and improve on the design we came up with this Hackathon.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">c-and-c++</span></li><li><span class=\"cp-tag\">qt-creator-ide</span></li></ul>\n</div>\n</div>", [""]], ["lemonkey", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>README for goldstar</h1>\n<p>it is web app that determine gender and age from photos. \nyou can easily upload a photo to this web and it will response with gender and age. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag\">apacheconf</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/kerocode/lemonkey\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/kerocode/lemonkey\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["OneCheck", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"OneCheck \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/289/690/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"OneCheck \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/289/691/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"OneCheck \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/289/692/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"OneCheck \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/289/693/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"OneCheck \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/289/694/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Inspired by Capital One and Cap Tech's challenges, the team focused on making a user friendly app that will help college students make immediate and smart buying decisions.</p>\n<h2>What it does</h2>\n<p>This android application takes customer data provided by the Capital One API such as current balance and recent purchases. This data is used to help decide whether or not the purchase of an item is a financially sound decision.   </p>\n<h2>How I built it</h2>\n<p>The application gets the customers data from the Nessie API. This data is used to instantiate a customer object. The user inputs data about the item they are considering buying and this is used to create an item object such as its price and its level of necessity. The item's necessity level is used to calculate a spending cap based on the amount in the customers balance.</p>\n<h2>Challenges I ran into</h2>\n<p>The main challenge that the group faced is getting all of the class files and the API to work together and share the data. Another challenge we face was getting the GUI set up to work and coincide with what goes on behind the curtains. </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Accomplishments that I am proud of bring using software design fundamentals such as UML's to design the core features and requirements for our app. As well staying openminded and flexible to pivot our original relativily common\napp to a creative niche tailored app. Working with developers of varying talents and skill sets from designers to java developers.</p>\n<h2>What I learned</h2>\n<p>What I learned how to work with other developers sharing code, ideas, and bugs.</p>\n<h2>What's next for OneCheck</h2>\n<p>Whats next for OneCheck? Build an advice algorithm factoring balance, recent and future expenses, item value, and item type. Build own API to rate a wide range of products, scan barcodes.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag\">api-nessie</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/phantompunk/OneChecks/\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/phantompunk/OneChecks/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Age Verification", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>Our age verification system uses bar code scanning technology on Android to check if a government issued driver's license indicates that a user is of 21 years of age. We demo the app with a web application and a Parse back end so we were quickly able to emulate the real problem that Altria faces. For a user to log on to a website that contains information about cigarettes or other related tobacco products, they must first provide that they are 21. After creating an account on the website, the user utilizes the Android app to scan and verify that they are of age. If the user is of age, the app then queries Parse for the username and if it exists, update the flag that indicates that they are 21. Afterwards, a user can simply use their regular username and password to log into the website every time.</p>\n<p>Our team had very minimal Android experience, so creating an app with bar code scanning technology was challenging. Nonetheless, we have provided a very strong proof of concept that not only the technology works, but that it can be a viable solution for a company such as Altria.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/parse\">parse</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li></ul>\n</div>\n</div>", ["", "", ""]], ["Convoy", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Convoy \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/289/702/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Convoy \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/289/719/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Convoy \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/289/720/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Traveling together to different hackathons throughout Virginia we realized that we needed something to help us all stay together and arrive at the same place along with letting each other know what we were doing on the road.</p>\n<h2>What it does</h2>\n<p>Convoy is the next generation of travel companion apps. Convoy will allow you to create a \"Convoy\" with whomever has the app and send locations to each other for easy navigation. You will also be able to send notifications such as rest stops needed and also food needed on long trips and have it re route you to the destination and notify all of your \"Convoy\".</p>\n<h2>How I built it</h2>\n<p>We used android studio, Parse, Google Services API and the Google Maps API.</p>\n<h2>Challenges I ran into</h2>\n<p>Java, Android, Parse, Google Cloud Messaging.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Being able to create a companion travel app that we will be able to use for future road trips together.</p>\n<h2>What I learned</h2>\n<p>Google API's, Parse, Android Stuidio</p>\n<h2>What's next for Convoy</h2>\n<p>Better routing, making improvements using waypoints and tracking live GPS movement of friends during travel. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/parse\">parse</a></span></li></ul>\n</div>\n</div>", ["", "", ""]], [" A Better Way to Age Verify", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Basic Concept</h2>\n<p>The best way to perform age verification online is through photos. Users would be required to send several photos for verification (the licenses should be shot completely straight, not at angle):</p>\n<p><strong>1 of the back of a US Driver's license (no flash)</strong>\n<strong>2 of the front of a US Driver's license (one without flash and one with)</strong></p>\n<p>The system would then use:</p>\n<ul>\n<li>OCR to read the date of birth</li>\n<li>QR/Bar-code reading to verify date of birth, and additional OCR to verify other information (The Bar/QR-Code should completely match name/height/eye-color, etc.</li>\n<li>Algorithms, maybe machine-learning based via neural networks to check for the security features unique to each state's driver licenses. (Each state will have multiple, accounting for over21(landscape) / under21(portrait) as well as redesigns.)</li>\n<li>Additional algorithms to compare specularity of a real ID to that measure online via help with the photo with flash and the photo without. (Would need to be aware of possible differences in the flash of different phones)</li>\n<li>Last, the Name on the ID will be matched to the name on the credit card being used to purchase whatever age-restricted material is being bought by the customer. If there is nothing being bought, the credit-card verification can be omitted at the cost of assurance against false-positives/negatives.</li>\n</ul>\n<p><strong>Advantages of this method</strong>:</p>\n<ul>\n<li>Lots of work up front but rarely needs to be updated/changed afterwards.</li>\n<li>Availability most people have smartphones with camera/flash.</li>\n<li>Robust</li>\n<li>Crowdsourcing through sites like amazon mechanical turk could be used for training data to help fine tune the machine-learning algorithms.</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/machine-learning\">machine-learning</a></span></li><li></li></ul>\n</div>\n</div>", [""]]]