[["HelloWorld", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>TrackMaster</h1>\n<p>A dope/lit/famified music playlist maker</p>\n<p>It was quite challenging melding together all of the different APIs to develop the search parameters for this project, but what we submitted is nearly complete.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Chris-Coraggio/HelloWorld\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Chris-Coraggio/HelloWorld\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Stack Smashing", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Stack Smashing</h2>\n<p>Jordan, Jordan, Killian</p>\n<h2>About the Project</h2>\n<p>Stack Smashing is a game. A fast-paced two-player fighting game.The players are squares pitted against each other in a brutal fight to the death. Everything is on the line, they even have to sacrifice their body to win.</p>\n<h2>How We Built It</h2>\n<p>We used to LWJGL (graphics library downloaded from the internet) to create all the graphics. We used Killian's custom-made Java Game Engine (previously coded)  to simplify a lot of the rendering and to build off of. We used\nthe JOML math library for many math functions. Everything outside of rendering was done by creating and coding the\nappropriate classes. The World class brought together all the objects so they could interact.</p>\n<h2>Controls</h2>\n<p><strong>Player 1</strong>\nWASD - Jump/Left/Slam/Right\nQ - Beam shot\nE - Explosion\nDouble-tap A/D - Dash</p>\n<p><strong>Player 2</strong>\nIJKL - Jump/Left/Slam/Right\nU - Beam shot\nO - Explosion\nDouble-tap J/L - Dash</p>\n<h2>Instructions</h2>\n<p>Your goal is to shrink the opponent's size. To accomplish this, you can use beam attacks, explosion attacks, \ndashes, or slams to damage your opponent. However, you will also take a small amount of damage back if you\nuse the beam or explosion attacks. The last one standing wins!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/JordanR159/HelloWorld2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/JordanR159/HelloWorld2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Apollo", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Firechat app got us to think about creating a peer-to-peer messaging app. We started by using WiFi P2P but then could not figure out how to send messages between devices. We then switched to Bluetooth messaging</p>\n<h2>What it does</h2>\n<p>Turn on your Bluetooth and have your buddy do the same and connect via Bluetooth and start chatting with the Apollo app.</p>\n<h2>How I built it</h2>\n<p>We found for Bluetooth connecting and added in code to send messages and then listen for messages, then changed up the UI with the high-quality UI we made.</p>\n<h2>Challenges I ran into</h2>\n<p>WiFi P2P API for Android was hard to understand and sending and receiving messages was just about impossible.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Was able to connect two devices through WiFi P2P (later got removed), Made a cool UI with high-quality 9Patches, </p>\n<h2>What's next for Apollo</h2>\n<p>Expand Apollo to use P2P instead of Bluetooth. This will increase the distance you can be between users, it would also allow for group sending messages. Also to be able to support files, that way you can send more than just text but also some cool picture.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xml\">xml</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/structurr/Apollo\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/structurr/Apollo\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the UI and integrating the backend and the frontend to complete the project", "I worked on research for WiFI P2P connections, and alternative methods to implement them into the app. Also, I created mini tasks to stay on track throughout the project and brainstormed ways to complete them.", "I worked learning and developing the connection between two devieces using both WiFiP2P and Bluetooth. As well as finding out how to send a message between the two devices. Also created the app icon.", "I worked on learning and developing the connection between two devices over P2P and bluetooth"]], ["CelebFinder", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>Has it ever happened that you were watching Netflix or YouTube and you come across an actor or famous person who you don't recognize? And you had to go through the entire cast list and then google everyone's pictures to see if you got the right one (Many times there isn't a cast list)? And then probably go to their Wikipedia page and learn more about them? NOT ANYMORE!! </p>\n<h2>What it does</h2>\n<p>CelebFinder easily spots and recoginzes the celebrities on your webpage just by facial recognition. It even pulls up an introduction about the person. </p>\n<h2>How I built it</h2>\n<p>Using angular, CelebFinder takes a screenshot of the user's webpage. The image is then processed and using the Microsoft Computer Vision API, recognizes all the celebrities. Chrome Extension Browser Action then shows more information of all the famous people including more pictures, a brief introduction, and links to their profiles on Wikipedia. </p>\n<h2>Challenges I ran into</h2>\n<p>Handling asynchronous from multiple APIs.\nIntegrating Angular code with Node.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We were able to integrate all the APIs with our server and successfully made our web app run. </p>\n<h2>What I learned</h2>\n<p>We learnt how to call APIs, make a node server and integrating Angular code with Node. </p>\n<h2>What's next for CelebFinder</h2>\n<p>Publish on Chrome App store\nMake it a Mobile app</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag\">angualr</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/SchedulrPurdue/HelloWorld\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/SchedulrPurdue/HelloWorld\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Developed the front-end in AngularJS and contributed to the REST API server written in Node.JS", "I worked on node.js for the first time. I created a server on node.js and created my own api to scrape information about a celebrity from their wikipedia page.", "", ""]], ["Life Alert Version 21", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<h2>What it does</h2>\n<h2>How we built it</h2>\n<h2>Challenges we ran into</h2>\n<h2>Accomplishments that we're proud of</h2>\n<h2>What we learned</h2>\n<h2>What's next for Life Alert Version 21</h2>\n<h2>There's a BAC calculator, list of critical symptoms of alcohol poisoning, button to automatically call 911, and list of suggestions if your friend is too sick at the moment</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["OnTime", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>This hackathon</p>\n<h2>What it does</h2>\n<p>All the things</p>\n<h2>How we built it</h2>\n<p>Android Studio</p>\n<h2>Challenges we ran into</h2>\n<h2>Accomplishments that we're proud of</h2>\n<h2>What we learned</h2>\n<p>Honestly erethang</p>\n<h2>What's next for OnTime</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/masonw73/OnTime\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/masonw73/OnTime\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["StudyAlert", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>David's Idea</p>\n<h2>What it does</h2>\n<p>Alerts user with study questions periodically</p>\n<h2>How we built it</h2>\n<p>With Android Studio</p>\n<h2>Challenges we ran into</h2>\n<p>Creating/Implementing UI elements</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Contains code to set test dates and increase frequency of stacks based on proximity to date</p>\n<h2>What we learned</h2>\n<p>Lots</p>\n<h2>What's next for StudyAlert</h2>\n<p>Lord knows</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/carr63/studyalert\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/carr63/studyalert\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["MyMovieList", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Each one of us in the team has always wanted a simple and easy way to track the movies/TV Shows that we've watched and get the information from a reliable database like iMDB. That is exactly what led to the creation of MyMovieList!</p>\n<h2>What it does</h2>\n<p>The user inputs a search and then the website searches the iMDB database for potential results and displays them. Then, the user has the option to add a movie out of the results into the table down below. It even links to the original iMDB page. It's as simple as that!</p>\n<h2>How I built it</h2>\n<p>We used Javascript and jQuery to do most of the coding while using HTML and CSS to make the webiste look pretty. We used an iMDB API to request infromation from the iMDB database. </p>\n<h2>Challenges I ran into</h2>\n<p>We were all relatively new to Javascript and jQuery so learning the basics of the language took up quite a lot of time. We also wanted to implement a backend with Java but we cancelled that idea because of the complexity of linking Java and HTML.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We're proud of the fact that we made a website that gets data from iMDB, arguably the world's best database for movies and TV Shows. This is very useful in daily life and is super convenient. </p>\n<h2>What I learned</h2>\n<p>We learned a lot about team work and obviously learnt new languages which will definitely be helpful in our future!</p>\n<h2>What's next for MyMovieList</h2>\n<p>Set up a server with a backend so that lists can be saved on it.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/imdbapi-org\">imdbapi.org</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Maestorme/MyMovieList\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Maestorme/MyMovieList\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I was initially in charge of writing the backend through Java, but that portion ended up being scrapped for the final product.  I did help contribute somewhat with the layout and general design of the movie list.", "", "", ""]], ["tipCalculator", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"tipCalculator \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/935/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"tipCalculator \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/936/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>tipCalculator</h1>\n<p>I'm interested in learning more about Swift and iOS development, so I followed a tutorial on MakeSchool that created a tip calculator! I added some comments, logic, the app icon, and some other visual changes to continue to mess around with Xcode and learn Swift.  The messages that are displayed when you select a tipping percentage are designed to push a user to tip the higher amount in order to address the problem of under-tipping waitstaff in the restaurant industry.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/zacharyjohnson/tipCalculator\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/zacharyjohnson/tipCalculator\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Dogstagram", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Everyone loves dogs. Everyone likes sharing pictures. Logical conclusion?</p>\n<h2>What it does</h2>\n<p>It allows users to submit photos of their canine companions and have others rate and comment.</p>\n<h2>How I built it</h2>\n<p>We created the mobile app with Android Studio and the server requests with Parse</p>\n<h2>Challenges I ran into</h2>\n<p>It was very difficult to upload photos to the server. We also ran into problems when making the mobile client. We had some sucessful server communication, but time constraints and technical difficulties prevented us from finishing out app</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We are proud of the server communication that does exist. You can sign up and then log in with your credentials.\nAlso, we have a mock dog description page that is fully functional sans retriving and sending data</p>\n<h2>What I learned</h2>\n<p>Over the weekend, we learned a lot about server communication and Android development in general. We feel like our second attempt at an app will be a lot more successful.</p>\n<h2>What's next for Dogstagram</h2>\n<p>The obvious next step would be to learn more about client server communications. With that knowledge, we would be able to create a seamless user experience that we envisioned.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/parse\">parse</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/whetfire/Dogstagram\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/whetfire/Dogstagram\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the under the hood operations of the app. I set up the server with Parse and deployed it to Heroku. I also helped the front end of the app with authentication.", ""]], ["VNConnect", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"VNConnect \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/900/datas/gallery.jpg\"/>\n<p>\n<i>The Web App</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>VNConnect</h1>\n<p>I use TeamViewer in my work as an IT consultant. It is very expensive and closed-source. I want something that rivals the functionality of TeamViewer and doesn't wreck my bank account.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/shell\">shell</a></span></li><li><span class=\"cp-tag\">sweat</span></li><li><span class=\"cp-tag\">blood</span></li><li><span class=\"cp-tag\">red-bull</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/techdev5521/Not-Just-Computer-Services---TeamViewer-Replacement\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/techdev5521/Not-Just-Computer-Services---TeamViewer-Replacement\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["SVG Animation", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/xzzPCdStfiE?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"SVG Animation \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/970/datas/gallery.jpg\"/>\n<p>\n<i>Animation of my name</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>I was planning on building a personal website at this hackathon when I started playing around with SVG animations. An svg is a vector format image that does not lose resolution as its size is increased. In addition, the file is saved as xml text, so the data can be directly copied into an html file, and it will render perfectly. This also means that SVG images can be controlled by CSS styling and Javascript, leading to some really cool possibilities.</p>\n<h2>What it does</h2>\n<p>This is a small javascript program that can write out svg text, mimicking human brush strokes. It is mostly an appealing animation, with some complex logic for creating the brush strokes in the correct order and direction.</p>\n<h2>Challenges I ran into</h2>\n<p>Since English has no defined rules for brush stroke order when drawing characters, it was very difficult to create a logical rule that could be applied to any letter. Almost everything I came up with had some exceptions. In addition, SVG animations with the Snap SVG library are asynchronous, and run completion handlers when they finish. I attempted to loop through each letter and place the code to animate the second stroke in the completion handler of the first. However, by the time that code ran, the loop had completed and all of the variables I passed in were out of scope. To combat this, I had each animation recursively call the next, creating a responsive and properly timed animation.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag\">snapsvg</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/adobe-illustrator\">adobe-illustrator</a></span></li></ul>\n</div>\n</div>", [""]], ["MyAnime", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Present </p>\n<h2>What it does</h2>\n<h2>How we built it</h2>\n<h2>Challenges we ran into</h2>\n<h2>Accomplishments that we're proud of</h2>\n<h2>What we learned</h2>\n<h2>What's next for MyAnime</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jsoup\">jsoup</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/sripathm22/MyAnime\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/sripathm22/MyAnime\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I helped search and gather several of the links we used to hyperlink the user to their favorite anime characters and episodes. I learned how Java can be used to filter characters.", "", ""]], ["Connect2048", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We had a realization that our childhood was being forgotten and that the golden days when, as kids, we played actual games, the greatest of which is without a shred of a doubt Connect4. We also realized that we could bring back our cherished childhoods by bringing Connect4 into our tech obsessed society. We asked ourselves, how could this gargantuan task be accomplished, and the answer seemed obvious, 2048 and..... twitter. Thus, after countless hours of toiling away at our screens, the greatest game of all time was born, Connect2048</p>\n<h2>What it does</h2>\n<p>It is a crossover game between Connect4 and 2048 that also integrates Twitter's API to display tweets with the hashtags Connect4 and 2048.</p>\n<h2>How we built it</h2>\n<p>Sugar, spice, and everything nice.</p>\n<h2>Challenges we ran into</h2>\n<p>Evil</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Twitter integration with live updates that displays tweets with the hashtags Connect4 and 2048.</p>\n<h2>What we learned</h2>\n<p>Where there's a will, there's a way</p>\n<h2>What's next for Connect2048</h2>\n<p>Snapchat and facebook integration</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n</div>", ["", "", "", ""]], ["myPurdue Planner 2.0", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/GJCQ6gvSJ_s?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"myPurdue Planner 2.0 \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/351/datas/gallery.jpg\"/>\n<p>\n<i>Sign in page</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"myPurdue Planner 2.0 \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/349/datas/gallery.jpg\"/>\n<p>\n<i>Authentication</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"myPurdue Planner 2.0 \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/344/datas/gallery.jpg\"/>\n<p>\n<i>Main Page</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"myPurdue Planner 2.0 \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/347/datas/gallery.jpg\"/>\n<p>\n<i>Pop up with all Purdue Classes</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"myPurdue Planner 2.0 \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/346/datas/gallery.jpg\"/>\n<p>\n<i>Purdue Classes in Workspace</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"myPurdue Planner 2.0 \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/345/datas/gallery.jpg\"/>\n<p>\n<i>Purdue Classes in Semester  1</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"myPurdue Planner 2.0 \u2013 screenshot 7\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/348/datas/gallery.jpg\"/>\n<p>\n<i>Purdue Classes in semester 6</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>As part of a CS19100 homework, we had to use the myPurdue Planner and we were very unhappy with the web app so we decided to change it.</p>\n<h2>What it does</h2>\n<p>Helps people design a 4 year plan quickly and easily with a pleasing UI design.</p>\n<h2>How we built it</h2>\n<p>We built it using Node.Js as the back end, Firebase as the database, used Angular.Js to make the front end pretty and work.</p>\n<h2>Challenges we ran into</h2>\n<p>Random bugs like the drag and drop not working. We also had the problem of only one person actually knowing Angular.Js and the rest of us were just learning as we go.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are proud that our app works, that there is authentication and you can login again and still have all of your classes in the correct semesters.</p>\n<h2>What we learned</h2>\n<p>We learned how projects actually come together and how much collaboration goes into a web app. We also learned new languages.</p>\n<h2>What's next for Hello-World</h2>\n<p>We hope to come back next year and help be mentors for the second annual Hello-World Hackathon. We hope through this hackathon that we can inspire and help next year's freshman at least as much as the current mentors have helped us.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/angular-js\">angular.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/parthsdoshi/MyPurdue-Planner-2.0\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/parthsdoshi/MyPurdue-Planner-2.0\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the html and worked on the css to make sure everything looks nice.", "I worked on front end with bootstrap and html. I had littlle experience with web dev beforehand, so I learned a lot of web dev basics.", "I worked on polishing the front-end and creating images for the site.  It was my first time using html and bootstrap, but I learned a lot!", ""]], ["aQuaFlora", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"aQuaFlora \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/272/datas/gallery.jpg\"/>\n<p>\n<i>Logo</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"aQuaFlora \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/395/datas/gallery.jpg\"/>\n<p>\n<i>Home</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"aQuaFlora \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/397/datas/gallery.jpg\"/>\n<p>\n<i>Image Detection</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"aQuaFlora \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/396/datas/gallery.jpg\"/>\n<p>\n<i>Data</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"aQuaFlora \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/394/datas/gallery.jpg\"/>\n<p>\n<i>About Us</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>What it does</h2>\n<p>It asks you for an image of a plant and your location. Then it uses the DarkSky API to get information about the weather at your location and the Microsoft Computer Vision API that recognizes the picture and then calculates how much (or not) you need to water your plant. Finally. it displays the information.</p>\n<h2>How we built it</h2>\n<p>We used Pyhton, HTML, CSS, Javascript and 3 APIs to code and recieve the correct information</p>\n<h2>Challenges we ran into</h2>\n<p>We couldn't use Java, so we had to learn Python and Flask from scratch.\nWorking with APIs and how to use them.\nBuilding the flask server initially.\nMicrosoft API\nUpload your own file button</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>The website is finished and works as well as it can.\nManaged to learn alot of Python and GIT.\nConverting location to co-ordinates and using that with the weather API.</p>\n<h2>What we learned</h2>\n<p>Python, Flask, how to use the terminal better, Pip, GIT, how to use APIs</p>\n<h2>What's next for aQuaFlora</h2>\n<p>Adding the ability to upload your own files (which we did in Java but couldn't do in Python)\nCreating an Android and/or IOS app.\nCalculate specifically for each plant (if possible)\nCalculating further into the future so we could know when next we need to water the plant.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/ShauralP/aQuaHeroku\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ShauralP/aQuaHeroku\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"http://aquaflora.herokuapp.com/\" rel=\"nofollow\" target=\"_blank\" title=\"http://aquaflora.herokuapp.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>aquaflora.herokuapp.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Tracket", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Tracket \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/367/datas/gallery.jpg\"/>\n<p>\n<i>View your filesystem</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Tracket \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/368/datas/gallery.jpg\"/>\n<p>\n<i>Take webcam pictures</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Tracket \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/379/datas/gallery.jpg\"/>\n<p>\n<i>Homepage</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Tracket \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/380/datas/gallery.jpg\"/>\n<p>\n<i>View what someone is typing on your computer</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>Tracket is a comprehensive anti-theft suite that allows the user to remotely control many aspects of their laptop. From a remote web interface, the user can: </p>\n<ul>\n<li>Take webcam pictures/ screenshots of their desktop</li>\n<li>Encrypt/decrypt all of their files</li>\n<li>View their filesystem</li>\n<li>View all keystrokes done on their system</li>\n<li>Send text to be spoken by the host computer</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/socket-io\">socket.io</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/opencv\">opencv</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/pygame\">pygame</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mysql\">mysql</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/dreamweaver\">dreamweaver</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/muse\">muse</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/photoshop\">photoshop</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://tracket.ga\" rel=\"nofollow\" target=\"_blank\" title=\"http://tracket.ga\">\n<i class=\"ss-icon ss-link\"></i>\n<span>tracket.ga</span>\n</a></li>\n<li><a href=\"http://github.com/tracket/tracket\" rel=\"nofollow\" target=\"_blank\" title=\"http://github.com/tracket/tracket\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on getting the webcam to work and send images (which took 4 libraries across 2 languages), as well as did research for other members of the team.", "I worked on the client-side backend to connect to the Nod.js server. I also worked on the remote file encryption feature as well as handling the main wrapper to call functions and transmit data.", "I worked on the front end web interface using socket.io and jquery to display the data on the site.", "I worked on the backend which communicated using Socket.io. I learned a lot about socket.io in the process tying multiple clients together through the Node.js server.", ""]], ["team-alpha", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"team-alpha \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/370/datas/gallery.jpg\"/>\n<p>\n<i>GIF of Java Applet</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"team-alpha \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/376/datas/gallery.jpg\"/>\n<p>\n<i>JPEG of Website</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>team-alpha</h1>\n<p>Purdue HelloWorld Hackathon 2016</p>\n<p>Our initial board design was as featured below.\n<a href=\"http://business.in.com/media/images/2010/Feb/img_20712_pacman_game.jpg\" rel=\"nofollow\">http://business.in.com/media/images/2010/Feb/img_20712_pacman_game.jpg</a></p>\n<p>The Java applet and all the Java source code is in the master-branch, in the Pacman 3.0 folder. Download all the files (in particular, the srs folder) within Pacman 3.0, and run through an IDE such as Eclipse.</p>\n<p>The website built to house this application is in the master-branch, as a textfile. Download as a .html and run through a browser such as Google Chrome.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/photoshop\">photoshop</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Chiranth7954/team-alpha\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Chiranth7954/team-alpha\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["ConnectMore", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>It was a creative idea for a game with three players. We thought that making it around connect four would be achievable.</p>\n<h2>What it does</h2>\n<p>It accepts the input from the different users based on buttons. It then updates an array that represent the board and does the appropriate math to rotate the gravity and updates the array accordingly.</p>\n<h2>How I built it</h2>\n<p>We initially planned on doing an Android App, so the backend board was built with Java. We decided that doing it in iOS would teach us more, so we switched to that. We had to translate the backend we'd already made to swift and then build the GUI. </p>\n<h2>Challenges I ran into</h2>\n<p>Using swift, since none of us had experience with it.\nMaking a GUI from scratch.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Rebuilding the backend in swift successfully.\nMaking a usable GUI.\nThe algorithm for updating the board.</p>\n<h2>What I learned</h2>\n<p>How to use swift.\nA lot about GUIs.</p>\n<h2>What's next for ConnectMore</h2>\n<p>It needs a lot of polish and a tiny bit of bug fixing. Long term, if we can finish it on iOS, we might port it to Android.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/pravin-sivabalan/ConnectMore\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/pravin-sivabalan/ConnectMore\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["StudyTables", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"StudyTables \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/330/datas/gallery.jpg\"/>\n<p>\n<i>Shows invalid credentials.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"StudyTables \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/331/datas/gallery.jpg\"/>\n<p>\n<i>Shows successful login. Still need to make the other activities and switch activities here.</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>StudyTables</h1>\n<p>StudyTables is an app that allows users to create and join one-time study \"Tables\" at their university.\nUsers just register an account with a username, password, and university, and all of the Tables currently\nregistered with the app can be viewed and joined. They can also create their own Tables!</p>\n<p>A Table contains the following information: The location, date and time where members will meet, a class to study for\n(or just meet in general), the university it's at, as well as all of the members.</p>\n<p>Profiles of other viewers are also viewable. Profiles contain an image, a short bio, the username, real name, and a list\nof their friends.</p>\n<h2>Progress</h2>\n<pre class=\"language-nolang\"><code>Backend server: done\nServer authentication: done\nApp API interface: done\nApp login activity: done\nApp register activity: not started\nApp table activity: not started\nApp profile activity: not started\n</code></pre>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/bienzaaron/StudyTables\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/bienzaaron/StudyTables\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I took most of the time on this project creating the backend. It was my first time using node(or javascript in general) so the task was slightly daunting. If I wouldn't have spent so much time working on the backend I would've been able to complete the app (and make it look better), so next time I'll look for a team and we can divide up the work."]], ["RPG Character stat generator", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"RPG Character stat generator \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/328/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"RPG Character stat generator \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/329/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>This project originally started as an implementation for a group project but the rest of the group did not want to submit their part because they felt it wasn't presentable.</p>\n<h2>What it does</h2>\n<p>It returns a value for a character name and five different attribute points for use in some kind of game.</p>\n<h2>How I built it</h2>\n<p>I used Zelle's graphic library in python to make different windows, buttons, and entry functions.</p>\n<h2>Challenges I ran into</h2>\n<p>I ran into many challanges because I did not know much about the Python graphics library.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I'm proud of the fact that I have taken user input in a seperate window than the shell I used to code.</p>\n<h2>What I learned</h2>\n<p>I learned a lot about the graphics library in Python and what it takes to be a true coder.</p>\n<h2>What's next for RPG Character stat generator</h2>\n<p>Probably nothing unless I ever decide to implement it in an actual game.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">idle</span></li></ul>\n</div>\n</div>", [""]], ["Purdue Eats", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Purdue Eats \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/904/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Purdue Eats \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/905/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Purdue Eats \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/906/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Purdue Eats \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/907/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Purdue Eats \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/908/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Purdue Eats \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/911/datas/gallery.jpg\"/>\n<p>\n<i>If the selected food court is not serving during the specified time</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<h2>What it does</h2>\n<p>The user chooses a dining court, a meal time (i.e. breakfast), and his or her dietary restrictions (if any), and the program gives a list of all of the foods that he or she can eat at that dining court on that day during that meal time that satisfy all of the specified dietary restrictions.</p>\n<h2>How we built it</h2>\n<p>We first split the application into four parts; the GUI, the logo, a text file that has all of the food at each dining court on one specific day, and the classes that feed the GUI. After creating a long and complicated GUI, we simplified it into one page. We then added the functionality to refine the list of foods. After we got the application to work with a text file with example foods, we added compatibility with the Purdue Food Courts API, giving the user the actual current menus.</p>\n<h2>Challenges we ran into</h2>\n<p>One of our biggest challenges was figuring out how to use the Food Courts API with our Java application. After hours of internet searches and help requests, we were finally able to use it. We also found it difficult to style the application to our liking, but that was later fixed with a pre-designed style format that we added to the program.</p>\n<h2>Accomplishments that we are proud of</h2>\n<p>One of our biggest struggles was how to use the API for the food courts. After attending two talks about APIs and help request after help request, we finally created a method that achieved this.</p>\n<h2>What we learned</h2>\n<p>Through completing the project, we learned a lot about creating and editing a Java GUI.</p>\n<h2>What's next for Purdue Eats</h2>\n<p>One of the things we talked about adding was a way to rate each of the kinds of foods. Also, the layout that we use for our GUI makes the search refinement look awkward, so we may want to make that better.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/BFrydell/Hello-World\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/BFrydell/Hello-World\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I started to make an iPhone application that we ended up not even using, and I cleaned up the application by changing layouts and resizing panels.", "I did most of the front-end work making the GUI look good and function the way we needed in order to utilize the API", ""]], ["Bieever", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Bieever (pronounced \"beaver\") is an acronym for \"Best Image Editor Ever\". In our CS240 class, we did a lot of projects involving image manipulation, which inspired this image editor. We aimed to create a small, but useful desktop application for editing many common image formats.</p>\n<h2>What it does</h2>\n<p>Bieever allows for image manipulation through a slew of sliders that control global variables, such as brightness, contrast, sharpness, red, green and blue channel intensity. We also added implementation for cropping and rotating an image, as well as custom presets for global image manipulation that can be saved and loaded from the computer's hard drive.</p>\n<h2>How we built it</h2>\n<p>We created Bieever using Java and Swing GUIs. We handled global image manipulation through bit shift operations and multiplying byte values by a factor. We saved presets to text files with the extension .txt to differentiate them from other text files, then loaded to make global changes. Most of the operations were performed on a row-major matrix of each image's pixels.</p>\n<h2>Challenges we ran into</h2>\n<p>The GUI was difficult to accomplish. Members of the team were reluctant to use NetBeans' Swing GUI designer and as such used a default Swing template. We lament the lack of development of the user interface. We also wanted to add a saturation slider, but found that the math required converting RGB values to HSV, performing the necessary operation, then converting it back into the RGB color space. We ultimately decided against it in the interest of saving time. Java image manipulation is also a very resource-intensive process, and as such requires a powerful computer.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>The Bieever development team is proud to have created an application that demonstrates our understanding of bit operations and how they relate to image processing. We are also proud that we created a team that could work togethger to understand and achieve a common goal.</p>\n<h2>What we learned</h2>\n<p>The Netbeans Swing editor would have been very helpful to use. We also learned how to process and save images and use Java's built-in methods relating to images.</p>\n<h2>What's next for Bieever</h2>\n<p>Code optimizations, an improved GUI, and a port to a more graphically-efficient language like C++ will greatly improve the usability and speed of Bieever.</p>\n<h2>How to use</h2>\n<p>You can load an image into Bieever using File&gt;Open and select an image file. You can then use the sliders on the right hand side of the screen to make modifications to the image. To crop, click the \"Crop\" button, select opposing corner, then click \"Crop\" again to confirm. This will display a preview of the crop; making further adjustments will revert it to the original. Save it using File&gt;Save to keep the crop. Completed images will be stored in your user/workspace/Bieever folder.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag\">swing</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/DanielKrolopp/Bieever\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/DanielKrolopp/Bieever\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I created the preset feature as well as the crop tool. I contributed to the rotate tool as well.", "I made the GUI and handled the implementation of the file objects from other group members as they completed the sliders, presets, crop, etc. I also helped with bugfixing since my job was relatively easy", ""]], ["Gyro Breakout", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Gyro Breakout \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/256/datas/gallery.jpg\"/>\n<p>\n<i>Tap!!</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Gyro Breakout \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/257/datas/gallery.jpg\"/>\n<p>\n<i>:(</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Gyro Breakout \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/258/datas/gallery.jpg\"/>\n<p>\n<i>:D</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Gyro Breakout \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/259/datas/gallery.jpg\"/>\n<p>\n<i>Intense gameplay!</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>You know how easy it is to find Pokemon Go players? There's that really distinct circular-into-a-swipe motion. I thought it would be fun to make a game that makes it easy for other people to know what you're playing. I hope to see groups of students on campus wobbling their phones around like crazy in the coming weeks.</p>\n<h2>What it does</h2>\n<p>Breakout is an old arcade game which is kind of like single person Pong. It's just that, with no extra frills or special mechanics.</p>\n<h2>How I built it</h2>\n<p>Made using Processing-Android.</p>\n<h2>Challenges I ran into</h2>\n<p>The collision system was a nightmare since doing algebra on little sleep always ends in disaster. I re-wrote my collision detection algorithm 3 or 4 times.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I love the screen shake and vibration effects. It really gives the game some physical \"weight\".</p>\n<h2>What I learned</h2>\n<p>I learned a ton about the control systems for basic games. For most of the weekend, I was just patching on new features without really thinking about the whole structure, which lead to some problems with the lives / game restart mechanics. Next time I think I can make a much smoother internal engine that's easy to change and modify.</p>\n<h2>What's next for Gyro Breakout</h2>\n<p>Next I want to try out stuff like powerups and maybe add some filters to make the game look cooler. The background is only a black screen, so there's a lot to work on. For future gesture based mobile games, I want to try something where you're flicking and slashing your phone in the air. Who knows?</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/processing\">processing</a></span></li><li><span class=\"cp-tag\">ketai</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/whetfire/breakout\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/whetfire/breakout\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["FridgeD", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"FridgeD \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/094/datas/gallery.jpg\"/>\n<p>\n<i>List of Food</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"FridgeD \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/097/datas/gallery.jpg\"/>\n<p>\n<i>Adding New Item</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Wanted to make app to make cooking and food management easier</p>\n<h2>What it does</h2>\n<p>Keeps track of your food of course!</p>\n<h2>How I built it</h2>\n<p>Android Studio, Git</p>\n<h2>Challenges I ran into</h2>\n<p>Learning to switch between activities, update ViewList, add buttons to toolbar, team collaboration, and connecting to API.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>App is clean, and able to switch between activties with no troubles and be able to update list based on Array List.</p>\n<h2>What I learned</h2>\n<p>How to switch activites, add new buttons to toolbar, and lots more.</p>\n<h2>What's next for FridgeD</h2>\n<p>API support to give you recipes on what food you can make</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/git\">git</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/github\">github</a></span></li><li><span class=\"cp-tag\">api</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/DevinSova/FridgeD\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/DevinSova/FridgeD\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Find Food Friends", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Find Food Friends \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/898/datas/gallery.jpg\"/>\n<p>\n<i>main page</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Find Food Friends \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/897/datas/gallery.jpg\"/>\n<p>\n<i>choose by category or by gender and age</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Find Food Friends \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/899/datas/gallery.jpg\"/>\n<p>\n<i>choose dinning court or restaurant</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Find Food Friends \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/040/datas/gallery.jpg\"/>\n<p>\n<i>show up dinning court with number of seats available</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Find Food Friends \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/033/datas/gallery.jpg\"/>\n<p>\n<i>show restaurant at nearby area</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Find Food Friends \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/035/datas/gallery.jpg\"/>\n<p>\n<i>YOLO main page</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Find Food Friends \u2013 screenshot 7\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/034/datas/gallery.jpg\"/>\n<p>\n<i>yolo again</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Find Food Friends \u2013 screenshot 8\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/036/datas/gallery.jpg\"/>\n<p>\n<i>yolo again</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Find Food Friends \u2013 screenshot 9\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/037/datas/gallery.jpg\"/>\n<p>\n<i>yolo again</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Sometimes I don't know what to eat or no one is interested in the restaurant I'm going</p>\n<h2>What it does</h2>\n<p><strong>bold</strong> 1. Choose restaurant randomly by clicking a button. \n<strong>bold</strong> 2. Show restaurant near by and how many seats left in dinning courts.\n<strong>bold</strong> 3. Pick people to eat with by gender and/or age.(Under construction)</p>\n<h2>How I built it</h2>\n<p>Using android-studio with google map api + volley api to communicate with php server.</p>\n<h2>Challenges I ran into</h2>\n<p>How to send request and decode messages send back from server.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Figure how to set up connection between server and android devices</p>\n<h2>What I learned</h2>\n<p>How to create an android app using android-studio</p>\n<h2>What's next for Find Food Friends</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag\">xampp</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/axer0310/FindFoodFriends.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/axer0310/FindFoodFriends.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["BoilerNutrition", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We like food.  You like food.</p>\n<p>Let's try to not eat too much food.</p>\n<h2>What it does</h2>\n<p>It tells you what to eat to hit your caloric intake goals.</p>\n<h2>How we built it</h2>\n<p>Some javascript backend with some basic html and jquery</p>\n<h2>Challenges we ran into</h2>\n<p>Ranking food based on nutrition value</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>It works!  We got some libraries working on our first ever web application!  </p>\n<h2>What we learned</h2>\n<p>Web programming is difficult and takes time to get good at.  </p>\n<p>We got a lot of good introduction to programming in javascript with some really good libraries.</p>\n<h2>What's next for BoilerNutrition</h2>\n<p>Polished front-end with expanded backend data analysis.  Maybe a mobile app in the far future.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag\">superagent</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag\">underscore</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/lucastao/BoilerNutrition\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/lucastao/BoilerNutrition\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["HexagonalGameOfLife", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/04mhRZwqnQM?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"HexagonalGameOfLife \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/426/328/datas/gallery.jpg\"/>\n<p>\n<i>Main webpage</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"HexagonalGameOfLife \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/307/datas/gallery.jpg\"/>\n<p>\n<i>Star loop</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"HexagonalGameOfLife \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/427/369/datas/gallery.jpg\"/>\n<p>\n<i>Flier</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>The Hexagonal Game Of Life</h1>\n<p>This is a project for Hello World 2016, Purdue's Freshman Hackathon. This is a simulation of a hexagonal modification to John Horton Conway's game of life.</p>\n<h2>Built With</h2>\n<ul>\n<li>HTML - Markup Language</li>\n<li>CSS - Style Sheet Language</li>\n<li><a href=\"https://www.javascript.com/\" rel=\"nofollow\">JavaScript</a> - Programming Language</li>\n</ul>\n<h2>Authors</h2>\n<ul>\n<li><strong>Arun Arjunakani</strong>  - <a href=\"https://github.com/arunarjunakani\" rel=\"nofollow\">arunarjunakani</a></li>\n<li><strong>Samuel Ingram</strong>  - <a href=\"https://github.com/VoxelrSam\" rel=\"nofollow\">VoxelrSam</a></li>\n<li><strong>Jarett Lee</strong>  - <a href=\"https://github.com/https://github.com/Owloid\" rel=\"nofollow\">Owloid</a></li>\n</ul>\n<h2>Acknowledgments</h2>\n<ul>\n<li>John Horton Conway for creating \"Conway's Game of Life\"</li>\n<li>Hexagons for making simple things much more interesting</li>\n<li>zackthehuman <a href=\"https://gist.github.com/zackthehuman/1867663\" rel=\"nofollow\">link</a> for the hexagons canvas drawing</li>\n</ul>\n<h2>Libraries used</h2>\n<ul>\n<li><a href=\"https://jquery.com/\" rel=\"nofollow\">jQuery</a></li>\n<li><a href=\"http://jscolor.com/\" rel=\"nofollow\">jscolor</a></li>\n<li><a href=\"http://rangeslider.js.org/\" rel=\"nofollow\">rangeslider</a></li>\n</ul>\n<h2>Final Note</h2>\n<p>This was our first hackaton and it was plain awesome. We learned a bunch and put in long hours to create this project. We are so happy to show off our project and we hope that we can continue making such cool stuff in the future.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://arunarjunakani.github.io/ModifiedGameOfLife\" rel=\"nofollow\" target=\"_blank\" title=\"https://arunarjunakani.github.io/ModifiedGameOfLife\">\n<i class=\"ss-icon ss-link\"></i>\n<span>arunarjunakani.github.io</span>\n</a></li>\n<li><a href=\"https://github.com/arunarjunakani/ModifiedGameOfLife\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/arunarjunakani/ModifiedGameOfLife\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the javascript in full-stack to have the hexagons behave correctly and the screen to update correctly.", "I mainly worked on the visual side of things including the page layout and making the graph to display what all happened in the code. ", ""]]]