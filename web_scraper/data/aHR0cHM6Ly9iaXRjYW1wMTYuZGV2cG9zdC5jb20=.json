[["Cranky Coaster", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>cranky-coaster</h1>\n<p>Drinking enough water is incredibly important, and yet it's too easy to ignore our bodies' needs. It's easy to underestimate how much water you actually need, and easy to say you'll drink more later. Introducing, Cranky Coaster! An intelligent coaster that uses a force sensitive resistor connected to an Edison to monitor how much water you drink. This data is then stored and compared to how much water you should be drinking. If you are continually drinking enough water, you'll automatically be praised on Twitter for your valiant efforts. Fail to drink enough water and you will be publicly shamed for everyone to know about your inability to take care of yourself! Additionally, we will <a href=\"https://github.com/Yustynn/cranky-coaster-sms/\" rel=\"nofollow\">text you</a> every hour to make sure you are acutely aware of your water consumption. We also have a <a href=\"https://github.com/everett980/cranky-coaster-web-viz\" rel=\"nofollow\">website for visualizing</a> your current day of water consumption in great deal, as well as a brief overview of the last five days of water consumption. Lastly, we built a <a href=\"https://github.com/Yustynn/CrankyCoasterIOS.git\" rel=\"nofollow\">native iOS</a> app with React Native so that water drinkers can quickly check in on their status and educate themselves if they ought to go for another sip of water. Cranky Coaster will ensure you take good care of yourself!</p>\n<p>Table 44</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/django\">django</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/intel-edison\">intel-edison</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongolab\">mongolab</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongoose\">mongoose</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/react\">react</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/react-native\">react-native</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/redux\">redux</a></span></li><li><span class=\"cp-tag\">immutablejs</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twitter\">twitter</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/d3-js\">d3.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/scss\">scss</a></span></li><li><span class=\"cp-tag\">webpack</span></li><li><span class=\"cp-tag\">babel</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/everett980/cranky-coaster\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/everett980/cranky-coaster\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/everett980/cranky-coaster-web-viz\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/everett980/cranky-coaster-web-viz\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/Yustynn/CrankyCoasterIOS.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Yustynn/CrankyCoasterIOS.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/Yustynn/cranky-coaster-sms/\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Yustynn/cranky-coaster-sms/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I made the mobile app, express.js API server, django API server, and hourly job runner. Also, I deployed both servers to Heroku. Pretty fun overall and it went much smoother than expected.", ""]], ["PeterPantry", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>PeterPantry: A magical way to tinker your culinary bell</h1>\n<p>PeterPantry is a software service that generates a comprehensive meal plan that\nobeys budgetary and preferential constraints.</p>\n<h1>Getting Started</h1>\n<p>Install python3, pip3, django. For more information reference the official\nDjango documentation.</p>\n<h1>Licensing:</h1>\n<p>PeterPantry is licensed under the MIT License. See LICENSE for the full\nlicense text.</p>\n<p>We're at table 35</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/jerrrytan/bitcamp\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/jerrrytan/bitcamp\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", "", ""]], ["Outly", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>Outly</h1>\n<p>Outly makes recommendations to Capital One customers about stores they would like to try. Since Capital One has data on their customers' financial situation and transaction history, they are in a unique position to make recommendations about future purchases, especially when that data on individuals is combined with the information Capital One has on its merchants, as well as Wolfram Alpha's macro data on the state of the economy. Outly combines all of these datapoints in a machine-learning algorithm to predict the kinds of stores that customers will like, allowing financial institutions like Capital One to help their customers in a new way.  </p>\n<h2>Inspiration</h2>\n<p></p><p>In April 2014, a report released by Ypulse stated that 63 percent would rather buy products from small businesses that offered fewer choices but innovated in its industry, than purchase something from a big brand with options but little innovation. <a href=\"https://www.ypulse.com/post/view/ypulses-predictions-for-2016\" rel=\"nofollow\">This trend</a> is an enduring and powerful factor in the positioning of companies in their markets, in advertising, and in innovating the next new standard for consumers.</p>\n<h2>What It Does</h2>\n<p>Outly is presented in a way that allows you to easily determine the best and worst places to launch a startup. Information about public transportation, local businesses, and crime information are all aggregated on a single map to give you a quick overlay of both historical and real-time information that will allow you to quickly decide where you want to launch a startup.</p>\n<h2>Challenges We Ran Into</h2>\n<p>We looked at Yelp data for cafes, restaurants, and other businesses. We used a combination of k-means (unsupervised learning) and SVM (supervised learning) clustering to compute geographic clusters of restaurants, cafes, and businesses, built a regression model using the most significant features in the data to predict success for a new business. Finally, we plotted all real estate listings in the neighbourhood, overlaid with our computed suggestions for good locations to start your new business.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/machine-learning\">machine-learning</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ibm-analytics-for-hadoop\">ibm-analytics-for-hadoop</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ibm-watson\">ibm-watson</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/django\">django</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/giving-impact\">giving-impact</a></span></li><li><span class=\"cp-tag\">data-mining</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/bryanchen18/Outtly\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/bryanchen18/Outtly\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["UMD Magnetic Stripe Research", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/PLh9ogvLb3E?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n</ul> </div>\n<div>\n<p><strong>TABLE 40</strong></p>\n<h2>Inspiration</h2>\n<p>We've always had twin interests in both security systems and low-level bit coding, so we went looking for some old hardware to hack on early Friday night. We found an old magnetic card reader-writer, and given that UMD continues to insist on using magnetic stripes instead of a more secure system like NFC, we figured there would be potential to exploit the system and gain unauthorized access. Along the way, we hoped to learn more about how magnetic data is stored on credit cards.</p>\n<h2>What it does</h2>\n<p>For the purposes of investigation, we implemented some simple C code that lets us access the reader and read and write pertinent information to one of the card's the tracks. We also added functionality to quickly copy cards for further research. We then attempted to find a way to manipulate the bits found on a standard student ID (copied onto a hotel room keycard) so that it would gain us access to unauthorized areas on campus.</p>\n<h2>How we built it</h2>\n<p>Once we had a basic way of changing bits, we needed a plan of action for exploiting the system. An <a href=\"https://www.cs.umd.edu/%7Ejkatz/THESES/ramsbrock.pdf\" rel=\"nofollow\">auditing paper</a> had previously been written prior to a major change in the system by UMD police, showing that a combination of <em>social security numbers</em> and student ID numbers were stored on the card with very little verification.</p>\n<p>Based on our research, the cards seem to be working off a serial number system, but there appears to be a simple salting process. By changing 4 bits, we think we've managed to gain an unauthorized card access to an unspecified campus building. ;)</p>\n<p>A large portion of the research was pencil-and-paper, although we used a few small machine learning classifiers to help us out when the amount of data got too huge to parse all on its own.</p>\n<h2>Challenges we ran into</h2>\n<p>Existing code for interfacing with USB devices was completely unusable, which meant we had to do a lot of the dev from scratch. The numbers on the card were also very difficult to understand.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>I aways enjoy getting low-level C working well, and rehabilitating the magnetic stripe reader could be useful in future projects (until they fully phase out the magnetic stripe because it's unsecure, anyway). The crypto part was fun as well, but there's no real pride in manipulating a salt, so we hope there's something more to it.</p>\n<h2>What we learned</h2>\n<p>In addition to one member learning a lot about C, we also learned a lot about both important crypto algorithms and the importance of total OpSec.</p>\n<h2>What's next for us</h2>\n<p>We need to fully understand what algorithm was being used, if not just to satiate our own curiosity, then to write up an audit report to UMD police.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c\">c</a></span></li><li><span class=\"cp-tag\">magnets</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/linux\">linux</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/machine-learning\">machine-learning</a></span></li><li><span class=\"cp-tag\">memes</span></li><li><span class=\"cp-tag\">the-4chan-api</span></li></ul>\n</div>\n</div>", ["Did a lot of the low-level C coding, did field research and testing (my partner doesn't go here, so...)", "Did a lot of the algorithmic analysis, research on past systems, suggested possible exploits of the code system."]], ["TuneCrypter", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>Find us at table 21!</p>\n<h2>Inspiration</h2>\n<p>My dream job is to combine my interests of CS, Criminal Justice, and forensics, and work in digital forensics one day, so I thought I'd take a crack at making my own steganography-like application! </p>\n<h2>What it does</h2>\n<p>This application has two layers of encryption: it is designed to take whatever text input you give it, hash it with an undisclosed algorithm, and conceal it within a music (.wav) file. On the other end, the decrypt takes the music file and the two keys (music and algorithm) and reveals the original message.</p>\n<h2>How I built it</h2>\n<p>I used the NAudio open source library to process the sound files, and Visual Studio to build the application and GUI in C#.</p>\n<h2>Challenges I ran into</h2>\n<p>NAudio and .wav formats in general were really difficult to understand and find documentation on, so a lot was trial and error to test my theories of how best to conceal a message without disrupting the original sound file too much.</p>\n<p>The implementation of encoding/decoding the music (and what exactly to /do/ with it) was extremely difficult due to how obscurely hard manipulating (and understanding) a .wav's elements are, especially as a newbie to the audio world. </p>\n<p>At one point, calling a print statement or concatenating a number would make the program slow to almost an infinite loop, while commenting it out made it work perfectly.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I did not use any outside references to come up with this idea nor implement it - except the NAudio API and related samples/tutorials that I referenced in order to properly learn the library.</p>\n<h2>What I learned</h2>\n<p>NAudio is quite expansive, and audio in general has a depth and complications to it that takes a very long time to understand. </p>\n<h2>What's next for TuneCrypter-bitcamp16</h2>\n<p>Further fine-tuning, research on better algorithms and efficiency. Figure out more about how .wav (and other audio formats) store/present their information, in depth this time.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/visual-studio\">visual-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag\">windowsformapplication</span></li><li><span class=\"cp-tag\">naudio</span></li><li><span class=\"cp-tag\">wave</span></li><li><span class=\"cp-tag\">wavefilewriter</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/net\">.net</a></span></li><li><span class=\"cp-tag\">audiointerface</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/victoriaz8/TuneCrypter-bitcamp16\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/victoriaz8/TuneCrypter-bitcamp16\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the C# encryption and decryption module.", ""]], ["Korrect.me", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Korrect.me \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/372/842/datas/gallery.jpg\"/>\n<p>\n<i>Logo</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Korrect.me \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/199/datas/gallery.jpg\"/>\n<p>\n<i>Webpage</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Korrect.me \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/210/datas/gallery.jpg\"/>\n<p>\n<i>Matlab WAV to MIDI &amp; Pitch Detector</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Displayed at Table #38 at Bitcamp on April 10th, 2016 / Won MatLab Sponsorship Prize</h2>\n<h2>Inspiration</h2>\n<p>We all love music and wanted to create an app around our passion for just that.</p>\n<h2>What it does</h2>\n<ol>\n<li>The user hums or sings a song into the recorder.</li>\n<li>The backend \"midi-izes\" the input and pushes out an output. The file recognizes different pitches from the original song.</li>\n<li>The backend brings out a midi file that is then played on the website, allowing for a switch to any instrument available.</li>\n</ol>\n<h2>How I built it</h2>\n<p>Matlab, html5, midi.js api</p>\n<h2>Challenges I ran into</h2>\n<p>Matlab does not play well with the internet. Python is much better.</p>\n<h2>What I learned</h2>\n<ul>\n<li>Daredevil main theme song has slowly become our <em>favorite songs</em></li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/matlab\">matlab</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://korrect.me\" rel=\"nofollow\" target=\"_blank\" title=\"http://korrect.me\">\n<i class=\"ss-icon ss-link\"></i>\n<span>korrect.me</span>\n</a></li>\n<li><a href=\"https://github.com/teddyhacks/teddyhacks.github.io\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/teddyhacks/teddyhacks.github.io\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Webcam RPS", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Webcam RPS \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/372/974/datas/gallery.jpg\"/>\n<p>\n<i>Neural network code, video feed, and responses to hand gestures detected.</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>This project uses MATLAB's Computer Vision toolbox as well as the Neural Networks toolbox to robustly recognize a hand in either a rock, paper, or scissor configuration.</p>\n<p>I collected data by applying a Gaussian convolution to captured images, and then detecting features by utilizing MATLAB's edge detection function. To reduce the number of points to analyze, the edge detection output was then run through Harris-Stephens corner detection from the Computer Vision toolbox. The image was then divided up into 16 equal sections, and the number of points detected in each section was summed. This data was used to train a neural network using <em>nprtool</em>. The neural network could then be used to interpret webcam input as rock, paper, or scissor, and the correct counter could be played by the computer.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/matlab\">matlab</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/machine-learning\">machine-learning</a></span></li></ul>\n</div>\n</div>", ["I did the part where it had to work."]], ["CP Toitles", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"CP Toitles \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/612/datas/gallery.jpg\"/>\n<p>\n<i>CP Toitle</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to make it easier for people who live in the College Park area to meet up, go to events, and make the community tighter. </p>\n<h2>What it does</h2>\n<p>Our app has two functionalities. First of all, people can look at our map to see what events are going on (via dropped pins). When someone clicks on a pin, they will be able to see what the event is, a description, and where it is. The second part of our app allows people to advertise events by dropping a pin at the location and writing a description.  </p>\n<h2>How we built it</h2>\n<p>We built this app using HTML, CSS, and JavaScript. Some APIs that we used are Google Maps API and Firebase.</p>\n<h2>Challenges we ran into</h2>\n<p>The challenges that we ran into were primarily returning data from Firebase. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We have an app that can potentially make College Park a tighter knit community, more active, and better place in general. </p>\n<h2>What we learned</h2>\n<p>We learned how to use the Google Maps API and we learned how to dove deeper into Firebase than we have before. </p>\n<h2>What's next for CP Toitles</h2>\n<p>We plan on adding more categories for events, registration for events, and potentially including some sort of social media component. </p>\n<h2>Where to access</h2>\n<p><a href=\"http://bit.ly/1qBFvLI\" rel=\"nofollow\">http://bit.ly/1qBFvLI</a> - Soon to come <a href=\"http://toitles.me\" rel=\"nofollow\">http://toitles.me</a>.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-maps\">google-maps</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://bit.ly/1qBFvLI\" rel=\"nofollow\" target=\"_blank\" title=\"http://bit.ly/1qBFvLI\">\n<i class=\"ss-icon ss-link\"></i>\n<span>bit.ly</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I helped to create the idea, wrote the code to write data to Firebase, assisted in reading code from Firebase, and assisted in creating the front-end of the website. ", "I helped test out the functionality of the application, and helped keep the code commented.", "I worked on the art and design of the app utilizing css and javascript. I helped with html as well, learning as I went. ", "I worked on the web pages and integrating google maps into our project", ""]], ["InstaHealth", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>TABLE 38</p>\n<p>Finding a doctor to take care of your medical problems can be a hassle. Specialists are often quite niche and can be difficult to find without a referral from a friend, to even be aware their practice is in the area. InstaHealth aims to simplify this arduous task. Allowing you to search by specialty and locality, a user can easily locate a physician in their area, describe their medical issue, and schedule an appointment.</p>\n<p>InstaHealth also allows you to talk to your physician and communicate your problem before you even walk in the door. Your doctor will know exactly what problem you have - no need to describe it to them repeatedly.</p>\n<p>Medical hassle doesn't stop at the discovery phase. You walk into the office, check in on a clipboard or outdated computer system, or bother a receptionist. InstaHealth recognizes when you walk into a participating office and checks you in automatically.</p>\n<p>Satisfied? Unhappy with your visit? Leave your physician a review for others to see. Leave feedback for them to improve, or help build a positive public image for their practice.</p>\n<p>InstaHealth is the enterprise grade solution for the practical practitioner and ailing individual.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">rest</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xml\">xml</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/gimbal\">gimbal</a></span></li><li><span class=\"cp-tag\">geofencing</span></li><li><span class=\"cp-tag\">iot</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sparkpost\">sparkpost</a></span></li><li><span class=\"cp-tag\">ngrok</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/azure\">azure</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/giphy\">giphy</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/pebble\">pebble</a></span></li></ul>\n</div>\n</div>", ["", "", ""]], ["PiggyPennies", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"PiggyPennies \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/372/709/datas/gallery.jpg\"/>\n<p>\n<i>Logo</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"PiggyPennies \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/343/datas/gallery.jpg\"/>\n<p>\n<i>Home</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"PiggyPennies \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/344/datas/gallery.jpg\"/>\n<p>\n<i>Trip to Canada</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"PiggyPennies \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/345/datas/gallery.jpg\"/>\n<p>\n<i>Friends</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"PiggyPennies \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/346/datas/gallery.jpg\"/>\n<p>\n<i>ATM Locator</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>We are at table number 21.</p>\n<h2>How it works</h2>\n<p><em>We automatically round up all your purchases to the nearest dollar to help you save for something fun.</em></p>\n<p><strong>1. Open a PiggyBank</strong>\nSaving for a new TV for the apartment or planning on taking a trip with friends to Canada next month? Create a new PiggyBank for whatever you want and save together.</p>\n<p><strong>2. Make a Purchase</strong>\nMake purchases as you normally would using your Capital One card and we will automatically round up your purchases to the nearest dollar.</p>\n<p><strong>3. Have Fun</strong>\nOnce you've all reached your individual goals, cash out and go have some fun. We know you deserve it.</p>\n<h2>How we built it</h2>\n<p>We built PiggyPennies using the Capital One API to allow friends to save their money together while integrating with their already existing lifestyle. We also use SparkPost for email transactions, and allow you to reply to emails to transfer your money without even visiting the website. For hosting the website we use AWS' EC2 and S3.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/capital-one\">capital-one</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sparkpost\">sparkpost</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ios\">ios</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/web\">web</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://piggy.aws-cloud.oweb.co\" rel=\"nofollow\" target=\"_blank\" title=\"http://piggy.aws-cloud.oweb.co\">\n<i class=\"ss-icon ss-link\"></i>\n<span>piggy.aws-cloud.oweb.co</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Worked on continuous integration & SparkPost API", "", ""]], ["BananaOS", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/8d4RtvMQp10?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"BananaOS \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/238/datas/gallery.jpg\"/>\n<p>\n<i>Command icon</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"BananaOS \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/239/datas/gallery.jpg\"/>\n<p>\n<i>BananaOS logo</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"BananaOS \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/240/datas/gallery.jpg\"/>\n<p>\n<i>Calculator icon</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"BananaOS \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/241/datas/gallery.jpg\"/>\n<p>\n<i>Jeremy profile</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"BananaOS \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/242/datas/gallery.jpg\"/>\n<p>\n<i>Chris profile </i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"BananaOS \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/243/datas/gallery.jpg\"/>\n<p>\n<i>Explorer icon</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"BananaOS \u2013 screenshot 7\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/244/datas/gallery.jpg\"/>\n<p>\n<i>About icon</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>BananaOS</h1>\n<p><strong>Check us out at Table 9 at the expo!</strong></p>\n<p>Visit our live page at <a href=\"http://banana-os.com\" rel=\"nofollow\">http://banana-os.com</a>!</p>\n<p>This BananaOS simulator, based off the famous Sesame Street clip of martians discovering computers, contains many exciting features.</p>\n<p>The in-browser simulator contains the following useful apps:</p>\n<ol>\n<li>About page</li>\n<li>Terminal complete with hundreds of commands!</li>\n<li>Fully functional calculator</li>\n<li>Live code and text file editing</li>\n<li>Bananas!</li>\n</ol>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag\">bananas</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/git\">git</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/github\">github</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/npm\">npm</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/linux\">linux</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/vim\">vim</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/namecheap\">namecheap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://banana-os.com\" rel=\"nofollow\" target=\"_blank\" title=\"http://banana-os.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>banana-os.com</span>\n</a></li>\n<li><a href=\"https://github.com/jakrach/bitcamp_16\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/jakrach/bitcamp_16\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Developed backend (API, Node.js webserver) and graphic/banana design.", "Developed frontend (client-side JS, HTML, CSS)"]], ["WallStreetSymphony ", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"WallStreetSymphony  \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/453/datas/gallery.jpg\"/>\n<p>\n<i>An example graph</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"WallStreetSymphony  \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/800/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>To represent stock data in a new medium: music.</p>\n<h2>What it does</h2>\n<p>Our MatLab project takes input, plots your stock's price versus time, and plays music to represent the graph's relation to your purchased price.  If the stock price is above your purchased price, piano chords in C major (happy) play to represent gains.  If the stock price is below your purchased price, Violin chords in E minor 7 (sad) play to represent losses.  Amplitude (loudness) changes to tell you how far away from your purchased price the data is.\nUsage: Run our MatLab file main.m to input a stock symbol (ex: GOOG), the price you purchased your stock at, the date you purchased your stock at, the start date for the graph, and the end date for the graph.</p>\n<h2>How we built it</h2>\n<p>Our team of four, Evan, Juliet, Josephine, and David, collaborated with Git through Atlassian Sourcetree and GitHub to implement our project with a series of MatLab functions.  We used Yahoo Finance through the Matlab fetch command to retrieve the stock data.  Juliet created chords and notes in GarageBand.  David also wrote an AutoHotKey script (included) to punch in the input for the Google example in the image on this page. </p>\n<h2>Challenges we ran into</h2>\n<p>Utilizing various tools in tandem which may create merge conflicts or other confusion.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Working together as a team on platforms we were unfamiliar with to create a functioning program.  As beginner programmers, this was a big accomplishment!</p>\n<h2>What we learned</h2>\n<p>We learned how to manipulate complicated stock data in MatLab as well as import and use music files programmatically.  We learned how to navigate Git as a team of four to share code.</p>\n<h2>What's next for WallStreetSymphony</h2>\n<p>What\u2019s next is incorporating more than one stock in our graph and music.  The program can already take input for multiple stocks (right now it just uses the first input).  We already pull the data for multiple stocks from Yahoo Finance into a 3-D MatLab array, so next would be to layer the music and graphs.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/matlab\">matlab</a></span></li><li><span class=\"cp-tag\">yahoo-finance</span></li><li><span class=\"cp-tag\">big-data</span></li><li><span class=\"cp-tag\">music</span></li><li><span class=\"cp-tag\">stocks</span></li><li><span class=\"cp-tag\">math</span></li><li><span class=\"cp-tag\">finance</span></li><li><span class=\"cp-tag\">musicmaker</span></li><li><span class=\"cp-tag\">bitcamp</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/git\">git</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/github\">github</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/atlassian\">atlassian</a></span></li><li><span class=\"cp-tag\">sourcetree</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/davsim1/WallStreetSymphony\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/davsim1/WallStreetSymphony\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked to write the function retStocks, which fetched all necessary data for the stocks. I also helped to debug and finalize all code.", "* Build Master\n* Git Wizard\n* Plotting stock data\n* Logistics and planning\n", "I worked to write inputData.m and part of the main function.", "I created the music files and the program that plays them in matlab (musicMaker)"]], ["PiGuard", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>All of our team members attend Georgetown University, which recently experienced several days of network connectivity issues due to malware. As we found ourselves frustrated over the lack of WiFi, we started to think about designing a one-button system for auditing the networks of small businesses, homes, and even universities. We tried to keep in mind our main users: people who aren't very knowledgeable about network security but want to prevent attacks or exploits against their network. </p>\n<h2>What it does</h2>\n<p>When the end user clicks a button on the UI's home page, the network scanner begins to search their network for a variety of common vulnerabilities, including poorly secured ssh, telnet, ftp, and mongo db servers and unencrypted WiFi. Each scan returns a security score (out of 100 points) and a message that summarizes the scan's findings. When all scans finish, the UI presents the user with an average security score (again, out of 100 points) and a file comprising the messages returned by each scan. The user can take this file to local tech support to aid them in securing the network. </p>\n<h2>How I built it</h2>\n<p>The scanner itself is a Raspberry Pi running the Raspian OS, and all scanning modules are written in python interfacing with a variety of security-based libraries such as nmap. The UI combines HTML, CSS, and some jQuery. </p>\n<h2>Challenges I ran into</h2>\n<p>One of our biggest struggle involved hardware limitations: we weren't able to sniff for traffic on multiple networks because our Pi's wireless chip set does not support this feature. A different chip set would make this process trivial. Furthermore, we found some of the modules difficult to write, debug, and incorporate into our final program. </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We learned that optimization is important and often tricky - though we did not want our scan to take too long to execute, we wanted it to be as thorough as possible. </p>\n<h2>What I learned</h2>\n<p>We learned a lot about network security. </p>\n<h2>What's next for PiGuard</h2>\n<p>In the future we hope to incorporate more modules, including a wrapper for the Nessus security project, without increasing the work on the end user's side. This would allow for more and more advanced vulnerability scans. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Angel-2/BITCAMP-2k16\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Angel-2/BITCAMP-2k16\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the backend, designing and implementing the base of the modular architecture as well as several of the modular scans", ""]], ["Fireberry Pi", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/Jbh48vz4-vE?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Fireberry Pi \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/474/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Fireberry Pi \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/477/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Table 9</h2>\n<h2>Inspiration</h2>\n<p>Did you know about 500 deaths occur every year due to gas leaks? We came to Bitcamp and created Fireberry Pi to combat this. </p>\n<h2>What it does</h2>\n<p>When the Uno detects a spike in gas levels, a series of commands are executed. First, the Pi's camera is triggered and a text alert is sent out using Sparkpost. The user is able to take a look at the picture to assess any damages if they are not at home. Secondly, a database is updated and location data of smartphones associated with the system are pulled and mapped. A this data also goes into the text the user recieves, letting them know if any family members are in the vicinity of the home. This would allow the user to be aware of anyone who may be at in danger at home.</p>\n<h2>How we built it</h2>\n<p>The foundation of our project is a Raspberry Pi 3 and an Arduino Uno. The Uno is used as a micro controller which manages the input from our gas/smoke sensor. The Rasperry Pi is what connects all of our hardware to the web.</p>\n<h2>Challenges we ran into</h2>\n<p>We ran into the challenge creating the android app that uses location services to ping a database once a request is made for its location. We overcame with by learning how to use a LocationManager to push latitude and longitude coordinates to the firebase database.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are proud of being able to tie together a Raspberry Pi, Arduino, Sparkpost, Firebase, web app, and Android app all together to function smoothly.</p>\n<h2>What we learned</h2>\n<p>We learned how to pull GPS data from an Android app. We also learned how to work with Firebase to push and pull data when an event is triggered.</p>\n<h2>What's next for Fireberry Pi</h2>\n<p>At Bitcamp, we only had access to an MQ-4 gas sensor which limited us to only detecting methane and butane (Which is what was used in our demo). We plan on adding a variety of sensors to the Uno such as an MQ-2 sensor which would focus on smoke. Also, we would like to create an enclosure which would allow for easy mounting of the system around a house.</p>\n<h2>Stack Name: ArduinoUnoRaspberryPi3CameraModuleMQ4SensorPythonSparkpostFirebaseAndroidJavaJavascriptHTMLCSSWindowsLinuxJQueryBootstrapNodeGithubPagesGoogleMapsAPI</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sparkpost\">sparkpost</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://rachitag22.github.io/fireberrypi/\" rel=\"nofollow\" target=\"_blank\" title=\"http://rachitag22.github.io/fireberrypi/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>rachitag22.github.io</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on configuring the Raspberry Pi to communicate with the Arduino and setup the python script to process the sensor data. I also configured the Sparkpost API and parsed the firebase data to trigger a text message and I also created the Android Application", "I helped with the web application (HTML/CSS/JS), integration with Firebase databases, and design of the info website.", "", ""]], ["scribe", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"scribe \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/339/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>TABLE 28 by Facebook Booth</p>\n<h2>Inspiration</h2>\n<p>We like cameras. We had a camera. The intel edison works well with cameras. Thus, we decided to do something hard with a camera.</p>\n<h2>What it does</h2>\n<p>Scribe uses a novel optical character recognition algorithm to transcribe handwritten text.</p>\n<h2>How I built it</h2>\n<p>The physical machine is nothing special. It is simply a button interfaced to a very nice microcontroller, which pulls images from a camera.</p>\n<p>The difficulty came, however, when we needed to build and configure the linux kernel we wanted to run on the edison from scratch. How we ended up getting that to work, I have no ideal. Well, yes I do. The Intel table and a mentor helped us out a ton. </p>\n<h2>Challenges I ran into</h2>\n<p>Kernel hacking, and the fact that the edison, while quite nice, has a huge number of bugs.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We wrote our own, relatively robust and accurate, ocr algorithms. That's kinda neat.</p>\n<h2>What I learned</h2>\n<p>Quite a bit about the deeper intricacies of the linux kernel.</p>\n<h2>What's next for scribe</h2>\n<p>winning all of the awards.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c\">c</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bash\">bash</a></span></li><li><span class=\"cp-tag\">yocto</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/intel-edison\">intel-edison</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/opencv\">opencv</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/bstadt/scribe\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/bstadt/scribe\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Wrote entire optical character recognition pipeline for the project.", "HTML/CSS front-end", "Developed an Android application that could take the text off of a server and store it on your phone.", ""]], ["SmartPitch", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"SmartPitch \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/500/datas/gallery.jpg\"/>\n<p>\n<i>Smartpitch_Prototype</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p><strong>Inspiration</strong>\nThe inspiration for this projects was from the numerous project presentations I've seen in my senior year and receiving feedback myself on how I can improve. It is difficult to practice by yourself at home, but with the convenience of smartphones, this should make the process easier and improving personal skills. </p>\n<h2>What it does</h2>\n<p><strong>What it Does:</strong>\nThe Project uses IBM-Watson's bluemix tone-analyzer API, Android Voice Recognizer, Google Mobile Vision face detection API to produce a Presentation confidence level score out of 100. It does this by converting the Speech into text and using the tone-analyzer to produce a qualitative score from categories such as confidence, or emotions. The Voice Recognizer has records the intensity of the Voice and it is averaged for the time duration of presentation. The Google Mobile Vision face detection API uses image processing to display a live video detection of the user's face, the probability of the eyes being open, and how happy you are (as the happy/relaxed you are, the better you can perform). These Scores are then factored together to produce a confidence level score out of 100.</p>\n<h2>How I built it</h2>\n<p><strong>Bill of Materials</strong>\nI built it using an android smartphone, Android Studio, IBM-Watson's Bluemix API, Android Voice Recognizer, and Google's mobile Vision API.</p>\n<h2>Challenges I ran into</h2>\n<p><strong>Challenges</strong>\n      Some of the Biggest Challenges was trying to get each piece to work together as there was a ton of Debugging. My regret of this project was not incorporating the pebble watch and its accelerometer to detect hand jitteriness. </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p><strong>Accomplishments</strong>\n     It was one of the toughest moments I've had with my phone as I was constantly trying to get it to listen to me. Eventually, it came around. In all seriousness though, I am proud of how much I've improved in utilizing APIs to develop a project like this.</p>\n<h2>What I learned</h2>\n<p><strong>Lessons</strong> \n     My phone is still a terrible listener, but I've gotten a better idea of the capabilities that android phones have. Especially with all the sensors it utilizes.</p>\n<h2>What's next for SmartPitch</h2>\n<p><strong>What's next</strong>\n    As mentioned before, I will try to get the pebble accelerometer to work with the smartphone in order to detect and take into consideration the hand jitteriness as hand and body coordination is important in a presentation. I'm thinking of also including a user-adjustable timer and some phones have a heartbeat sensor, so it would be nice to take that into consideration as well. TONS of debugging both backend and front left to do as well.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bluemix\">bluemix</a></span></li></ul>\n</div>\n</div>", ["I've worked on the front end, backend, and all around end of the project."]], ["Message Securer - Table 18", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p><strong>Securing your sensitive information is a big thing, and sometimes you don't want people to see your information when you send it to someone else. So why not keep it in the music you love? We are providing you a way to protect your sensitive information with three layers of protection, and one extra layer for more secure option.</strong></p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/ruizheli/Message-Securer-Bitcamp-2016.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ruizheli/Message-Securer-Bitcamp-2016.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Mind the Wait", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Mind the Wait \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/542/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Mind the Wait \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/641/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Mind the Wait \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/642/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Mind the Wait \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/643/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Mind the Wait \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/644/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>How to Find Us</h2>\n<p><strong>TABLE 51</strong></p>\n<h2>What it does</h2>\n<p>Mind the Wait lets you know once you step into a doctors office, how long it will be until the next doctor is available.  The app takes into account previous data from the doctors history in order to create the most powerful estimate.  </p>\n<h2>How I built it</h2>\n<p>The app was built in android studio with the front-end created in HTML and the back ended create in Java.  The user authentication service occurs via HTTP request via the Credible API.  </p>\n<h2>Challenges I ran into</h2>\n<p>The most difficult part was finding an intelligent way to parse the API input, as Java's input streams struggle to handle native JSON.  This was also our first time creating an app in android so making the GUI also served to be a difficult challenge as well. </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We made a fully functioning parsing object that is able to take JSON input and abstract it for our object model.  </p>\n<h2>What I learned</h2>\n<p>How to make android apps and how to handle HTTP requests. </p>\n<h2>What's next for Mind the Wait</h2>\n<p>Adding Neural Networks and Machine Learning techniques to create the most powerful estimation of a weight time.  Also,  we plan to update our GUI to achieve a more modern aesthetic.  </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/mkaggrey/Bitcamp\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/mkaggrey/Bitcamp\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the user interface and constructed a communication between the Credible API and the user", "I worked on the backend and the Credible API interactions"]], ["BumbleAidr", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"BumbleAidr \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/609/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"BumbleAidr \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/608/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"BumbleAidr \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/610/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"BumbleAidr \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/654/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"BumbleAidr \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/655/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Less than 1 in 3 children with ADD receive both medication treatment and behavior therapy, the preferred treatment approach for children ages 6 and older. Symptoms of ADD typically first appear between the ages of 3 and 6, which means we have the opportunity to detect it early, but the disorder often goes undiscovered and untreated. What if emerging virtual reality technology could change this? Most schools have eye exams to screen students for vision problems, but there's nothing provided to detect behavioral disorders like ADD. Meet BumbleAidr - providing an easy way to identify ADD in students as well as a therapeutic treatment plan.</p>\n<h2>What it does</h2>\n<p>BumbleAidr is a therapeutic VR game to diagnose and treat patients with ADD. Integrating Oculus into Unity, our virtual reality exercise focuses on concentration, having the user press a button when an item is out of place. Throughout the gameplay, the user is met with both visual and aural distractions. Using the Oculus' APIs and eye-tracking, we can detect how distracted the user is at a given time, which can then be measured to identify ADD. Using the Muse headband, we can also detect the patient's brainwaves throughout the game and see how distraction effect them. Data gathered from the game is sent to a server and graphed beautifully onto a website, which can be accessed by a doctor and the patient's loved ones. The website was made with HTML5, CSS, Bootstrap, JQuery, JavaScript, Node.js, Hapi.js, MongoDB, and Mongoose. We also used the SparkPost API to make it easier to send blind-confidential information between the patient's parents and the doctor. </p>\n<h2>Challenges we ran into</h2>\n<p>Time - messing with the new consumer VR and installing the appropriate software took quite a while - almost half of the hackathon time.</p>\n<h2>What this means?</h2>\n<p>BumbleAidr cannot only help with early-detection of ADD, but can also help patients improve their concentration. By practicing with the virtual reality games, ADD patients can use BumbleAidr as a therapeutic treatment program and better their overall focus overtime.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/muse\">muse</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag\">hapi.js</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongoose\">mongoose</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag\">sparkpost-api</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/azure\">azure</a></span></li><li><span class=\"cp-tag\">oculus-cv1</span></li><li><span class=\"cp-tag\">joi</span></li><li><span class=\"cp-tag\">swagger</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/npm\">npm</a></span></li><li><span class=\"cp-tag\">good-console</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/blondiebytes/aid-3-bitcamp\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/blondiebytes/aid-3-bitcamp\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"http://bumbleaide.azurewebsites.net/\" rel=\"nofollow\" target=\"_blank\" title=\"http://bumbleaide.azurewebsites.net/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>bumbleaide.azurewebsites.net</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Designed and programmed the therapeutic game, extended environment modeling, wrote C# scripts to add interactivity to the game, led overall user experience, integrated Oculus CV1 with Unity, programmed the Muse headband to capture patient brainwave data, researched ADD, and added content to the website. Did everything Tae didn't want to do. ", "Came up with the idea. Designed and developed the all client/server/data side website portion of our project. Used Hapi.js to easily create a RESTful api using node.js which was hosted on Azure using MongoDB as database. Used SparkPost's API to send secure emails between the doctors and parents by using a double blind messaging system I developed. "]], ["Sign Waves", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Sign Waves \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/394/datas/gallery.jpg\"/>\n<p>\n<i>hardware portion of the glove</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Sign Waves \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/396/datas/gallery.jpg\"/>\n<p>\n<i>wearing the glove while signing</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Sign Waves \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/525/datas/gallery.jpg\"/>\n<p>\n<i>The app outputting the translated sign language</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Sign Waves \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/526/datas/gallery.jpg\"/>\n<p>\n<i>the app while it records data from the sensors</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Sign Waves \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/527/datas/gallery.jpg\"/>\n<p>\n<i>the app calibrating the sensors</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>After working at the blind school in New Dheli, I was amazed by the ease of which blind and deaf boys and girls could communicate in sign language.  I realized that while sign language worked for people who knew the signs, communication is near impossible to those who are unfamiliar with the symbols.  I set out to give to the blind and deaf, a voice and bridge the communication gap between all people. </p>\n<h2>What it does</h2>\n<p>Sign Waves, uses a glove equipped with flex sensors and 9 degrees of freedom orientation sensors to recognize gestures and various sign language symbols.  Compared to other designs, the glove is compact, and wireless.  It uses Bluetooth 4.0 to communicate with the Android application I developed.  After calibrating the flex and orientation sensors to get baseline readings, the user can then train the app to learn additional gestures.  Then when the user would like to communicate with others, the app acts like a translator, the user signs, and the app uses machine learning to translate the gesture into English and uses Text-to-Speech, to narrate the users thoughts.</p>\n<h2>How I built it</h2>\n<p>The glove uses an Intel Edison, along with an orientation sensor hooked up with a battery allowing the entire clothing piece to be wireless.  As a user performs a gesture, the sensors record this data and advertise it to the phone using Bluetooth LE.  The app then parses this data and uses uses a moving average to smooth over irregularities and jumps.  We establish a baseline, by allowing the user to open and close his fist. </p>\n<p>Proceeding voltage values are normalized within this min and max, and range from 0 to 1.  This is necessary for the next step where we use this data to train a  Support Vector Machine classifier.  This classifier is then used for translating gestures into letters.</p>\n<h2>Challenges I ran into</h2>\n<p>Using the flex sensor and the Intel Edison with Bluetooth was a challenge due to their unreliability.  However, by engineering robust software, the code can now deal with a number of corner cases.  Addittionally the number of features per data point was 13 (9 from the orientation sensor and 4 from the other sensor).</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I was able to build a usable device for those who speak sign language.  We are hopeful, this will aid and impact many lives, when I take this India next.</p>\n<h2>What's next for Sign Waves</h2>\n<p>This weekend, we only dealt with the letters of the alphabet, however we look forward to expanding the library of gestures the app can recognize.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/intel-edison\">intel-edison</a></span></li><li><span class=\"cp-tag\">flex-sensor</span></li><li><span class=\"cp-tag\">gyroscope</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag\">bluetooth-4.0</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/machine-learning\">machine-learning</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/scikit-learn\">scikit-learn</a></span></li></ul>\n</div>\n</div>", [""]], ["mezzopiano", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"mezzopiano \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/574/datas/gallery.jpg\"/>\n<p>\n<i>main_interface</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"mezzopiano \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/575/datas/gallery.jpg\"/>\n<p>\n<i>title_screen</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<h2>What it does</h2>\n<h2>How we built it</h2>\n<h2>Challenges we ran into</h2>\n<h2>Accomplishments that we're proud of</h2>\n<h2>What we learned</h2>\n<h2>What's next for mezzopiano</h2>\n<p>Tmp</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c\">c</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Tsukinara/mezzopiano\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Tsukinara/mezzopiano\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Worked on hardware interfacing between Java and Arduino using the RXTX libraries.  Also wrote portions of the Arduino code and put together some hardware.", "", "", ""]], ["Contap", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Contap \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/433/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Contap \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/431/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Contap \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/432/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Contap \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/434/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Contap \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/435/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>Table 35\nWith so many social outlets in this day and age, it can be difficult to find a seamless way to share contact information. Contap solves that problem. When a realtor has an open house, they can open up Contap and set their phone up as an iBeacon through the app. Through the iBeacon, other users nearby can quickly connect with the realtor.  Another way to share is through simply tapping users phones together.  After tapping, each user's information is sent to the other via email.  </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">sparkpost-api</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag\">contactually-api</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/contactually\">contactually</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sparkpost\">sparkpost</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/heroku\">heroku</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag\">lambda</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-alexa\">amazon-alexa</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/IsaiahJTurner/Contap\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/IsaiahJTurner/Contap\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on iOS development using Swift. I had to learn how to load table cells, which was new to me, but I found a tutorial online to teach me.", "", ""]], ["QuadHack", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"QuadHack \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/835/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<h2>What it does</h2>\n<p>We can control the throttle of a quadcopter using our Arduino.</p>\n<h2>How we built it</h2>\n<p>We reverse engineered the remote controller of our quadcopter and we were able to find the pins that control the throttle. So we hooked up our Arduino to those pins and thus we were able to control the throttle of the quadcopters motors.</p>\n<h2>What we learned</h2>\n<ul>\n<li>Reverse Engineering a remote controller.</li>\n<li>PCB Board Analysis.\n## What's next for QuadHack\nWe Want to be able to control it with our phone. Using a Bluetooth receiver on the Arduino.</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li></ul>\n</div>\n</div>", ["", "", ""]], ["Online Coloring Book", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Virtual version of the widely popular adult coloring books.</p>\n<h2>What it does</h2>\n<h2>How I built it</h2>\n<h2>Challenges I ran into</h2>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<h2>What's next for Online Coloring Book</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n</div>", [""]], ["MuseTics", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/fWP5j8FJdjM?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"MuseTics \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/589/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>A mere 8 years ago the 2008 stock market downturn changed the face of the United States. If only someone would have been listening to <em>the sound of the music</em>, this could have all been avoided. Meet <strong>MuseTics</strong>.</p>\n<h2>What it does</h2>\n<p><strong>MuseTics</strong> is a Java App that analyzes historical stock data and translates the information into a reflective musical composition.</p>\n<h2>How we built it</h2>\n<p>Through the use of Java, Processing (Java), JavaFX, J Music, Blood, Sweat, and Tears, we built <strong>MuseTics</strong>.</p>\n<h2>Challenges we ran into</h2>\n<p>At one point Alana literally ran into a trash can and around 3 am Connor fell off our severely deflated air mattress. We also accidentally spent over an hour in a rural Pennsylvania truck stop, delaying our ETA to Bitcamp.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Connor and Sam were able to showcase their unique and enviable Java skills, while Madhur and Alana came up with some slick branding using Illustrator and Sketch respectively. Chris helped with data acquisition. </p>\n<h2>What we learned</h2>\n<p>We had our first experience with JMusic.</p>\n<h2>What's next for MuseTics</h2>\n<p>Our exit strategy would be a merger with Pied Piper, another leading tech company.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/processing\">processing</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/adobe-illustrator\">adobe-illustrator</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sketch\">sketch</a></span></li><li><span class=\"cp-tag\">j-music</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/stack-overflow\">stack-overflow</a></span></li></ul>\n</div>\n</div>", ["I focused on ideation and design. I also fetched Connor a donut at one point.", "I worked on some of the java development and debugging.  I also created the graphs in Processing. ", "", ""]], ["TerpLife", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<h2>What it does</h2>\n<h2>How I built it</h2>\n<h2>Challenges I ran into</h2>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<p>It's a game.</p>\n<h2>What's next for TerpLife</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n</div>", [""]], ["Foodie", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>Made this because I am taking a nutrition course and we had to track everything we ate. I thought it would be fun to set something up to do. It was also a good opportunity to learn how to utilize a bunch of technologies in tandem as I used 13 items in my stack. Table number 15. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/chrome\">chrome</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ruby-on-rails\">ruby-on-rails</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sqlite\">sqlite</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/apache\">apache</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag\">food-data-api</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sass\">sass</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ubuntu\">ubuntu</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li></ul>\n</div>\n</div>", [""]], ["Luuma", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Luuma \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/773/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>Music, visuals, and lasers all in one.</p>\n<ul>\n<li>Table 19</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://drive.google.com/file/d/0B9EFzaoTXar6cEZhM3pyWHpCNms/view?usp=sharing\" rel=\"nofollow\" target=\"_blank\" title=\"https://drive.google.com/file/d/0B9EFzaoTXar6cEZhM3pyWHpCNms/view?usp=sharing\">\n<i class=\"ss-icon ss-link\"></i>\n<span>drive.google.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["ConnectWear", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"ConnectWear \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/667/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"ConnectWear \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/668/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>The way kids play has changed over the years. As technology advances, kids are often faced with the same choice I was faced, to play games outside or to play video games inside. But there never seemed to be a choice to do a little bit of both at the same time. That  is where ConnectWear comes in.</p>\n<h2>What it does</h2>\n<p>ConnectWear is a platform for kids to both play physical games while also implementing the exciting characteristics of video games. It consists of wearable electronics and add-on parts that can potentially be used to play several different types of games, ranging from tag to a twist on Mario Kart.</p>\n<h2>How we built it</h2>\n<p>Each wearable component consists of an NFR transmitter and Arduino Uno. The transmitters each have addresses, so each set can communicate with each other very specifically and with a large signal range. The first game we have implemented is tag, which utilizes pressure sensors for tagging and lights to indicate who is \"it.\"</p>\n<h2>Challenges we ran into</h2>\n<p>Making the devices wearable and robust was a great challenge, but was solved through much iteration and testing.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are proud to have a working and wearable product that shows the concept we are going for and can be expanded.</p>\n<h2>What's next for ConnectWear</h2>\n<p>We hope to keep working on this and create more game options and add-on for the platform.</p>\n<h2>Table Number</h2>\n<p>19</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li></ul>\n</div>\n</div>", ["", "", ""]], ["formcheck", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"formcheck \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/630/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>TRY IT OUT @ TABLE 12</p>\n<h2>Inspiration</h2>\n<p>lifting heavy things</p>\n<h2>What it does</h2>\n<p>simulates lifting movements</p>\n<h2>How we built it</h2>\n<h2>Challenges we ran into</h2>\n<h2>Accomplishments that we're proud of</h2>\n<h2>What we learned</h2>\n<h2>What's next for formcheck</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xaml\">xaml</a></span></li><li><span class=\"cp-tag\">wpf</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/visual-studio\">visual-studio</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/snoopysnake/Bitcamp2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/snoopysnake/Bitcamp2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Helping Hands", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Motivate people around you to be more altruistic</p>\n<h2>What it does</h2>\n<p>Social media web app to share your kind acts</p>\n<h2>How we built it</h2>\n<p>Front end HTML, JavaScript and CSS with javaServer pages and MySQL. Trying to Deploy on Azure</p>\n<h2>Challenges we ran into</h2>\n<p>The MySQL setup was giving some error. Due to which we ran late.We weren't able to complete the deployment of our application on the cloud. Getting a few discussed features completely working.</p>\n<h2>Accomplishments that we're proud</h2>\n<p>Uploading posts and pictures features working good.</p>\n<h2>What we learned</h2>\n<p>Even minor errors can sometimes be a huge pain</p>\n<h2>What's next for Helping Hands</h2>\n<p>Completing deployment. And voil\u00e0 using it! :) Updating the front end design.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/markdown\">markdown</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mysql\">mysql</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jsp\">jsp</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/tomcat\">tomcat</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/azure\">azure</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["PowerPack", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"PowerPack \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/689/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>DevTools sucks so I made it easier to use and added a bunch of missing features.</p>\n<h2>What it does</h2>\n<p>Displays what slows down your page the most, how to optimize your images, and an experimental 3d view.</p>\n<h2>How I built it</h2>\n<h2>Challenges I ran into</h2>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<h2>What's next for PowerPack</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/chrome\">chrome</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag\">devtools</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/love\">love</a></span></li><li><span class=\"cp-tag\">chrome.google.com/webstore/detail/powerpack/kkljbcepococnijlmoinoglbijmoafol</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://chrome.google.com/webstore/detail/powerpack/kkljbcepococnijlmoinoglbijmoafol\" rel=\"nofollow\" target=\"_blank\" title=\"http://chrome.google.com/webstore/detail/powerpack/kkljbcepococnijlmoinoglbijmoafol\">\n<i class=\"ss-icon ss-link\"></i>\n<span>chrome.google.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["ComboFUSE", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>ComboFUSE</h2>\n<h3>Table 44</h3>\n<p>ComboFUSE is a powerful storage solution that combines cheap USB drives with the cheap Raspberry Pi to provide a powerful, flexible storage solution that is larger than its parts! It aims to provide a cheaper NAS or private cloud for those looking for storage.</p>\n<h2>Technical Details</h2>\n<p>We implemented ComboFUSE with a mix of the FUSE C library and Python, allowing us to take advantage of the powerful functionality of FUSE while still maintaining flexibility in Python.</p>\n<p>The solution works on a file based level instead of a block one - we opted for a file based solution because it provided significantly more flexibility. On the market, solutions like LVM, Windows Storage Pools, and others require a complete format due to the nature of the block based solutions. With our solution, storing with ComboFUSE won't require any format - you can just plug your drive in and it works!</p>\n<p>We allow existing drives to be combined together to form a larger, more flexible storage solution. Unlike traditional solutions, you can add and remove drives at any time without impacting usability of the storage space. The storage also spans multiple drives, allowing those with smaller drives to combine them and store even larger files.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/alberthdev/ComboFUSE\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/alberthdev/ComboFUSE\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Panoramic Video for Augmented Reality", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Panoramic Video for Augmented Reality \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/613/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Panoramic Video for Augmented Reality \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/619/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Panoramic Video for Augmented Reality \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/620/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Panoramic Video for Augmented Reality \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/621/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>Tools used :</p>\n<p>Image Processing  and Computer Vision Toolbox\nImage Acquisition Toolbox\nFeature Detection and Extraction functions\nImage Registration documentation\nCurve fitting Toolbox\nStatistics Toolbox</p>\n<p>Motivation: Enable Augmented reality through panoramic video</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/matlab\">matlab</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["InvesTone", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Financial analysis and quantitative trading relies almost solely on a single sensory, sight. What if there was a way to intuitively incorporate the other senses to accurately gauge the potential of a financial investment?</p>\n<h2>What it does</h2>\n<p>Our application produces a Guppy Multiple Moving Average chart based on inputs of moving average sizes, duration, stock symbol, and end date. We chose to analyze COST, LNKD, TSLA, and TWTR at various end dates over a 60 day market span, and we chose the 10 day and 50 day exponential moving averages to model the short and long term behavior of the market, respectively. The application modifies the pitch and echo of Beethoven''s F\u00fcr Elise based on how strongly the relative movement of the two trends indicate a bear turn of the indicated stock and the frequency of crossover between the the two trends.</p>\n<h2>How we built it</h2>\n<p>Jung parsed the data using the MATLAB 2016 Datafeed toolbox, which allowed us to fetch data from the Yahoo API. By analyzing the closing prices over a variable period, we were able to generate the necessary data to create accurate exponential moving averages of the long and short term behavior of the market. We normalized the difference between the long and short term moving averages of each stock to its relative price to create a dataset within a consistent range of values. By separating the values deviating below the zero line we found the square root of the bear indicators' deviation from the neutral to scale the pitch shift along. \nKevin then used the MATLAB signal processing toolbox to input music into matrices, and break it down into pieces that corresponded each market day to a half second of audio. Utilizing Columbia University's pitch processing code to scale the pitch throughout the song according to the adjusted dataset. Another parameter we chose was the crossover between the high and low moving averages. As multiple crossovers indicate a choppy market we chose to induce an echo based on how frequently the two trend lines would cross as the music (and market) progressed. All the information was then stitched together into a user interface using the appdesigner program in MATLAB.</p>\n<h2>Challenges we ran into</h2>\n<p>We mostly ran into problems when trying to break the song matrix into parts and change their pitch. Even with Columbia's program, pitch was difficult to analyze since it scales logarithmically. As a result, the application was unable to effectively analyze pitch across multiple octaves and musical inputs, but was able to consistently bend the pitch of a single melody according to the moving average data.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>-Going beyond mere stock price to quantitatively analyze stocks through a Guppy Multiple Moving Average \n-Learning how to modify audio files not just as a whole but incrementally based on a somewhat contiguous dataset\n-Learning to build a freestanding application within Matlab </p>\n<h2>What we learned</h2>\n<p>We learned how to represent data in more than one way, incorporating our other senses to analyze metrics. We learned about harmonic frequencies and pitches as well as quantitative financial analysis.</p>\n<h2>What's next for InvesTone</h2>\n<p>Expanding our metrics. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/matlab\">matlab</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/kevinj507/bitcamp2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/kevinj507/bitcamp2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["botcamp", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"botcamp \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/543/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"botcamp \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/544/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"botcamp \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/545/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>High school robotics club</p>\n<h2>What it does</h2>\n<p>In the game you must create a robot for each level.  In each level you will be faced with various tasks to complete.  It is your job to construct a robot capable of navigating the course and completing the task within 60 seconds.</p>\n<h2>How we built it</h2>\n<p>We built our game using unity and coding in C#.</p>\n<h2>Challenges we ran into</h2>\n<p>Our initial idea was to make it more interactive by letting the player \"program\" their robot, using visual coding blocks (in a similar manner that people use Scratch to program).  However, we quickly realized that this idea was too time consuming to complete in the duration of bitcamp.  We compromised and made it solely about constructing a robot and using the keys on your keyboard (W,A,S,D) to move your robot through the course.  Throughout the development of our game we faced general problems like dividing tasks between team members and working on the project all at once.  This also ate into our allotted time.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are very proud of the final product that we were able to produce.  We believe the user interface is the strongest aspect of our project.  The </p>\n<h2>What we learned</h2>\n<p>We learned a lot about Unity that we didn't already know.  Just sitting and working on the game for 36 hours gives you experience to learn from and helps you with future mistakes. </p>\n<h2>What's next for botcamp</h2>\n<p>Off to bed.</p>\n<p>(Table #3)</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://www.dropbox.com/s/4byc0qj25ixvqfg/botcamp.zip?dl=0\" rel=\"nofollow\" target=\"_blank\" title=\"https://www.dropbox.com/s/4byc0qj25ixvqfg/botcamp.zip?dl=0\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.dropbox.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I created and developed each level scene in Unity.  I also helped in programming some minor functions, such as the timer and various physics colliders.  I made the level selector screen and the \"botcamp\" fire which very closely resembles the bitcamp logo...", "Man I did ui and stuff", "Level Design"]], ["knowgo", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"knowgo \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/679/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Living near Washington D.C., there's always many cool events happening nearby. The problem is, there's no good way to keep track of these events, and other times it's difficult to find many events. knowgo is a Yik Yak inspired social media app for finding such upcoming events happening near you. </p>\n<h2>What it does</h2>\n<p>Users can create their own events with a website form and view a list of events created by other users. The fields to fill in for an event are Title, Location, Start Date and Start Time, End Date and End Time and a Description.These events can be upvoted or downvoted are sorted by an algorithm based on upvotes, distance to the event, time since the event was posted, and time until it starts. </p>\n<h2>How we built it</h2>\n<p>Website is built on html &amp; css. Javascript is used to save event data that users enter and save it in Firebase as well as retrieve the event data to display it to users. </p>\n<h2>Challenges we ran into</h2>\n<p>Dan had never used Firebase before so he had to learn how to use it.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>The Google Maps API is used as well to make it easier to enter locations and calculate distances between users and events. If the website is on a mobile phone, the events displayed are scaled properly to the screen.</p>\n<h2>What we learned</h2>\n<p>Dan learned how to use Firebase, bootstrap, and JQuery. </p>\n<h2>What's next for knowgo</h2>\n<p>Make an app. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/excel\">excel</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/gimp\">gimp</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://knowgo.me/\" rel=\"nofollow\" target=\"_blank\" title=\"http://knowgo.me/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>knowgo.me</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the algorithm for sorting the events. ", "I created the site in html, css, and javascript.", ""]], ["DJ Glove", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>We wanted to create a DJ setup that could be used without the need for a turntable or any equipment. One could simply scratch with their hand and use their fingers to simulate loops, playbacks and crossfade switches.</h2>\n<h2>What it does</h2>\n<p>The user puts on the glove and can do a number of actions which correspond to actions on the VirtualDJ 8 software.</p>\n<h2>How I built it</h2>\n<p>The glove reads in data into JSON format from a number of sensors place across different areas of the glove. That data is then extracted using a python script. The python script then extracts the data and based on experimentally determined threshold for pressure, wrist motion, etc. triggers \"action events\". These events are what cause the corresponding changes in VirtualDJ. This work using the win32 API by simulating virtual keyboard strokes. The virtualDJ software has a custom keyboard shortcut mapping we created that allows correspond to the virtual keystrokes. </p>\n<h2>Challenges I ran into</h2>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<h2>What's next for DJ Glove</h2>\n<p>We are submitting just before the deadline, all our videos are in the google drive! Not much time to write more sorry!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag\">pytho</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag\">virtualdj</span></li><li><span class=\"cp-tag\">win32</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://drive.google.com/folderview?id=0B-NTRfJblsuTaUdqUVhKXzcyQ3c&amp;usp=sharing\" rel=\"nofollow\" target=\"_blank\" title=\"https://drive.google.com/folderview?id=0B-NTRfJblsuTaUdqUVhKXzcyQ3c&amp;usp=sharing\">\n<i class=\"ss-icon ss-link\"></i>\n<span>drive.google.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Youtube Playlist Search", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We want to be able to search our own playlists.</p>\n<h2>What it does</h2>\n<p>It searches playlists.</p>\n<h2>How we built it</h2>\n<p>It's a chrome extension built with javascript.</p>\n<h2>Challenges we ran into</h2>\n<p>Tons, neither of us have that much experience with using apis or building a chrome extension so there was a lot to learn. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>It's our first hackathon, and we made something.</p>\n<h2>What we learned</h2>\n<p>How to work with the youtube api in javascript and make a chrome extension.</p>\n<h2>What's next for Youtube Playlist Search</h2>\n<p>Allowing it to search private playlists. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag\">youtube-data-api</span></li></ul>\n</div>\n</div>", ["", ""]], ["Flow", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We were interested in creating a hack with some of the other API's, but we were interested in trying out Credible's challenge as well as learning a new platform for web development, Django.</p>\n<h2>What it does</h2>\n<p>The web application is meant for employees to be able to log into the service and easily view their daily schedule of meeting with various clients by plotting their addresses on a map with the shortest route to each client, while taking into account the employee's current location. Next to the map, there is a list of clients with basic contact information available in a dynamic dropdown section.</p>\n<h2>How we built it</h2>\n<p>We spent a good amount of time discussing what to build and what tools to use with it. We had discussed other API's like IBM's BlueMix, or Capital One's Nessie, but with their overwhelming popularity, these API's seem to get submissions that have been repeated over and over again. Since we have never worked with Credible's API, we decided to give it a shot.</p>\n<p>Our development platform was definitely going to be a website, since we are mostly familiar with how to implement a website compared to a mobile application. We chose the standard HTML/CSS/JS trinity for the front-end, and were given a tip to try using Django due to its ease of setup and feasibility. We received a few tips from a friend on how to get started with Django, so we were up and running fairly quickly. </p>\n<p>Looking at the Credible API, we were able to send HTTP requests for data on clients, employees, and their scheduling. We tested out the API with a few simple python scripts to establish success with interfacing with the API. The next day, we spent time migrating databases in SQLite to match with the fields we needed from the API, as well as setting up the model structure of our web app in Django. We also spent time research different (free) website templates, and mixing and matching the pieces we liked until we crafted our final design layout. We populated our databases with the dummy data Credible had provided to us, and created a bit of our own data to make our application more presentable.</p>\n<h2>Challenges and Difficulties</h2>\n<p>Unfortunately, we were actually unable to successfully interface Django with our front-end, and weren't able to make the application behave as intended. Since each component was designed independently, we had some issues with getting both things to meld smoothly with each other. We tested the animation events on our front-end and they behaved as normal, and were able to properly populate, retrieve, and send information from our database to some basic website, but there were too many complications to properly make things work: </p>\n<p>-We were unfamiliar with the templating system of Django, and were a bit taken aback at how we were able to preprocess html with python. \n-As a team, we haven't had much experience with API's (though python's request module made things easy at first)\n-There were a few errors with how Django sent data through its views, with data being difficult to be JSON-ized\n-Most each of us haven't been to more than 3 hackathons, or have been exposed to languages other than C, Java, and HTML\n-The API didn't exactly have the best documentation (but we did the best that we could!)\n-The API had mostly empty data entries, with much of the employee's information being null except their names and ID's\n-Since we were given an md5 hashed password shared across all employees/clients instead of a plaintext password(s), it made it somewhat difficult to implement a proper/legitimate login page\n-The API was vast and provided a lot of information (much of which was undocumented) which made it difficult to discern what information would help us best to develop our app</p>\n<p>Because we were unable to make a working finished product, we decided it would be best to show how an actual working product would have functioned and looked like, and so we took the data from the API and directly inserted it into our page as a filler where Django preprocessing commands would have been.</p>\n<h2>Accomplishments</h2>\n<p>For most of us, this was likely one of the most intensive projects that any of us had participated in. We felt that although Django was new and the API was difficult to use, we were still able to make something that was at least presentable to an audience. We also felt accomplished in getting our feet wet in what web development can produce, as well as how powerful python is as a language.</p>\n<h2>What we learned</h2>\n<p>-Research is important for any hackathon (we spent 4 hours on research and ran smoothly until the last 10 hours)\n-Its very helpful to know the tools/frameworks ahead of time, but not necessary\n-Communication and a good attitude always makes these events a nicer place to be!</p>\n<h2>What's next for Flow</h2>\n<p>We might consider finishing up the interfacing at a later point as an exercise for learning Django (although we'll be very busy soon with midterms and finals).</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/django\">django</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/jsfleming/crediblehack2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/jsfleming/crediblehack2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I was responsible for figuring out and accessing the APIs related to our project, including the Credible API and several Google APIs. I also played a support role to our other members, providing or adding code to help finish a component of a project. This is my first experience writing a decent amount of Python, and I dabbled in little bit of JS as well.", "I worked on the majority of the front end. This is the first time I've used Angular and jQuery in action and thankfully the page turned out to be simple and clean!", "", ""]], ["Kinect Interactive Music Interface", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Kinect Interactive Music Interface \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/659/datas/gallery.jpg\"/>\n<p>\n<i>Hand Tracking Bubble Interface</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Kinect Interactive Music Interface \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/803/datas/gallery.jpg\"/>\n<p>\n<i>Gesture Based Music and Color Controls</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>I wanted to do something cool with motion sensing technology so I started experimenting with the Xbox Kinect.\nA song plays through headphones. Your left hand (up/down) controls the pitch and tempo of the music while your right hand (in every direction) controls the colors of your on-screen party avatar. </p>\n<p>Depicted above is the first part of this project. Bubbles stem from and follow your right hand while the left hand controls various properties, including Bubble count and size. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/kinect\">kinect</a></span></li><li><span class=\"cp-tag\">synapse</span></li><li><span class=\"cp-tag\">quartz</span></li><li><span class=\"cp-tag\">audacity</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mac\">mac</a></span></li></ul>\n</div>\n</div>", [""]], ["Smart Wallet", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Smart Wallet \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/813/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>One of our group members had an issue with impulsive spending. He saw that, of his $150+ daily spend, ~$50 of which was composed of unnecessary, spur of the moment transactions. The issue was, he wasn't aware of the impact these purchases made until whenever it was he decided to check his financial app. What if we can move that moment of awareness up to <strong>JUST BEFORE</strong> that impulsive point of sale decision is made? What if, before you pulled out your card to purchase that 2nd/3rd cup of coffee, you could visually see how this purchase fits within your daily, weekly, and monthly budget? Effectively reducing chances of overspending significantly, with our in-wallet alert acting as a last line of defense against impulsive user behavior.</p>\n<h2>What it does</h2>\n<p>The smart wallet is an IoT device that pairs with an app on a phone to display a users account balance and budget overview on an embedded screen. The user can also designate different budget subset groups such as, <em>coffee, uber,</em> and <em>groceries</em> allowing them to see how much of their budget has been used and how further purchases will impact their financial projections. The goal, curbing impulsive spending behavior &amp; preventing overdrafts, resulting in increased customer satisfaction.</p>\n<h2>How I built it</h2>\n<p>Our team used the Capital One API to retrieve a customers banking data via HTTP. We were able to convert the API to use push notifications by building an intermediate query sever in flask. Purchase notifications are pushed to an android phone were the most recent balance in downloaded from the Capital One API. The LCD display on the wallet is then updated using Bluetooth Low Energy to display the most current balance, all under a second from the purchase.</p>\n<h2>What I learned</h2>\n<p>After running a preliminary user test group of 20 people we received a score of 85% of people who would definitely buy this product at a $125 price point and 95% of people said they'd but this at a $99 price point.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bluetooth\">bluetooth</a></span></li><li><span class=\"cp-tag\">capital-one-api</span></li><li><span class=\"cp-tag\">invision</span></li><li><span class=\"cp-tag\">arduino-uno</span></li><li><span class=\"cp-tag\">nessie</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://invis.io/AV6VPR4BX\" rel=\"nofollow\" target=\"_blank\" title=\"https://invis.io/AV6VPR4BX\">\n<i class=\"ss-icon ss-link\"></i>\n<span>invis.io</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I have used android studio to make a mobile app that uses capital API and then helps an individual spend wisely.", "", ""]], ["Stock2Music", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>This Matlab project is to help blind people visualize stock data</p>\n<h2>What it does</h2>\n<p>It fetches stock data for three months from the Yahoo web API using the user entered stock ticker and plays the tune that corresponds to the variations of the stock</p>\n<h2>How I built it</h2>\n<p>I used Matlab to build the software</p>\n<h2>Challenges I ran into</h2>\n<p>Large variations in stock prices led to extreme frequencies of audio. I had to do some normalization to keep it in a reasonable range</p>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<p>Fetching data in Matlab from the web API. \nGenerating sinusoidal midi music from midi notes.</p>\n<h2>What's next for Stock data visualization for the blind</h2>\n<p>Integrate it with Speech recognition API and automatically fetch the company ticker using the user's company name search query. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/matlab\">matlab</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/ganesa90/stock2music\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ganesa90/stock2music\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["TapJam", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Music is an integral part of everyone's life. We all enjoy good music, and this application allows friends to collaborate and work small projects in real time.</p>\n<h2>What it does</h2>\n<p>This application allows you to collaborate with your friends by allowing you to listen to not only your inputs but also those of your friends in real time.</p>\n<h2>How we built it</h2>\n<p>We used Microsoft Azure web services and Android application programming to implement our application.</p>\n<h2>Challenges we ran into</h2>\n<p>Due to the limited information on Azure web services, specifically SignalR, we ran into significant roadblocks when uploading the data to the cloud.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We built an application that can communicate with Azure and also implement intuitive design in order to create an efficient and enjoyable </p>\n<h2>What we learned</h2>\n<p>We learned a lot about how web sockets worked and the effect it has on the effectiveness of hubs and Signalr. We got the chance to manipulate a data base and rapidly collect and distribute data</p>\n<h2>What's next for TapJam</h2>\n<p>Hopefully, TapJam can expand with more instruments and bigger group capability. Also more streamlined processes and better UI design would be more beneficial to our users</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/azure\">azure</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/visual-studio\">visual-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/jsjqian/TapJam.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/jsjqian/TapJam.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Tonight", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Tonight \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/546/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>A simple Android application that helps navigate the nightlife scene. </p>\n<h2>What it does</h2>\n<h2>How I built it</h2>\n<h2>Challenges I ran into</h2>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<h2>What's next for Tonight</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/chocolateashes/TonightAndroidApp\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/chocolateashes/TonightAndroidApp\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["MonsterMatch - Table 45", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>I wanted to find jobs but had a hard time looking through each page individually for an entry level position.</p>\n<h2>What it does</h2>\n<h2>How I built it</h2>\n<h2>Challenges I ran into</h2>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<h2>What's next for MonsterMatch</h2>\n</div>\n</div>", [""]], ["CapitalOneSimulator - No GUI", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"CapitalOneSimulator - No GUI \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/537/datas/gallery.jpg\"/>\n<p>\n<i>The sim on going</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Had the inspiration of making something to see how the capital system worked. Unfortunately due to time, I was not able to make my own database and import everything from Capital One.  So I used their server.</p>\n<h2>What it does</h2>\n<p>It basically creates customers, accounts, purchases, transfers,gathers the data and does a simulation that can run for a while.  If I had access to the backend (if had time to import... Almost done if only just a couple more minutes) I wouldve been able to make it much more smoother with many fewer (and I mean many fewer requests).</p>\n<h2>How I built it</h2>\n<p>basically built by sending request and receiving responses (JSON of course) and with a loop keep on simulating what could be happening</p>\n<h2>Challenges I ran into</h2>\n<p>Time and no Front-end.  I am able to design a pretty good backend, unfortunately with no front end spent most of my time attempting to build a map and update according to the results.  Results as you see are no good.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I was actually able to get it running the requests(until capital one server kicks me out :p) was able to let it run for a couple of minutes if not hours (went to sleep :p)</p>\n<h2>What I learned</h2>\n<p>Learned a lot, how having access to the backend is key to making a design with many fewer request and responses needed to be sent.  </p>\n<h2>What's next for CapitalOneSimulator - No GUI</h2>\n<p>Next will be importing the data to my own database and continue building off from there by making jobs, a merchant with an actual account with money and attempt to run the U.S economy as close as possible.  Cant forget that I still have to worry about the frontend of the projects...........</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/capital-one\">capital-one</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/symfony\">symfony</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/raul4916/Capital-One-Simulation\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/raul4916/Capital-One-Simulation\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["MyoMusc", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"MyoMusc \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/598/datas/gallery.jpg\"/>\n<p>\n<i>Welcome!</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>We provide physical therapy in an enjoyable way. Less doctor visits, more fun.</h2>\n<p>Involuntary, uncontrollable muscle movements are characteristic of numerous conditions, such as dystonic tremors, stroke, or Huntington's disease. Physical therapy has been shown to be a non-invasive treatment that can help prevent the progression of and alleviate the symptoms of such conditions. </p>\n<h2>What did we do?</h2>\n<p>We used Unity and the Myo, and the growing concept of gamification to produce therapy that promotes smooth, controlled arm movement. We detected \"jitter\" based on the Myo's detection of the user's movements, and made the game require more control when jitter is detected. This posed a natural reinforcement to improve.</p>\n<h2>Challenges I ran into</h2>\n<p>The Myo/Unity API is established but limited. We needed to develop an interface to detect jittery movement, involving mathematical manipulation of many unfamiliar objects.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Our project demonstrates the ability of technology to be integrated with other fields. Virtual reality is a growing field, and the utilization of this technology to improve the livelihood of individuals illustrates its power and potential.</p>\n<h2>What I learned</h2>\n<p>We learned about many new technologies, and tinkered with all the toys available. We learned, more than anything, how much there is to learn. This hackathon allowed us to explore new fields and appreciate the massive amount of interest in technology, which inspired us greatly.</p>\n<h2>What's next?</h2>\n<p>We're excited about how the Myo and other technologies can be used to help in other modes of physical therapy. The possibilities are endless, and we are excited to see how technology and medicine progress symbiotically together.</p>\n<p>We're at Table 27!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/myo\">myo</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag\">after-effects</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/as577/myomusc\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/as577/myomusc\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["SoWifi Table 5", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration is what we do</h2>\n<h2>What it does</h2>\n<h2>How I built it</h2>\n<h2>Challenges I ran into</h2>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<h2>What's next for SoWifi</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://bitbucket.org/solowifi/sowifi\" rel=\"nofollow\" target=\"_blank\" title=\"https://bitbucket.org/solowifi/sowifi\">\n<i class=\"ss-icon ss-link\"></i>\n<span>bitbucket.org</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["teslaTune", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Finra Challenge. Now Its a personal challenge to make this into an epic project, based on how many different skills that I'm capable of putting into this.</p>\n<h2>What it does</h2>\n<p>Takes a price history of a stock and matches the differentials with piano notes then plays the notes. It allows people to recognize patterns with their hearing instead of random data visualization, we can experience data with multiple sense.</p>\n<h2>How I built it</h2>\n<p>using C++, I opened the files and processed them FTW.</p>\n<h2>Challenges I ran into</h2>\n<p>None, I'm too awesome.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>While an extremely small project that isn't even 10% of a school project, every bit of code that runs is a piece of art.</p>\n<h2>What I learned</h2>\n<p>I learned that even small ideas and little practice of coding can extend your abilities, while 99.99% of the code for this was previous knowledge I learned something new. I learned to play sound files with c++.</p>\n<h2>What's next for teslaTune:</h2>\n<p>While a complete miss match for c++, I will rewrite this into a small website and connect it to an open DB with stock history for fortune 500. I will use time series smoothing to produce a more fluent tune. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li></ul>\n</div>\n</div>", [""]], ["TuneN", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"TuneN \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/577/datas/gallery.jpg\"/>\n<p>\n<i>login with spotify</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"TuneN \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/578/datas/gallery.jpg\"/>\n<p>\n<i>Display of artists originated from current area</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"TuneN \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/579/datas/gallery.jpg\"/>\n<p>\n<i>Display of an artist's top songs on spotify</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"TuneN \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/580/datas/gallery.jpg\"/>\n<p>\n<i>Loading local artists</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We like music and thought this would be a fun idea for a hack. Also may be useful for people who want to get in touch with the local music history.</p>\n<h2>What it does</h2>\n<p>Shows artists that have originated from your current area. You are able to view the top tracks of these artists as well as view artist photos and names.</p>\n<h2>How we built it</h2>\n<p>Built a mobile application for iOS using Swift as well as the listed frameworks.</p>\n<h2>Challenges we ran into</h2>\n<p>Lots. Specifically Spotify's iOS API....which is in beta.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Eventually got some features implemented using the Spotify API. Also, the aesthetics are pretty neat.</p>\n<h2>What we learned</h2>\n<p>Developed our Swift programming knowledge and learned about various number of frameworks/APIs.</p>\n<h2>What's next for TuneN</h2>\n<p>goin' to the big leagues!</p>\n<p>But, also song streaming within app, more song suggestions, more music metadata, etc.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/iphone-sdk\">iphone-sdk</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag\">swiftspinner</span></li><li><span class=\"cp-tag\">pulltorefresh</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/musicbrainz\">musicbrainz</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/spotify\">spotify</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/geonames\">geonames</a></span></li><li><span class=\"cp-tag\">alamofire</span></li><li><span class=\"cp-tag\">swxmlhash</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/tba2299/bitcamp2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/tba2299/bitcamp2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Karaoke Time", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Karaoke Time \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/599/datas/gallery.jpg\"/>\n<p>\n<i>Karaoke time</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>Come sing with us at table 32!!</p>\n<h2>Inspiration</h2>\n<p>We wanted to have fun with matlab, so we made a karaoke app</p>\n<h2>What it does</h2>\n<p>It allows you and others to play a karaoke video and sing to your hearts content</p>\n<h2>How we built it</h2>\n<p>Used a bunch of matlab toolkits</p>\n<h2>Challenges we ran into</h2>\n<p>Trying to get a scoring system implemented in the last few minutes</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Main functionality of video/audio playback works! You can even record yourself to evaluate yourself later</p>\n<h2>What we learned</h2>\n<p>Lots of matlab</p>\n<h2>What's next for Karaoke Time</h2>\n<p>Scoring system with signal processing and integrating the webcam inside the main program.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/matlab\">matlab</a></span></li></ul>\n</div>\n</div>", ["*attempted* to help with matlab webcam integration", "", "", ""]], ["Financial Chord Cadences - Table 26", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>I'm interested in computer generated music. Additionally, the FINRA challenge provided a motivation to combine financial information and music.</p>\n<h2>What it does</h2>\n<pre class=\"language-nolang\"><code>Key based on first letter of stock symbol\nOverall trend is down -&gt; key is minor\nOverall trend up -&gt; key is major\nDay to day change is negative -&gt; moves to minor chord\nDay to day change is positive -&gt; moves to major chord\nLarger changes typically result in stronger progressions, i.e. movement by fifths and fourths vs. seconds and thirds or to diminshed vs minor seconds and thirds\nVolume is proportional to the relative trading volume of the day\nCan change how much data you want to hear with length parameter\nCan change temp with quarter note parameter\n</code></pre>\n<h2>How I built it</h2>\n<pre class=\"language-nolang\"><code>Python...\n</code></pre>\n<h2>Challenges I ran into</h2>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Makes pretty cool songs.</p>\n<h2>What I learned</h2>\n<p>Grabing financial data from the internet and using python to generate sounds.</p>\n<h2>What's next for Financial Cadences</h2>\n<p>More variations in sound.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n</div>", [""]], ["AirPiano", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"AirPiano \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/563/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>I wanted an easier and better way to play piano.</p>\n<h2>What it does</h2>\n<p>It allows you to play piano with leap-motion. You can play without touching anything.</p>\n<h2>How we built it</h2>\n<p>We built it in Java using the leap-motion SDK.</p>\n<h2>Challenges we ran into</h2>\n<p>We ran into problems when multi-threading. We also ran into problems playing midi correctly from Java.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Creating a leap-motion app that works well.</p>\n<h2>What we learned</h2>\n<p>We learned about multi-threading, the leap-motion SDK and  about midi.</p>\n<h2>What's next for LeapPiano</h2>\n<p>We will add more features that help people learn to play the piano easier and faster.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/leap-motion\">leap-motion</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/midi-js\">midi.js</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/nmittu/LeapPiano\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/nmittu/LeapPiano\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["How is That Class", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p><em>We got inspired when we were choosing courses for the next semester. We wanted to make something that could help us make the decision.</em></p>\n<h2>What it does</h2>\n<p><em>How is That Class helps students make appropriate decisions on their course choosing, by providing students with the feedback and the rathing from the former students of the course.</em></p>\n<h2>How we built it</h2>\n<p><em>We used Microsoft Azure as the platform of thie product, including an web-based app, a online mysql database and a overall dashboard.</em></p>\n<h2>Challenges we ran into</h2>\n<p><em>We were stumped by the connectivity between database and the website through cloud server, and we had a hardship displaying the correct information on the website.</em></p>\n<h2>Accomplishments that we're proud of</h2>\n<p><em>We managed to build out product on a fully-set-up Microsoft cloud server</em></p>\n<h2>What we learned</h2>\n<p><em>We learnt new languages like php, html, css and javascript and also how to build connections between a website and a database</em></p>\n<h2>What's next for How is That Class</h2>\n<p><em>We will eventually compelte the project, and hopefully in the future, students will be able to filter out their favorite classes much eaiser through How is That Class</em></p>\n<h1>Members</h1>\n<p>Peiran Long\nRaghav Gupta\nMichael Liu\nDongjoon kim</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/azure\">azure</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mysql\">mysql</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://howisthatclass.azurewebsites.net\" rel=\"nofollow\" target=\"_blank\" title=\"http://howisthatclass.azurewebsites.net\">\n<i class=\"ss-icon ss-link\"></i>\n<span>howisthatclass.azurewebsites.net</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Third Eye", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Third Eye \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/521/datas/gallery.jpg\"/>\n<p>\n<i>Second pass through the image, with second algorithm. It highlights main object (me)!</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Third Eye \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/522/datas/gallery.jpg\"/>\n<p>\n<i>Original</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Third Eye \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/523/datas/gallery.jpg\"/>\n<p>\n<i>First pass through image with my algorthm to extract important data</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Being able to create realistic objects for games with little effort, and low cost. </p>\n<h2>What it does</h2>\n<p>Extracts information from image to produce a 3D object.</p>\n<h2>How I built it</h2>\n<p>I used C++ to develop my algorithms to process the image.\nCreated a mini-studio (white printing paper) to control the environment.</p>\n<h2>Challenges I ran into</h2>\n<p>How to distinguish between garbage and important data.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I developed two algorithms that can extract a item from a photo with no input from the user. </p>\n<h2>What I learned</h2>\n<p>I learned how much I enjoy Image processing, and trying new things!</p>\n<h2>What's next for Third Eye</h2>\n<p>To fine-tune my algorithms. Provide a simple yet powerful API for those interested in game development.\nExtract data from any environment setting.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li><li><span class=\"cp-tag\">directx</span></li><li><span class=\"cp-tag\">win32</span></li></ul>\n</div>\n</div>", ["I designed the logo for the Third Eye. I also took photos and helped rename them. ", ""]], ["TopCurse", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"TopCurse \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/968/datas/gallery.jpg\"/>\n<p>\n<i>TopCurse in action</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>The midnight thought that one of the main pain points with top is that it's hard to keep track of how the most CPU-heavy processes are changing over time</p>\n<h2>What it does</h2>\n<p>Displays various system statistics (top-like listing of processes, disk transfers, network transfers, memory paging &amp; swapping), including a line graph of the CPU usage by the listed processes. While not as in-depth as top or netstat or other traditional system monitoring tools, TopCurse aims to provide a quick overview of all basic system statistics at a single glance in 80x24 terminal</p>\n<h2>How I built it</h2>\n<p>With python, ncurses, and various system utilities</p>\n<h2>Challenges I ran into</h2>\n<p>ncurses is a rather peculiar library in many ways, so interfacing with it presented some difficulties</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>The visualization is neat, information-dence, and easily readable</p>\n<h2>What I learned</h2>\n<p>More about ncurses, as well as the various system monitoring utilities in OS X</p>\n<h2>What's next for TopCurse</h2>\n<p>More statistics!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">ncurses</span></li><li><span class=\"cp-tag\">top</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/voynix/TopCurse\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/voynix/TopCurse\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I did everything!"]], ["Sprite Fight!", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Sprite Fight! \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/562/datas/gallery.jpg\"/>\n<p>\n<i>Form the team of your choice and regulate their stats!</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Sprite Fight! \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/892/datas/gallery.jpg\"/>\n<p>\n<i>The Battle!</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Sprite Fight! \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/872/datas/gallery.jpg\"/>\n<p>\n<i>BC Macho-Macho!    (Sample Card)</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Sprite Fight! \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/873/datas/gallery.jpg\"/>\n<p>\n<i>The Clown!    (Sample Card)</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Sprite Fight! \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/874/datas/gallery.jpg\"/>\n<p>\n<i>Heliman!    (Sample Card)</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Sprite Fight! \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/875/datas/gallery.jpg\"/>\n<p>\n<i>Koala!     (Sample Card)</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2><em><strong>Sprite Fight!</strong></em></h2>\n<h2>Inspiration</h2>\n<p>This game was inspired by a card game that we came up with in high school. It was a relatively simple game, where you had a team of monsters with HP, ATK, and special abilities. We\u2019d take turns attacking in battle until someone lost all his/her monsters. What made this game so enjoyable was our level of customization; for our game, every person got to make his/her own cards. Much of the fun stemmed from seeing what others created and how they interacted with your own cards. We wanted to simulate this with a virtual card game in Java where the players could have almost full control of their cards.</p>\n<h2>What it Does</h2>\n<p>While our game does not allow for players to create their own cards, we do offer them a great deal of control over their team. The game opens on a rules screen, where the player reads the rules and then presses the PLAY button while listening to original SpriteFight! music. At this point, a new window opens with a large selection of monsters and cards for the user to pick from for his/her team, and the music shifts to an original battle theme. After selecting a card, the player can set the card\u2019s HP and ATK (with total ATK/HP limits for the team). After both players have selected their teams, the window goes to a battle screen. The battle screen displays both players\u2019 teams on either side with a label in the middle to show the events. Players take turns selecting a monster of theirs for battle, and then using it to attack a monster on the opponent\u2019s field. This continues until finally, a victor has emerges, and a victory window opens with grand victory music. </p>\n<h2>How We Built it</h2>\n<p>We used Java in Eclipse and divided up the work to build it. Adit made the frame GUI components and composed/implemented the music. Christian further developed the GUI for gameplay as well much of the backend logic for game functionality. Tim helped with backend logic and implemented character abilities and battle sequences. Rama assisted with the backend logic and assisted with integration of the characters.</p>\n<h2>Challenges we ran into</h2>\n<p>We encountered many challenges, mainly due to the fact that none of us were true experts on Java Swing. We did our best to overcome these issues, and it worked out for the most part. We also had issues with fringe cases and getting the battle sequence to function properly. We had to make sure the HP of characters was being regulated and that the correct victor was pronounced. We also had many issues using git and with the internet, as half the time one of our team members couldn\u2019t be connected to the internet, meanwhile Git didn\u2019t work after a while for another member and we ended up emailing our code to the main member who\u2019s Git still worked.</p>\n<h2>Accomplishments that We're Proud Of</h2>\n<p>We are very proud of how we organized and used Git and the product we came up with. Overall it is a simple, but very fun and unique game that we think people will enjoy.</p>\n<h2>What We Learned</h2>\n<p>We learned many new Java skills including Swing and developed thorough critical thinking skills for game design. We also learned how to use Git, which assisted in our coordination of code.</p>\n<h2>What's next for 'Sprite Fight!'</h2>\n<p>What\u2019s next for our game? We still have some bugs to work out, and later on we hope to implement the game in Javascript to allow for a better GUI and an online playing component. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/ChristianNguyendinh/swing-java-game\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ChristianNguyendinh/swing-java-game\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Trip Saver", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>I wanted to be able to save trip ideas no matter where I was on the web.</p>\n<h2>What it does</h2>\n<p>Click on the extension and it pops up with a search bar and map. Type the place you want to add and see it on the map. Click the add button to save the place to your travel list.</p>\n<h2>What's next</h2>\n<p>I'd like to try and pull picture of that place and make a website to easily display the saved list.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li></ul>\n</div>\n</div>", [""]], ["WhichBus", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>WhichBus</h1>\n<p>Welcome to your new gem! In this directory, you'll find the files you need to be able to package up your Ruby library into a gem. Put your Ruby code in the file <code>lib/which_bus</code>. To experiment with that code, run <code>bin/console</code> for an interactive prompt.</p>\n<p>TODO: Delete this and the text above, and describe your gem</p>\n<h2>Installation</h2>\n<p>Add this line to your application's Gemfile:</p>\n<pre class=\"language-ruby\"><code>gem 'which_bus'\n</code></pre>\n<p>And then execute:</p>\n<pre class=\"language-nolang\"><code>$ bundle\n</code></pre>\n<p>Or install it yourself as:</p>\n<pre class=\"language-nolang\"><code>$ gem install which_bus\n</code></pre>\n<h2>Usage</h2>\n<p>TODO: Write usage instructions here</p>\n<h2>Development</h2>\n<p>After checking out the repo, run <code>bin/setup</code> to install dependencies. Then, run <code>rake spec</code> to run the tests. You can also run <code>bin/console</code> for an interactive prompt that will allow you to experiment.</p>\n<p>To install this gem onto your local machine, run <code>bundle exec rake install</code>. To release a new version, update the version number in <code>version.rb</code>, and then run <code>bundle exec rake release</code>, which will create a git tag for the version, push git commits and tags, and push the <code>.gem</code> file to <a href=\"https://rubygems.org\" rel=\"nofollow\">rubygems.org</a>.</p>\n<h2>Contributing</h2>\n<p>Bug reports and pull requests are welcome on GitHub at <a href=\"https://github.com/%5BUSERNAME%5D/which_bus\" rel=\"nofollow\">https://github.com/[USERNAME]/which_bus</a>. This project is intended to be a safe, welcoming space for collaboration, and contributors are expected to adhere to the <a href=\"http://contributor-covenant.org\" rel=\"nofollow\">Contributor Covenant</a> code of conduct.</p>\n<h2>License</h2>\n<p>The gem is available as open source under the terms of the <a href=\"http://opensource.org/licenses/MIT\" rel=\"nofollow\">MIT License</a>.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ruby\">ruby</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/nextbus\">nextbus</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/yusufameri/WhichBus\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/yusufameri/WhichBus\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Gain Guardian", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Connor ran for the purchasing steward of his fraternity with a noble goal - to bring protein to his lowly, malnourished counterparts. People told him, that his idea was a stretch. It would take a lot of work, and the haters doubted it would ever actually happen. </p>\n<p>Connor and Evans left school unvalidated plebeians and will return to Pittsburgh as messiah.\nVisit us at Table 4!</p>\n<h2>What it does</h2>\n<p>The Gain Guardian is designed with the goal in mind to dispense Protein shakes, but in reality have further reaching applications. All code was designed to be as portable as possible, and we kept the idea of scalable distributed sensors in the forefront of our process. </p>\n<p>The dispenser has a mag strip reader that accepts ID's from our university and upon swipe activates the dispensing system (for our prototype we did this by triggering a servo to move a sheet). The user can then dispense as much liquid as they care for. </p>\n<p>The dispenser will then log the users ID into initial state, a platform for data visualization. Here, users can see trends of drinking among all users of their device.</p>\n<p>We also built a Node JS backend that has information regarding the amount of consumption the individual has had, as well as the amount that is left in the container. When the container is running low on liquid the device will email the user to remind them to buy more. </p>\n<h2>How I built it</h2>\n<p>Gain Guardian was built in two phases, the physical integration and the web integration. The physical side of things was entirely done on a Raspberry Pi in python, leveraging WiringPi. On the other hand, the web integration was handled by a node.js server that accepts input through an HTML POST request from a Raspberry Pi. </p>\n<h2>Challenges I ran into</h2>\n<p>We had very little experience with Node or Raspberry Pi when coming into this project. </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>While we had little experience with Node and Raspberry Pi coming into this project, we left with a new powerful skill set with these technologies. </p>\n<h2>What I learned</h2>\n<p>We learned how to integrate the Raspberry Pi with the external world both sensors and web technologies. After integrating several protocols, each successive integration proved faster.</p>\n<h2>What's next for Gain Guardian</h2>\n<p>This project is only just the beginning. We made our backend easily extensible to more sensors, and are planning on expanding the power of this beverage inventory management system to become a full scale personal inventory management system. We will expand from solely caring about presence of items, to care more deeply about the quality of certain items by measuring, for example, temperature in a refrigeration unit. We also plan to continue having butt loads of fun. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag\">initialstate</span></li><li><span class=\"cp-tag\">magnetic-card-reader</span></li><li><span class=\"cp-tag\">flow-meter</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/servo\">servo</a></span></li><li><span class=\"cp-tag\">wiringpi</span></li><li><span class=\"cp-tag\">sparknote</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jade\">jade</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/digitalocean\">digitalocean</a></span></li><li><span class=\"cp-tag\">ducttape</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/requests\">requests</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/github\">github</a></span></li><li><span class=\"cp-tag\">pyserial</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag\">custom-restful-api</span></li></ul>\n</div>\n</div>", ["", ""]], ["MarketCapVis", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"MarketCapVis \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/532/datas/gallery.jpg\"/>\n<p>\n<i>MarketCapVis</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Come find us at table 32!!</h2>\n<h2>Inspiration</h2>\n<p>We wanted people to understand the market data with their eye and ears more quickly and easily. </p>\n<h2>What it does</h2>\n<p>It displays daily market values of multiple companies from 2005 to 2015. If the market value increased/decreased, the cube in the virtual environment will also change its size accordingly.</p>\n<h2>How we built it</h2>\n<p>We used a little bit of R and excel to align and normalize the market data of companies. Then, the analyzed data was feeded into Unity. Using JavaScript, we changes the size of the cubes in relation to the market value changes.</p>\n<h2>Challenges we ran into</h2>\n<p>We had successfully connected LEAP to control the music&amp;data simulataneously, but all sudden it broke down.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We're proud that we were able to show data in a virtual environment and implemented LEAP to manuveur the objects in the environment.</p>\n<h2>What we learned</h2>\n<p>We need more time</p>\n<h2>What's next for MarketCapDataVis</h2>\n<p>More data, better data vis, and fix LEAP.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/leap-motion\">leap-motion</a></span></li><li><span class=\"cp-tag\">music</span></li></ul>\n</div>\n</div>", ["Worked on leap integration, slider thing, and getting dk2 to work, and that's pretty much all I did...", "", ""]], ["Testudo_Alerts", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>Testudo_Alerts</h1>\n<p>This is a Twitter application that collects data from a Google Alert RSS feed about College Park, MD.  It posts about local news so you can easily see what is going on in College park.</p>\n<h1>Inspiration</h1>\n<p>Testudo Alerts came up from a need to better organize my Google Alerts.  I wanted the information, but I didn't want to have to dig through my emails.  I thought what better way to see them than a Twitter Timeline -- you can see the general order, can go back to it anytime I want, and I don't get anymore annoying emails.  This uses data from a College Park, MD Google Alert, turned RSS feed, to tweet about local news.</p>\n<h1>Challenges</h1>\n<p>Most of the challenges arose from dealing with APIs and getting them working.  I used twitter4j which did present some problems with inconsistent code examples between different sources. </p>\n<h1>What next?</h1>\n<p>With a little more time, I would expand on this hack to include a Wordpress blog that acts as a digest for the links the Twitter account posts.  I would also want to parse the individual pages better in order to actually extract an excerpt from the page instead of just pulling the title.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://twitter.com/testudo_alerts\" rel=\"nofollow\" target=\"_blank\" title=\"https://twitter.com/testudo_alerts\">\n<i class=\"ss-icon ss-link\"></i>\n<span>twitter.com</span>\n</a></li>\n<li><a href=\"https://github.com/a100lesserfaces/Testudo_Alerts\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/a100lesserfaces/Testudo_Alerts\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I wrote the code for pulling and parsing the RSS Feed, as well as posting it to Twitter.", ""]], ["Posteur", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Posteur \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/513/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Posteur \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/514/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Challenges we ran into</h2>\n<p>everything</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">electron</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/angular-js\">angular.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag\">ocaml</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sqlite\">sqlite</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/gmail\">gmail</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/linux\">linux</a></span></li><li><span class=\"cp-tag\">pymarksim</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bash\">bash</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/CyrusRoshan/Posteur\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/CyrusRoshan/Posteur\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Rock-Paper-Myo", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Rock-Paper-Myo \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/476/datas/gallery.jpg\"/>\n<p>\n<i>Rock-Paper-Myo</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Our original idea was to build a real time online Yoga teacher using Myo Armband. We started working on it and realized its limitations. Given a particular time frame, it was unfeasible for us to accurately develop it. Looking at the applications of Myo, we then came up with an idea of developing an interactive and \"forever-in-out-hearts\" game.- Rock-Paper-Myo!     </p>\n<h2>What it does</h2>\n<p>It recognizes the hand gestures and let's you virtually play an interactive rock-paper-scissor game using Myo. With our innovative tweaks and surprising twists, come enjoy an improvised and much more fun and thrilling game that will revive your childhood memories. (No tears please)</p>\n<h2>How we built it</h2>\n<p>Just two words- Myo magic.\nMyo provides wide range of API reference which can detect hand gestures. Although the data received is not accurate and varies from person to person, we discovered that calibrating and configuring the band for individuals gives better performance and accuracy. We were able to do this using Armband manager. We used python to extract data and analyse it for a smooth gaming experience. We also used Firebase for authentication. Responsiveness of firebase combined together with python SDK set up eased our development experience. :-D </p>\n<h2>Challenges we ran into</h2>\n<p>Since we were not receiving accurate data in the beginning, our biggest challenge was to come up with best configuration setting. Internet and getting food in such severe weather were another challenges for us. :-P</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>After having thought of an idea and working on it for a day, and then realizing it's limitations was a bit of disappointment for us, but still coming up with an even better and fun idea and successfully implementing it is an accomplishment that we are definitely proud of. </p>\n<h2>What we learned</h2>\n<p>We learned Myo. We learned about our creative and fun side which was hidden even to us for a long time (no applauds please!).  </p>\n<h2>What's next for Rock-Paper-Myo</h2>\n<p>The next step is Rock-Paper-Myo with fire and water and many more twists on many more fun filled games. Virtual reality is a reality now but we take you a step backwards to your childhood memories!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/HackerPack/rock-paper-myo\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/HackerPack/rock-paper-myo\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["DodgeBatt", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"DodgeBatt \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/452/datas/gallery.jpg\"/>\n<p>\n<i>Title Screen</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"DodgeBatt \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/460/datas/gallery.jpg\"/>\n<p>\n<i>Asteroid and a far off galaxy</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"DodgeBatt \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/467/datas/gallery.jpg\"/>\n<p>\n<i>Hand with shield and bat</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"DodgeBatt \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/479/datas/gallery.jpg\"/>\n<p>\n<i>Broken Asteroids</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"DodgeBatt \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/482/datas/gallery.jpg\"/>\n<p>\n<i>100 points!</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>DodgeBatt - Table 26</h1>\n<p>This is a single person VR+LeapMotion game designed during the UMD Bitcamp 2016 hackathon using Oculus Rift, LeapMotion, and Unity.</p>\n<p>One player stands on the side of a big room floating in space. You smack comets and asteroids using bats, and block oncoming attacks using a shield. The comets and asteroids (colelctively called \"balls\") aren't affected by any gravity, and they bounce off of the walls of the room until either one of them collides with you, or the bat contacts the ball!</p>\n<p>Gain points by breaking  balls using the bat, or deflect them using the shield, the choice is yours - but breaking the balls is the only way to gain points!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/MathewJennings/DodgeBatt\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/MathewJennings/DodgeBatt\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["What does Dan Hlavenka Look Like - Table 47", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"What does Dan Hlavenka Look Like - Table 47 \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/501/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Blind people cannot identify what is in front of them.</p>\n<h2>What it does</h2>\n<p>It is a robot that moves in front of a blind person and tells them to stop when it detects an object in front of them. It then snaps a picture and sends the picture to the CloudSight API, which identifies the object and sends back the name. It then says the name of the object into the headphones.</p>\n<h2>How we built it</h2>\n<p>We built the device using a Raspberry Pi to power the whole thing. The Laboratory for Telecommunication Sciences loaned us a Roomba + Camera system that we later added another webcam to and a proximity sensor. The rear-facing webcam uses OpenCV, while the front facing camera uses CloudSight for recognition. The Roomba is powered using iRobot Create, and the whole thing is brought together by a lot of Python and heart emoticon</p>\n<h2>Challenges we ran into</h2>\n<ul>\n<li>Integration OpenCV into the main program</li>\n<li>Making sure that the robot stopped when it detected an object</li>\n<li>Slow WiFi</li>\n</ul>\n<h2>Accomplishments that we're proud of</h2>\n<ul>\n<li>Integrating a ton of data into one device</li>\n<li>Finding a good image identification API</li>\n</ul>\n<h2>What we learned</h2>\n<ul>\n<li>How to use OpenCV</li>\n<li>How to use Roomba</li>\n<li>How to multithread</li>\n<li>How to use Foscam</li>\n</ul>\n<h2>What's next for What does Dan Hlavenka Look Like</h2>\n<ul>\n<li>Faster Image Recognition</li>\n<li>Better Footstep Detection</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">webcam</span></li><li><span class=\"cp-tag\">foscam</span></li><li><span class=\"cp-tag\">irobot</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/opencv\">opencv</a></span></li><li><span class=\"cp-tag\">proximity-sensor</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/cloudsight\">cloudsight</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/linux\">linux</a></span></li><li><span class=\"cp-tag\">pyttsx</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/sckasturi/whatdoesdanhlavenkalooklike\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/sckasturi/whatdoesdanhlavenkalooklike\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the image detection and integration of OpenCV into the movement.", "I worked on the proximity sensor detection, and roomba functions and multithreading.", "I worked on integrating OpenCV to detect the user."]], ["VR Musical Studio", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"VR Musical Studio \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/371/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"VR Musical Studio \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/372/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"VR Musical Studio \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/373/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"VR Musical Studio \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/374/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"VR Musical Studio \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/375/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"VR Musical Studio \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/376/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Oscar Winning Composer A.R.Rahman performing at CES 2016 with Virtual Music Instruments.</p>\n<h2>What it does</h2>\n<p>Helps to create music anytime , anywhere virtually using Oculus Rift. Users can get an immersive experience in playing Virtual Music Instruments coupled with haptic feedback</p>\n<h2>How we built it</h2>\n<p>We used the Unity platform to create a virtual environment along with the instruments which can be visualized using the Oculus Rift. The instruments are interacted via a Leap Motion Sensor which recognizes the users hand gestures and imitates them accurately on the virtual platform. Contact surfaces were detected within the Unity platform between the virtual user and the virtual instruments. To make the experience more life like, we introduced Haptic Feedback via a wearable hand glove device, which vibrates upon contact with the instrument. MYO armband was incorporated for arm gesture detection which was then used in manipulating the environment(sound). </p>\n<h2>Challenges we ran into</h2>\n<p>-Synchronizing Unity and Arduino IDE.\n-Synchronizing hardware components.\n-Haptic Feedback.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>-Immersive 3D environment developed in Unity.\n-Impressive Haptic Feedback.</p>\n<h2>What we learned</h2>\n<p>-Realized the essence of VR and its scope on a larger scale, especially in the field of entertainment.</p>\n<h2>What's next for VR Musical Studio</h2>\n<p>-VR Concert. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/leap-motion\">leap-motion</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/oculus\">oculus</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/myo\">myo</a></span></li><li><span class=\"cp-tag\">haptic-feedback</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/lkumar93/VR-Musical-Studio/\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/lkumar93/VR-Musical-Studio/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Designed the virtual environment on unity. Wrote C# scripts for rendering audio based on collision/ contact detection. Collaborated in writing scripts for Mayo integration", "Integrated all hardware components like Leap Motion, Haptic Feedback Glove, Myo Arm band, Oculus Rift with Unity. Wrote the C# scripts required for creating the application.", "I worked on the wearable hand device which provides the haptic feedback and also configured the MYO armband for gesture recognition."]], ["Virtual Stargazer", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Virtual Stargazer \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/570/datas/gallery.jpg\"/>\n<p>\n<i>The night sky with Oculus Rift DK2!</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We were mainly inspired by existing stargazing apps like Google Sky Map and Stellarium that stitch together a complete and accurate picture of the night sky. They're commonly used to assist with the identification of stars in the field but are also a helpful educational resource for people who for reasons like light pollution and lack of experience have not been able to appreciate a starry night sky. Currently, a robust virtual reality stargazing app has never been released to the public and we wanted to try our hands at building one.</p>\n<h2>What it does</h2>\n<p>Immerses the user in a scene of the night sky, with the opportunity to interact with specific stars to learn more about their features.</p>\n<h2>How we built it</h2>\n<p>The app runs on the Oculus Rift hardware, and was built using the Unity Game Engine, with scripting done in C#. The images were rendered with also rendered with Blender.</p>\n<h2>Challenges we ran into</h2>\n<p>As neither of us have had experience developing with the Oculus Rift before, the major roadblock to progress for us was getting the hardware to work, which led to issues of not being able to test vital features of the app until late in the hackathon. Hardware issues aside, we anticipated that the process of accurately projecting 2D images to a panoramic format necessary for a VR environment, and so far we have still not been able to find a satisfactory algorithmic solution.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Getting the Oculus Rift to work and building a relatively convincing and accurate stargazing environment.</p>\n<h2>What we learned</h2>\n<p>We were able to gain valuable experience with the Oculus Rift hardware, which should definitely cut down on the prep time needed to work with it in the future. There were also interesting UI design issues unique to VR that we didn't think about before starting on the project that we learned about.</p>\n<h2>What's next for Virtual Stargazer</h2>\n<p>Automated sky generation, fleshed out VR user interface with Leap Motion for toggling details about each star, more realistic environment.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/oculus\">oculus</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/jananzhu/Virtual-Stargazer\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/jananzhu/Virtual-Stargazer\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Automantic", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Automantic \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/424/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>Table 44</p>\n<h2>Inspiration</h2>\n<p>Sometimes you forget to send that 'good morning' text to your significant other, and the results can be catastrophic.</p>\n<h2>What it does</h2>\n<p>With our application, you can select a contact, select a time window to send a message between, and then hit go. From there, a randomized Good Morning text will be created and sent at the randomized time every day until stopped.</p>\n<h2>How we built it</h2>\n<p>We built our app using Android Studio. </p>\n<h2>Challenges we ran into</h2>\n<p>UI. As always.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Getting the sentence randomization completed.</p>\n<h2>What we learned</h2>\n<p>We learned that things in Android Studio are a lot easier than you might think they are at first.</p>\n<h2>What's next for Automantic</h2>\n<p>In the next coming days we will complete our application fully. Once it is finished, we have plans to put it on the Google Play store for free.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xml\">xml</a></span></li></ul>\n</div>\n</div>", ["I did a lot."]], ["Synesthesia", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Synesthesia \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/561/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>Presenting at Table 32!</p>\n<h2>Inspiration</h2>\n<p>We wanted to be able to run Google's Deep Dream Neural Network on songs without having to retrain the neural net on song files.  So instead, our quest was born to build a conversion from song to picture so we could \"listen\" to various picture effects, including Deep Dream. </p>\n<h2>What it does</h2>\n<p>Our app allows users to upload songs (or any music file), see the image representation of it (or just upload an image), apply different transformations to the generated images, and then listen to how they sound when converted back. </p>\n<h2>How we built it</h2>\n<p>Our application is a fairly complicated stack. The front end is build with NodeJS, React, and MongoDB (among many others) to handle requests, uploading files, and the user interaction. Once an .mp3 has been uploaded, it is handed off to ffmpeg to convert it to a .wav, which is run through sox to convert to a .raw file.  The .raw file can then be parsed into a .png (for lossless compression) using imagemagick, which can be opened, read, and edited by our python script (using PIL and other manual image transformations we wrote).  Python then hands the edited .png file back to imagemagick to convert it back to a .raw file, from which we can convert back to .wav and then .mp3, and then return it to the user.  Our full stack is the following: NodeJSExpressBabelES2015MongooseReactSocketIOWebpackAWSMongoDBPythonBashFFMPEGSoXImageMagickPILSciKitKerasDeepDreamISMB, also known as the NEBEMRSWAMPBFSIPSKDISMB Stack :)</p>\n<h2>Challenges we ran into</h2>\n<p>We ran into many initial challenges in the conversion between .mp3 and .png (and getting it to go back).  There are many, many intricacies in getting the exact right bitrate, sampling rate, and dimensionality of the files to ensure that each of them maintain the integrity of the data perfectly.  Additionally, wrapping our heads around conversions of pixel-level transformations being mapped to sample-level transformations proved very difficult, because they aren't 1:1!</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We're proud we were able to successfully convert a song into an image, run it through Google's Deep Dream Neural Network (and other image transformations), and then listen to what it did! We're proud that we now know what \"red\" sounds like, can listen to a neural network think, and can hear a literal blue-shifted song.  We've done some of the coolest scientific dimensional analysis yet, and successfully learned how to convert seemingly unrelated pairs of values, such as converting RBG to seconds, pixels to samples, and more.  We're excited we were able to stand up an efficient, NodeJS web app on top of our enormous stack that could function fluidly with all of our components. </p>\n<h2>What we learned</h2>\n<p>We learned a ton about song data, audio files, image files, and how they actually work under the hood. We learned how to deploy React, and how to integrate a full MEN stack with a Python audio stack. </p>\n<h2>What's next for Synesthesia</h2>\n<p>Adding new transformations, and giving the user additional cool options of what to do to their files. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">sox</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ffmpeg\">ffmpeg</a></span></li><li><span class=\"cp-tag\">pil</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/imagemagick\">imagemagick</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bash\">bash</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag\">altjs</span></li><li><span class=\"cp-tag\">async</span></li><li><span class=\"cp-tag\">babel</span></li><li><span class=\"cp-tag\">es2015</span></li><li><span class=\"cp-tag\">id3js</span></li><li><span class=\"cp-tag\">lodash</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongoose\">mongoose</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/react\">react</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/socket-io\">socket.io</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/uikit\">uikit</a></span></li><li><span class=\"cp-tag\">webpack</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag\">deepdream</span></li><li><span class=\"cp-tag\">keras</span></li><li><span class=\"cp-tag\">scikit</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/bekher/synesthesia-web\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/bekher/synesthesia-web\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["The entire front end", "", ""]], ["StockTunes", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"StockTunes \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/471/datas/gallery.jpg\"/>\n<p>\n<i>Stock Tunes</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"StockTunes \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/472/datas/gallery.jpg\"/>\n<p>\n<i>Home Page</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>StockTunes</h1>\n<p>Visualise your stocks with music! StockTunes lets you listen to your favourite stock's status with tunes generated by them.\nTry it out at <a href=\"http://hackerpack.me/StockTunes\" rel=\"nofollow\">http://hackerpack.me/StockTunes</a></p>\n<p>TABLE NUMBER 22</p>\n<h2>Inspiration</h2>\n<p>Why always visualise data with graphs when you can use music to feel the data!</p>\n<h2>What it does</h2>\n<p>StockTunes gets the data of your favourite stock for the past 3 months and composes a good sounding tune out of it</p>\n<h2>How we built it</h2>\n<p>We used HTML, python, ffmpeg and many other awesome technologies. The process is as follows</p>\n<ul>\n<li>Get the name of the stock and crawl the web to get the stock data</li>\n<li>Preprocess the crawled data</li>\n<li>Compose a tune with the data with notes</li>\n<li>Apply a sound font on the notes to get a tune and mix it up to make it sound pleasing</li>\n<li>Put it in the cloud so that it can be accessed from anywhere</li>\n<li>Use a website to play the music generated by your stocks and visualize them beautifully</li>\n</ul>\n<h2>Challenges we ran into</h2>\n<p>Converting the data into sound is easy but converting the sound into music rather than noise was a really interesting challenge to work on</p>\n<h2>Accomplishments that we are proud of</h2>\n<p>We created some cool sounding tunes from the otherwise boring numeric stock data!</p>\n<h2>What we learned</h2>\n<p>We learned so many new technologies for playing around with music files and what makes music sound so good</p>\n<h2>What's next for StockTunes</h2>\n<p>Add lyrics to the songs with relevant data ;P</p>\n<h2>Built With</h2>\n<ul>\n<li>python</li>\n<li>pydub</li>\n<li>ffmpeg</li>\n<li>chartjs</li>\n<li>html5</li>\n<li>javascript</li>\n<li>jquery</li>\n<li>bootstrap</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">pydub</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ffmpeg\">ffmpeg</a></span></li><li><span class=\"cp-tag\">chartjs</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://hackerpack.me/StockTunes\" rel=\"nofollow\" target=\"_blank\" title=\"http://hackerpack.me/StockTunes\">\n<i class=\"ss-icon ss-link\"></i>\n<span>hackerpack.me</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Centsible", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Centsible \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/478/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p><strong>Table 11</strong></p>\n<h2>Inspiration</h2>\n<p>I wanted to create a budget tracker to manage finances online.</p>\n<h2>What it does</h2>\n<p>Tracks the user's account on the capital one api. When purchases are made, money is deducted from the capital one account and when there is not enough money available in the account, checkout buttons are disabled. However, the user can temporarily disable the checkout button disabling in order to make an emergency purchase.</p>\n<h2>How I built it</h2>\n<p>I used the capital one api to store consumer data and then used a chrome extension built with javascript/jquery/html/css to carry out the intended functions.</p>\n<h2>Challenges I ran into</h2>\n<p>The capital one api only serves their content over HTTP, and since amazon needed to be served over HTTPS, the insecure resource could not be fetched from the secure context. Thus, created a nginx proxy from my Arch Linux server and domain to the capital one api that was served over HTTPS.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<ul>\n<li>Figuring out how to correctly proxy the api from my server.</li>\n<li>Adding the temporarily disable button that uses chrome.storage.sync to save data that would be synced across chrome on all the user's devices.</li>\n</ul>\n<h2>What I learned</h2>\n<ul>\n<li>How to build a chrome extension</li>\n<li>How to use the nessie api</li>\n<li>How to proxy a HTTP resource through a HTTPS server</li>\n</ul>\n<h2>What's next for Centsible</h2>\n<ul>\n<li>Adding more site support other than just amazon.com and newegg.com</li>\n<li>Adding more settings</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag\">nginx-proxy</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/capital-one\">capital-one</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/vim\">vim</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/chrome\">chrome</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/nginx\">nginx</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/linux\">linux</a></span></li><li><span class=\"cp-tag\">arch-linux</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/willzhang05/centsible.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/willzhang05/centsible.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Emojify", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Emojify \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/369/datas/gallery.jpg\"/>\n<p>\n<i>Happiness</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Emojify \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/377/datas/gallery.jpg\"/>\n<p>\n<i>Surprise</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Alexithymia, the inability to read emotion in faces, occurs in 10% of the population while only 1.1% of the population has autism. So the inability to read emotion is far more common that most people know and extends well beyond those on the autism spectrum. Even for those who can read emotions, maybe looking at these altered photos will make the habitual Facebook scrolling process more humorous and/or pass by more quickly.</p>\n<h2>What it does</h2>\n<p>Senses emotions in people's Facebook photos and overlays their faces with emoji that are known to be mapped to certain emotions so that people who are unable to read people's emotions can better understand their friends. </p>\n<h2>How I built it</h2>\n<p>I made a Google Chrome extension using Javascript and the Microsoft Oxford Cognitive Services API to decide which emoji to use. </p>\n<h2>Challenges I ran into</h2>\n<p>Javascript debugging, lots of Chrome issues</p>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<p>I learned how to make a Google Chrome extension and use a new emotion analysis API.</p>\n<h2>What's next for Emojify</h2>\n<p>I would like to replace objects (other than just faces) with their respective emoji in the future.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/microsoft-project-oxford\">microsoft-project-oxford</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/y4smeen/bitcamp2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/y4smeen/bitcamp2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Intraconnect", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>Bitcamp2016</h1>\n<hr/>\n<h1>Inspiration</h1>\n<hr/>\n<p>We all are sick and tired of waiting or scheduling a visit with academic advisors. Why not bring the academic advisor home?\nWe thought of two main possible activities that are completed by an advisor in order to help a student i.e. Getting to know seniors and developing a course plan.</p>\n<hr/>\n<h1>What it does</h1>\n<hr/>\n<p>Our web app collects data about the type of roles an individual is looking for example \u201cSoftware Developer\u201d, \u201cData Analyst\u201d, etc. and also enquires about company\u2019s name he/she aspires to work in. Along with the company, we have attached another determining variable called number of years of work experience. When a user enters in these values, the algorithm gives you a list of seniors that have worked in these companies working as mentioned specific roles.\nThe second part of the application helps in determining a course plan that a student should stick to based on the same 2 variables; role and years of work experience.</p>\n<hr/>\n<h1>How we built</h1>\n<hr/>\n<p>Database \u2013 MySql\nLanguages used \u2013 HTML5, CSS3, JS, jQuery and PHP\nChallenges we ran into\nWe had planned to implement a machine learning algorithm to come up with a course plan using R. we were unable to run R script on a webpage and integrate JS and PHP objects with R script. So we decided not to work with R very late in our development.</p>\n<hr/>\n<h1>What\u2019s Next for our app</h1>\n<hr/>\n<p>Super cool machine learning algorithm and an extensive database consisting many students.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mysql\">mysql</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/phaneendrakumar/Bitcamp2016.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/phaneendrakumar/Bitcamp2016.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Designed and developed Webpages and application data flow. Integrated PHP with HTML,CSS and JS.Designed and developed database using mysql. ", "Designed and developed all the web pages in the application.Helped in integration with php and fixing errors after integration. Technologies used JS, HTML5, CSS3, Sketch.js, jQuery and PHP", "Worked on the backend of the website for delivering the course plan and senior's information to the current student."]], ["Moosic", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>I am really tired right now because I've had about 3 hours of sleep in 2.5 days. You may have seen other people running to go get cookies or food as soon as it was presented, but I felt as if I was solving real world problems so I was constantly engaged in Moosic.</p>\n<p>Music is obviously a huge part of everyone's life and what better way to enjoy each other's taste in music than to argue about who gets the AUX chord or to fight about who's the better DJ at a party. Well, Moosic will solve your problem because now you can make a playlist together. It doesn't matter if you are in the passenger seat of the car, the backseat of the car, or even the trunk! You now have the power to do whatever you want and express yourself through music with my Android app Moosic.</p>\n<p>I plan to add in up votes and down votes, and along with that, a ranking system with badges, reputation, etc. Hopefully expand this app to many different backseats around the world. Had a really great time developing the app and especially enjoyed every bit of the MEAN stack(Mongodb, ExpressJs, AndroidSDK, Node.js). :) Thank you BitCamp!</p>\n<p><a href=\"https://gitlab.com/ajacksterz/bitcampbackend\" rel=\"nofollow\">https://gitlab.com/ajacksterz/bitcampbackend</a> (backend)\n<a href=\"https://gitlab.com/ajacksterz/bitcamp\" rel=\"nofollow\">https://gitlab.com/ajacksterz/bitcamp</a> (android)</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mean\">mean</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://gitlab.com/ajacksterz/bitcampbackend\" rel=\"nofollow\" target=\"_blank\" title=\"https://gitlab.com/ajacksterz/bitcampbackend\">\n<i class=\"ss-icon ss-link\"></i>\n<span>gitlab.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["NetRideVR", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"NetRideVR \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/365/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"NetRideVR \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/366/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Why</h2>\n<p>We all know that today's world runs on the Internet, but what does that really\nmean? The key is that 5 letter prefix: Inter. We're all interconnected, but\nsometimes it's hard for us to realize that.</p>\n<h2>What</h2>\n<p>With NetRideVR, we aim to provide an immersive VR experience which allows any\nuser to experience that interconnection first hand. With NetRideVR, you can fly\nwith the bits and bytes that make up our digital world and see just how far they\ntravel every second to serve our world.</p>\n<h2>How</h2>\n<p>Oculus (CV1), Unity 5.4 (with C#), a bit of data from CAIDA, lots and lots of\nSoylent.</p>\n<h2>Challenges</h2>\n<ul>\n<li>How do we tell a story without words?\n\n<ul>\n<li>What story do we want to tell?</li>\n</ul></li>\n<li>How do we represent something intangible in a way that is meaningful to users?\n\n<ul>\n<li>Can we make it meaningful, breathtaking, and badass all at once?</li>\n</ul></li>\n</ul>\n<h2>Accomplishments</h2>\n<p>Making it all come together.</p>\n<p>-- Table 31</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/oculus\">oculus</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://drive.google.com/file/d/0B1JjmkfitzezMGJUUnZfNHdDT2s/view?usp=sharing\" rel=\"nofollow\" target=\"_blank\" title=\"https://drive.google.com/file/d/0B1JjmkfitzezMGJUUnZfNHdDT2s/view?usp=sharing\">\n<i class=\"ss-icon ss-link\"></i>\n<span>drive.google.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Avenue VR", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Avenue VR \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/567/datas/gallery.jpg\"/>\n<p>\n<i>360 Photosphere</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Avenue VR \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/576/datas/gallery.jpg\"/>\n<p>\n<i>Landing</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Avenue VR \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/582/datas/gallery.jpg\"/>\n<p>\n<i>Swipe Interface</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Travel doesn't always go according to plan. Plans change, people bail, and things are not always as they seem. With Avenue, I want people's expectations to meet reality.</p>\n<h2>What it does</h2>\n<p>Avenue is short term rental application that allows user to view destinations in VR -- before they book. No surprises, no unexpected changes, and an immersive viewing experience to back it up. Whether you want to explore new areas or plan a trip, Avenue lets you experience it like never before.</p>\n<h2>How I built it</h2>\n<p>The 360 photos of the rooms were taken at several AirBnB's througout Washington, DC using Google \"StreeView\" application. Upon kickoff, I began searching for listings that I found suitable for the demo. Saturday morning, I reached out to a number of hosts and explained my idea.  I designed the interface for Avenue in Photoshop. Using Tether as a UI framework, I experimented with several different ways of presenting the necessary information before settling on a \"swipe\" interface. I created an interactive prototype of the application in Invision, and using animations and overlays, I tried to improve the responsiveness of the design.</p>\n<h2>Challenges I ran into</h2>\n<p>The core feature of the platform, the ability to view rooms in 360 degrees proved to be the most difficult feature to execute. My original plan was to link to the photospheres directly in the Google Streetview application, but through several hours of trial, error, and excessive amounts of chickfila sauce, I realized that wouldn't work. Ultimately, I ended up rendering out each photosphere as an equirectangular video in order to link directly to the corresponding rooms. Additionally, iOS versions of Youtube app do not support Cardboard 3d mode, but just 360 degree video. </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I'm proud of the design that I ended completing in the amount of time given. Although there is lots of room for improvement, I felt personally satisfied by how the interface and interactivity of the project turned out. </p>\n<h2>What I learned</h2>\n<p>iOS is horrendous for testing VR applications.\nNo matter how short a video is, After Effects can figure out a way to complicate it.</p>\n<h1>What's next for Avenue</h1>\n<p>Bootstrapping a working MVP for mobile, then shifting into developing a dedicated VR interface. With Avenue, I want to change the way people discover new travel destinations. Take a look around. It's just the beginning.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">tether</span></li><li><span class=\"cp-tag\">invision</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/photoshop\">photoshop</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://invis.io/WE6VPVHZG#/149686897_Feed1\" rel=\"nofollow\" target=\"_blank\" title=\"https://invis.io/WE6VPVHZG#/149686897_Feed1\">\n<i class=\"ss-icon ss-link\"></i>\n<span>invis.io</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["The Perfect Partner ", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"The Perfect Partner  \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/447/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"The Perfect Partner  \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/448/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We were really tired of being so bad at <em>water</em> pong, so we decided to make a robot that would be really good at it. Table 39</p>\n<h2>What it does</h2>\n<p>It detects where the cups are, and then launches a ping-pong ball right into it. Table 39</p>\n<h2>How we built it</h2>\n<p>We used ROS and OpenNI2 to get the image data, OpenCV to analyze it, and then a bunch of hardware to fire the ball. Table 39</p>\n<h2>Challenges we ran into</h2>\n<p>Making the ball consistent was super hard. Also, it was tough to stop vibrations</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>This was cool.</p>\n<h2>What we learned</h2>\n<p>Hardware is super sketch.</p>\n<h2>What's next for The Perfect Partner</h2>\n<p>Giving it a cutoff.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag\">romeo</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">ros</span></li><li><span class=\"cp-tag\">tape</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/iphone-sdk\">iphone-sdk</a></span></li></ul>\n</div>\n</div>", ["Coded Arduino and Romeo, many structural elements, CADing/3D printing", ""]], ["API experiment", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"API experiment \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/398/datas/gallery.jpg\"/>\n<p>\n<i>MY work</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>wanted to make a website and try new things i have never worked with before. Table 26</p>\n<h2>What it does</h2>\n<p>It allows you to have a website that is connected to you spotify account. it can play music and it will allow you to send emails through sparkpost when you like a piece of music</p>\n<h2>How I built it</h2>\n<p>i used namecheap to set up my domain. i made an account using the domain. i used spotify api and sparkpost api to get most of it done. </p>\n<h2>Challenges I ran into</h2>\n<p>Everything since I hadn't worked with any of the stuff I worked with and i was working alone. The hardest part i think is figuring out what certain things do and trying to tailor something towards what you want to do.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Building a website that has apps and other widgets.I really jumped into this hackathon with the intention of making something with something i had never worked with and i accomplished just that and for that im proud of myself.</p>\n<h2>What I learned</h2>\n<p>A lot of useful web developing tools</p>\n<h2>What's next for API experiment</h2>\n<p>Develop it into a real and functional website with more integrated parts.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jade\">jade</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag\">api</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/spotify\">spotify</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sparkpost\">sparkpost</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/namecheap\">namecheap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li></ul>\n</div>\n</div>", [""]], ["Storybook VR", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Storybook VR \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/347/datas/gallery.jpg\"/>\n<p>\n<i>Promo poster</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>The inspiration for this project came from two sources: the groups strong desire to develop in VR and the Bitcamp theme of exploring new grounds. </p>\n<h2>What it does</h2>\n<p>This program brings the feel and magic of a children's storybook into VR. </p>\n<h2>How we built it</h2>\n<p>We initially began by searching for a compelling yet simple short story; so we settled on the brother's Grimm's Sleeping Beauty. We storyboarded a number of scenes, boiled them down into short narrative passages and sought to implement these scenes through the Unreal engine. To enhance the storybook feel, this three dimension landscape is decorated with two dimensional assets. We also used the storybook as the hub for which the story could be driven.</p>\n<h2>Challenges we ran into</h2>\n<p>Having limited experience with Oculus Rift, but considerable experience in the unreal engine, we faced numerous challenges while integrating the CV1s and DK2s with our rigs and the development environment. Numerous internet outages also plagued the startup of our ideation and development processes.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Some members who were completely new to oculus rift and UE4 were able to competently develop on those platforms. We were able to integrate hand drawn assets, on-site narration, and VR support on our first group hacking venture.</p>\n<h2>What we learned</h2>\n<p>Our team learned about Oculus integration, UE4 development, group development, work distribution, concurrent version setup and use, and the great fun to be had at hacking events like Bitcamp!</p>\n<h2>What's next for Storybook VR</h2>\n<p>We hope to complete our current story, and potentially expand to other narratives. We'd also like to focus more on user interaction and narrative impact.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">oculus-rift-and-unreal-editor</span></li></ul>\n</div>\n</div>", ["", "", "", ""]], ["The Smart Stick", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We originally went into Bitcamp very interested in helping those living with disabilities. After brainstorming for a bit, we decided that it'd be most innovative to bring the walking stick for the blind into the 21st century. We fiddled around with some ideas for possible innovations, started building, and refined our idea over the last few days.</p>\n<h2>What it does</h2>\n<p>There is an ultrasonic rangefinder at the bottom of the stick that detects how far the blind user is from bumping into an object. If they are too close to bumping into something, a motor will spin and provide vibration feedback to the user. Otherwise, the user has access to a single button. Pressing the button for a short bit will take an image from the onboard camera and use the Clarifai API to describe the images in the photograph. Holding the button down for a while will send a text message with the user's location asking for assistance.</p>\n<h2>How we built it</h2>\n<p>When we originally had the idea, we had nearly no idea of where to gather the materials for the project. Eventually, we searched many of our engineer friends for sensors and actuators, and were lucky enough to find a good stick on the ground. Eventually we just sat down at the keyboard and started learning the relevant APIs. After a while, we were building it!</p>\n<h2>Challenges we ran into</h2>\n<p>We had noticeable challenges with analog versus digital signals. In order to analyze both types of signals, we were forced to use an Arduino in addition to our Raspberry Pi. Then comes the issue of communicating between the two. This was likely one of the biggest obstacles we had to face.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are proud of our ability to design and build circuits in such a small amount of time. We were not prepared to work with hardware when originally going into this event, but we were still able to perform well. </p>\n<h2>What we learned</h2>\n<p>We learned much about the process of using hardware in a project. The creation of circuits and integration of these circuits with the software was a new experience for all of us.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bash\">bash</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-maps\">google-maps</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li><li><span class=\"cp-tag\">google-translate-api</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/plivo\">plivo</a></span></li></ul>\n</div>\n</div>", ["", "", "", ""]], ["Hackademy", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Have you ever been stuck on a homework question in the middle of the night with no one to help you? Hackademy gives you 24 access to real professors online that specialize in many different subjects. </p>\n<h2>What it does</h2>\n<p>Hackademy allows you to study, do homework, or even get ahead with our dedicated team of expert professors. Professors will go through a screening and application process before becoming a member. They will then be able to set their availability and begin chatting with students. Students will be able to request help from professors by subject. Professors can respond to students via text, video, and even send documents!</p>\n<h2>How I built it</h2>\n<p>We coded the front-end from scratch using the Bootstrap framework. We then attempted to created the back-end with PHP and mySQL.</p>\n<h2>Challenges I ran into</h2>\n<p>Tons of issues with the back-end. We were having issues connecting to the server and the PHP code wasn't cooperating with our existing code.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We have a fully functional, aesthetically pleasing website that could be very useful to students around the world.</p>\n<h2>What I learned</h2>\n<p>Don't wait to start on the back-end! Start planning and working early as soon as you get an idea in mind. It's always easier to alter some existing code rather than coding a whole website from scratch.</p>\n<h2>What's next for Hackademy</h2>\n<p>Additional communication options between students and professors.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mysql\">mysql</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://oludavid.com/hackademynow.com/\" rel=\"nofollow\" target=\"_blank\" title=\"http://oludavid.com/hackademynow.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>oludavid.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["FitnessVR", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"FitnessVR \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/380/datas/gallery.jpg\"/>\n<p>\n<i>FitnessVR</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"FitnessVR \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/381/datas/gallery.jpg\"/>\n<p>\n<i>About Us</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"FitnessVR \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/382/datas/gallery.jpg\"/>\n<p>\n<i>What We DO</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We love the VR experience, it's immersive and realistic. We want to further our love for travelling and integrate it with the boring habit of running on a treadmill.</p>\n<h2>What it does</h2>\n<p>The website will host content created by users and curated by the community according to the guidelines so that you enjoy every moment on your treadmill. </p>\n<h2>How we built it</h2>\n<p>On the infrastructure side, we built a website where users can submit links to the videos that can be consumed in VR during running. It uses Bootstrap on landing page and connects to Google Firebase for Database and Authentication services. A logged-in user will get access to a curated list of content and a form to submit content to the community. </p>\n<h2>Challenges we ran into</h2>\n<p>Early-on, we were going to build a VR Video Player that would change the playback speed of the video according to the running speed. But then the libraries either did not have control for playback speed or they couldn't be used to create equirectangular side-by-side content for VR. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We have created a few videos to validate the experience. Also, we got some first-hand tips from Oculus's CEO Brendon Iribe on what to do and what to avoid. With all the learnings, we have created a website where you'll access links to the videos that users can access with have been curated for the specific purpose of running on a treadmill. </p>\n<h2>What we learned</h2>\n<ul>\n<li>VR Videos are of lot many types and there's not a lot of support to make technology for that. </li>\n<li>Motion Sickness in VR is a real concern and we've addressed it through the content guidelines.</li>\n<li>VR user doesn't have a clue about the orientation and it's necessary to give the user as much orientation as possible else they can easily trip. </li>\n<li>We learned authentication using Google Firebase</li>\n</ul>\n<h2>What's next for FitnessVR</h2>\n<ul>\n<li>360 degree video content</li>\n<li>Create our own VR player to remove dependency on YouTube Player. </li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/samsung-gear-vr\">samsung-gear-vr</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-cardboard\">google-cardboard</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/youtube\">youtube</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/jigneshdarji91/fitnessVR\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/jigneshdarji91/fitnessVR\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"http://jigneshdarji91.github.io/fitnessVR\" rel=\"nofollow\" target=\"_blank\" title=\"http://jigneshdarji91.github.io/fitnessVR\">\n<i class=\"ss-icon ss-link\"></i>\n<span>jigneshdarji91.github.io</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["CareApp ", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"CareApp  \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/277/datas/gallery.jpg\"/>\n<p>\n<i>CareApp</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"CareApp  \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/389/datas/gallery.jpg\"/>\n<p>\n<i>Temperature Sensor</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"CareApp  \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/390/datas/gallery.jpg\"/>\n<p>\n<i>BLE</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"CareApp  \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/391/datas/gallery.jpg\"/>\n<p>\n<i>Alarm Condition: Low RSSI</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"CareApp  \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/392/datas/gallery.jpg\"/>\n<p>\n<i>RSSI based prediction</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"CareApp  \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/393/datas/gallery.jpg\"/>\n<p>\n<i>Waiting for sound sensor data</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration : It is my first hackathon and passion of learning some thing I never worked on inspired me to work for 24 hours without sleep. Wow, it has been a great experience implementing something from hardware based BLE, interfacing of sensors, study of Intel Edison architecture, to using Wi Fi and bluetooth to connect to IDE and mobile App.</h2>\n<p>After a weekend of work, I really feel I can mature this App and product and help working parents in monitoring their babies at home.</p>\n<h2>What it does : It is baby care application where parents can monitor babies from their app in case they have to leave them home in emergency. The App can be used to monitor pets as well. A Intel Edison IOT based device would monitor and send sensor reading to the cloud.</h2>\n<p>I would divide functionality into three parts: </p>\n<ol>\n<li><p>Location monitoring : We monitored location of baby in the home with the help of RSSI (Received Signal Strength Indicator) of built in BLE module in Edison Chip. If it is below a threshold, the system will send a Alarm on the app and baby may be going out of house premises. We use a sample of data to arrive on a decision.</p></li>\n<li><p>Activity Monitoring: With the help of sound sensor, we could decide if the baby is crying (used a threshold of 900 based on noise variance of the system) or baby is sleeping or baby is playing. This helps parent to know if baby needs their immediate attention or not.</p></li>\n<li><p>Temperature Sensor: It measures baby's surrounding temperature and divides into three parts : Cold, pleasant and hot. According to signal value, the Android App tells the parent if the temperature is not suitable for baby. We can further use a thermostat to control the temperature.</p></li>\n</ol>\n<h2>How we built it :</h2>\n<p>We took whole grove kit (LCD, sound, temperature Sensors), Intel Edison SOC (build in BLE) with Arduino break out board, one Android phone, Arduino and Intel IOT XDK IDE. We interfaced various sensors with the help of Grove base shield. After studying for a while about all the pins on the board, Base shield made it really easy to interface various sensors.</p>\n<p>We flashed the firmware into Edison and connected it via Wi Fi. To achieve RSSI based monitoring, we configured Bluetooth Stack of Intel Edison by ssh into the device and added our mobile bluetooth to simulate the exact condition. </p>\n<p>We used SCP connection to send the sensor data continuously to a cloud server. We used glue.umd.edu to store sensors data and Android App reads the data from glue server. In this way, all the requests and response from CareApp are connected via Internet and anybody from anyplace can control with log in credentials.</p>\n<p>At last, we designed Android App (first time in life) to help provide a simple but very informative UI to the parents or end user. We used ANT and jsch to achieve SCP functionality on the Android APP.</p>\n<h2>Challenges we ran into: Major issue I ran into was RSSI value read through BLE. RSSI is receive signal strength indicator and if it is giving a low value that means baby is not in his room or house. As no API was there, it was difficult for us and we almost decided not to use RSSI after studying documents for a long time. Bu, then we decided  to read the value of RSSI through command line interface of Edison board. We ran commands through system API from Arduino code and used popen to point to the return value.</h2>\n<p>Second, accessing files on the Linux OS was an issue but after reading about process and pthreads, we were able to figure out the communication between Linux based file system and our code.</p>\n<p>Third issue was LCD interface, which we came to know that we are using a different version of code and LCD. After changing pin numbers, we were able to debug it.</p>\n<p>Last issue which we faced this morning was SCP connectivity on Android APP side. We figured out that Java ANT module Project and typedefs create problems when used together. Android Studio in built grove build tools provides alternative method which we used.</p>\n<h2>Accomplishments that we're proud of : The Idea of using RSSI from BLE module to compute distance and its successful execution, robust design and a working APP that parents can access over internet from anywhere</h2>\n<h2>What we learned : Bluetooth Low Energy, IOT, Edison powerful processor, how to make Android App, Not to give up.</h2>\n<h2>What's next for CareApp : I want to add heartbeat monitoring and pet care as well which will further make it a true IOT solution.</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c\">c</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bash\">bash</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/intel-edison\">intel-edison</a></span></li><li><span class=\"cp-tag\">ble</span></li><li><span class=\"cp-tag\">embedded</span></li><li><span class=\"cp-tag\">sensor</span></li><li><span class=\"cp-tag\">lcd</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag\">scp</span></li></ul>\n</div>\n</div>", [""]], ["Squid Inc's Stockato", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Squid Inc's Stockato \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/372/688/datas/gallery.jpg\"/>\n<p>\n<i>Stockato: Making .WAVs</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Squid Inc's Stockato \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/372/569/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2><strong>Find us at table 48!</strong></h2>\n<h2>Stocks to Sounds</h2>\n<p>No stock is safe from musicalization! We wrote Stockato, a program that creates melodies derived from the general trend of a user-inputted ticker. Once paired with our sick beats, any stock market chart becomes a work of art. What's more, Stackato is hosted by Microsoft Azure, which means that the power to songify the stock market is at your fingertips anytime, anywhere.</p>\n<h2>How It Works</h2>\n<p>A python program retrieves stock data and stores it in a text file using Yahoo's finance API. Then, with Java's jfugue library, a Java program translates this data into a melody. Each trading day is a note whose pitch is determined by the rise and fall of a stock's value. The higher the volume of trade, the longer the note is held. The result is a rhythmically variant, dissonant at times melody that we incorporate into three different music styles: rock, electronic, and pop.</p>\n<h2>User Interface</h2>\n<p>Stockato is accessed through <a href=\"http://www.squidinc.xyz\" rel=\"nofollow\">www.squidinc.xyz</a>, and is hosted by Microsoft Azure. Users are prompted to input a company ticker symbol (ie AAPL, MSFT, etc.) and a music genre, after which Stockato outputs the song generated by their choices. A graph of the stock ticker is also offered for a visual interpretation of what the listener is hearing.</p>\n<p><em>We had a lot of fun building this project, and we hope you have a lot of fun using it!</em></p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag\">yahoo-finance-api</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/azure\">azure</a></span></li><li><span class=\"cp-tag\">jfugue</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/photoshop\">photoshop</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://www.squidinc.xyz/\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.squidinc.xyz/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.squidinc.xyz</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I wrote the java program that produced a finished song using the tones from incoming stock data. This involved getting up close and personal with JFugue. I also created all of the visual components of the project, as well as designed the basic front end experience using HTML and CSS.", "I was in charge of figuring out Microsoft Azure to get our server up and running in a cloud-based virtual machine. I also had to make sure the project was accessible by acquiring and setting up the domain name and DNS server information.", "I played a major role in the creation of the front end html and Javascripts and was responsible for downloading large amounts of historical stock data with the yahoo finance api.", "I led the initial search for a music creation API. We eventually settled on JFugue, which I helped test out and validate. I then worked on the web development side of our project, which was new to me. I learned a lot about back-end operations and how servlets work with Apache Tomcat servers. Even though it did not turn out to be necessary to use a servlet, I am glad I got the experience."]], ["Breeze Bruisers", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Breeze Bruisers \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/313/datas/gallery.jpg\"/>\n<p>\n<i>Fate Lies in the Breeze of Time</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Breeze Bruisers \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/314/datas/gallery.jpg\"/>\n<p>\n<i>Fate Lies in the Breeze of Time</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Breeze Bruisers \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/315/datas/gallery.jpg\"/>\n<p>\n<i>Fate Lies in the Breeze of Time</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Breeze Bruisers \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/316/datas/gallery.jpg\"/>\n<p>\n<i>Fate Lies in the Breeze of Time</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Breeze Bruisers \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/317/datas/gallery.jpg\"/>\n<p>\n<i>Fate Lies in the Breeze of Time</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Breeze Bruisers \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/318/datas/gallery.jpg\"/>\n<p>\n<i>Fate Lies in the Breeze of Time</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Breeze Bruisers \u2013 screenshot 7\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/319/datas/gallery.jpg\"/>\n<p>\n<i>Fate Lies in the Breeze of Time</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Breeze Bruisers \u2013 screenshot 8\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/320/datas/gallery.jpg\"/>\n<p>\n<i>Fate Lies in the Breeze of Time</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>Table 3</h1>\n<h2>Inspiration</h2>\n<p>The 1990's arcade game, Windjammers.</p>\n<h2>What it does</h2>\n<p>Our project is a recreation of this classic game which we hold dearly.</p>\n<h2>How we built it</h2>\n<p>With blood sweat tears and C++. Along with SDL.</p>\n<h2>Challenges we ran into</h2>\n<p>Learning GIt was problematic, and the lack of Internet contributed to the compilcations. Also the fact that none of us are artists.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Our friends enjoyed the game far more than we could have hoped for.</p>\n<h2>What we learned</h2>\n<p>Git.</p>\n<h2>What's next for Breeze Bruisers</h2>\n<p>We plan to add more polish to by improving the art and more functionality.</p>\n<h2>Notable quotes</h2>\n<p>\"It's a game\"</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sdl\">sdl</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/WumboLord/public-breeze-bruisers.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/WumboLord/public-breeze-bruisers.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I programmed things. Animation, art, quality of life improvements.", "I mostly worked on the game code that determines walking, throwing, dashing, etc", "Created the base engine and implemented some of the game classes"]], ["Tempo Tunes", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Tempo Tunes \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/342/datas/gallery.jpg\"/>\n<p>\n<i>Screenshot</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Check us out at Table 8!</h2>\n<h2>Inspiration</h2>\n<p>We wanted to be able to have our music adapt to the way we work out. As we picked up pace, the music should get more intense. As we cool down at the end of our workout, it should slow down with us.</p>\n<h2>What it does</h2>\n<p>Using the Myo Armband, this app tracks whether you are walking, jogging, or sprinting. Using these calculations, the app puts on certain Spotify playlists associated with different speeds.</p>\n<h2>How we built it</h2>\n<p>We built an Android application and used the Spotify SDK and Myo SDK.</p>\n<h2>Challenges we ran into</h2>\n<p>Being able to integrate the hardware data and analyze it to make a decision on which Spotify playlist to play.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Having a fully functional app that we can show to our parents.</p>\n<h2>What we learned</h2>\n<p>We learned about Android applications and integrating these SDK's into them, as well as determination is the name of the game.</p>\n<h2>What's next for Tempo Tunes</h2>\n<p>User calibration - different people have different speeds for walking, jogging, and sprinting.\nUpload your own Spotify playlists instead of using the default ones.</p>\n<h2>Check us out at Table 8!</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/myo\">myo</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/spotify\">spotify</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li></ul>\n</div>\n</div>", ["", "", "", ""]], ["WordMark", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"WordMark \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/777/datas/gallery.jpg\"/>\n<p>\n<i>Example Usage</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Find Leaks! Watermark your documents</p>\n<p>Table #13</p>\n<h2>What it does</h2>\n<p>Watermarks documents using synonym steganography: given a text document the web app will carefully modify words to create different versions of the document. If the document is leaked, you can track which version of the document was leaked.</p>\n<p>This method has advantages over other steganography methods because the hidden information is hidden directly in the text, not in encoding. The hidden information survives even if the cipher text is hand copied (as opposed to other stego methods like font based encoding and white space encoding).</p>\n<h2>How we built it</h2>\n<p>ngrok and Amazon Web Services to host the website\nBootstrap to make the client\nPython and Django to host the backend server.\nPython and NLTK to parse the plain text and create the cipher text. </p>\n<h2>What we learned</h2>\n<p>A lot to learn for the Natural Language Processing side to choose good synonyms.\nSetting up the web server was relatively easy, and bootstrap made it very easy to make a decent web page.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/django\">django</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/nltk\">nltk</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sparkpost\">sparkpost</a></span></li><li><span class=\"cp-tag\">wordnet</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag\">ngrok</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://8a2c05d6.ngrok.io/watermark/\" rel=\"nofollow\" target=\"_blank\" title=\"https://8a2c05d6.ngrok.io/watermark/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>8a2c05d6.ngrok.io</span>\n</a></li>\n<li><a href=\"https://github.com/alzhang/SynonymWatermark\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/alzhang/SynonymWatermark\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/alzhang/SynonymWatermark\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/alzhang/SynonymWatermark\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["everything", ""]], ["DevImpact", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"DevImpact \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/323/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"DevImpact \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/324/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>I lived in Colombia throughout my high school years and saw a lot of things I just don't living in the U.S.\nI feel that as a developer I have unique ability to build solutions, so why not use it to help change many of the injustices and socio-economical problems I saw living in Colombia. </p>\n<p>As college student and eventually a college grad, a major obstacle in the job market for me and many in my position is a lack of real world experience. This platform serves developers as a way to gain real world experience that can help them get jobs. Devs can build up their portfolio with meaningful projects they can point to.</p>\n<p>I think DevImpact has the potential to benefit both developers and people in Latin America.</p>\n<h2>What it does</h2>\n<p>It allows developers and users to create accounts on the site. Where users can then post a problem and/or upvote one that they have in common with another user. Developers can then begin a discussion thread on each problem where they can either begin to connect with the users and help them come up with a solution or do so by coloaborating with other developers who also would like to help. Developers can then have the projects they've built to solve these problems to their profile and have a portfolio of sorts. This helps developers who may lack the professional experience to gain visibility and make an impact in the lives of others.</p>\n<h2>How I built it</h2>\n<p>I build it using the MEAN stack. The back-end and fron-end are all written in JavaScript.</p>\n<h2>Challenges I ran into</h2>\n<p>I knew virtually nothing about developing with the MEAN stack and ran into many issues associated with learning and simultaneously working with a new development stack. Couldn't deploy on azure correctly because connection to mongoDB on mLab instance didn't work.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Even though the project is far from finished, I'm proud to have begun it and have setup the problems discussion board, commenting, and user profiles. Not to mention having built a functioning project in a stack I'm not familiar with.</p>\n<h2>What I learned</h2>\n<p>I learned to work with MongoDB, EspressJS, AngularJS, and NodeJS.</p>\n<h2>What's next for DevImpact</h2>\n<p>I want to make an account interface for users/developers, seperating the views for each role. Add GitHub authentication and integrate it with the Dev profiles, so than any project a dev has worked relating to a problem can be linked to repo on their GitHub account. Also have a map that will display markers for each problem, so that visitors can get a visual of what regions in Latin America are using DevImpact and where the most demand for help is.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/angular-js\">angular.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongoose\">mongoose</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/fe-li-pe/DevImpact\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/fe-li-pe/DevImpact\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["ScheduleMe", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"ScheduleMe \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/245/datas/gallery.jpg\"/>\n<p>\n<i>Adding in times for your schedule</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"ScheduleMe \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/246/datas/gallery.jpg\"/>\n<p>\n<i>Two people's schedule overlapping</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"ScheduleMe \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/247/datas/gallery.jpg\"/>\n<p>\n<i>Friends whose schedules you can see with a tap</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>It has happened plenty of times. You asked what they are doing and wait for a response... You can wait for hours to get a response back only to find out.. they had class... Many times, we have trouble keeping track of our friends and their class schedule, even when we both had it sent to us during the first week of school. It's somewhere lost in the texts or pictures. We wanted a way to look at each other's schedule with just an app away so that we can quickly decide our plans for the day. Also, its difficult to compare multiple schedules when everyone's picture isn't combined. Sometimes you accidentally hang out with a group of friends without a certain friend since they might be in class or busy and he or she will be like TFTI (Thanks For The Invite...)  </p>\n<h2>What it does</h2>\n<p>With ScheduleMe, anyone who owns the app will only have to make one schedule and no longer will they send their schedule out repeatedly. By adding people on the app, you get their schedule and they get your schedule and you can make side to side comparisons to see when you two are free or busy. You can also add multiple people to a group and so you can see what is the best time to hang out or schedule an event. Going back and forth through people's schedule is quite tedious and when2meet can take forever for people to reply. This app makes it easy to compare by having color-coded schedules. If you have a large number of people in your group, you have a checkbox option to see if you want them included in the group schedule or narrowing down certain people.</p>\n<h2>How we built it</h2>\n<p>We built it with Android Studio, using Android Emulators to simulate Android phones. Also, we used open-source software. We used Dropbox as a cloud service to place their schedules and retrieve it so we can build calendars for different combinations of people's calendars.</p>\n<h2>Challenges we ran into</h2>\n<p>One of the biggest challenge was developing for Android, all 3 of us were completely new to Android App Development. This is also two of our group member's first hackathon, so we didn't want to burn out.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We made our first Android app!</p>\n<h2>What we learned</h2>\n<p>We learned about APIs, JSON, Databases such as Sqlite, Android App development, Cloud file sharing. Google MASTERS.</p>\n<h2>What's next for ScheduleMe</h2>\n<p>Full functionality, improving UI, and expand information sharing capabilities. Put it on the market place. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li></ul>\n</div>\n</div>", ["I worked on part of the GUI, handling data on the Cloud and spreading the workload of the project.", "I worked on the majority of the UI and front-end of the app. This was my first time doing Android development, so it was really cool to be able to implement various features that allowed us to include buttons, lists, and other things to (try) to make the app visually appealing.", "I worked on the back-end of the app; I created the structure for schedules and came up with a way to convert schedules to and from their intermediate representations. This was my first experience working with Android app development; it was daunting yet exciting to learn how Android apps are made. "]], ["MU$IC", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"MU$IC \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/281/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"MU$IC \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/463/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>MU$IC</h2>\n<p>Most technical analysis trading softwares are not very user-friendly, because they are often cluttered with myriad of numbers and widgets that confuses users. These softwares are often daunting to the users because of their complexity. Come in MU$IC! MU$IC is an application that transcribes certain stock data into different music. It transforms otherwise traditional, boring trading data into that of a more interactive and entertaining. Why not have fun while learning about stocks? Try out MU$IC today!</p>\n<p>We are located at Table 42b, so come check us out!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/AyeAndy/StockMusic\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/AyeAndy/StockMusic\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["CogniWave", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"CogniWave \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/283/datas/gallery.jpg\"/>\n<p>\n<i>EMergency message sent</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"CogniWave \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/284/datas/gallery.jpg\"/>\n<p>\n<i>Firebase database</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"CogniWave \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/285/datas/gallery.jpg\"/>\n<p>\n<i>Data</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"CogniWave \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/286/datas/gallery.jpg\"/>\n<p>\n<i>Wave Generation</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"CogniWave \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/287/datas/gallery.jpg\"/>\n<p>\n<i>Home page</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Since IOT is the new thing and hardware is booming up, for this hackathon we wanted to create a real time application which is challenging and which can help us solve real life problems. We also wanted to use some sponsor APIs to be considered for sponsor API prizes as well ;) :P</p>\n<h2>What it does</h2>\n<p>Muse headbands detect EEG signals and give important health information along with brain activity. Utilizing the brain activity data, we created an application which detects blinking of the user which in turn is used to communicate an emergency situation or an immediate help required. We sample a moving average of EEG Signals and send important and timely information about abnormal deviation in brain activity to their doctors without being on monitor continuously. </p>\n<h1>Longest Stack</h1>\n<p>We use Muse Band, muse io, linux, osc, python, mailServer, textMessageServer, firebase, javascript, html, css</p>\n<h2>How we built it</h2>\n<p>MuseBand -&gt;Socket Connection-&gt; Python Server -&gt; Feed analysis-&gt;Notfications</p>\n<ul>\n<li>We used the MUSE SDK research tool to receive data out of the muse band. We forward feeds to python server on UDP socket and analyse the data. Since we are not from medical background, we did some manual analysis on how we can utilize the data. We had to (not very sad about it ;P) watch various videos to analyse different brain situations.</li>\n<li>We used python to analyse EEG data, computed standard deviation on it and plotted the sampled time series data using matplot. When the fluctuation on standard deviation was high we save it and send a mail notification.</li>\n<li>We used SparkPost to compose the mail with the attachment of EEG data for the doctor.</li>\n<li>We also monitored blinking using MUSE api and once number of blinks were more than normal, using text message API and Firebase callback API we inform the caretaker.</li>\n</ul>\n<h2>Challenges we ran into</h2>\n<p>We can all crib about what we didnt have(example: WIFI), but since all were on the same page, I do not believe we have rights to complain about it.\nAnyways, the biggest challenge was to analyse the data we got from Muse band. Having very less time, we wanted an application which can show some basic operation but can still successfully show the future implication of the band. Another challenge was to integrate various platforms into one and use various API references and integrate them. \nSomething that I believe was a challenge, even for the mentors was to walk all the way to tents in this cold for chilling food.</p>\n<h2>Accomplishments that we're proud of</h2>\n<ul>\n<li>Successful integration of muse headband with its research tools</li>\n<li>Integration of various apis by firebase, facebook and sparkpost with various platforms(python, javascript)</li>\n<li>Networking between device, server and web platform.</li>\n<li>Developing our first hardware hack successfully.</li>\n</ul>\n<h2>What we learned</h2>\n<ul>\n<li>Muse headband, what its outputs mean, how to handle it</li>\n<li>Free email and message sending services available online</li>\n<li>Resolving dependencies between hardware and handling incompatibilities</li>\n<li>Integrating a cloud database like firebase with real-time input device like muse headband </li>\n<li>Socket Programming</li>\n</ul>\n<h2>What's next for CogniWave</h2>\n<ul>\n<li>No disabled person would die in the slumber of night without being able to ask for help</li>\n<li>Disabled can get what they wish from where ever and whom ever they want just by their thoughts and blink of an eye.</li>\n<li>Prestige and Illusionist in real world. Telepathy a part and parcel of our life. Using brain activity to move mountains. </li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sparkpost\">sparkpost</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/muse\">muse</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag\">iot</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/facebook\">facebook</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/socket-io\">socket.io</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/HackerPack/CogniWave.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/HackerPack/CogniWave.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/HackerPack/CogniWave.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/HackerPack/CogniWave.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["High Frequency Audio: Musically Rendered Market Data.", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"High Frequency Audio: Musically Rendered Market Data. \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/290/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>What it is</h2>\n<p>A song made from 15 years of daily market data from S&amp;P 500 companies.</p>\n<h2>How I built it</h2>\n<p>Wrote a python script to streamling and enhance the free data from Quant Quote, and used the audiolyzeR package for R to convert the data into audio. The audio was captured using hardware and and audacity, and then edited into a more musical structure.</p>\n<h2>Challenges I ran into</h2>\n<p>Satisfactory tools for turning raw data (CSV, .TXT) into audio are either unavailable or not intended for use with large quantities of data. Scripting is also tricky.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Writing a python script to automate the reading and rewriting of CSV files full of financial data. Finding a functional tool to turn data into audio required a great deal of research and effort.</p>\n<h2>What I learned</h2>\n<p>how to deal with large numbers of large CSV files simultaneously using python, as well as how to surmount some of the problems that occur when dealing with large files: Excel does not like 1.8 million row long CSV files.</p>\n<h2>What's next for High Frequency Audiolization - S&amp;P 500</h2>\n<p>Automating the process of turning stock data into music.</p>\n<p><a href=\"https://soundcloud.com/listen_please/high-frequency-audiolization-sp-500\" rel=\"nofollow\">https://soundcloud.com/listen_please/high-frequency-audiolization-sp-500</a></p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/r\">r</a></span></li><li><span class=\"cp-tag\">audiolyzer</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag\">audacity</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://soundcloud.com/listen_please/high-frequency-audiolization-sp-500\" rel=\"nofollow\" target=\"_blank\" title=\"https://soundcloud.com/listen_please/high-frequency-audiolization-sp-500\">\n<i class=\"ss-icon ss-link\"></i>\n<span>soundcloud.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Ridiculous Rift - Table 36", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Ridiculous Rift - Table 36 \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/372/743/datas/gallery.jpg\"/>\n<p>\n<i>Using it to make a bunny kind of dizzy.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Ridiculous Rift - Table 36 \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/372/744/datas/gallery.jpg\"/>\n<p>\n<i>The 3D controller</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>TABLE 36</h2>\n<h2>Inspiration</h2>\n<p>Inspired by a pile of pipe cleaners.  Brought to life by the same noble pile of pipe cleaners. </p>\n<h2>What it does</h2>\n<p>Ridiculous Rift is a 3D world controller, which we put to use to maneuver a plane over (and sometimes under) the Grand Canyon.</p>\n<h2>How we built it</h2>\n<p>We used C++ for the OpenCV portion, and piped position data over standard out to a python-based OpenGL renderer.</p>\n<h2>Challenges we ran into</h2>\n<p>OpenGL is a beast with many horns.  We got poked sometimes.  Particularly by texture mapping, trying to include a skybox.  It's also interesting that we have to re calibrate our tracking program due to lighting changes (Like after the sun goes down / comes up).   </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Relatively stable 3D motion tracking with arts and crafts supplies is pretty cool.  Throwing together a flight simulator with nothing but some openGL and a grand canyon mesh also isn't bad.</p>\n<h2>What we learned</h2>\n<p>We learned some math, and how to use some of the most ubiquitous libraries in the computer graphics world.  Linear algebra is it's own reward, don't you think?</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/makefile\">makefile</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/shell\">shell</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/suBDavis/jankulous-rift\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/suBDavis/jankulous-rift\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["made python flightsimish game with opengl", "Worked on capturing position and orientation from the wand using OpenCV"]], ["Proximity Print", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Proximity Print \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/270/datas/gallery.jpg\"/>\n<p>\n<i>Selecting Printers</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Proximity Print \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/271/datas/gallery.jpg\"/>\n<p>\n<i>Sending Documents</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Awkward situations of desperate need for a printer, library too far away.</p>\n<h2>What it does</h2>\n<p>Allows for students to rent out their printers in a P2P system where documents are shared by to students.  Students select from a list of available printers from a map, send their files to a willing printer owner, and then pick up their documents. </p>\n<h2>How I built it</h2>\n<h2>Challenges I ran into</h2>\n<p>Lack of coherent team goals and experience.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<p>How to use firebase, node.js, and angular.js.</p>\n<h2>What's next for Proximity Print</h2>\n<p>A fully functional backend should be implemented to decrease reliance on firebase. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/socket-io\">socket.io</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-maps\">google-maps</a></span></li></ul>\n</div>\n</div>", [""]], ["International Normalized Ratio Tester for a pi 2", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"International Normalized Ratio Tester for a pi 2 \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/254/datas/gallery.jpg\"/>\n<p>\n<i>so this is what a blood draw looks like </i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>They inspiration for this project is the fact that I have any artificial heart valve. With this artificial heart valve you always have to get stuck with needles, but I would prefer a finger prick.  So instead of me getting stuck with giant needles in the arm, I decide to make something that people like me would want. </p>\n<h2>What it does</h2>\n<p>It is used to detect the INR and pt in your blood in an sort of open-source manner. </p>\n<h2>How I built it</h2>\n<p>well this is mainly the coding proportion of hack next time I will actual attempt to make the detectors.</p>\n<h2>Challenges I ran into</h2>\n<p>I forgot about the other portion of the challenge.I still need to find a slope in which entails looking at the x and y coordinates on a log based graph.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I'm proud that I got so far in this experiment </p>\n<h2>What I learned</h2>\n<p>I learned a lot more then I wanted to you about how these test are run on my blood.</p>\n<h2>What's next for International Normalized Ratio Tester for a pi 2</h2>\n<p>I learned that that tab limits don't always stay the same way you in vim.  I need to learn how to apply a log on log graphing like function within python. An start developing tester for the viscosity and how long it takes to wait clot the blood. Test strips for the test that will be run on the blood.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">windows-10-bash-shell</span></li><li><span class=\"cp-tag\">arch</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li><li><span class=\"cp-tag\">opensource</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/vim\">vim</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/yuriprym/INR-tester-program\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/yuriprym/INR-tester-program\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["everything"]], ["Flying web server", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/nblP26FtZyI?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Flying web server \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/236/datas/gallery.jpg\"/>\n<p>\n<i>In flight</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>I have had this idea for a while but never actually got around to building it so I thought it would be a good time to give it a go.</p>\n<h2>What it does</h2>\n<p>It is a flying raspberry pi web server. It can be configured any way you want. As a proof of concept I was able to transfer files to and from the pi while in flight using ssh</p>\n<h2>How we built it</h2>\n<p>3d printed the custom case to allow it to attach. Configured the server using an instructables tutorial. Attached the battery and let it fly</p>\n<h2>Challenges we ran into</h2>\n<p>connecting the go pro mounts</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>That the drone got off the ground, that the makerbot could print without supports for the massive overhang and that we could keep it connected to wifi while in flight.</p>\n<h2>What we learned</h2>\n<p>I can come to a hackathon and make something amazing without writing a single line of code.</p>\n<h2>What's next for Flying web server</h2>\n<p>I will try to do a similar project with an android phone so that the server and the battery are self contained</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/3dprinting\">3dprinting</a></span></li><li><span class=\"cp-tag\">drone</span></li><li><span class=\"cp-tag\">gopro</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://grabcad.com/library/raspberry-pi-to-syma-x8c-gopro-mount-1\" rel=\"nofollow\" target=\"_blank\" title=\"https://grabcad.com/library/raspberry-pi-to-syma-x8c-gopro-mount-1\">\n<i class=\"ss-icon ss-link\"></i>\n<span>grabcad.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["EvMe", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/KQRJHCAbX88?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>I didn't like how events on campus were always jumbled forever in the lost seas of Facebook, Twitter, and Flyers. The only way you could find a lot of great events, especially FREE ones, were through your friends or somehow noticing it among all the ads and other stimuli there. Also more free stuff is nice.</p>\n<h2>What it does</h2>\n<p>It allows other users to input their event information into the database and that event pops up in a huge list of organized events. Then the user can go and select other events and have them all ordered in a nice orderly calendar.</p>\n<h2>How I built it</h2>\n<p>Android studio. I was planning to use Firebase with it to support the database.</p>\n<h2>Challenges I ran into</h2>\n<p>It was my first time using Android studio and I had to learn the UI in the 36 hours we had. Small silly mistakes would drive away hours because they were small and hard to locate. I also realized that I had to put a lot of emphasis on orderly coding structure too if I wanted to share a database among every activity.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>The app works extremely nicely and looks very organized. Even though I did not finish the app, I still cannot believe I pulled it off. It's literally my first app.</p>\n<h2>What I learned</h2>\n<p>I planned a bit beforehand of how I wanted the interface to look and that benefited me a lot. I honestly think I could have finished this project had I gotten familiar with Android Studio before hand and did some planning based on coding structure. Planning is key.</p>\n<h2>What's next for EvMe</h2>\n<p>After exams, I'm going to restructure the code so that it's much easier to share the SQLite Database info among several activities. Then I'm going to use Firebase to host the data and finish the app.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li></ul>\n</div>\n</div>", [""]], ["SumCrossword", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"SumCrossword \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/399/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"SumCrossword \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/400/datas/gallery.jpg\"/>\n<p>\n<i>(Solution not included)</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"SumCrossword \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/402/datas/gallery.jpg\"/>\n<p>\n<i>Hints</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"SumCrossword \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/401/datas/gallery.jpg\"/>\n<p>\n<i>Sample Solutions</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"SumCrossword \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/219/datas/gallery.jpg\"/>\n<p>\n<i>http://seekingalpha.com/article/3964204-bmw-takes-leap-ahead-tesla</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"SumCrossword \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/221/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"SumCrossword \u2013 screenshot 7\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/220/datas/gallery.jpg\"/>\n<p>\n<i>http://blogs.discovermagazine.com/d-brief/2016/03/08/go-google-sedol-artificial-intelligence/#.Vwo_eaQrKhd</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"SumCrossword \u2013 screenshot 8\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/218/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"SumCrossword \u2013 screenshot 9\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/223/datas/gallery.jpg\"/>\n<p>\n<i>https://goo.gl/tMf5Bi</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"SumCrossword \u2013 screenshot 10\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/222/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>SumCrossword [Table 5]</h1>\n<p>Summarize Webpage into a crossword puzzle.</p>\n<p>This works by frankensteining three python scripts. (Rake[<a href=\"https://github.com/aneesha/RAKE\" rel=\"nofollow\">https://github.com/aneesha/RAKE</a>], Sumy[<a href=\"https://github.com/miso-belica/sumy\" rel=\"nofollow\">https://github.com/miso-belica/sumy</a>], and <a href=\"http://bryanhelmig.com/python-crossword-puzzle-generator/\" rel=\"nofollow\">http://bryanhelmig.com/python-crossword-puzzle-generator/</a>).</p>\n<ol>\n<li>Uses sumy to capture and summarize any webpage into SENTENCES_COUNT sentences. </li>\n<li>Use RAKE (Rapid Automatic Keyword Extraction) to extract the keywords from those sentences</li>\n<li>Use crossword puzzle generator to make the puzzle from the clues previously made</li>\n<li>Parse the crossword output into a canvas drawing</li>\n<li>Enjoy crossword puzzle. Solve it! [Print it out]</li>\n<li>(Anticipated) Share through a generated .html file.</li>\n</ol>\n<hr/>\n<h4>Input</h4>\n<p>A Url. This python file will allow you to summarize any webpage into a crossword file. </p>\n<h4>Output</h4>\n<p>The result is a postscript image (vector) with the crossword and a .txt with the clues.</p>\n<h2>Usage:</h2>\n<ul>\n<li>Download python.</li>\n<li>Download the stuff it needs [like nlp library]. # See the imports </li>\n<li>Download files.</li>\n<li>Find a website with article/news style text.</li>\n<li>run:</li>\n</ul>\n<blockquote>\n<p>python test.py [url]</p>\n</blockquote>\n<p>Sample Use cases:\nPolitical Research/Govnt[<a href=\"https://www.washingtonpost.com/politics/cruz-picks-up-all-delegates-in-colo-sanders-win-in-wyo/2016/04/09/5bf92a3e-fec5-11e5-813a-90ab563f0dde_story.html\" rel=\"nofollow\">https://www.washingtonpost.com/politics/cruz-picks-up-all-delegates-in-colo-sanders-win-in-wyo/2016/04/09/5bf92a3e-fec5-11e5-813a-90ab563f0dde_story.html</a>]. \n<img alt=\"picture alt\" data-canonical-url=\"https://github.com/TauqirA/SumCrossword/blob/master/primary.PNG?raw=true\" src=\"https://res.cloudinary.com/devpost/image/fetch/s--SWCx9VCn--/https://github.com/TauqirA/SumCrossword/blob/master/primary.PNG%3Fraw%3Dtrue\"/></p>\n<p>Market Research[<a href=\"http://seekingalpha.com/article/3964204-bmw-takes-leap-ahead-tesla%5D:\" rel=\"nofollow\">http://seekingalpha.com/article/3964204-bmw-takes-leap-ahead-tesla]:</a>\n<img alt=\"picture alt\" data-canonical-url=\"https://github.com/TauqirA/SumCrossword/blob/master/bmwVTesla.PNG?raw=true\" src=\"https://res.cloudinary.com/devpost/image/fetch/s--Hw4mu_hy--/https://github.com/TauqirA/SumCrossword/blob/master/bmwVTesla.PNG%3Fraw%3Dtrue\"/></p>\n<p>Science/Tech [<a href=\"http://blogs.discovermagazine.com/d-brief/2016/03/08/go-google-sedol-artificial-intelligence/#.Vwo7_aQrKhc%5D:\" rel=\"nofollow\">http://blogs.discovermagazine.com/d-brief/2016/03/08/go-google-sedol-artificial-intelligence/#.Vwo7_aQrKhc]:</a>\n<img alt=\"picture alt\" data-canonical-url=\"https://github.com/TauqirA/SumCrossword/blob/master/go.PNG?raw=true\" src=\"https://res.cloudinary.com/devpost/image/fetch/s--syVIDzyF--/https://github.com/TauqirA/SumCrossword/blob/master/go.PNG%3Fraw%3Dtrue\"/></p>\n<p>Solutions are also posted. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/TauqirA/SumCrossword\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/TauqirA/SumCrossword\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Connecting the three python libraries/scripts", "", ""]], ["DapMe", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"DapMe \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/196/datas/gallery.jpg\"/>\n<p>\n<i>Main View</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"DapMe \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/197/datas/gallery.jpg\"/>\n<p>\n<i>Login</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"DapMe \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/198/datas/gallery.jpg\"/>\n<p>\n<i>Members Area</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Have you ever coincidentally encountered a friend at the mall? With DapMe you will get a push notification as soon as you come in close proximity with a friend in private setting or any other public DapMe user in public setting. DapMe is also a great application for introverts, because it incentivizes them to go out and dap the world through location based games.</p>\n<h2>What it does</h2>\n<h2>How we built it</h2>\n<h2>Challenges we ran into</h2>\n<h2>Accomplishments that we're proud of</h2>\n<h2>What we learned</h2>\n<h2>What's next for DapMe</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/socket-io\">socket.io</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-maps\">google-maps</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://play.google.com/store/apps/details?id=nisargap.dapme\" rel=\"nofollow\" target=\"_blank\" title=\"https://play.google.com/store/apps/details?id=nisargap.dapme\">\n<i class=\"ss-icon ss-link\"></i>\n<span>play.google.com</span>\n</a></li>\n<li><a href=\"https://github.com/nisargap/DapMe\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/nisargap/DapMe\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/ayebear/dap-me-backend\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ayebear/dap-me-backend\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"http://dapdap.weebly.com/\" rel=\"nofollow\" target=\"_blank\" title=\"http://dapdap.weebly.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>dapdap.weebly.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the entire Android mobile application and had to deal with interfacing with the realtime backend.", "I came, I saw, I dapped.", "I wrote the node.js backend with socket.io, which also uses a haversine function for calculating distance between users.", "I worked on the entire iOS mobile application and had to deal with interfacing with the realtime backend."]], ["roombacontroller", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Table 53</h2>\n<h2>Inspiration</h2>\n<p>I was talking to sponsors, searching for ideas, and thought this Roomba would be fun to mess with.</p>\n<h2>What it does</h2>\n<p>Use an Android app to tell the Roomba where to go.</p>\n<h2>How I built it</h2>\n<p>Java for the Android phone and server. Python script on Raspberry-pi.</p>\n<h2>Challenges I ran into</h2>\n<p>Hardware was all new to us so we ran into a lot of issues trying to interface with it.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We now  have a Roomba that can be controlled by an Android app!</p>\n<h2>What I learned</h2>\n<p>It is diffiult to get multiple hardware and software systems to consistently cooperate in order to accomplish one task.</p>\n<h2>What's next for roombacontroller</h2>\n<p>Wireless connectivity instead ehternet cables, working video feed from camera </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/nelnel33/roombacontroller\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/nelnel33/roombacontroller\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the Android application and server that connects to the scripts that control the Raspberry Pi. ", "I worked on interfacing with the raspberry pi/roomba through ssh, python, and java."]], ["The Hyper Train", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"The Hyper Train \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/731/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>Project at table 51</p>\n<h2>Inspiration</h2>\n<p>A problem in VR is that you're not supposed to accellerate the player but we wanted to challenge that and make it awesome along the way.</p>\n<h2>What it does</h2>\n<p>We paired a high speed Virtual Reality demo that we built with a custom tilting chair that we also constructed in order to get the feeling of acceleration and immersion.</p>\n<h2>How we built it</h2>\n<p>Our virtual demo was primarily built using Unreal Game Engine and Blender which is a 3d modeling software. We constructed our assets in Blender and ported them into Unreal and designed the demo's logic and effects using Unreal's Blueprint system. Our chair was reconstructed from an old project from last year. It is now been updated with a new plateform to stand on as well as a piston that is used to lean the chair back and forth.</p>\n<h2>Challenges we ran into</h2>\n<p>Lots of hardware challenges. Getting the arduino setup with our piston was a big challenge. Another challenge was that our chair's original tilting platform broke and so we had to remove extraneous parts and use the original hinge in order to get our project back in order.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Getting our chair and piston up and running.</p>\n<h2>What we learned</h2>\n<p>Prepare materials beforehand for large projects such as these.</p>\n<h2>What's next for The Hyper Train</h2>\n<p>Rotation of the chair along with tilting.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unreal-engine\">unreal-engine</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/blender\">blender</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/gimp\">gimp</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/oculus\">oculus</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/hardware\">hardware</a></span></li></ul>\n</div>\n</div>", ["", "", "", "", ""]], ["Analog Squared Effect Processing & Arduino Synthesizer", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Analog Squared Effect Processing &amp; Arduino Synthesizer \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/167/datas/gallery.jpg\"/>\n<p>\n<i>Overhead view of the whole setup</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Analog Squared Effect Processing &amp; Arduino Synthesizer \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/168/datas/gallery.jpg\"/>\n<p>\n<i>Arduino wired up for interpreting MIDI codes and output signals to the surface transducer</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Analog Squared Effect Processing &amp; Arduino Synthesizer \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/169/datas/gallery.jpg\"/>\n<p>\n<i>Arduino processing MIDI code and generating a signal, seen on the scope.  Transducer on right conducting sound through bubblewrap and glass.</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We like analog things.  We feel that they are under appreciated these days, and we wanted to show off some of what they can do.</p>\n<h2>What it does</h2>\n<p>It distorts sound by passing it through physical objects.</p>\n<h2>How we built it</h2>\n<p>We put contact microphones on stuff, and then we put a surface transducer on the stuff.</p>\n<p>Then we wrote an Arduino-based synthesizer that works off a MIDI signal from a keyboard we found at the thrift store.</p>\n<p>The synth was all the work.</p>\n<h2>Challenges we ran into</h2>\n<p>The Arduino wouldn't read the MIDI signal, possibly due to an incorrect circuit diagram we were referencing.  Somehow it sorted itself out in the end.</p>\n<p>The Arduino's clock rate was pretty slow for the kinds of signals we were trying to generate.  So we can only synthesize square waves.  When we attempted fancier waveforms we ran into the sample rate cap and the signals got all nasty.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Making a synthesizer.<br/>\nHaving what we feel is a genuinely interesting idea of listening to what happens when sound passes through stuff and using that to make audio filters out of anything.</p>\n<h2>What we learned</h2>\n<p>We learned a lot about analog signals, and gained intuition for how they're generated.  Use of oscilloscopes for troubleshooting circuit and signals problems.</p>\n<h2>What's next for Analog Squared</h2>\n<p>Really we just need naps.  We'll see how we feel about it after some naps.</p>\n<p>But before we get to those naps, we're excited to share Analog Squared with you!  Come on by the hardware area near tables 21 and 22 to check in out!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/midi-js\">midi.js</a></span></li><li><span class=\"cp-tag\">analog-squared-effects-processing-system</span></li><li><span class=\"cp-tag\">things-we-found-lying-around</span></li></ul>\n</div>\n</div>", ["", ""]], ["Physics Engine for Kaeon ACE", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Making physics work properly in games requires a lot of co mplicated scripting. A physics engine simplifies this by providing support for said scripting as a background process.</p>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Kipmon/Kaeon-ACE\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Kipmon/Kaeon-ACE\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["No See GPS", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"No See GPS \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/120/datas/gallery.jpg\"/>\n<p>\n<i>Block Diagram</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>In the advent of many new ways to interact with an environment thanks to technology such as those used in virtual reality and weables, what other ways could the world be perceived? Originally wanted to use the phase heat exchanger units for virtual reality applications or \"you're getting warmer\" (as you get closer to something) use. The phase heat exchanger could easily reach extreme cold/heat which would not be ideal for a person to hold, so we switched to vibration feedback and a different application.</p>\n<h2>What it does</h2>\n<p><strong>The Android App:</strong></p>\n<ul>\n<li>Voice to text entry of desired destination location entry</li>\n<li>Automatic location search using the voice entered destination with Google's locations databases</li>\n<li>Retrieves navigational data from Google's Maps database</li>\n<li>Instructs the user for each step of reaching the user's destination</li>\n<li>Tells the user which direction to turn if the user veers off</li>\n<li>Voice feedback to the user including navigation instructions </li>\n<li>Vibration feedback whenever the user's direction of travel veers off course, and the intensity of the vibration increases the further off direction the user is</li>\n</ul>\n<p><strong>IoT Smart Guide Stick:</strong></p>\n<ul>\n<li>Microcontroller with wifi and a RESTful API for controls</li>\n<li>Motor for vibration feedback on the guide stick</li>\n<li>Vibration feedback is based on the direction the guide sticks points to</li>\n</ul>\n<h2>How we built it</h2>\n<p>Walking stick, Android phone, microcontroller, motor, breadboard, wires, batteries, tape.</p>\n<h2>Challenges we ran into</h2>\n<p>Handeling Android M new permissions management. Sending RESTful requests to the microcontroller for the vibration motor controls.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Everything works well if the RESTful request would function properly.</p>\n<h2>What we learned</h2>\n<p>A lot of android programming. The new permission request for Android M API level was much different than before and took a bit to learn. We also learned how to use many of google's services such as voice to text, location, and navigation services in tandem with our application code.</p>\n<h2>What's next for No See GPS</h2>\n<p>Put a compass on the guiding cane and make it into a true smart guiding cane. Maybe add bluetooth functionality like a normal mobile device peripheral.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag\">microcontroller</span></li><li><span class=\"cp-tag\">motor</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/madcat101010/GettingWarmer\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/madcat101010/GettingWarmer\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Android programming", "Hardware Integration"]], ["Photolicious", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Photolicious \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/496/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Photolicious \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/497/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Photolicious \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/498/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>You want to be a professional photographer but don't know how. Why else would you pretend to be one on Instagram?</p>\n<h2>What it does</h2>\n<p>Uploaded photos display camera settings so if you find a photo you really like, you can learn and be the best like no one ever was.</p>\n<p>Also, map displays photos based on their locations taken at.</p>\n<h2>How I built it</h2>\n<p>Angular JS, Firebase, PHP, Stack Overflowing, Communicating in Cantonese, Watching the Sun Rise at 6AM</p>\n<h2>Challenges I ran into</h2>\n<p>We had to modify features on our project based on APIs we'd love but don't exist. </p>\n<p>Why did Insomnia Cookies run out so fast :(</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>This is the grandest project we've worked on yet!</p>\n<h2>What I learned</h2>\n<p>Angular JS</p>\n<h2>What's next for Photolicious</h2>\n<p>Less Instagram users :V</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/angular-js\">angular.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-maps\">google-maps</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/hinneslung/Photolicious-master\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/hinneslung/Photolicious-master\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Expo-Dyte", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Expo-Dyte \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/011/datas/gallery.jpg\"/>\n<p>\n<i>See details/hackers</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Expo-Dyte \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/012/datas/gallery.jpg\"/>\n<p>\n<i>Rate based on Hackathon criteria and submit</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Expo-Dyte \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/043/datas/gallery.jpg\"/>\n<p>\n<i>Judge Sign In</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Expo-Dyte \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/374/299/datas/gallery.jpg\"/>\n<p>\n<i>View Hackathon submissions</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Giving Hackathon judges a streamlines system to rate projects during an expo, as well as ensuring each table gets equal facetime with judges.</p>\n<h2>What it does</h2>\n<p>We deliver an interface similar to Devpost's web layout that allows judges to easily signin to a Hackathon and view all submissions made under specific categories so they can judge straight from our mobile app.</p>\n<p>Along with our mobile app, we have a functioning Devpost web scraper and API to which all calls are made within the app.</p>\n<h2>How we built it</h2>\n<p>The app is a native iOS app built using Swift. Our backend is powered by Node.js and uses Express as a web server.</p>\n<h2>Challenges we ran into</h2>\n<p>Loading tons of images from our API into Swift asynchronously cause problems and a huge slowdown initially until learning how to cache images and use placeholders until we were ready to update the main thread with the loaded image.</p>\n<h2>Accomplishments that we're proud of</h2>\n<h2>What we learned</h2>\n<p>Asynchronous image loading/caching in Swift. Web scraping. API development.</p>\n<h2>What's next for Expo-Dyte</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li></ul>\n</div>\n</div>", ["Built iOS application, written in Swift.", "Coded the website application for the hackathon coordinator using HTML, CS and Javascript.", "Constructed the NodeJS powered backend, using ExpressJS and MongoDB."]], ["Weight Loss Analytics", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>In the past year, I have lost upwards of 60 pounds. I hit the gym and ate right. Part of the reason I did it so well besides my discipline was due to being able to visualize and being able to track my progress. That process was complicated and took me some time to build with excel. It should be easier for the average joe. This what I attempt to solve.</p>\n<p>This is my weight loss transformation if you are curious: <a href=\"https://www.youtube.com/watch?v=TJUrciJSBZ8\" rel=\"nofollow\">https://www.youtube.com/watch?v=TJUrciJSBZ8</a></p>\n<h2>What it does</h2>\n<p>It will allow a user to effortlessly track measurements such as their activity level, heart rate, body fat percentage and body weight. It will visualize this data and make predications on a user's progress based on this data. It will also deliver custom tips based upon the user's actions.</p>\n<h2>How it will be built</h2>\n<p>I will build it using Django and React-Native most likely.</p>\n<h2>What's next for Weight Loss Analytics</h2>\n<p>It will start as a web app and then be ported over to iPhone and Android. There will also be a continued effort to interface with lots of smart hardware involved with fitness (Fitbit, Nike+, smart wireless scales, etc.)</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/django\">django</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/react-native\">react-native</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://45.55.187.24/\" rel=\"nofollow\" target=\"_blank\" title=\"http://45.55.187.24/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>45.55.187.24</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["ALL THE THINGS"]], ["Quibble", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Quibble \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/084/datas/gallery.jpg\"/>\n<p>\n<i>Quibble Interface</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>One of our team members is on the Maryland Academic Quiz Team. As most of the team is in Chicago this weekend for a tournament, we figured we'd keep the spirit of QuizBowl alive at UMD by making our Bitcamp project QuizBowl-themed.</p>\n<h2>What it does</h2>\n<p>Quibble lets you view questions we got from real collegiate level QuizBowl question sets line-by-line, clue-by-clue. Advance at your own pace, but try to get the answer before the question ends! You can check your answers by clicking \"Show Answer\" or get a new question altogether with \"New Question\".</p>\n<h2>How we built it</h2>\n<p>Quibble is built out of several connected systems.</p>\n<h3>The web interface</h3>\n<p>The visible Quibble app is written in Angular.JS and uses Bootstrap for styling. The front-end code covers display of the questions to the user and interactivity, but contains minimal business logic, as that has all been offloaded to the API layer. The web interface is managed by bower and npm.</p>\n<h3>The REST API</h3>\n<p>Quibble provides a REST API for accessing QuizBowl questions. Currently the server supports two endpoints, /questions/random and /clues/random, but the API server has been built with extensibility in mind as our needs grow. The API is built in Haskell using the Snap webserver framework, and uses PostgreSQL as a data store. Both the REST API and the packet parser are managed by haskell's stack, a haskell project management tool.</p>\n<h3>The packet parser</h3>\n<p>The <a href=\"http://collegiate.quizbowlpackets.com/\" rel=\"nofollow\">QuizBowl Packets Archive</a> provides access to past collegiate quizbowl question packets, but they're distributed in PDF or DOCX format. We wrote a utility in Haskell that uses the Pandoc library to parse these packets and extract the questions, clues, and answers from them, and then inserts that data into our database.</p>\n<h3>The server</h3>\n<p>The whole Quibble stack runs on an AWS small instance with an Ubuntu image.</p>\n<h2>Challenges we ran into</h2>\n<p>The original plan called for the front-end to be served by node.js for convenience and the REST API to be served on a different port. However, the same-origin policy prevented the web interface from accessing the API. We solved this by modifying our API server to also serve our front-end as a static page so that they could both run on the same port.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>The design for Quibble is really solid. Adding features should be a breeze now that the groundwork is in place, as all we have to do is add a feature to our API and a small amount of front-end code to access it. Quibble is extensible by design.</p>\n<h2>What we learned</h2>\n<p>We came into Bitcamp with no knowledge of Snap, Angular, or Pandoc. Despite this, we built a functioning web application using all three of those technologies, and more! We've all gained experience in real-world technologies and got to have fun doing it.</p>\n<h2>What's next for Quibble</h2>\n<p>We have a lot of directions we can go from here. Next on our list will probably be adding a categorization system, so that users can select whether they want to see questions related to science, literature, history, or a host of other categories. We also want to add a flagging system for incorrectly parsed or otherwise broken questions and a web interface for uploading packets. Long-term, we hope that this app can help out the QuizBowl community. There is a serious lack of tools for learning quizbowl, and we hope Quibble can help fill that gap.</p>\n<h2>Table Number 14</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag\">haskell</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/angular-js\">angular.js</a></span></li><li><span class=\"cp-tag\">snap</span></li><li><span class=\"cp-tag\">pandoc</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag\">stack</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/npm\">npm</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bower\">bower</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/postgresql\">postgresql</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sql\">sql</a></span></li><li><span class=\"cp-tag\">rest</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://54.165.196.151:8080/\" rel=\"nofollow\" target=\"_blank\" title=\"http://54.165.196.151:8080/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>54.165.196.151</span>\n</a></li>\n<li><a href=\"https://github.com/wkunkel/quibble\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/wkunkel/quibble\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Guardian", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Guardian \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/042/datas/gallery.jpg\"/>\n<p>\n<i>Home page</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Guardian \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/047/datas/gallery.jpg\"/>\n<p>\n<i>First responders view</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Guardian \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/073/datas/gallery.jpg\"/>\n<p>\n<i>The safety device</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>My grandmother is constantly frustrated by prexisting systems that monitor emergency incidents such as LifeAlert.  She often finds there are lots of false positives, the responders don't know the severity of the incident, and often times first responders have to search for her in her house.</p>\n<h2>What it does</h2>\n<p>Provides first responders with an idea on what the emergency may be as well as the location of them victim in the house.</p>\n<h2>How I built it</h2>\n<p>We used an esp8266 microcontroller along with iBeacons and other sensors to connect first responders to the emergency better.</p>\n<h2>Challenges I ran into</h2>\n<p>Lack of documentation for the esp8266.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Connecting many pieces of hardware together to have them communicate in harmony.</p>\n<h2>What I learned</h2>\n<p>The importance of GET and POST requests.</p>\n<h2>What's next for Guardian</h2>\n<p>Looking into intellectual property.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag\">esp8266</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mysql\">mysql</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ibeacon\">ibeacon</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag\">glassfish</span></li><li><span class=\"cp-tag\">inventor</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/makerbot\">makerbot</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/accelerometer\">accelerometer</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/socket-io\">socket.io</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag\">bjt-transistors</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ejs\">ejs</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bluetooth\">bluetooth</a></span></li><li><span class=\"cp-tag\">iot</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://54.187.33.101:8080/home\" rel=\"nofollow\" target=\"_blank\" title=\"http://54.187.33.101:8080/home\">\n<i class=\"ss-icon ss-link\"></i>\n<span>54.187.33.101</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["phrasemoji", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"phrasemoji \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/372/835/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"phrasemoji \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/372/836/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"phrasemoji \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/372/837/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"phrasemoji \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/372/838/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>ROW 50, fourth table down from the center</p>\n<h2>Inspiration</h2>\n<p>While brainstorming ideas to keep our friend group from drinking on the weekends, we discovered a potential idea to improve the childhood game of <em>Chinese Whispers</em> (or <em>Telephone</em> for you U.S. kids) while involving every person in the group. <em>phrasemoji</em> aims to be a carefree, fun pastime for medium-sized groups.</p>\n<h2>What it does</h2>\n<p><em>phrasemoji</em> is a web application game that has each participant in the group (limited to even-numbered groups) log in to a personalized, private unique game session. The first player receives a proverb-like English sentence, and he or she and each subsequent player translates the preceding message into a series of emoticons or back into plain English.</p>\n<p>After the final person translates the preceding emoticon message back to plaintext, each participant receives the original and final messages as well as each step along the path of conversions. Hilarious laughter ensues and the game is finished, before each player clicks to play again.</p>\n<h2>How we built it</h2>\n<p>We call it the <strong>BEAN</strong> stack. BEAN = <strong>B</strong>ootstrap, <strong>E</strong>xpress.js, <strong>A</strong>JAX, <strong>N</strong>ode.js</p>\n<p>Frontend: HTML, CSS, Bootstrap, Javascript w/ AJAX, jQuery\nBackend: Node.js + Express.js</p>\n<p>Along with three computers running GNU/Linux and running vim/vis. Because down with Windows and emacs.</p>\n<h2>Challenges we ran into</h2>\n<p>Long story short, it was a pain.</p>\n<p>Applied web development was a concept that we were mostly unfamiliar with, and JavaScript was not really the language of choice. But, we needed to learn Node and Express and so we persisted through it. Fortunately, Node makes it easy to get the server up and running quickly, but we ran into many challenges with integrating our mindset with the ideology of Node.</p>\n<p>While the code itself was not (overwhelmingly) difficult to write, perhaps the most difficult portion of our project was planning the interface and organizing the structure of our codebase. But, we anticipate this challenge in every project we tackle anyways.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Building our first dynamic, web application. It just feels amazing.</p>\n<h2>What we learned</h2>\n<p>RESTful API calls, Node.js and Express.js, and a deeper connection with frontend technologies</p>\n<h2>What's next for phrasemoji</h2>\n<p>Deployment and scalability, obviously. Our code is distributed under the MIT License so our main focus is bring smiles to the world.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ajax\">ajax</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://phrasemoji.com/\" rel=\"nofollow\" target=\"_blank\" title=\"http://phrasemoji.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>phrasemoji.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I contributed as a full-stack developer, serving some HTML renderings on the node.js backend as well as designing various parts of the UI and the frontend logic.", "I worked on the node.js backend and got the domain and AWS set up.", ""]], ["Sounds of Wall Street", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Finra's music challenge</p>\n<h2>What it does</h2>\n<p>It pulls stock data from yahoo and uses it to create music</p>\n<h2>How we built it</h2>\n<p>Used javascript</p>\n<h2>Challenges we ran into</h2>\n<p>No knowledge of node.js</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We finished the projects</p>\n<h2>What we learned</h2>\n<p>Don't be afraid to ask for help</p>\n<h2>What's next for Sounds of Wall Street</h2>\n<p>BITCAMP2017 YEEE</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/enphlek/stockMusic\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/enphlek/stockMusic\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["TerpGo", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We made this application because we wanted people to get more involved with events in UMD and College Park, and existing UMD map applications are not very good</p>\n<h2>What it does</h2>\n<p>This application shows events in the UMD campus, with locations,dates, and directions shown on Google Maps</p>\n<h2>How we built it</h2>\n<p>We used Android Studio and Google Maps and Facebook Graph API's to build this application</p>\n<h2>Challenges we ran into</h2>\n<p>We ran into various problems using the Google Maps Geocoding API</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We successfuly listed events on our maps with locations and times listed as facebook events</p>\n<h2>What we learned</h2>\n<p>We learned how to incorporate the Google maps api and facebook graph api into a mobile application</p>\n<h2>What's next for TerpGo</h2>\n<p>We hope to add new features and improve the overall user experience for this application</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-maps\">google-maps</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-directions\">google-directions</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/facebook-graph\">facebook-graph</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/facebook\">facebook</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/ednusi/CP-is-your-oyster\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ednusi/CP-is-your-oyster\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Party Hero", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Party Hero \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/372/861/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>This project is a service that allows mutiple people to add songs to a party queue by texting song names to a number hosted by Twilio, or on the web app with an input box for the name of a song. The Spotify API then looks up the song name and adds the song to a queue maintained using MongoDB. This way, there can be one \"DJ\" that plays songs suggested by anyone at the party or event, like at Bitcamp!</p>\n<p>Only one member had previous experience with Web Development, so this project was a huge learning experience for all of the members, between HTML, CSS, JavaScript, node.js, Bootstrap, and JQuery.</p>\n<p>We are at table 17</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag\">apacheconf</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/angular-js\">angular.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/spotify\">spotify</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/linux\">linux</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/nkowdley/Bitcamp2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/nkowdley/Bitcamp2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the front-end of our web app with HTML, CSS, and JavaScript- all of which I was learning for the first time.", "", ""]], ["Money Accordion", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/4_s2d3L6Pl8?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Money Accordion \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/571/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Money Accordion \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/587/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Money Accordion \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/780/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p><strong>We are at Table 13, near the window!</strong></p>\n<h2>Inspiration</h2>\n<p>Paper currency is so ubiquitous -- why can't we use it to express ourselves through music?</p>\n<h2>What it does</h2>\n<p>A tactile way to create music by using items commonly found in the household to control computer-based synthesizers. The dollar bill makes a great accordion!</p>\n<h2>How we built it</h2>\n<p>OpenCV for computer vision recognition of dollar bill and fingers. Virtual MIDI port communication to open-sourced synthesizer Helm.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/opencv\">opencv</a></span></li><li><span class=\"cp-tag\">rtmidi</span></li><li><span class=\"cp-tag\">helm</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/robertadkins/moneyaccordion\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/robertadkins/moneyaccordion\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I developed the music generation control via interfacing with the open sourced Helm synthesizer.", "I worked with the computer vision library OpenCV to try to detect dollar bills as well as hands.", "I worked on the graphics, preliminary image processing, and some interfacing of the synth controls."]], ["Musical LED lights", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/9kuuYEU8AZw?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>I saw it online</p>\n<h2>What it does</h2>\n<p>LED lights connected to a raspberry-pi correspond to music input through microphone</p>\n<h2>What it actually does</h2>\n<p><strong>Blinds you</strong> but makes you want to dance </p>\n<h2>How I built it</h2>\n<p>See tags</p>\n<h2>Challenges I ran into</h2>\n<p>Never used raspberry-pi or python</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>See below.</p>\n<h2>What I learned</h2>\n<p>How to use a raspberry-pi and python over ethernet with webservers</p>\n<h2>What's next for Musical LED lights</h2>\n<p>Cover entire room with LED panels and host a rave</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">ethernet</span></li><li><span class=\"cp-tag\">computer</span></li><li><span class=\"cp-tag\">mouse</span></li><li><span class=\"cp-tag\">sony</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/windows\">windows</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/windows-7\">windows-7</a></span></li><li><span class=\"cp-tag\">intel</span></li><li><span class=\"cp-tag\">dynex</span></li><li><span class=\"cp-tag\">blinky</span></li><li><span class=\"cp-tag\">lts</span></li><li><span class=\"cp-tag\">ssh</span></li><li><span class=\"cp-tag\">password</span></li><li><span class=\"cp-tag\">user</span></li><li><span class=\"cp-tag\">tri-channel</span></li><li><span class=\"cp-tag\">led</span></li><li><span class=\"cp-tag\">led-matrix</span></li><li><span class=\"cp-tag\">usb</span></li><li><span class=\"cp-tag\">fadecandy</span></li><li><span class=\"cp-tag\">open-pixel-control</span></li><li><span class=\"cp-tag\">gpio</span></li><li><span class=\"cp-tag\">pins</span></li><li><span class=\"cp-tag\">gpio-pins</span></li><li><span class=\"cp-tag\">port</span></li><li><span class=\"cp-tag\">streaming</span></li><li><span class=\"cp-tag\">music</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google--2\">google</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/stack-overflow\">stack-overflow</a></span></li><li><span class=\"cp-tag\">pyaudio</span></li><li><span class=\"cp-tag\">wave</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/numpy\">numpy</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/requests\">requests</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag\">threads</span></li><li><span class=\"cp-tag\">queue</span></li><li><span class=\"cp-tag\">array</span></li><li><span class=\"cp-tag\">variable</span></li><li><span class=\"cp-tag\">list</span></li><li><span class=\"cp-tag\">bits</span></li><li><span class=\"cp-tag\">byte</span></li><li><span class=\"cp-tag\">motivation</span></li><li><span class=\"cp-tag\">determination</span></li><li><span class=\"cp-tag\">willpower</span></li><li><span class=\"cp-tag\">for-loop</span></li><li><span class=\"cp-tag\">int</span></li><li><span class=\"cp-tag\">float</span></li><li><span class=\"cp-tag\">food</span></li><li><span class=\"cp-tag\">chick-fil-a</span></li><li><span class=\"cp-tag\">water</span></li><li><span class=\"cp-tag\">gatorade</span></li><li><span class=\"cp-tag\">comments</span></li><li><span class=\"cp-tag\">tears</span></li><li><span class=\"cp-tag\">blood</span></li><li><span class=\"cp-tag\">sweat</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/tornado\">tornado</a></span></li><li><span class=\"cp-tag\">time</span></li><li><span class=\"cp-tag\">ioloop</span></li><li><span class=\"cp-tag\">hardware-buttons</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/hardware\">hardware</a></span></li><li><span class=\"cp-tag\">wires</span></li><li><span class=\"cp-tag\">resistors</span></li><li><span class=\"cp-tag\">paper</span></li><li><span class=\"cp-tag\">pencil</span></li><li><span class=\"cp-tag\">mechanical-pencil</span></li><li><span class=\"cp-tag\">microphone</span></li><li><span class=\"cp-tag\">strings</span></li><li><span class=\"cp-tag\">tuples</span></li><li><span class=\"cp-tag\">keyboard</span></li><li><span class=\"cp-tag\">if-statements</span></li><li><span class=\"cp-tag\">math-library</span></li><li><span class=\"cp-tag\">boolean-expressions</span></li><li><span class=\"cp-tag\">letters</span></li><li><span class=\"cp-tag\">words</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/numbers\">numbers</a></span></li><li><span class=\"cp-tag\">symbols</span></li><li><span class=\"cp-tag\">alphabet</span></li><li><span class=\"cp-tag\">nano</span></li><li><span class=\"cp-tag\">oop</span></li><li><span class=\"cp-tag\">oop-python</span></li><li><span class=\"cp-tag\">server</span></li><li><span class=\"cp-tag\">webserver</span></li><li><span class=\"cp-tag\">power-outlets</span></li><li><span class=\"cp-tag\">wifi</span></li><li><span class=\"cp-tag\">drivers</span></li><li><span class=\"cp-tag\">pip</span></li><li><span class=\"cp-tag\">pycharm</span></li><li><span class=\"cp-tag\">putty</span></li><li><span class=\"cp-tag\">led-controller</span></li><li><span class=\"cp-tag\">command-line</span></li></ul>\n</div>\n</div>", ["Everything except some of it"]], ["Money Talks", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/ABPqWNDn4NA?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Money Talks \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/170/datas/gallery.jpg\"/>\n<p>\n<i>Dynamic Visualizer of Bill Payments</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>A major issue we face in society is the accumulation of debt. We set out to create a new and original way to present data. We wanted to convey to our users the seriousness of this problem in a memorable way. We designed our hack to use distinct visual and auditory cues that catch the eye and ear.</p>\n<h2>What it does</h2>\n<p>Money Talks is a musical visualization of bills gathered from a database. It plays procedurally generated music that depicts bills that have been paid and are yet to be paid. Users can customize a multitude of parameters from music instrument to background environment.</p>\n<h2>How we built it</h2>\n<p>We tackled different workloads individually. Greg handled working with Unity and expressing data visually. He built the framework for matching sound to graphics. He used Blender to create 3D models of integers and Photoshop to create the interface. He read from our created data set using C# to allow everything to run through a single program in real-time. Cyrus worked on creating and parsing randomized data using Capital One's API. He used Python to familiarize himself with the different APIs and create the randomized data. He used Audiotool to create different sound bytes and integrated them into the application using C# and Unity.</p>\n<h2>Challenges we ran into</h2>\n<p>We ran into a lot of difficulty striking a balance between the positives and negatives of financial data. One one hand, it feels good to have bills paid off. On the other, it can be very scary to have costs pile up. We needed to create auditory and visual components that complement each other and portray the entire spectrum of both emotions.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>When we started just 24 hours prior to submission, we had little knowledge of both the Capital One and Restful API's. We progressed quickly, and even managed to crash Capital One's server.</p>\n<h2>What we learned</h2>\n<p>We became intimate with the experience of coming up with and implementing a creative idea. We improved our ability to coordinate workloads as a team and not sleep for a full 24 hours.</p>\n<h2>What's next for Money Talks</h2>\n<p>We want to extend our application to take advantage of all different kinds of data. We set our project up so that it is easily generalizable to any database. We also want to add more instruments and improve the audial and visual effects.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/capital-one\">capital-one</a></span></li><li><span class=\"cp-tag\">audiotool</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag\">restful</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/photoshop\">photoshop</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/blender\">blender</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/dropbox\">dropbox</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://drive.google.com/file/d/0B8kzWgsWi-igbklmTVM5SFlXd0U/view?usp=sharing\" rel=\"nofollow\" target=\"_blank\" title=\"https://drive.google.com/file/d/0B8kzWgsWi-igbklmTVM5SFlXd0U/view?usp=sharing\">\n<i class=\"ss-icon ss-link\"></i>\n<span>drive.google.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on creating and parsing randomized data using Capital One's API. I used Python to familiarize myself with the different APIs. I used Audiotool to create different sound bytes.", "I handled working with Unity and expressing data visually. I built the framework for matching sound to graphics. I used Blender to create the 3D models of billing numbers and Photoshop to create the interface. I read from our Restful data set using C# to allow everything to run through a single program in real-time."]], ["Buttcamp2016", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration - I accidentally typed butcamp instead of bitcamp and that was the inspiration</h2>\n<h2>What it does - It's a website of the butts of Bitcamp 2016!</h2>\n<h2>How we built it - HTML, CSS, Python, CherryPy, Javascript</h2>\n<h2>Challenges we ran into - We have never done ANY of this before so everything was a challenge</h2>\n<h2>Accomplishments that we're proud of - BUTTCAMP2016! (Everything is an accomplishment)</h2>\n<h2>What we learned - Hosting a website is difficult (shoutout to Craig and Eric!) Also, everyone's butts are beautiful!</h2>\n<h2>What's next for Buttcamp2016 - Responsive grid design, better backend, more beautiful butts</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">cherrypy</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/love\">love</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://buttcamp2016.github.io/\" rel=\"nofollow\" target=\"_blank\" title=\"https://buttcamp2016.github.io/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>buttcamp2016.github.io</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Butt photo taker & cool logo maker", "Code apprentice & sticker menace", "Code writer & all nighter"]], ["stock-lyrics Table 52", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>stock-lyrics</h1>\n<p>This program makes a simple ticker display of song lyrics. The original lyrics are displayed above a set of lyrics made by matching each word with the closest symbol on the NYSE or NASDAQ.</p>\n<p>This program was created during Bitcamp 2016 at UMD.</p>\n<p><img alt=\"screenshot\" data-canonical-url=\"http://i.imgur.com/ReNNTkS.png\" src=\"https://res.cloudinary.com/devpost/image/fetch/s--9nFfE2ZG--/http://i.imgur.com/ReNNTkS.png\"/></p>\n<h2>Requirements</h2>\n<p>This program runs with Python 2.7</p>\n<p>If you have pip installed, you may install the required modules with</p>\n<pre class=\"language-python\"><code>  pip install -r requirements.text\n</code></pre>\n<p>Pygame will likely require that you seek out a binary or refer to your distribution's package manager.</p>\n<h2>Usage</h2>\n<p>Simply run the script with python. Supply and artist name in all lowercase letters with hyphens in place of spaces.</p>\n<pre class=\"language-python\"><code>python ./stock-lyrics.py &lt;artist-name&gt;\n</code></pre>\n<p>To run a test case for the graphics that doesn't pull lyrics.</p>\n<pre class=\"language-python\"><code>python ./stock-lyrics.py -t\n</code></pre>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/markten/stock-lyrics\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/markten/stock-lyrics\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I did it all and gained new confidence when I compared this project to some of my earlier ones on github. I now also know that there is a python module called tswift."]], ["GarlicInbread", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"GarlicInbread \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/372/859/datas/gallery.jpg\"/>\n<p>\n<i>The extension in action on imgur</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>Table 28</p>\n<h2>Inspiration</h2>\n<p>nCage takes all of the images on a webpage and replaces them with Nicholas Cage. We decided to build off of that idea and replace all of the images on a page with garlic bread. </p>\n<h2>How we built it</h2>\n<p>We developed a chrome extension that manipulates the content of a webpage to load stored images of garlic bread.</p>\n<h2>Challenges we ran into</h2>\n<p>Chrome extensions are sometimes trickey to work with because they are a unique enviroment.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Getting the extension completed and </p>\n<h2>What we learned</h2>\n<p>How to work with Google Chrome extensions as well as some javascript. </p>\n<h2>What's next for GarlicInbread</h2>\n<p>Use facial recognition to pick faces out of an image and then face-swap them with garlic bread.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/chrome\">chrome</a></span></li><li><span class=\"cp-tag\">extension</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://www.dropbox.com/s/cc6ckcyvan9ic8p/0.0.1.zip?dl=0\" rel=\"nofollow\" target=\"_blank\" title=\"https://www.dropbox.com/s/cc6ckcyvan9ic8p/0.0.1.zip?dl=0\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.dropbox.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Managed the project from start to finish with coding and brainstorming help from Jarek", ""]], ["PersonalSpace", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We take personal space pretty seriously here.</p>\n<p>A reference to the Adult Swim show \"Rick and Morty\"\n Season 2 Episode 8: \"Interdimensional Cable 2: Tempting Fate\"</p>\n<h2>What it does</h2>\n<p>Notifies the user when he/she/it has entered someone else's personal space\nas detected by Leap Motion</p>\n<h2>How we built it</h2>\n<p>Blood. Sweat. Tears. Soylent.</p>\n<h2>Challenges we ran into</h2>\n<p>The overwhelming delicious taste of Soylent.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We laugh everytime the guy says personal space. Believe us, it's funny.</p>\n<h2>What we learned</h2>\n<p>Dreams are possible.</p>\n<h2>What's next for PersonalSpace</h2>\n<p>Convince Justin Roiland and Dan Harmon to let me voice a character\non Rick and Morty.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/leap-motion\">leap-motion</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/bjfitzgerald/PersonalSpace/tree/master\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/bjfitzgerald/PersonalSpace/tree/master\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Did most of the Java programming, twiddled with the Leap Motion.", "Created audio files, advised coding, testing/troubleshooting, created website"]], ["PebbleBlogger", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/Yfx2dogJWIQ?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"PebbleBlogger \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/372/833/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>I wanted to make an internet of things blogging app for Pebble Time users. This app can allow its users to speak their mind and post their thoughts to an online feed. Multiple Pebble users can use this app simultaneously and watch as their thoughts flow.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/pebble\">pebble</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c\">c</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://www.pebbleblog.com.s3-website-us-east-1.amazonaws.com/\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.pebbleblog.com.s3-website-us-east-1.amazonaws.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.pebbleblog.com.s3-website-us-east-1.amazonaws.com</span>\n</a></li>\n<li><a href=\"https://github.com/tld95/PebbleBlogger\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/tld95/PebbleBlogger\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on using the Pebble C Dictation API to translate user voice input. I also used the Bi-directional communication C / JavaScript API, to send translated voice input strings to the phone, which were then forward to Amazon Web Services to be handled. I set up a basic website as well to demonstrate the proof of concept voice to blog idea I had in mind, using HTML and JavaScript. Special thanks to Sean Pannella for assisting me in my usage of Amazon Web Service to create my hack."]], ["Smarter than your average Pikachu", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>Smarter than your average Pikachu</h1>\n<p>Pokemon battle Simulator for Bitcamp 2016</p>\n<p>This simulator allows the user to stage a battle between two pokemon, and see which one will come out victorious.</p>\n<p>Pok\u00e9mon view their lives as how many turns they have left until they faint. If a pokemon has more turns before fainting than its opponent it will go on the offensive, trying to win the battle as fast as possible; however, if a pokemon has less turns than its opponent, it uses defensive moves in an effort to gain an advantage in turns, at which point it would go on the offensive.</p>\n<p>All data for the pokemon and their movesets were pulled from an online API that stored the data as Json objects. We used C# to access that data and write our battle simulator.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/erabaum/PokeHack\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/erabaum/PokeHack\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Studied and learned the API so I could show the rest of my team how many of it's elements are implemented.", "I worked on designing and implementing the classes/objects of our project in an organized way.", "I worked on object oriented programming, specifically in the development of Pokemon and moves. I also worked on the implementation of status ailments, they're effects, and stat changes. Resident Pokemon Master and consultant.", "I used game theory, combinatorics, and statistical analysis to develop a decision making AI. It uses what data it knows combined with the probability of random chance to optimize its chance of winning the Pokemon duel."]], ["Rockem-Sockem-Oculus", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/A9xsn3xmq8c?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Rockem-Sockem-Oculus \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/789/datas/gallery.jpg\"/>\n<p>\n<i>Photo of Player 1 &amp; 2 Robots</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Rockem-Sockem-Oculus \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/787/datas/gallery.jpg\"/>\n<p>\n<i>Photo of Player 1 &amp; 2 Robots</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Rockem-Sockem-Oculus \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/785/datas/gallery.jpg\"/>\n<p>\n<i>Photo of Player 1 &amp; 2 Robots</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Rockem-Sockem-Oculus \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/691/datas/gallery.jpg\"/>\n<p>\n<i>Finished Player 1 Robot</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Rockem-Sockem-Oculus \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/672/datas/gallery.jpg\"/>\n<p>\n<i>Picture of the Robot</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Rockem-Sockem-Oculus \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/372/790/datas/gallery.jpg\"/>\n<p>\n<i>Picture of the Robot</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Rockem-Sockem-Oculus \u2013 screenshot 7\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/372/788/datas/gallery.jpg\"/>\n<p>\n<i>Writing code for the Kinect and the Oculus</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Rockem-Sockem-Oculus \u2013 screenshot 8\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/372/789/datas/gallery.jpg\"/>\n<p>\n<i>Testing out Player 1 view through the Oculus Rift CV1</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Rockem-Sockem-Oculus \u2013 screenshot 9\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/372/792/datas/gallery.jpg\"/>\n<p>\n<i>Writing code for the Arduino</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Rockem-Sockem-Oculus \u2013 screenshot 10\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/372/791/datas/gallery.jpg\"/>\n<p>\n<i>Group Photo!</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Rockem-Sockem-Oculus \u2013 screenshot 11\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/671/datas/gallery.jpg\"/>\n<p>\n<i>Finishing Touches</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Rockem-Sockem-Oculus \u2013 screenshot 12\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/786/datas/gallery.jpg\"/>\n<p>\n<i>Photo of Player 1 &amp; 2 Robots</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Rockem-Sockem-Oculus \u2013 screenshot 13\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/788/datas/gallery.jpg\"/>\n<p>\n<i>Oculus HUD View</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Rockem-Sockem-Oculus \u2013 screenshot 14\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/373/790/datas/gallery.jpg\"/>\n<p>\n<i>Photo of Player 1 &amp; 2 Robots</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>We are located at table 41 near the control booth.</h2>\n<hr/>\n<h2>Inspiration</h2>\n<p>We honestly didn't have this idea until the day before Bitcamp started. We had a group meeting over dinner to discuss potential ideas  that could utilize all of our strengths. Mikhail and Muyiwa both had good coding experience, Gerry was on electronics, and Sam and Bryce were great with CAD design and robotics implementation. In the end we decided to come up with something that tied all of those together. Mike was able to register a Oculus CV1 for our group, and we wanted to be able to utilize that as well. At this point we definitely wanted to have a project that utilized both software and hardware. From there it was just brainstorming until we came up on the idea of making a interactive version of Rockem-Sockem robots. In the end, this worked perfectly because everybody had something to contribute.</p>\n<h2>What it does</h2>\n<p>Essentially, there are two parts to this game. In terms of hardware, we have the Oculus Rift CV1, the Kinect 1st Gen, and the two 3D printed robots (controlled with 4 servo motors each). Essentially, the Kinect records user input in the form of arm movements. It can record a left punch, a right punch, a block motion, and an unblock motion. The Kinect (which is running on Unity) then sends a value (based on which movement it registered) to the Arduino which powers and controls the servo motors that control the movements of the robot. Essentially we are replicating the movements of the player on the robot.</p>\n<p>The next part is the Oculus CV1 implementation. The robot has a webcam mounted as the head, and it relays that information back to Unity which then places it on a plane and relays the image to the Oculus. As a result, Player 1 gets a real time, first person view of the robot fight. Additionally, in Unity - a Heads Up Display (HUD) is added in order for Player 1 to have an augmented reality experience. The HUD will contain player health and opponent health.</p>\n<p>Player 2 (Since we only had one Oculus) is played by an XBOX controller. So instead of having the Kinect read movements, the input is instead generated by the wireless controller. However the actions are still replicated on the Player 2 robot. Player health and opponent health is also indicated by LED's for the convenience of player 2.</p>\n<p>The game is played between Player 1 and Player 2. The battle goes until one player hits the other player 4 times. Once that happens, the game is over, and the player who made it to 4 points wins. </p>\n<h2>How we built it</h2>\n<p>Both robots were both designed in CAD and 3D printed during the 36 hour period of Bitcamp. Different colors were used to differentiate between the robots.</p>\n<p>The arena was made with sheet of wood, and some pens glued in. Rubber bands stretch around the arena as well. </p>\n<p>We have a breadboard where the power and ground is connected to the power and ground of each motor, and the control wires are connected to the Pulse With Modulation (PWM) pins on the Arduino.</p>\n<p>The Oculus is worn by the Player 1, the XBOX controller is held by Player 2, and the Kinect Sensor and the Oculus Sensor are wired into the computer and both pointed at Player 1.</p>\n<h2>Challenges we ran into</h2>\n<p>We literally spent the first twelve hours just trying to install the Oculus software. There were serious incompatibility and permissions errors that took us a lot of time to troubleshoot. So Oculus integration was one of the last things we started working on. This issue was widespread and affected all of the other students using the CV1s. At around 3 PM Saturday afternoon, we were able to get a fellow student (who magically had figured out the issue) to help us install Oculus AND get it working well with Unity (which was another serious issue).</p>\n<p>Additionally, we originally planned to use the Intel Edison instead of the Arduino, but it was not being recognized by the computer, and after spending a lot of time on it, we realized (with some help from an Intel employee) that there were not even enough PWM pins for all the motors we were using anyways, and we ended up scrapping the idea. The Arduino proved to be much easier, and much more flexible to code and implement.</p>\n<p>Once we had that up and running it was relatively smooth sailing. Of course there is always bugs in code, and things wired up wrong, but those are issues every project faces and we were able to deal with them</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Basically the whole thing. This project was ambitious at best and while we had high hopes going in, it was really a lot to complete in just 36 hours. Needless to say we didn't get much sleep. And basically everything from getting the Oculus to work, to finally getting the Kinect to register punches, to having the robot be able to replicate the actions of the user were all massive accomplishments. Additionally getting together as a team and working together to produce something amazing was another accomplishment. It kind of makes all the hell we go through as engineers worth it when we can actually bring our minds together and build something amazing.</p>\n<h2>What we learned</h2>\n<p>We learned a lot, individually and as a group. For most of us, this was our first Hackathon, and we learned a lot not only from our project, but from all the other projects around us as well. We learned the great things that can happen when a lot of minds come together. </p>\n<h2>What's next for Rockem-Sockem-Oculus</h2>\n<p>Who knows, we might keep working on it! Although since we have to return all of the gear we rented it might also just turn into a cherished memento of a great Bitcamp. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag\">rhino</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/oculus\">oculus</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/kinect\">kinect</a></span></li></ul>\n</div>\n</div>", ["I worked with Virtual Reality and Kinect in order to have the robots be able to interact with each other via punches by a player in the VR headset.", "I helped with webcam integration and HUD graphics as well as some of the C# coding and Kinect/Oculus testing.", "I designed the circuitry. wrote the code for the Arduino microcontroller, and designed the interface between the hardware and the software.", "I did CAD design with Bryce and worked on robot construction. ", "I designed most of the CAD for the robot."]], ["Dank Zen Doodler", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Dank reddit gif (<a href=\"http://i.imgur.com/GO22Mqr.gifv\" rel=\"nofollow\">http://i.imgur.com/GO22Mqr.gifv</a>).</p>\n<h2>What it does</h2>\n<p>Tries to imitate the art style of this dank gif (<a href=\"http://i.imgur.com/GO22Mqr.gifv\" rel=\"nofollow\">http://i.imgur.com/GO22Mqr.gifv</a>)</p>\n<h2>How we built it</h2>\n<p>Processing, Processing.js, HTML, CSS</p>\n<h2>Challenges we ran into</h2>\n<p>It was hard to think about it, version control, slim IDE's without VCS, Namecheap being awful at it's literal only job, missing bracket errors.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We made something that's quite dank and it looks dank.</p>\n<h2>What we learned</h2>\n<p>Lots of math, visual programming, processing, debugging without a good debugger is hell, github can be a PITA, dank memes stay dank, Android Studio is awful, Google APIs consistently disappoint, Facebook is also complex </p>\n<h2>What's next for Dank Zen Doodler</h2>\n<p>Touching tips, seeking investors, gaining capital, buying yachts, investing in penny stocks, Margot Robbie, Ludes, etc, etc, Shrekli.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/processing\">processing</a></span></li><li><span class=\"cp-tag\">processing.js</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://terpconnect.umd.edu/~slanoue/\" rel=\"nofollow\" target=\"_blank\" title=\"https://terpconnect.umd.edu/~slanoue/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>terpconnect.umd.edu</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I created some really neat triangle software", "", ""]], ["Connect Four", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>This is our first hackathon and our first semester in computer science, so we decided to make something reasonable but still personally challenging.</p>\n<h2>What it does</h2>\n<p>It's a game of connect four to be played with two people using the number keys on the keyboard.</p>\n<h2>How we built it</h2>\n<p>We built it using a computer. Specifically, one running java with the swing packages in eclipse.</p>\n<h2>Challenges we ran into</h2>\n<p>The biggest challenges were simply mechanics, in particular the mechanic that allowed the game to tell when a player has won.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Pretty much all of this. Like I said, we're relatively new to this.</p>\n<h2>What we learned</h2>\n<p>We learned how to use javax.swing, as well as how to implement keyboard input and an updating GUI.</p>\n<h2>What's next for Connect Four</h2>\n<p>The next thing for this will likely be an ai opponent. (Maybe one that always wins, since the game is solved. That'd be funny to show people).</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/eclipse\">eclipse</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Aycion/BitCamp2016.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Aycion/BitCamp2016.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I helped program a large portion of the ConnectFourGrid class, and I wrote a lot of code in other classes that we didn't end up using.", ""]], ["Oculingo", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Oculingo \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/372/813/datas/gallery.jpg\"/>\n<p>\n<i>demo room</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p><img alt=\"\" data-canonical-url=\"https://raw.githubusercontent.com/scmilburn/oculingo/master/oculingo.png\" src=\"https://res.cloudinary.com/devpost/image/fetch/s--ha41IfuK--/https://raw.githubusercontent.com/scmilburn/oculingo/master/oculingo.png\"/></p>\n<h2>FIND US AT TABLE 15!!!</h2>\n<h2>Inspiration</h2>\n<p>Many current free language-learning apps lose user following because they fail to engage their user. With virtual reality, our users can theoretically be immersed into the environment that they are trying to learn about. </p>\n<h2>What it does</h2>\n<p><strong>Oculingo</strong> immerses the user in a scene with many different objects to identify. </p>\n<h2>How we built it</h2>\n<p>We used Unity for our 3D models and interaction with the Oculus. For voice recognition and text-to-speech we used Microsoft's Speech API</p>\n<h2>Challenges we ran into</h2>\n<p>One of our larger obstacles was with voice recognition. Initially, our voice recognition method only supported English so when we checked for the Spanish solution by spelling it phonetically as if it were English (instead of 'abajo' we spelled 'abaho'). We were able to fix this by changing the localization settings that the .dll file pointed to</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are proud that it works, its educational, and fun!</p>\n<h2>What we learned</h2>\n<p>We learned about Unity and thought a good amount about UX in VR. </p>\n<h2>What's next for Oculingo</h2>\n<p>An easy addition to Oculingo would be to add many more scenes/ rooms. We could also improve on voice recognition and implement more vocabulary than just nouns.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/oculus-gear-vr\">oculus-gear-vr</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag\">microsoft-speech-api</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/scmilburn/oculingo\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/scmilburn/oculingo\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Found the DLL that we needed for TTS and helped getting it working. Wrote test cases for voice recognition/TTS. Also designed our Unity start screen for our simulation. Finally set up our project page (scmilburn.com/oculingo) ", "I worked on integrating custom DLL that interfaced with Microsoft SAPI 5.3 to allow speech to text and vice recognition in different languages. I also was the designer of the project, providing the documentation and helping manage the workflow of the Oculingo team.", "I worked on getting the Unity part of the application up and running. It was my first attempt at anything in Unity, as well as the Oculus Rift."]], ["SquadUp", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"SquadUp \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/372/761/datas/gallery.jpg\"/>\n<p>\n<i>Cool pull-out menu.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"SquadUp \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/372/762/datas/gallery.jpg\"/>\n<p>\n<i>See a list of your friends in the Squad.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"SquadUp \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/372/768/datas/gallery.jpg\"/>\n<p>\n<i>See a map of all of your squadmates and keep track of them.</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Going out with friends can be scary when you lose track of people in your group. It's reassuring to be able to see where everyone important to you is. Even as a privacy issue, being able to keep track of your loved ones is often an imperative issue. During natural disasters and terrorist attacks, people are often separated and split up from each other. Our app would allow an emergency system in which families can contact and find each other. </p>\n<h2>What it does</h2>\n<p>Our app allows users to create groups in which to report in locations. This would allow people in the group to be able to track users in the same group. In this way, people won't get separated or split up in confusing circumstances. Our app shows the direction and distance each user is from the others, and allows messaging between users/group. </p>\n<h2>What's next for SquadUp</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-maps\">google-maps</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li></ul>\n</div>\n</div>", [""]], ["Staccato", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>I always loved the music visualizers in WinAmp, so I wanted to make my own.</p>\n<h2>What it does</h2>\n<p>Creates a simple 2D particle system that reacts to the music.</p>\n<h2>How I built it</h2>\n<p>I modified a random particle system generator I made to take audio data as the input instead of randomly generated values. It uses canvas to draw the shapes and AnalyserNode to get the frequency data from the audio signal. This data is used to modified the size and opacity of each shape so they react to the music. </p>\n<h2>Challenges I ran into</h2>\n<p>Finding a set of initial parameters that would look good for any music being played. I played around a lot with different values until the particle system looked pretty. When I first added the audio signal data, the shapes were very jittery and unpleasant to look at. I added a natural decay to the size and opacity of each shape, so these sudden changes would be a lot smoother and the shapes would seem to pulse with the music. </p>\n<h2>What I learned</h2>\n<p>This was one of my first major js projects. I learned a lot about how to use the WebAudio API to analyze audio signals and HTML canvas to draw whatever I want. I also learned how to spell analyzer with an s because mozilla can't spell properly, jk.</p>\n<h2>What's next for Staccato</h2>\n<p>I'm working on adding microphone support, so you could use the visualizer in realtime with your mic.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://codepen.io/abbott/full/jqZPEb/\" rel=\"nofollow\" target=\"_blank\" title=\"http://codepen.io/abbott/full/jqZPEb/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>codepen.io</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["all me baby"]], ["a ", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<h2>What it does</h2>\n<h2>How I built it</h2>\n<h2>Challenges I ran into</h2>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<h2>What's next for</h2>\n<p>a</p>\n</div>\n</div>", [""]], ["stock market blast 0.7", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>by FINRA, and teammates awesome ideas</p>\n<h2>What it does</h2>\n<p>proudces music depanding of the pattern of stock martet</p>\n<h2>How I built it</h2>\n<p>with java</p>\n<h2>Challenges I ran into</h2>\n<p>we couldn't find the right sound, and show the graph in real time</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>we built something cool.</p>\n<h2>What I learned</h2>\n<p>i can build something cool and teamwork is awesome</p>\n<h2>What's next for stock market blast 0.7</h2>\n<p>updating the GUI , more random reasonable patterns for the sound it produces</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n</div>", [""]], ["Easy Menus in Processing", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>Processing-Menu</h1>\n<p><a href=\"https://processing.org/\" rel=\"nofollow\">Processing</a> is a collection of Java libraries that greatly simplifies graphics programming. Processing programs, called sketches, are usually designed with one window. In this repository you will find (in the midst of a great deal of junk from Eclipse) a package containing classes that that allow the easy creation of a menu window for your Processing sketch. The important source code is buried in <a href=\"https://github.com/blepfo/Processing-Menu/tree/master/Processing-Menu/src/menu_package\" rel=\"nofollow\">Processing-Menu/src/menu_package/</a>\n<br/>\n<br/>\nYou specify which parameters are involved in the drawing that is output on your main output window, which I call a DrawingWindow, and these parameters are added to a MenuWindow. The MenuWindow contains buttons that, when clicked, allow you to enter new values. This makes it easy to tweak values while your sketch is running, allowing you to make more user friendly Processing Sketches that people can interact with without having to edit any source code.\n<br/>\n<br/>\nIncluded in the source code is an example to show you how the menu can be implemented. This should also serve as a good example of using multiple windows for one Processing sketch.\n<br/>\n<br/>\nThe Processing IDE is lightweight, but it has some limitations that make it difficult to utilize some of the object-oriented design features that Java allows. You should be able to get this code working in the Processing IDE, but I recommend using <a href=\"https://code.google.com/archive/p/proclipsing/\" rel=\"nofollow\"> Proclipsing </a>, a plugin for <a href=\"https://eclipse.org/\" rel=\"nofollow\"> Eclipse </a> that allows you to create Processing sketches in a more robust IDE.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/processing\">processing</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/blepfo/Processing-Menu\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/blepfo/Processing-Menu\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Pepe Rarity Calculator", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/k578hJz7FHQ?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Pepe Rarity Calculator \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/372/844/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Pepe Rarity Calculator \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/372/846/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Pepe Rarity Calculator \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/372/847/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Pepe Rarity Calculator \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/372/848/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Pepe Rarity Calculator \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/372/849/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>Table</h1>\n<p>We are located at table 34A</p>\n<h2>Inspiration</h2>\n<p>Calculating how rare a pepe is by hand is hard work and takes a lot of skill. We wanted to bring the ability to identify the characteristics of a pepe to the masses.</p>\n<h2>What it does</h2>\n<p>Calculates the rarity, value and level of a pepe.</p>\n<h2>How we built it</h2>\n<p>Android</p>\n<h2>Challenges we ran into</h2>\n<p>Sometimes our algorithm for calculating rarity and value would overstate the rarity. This was solved by reducing the pepe factor by 4%</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Developing the worlds first pepe rarity calculator</p>\n<h2>What we learned</h2>\n<p>There are some very rare pepes out there</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag\">pepe</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/theryan722/PepeRarityCalculator/releases\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/theryan722/PepeRarityCalculator/releases\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Worked on the algorithm, backend and app.", "", ""]], ["Twitch Plays Piano ", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>See this project at Table 1!</p>\n<h2>Inspiration</h2>\n<p>We were excited to utilize a piano keyboard as hardware and we wanted to interface with Twitch.tv in some fashion. We were also heavily influenced by the success of the Twitch Plays Pok\u00e9mon. </p>\n<h2>What it does</h2>\n<p>Users can control aspects of a piano, such as the pitch of the notes, their duration, rests, intensity, and tempo.</p>\n<h2>How we built it</h2>\n<p>We accessed Twitch chat using a python IRC client. We parsed the text we received from the chat into notes, duration, and intensity. We then passed those aspects of the music to a Java program which played the music on the piano via MIDI signals.  </p>\n<h2>Challenges we ran into</h2>\n<p>We could only write one note to the piano at a time which prevented us implementing chords. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Finishing the project in a timely manner.<br/>\nCreating a bot to play songs.<br/>\nUtilizing a unique piece of hardware.  </p>\n<h2>What we learned</h2>\n<p>Python. \nCommunicating with an instrument through digital means.  </p>\n<h2>What's next for Twitch Plays Piano</h2>\n<p>Anarchy vs. Democracy (deciding what notes are played)<br/>\nAdding more instruments.<br/>\nView notes on stream.<br/>\nListen on stream.  </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag\">irc</span></li><li><span class=\"cp-tag\">twitch</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://git.io/vVSRR\" rel=\"nofollow\" target=\"_blank\" title=\"https://git.io/vVSRR\">\n<i class=\"ss-icon ss-link\"></i>\n<span>git.io</span>\n</a></li>\n<li><a href=\"http://www.twitch.tv/twitchplaysapiano\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.twitch.tv/twitchplaysapiano\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.twitch.tv</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I helped write the chat processing sections of the project (in Python). This is what enabled us to \"translate\" commands from twitch chat into music.", "", "", "", ""]], ["Battleship", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<h2>What it does</h2>\n<p>'Battleship' brings the classic two player board game to the computer! </p>\n<h2>How I built it</h2>\n<p>Eclipse </p>\n<h2>Challenges I ran into</h2>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<h2>What's next for Battleship</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/zhiyikuang/Battleship\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/zhiyikuang/Battleship\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["If there could be a two word phrase for moral support besides moral support,  it would be Matt Walters.  As the trash can,  advise giver,  and worthy team member Matt did his best to give his friends the best bitcamp experience ever #bitcampnation ", "", ""]], ["Any Where", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/8KlO9QCrl1c?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Any Where \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/372/148/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Sometimes, when you are too bored and want to go somewhere but too lazy to find a place.\nSometimes, when you need to go somewhere but can't decide where.\nSometimes, you just need someone to tell you where to go.\nOr when you just want to explore a new area.\nThis app is for you.</p>\n<h2>What it does</h2>\n<p>Ask user to turn on location if it is off.\nDetect user's current location.\nIt will give user a random place, user just only need to tell what kind of places user want and how far user willing to go from user's current location.\nCan switch between miles and km\nUser can choose from 5 categories of places: HangOut-EnjoyNature-InterestingPlaces-Shopping-Relax\nOr if user still can't decide what he/she want, user can just choose anything option.</p>\n<h2>How I built it</h2>\n<p>Use Location service to detect user's current location.\nI am using google places api to find a list of places depend on type of places user want to go and in a range from user current location. And then I choose a random place from that list.</p>\n<h2>Challenges I ran into</h2>\n<p>How to use location service.\nHow to using google place api, google map api.\nProcessing data get from google place api (parsing data, what to do when get empty list...)\nTurn on, turn off Location service on android.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>An app that can give a random place depending on what kind of place user want to go.</p>\n<h2>What I learned</h2>\n<p>How to using google place api, google map api.\nHow to process data from google api (parsing data).</p>\n<h2>What's next for Any Where</h2>\n<p>Maybe to store user interest, what kind of places user want to go the most, where user already visited. So it can give a new better place next time user use it.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-maps\">google-maps</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-play\">google-play</a></span></li><li><span class=\"cp-tag\">google-loc</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/lesun90/AnyWhere/blob/master/app/AnyWhere.apk\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/lesun90/AnyWhere/blob/master/app/AnyWhere.apk\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/lesun90/AnyWhere\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/lesun90/AnyWhere\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]]]