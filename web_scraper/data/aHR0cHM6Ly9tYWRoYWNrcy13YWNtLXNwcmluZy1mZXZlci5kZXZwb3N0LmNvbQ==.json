[["UniTravel", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"UniTravel \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/036/datas/gallery.jpg\"/>\n<p>\n<i>search places</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"UniTravel \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/042/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"UniTravel \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/044/datas/gallery.jpg\"/>\n<p>\n<i>settings</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"UniTravel \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/045/datas/gallery.jpg\"/>\n<p>\n<i>set condition</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"UniTravel \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/062/datas/gallery.jpg\"/>\n<p>\n<i>results</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>While google map allow us to plan route with prescribed methods (drive, walk, public transportation), why cannot we have trip planner with all methods combined? \nSay if I want to go to AMC to watch a movie at 4pm, and now it is 3pm. If I take a Uber, cost is about $11. It will take me there in 10 mins. But what if I want to spend less money and don't care the time as far as it gets there before 4pm?  If I have a bus pass, taking bus there will not incur extra spending. But if I google bus route, there is no such solution because I'm not close to a bus station. Walking there may take me 30 mins. By the time I arrive the closest bus stop, I just missed one and have to wait for another 30 mins and totally miss the movie. To us, there is an obvious solution: take a Uber to closest stop and catch the bus. Time: 5mins uber+40mins bus. Cost: $5.5 which is the Uber base fare.</p>\n<p>But don't stop there! There are so many choices for local transportation nowadays. In Madison, we have bus, bike sharing service like B-Cycle, car sharing like Zipcar and Turo, other taxi services such as Green Cab, which could be a better choice than Uber under certain situation(they allow sharing taxi). We will combine them all and give you the best!</p>\n<h2>What it does</h2>\n<p>Ihe iOS app, a user can search their destination. The app requires routes from REST server, REST search database, query google direction, compare all possible combinations, and gives you the best choice under your constraint!</p>\n<h2>How we built it</h2>\n<p>iOS app as front end, Flask(Python) REST server as backend. Google Api for address searching and distance matrix.</p>\n<h2>Challenges we ran into</h2>\n<h2>Accomplishments that we're proud of</h2>\n<h2>What we learned</h2>\n<h2>What's next for UniTravel</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/iphone-sdk\">iphone-sdk</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-directions\">google-directions</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-maps\">google-maps</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://bitbucket.org/wandonye/unitravel_app\" rel=\"nofollow\" target=\"_blank\" title=\"https://bitbucket.org/wandonye/unitravel_app\">\n<i class=\"ss-icon ss-link\"></i>\n<span>bitbucket.org</span>\n</a></li>\n<li><a href=\"https://bitbucket.org/wandonye/unitravel\" rel=\"nofollow\" target=\"_blank\" title=\"https://bitbucket.org/wandonye/unitravel\">\n<i class=\"ss-icon ss-link\"></i>\n<span>bitbucket.org</span>\n</a></li>\n<li><a href=\"http://unitravel-1284.appspot.com/search\" rel=\"nofollow\" target=\"_blank\" title=\"http://unitravel-1284.appspot.com/search\">\n<i class=\"ss-icon ss-link\"></i>\n<span>unitravel-1284.appspot.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Organization:\n -propose idea\n -formulate our all-star team.\nFrond end iOS app:\n -side bar\n -search map view\n -learned Google Map iOS SDK\nBackend framework setup:\n -Flask REST server\n -learned GAE\n -preliminary idea of algo", "", "", ""]], ["Chemical Reactor", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<h2>What it does</h2>\n<p>The code simulates what atoms do in a chemical reaction. Atom and molecule objects move in a pattern-less fashion (also known as thermal motion) in a 3-D coordinate system, and on collision, steric and energy factors will be taken into account to decide whether a reaction has taken place, and whether bonds form or break. In theory, the system will in the end, reach a state of equilibrium with a stable mixture of chemicals. </p>\n<h2>How I built it</h2>\n<p>Using java and the core code of processing as a reference library</p>\n<h2>Challenges I ran into</h2>\n<p>It is hard to manage a molecule as a whole, keeping the atoms' relative position unchanged while the whole molecule can still freely rotate and move around </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I was able to display this system using processiong</p>\n<h2>What I learned</h2>\n<p>How to work with graphical interfaces</p>\n<h2>What's next for Chemical Reactor</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/processing\">processing</a></span></li></ul>\n</div>\n</div>", ["I worked on algorithm of atoms collision. And this is my  first time using Process which enable us to draw different atoms. In the end, I've acquired lots of new knowledge in this project.", ""]], ["Cellular Automata Plant", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Cellular Automata Plant \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/008/datas/gallery.jpg\"/>\n<p>\n<i>The initial seed</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Cellular Automata Plant \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/013/datas/gallery.jpg\"/>\n<p>\n<i>View of production of auxin, a major plant growth hormone</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Cellular Automata Plant \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/014/datas/gallery.jpg\"/>\n<p>\n<i>View of water pulled from the roots</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Cellular Automata Plant \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/015/datas/gallery.jpg\"/>\n<p>\n<i>View of glucose spreading from the leaves into the plant</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Cellular Automata Plant \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/016/datas/gallery.jpg\"/>\n<p>\n<i>Growing plant</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>What it does</h2>\n<p>It simulates a plant growing over time. Each cell of the plant is a cell in the cellular automata. Water flow from the ground and into and through the plant is simulated, as well as photosynthesis reactions in the leaves. Creating new cells costs water and glucose, so a successful plant will time the growth of different organs to grow the fastest. </p>\n<h2>What's next</h2>\n<p>The parameters of the growing plant aren't optimal. It generally grows a single leaf sideways on the ground like a vine. I believe if we used a genetic algorithm to tweak the parameters of the model it would better resemble typical plants found in nature. </p>\n<h2>Potential impact</h2>\n<p>This game can be used as a fun educational game for kids. They can simulate different parameters of the model and watch how the plant behaves as a result, learning core principles of evolutionary botany. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/jamiesonwarner/springfever\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/jamiesonwarner/springfever\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I wrote the logic for the cell duplication part of the automata. The cell duplicates when its resource and growth hormone levels pass a certain threshold, paramaterized by a plane. I had some troubles getting realistic-looking growth, but I think some tweaks to the model can be made that makes actual branching structures viable. "]], ["Vocab_Teacher", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Vocab_Teacher \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/056/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Vocab_Teacher \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/057/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Vocab_Teacher \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/058/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>VocabTeacher</h1>\n<p>VocabTeacher is an android app to help students learn new words. The basic idea of this app is to simulate flashcard, where students can freely add new words and edit the meaning of the words. </p>\n<p>The most unique feature of VocabTeacher is to show the related pictures of the word. Additionally, pictures can help people memorize more efficiently according to studies.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/osori/VocabTeacher\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/osori/VocabTeacher\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Worked on the integration of transitioning pages as well as the implementation of various buttons ", "", "", ""]], ["IceBreaker", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Very often people who  go into meet ups /conferences spend a lot of time getting to know a person before they can actually strike a meaningful conversation. This limits the number of networking opportunities.</p>\n<h2>What it does</h2>\n<p>Icebreaker strives to make networking more productive by  integrating  information from LinkedIn and the capabilities of facial recognition. Let us consider the following scenario:\nA person X who wants to work with another person Y but does not know anything about Y.\nAll he/she needs to do is take a picture of that person. The face recognition component scans through a previously curated database of linked in profiles, matches the person by the linked in profile picture and pulls out the details regarding their work, interests etc. </p>\n<h2>How I built it</h2>\n<p>We build the app using android studio. For image recognition we used kairos.</p>\n<h2>Challenges I ran into</h2>\n<p>This was our first android app development. We found it hard to integrate the image recognition with the normal app.\n<strong>Not sure if we would be able to complete it during the time of submission</strong></p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We got the android app  up and running  and were able to capture the images from the user.</p>\n<h2>What I learned</h2>\n<p>Android dev is fun but can be painful sometimes :)</p>\n<h2>What's next for IceBreaker</h2>\n<p><strong>Get the app completely working</strong>\n<strong>Scaling up the number of linked in profiles by crawling more profiles</strong>\n<strong>Using emotion detection  from microsoft/kairos to  and provide hints if it were appropriate to strike a conversation</strong>\n**PS:\nTaking a picture and  doing face recognition might sound  as a privacy violation. We hand initially planned doing face recognition through a video .However, the image  was the ebst we could get to.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag\">rest</span></li></ul>\n</div>\n</div>", [""]], ["LocalBuy", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"LocalBuy \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/001/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Convenience for shoppers exists on the mobile platform for anyone who wants to order food for delivery, and many people order items to be shipped by companies such as Amazon within a few days. LocalBuy plans to make deliveries happen even faster within a day, if not 45 minutes from purchase. This java application is a starting point to what will eventually be a functional mobile platform with a clean interface.</p>\n<h2>What it does</h2>\n<p>Currently LocalBuy is a data structure for holding product and store information as well as functionality to allow a user to complete a checkout process and purchase items within the system.</p>\n<h2>How I built it</h2>\n<p>We programmed LocalBuy on java with an initial blueprint of how we wanted to organize our data. </p>\n<h2>Challenges I ran into</h2>\n<p>The program requires search features that are difficult to do with java data structures. Ideally, LocalBuy will run more effectively with a data structure more friendly to query and other popular methods of searching. Additionally, our method of identifying similar items over a variety of stores lacks clarity and efficiency.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We learned that discussing the overall structure of a program takes significant time, and the planning required for a project of this scope is far beyond what we originally thought. Our design works at a rudimentary level, and we can effectively complete our main task with a sample set of data.</p>\n<h2>What I learned</h2>\n<p>To fully implement our design, there is much more beyond the data structure. Web forms, mobile application, and a query language will take this application to the next level. Discussion of the overall design from the back end is crucial to developing an optimized program. Being able to effectively communicate a solid design to a team can improve the overall product.</p>\n<h2>What's next for LocalBuy</h2>\n<p>We want to incorporate SQL databases to effectively store and search through our data. Also the fundamental structure of our design needs to be reevaluated because our current structure didn't work out as planned. After completing the data structure, we want to move this application to the mobile device.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["Mnemonics", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>The idea comes from the facts that sometimes it\u2019s hard to find enough people around to travel together for fun or for money saving (by sharing transportation fee or so), some beautiful spots are not that famous and hard to find (like in some special time or place to see) and interesting outdoor-activities are often held by some certain organizations seldom.</p>\n<p>It's a platform for travel/outdoor-activity lovers, in which people can share their routes and plans that have already been carried out or the plans waiting for others to join in. It could be a chance for true travel lovers to have fun whenever they like, to meet new friends and maybe save more money. We hope the experience users gain from our product can be the most precious memory they have.</p>\n<p>We built it by HTML5, CSS3, JavaScript, JSP and mySQL.</p>\n<p>The whole project is too large to finish, so we mainly figured out what we can do and how we achieve those goals today.</p>\n<p>After this hack, we will try to finish the website. Further more, as a complete product, we hope we can also develop APP for it.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jsp\">jsp</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/MadHackGoodNews/mnemonics\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/MadHackGoodNews/mnemonics\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["QuickCan", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"QuickCan \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/028/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"QuickCan \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/029/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"QuickCan \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/030/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>I've been canvassing for grassroots campaigns for the past few months-- the software tools they use aren't nearly up to speed when compared to corporate-funded political campaigns. For one thing, when volunteers are sent out to knock on doors, they must visually inspect their canvassing turf visually and plot a route abstractly. Humans aren't too great at that, and it leads to some unfortunate inefficiencies. Canvassing can take 2 hours where it should take 3. It's inefficient in terms of time, but it's also a waste of moral. Finishing a turf more quickly may mean that a volunteer can go out and make another route. It may also avoid participant frustration and increase the rate at which volunteers return. </p>\n<h2>What it does</h2>\n<p>QuickCan is a tool for static analysis tool for creating efficient multi-person traversal of door-to-door routes. </p>\n<p>Although we have produced a platform-agnostic, front-end mobile applet to demonstrate the use of our project, our main deliverable is a restful API which allows low-budget projects to divide up and route <em>any</em> list of addresses. This could be useful in food drives, girl-scout-routes, and anything which involves going door-to-door in a community. In this way, QuickCan manages to be extensible and provides a useful utility for many existing services, as well as those which have yet to be built. </p>\n<p>QuickCan is useful for making individuals experience with volunteering more efficient, and increase volunteer usefulness. In addition, this static analysis can be performed by organizations in order to choose which turfs to give to which volunteer groups-- some maps lend themselves to groups of 3, while some tight clusters are easily done by 1 volunteer. </p>\n<h2>How we built it</h2>\n<p>QuickCan's backend was built on top of python Flask. The front end is built on top of Ionic with TypeScript and Angular2. </p>\n<p>We generated a distance matrix using minimal calls from the google maps API and used them to find points which were most distant from one another. </p>\n<p>We then used a greedy algorithm written in python for our routing. This algorithm simply gulps down addresses one by one by choosing the closest address to the volunteer with the lowest total-route-duration-so-far. </p>\n<h2>Challenges we ran into</h2>\n<p>We decided to add a constant amount of time per stop in our routes to compensate for the average time spent building. We weren't sure what a reasonable amount of time to ad would be. </p>\n<p>Google maps front end API only allows single character labeling of their anchor points by default. We wanted to show the list of visited houses to demonstrate our apps abilities. To adapt to this constraint, we had to label our anchor points with ad-hoc generated SVG's of double digit numbers and integrate them into the app with a little hacky-css. </p>\n<p>As our problem is inherently NP complete (think TSP!) validating our route's optimal was impossible. Though we could compare different variations of our code to see which was \"better\", it was difficult to discern which was the \"best\".</p>\n<p>We found quickly that the google maps API was prohibitively expensive for some of the operations we were performing. We have some ideas for significantly reducing query-cost, but it will take some experimentation. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>This project was an excellent choice of scope for a hackathon of this size. We were able to segment labor among our duo nicely to quickly build the the query adapter for grabbing distance data from google drive. </p>\n<p>We then had time to consider different algorithms and, while we ended up choosing the one we thought we could finish within the time slot, it was interesting and fun to consider different approaches. </p>\n<p>We feel that our app is well tested, extensible and useful for a variety of purposes. We are proud of what we were able to accomplish with a two person team. </p>\n<h2>What we learned</h2>\n<p>Gabriel - Learned a lot of TypeScript, Angular2, Flask and Ionic-- I'd never used them before! As an express/Node/electron preferring developer, it was a breath of fresh air to try out a new framework under the guidance of a patient and helpful friend. </p>\n<h2>What's next for QuickCan</h2>\n<p>We would like to try out QuickCan with different underlying algorithms on different maps and see which works the best. Starting-address-selection and map routing are both interesting and unique problems with a lot of solutions available online which deserve careful experimentation. Ant-colony-optimization algorithms look promising, as do genetic algorithms. Since we're able to quickly cache a distance matrix between addresses, and our analysis is expected to be a once-per-organization-per-list run, we should be able to run a complex algorithm to get the most optimal results. </p>\n<p>We would like to improve our API, thoroughly test with different routing algorithms/maps, and present it to existing canvassing apps for free use!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/typescript\">typescript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/angular-js\">angular.js</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/kevhouck/QuickCanBackend\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/kevhouck/QuickCanBackend\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/kevhouck/QuickCanFrontend\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/kevhouck/QuickCanFrontend\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["piano", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>I've never done javascript before, Dan wanted to do a trumpet so I was like, \"Hey! I don't know anything about band but I've played piano for twelve years!\" And thus a beautiful Frankenstein piano was born.</p>\n<h2>What it does</h2>\n<p>It plays keys! Also has a \"recording\" function whereupon you can play a sequence of notes and have them played back to you. Only one key at a time, though, it might fall apart if you try more at once.</p>\n<h2>How I built it</h2>\n<p>A lot of tinkering with javascript. The audio files were taken off of freesound. Also, I've only been running it in Chrome.</p>\n<h2>Challenges I ran into</h2>\n<p>Javascript has some seriously weird timing issues that were a pain to sort out.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Workaround for abovementioned weird timing issue, also getting the recording function to work.</p>\n<h2>What I learned</h2>\n<p>A bit of JS/jQuery, also how Intellij works.</p>\n<h2>What's next for piano</h2>\n<ol>\n<li>Adding more black keys</li>\n<li>Adding multi-key functionality (right now it plays one key at a time)</li>\n<li>More octaves.</li>\n</ol>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/enuilin/jspiano\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/enuilin/jspiano\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["trumpet", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"trumpet \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/376/026/datas/gallery.jpg\"/>\n<p>\n<i>JAZZ!</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>The world is missing a browser-based trumpet.</p>\n<h2>What it does</h2>\n<p>Simulates the proudest instrument of the brass family in an impressively realistic way. Now you too can impress and amaze your friends and enjealousify your enemies as you toot a jaunty tune on your virtual horn. </p>\n<h2>How I built it</h2>\n<p>This is built with clojurescript in general and the the react-wrapper library re-frame to handle events and draw the dom. I use the hum library, a clojurescript wrapper for the new-ish Web Audio API to produce a tone.</p>\n<h2>Challenges I ran into</h2>\n<p>Getting the valve presses and buzz intensity slider to work together with the web audio oscillator in a performant way turned out to be problematic. The whole interface is laggier than I would like.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I like how the key press animations look! They are full of zip.</p>\n<h2>What I learned</h2>\n<p>I learned about equal temperament and how to produce tones that are in sync with a starting tone (A @ 440).</p>\n<h2>What's next for trumpet</h2>\n<p>Rock band for virtual trumpet! I'd like to add scrolling note-markers play that requires the user to keep time and play a cool song! Also, the ability to save and play back performances.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clojure\">clojure</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag\">clojurescript</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/dpetranek/trumpet\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/dpetranek/trumpet\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Beacon", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Beacon \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/375/950/datas/gallery.jpg\"/>\n<p>\n<i>(1/5) Initial screen prompting the victim to \"Tap\" the screen and seek assistance</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Beacon \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/375/949/datas/gallery.jpg\"/>\n<p>\n<i>(2/5) Beacon preparing to broadcast and seek assistance.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Beacon \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/375/953/datas/gallery.jpg\"/>\n<p>\n<i>(3/5) Beacon broadcasting to seek assistance</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Beacon \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/375/952/datas/gallery.jpg\"/>\n<p>\n<i>(4/5) Bystander informed of a person in need of help nearby</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Beacon \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/375/951/datas/gallery.jpg\"/>\n<p>\n<i>(5/5) Bystander chose to offer help.</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We were disturbed to see the <strong>increasing number of assaults</strong> on UW Campus. Starting from 1 reported incident in January 2016, there have been 3 reported incidents in a span of 20 days each month. 911 operators ask too many questions or are busy, and the chain of communication from the operator to the nearest cops standing-by is often time-consuming. The UWPD does not get to know about the crime until it has occurred. We observed that most of these crimes occurred at night when the victim was alone, but could have easily called for help. The mere arrival of a bystander could have scared the suspect away or could have provided an opportunity to inform UWPD immediately. Based on this insight, we created Beacon.</p>\n<p>Beacon is very different from its counterparts like Life360, OnCampusOnWatch or Good2Go. These apps have complex interfaces that require some thought process on part of the victim at times of emergency. Some of these apps have been removed due to low usage or an unjustifiable price tag. Further, these apps require the user to enter a list of trusted contacts to be informed during emergencies. This is a limitation to those who are new to a place and do not yet have trusted contacts. It could also be that trusted contacts are un-reachable at the time of an emergency. </p>\n<p><strong>Beacon aims to reduce the number of assaults that could have been easily prevented</strong></p>\n<h2>What it does</h2>\n<p>Beacon is an idea that relies on an established network of bystanders willing to help during emergencies. A bystander expresses his intent to offer help anytime by simply logging in to our app and letting it run in background. The app sends heartbeat messages periodically to a central server informing it of the bystander's location. </p>\n<p>If a person needs help, she opens the Beacon app on her phone and taps on the screen to request for immediate help. This request from the victim contains the victim's location and is sent to the central server which selects as many logged-in bystanders as possible within 500 meters of the victim. All selected bystanders are informed and each such bystander receives a map indicating his location with respect to the victim. The bystander may choose to help.</p>\n<p>During an emergency, a selected bystander is not informed about other selected bystanders. This is to avoid the well known Bystander effect. If a bystander is aware of other bystanders, then he is less likely to proceed for help assuming that others would help. But we want as much help as possible to reach the victim. </p>\n<p><strong>Beacon connects people together at times of emergency</strong></p>\n<h2>How I built it</h2>\n<ul>\n<li>Built a central server for Beacon using node.js</li>\n<li>Built a storage server leveraging redis that stores the locations of all bystanders. </li>\n<li>Built the mobile side of Beacon using HTML, Javascript, CSS, Phone gap and google-maps API.<br/></li>\n</ul>\n<h2>Challenges I ran into</h2>\n<p>We ran into 3 challenges.</p>\n<p>First was the challenge of <strong>false alarms</strong>. A person may mistakenly tap Beacon requesting immediate assistance. To over come this, we added a delay of 10 seconds between when a victim taps our app and when the app sends the first request of help to the server. If the victim taps again before these 10 seconds expire, then no request for help is raised.</p>\n<p>Second, we had to handle the situation when a <strong>bystander has more than one victim in his vicinity</strong> who needs help. We solve this problem by maintaining a list of bystanders who are already en route to help a victim. These are active bystanders. We ensure that every active bystander is assigned to exactly victim in his proximity. If there is more than victim who falls in the vicinity an active bystander, then we continue our search for other inactive bystanders in the victim's vicinity. If no inactive bystanders are found within 500 meters, we increase the range up to 1500 meters.</p>\n<p>Third, we had to figure out <strong>how to inform the bystanders</strong> that there is a victim in their vicinity who needs help. We solved this by piggy-backing on the response to a heartbeat message sent by the bystander. We use it to inform the bystander that there is someone in his vicinity who needs help.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We are proud that we accomplished the idea we had in mind when we started. </p>\n<ul>\n<li>Leveraged and connected node.js, redis and google maps API to build a useful application. </li>\n<li>Solved several corner cases and race conditions involving heartbeats and requests for help that in node.js. </li>\n</ul>\n<p><strong>We are proud that the end result looks good and is useful</strong></p>\n<h2>What I learned</h2>\n<ul>\n<li>Learnt to use several languages and interfaces in tandem</li>\n<li>Design an intuitive UI and a light weight mechanism to accomplish some complex ideas.</li>\n</ul>\n<h2>What's next for Beacon</h2>\n<p>Future features.</p>\n<ul>\n<li><p>Currently, a malicious user himself could get hang of the victim's phone and diffuse the request for help that the victim raised. To prevent this, we wish to have the victim's phone lock itself automatically after the 10 second window has expired and the first request for assistance has been raised. The phone must then be unlocked by code known only to the victim.</p></li>\n<li><p>We wish to have the phone start audio and video recording after the first request for assistance has been sent.</p></li>\n<li><p>We wish to add authentication to Beacon so that only those who are registered and successfully logged in can raise requests for assistance and/or provide assistance during emergencies. </p></li>\n</ul>\n<p><strong>We wish it to integrate Beacon in the UW-app to bring the campus one step closer to safety against rising assaults</strong></p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/phonegap\">phonegap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/redis\">redis</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-maps\">google-maps</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/paulgc/beacon-app\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/paulgc/beacon-app\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["potato and banana", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>potatoes and bananas</p>\n<h2>What it does</h2>\n<p>prices things in terms of food products</p>\n<h2>How I built it</h2>\n<p>visual studio</p>\n<h2>Challenges I ran into</h2>\n<p>databases</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>databases</p>\n<h2>What I learned</h2>\n<p>not sure</p>\n<h2>What's next for potato and banana</h2>\n<p>every commodity ever</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/visual-basic\">visual-basic</a></span></li></ul>\n</div>\n</div>", ["i worked on the everything"]], ["Voice Remote", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Voice Remote \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/375/973/datas/gallery.jpg\"/>\n<p>\n<i>Initial Setup</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Voice Remote \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/375/974/datas/gallery.jpg\"/>\n<p>\n<i>Standby Screen</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Voice Remote \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/375/977/datas/gallery.jpg\"/>\n<p>\n<i>Choosing channels</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Voice Remote \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/375/976/datas/gallery.jpg\"/>\n<p>\n<i>Channel List</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Voice Remote \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/375/975/datas/gallery.jpg\"/>\n<p>\n<i>Filtered Channel List</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>The idea for this app came from when my Grandmother, who is suffering from Arthritis, came to visit us during the winter break. Watching her use any tactile device was a pain as she winced whenever she had to press a button. While brainstorming, we thought why not come make something that can make lives easier for people.</p>\n<h2>What it does</h2>\n<p>This app uses the Infrared capabilities of android devices to interact with TVs and function just as a remote would. The twist here is that to use this remote, all you need is your throat. Tell it what to do and leave the heavy-lifting in its capable hands.</p>\n<h2>How We built it</h2>\n<p>We began by looking into how the ConsumerIRManager (introduced in Android 4.4.x KitKat) worked. Following this, we started researching on how TV remotes worked. Finding that, we wanted to emulate the pulses sent by a standard TV remote. We came upon the fact that using Pronto Hex codes, It was incredibly easy (comaparatively) to convert the command into a pattern of pulses that the TV could understand.</p>\n<p>We went to work with <a href=\"http://www.remotecentral.com/cgi-bin/codes/samsung/tv_functions/\" rel=\"nofollow\">Star Sight</a>, the first set of codes we found. We found a list of channels <a href=\"https://kb.wisc.edu/rtnlineup\" rel=\"nofollow\">here</a>, and used it as out sample set of channels to work with.</p>\n<h2>Challenges We ran into</h2>\n<p>The biggest challenge we ran into was understanding how we could turn Pronto Hex codes into pulses. We had found some sample code but we didn't know the theory. Understanding this theory was key, since we knew that to build a robust application we had to know every detail behind it. And sure enough we found that our frequency was off by a factor of <strong>0.241246</strong>.</p>\n<h2>Accomplishments that We're proud of</h2>\n<p>We are proud of the fact that we used this opportunity to create a tool that could make lives easier for everyone instead of going along the trivial route.</p>\n<h2>What We learned</h2>\n<p>During the last 12 hours, we learnt how Remotes interfaced with other devices and how we could emulate it on an android device.</p>\n<h2>What's next for Voice Remote</h2>\n<p>We plan to continue working on this project after the hackathon and implement an always listening mode and an understanding of context of speech.</p>\n<p>The next remote you buy would reside inside your phone and respond to the commands to speak to it. It would be like having an assistant just for operating your TV and other infrared controlled devices.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xml\">xml</a></span></li><li><span class=\"cp-tag\">consumer-ir</span></li><li><span class=\"cp-tag\">infrared</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://goo.gl/ONtZjt\" rel=\"nofollow\" target=\"_blank\" title=\"https://goo.gl/ONtZjt\">\n<i class=\"ss-icon ss-link\"></i>\n<span>goo.gl</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["learning_insanity", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>I'm interested in neural networks that represent boolean expressions and converting from those neural nets to boolean expressions. I don't want to convert neural nets that are too artificial, so I'm generating a neural net from the expression by training it on the full truth table.</p>\n<h2>What it does</h2>\n<p>Run nn.py in python, and type in a boolean expression in reverse polish notation. It will then run and create a neural network that represents that boolean expression.</p>\n<h2>How I built it</h2>\n<h2>Challenges I ran into</h2>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<h2>What's next for neural_insanity</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/eyepatchParrot/neural_insanity\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/eyepatchParrot/neural_insanity\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["lazy-arrays", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>Normally filtering multiple things using Array.prototype.filter or sorting a list by multiple keys requires multiple passes over the input. This program, through the use of ES6 generator functions and heavy use of function composition, can reduce multiple different transformation steps into a single pass over the array.</p>\n<p>To use: Clone the GitHub repository or download the zip and follow the instructions in README.md</p>\n<p>Take a look at <code>test.ts</code> for example usages and <code>lazy-array.ts</code> for the program itself.</p>\n<p>Features:</p>\n<ul>\n<li>Multiple-key single pass sorting by composing comparator functions.</li>\n<li>Infinite sequences of numbers</li>\n<li>Perform an arbitrary function on each item in a sequence</li>\n<li>Filter using multiple predicates in a single pass</li>\n</ul>\n<p>Future Plans: Implement more transformations such as grouping, joining, concatenating, etc.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/typescript\">typescript</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/quantumwannabe/lazy-array\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/quantumwannabe/lazy-array\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I made it."]], ["Assemble online", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Assemble online \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/375/955/datas/gallery.jpg\"/>\n<p>\n<i>The main page</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Assemble online \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/375/956/datas/gallery.jpg\"/>\n<p>\n<i>Test success page</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Assemble online \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/375/958/datas/gallery.jpg\"/>\n<p>\n<i>Test failure page</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>In CS 252 class we need to download PennSim to run our assembly program. It is inconvient for us. So we want to build an online version of LC-3 tester to help student accelerate this process.</p>\n<h2>What it does</h2>\n<p>It allows students to test their code online by directly entering their code, memory location and data. Meanwhile, students can share their test data and compare them to find out the correct output.</p>\n<h2>How I built it</h2>\n<p>We use HTML5 &amp; javascript to build the web interface and use python3 to build the backend with json as the data exchange mechanism.</p>\n<h2>Challenges I ran into</h2>\n<p>It is hard to design the web.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We successfully find a way to integrate python with PennSim which is a java program.</p>\n<h2>What I learned</h2>\n<p>Never do the frontend job.</p>\n<h2>What's next for LC-3 Tester</h2>\n<p>Add a forum for students to discuss their questions and share ideas. \nAutomatically get the correct output.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/tornado\">tornado</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li></ul>\n</div>\n</div>", ["Backend", "Frontend", "Document and testing"]], ["Turnt", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Have you ever heard someone complaining about a party being lame or not being able to find a party to go to? No need to worry, all of that will end with the launch of Turnt!</p>\n<h2>What it does</h2>\n<p>In order to register for Turnt, you must log in through facebook. Upon registering, users are given the option to either host a party or find parties.</p>\n<p>Hosting a party:\nEnter in name, description, address(anonymous), size, entry fee, whether there is drinking or not, the start time, and end time.\nAfter filling out the required information, the party host will be able to sift through invitations and accept applicants or decline applicants. When an applicant is accepted, the address and an optional custom message is sent to the applicant.</p>\n<p>Finding a party(address is not given):\nEnter in search parameters: distance away(slider from .25-50 miles),entry fee,drinking,start time, end time, size, optional name)\nList of available parties populate on the device. \nWhen a user desires to apply to a party, they must take a picture at that moment and write a biography about themselves, which helps the party host sift through applicants. After applying, the user's facebook account, picture, gender, age, and biography will be sent to the party host.</p>\n<p>At the party:\nParty hosts can confirm guests were accepted by simply scanning the guest's unique qr code.</p>\n<p>After the party:\nGuests can rate their party host and party hosts can rate their guests, which affects their respective \"Lit Karmas\"</p>\n<p>Extra details:\n*Party hosts cannot find or host another party if they are within 2 hours after hosting one, unless they manually end the party.</p>\n<h2>How we built it</h2>\n<p>Android Studio\nBackendless</p>\n<h2>Challenges we ran into</h2>\n<p>Time\nNo GPS functionality on our tablet</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Getting a good start on the next big social media app</p>\n<h2>What we learned</h2>\n<p>Integrating Backendless</p>\n<h2>What's next for Turnt</h2>\n<p>IOS app\nFine Tuning\nFinishing up functionalities</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/backendless\">backendless</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["BACulator", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"BACulator \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/375/996/datas/gallery.jpg\"/>\n<p>\n<i>Initial Screen : Prompt User for Personal Information</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"BACulator \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/375/994/datas/gallery.jpg\"/>\n<p>\n<i>Second Screen : Prompt User for Personal Information</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"BACulator \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/375/995/datas/gallery.jpg\"/>\n<p>\n<i>Final Screen : Allows user to incr/decr their drink count and displays current BAC percentage.</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We recognize that the drinking culture at UW-Madison is quite large. This does not mean, however, that people should be entirely unsafe about their drinking habits, nor should they feel ostracized for wanting to be careful about their drinking.</p>\n<h2>What it does</h2>\n<p>Approximates the blood alcohol content of the user based on their gender, weight, and time between drinks</p>\n<h2>How we built it</h2>\n<p>We utilized CloudPebble, Pebble's cloud-based IDE, to create a C program that runs solely on the Pebble Watch.</p>\n<h2>Challenges we ran into</h2>\n<p>We initially wanted to implement a clock to be displayed while the calculator ran in the background, but we ran into difficulties in the formatting, so we scrapped it.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We created our first fully-functional Pebble program of substance. That in it of itself was a huge accomplishment for us.</p>\n<h2>What we learned</h2>\n<p>Drink responsibly!</p>\n<h2>What's next for BACulator</h2>\n<p>Ideally, we'd like to successfully integrate the watch face into the program and make it more aesthetically appealing.</p>\n<p><strong>Blood Alcohol Content varies per person. Use good judgement before making any decisions. BACulator is not a precise tool. Please never drink and drive.</strong></p>\n<p><em>The BAC calculator updates by the minute, but BAC obviously drops very slowly, so it may take some time for results to be noticeable.</em></p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c\">c</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/pebble\">pebble</a></span></li></ul>\n</div>\n</div>", ["Co-author.", "Co-authored main program files."]]]