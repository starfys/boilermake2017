[["OcuLeap: A new way to explore", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/KuFXakWaGII?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Our main inspiration in join the hack-a-thon was to try something new and work with cool technology that we don't get the opportunity to interact with. Our team comes from a primarily scientific computing background so we were interested in branching out into more application based projects. One of the most exciting areas of technology today are the new and incredible developments in how we interact with computers; the Leap Motion and Oculus immediately stuck out to us as the best way to explore new technologies and create a really cool product. One can imagine the incredible ways education and research can be improved with such immersive digital experiences.</p>\n<h2>What it does</h2>\n<p>Generally, our project is about exploring how to combine virtual reality gesture controls with common computer activities. We did this in the form of implementing the ability to control virtual objects with our gestures. We specifically did this in two ways; the first is a port of the famous angry birds game. The angry bird setting is moved to 3D virtual reality and the birds are controlled with a series of hand gestures. The second project is an effort to explore how scientific computing, specifically graphing and visualization, can be enhanced with new immersive technologies. The idea was ti construct a series of common scientific visualizations: scatter, time series, histogram, multi-variable functions and then implement the ability to manipulate and explore them. Practically this resulted in some awesome looking animated graphs and the functionality of being able to rotate them one hand and scale it them with the other.</p>\n<h2>How we built it</h2>\n<p>The core of development centered around the unity game engine which provides the interface and IDE, Monodevelop, for developing new digital worlds. Both Oculus and Leap Motion provide resources for integrating their respective functionalities into unity.</p>\n<h2>Challenges we ran into</h2>\n<p>First and foremost we had performance issues when Oculus software determined an Alienware laptop didn't have sufficient resources to support it. Luckily we plugged it into a Macbook and it immediately worked. Unluckily, development on OSX doesn't seem to much of a priority and we had to spend a significant amount of time finding the right combination of the latest version of unity and depreciated Leap motion SDK in order to get the full setup running. After that it was a matter of overcoming the learning curve for unity and the sdks for the equipment.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>First off, we're just happy we were able to successfully integrate the Leap Motion and Oculus environments with unity, we are especially happy that we were able to accomplish an interactive, gesture-controlled 3D work and fun project. Mapping the location and velocity vectors of the hand from the Leap Motion onto objects in the virtual world was a difficult but extremely satisfying task. </p>\n<h2>What we learned</h2>\n<p>Almost every aspect of this project (outside of programming in general) was new to all of us; we gained a great amount of knowledge about how game engines work and how to implement new functionality and behavior into them. This was our first hack-a-thon and so the experience of choosing a project and working together to accomplish (a most probably over ambitious plan) in a short amount of time was instructive in itself.</p>\n<h2>What's next for OcuLeap: A new way to explore</h2>\n<p>We'd love to see teachers can use virtual-reality world to teach; it really will affect almost all aspects of society. Also, we now want our own Oculus and Leap Motion so we can continue to make fun projects!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/oculus\">oculus</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/leap-motion\">leap-motion</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mac\">mac</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://www.dropbox.com/sh/8ablcvn24n8210p/AADpmOrNxC2kAjP4Grs7E1qIa?dl=0\" rel=\"nofollow\" target=\"_blank\" title=\"https://www.dropbox.com/sh/8ablcvn24n8210p/AADpmOrNxC2kAjP4Grs7E1qIa?dl=0\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.dropbox.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I contributed in working out the develop environment and building the interactive model and making it smooth", "", "", ""]], ["Botany Buddy", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Botany Buddy \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/382/837/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Botany Buddy \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/382/838/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>Sends text to twilio that if its a picture will send it to our server that calls wolframcloud link that we developed to pass picture in and get information back about the plant, once sent back the program will send a text back to the person with the information about the plant,.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/wolfram-technologies\">wolfram-technologies</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/digitalocean\">digitalocean</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://www.wolframcloud.com/objects/86b30e15-98f1-476b-b215-8ca9cddefa78\" rel=\"nofollow\" target=\"_blank\" title=\"https://www.wolframcloud.com/objects/86b30e15-98f1-476b-b215-8ca9cddefa78\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.wolframcloud.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["TimePieceCare", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"TimePieceCare \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/382/803/datas/gallery.jpg\"/>\n<p>\n<i>Info Screen</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"TimePieceCare \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/382/804/datas/gallery.jpg\"/>\n<p>\n<i>Main Screen</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Wanting to teach family members the resources they need to teach themselves how to better manage their family members based on their own family members needs</p>\n<h2>What it does</h2>\n<p>When the user needs help the Garmin watch will post a request to our server that integrates Twilio and sends a text message to the appropriate dependent </p>\n<h2>How we built it</h2>\n<p>We used Eclipse with Garmin Connect IQ Api, and PyCharm (Python/Django)</p>\n<h2>Challenges we ran into</h2>\n<p>Learning curve towards learning Garmin's programming language MonkeyC, integrating the the API with the server</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Watch functionality. Learned MonkeyC. Connect the Watch to server.</p>\n<h2>What we learned</h2>\n<p>MonkeyC, GarminAPI, Integration between WebServer and Garmin Connect IQ API.</p>\n<h2>What's next for TimePieceCare</h2>\n<p>Adding more web server functionality. Website with more options for dependent and family member. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">monkeyc</span></li><li><span class=\"cp-tag\">garmin</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/django\">django</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/digitalocean\">digitalocean</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/marygraceblair/kstatehackapp\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/marygraceblair/kstatehackapp\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/lbreck93/HackKsu2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/lbreck93/HackKsu2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Worked on learning API, and helping develop the Watch App and connecting to server.", "I completed the Watch App Gui and implemented the communication feature between the app and the server. ", "Worked on back end webservice, HTML and CSS pages", "I'm the official whiteboard writer, UI design, debugger. "]], ["HideAndSnake", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration - Seeing how the LIFX light bulbs can change colors reminded us of playing the \"warmer/colder game\" as children.  Also, sticking with the theme of the event, we decided to use a programming language that none of us had used before, Python.</h2>\n<h2>What it does - HideAndSnake is at its core a variation of the classic game \"Snake\".  However, it takes elements from \"Hide and Seek\" as well as the \"Warmer/Colder Game\" in order to obtain the 'eggs' that the snake needs to eat in order to grow.</h2>\n<h2>How we built it - We built the entire program and all of its functionality using the Python programming language, a few libraries that we imported during the process, and the LIFX HTTP Protocols for communicating with the light over HTTP.</h2>\n<h2>Challenges we ran into - Our original idea didn't actually have anything at all to do with the LIFX bulb, in fact, we completely started over after a prototyping of our first idea (web-scraper and python command injector to an online food ordering site).  Also, establishing the connection from bulb to program was surprisingly a very large and difficult roadblock for us.</h2>\n<h2>Accomplishments that we're proud of - The part of this project that we feel most accomplished about is starting from almost know experience/knowledge in the Python programming language, to a functional understanding of the structure and syntax.</h2>\n<h2>What we learned - we learned how to develop a strategy of teamwork very early on as well as a better understanding of what we would be able to accomplish in the time that we had.  This came into play on a much greater scale the further into the competition it progressed.</h2>\n<h2>What's next for HideAndSnake - Taking over the world of Massively Multiplayer Gaming through Network integration and a \"Play with Friends\" feature.</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">lifx-api</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/daltonhahn/HackKSU.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/daltonhahn/HackKSU.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["https://github.com/austin94/TextAlexa", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"https://github.com/austin94/TextAlexa \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/382/717/datas/gallery.jpg\"/>\n<p>\n<i>SSO portal for Alexa</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"https://github.com/austin94/TextAlexa \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/382/564/datas/gallery.jpg\"/>\n<p>\n<i>iOS Application</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"https://github.com/austin94/TextAlexa \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/382/831/datas/gallery.jpg\"/>\n<p>\n<i>System Diagram</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Website</h2>\n<p><a href=\"https://www.textalexa.tech\" rel=\"nofollow\">https://www.textalexa.tech</a> THIS DOMAIN IS NO LONGER ACTIVE.</p>\n<h2>GitHub Repo</h2>\n<p><a href=\"https://github.com/austin94/TextAlexa\" rel=\"nofollow\">https://github.com/austin94/TextAlexa</a>\n<a href=\"https://github.com/austin94/TextAlexa-Mobile\" rel=\"nofollow\">https://github.com/austin94/TextAlexa-Mobile</a></p>\n<h2>Inspiration</h2>\n<p>The Amazon Echo and it's Alexa assistant are designed to provide hands-free access to information and internet-connected tools.  There are several skills (applications) created by third parties that add their tooling to the Echo, but there is nothing on the market currently that allows text messaging.</p>\n<p>We have limited experience with several areas in this project and felt that we could learn new technologies around the Amazon Alexa Skills Kit, AWS Lambda products, and creating a single-sign-on system to interact with the device.</p>\n<h2>What it does</h2>\n<p>Text Alexa allows you to upload your contacts to our online service via an Android or iOS app, connects your online TextAlexa account to your personal Amazon device via single-sign-on, and allows you to send text messages to your contacts uploaded previously.</p>\n<h2>How we built it</h2>\n<p>The project is split into several portions:</p>\n<ul>\n<li>Mobile Applications</li>\n<li>Node.js API</li>\n<li>AWS Lambda Project</li>\n</ul>\n<h3>Mobile Applications</h3>\n<p>The Android and iOS applications are built using the ionic framework.  This allows us to leverage the javascript skills we acquired from the API below to create a cross-platform mobile app with a single codebase.</p>\n<h3>Node.js API</h3>\n<p>This API includes the logic to authenticate a user with their Amazon Echo device.  It also handles the account creation and authentication needed to upload their contacts.  This web service uses Bcrypt to encrypt passwords along with sqlite for quick and easy data storage.</p>\n<h3>AWS Lambda Project</h3>\n<p>AWS Lambda provides an interface that allows us to upload our NodeJS code for our Custom Alexa Skill, install the new skill on an Amazon Echo device, and run the code in response to the designated skill wake word</p>\n<p>Built With: DigitalOcean, Nginx, Alexa Skills Kit</p>\n<h2>Challenges we ran into</h2>\n<p>The majority of our challenges centered around the Amazon Alexa Skills Kit.  Their documentation is <em>lacking</em> to say the least.  Getting the device to recognize certain speech patterns and implement a specific type of implicit key authentication was a fun challenge to tackle.</p>\n<p>We also had our first digital ocean droplet hacked :/ </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We were able to finish a feature-complete project in just 2 days while also learning several new technologies!  Getting AWS Lambda functions to work was also exciting due to the cost savings of this type of development and use cases with scalable computing.</p>\n<h2>What we learned</h2>\n<p>AWS documentation needs some work.  Don't enable root access to a machine, even for 30 seconds.</p>\n<h2>What's next for <a href=\"http://www.textalexa.tech\" rel=\"nofollow\">www.textalexa.tech</a></h2>\n<p>Upgrade the DBMS from sqlite to MariaDB or Postgres to allow for phonetic text search for miss-spellings coming from the Amazon device.</p>\n<p>Include encryption for uploaded phone numbers.</p>\n<p>Add web-admin section to allow users to edit their uploaded contacts.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag\">aws-lambda</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sqlite\">sqlite</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ionic\">ionic</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/apache\">apache</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/austin94/TextAlexa\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/austin94/TextAlexa\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on AWS Lambda with the Alexa Skills Kit, system design, Nginx setup with SSL/TSL and reverse-proxy to a Node app, along with UX", "I worked on the node.js API, SSO solution, Ionic mobile apps, and adding stateless request handling to AWS Lambda.", "I worked on the remote server configuration, Twilio Messaging API, node.js API, moral support, and correcting Austin's server security blunder.", "I worked with AWS Lambda and the Alexa Skills Kit setting up utterances and intents to set recipient names, messages, and to send the request to our web service using the Amazon Echo."]], ["chimera", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>chimera</h1>\n<p>This program allows users to hook up to a server that keeps track of the group and will text users if they get too far away.\nIt uses an android app to track user locations and sends an http request to a python server that does some analytics to return the message.\nWe started with an app that was going to be a remote control for a computer but ended up being scrapped for a more practical project. We tried making it work with iphone, android and a garmin smart watch but had to scrap the iphone early on and the garmin smart watch near the end. We had a difficult time sending post request to the server so we used a get request instead.\nWe put the python app on a digital ocean droplet and used ngrok to get the app to access the internet. I have set the url to link to the python script but it currently has not propagated. The url is project-chimera.tech and is used for backend stuff only, there is no webpage waiting for visitors.\nWe had to learn the following things</p>\n<p>android development\nmonkey c\nremote web server\npython web servers\nhow to make a web service publicly accessible\nhow to configure domain names\nhow to work on a team\nswift (for the scrapped iphone)\nhttp requests\nhow to make a simple cloud application\nthe twillio api\ngoogle maps api\nhow to configure a use and start a lot of apis and development suites.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/dbramucci/chimera\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/dbramucci/chimera\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I managed the team and worked on the server side of the application in flask in python and helped with debugging everyone's software.", "I helped in creating the local host to a public host in Python that could then receive HTTP \"POST\" requests from our Android application.", "I attempted to integrate Garmin smartwatches into our application to save battery life on the users phones.", "I worked on creating an android app that gets the GPS data, name and phone number and sends it to a web server using HTTP requests."]], ["Dream Home", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://player.vimeo.com/video/164903399?byline=0&amp;portrait=0&amp;title=0#t=\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Dream Home \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/382/707/datas/gallery.jpg\"/>\n<p>\n<i>dreamhome</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>we want create a dream home in virtual reality world to make fantasy real.</p>\n<h2>What it does</h2>\n<p>It basically a 3d animation game which you can use to build your dream house and explore it using Leap motion and Oculus Rift VR. </p>\n<h2>How we built it</h2>\n<p>We have built it using Unity 3d animation tool, C#, JavaScript, Oculus , Leap motion SDK.</p>\n<h2>Challenges we ran into</h2>\n<p>Most of us were first time hackers and we had tough time configuring the Oculus Rift and Leap motion to work together.\nWe have lot of git issue due to 3d model and metadata due to parallel commits from multiple users.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Using Oculus Rift and Leap motion to create game.</p>\n<p>Interacting with objects in virtual world using hand gestures.</p>\n<h2>What we learned</h2>\n<p>we have learnt 3d game design, how to do animation and control the game motion using Leap motion controller through our natural gesture. we also improved our knowledge on how to resolving conflicts in git. </p>\n<h2>What's next for Dream Home</h2>\n<p>we want to add oculus motion sensor and add human character so that he can walk and include video chat facilty with other users.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/leap-motion\">leap-motion</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/core-animation\">core-animation</a></span></li><li><span class=\"cp-tag\">tele-presense</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/oculus\">oculus</a></span></li><li><span class=\"cp-tag\">motion-gaming</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/alex606/Hack-a-Thon-2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/alex606/Hack-a-Thon-2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"http://exploringdreams.net/\" rel=\"nofollow\" target=\"_blank\" title=\"http://exploringdreams.net/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>exploringdreams.net</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["KSU Hack 2016 - Gesture Media Controls", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We were looking to combine multiple SDKs &amp; APIs to have a feeling of the beginning of a large scale project.</p>\n<h2>What it does</h2>\n<p>Our project is a robust gesture controller that handles media control and lighting.</p>\n<h2>How we built it</h2>\n<p>We banged our head against the keyboard and eventually produced good Python code.</p>\n<h2>Challenges we ran into</h2>\n<p>Fixing dependency issues was our main concern. We found this to be expected especially when working with new SDKs and APIs. We also struggled with fixing our Leap Motion controller to handle one vs more than one finger circles.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Getting all the dependencies working correctly really shouldn't be something we're proud of, but since it was such a pain, we are. Also the fact that we have implemented both the Leap Motion controller and the LIFX bulb together to produce a working product is something we're proud of.</p>\n<h2>What we learned</h2>\n<p>We confirmed integration is still the most difficult thing. We also learned to start small and then scale up. Also with minimal Python background using a new language was an engaging experience.</p>\n<h2>What's next for KSU Hack 2016 - Gesture Media Controls</h2>\n<p>We need to fix current implementations of fast-forward and reverse, then we can follow up with adding more features including but not limited to: chapter skips/seeking, multiple platform integration, and mood lights for music.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/leap-motion\">leap-motion</a></span></li><li><span class=\"cp-tag\">lifx</span></li></ul>\n</div>\n</div>", [""]], ["SAL", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Making day to day life easier and more effecient</p>\n<h2>What it does</h2>\n<p>Connects all your smart devices and begins to predict your actions, further automating your life.</p>\n<h2>How we built it</h2>\n<p>Andoid Studio with Lifx SDK</p>\n<h2>Challenges we ran into</h2>\n<p>Everything</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We had never made a mobile app before, and integrated many new technologies we had never seen before.</p>\n<h2>What we learned</h2>\n<p>Mobile development is fun and challenging</p>\n<h2>What's next for SAL</h2>\n<p>Integrating more smart devices.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/ZachDoll/senteel\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ZachDoll/senteel\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["HomeBase_WeatherAlert", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/JAF_W9bzmV4?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>The inspiration came to us when Chris gave the introductory note on the work they are doing at HomeBase. This was followed with a small conversation where we spoke to Chris about all different tasks they plan to complete on IoT for example triggering a coffee machine with the alarm you set to wake yourself up. Me and my teammate spent next few hours discussing different ideas and studying how existing models are working. As this is the Tornado season at Manhattan we decided to go ahead with the idea to create a weather Alert system using existing hardware and APIs. </p>\n<h2>How we built it</h2>\n<p>We spent initial hours discussing various interesting ideas we came up with and wrote designs for few of them. This was followed by feasibility discussion of these ideas :D . Finally we decided to work on weather Alert system. After finalizing the design we decided to make a mobile application. It was getting difficult to decide platforms to work and therefore we came up with an idea of a web-based application.  We wrote the code on HTML and PHP and used LIFX and OpenWeatherMap APIs . We have implemented following functionalities.</p>\n<ol>\n<li>Switching Lights On/Off</li>\n<li>Setting lights to desired colors.</li>\n<li>Control brightness of the light.</li>\n<li>Implemented Special Effects - Pulse effects</li>\n<li>Weather Alert - This is the most vital functionality. Using current user location (Longitude and Latitude ) we fetch data from OpenWeatherMap. This returns JSON data with different details about weather. There are three major categories of weather status returned - Clouds , Rain and Clear. When status is \"Rain\" we invoke a pulse notification with Blue color that notifies user of Rain. If the weather status is Clouds we give a mild purple color pulse. This indications help user to stay updated without looking at their digital devices. As this is a visual stimulus it quickly grabs user attention and saves them from missing any update (SMS or alarms can be overlooked if they are silent or in other rooms). These alerts then help users in planning their schedules such as - meetings or travels. As, this is a web based application so it can be easily modified into an i-OS or android based mobile application. \nDemos - </li>\n<li><a href=\"https://youtu.be/nSY-xDraPCE\" rel=\"nofollow\">https://youtu.be/nSY-xDraPCE</a></li>\n<li><a href=\"https://youtu.be/JAF_W9bzmV4\" rel=\"nofollow\">https://youtu.be/JAF_W9bzmV4</a></li>\n</ol>\n<h2>Challenges we ran into</h2>\n<p>We came up with several ideas initially but the biggest hurdle we ran was hardware to test the implementation. Also, there are no online simulators and very limited API for devices. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>This was our first Hackathon and this was a great experience. We are proud that we were able to come up with a submission for our first Hackathon.</p>\n<h2>What we learned</h2>\n<p>We had very limited knowledge about Internet of Things, IoT is a buzz word and touted to be the future we did not have any exposure in this area. Hack k-state has given us an opportunity to learn and understand IoT.</p>\n<h2>What's next for HomeBase_WeatherAlert</h2>\n<ul>\n<li> We plan to extend weather updates to alerts such as Firewatch, Tornadoes etc. </li>\n<li> Extend the application to work with other home appliances , for example coffee makers and geysers with alarms, fitness bands with Refrigerators etc.</li>\n<li> We will integrate these appliances to monitor their energy consumption and optimize energy usage and reduce electricity bills.</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/openweathermap\">openweathermap</a></span></li><li><span class=\"cp-tag\">lifx</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/dhananjaymehta/HomeBase_WeatherAlert\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/dhananjaymehta/HomeBase_WeatherAlert\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Teammate in this project", ""]], ["Umuros", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>As children, mood rings and necklaces always fascinated us because they \"accurately\" represented the moods of the wearers. Inspired by those memories, we created Umuros.</p>\n<h2>What it does</h2>\n<p>Umuros gives users a broad sense of Twitter's general mood at that moment. This mood is a result of the most recent tweets containing certain keywords related to 1 of 9 main moods.</p>\n<h2>How we built it</h2>\n<p>We built Umuros using Android Studio, Twitter4j, as well as the Android Graphics library.</p>\n<h2>Challenges we ran into</h2>\n<p>Collaboration on separate laptops was an issue towards the beginning of the project. However, we were able to work out the problems by using Github.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>One feature of Umuros that we especially are proud of is the ability to let the user personalize their app by picking the colors that correspond to each of the moods. Hack K-State is our first hackathon ever, and we are proud that we were able to build a successful, working application.</p>\n<h2>What we learned</h2>\n<p>We learned how to display animated GIFs and create complex XML files in Android Studio. We also learned a valuable lesson in planning ahead and research.</p>\n<h2>What's next for Umuros</h2>\n<p>The next step for Umuros would be to adapt it for Android Wear.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twitter\">twitter</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Elden123/Umuros\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Elden123/Umuros\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on animating the homepage, displaying percentages, and helped use Twitter4J.", ""]], ["Expedition", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Expedition \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/382/171/datas/gallery.jpg\"/>\n<p>\n<i>Icon Image</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Expedition \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/382/172/datas/gallery.jpg\"/>\n<p>\n<i>Screenshot</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Expedition \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/382/180/datas/gallery.jpg\"/>\n<p>\n<i>While you're On a Hike</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>I enjoy the mountains. I enjoy hiking. How can I incorporate what I enjoy, into something everyone can use? How can I incorporate the theme of \"Learning Something New\"? Oh hey - I'm new to MonkeyC! I'm new to Connect IQ! Why don't I learn those systems, and build a great wearable app in the process! (I'm of the opinion that great wearable apps don't do much by design)</p>\n<h2>What it does</h2>\n<p>Start it up when you set out on a new trail - it'll keep track of your GPS coordinates for you. Find something interesting? Run into trouble on the trail? Drop a waypoint! After you've reached your destination, you can save the path you took (along with any waypoints you left) and if you ever want to walk that trail again, you can load up the path and get a notification if you're about to hit a waypoint you marked.</p>\n<h2>How I built it</h2>\n<p>Eclipse and the Connect IQ plugin were my developer tools, along with a device emulator for the Vivoactive Watch</p>\n<h2>Challenges I ran into</h2>\n<p>Everything was unfamiliar to me - I like to stay in my familiar environment of C, C#, and general Desktop development environments, so working for something that has 64 kb of memory was certainly an experience! While the object orientation of MonkeyC made it relatively easy to learn, I found the quirks of the Connect IQ API were certainly challenging to overcome. I've never developed a mobile app before, or worked with so many types of distributed files in order to write a program!</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Figuring out how to get the darn GPS event to go off right. Also just the fact that it compiles!!</p>\n<h2>What I learned</h2>\n<p>I feel very confident in my ability to go at it again and start making some Connect IQ apps. At the end of it, I feel like I have a handle on how the API really works with MonkeyC and how relatively simple it makes developing a wearable app if you understand it.</p>\n<h2>What's next for Expedition</h2>\n<p><strong>Project still needs to be finalized</strong>\nI think it'll become my pet project... I might get my hands on an Android emulator and make a full-fledged app, with a map and everything. I also don't plan to let go of Connect IQ any time soon - the community interests me greatly, I had a read through the forums and I think I'll have fun there making some apps and watchfaces in my spare time.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">monkeyc</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/connect-iq\">connect-iq</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xml\">xml</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/eclipse\">eclipse</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/jdhoward5/hackathon-kstate-2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/jdhoward5/hackathon-kstate-2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["HackKsu2016", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/lbreck93/HackKsu2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/lbreck93/HackKsu2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["When Alexa met Willie", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>At K-State Hackathon, 2016 we are using Amazon Echo to send text message to a number which as per our knowledge has not yet been done by any one.</p>\n<h2>What it does</h2>\n<ol>\n<li>Send text message to a phone number. [Done]</li>\n<li>Talk to Willie, the Wildcat and know more about K-State and Hack-K-State.</li>\n</ol>\n<h2>How we built it</h2>\n<ol>\n<li>We used Alexa Skill Kit to send request to our web service end-point running on an Amazon Lambda which in turn invokes the Twilio API to send text message to a phone number.</li>\n</ol>\n<h2>Challenges we ran into</h2>\n<ul>\n<li>Thinking and designing a voice-interface which is very new for us (though not good enough)</li>\n<li>Importing and using twillio REST API for python in Amazon Lambda</li>\n<li>Creating and uploading a zip with all the code to Lambda every time we make a change</li>\n</ul>\n<h2>Accomplishments that we're proud of</h2>\n<p>Alexa can now send text, cool right!\nAlso, Alexa can talk to Willie and give you some details about K-Sate.</p>\n<h2>What we learned</h2>\n<ol>\n<li>Alexa Skill Kit</li>\n<li>Twilio API</li>\n<li>Amazon Lambda</li>\n</ol>\n<h2>What's next for Alexa, you know you can X</h2>\n<p>Integrate with users address book so we do not have to yell the numbers.\nAllow the application to use individual registered twilio account.\nSending text was just the starting, make Alexa do more stuff.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag\">api</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-alexa\">amazon-alexa</a></span></li><li><span class=\"cp-tag\">amazon-lambda</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/chandanchowdhury/alexa-twilio\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/chandanchowdhury/alexa-twilio\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]]]