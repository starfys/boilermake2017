[["MarketMesh", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We often find ourselves wanting wifi but there is no accessible networks in many different places. With MarketMesh, it is easy to buy internet access via LTE from others in the local area. We even allow for other items to be sold.</p>\n<h2>How it works</h2>\n<p>Using Apple's multipeer connectivity framework, the users phone connects to other phones in the local area to allow internet-less data communication. On this network, users can sell and buy items using the MarketMesh app and can sell their celleur internet to other people.</p>\n<p>Items are bought and sold using preloaded currency, which is stored on a backend server.</p>\n<h2>Challenges we ran into</h2>\n<p>Some of the challenges we ran into included:</p>\n<ul>\n<li>Our Node.js server crashing randomly. The problem turned out to be caused by the SQL server disconnecting</li>\n<li>Everything with getting Apple's multipeer connectivity framework to work</li>\n<li>Build environment for iOS was slightly buggy as it was a new XCode beta and uses the Swift 2 compiler (which is still in beta as well)</li>\n</ul>\n<h2>Accomplishments that we are proud of</h2>\n<ul>\n<li>Learning how to code a proper backend</li>\n<li>Being able to use a new and innovative feature (Mesh networking on iOS) to make something cool!</li>\n</ul>\n<h2>What we learned</h2>\n<ul>\n<li>How to develop a simple backend in Node.js and Express js and deploy it on Heroku</li>\n<li>Simple SQL statements</li>\n<li>Drawing nice looking icons (using handwritten SVG) </li>\n<li>Working with mesh networks and how to debug them</li>\n</ul>\n<h2>What's next for MarketMesh</h2>\n<p>MarketMesh can be further developed to have proper polish and security for a mass-market release. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ios\">ios</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mysql\">mysql</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/heroku\">heroku</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag\">svg</span></li></ul>\n</div>\n</div>", ["Worked on the Node.js backend, logo design, and supporting documentation.", "Worked on the mesh networking and proxy service.", "", ""]], ["Resistora", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Resistora \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/280/956/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Resistora \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/280/957/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Resistora \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/280/958/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Resistora \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/280/959/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Resistora \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/280/960/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Resistora \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/280/961/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Resistora \u2013 screenshot 7\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/280/962/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Resistora \u2013 screenshot 8\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/280/963/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Resistora \u2013 screenshot 9\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/281/051/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Resistora \u2013 screenshot 10\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/281/053/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>For Sean and Neerajen's final project for their AP Physics C course, they had to build a digital seismograph. This project involved many Integrated Circuit chips, PCBs, and resistors. </p>\n<p>Lots of resistors.</p>\n<p>There were so many resistors in so many different values such that the progress on the seismoeter grinded to a halt. They had to consult a table every time to solder a resistor in. And they didn't finish the seismograph.</p>\n<p>But with an app that could tell them the value of the resistor, they would have been able to finish their project. So to prevent any future encounters with resistors, we as a team decided to make Resistora: the image recognition resistance finder.</p>\n<h2>How it works</h2>\n<p>The app's UI is quite simple. Open resistora, and align resistor with the two lines in the center of the app screen. Our manually overrided camera control algorithm will zoom in and take a picture for image processing and calculation, which will then be displayed at the bottom. </p>\n<h2>Challenges I ran into</h2>\n<p>Working with RGB and hue was very difficult. It is difficult for a computer to differentiate between colors such as Red, Orange, Brown, and Gold. As such, we tried multiple methods to identify the location of the colored bands on each resistor - such as Floodfill, normalizations, and transformations. Ultimately, we were able to find a way to identify the colors and its location using a graphing technique, and local maxima.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We used our knowledge from AP Physics to find an efficient solution to image processing. Firstly, each column was averaged. Then, the lightness and saturation were calculated from the image. One interesting thing we noted is that at each band on the resistor, the saturation value would spike. This would mean that all we would have to do is find the local maximas and then find the rgb values at those locations. However, this would occasionally produce false positives which were eliminated by using the lightness data. Whevener the lightness dropped, creating a local minima, this would indicate a band. This actually worked!</p>\n<h2>What I learned</h2>\n<h2>What's next for Resistora</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag\">mathematica</span></li><li><span class=\"cp-tag\">camera</span></li><li><span class=\"cp-tag\">resistors</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/iburinoc/resistora\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/iburinoc/resistora\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Determining the color of bands - code written entirely from scratch. Algorithm involves transformation to HSL from RGB, normalization of Saturation, then casework and parameter testing.", "Image recognition and backend", "Concept, Android UI and Camera API setup, helped with band recognition", "Designed and implemented the band location algorithm, helped with Android UI, and  colour identification"]], ["Sigma", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Sigma \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/281/034/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Sigma is built around the notion of internet privacy, specifically regarding messaging systems. A typical messaging system requires that messages be saved on a remote server; however, with recent developments regarding the NSA, it is clear why one might not want to leave a digital trail when using the internet. </p>\n<h2>How it works</h2>\n<p>Sigma uses a peer-to-peer (P2P) system to deliver chat messages, making sure the only location messages are saved is your computer. First, the client connects to a bootstrap server, which facilitates the distribution of client IPs to each other. From that point onward, clients only communicate with each other. The protocol is designed in such a way that even if the bootstrap server is compromised, the worst possible outcome is that user lookup will not work. Never will your messages be sent to someone who you didn't intent on receiving it.</p>\n<h2>Challenges we ran into</h2>\n<p>Learning JavaFX to implement the GUI was troublesome, but it was nothing compared to getting the initial Peer2Peer connection established and messages delivered.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are really proud of the fact that we got the Peer2Peer messaging to work, especially given our time constraints and pivoting that happened during the hackathon itself.</p>\n<h2>What we learned</h2>\n<p>We learned how to work as a team to engineer a solution, resolve issues through compromise, and use java to create a prototype P2P chat system. We had to learn JavaFX and advanced networking in Java.</p>\n<h2>What's next for Sigma</h2>\n<p>Code refactoring, code optimization and redundancies. The app can have more features added to it, both on the GUI and server side.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/eclipse\">eclipse</a></span></li><li><span class=\"cp-tag\">udp</span></li></ul>\n</div>\n</div>", ["I worked on the front-end client interface, making the experience as user-friendly as possible through menus and forms. I learned JavaFX in order to implement a modern GUI for Sigma.", "", "", ""]], ["KidKeeper", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"KidKeeper \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/280/974/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>After numerous news reports of helpless kids stuck in sweltering cars, we decided to put an end to accidental child deaths, as well as add additional services which provide the parent/guardian with an affirmative understanding of their child's environment</p>\n<h2>How it works</h2>\n<p>Numerous sensors connected with a central Intel Edison communicate the ambient surrounding of the child to the the parent's iPhone, allowing them to receive an update, whenever the software feels it is an unsafe environment for the toddler.</p>\n<h2>Challenges I ran into</h2>\n<p>Computer equipment not co-operating, massive code issues, sensors not reading data quick enough</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Able to develop in a completely new language, make new friends, work with people that share the same interests that I do.</p>\n<h2>What I learned</h2>\n<p>Slow and steady wins the race. There is no need to rush, as it will only cause you to stumble and make mistakes in the code.</p>\n<h2>What's next for KidKeeper</h2>\n<p>Kickstarter campaign to conceive a startup company.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ruby\">ruby</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/objective-c\">objective-c</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/coffeescript\">coffeescript</a></span></li><li><span class=\"cp-tag\">intel</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/intel-edison\">intel-edison</a></span></li><li><span class=\"cp-tag\">grove</span></li><li><span class=\"cp-tag\">seeedstudio</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ios\">ios</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/web\">web</a></span></li><li><span class=\"cp-tag\">development</span></li><li><span class=\"cp-tag\">server</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/rwu1997/kidkeeper\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/rwu1997/kidkeeper\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on full Intel Edison and sensors (including Grove) programming in Arduino-C using various thresholds and algorithms. Further, I worked on all sensor wiring and electronics. Also, worked with partial Intel Edison cloud / server posting.", "Worked on full backend (RoR) and partial frontend of webserver. Enabled wifi communication from edison to local rails server.", "Worked on development of the website, and implementation of sensors on the development board. Assisted in implementing the data communication from the sensors to the website.", ""]], ["Boing ", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Muses, Flappy bird </p>\n<h2>How it works</h2>\n<p>It uses muscle movement and brain wave analysis to detect blinking which triggers jumping in a simple interactive game.</p>\n<h2>Challenges we ran into</h2>\n<p>Getting the muse to work, successfully getting it to detect blinks and not sense a double blink\nCoding in an unfamiliar language (Java) - on Processing</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Overcoming hardware difficulties</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/muse\">muse</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/processing\">processing</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n</div>", ["Worked with the Muse API on Processing and Java. It was my first time coding in Java. Tested and debugged our project.", "", "", ""]], ["Halfway", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Halfway \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/281/030/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Halfway \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/281/031/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Halfway \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/281/032/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Halfway \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/281/036/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Halfway \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/281/058/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Our inspiration comes from trying to organize a meeting between some friends, many of us whom were spread out across Toronto. We wanted a quick and easy way to find a meeting place which was a viable distance from everyone that we could meet at. From that simple problem stemmed the idea that eventually grew into HalfWay.</p>\n<h2>How it works</h2>\n<p>Halfway is a friend-group organization app designed to determine an optimal meeting location based on the locations and preferences of multiple people. Halfway takes in the locations of multiple users who want to meet up. It then takes in the type of venue that they want to meet up at whether that be a restaurant, cafe, movie-theater or another location.  From there it recommends venues in the selected category which minimizes distance traveled for all the participants.</p>\n<h2>Challenges we ran into</h2>\n<p>A lot of the APIs proved more difficult for our team to use then expected, Google's and Facebook's APIs in particular.\nOn the suggestion of one of the mentor's, we eventually chose to use parse rather than Facebook's API a decision which helped a lot.</p>\n<h2>What's next for Halfway</h2>\n<p>We want to touch up the app a lot and add some additional features in the future. HalfWay, while in working order, still has ways to go!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/parse\">parse</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-maps\">google-maps</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/therring610/Halfway\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/therring610/Halfway\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I created the Android front end of the app and the back end for the maps and location services.", "", ""]], ["Music by Mood", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Music by Mood \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/281/027/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>Creating the perfect playlist is difficult and time consuming. Furthermore, listening to a song that is perfect for your current mood and activities is rare. Ex. Listening to death metal while trying to fall asleep. Music by Mood helps you by categorizing your music into separate folders based on many of the music's attributes, such as tempo and loudness. The app uploads songs that you own to the echo-nest api and, after filtering the songs by numerous attributes, it returns a folder where the music is located, containing all of the sorted music. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">kivy</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/echo-nest\">echo-nest</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Will-Lo/Tech-Retreat-Demo\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Will-Lo/Tech-Retreat-Demo\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Healthy Eating", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Healthy Eating \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/280/948/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Healthy Eating \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/281/022/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>How it works</h2>\n<p>The App prompts the user to select what types of food they would like to eat, how healthy the user wants to be, and the maximum distance away the user is willing to travel for food.  The app then uses this info and checks our online database and displays all restaurants that are within the specified radius of the user that matches the user's  tastes.</p>\n<h2>Challenges I ran into</h2>\n<p>Getting the user's current location was one of the more difficult challenges that our group faced due to bad GPS connection.  Another major challenge we faced was setting up the database and webserver.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-maps\">google-maps</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["EaseOfAccessKeyboard", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to help out the visually impaired type - as typing is the prominent way to communicate through technology.</p>\n<h2>How it works</h2>\n<p>We made an Applet that displays JButtons with custom ImageIcons, and when pressed - the keyboard will say the letter that is pressed. This way the user can experiment and type with the applet open and learn the  location of all the keys on the keyboard.</p>\n<h2>Challenges I ran into</h2>\n<p>We ran into a problem in embedding the Applet into the actual webpage because the class file could not be directed to.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>That we could help the blind learn how to type on a keyboard.</p>\n<h2>What I learned</h2>\n<p>How to implement sounds inside applets and embed Applets into HTML code.</p>\n<h2>What's next for EaseOfAccessKeyboard</h2>\n<p>We can potentially run this alongside, say Microsoft Word, so the keyboard would say whatever the user is typing in ANY application.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag\">applet</span></li></ul>\n</div>\n</div>", ["", "", ""]], ["MyoRPG", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"MyoRPG \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/280/992/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"MyoRPG \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/280/994/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>MyoRPG</h2>\n<h3>Authors: Peter Stakoun, Kevin Shen, Stephen Zhao, Marcel O'Neil</h3>\n<h3>MyoRPG is an integration of the Myo with an elementary, web-based RPG game.</h3>\n<p><a href=\"http://myo-rpg.herokuapp.com/\" rel=\"nofollow\">http://myo-rpg.herokuapp.com/</a></p>\n<p>The inspiration for MyoRPG came when Peter became frustrated about the lack of ideas going around the table at the start of the hackathon. He proceeded to threaten to slap someone in his frustration. We compromised and agreed to make a game so Peter can slap people virtually. We figured we needed arm movement to map the arm actions to the game, which was a web app. In this game, called MyoRPG, you will be a \"character\" and kill enemies by executing actions with Myo (atleast that's how it's supposed to work in theory).</p>\n<p>Our game is hosted on Heroku and we used the Myo.js library instead of using the native Myo SDK. We coordinated efforts using Github, a version control software that allowed collaboration between multiple developers.\nMyo.js proved challenging as we had to manually sweep search pages of documentation to find help. Eventually by lunch we had mapped all the action including fist, spread, right wave and left wave onto the web app. </p>\n<p>After lunch, we began designing the game logic and graphics which in all honestly was so much easier than configuring Myo. The game proved just as amusing to play as watching Peter rage after attempting to sync the Myo.</p>\n<p>We admit that the game could be optimized further as the Myo is still crude in detecting actions (it will sometimes mistaken a spread as a fist). However, give our time constraint, we've made remarkable progress at developing the game.</p>\n<p>We are definitely impressed at our results and we believe that this game is perfect to relieve stress and to provide some quick entertainment, especially after hacking for hours upon hours without rest.  </p>\n<h3>Contribution by group members:</h3>\n<ol>\n<li><p>Kevin Shen: Created and managed Github repository and Heroku deployment. Coordinated project efforts.</p></li>\n<li><p>Peter Stakoun: Developed the backend and various Javascript components that facilitates the deployment of the Node.js server.</p></li>\n<li><p>Marcel O'Neil: Primary frontend developer who created web HTML and CSS structure to contribute to the game's appearance and user interface.</p></li>\n<li><p>Stephen Zhao: UI/UX desginer who is responsible for user interface design and user experience with the Myo.</p></li>\n</ol>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/myo\">myo</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag\">require.js</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag\">myo.js</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/heroku\">heroku</a></span></li><li><span class=\"cp-tag\">myoconnect</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/kshen3778/myo-rpg\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/kshen3778/myo-rpg\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Created and managed Github repository and Heroku deployment. Coordinated project efforts.", "Developed server-side and some of the client-side using javascript.Used myo.js to incorporate communication between the web app and the Myo.", "I cleaned up our landing pages CSS, configured and tested the myo, and cleaned up the page's HTML", "Worked on client-side javascript, DOM manipulation, storyline, art, and tested Myo functionality."]], ["WhipFinder", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"WhipFinder \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/281/007/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We thought of this when Jon's mom mentioned we should pay for gas in the car</p>\n<h2>How it works</h2>\n<p>The data is stored in a SQL Server table. Entity Framework is used to manage the data. Breeze pulls data from the controller and provides a client-side interface for Entity Framework. Durandal provides navigation between pages. Knockout provides data-binding between html and javascript. Bootstrap provides styling. Google-directions API provides the statistics and directions for the car-pooling trip.</p>\n<h2>Challenges I ran into</h2>\n<p>Nuget dependencies were breaking the Hot Towel package and specific versions had to be manually installed. Windows 8 updated and provided a 30 minute delay. Sql server took about 45 minutes to install and set up, during which Visual Studio wasn't working.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Getting everything set up and working together in time.</p>\n<h2>What I learned</h2>\n<p>Install SQL Server beforehand to prevent large delays.</p>\n<h2>What's next for WhipFinder</h2>\n<p>Support multiple riders, show all matched carpools for a specific user, authenticate based on email password combo, support over internet</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sql\">sql</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/knockout-js\">knockout.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/breeze\">breeze</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/entity-framework\">entity-framework</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-directions\">google-directions</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-maps\">google-maps</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/jr5000/WhipFinder\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/jr5000/WhipFinder\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["H.A.T.T.", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"H.A.T.T. \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/281/010/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Hacking is often not accurately portrayed in media, and especially in video games. The creators of hacking scenes often glaze over what actually happens in favour of speed and glam. But hacking is more than this and we hope that with H.A.T.T. we can better represent hacking in video games.</p>\n<h1>What is H.A.T.T.?</h1>\n<p>H.A.T.T. (Hack All The Things) is designed to be a proof-of-concept for a video game mechanism in which the user can realistically 'hack' into computers and files as part of a mission, be it as part of a virtual criminal organization or on the side of the good guys. </p>\n<h2>How it works</h2>\n<p>H.A.T.T. emulates a terminal, in which the user can create and edit 'files' and explore the different directories - just as if they are using an actual command line. Using Java, we embedded Lua so that the user can write and execute scripts in Lua using the user interface, which looks just like a normal command terminal. We also made many standard Linux commands available for the user to use, which we wrote in Java to complement H.A.T.T.'s virtual file system. We restricted the use of Lua libraries and commands so that H.A.T.T. remains isolated from a real computer's files. H.A.T.T. is not created to teach users how to hack; rather it provides a fun and easy way for players to interact with computers in a realistic manner.</p>\n<h2>What's next for H.A.T.T.</h2>\n<p>Hacking can be easily incorporated in many video game plots; whether it be something as small as manipulating a security system so that the rest of your team can enter a building unnoticed, or as focused as completing missions for an anonymous hacking organization, computers are an integral part of the player's experience and H.A.T.T. can enhance that. We see H.A.T.T. being implemented into a game, where a user can first learn the basics of our virtual command line and then complete missions as part of a larger goal.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag\">luajava</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/lua\">lua</a></span></li></ul>\n</div>\n</div>", ["-Developed primary framework \n-Integrated core dependency \n-Developed front-end application \n-Developed back-end virtual file system and command structure ", "", "", ""]], ["Motion Based Secure Entry", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Motion Based Secure Entry \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/280/967/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We were interested in the Myo and its potential in making many parts of everyday life easier. One of the highly important issues of today is the idea behind digital security. Weak passwords make it easier for hackers to compromise. Long passwords are difficult to remember. Our project is the solution as gestures make it easy to remember and maintains security in a local environment. When you're near your computer, you can access your accounts with gestures while maintaining overall security. </p>\n<h2>How it works</h2>\n<p>User inputs a series of gestures and the program connects this character string with the plaintext password. By inputting the gestures, the password would be released from the program and be used to login to a gmail account and send an email. </p>\n<h2>Challenges I ran into</h2>\n<p>Nobody on the team had used python or the Myo before. It was a learning experience for everyone.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We actually made something that works in the short amount of time that we were given. </p>\n<h2>What I learned</h2>\n<p>The Myo SDK does not allow a great deal of flexibility in terms of development. </p>\n<h2>What's next for Motion Based Secure Entry</h2>\n<p>A GUI, increased security, use in all apps, not just gmail. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/myo\">myo</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/ehliang/myo-unlock\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ehliang/myo-unlock\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Pomert", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Pomert \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/281/012/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Pomert \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/281/013/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>People get burned out when working on things too long, so we want to help that.</p>\n<h2>How it works</h2>\n<p>Pomert helps you take breaks efficiently, without needing another powerful distraction like a smartphone next to you to do it. With the low powered smartwatch pebble, we are able to give users an easy way to utilize proven productivity methods like the pomodoro method to work more efficiently without burning out.</p>\n<h2>Challenges I ran into</h2>\n<p>1: The app does not work.\n2: The functionalities that are key to this do not work with javascript, and only with advanced C.\n3: We do not know C.</p>\n<ol>\n<li>We cannot learn enough C to make this work.</li>\n</ol>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Although we were limited by both time and software, we pushed every other functionality that we wanted into the mvp.</p>\n<h2>What I learned</h2>\n<p>Pebblejs is an awful, terribly documented framework that should be avoided at all costs in the future. (Unless it's for analytics.)</p>\n<h2>What's next for Pomert</h2>\n<p>-Remaking it in C(i.e. Making it work.)\n-Adding user specific work-rest schedules through algorithms.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/pebble\">pebble</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/AroundTheLines/Pomert\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/AroundTheLines/Pomert\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Discoveo", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We love exploring and discovering new areas, but we often find ourselves wasting time in search of cool places on Google Maps, Yelp, etc. We wanted to build an app that would help us find cool new places in our area without losing focus on the expression aspect of it all.</p>\n<h2>How it works</h2>\n<p>A user opens the app and sees a Google Maps view with markers on cool places nearby. These places have been marked and reviewed by fellow users of the app. By clicking either the marker or the location item within the recycler view at the bottom, the user will be taken to an activity where they will be provided with additional information on the cool location. Here they will find the location, its image, its rating, a description and reviews by fellow users. They can also add their own reviews to the location in order to (theoretically) improve the accuracy of the rating. </p>\n<h2>Challenges I ran into</h2>\n<p>Floating action button to stay at the same position for multiple screens. </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Completing a functional app in the matter of a few hours.</p>\n<h2>What I learned</h2>\n<p>Waterloo is great.</p>\n<h2>What's next for Discoveo</h2>\n<p>Promotion of the app to build a user-base. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xml\">xml</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-maps\">google-maps</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-play\">google-play</a></span></li><li><span class=\"cp-tag\">parallax-scroll</span></li><li><span class=\"cp-tag\">recyclerview</span></li><li><span class=\"cp-tag\">circleimageview</span></li><li><span class=\"cp-tag\">picasso</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/parse\">parse</a></span></li></ul>\n</div>\n</div>", ["Worked on everything.", "Full stack, integrated Google Maps API", "", ""]], ["Lectorial", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Lectorial \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/280/968/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Lectorial \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/280/969/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Lectorial \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/280/970/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration:</h2>\n<p>As future Waterloo students, we envisioned an app that connected students in the same course together. This app should make Waterloo life as a student easier with constant communication with your peers. </p>\n<h2>How it works:</h2>\n<p>Log in with your WatIAm credentials (not finished). Select, or search for, your course subject and course catalog. Discuss with other peers in the same courses about course content, exams, etc.</p>\n<h2>Challenges I ran into:</h2>\n<p>RESTful API, MySQL Database integration with Android, Gradle</p>\n<h2>Accomplishments that I'm proud of:</h2>\n<p>Implementing the UWaterloo API to retrieve all subjects, and all course catalogs for each subject.</p>\n<h2>What I learned:</h2>\n<p>Never trust Gradle, Android is far different from traditional Java programming</p>\n<h2>What's next for Lectorial:</h2>\n<p>Improvements to user experience</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xml\">xml</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag\">uwaterloo-api</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://www.github.com/HCastano/Lectorial\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.github.com/HCastano/Lectorial\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked with the UWaterloo API to retrieve subject and course catalog data. I used PHP and a MySQL database to create the discussions feature. I also implemented the search functionality.", ""]], ["Stay Up", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Stay Up \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/280/977/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Every year, there are a countless number of seniors who are injured or worse because no one sends them help in the event of a fall. We know of seniors who lived alone, suffered from heart attacks, and could've been saved if they were immediately sent help. We want to make sure that these tragedies don't occur again in the future with the app that we created.</p>\n<h2>How it works</h2>\n<p>We used Android Studio to create this app and combine both the front-end and back-end code. The fall detector uses the phone's built in accelerometer to detect when the acceleration increases and comes to an immediate stop (what happens during a fall). Then, using the Google Maps API and the phone's GPS, we extracted the user's current location and sent a link of their current location to their emergency contacts via SMS. Their contacts will then be aware that the user of the app needs help.</p>\n<h2>Challenges I ran into</h2>\n<p>We had many challenges including the current location function. Initially, we wanted to solely use the GPS but it didn't work. We then switched it so that it used the Google Maps API instead. We also had some problems with putting the app together in terms of back-end and front-end.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We are proud of being able to incorporate the phone's native Contacts and SMS functions into our app instead of using external APIs. This results in a more efficient app.</p>\n<h2>What I learned</h2>\n<p>We learned to always save a working copy of the app before we proceed and add additional functions to it.</p>\n<h2>What's next for Stay Up</h2>\n<p>We wanted to add a notification on the lock screen for the user so that even if the phone's screen is off, the phone would be waked and notified about a fall. To do this, a service would have to be created.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-maps\">google-maps</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/photoshop\">photoshop</a></span></li></ul>\n</div>\n</div>", ["Current location function using Google Maps API, sending an SMS with a link to Google Maps", "UI, sound, design, motivation, presentation, ", "Back end work and algorithms such as the detection of a fall and combining all components for the app. ", ""]], ["Museic", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Museic \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/280/965/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Museic \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/281/037/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Museic \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/281/038/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Museic \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/281/039/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Museic \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/281/048/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>Picture this. You\u2019re jamming out to your favourite song, its hitting all the right notes in all the right places, but as with all things, it comes to an end. The next song then goes on to be totally different, and then kills the mood. We\u2019d like to change that with the muse. Our app is called: Muse-ic.</p>\n<p>Museic is an app that allows you to store your brainwave data as you listen to songs you enjoy, give them a rating and a tag for how they made you feel, and then use that data to suggest songs that others have had a similar brainwave experience with.</p>\n<p>All of this is made possible with an API muse provides called libmuse. By using the data sent from the muse, we can measure your musical experience through 5 different brainwaves:\nAlpha Waves, Beta Waves, Gamma Waves, Delta Waves and Theta Waves. Briefly describing each of these waves, alpha waves measure how relaxed/calm you are, delta waves measure how sleepy you are, beta waves measure how much you are actively thinking or problem solving, theta waves measure very deep relaxation/visualization, and gamma waves measure high mental activity and consolidation of information. When you listen to music, these waves will change accordingly with how you experience the music.</p>\n<p>Let\u2019s take you through the flow of the program. In our demo, you\u2019d start off at the main screen with a Record Data button and a Suggest Song button. Before you start getting suggestions, we must store some brain data in the program. You\u2019ll press Record Data, then you\u2019ll pick a song from a song database and then press record. When the song ends or from when you press stop, you\u2019ll be directed to a page where you tell us how the song made you feel, and your rating of the song, and then you can save/delete it. </p>\n<p>When you press suggest a song, our app can approach this from different perspectives. Muse\u2019s libraries allow us to get the data for each of those different kinds of waves as a value of its amplitude relatively or absolutely, and we can use the average values of these songs to match you with other songs that have similar averages. Another approach is to match the actual pattern of the song, such as the amount of bumps in the brainwaves during the song and matching those attributes, or we could even find similar curves in other songs. In our app, after you press suggest a song, you can select a tag for the feeling you want from the song (this is also data that is averaged, which is stored in the user storing stage). Then muse will use the mentioned algorithms to suggest songs for you!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xml\">xml</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/muse\">muse</a></span></li><li><span class=\"cp-tag\">invision</span></li><li><span class=\"cp-tag\">paint</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/pixlr\">pixlr</a></span></li><li><span class=\"cp-tag\">paint-tool-sai</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/photoshop\">photoshop</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-docs\">google-docs</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/gmail\">gmail</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/github\">github</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/git\">git</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/usei/Museic2\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/usei/Museic2\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I structured the flow of the program and developed the idea. I drew the initial sketch-ups, created the pitch and helped the team understand the code.", "", "", ""]], ["Solar System Explorer", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We're two high school students heading into Grade 12. For the last three years of high school, science teachers have continually promised an elusive \"astronomy unit\"; a unit that never came to be due to \"time constraints\". Our project makes it quick and painless for teachers to at least introduce the astronomy unit in a fun and unique way - after all, the astronomy unit is always scheduled as the last unit before the end of a semester, so it has to leave a good impression on returning students!</p>\n<h2>How it works</h2>\n<p>The simulator can be loaded in any WebGL-enabled browser, instantly allowing access to the entire application. If an Oculus Rift (or Google Cardboard) head-mounted display is detected, rendering switches (via WebVR) to the secondary display, instantly unlocking an immersive 3D world that is both scientifically accurate as well as aesthetically pleasing.</p>\n<p>The simulator accurately takes into account:</p>\n<ul>\n<li>orbits (of moons as well as planets)\n** includes orbit eccentricity; rotation period; tidal locking</li>\n<li>inclination</li>\n<li>elevation data for normal mapping - enhances detail without increasing polygon count</li>\n<li>global maps of planets (composed from USGS data, NASA data, and more)</li>\n<li>...and other more gritty details</li>\n</ul>\n<p>Thanks to a more advanced rendering system than just projecting a map onto a sphere, the simulator renders with high quality even on older computers whose graphics cards can't handle more than blurry 2048x2048 textures (and most school computers fit this classification) while maintaining a high framerate.</p>\n<h2>Challenges we ran into</h2>\n<p>Having recently updated one of our laptops to Windows 10, we were surprised to learn that the Oculus Rift does not work on Windows 10 devices. At the same time, the second Windows 8.1 laptop had a faulty network card that prevented us from using WiFi. Getting this awkward setup to work was a hack in and of itself, involving a couple external storage devices and a <strong>lot</strong> of Git. On top of this, we ran into a well-documented Oculus Rift bug that disabled the device's motion tracker - we wasted a lot of debugging time working around it.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>The Oculus Rift rendering works (seriously, drawing a simple textured sphere took at least half of the development time due to Oculus bugs and whatnot)! The planet rendering is also really cool. All the data collected online for global surface maps is in simple a 2:1 equirectangular (cylindrical) projection. There are two problems with mapping this data directly onto a sphere. First off, you get lots of distortion at the poles:</p>\n<p><img alt=\"\" data-canonical-url=\"https://sc-cdn.scaleengine.net/i/552ba1671cb3f2830a2b6f70f28047cf1.png\" src=\"https://res.cloudinary.com/devpost/image/fetch/s--xHTdMqXf--/https://sc-cdn.scaleengine.net/i/552ba1671cb3f2830a2b6f70f28047cf1.png\"/></p>\n<p>Secondly, if you want decent quality, you'd need an 8k resolution or higher map - hardly accessible for all those poor school computers with dated graphics cards.</p>\n<p>Our solution was to split each equirectangular map into 6 cube faces of a much smaller size (baking them in Blender), and load them as a cubemap (i.e. skybox) into OpenGL. This accomplishes two things. Firstly, since Blender performs the baking on a per-pixel basis, there is no distortion at the poles. But more importantly, the smaller cube face textures are easily usable by ancient hardware while maintaining a (nearly) equivalent amount of detail.</p>\n<h2>What we learned</h2>\n<p>Setting up an Oculus Rift is hard. It also makes you nauseous until you adjust the interpupillary distance to fit your eyes. But at the same time, its also very easy to develop for and provides and alternative, more immersive means of interacting with data.</p>\n<h2>What's next for Solar System Explorer</h2>\n<p>Ideally, we would like to have dedicated more time into the actual look and feel of the simulator. A user's experience would be enhanced greatly by atmospheric scattering, better closeups via parallax mapping, styling with a bloom filter and other eye-candy. At its base lies accurate computations, but its look could do with a bit more work.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/webgl\">webgl</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/three-js\">three.js</a></span></li><li><span class=\"cp-tag\">webvr</span></li><li><span class=\"cp-tag\">opengl-es</span></li><li><span class=\"cp-tag\">usgs</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/IvyBits/techretreat-2015\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/IvyBits/techretreat-2015\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Findr", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Findr \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/280/916/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Findr \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/280/990/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Findr \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/280/991/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Findr \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/280/998/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Findr \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/281/033/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We could not find a an application which let us find university clubs or events, their locations and requirements. In the play store there was an application that let you find courses that you could drop-in on, this application was named UW Drop-In, this is where we got some of our ideas. Although we started with the idea of making a specific application to tackle this problem in the University of Waterloo we decided to generalize our application and make it so that anyone could add events and anyone could find them. </p>\n<h2>How it works</h2>\n<p>Organizers of events ,like clubs or parties, can add event details to our server which then can be accessed by anyone by finding the event on the map in our application. They can find event information such as room number, coordinates (latitude and longitude), requirements, times, etc.</p>\n<h2>Challenges we ran into</h2>\n<ul>\n<li>Implementing the OpenStreetMap library correctly into our application and having a visible map was a huge challenge</li>\n<li>Making a server taught us many things along the way and we encountered errors that were hard to find but easy to solve</li>\n<li>Github breaking our code due to people trying to merge programs and having conflicting code</li>\n<li><p>Debugging our application was very frustrating at times </p>\n<h2>Accomplishments that we're proud of</h2></li>\n<li><p>Getting a map to work in our application</p></li>\n<li><p>Making a server</p></li>\n<li><p>Using Github to collaborate effectively on the project</p></li>\n</ul>\n<h2>What I learned</h2>\n<ul>\n<li>Along the way we learnt many tricks and some concepts in Java, Javascript and XML</li>\n<li>How to make a server using Heroku and Javascript</li>\n<li>How to integrate OpenStreetMaps into an Android application</li>\n<li>How to integrate our server into our Android application</li>\n<li>How to use GitHub</li>\n</ul>\n<h2>What's next for Findr</h2>\n<ul>\n<li>Adding more options in creating an event</li>\n<li>Adding the option to have limited spaces at an event</li>\n<li>Adding the option to add tickets to an event</li>\n<li>Adding the ability to search events (using a search engine)</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/heroku\">heroku</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/openstreetmap\">openstreetmap</a></span></li><li><span class=\"cp-tag\">dom4j-1.6.1</span></li><li><span class=\"cp-tag\">osmdroid-android-4.3</span></li><li><span class=\"cp-tag\">support-v4-22.2.1</span></li><li><span class=\"cp-tag\">jaxen-1.1.4</span></li><li><span class=\"cp-tag\">javalite-common-1.4.11</span></li><li><span class=\"cp-tag\">support-annotations-22.2.1</span></li><li><span class=\"cp-tag\">slf4j-android-1.7.12</span></li><li><span class=\"cp-tag\">slf4j-api-1.7.12</span></li><li><span class=\"cp-tag\">appcompat-v7-22.2.1</span></li><li><span class=\"cp-tag\">osmdroid</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xml\">xml</a></span></li><li><span class=\"cp-tag\">iml</span></li><li><span class=\"cp-tag\">jar</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/gradle\">gradle</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/github\">github</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/TotalVerb/Findr\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/TotalVerb/Findr\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/ian-fox/FindrServer\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ian-fox/FindrServer\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Initially, I worked on brainstorming ideas. After we had chosen an idea, I worked mostly on the frontend/interface. I also worked on implementing OpenStreetMap into our application along with a lot of debugging. ", "I worked on the server for the back-end, as well as the front-end view for creating new events", "I worked on integrating OpenStreetMap with our android app and also on general integration of server and app."]], ["Pipio", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Pipio \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/280/939/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Pipio \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/280/940/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Pipio \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/280/942/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Pipio \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/280/943/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Pipio \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/280/944/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>I have always been fascinated by Machine Learning, and I wanted to create a project that would allow me to utilize this area of research. Along with this, I noticed the growth of Salesforce, the world's largest CRM tools and wanted to see if I could make something that would empower businesses to keep track of customers (or potential customers), similar to what Salesforce does. Today, Twitter is becoming a large part of the way businesses interact with customers and I felt the space for a tool that integrates Twitter and CRM has not been adequately filled.</p>\n<h2>How it works</h2>\n<p>Users can start obtaining data for a marketing campaign by entering a hashtag. This hashtag is then sent as a GET request to the Twitter Search API. Before I send the GET request, I filter the possible results by removing retweets and ensuring the most popular (100) results are shown. Once the tweets have been retrieved, the text of the tweets are sent as a POST request to sentiment.vivekn.com/api/text, which returns a sentiment and confidence score. If the confidence score is below 70, I ignore the result returned by the endpoint. Data is then stored locally and presented in an easy to read format. A key feature is the fact that users can add \"Engagements\", that is to say, target specific users and interact with them. The UI was created with UIKit and Masonry (a wrapper for programmatic AutoLayout).</p>\n<h2>Challenges I ran into</h2>\n<p>One challenge that I ran into was that data was loading very slowly. Twitter's API returned results quickly, but the same could not be said for the sentiment endpoint. Due to the architecture of my app at the time, the Twitter API would stop getting called as the sentiment API was running. Looking into how to optimize my network calls, I learned about multi-threading. I ran the sentiment API calls on a background thread, enabling the important data to load quickly and ensuring that the user could still interact with the UI.</p>\n<p>Unfortunately, running calls on the background thread, made it hard to know when to update the main thread. To solve this challenge I attempted to use NSNotificationCenter, which ended up solving the issue. I am still working on fully understanding how this solution worked, and I am confident I will be able to do so.</p>\n<p>Another challenge I ran into was deciding how to store the data of the app, as lots of data was coming in and going out. To approach this challenge, I decided to use a singleton, that could be read and written to from anywhere in the app. This challenge was overcome during the hackathon, but as I move on further with this project, I will look into using Core Data to handle the data.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I am proud that I was able to create a functional prototype of a powerful tool in under 7 hours. Furthermore, this was my first hackathon, and I am glad to enter the world of hacking!</p>\n<h2>What I learned</h2>\n<p>Through this project I learned about multi-threading and its use case. It's impact was understood when I was optimizing my application. Along with this, I learned about \"blocks\", a language feature of Objective-C.</p>\n<p>I also learned more about HTTP requests with Objective-C and found a powerful wrapper (UNIRest) that I intend to use in my future iOS projects. </p>\n<h2>What's next for Pipio</h2>\n<p>The next goal for Pipio is to use a better API to analyze the sentiment behind a tweet. The current API is not very accurate, and I am interested in working with IBMs AlchemyAPI. </p>\n<p>I would also like to add more features to Pipio and store the data in a database for faster query and more structured storage of data (Core Data). Additional features would include: having a conversation with a specific tweeter, increasing the size of the data set and presenting data in charts and diagrams (with the option to save as a PDF).</p>\n<p>I am excited to continue with this project!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/objective-c\">objective-c</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/uikit\">uikit</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/iphone-sdk\">iphone-sdk</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twitter\">twitter</a></span></li><li><span class=\"cp-tag\">sentiment.vivekn.com</span></li><li><span class=\"cp-tag\">unirest</span></li><li><span class=\"cp-tag\">masonry</span></li><li><span class=\"cp-tag\">sttwitter</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/pxlcoder/Pipio\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/pxlcoder/Pipio\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Designed and developed the project."]], ["museTation", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"museTation \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/280/922/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"museTation \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/280/923/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"museTation \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/280/924/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"museTation \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/280/925/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"museTation \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/280/926/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"museTation \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/280/927/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>musetation</h1>\n<p>Musetation (mews-tay-shun) is a web application that connects with a <a href=\"http://meetmuse.com\" rel=\"nofollow\">muse</a> to bring you more efficient meditation through the science of binaural beats.</p>\n<p>Brought to you by @johnafish and @foleyfactor for the Waterloo 2015 tech retreat hackathon.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/muse\">muse</a></span></li><li><span class=\"cp-tag\">osc</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/johnafish/musetation\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/johnafish/musetation\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on frontend and javascripting as well as helping with some of the core muse architecture. I was the main proponent of the idea, but both of us had significant contributions as the idea evolved over time.", "I worked on the back end, creating the server to communicate with the muse device, and output the data into a file that could be analyzed by the javascript server."]], ["ResumApp", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"ResumApp \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/280/919/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Had no idea what to do for this Hackathon, ended up browsing the internet. Found someone wishing there was an easy way to share resumes. Here we are!</p>\n<h2>How it (should) work</h2>\n<p>*** Disclaimer: First time at a Hackathon, IDE had to be reinstalled, and this is new territory - most of the backend does not function! ***\nA user downloads the app, and then goes to the \"Create Resume!\" tab. The tab is a simple wizard which asks for the user's information - ex. name, contact details, past employments, skills, etc. Finally, the wizard asks the user to select several words which describe themselves.</p>\n<p>The wizard then generates a resume with the user's input, using the 'several words to describe themselves' as qualitative, flavour words (as well as synonyms, if the wizard did not get enough words).</p>\n<p>This resume is then saved by the device in XML format. It can be beamed to other devices using NFC (Near Field Communication), and this app, or it can be saved as a .pdf or .docx, using more synonyms of the 'flavour' words that the user entered.</p>\n<p>Finally, the user can purchase (online, and/or from us) NFC tag stickers - these can store the user's resume in quasi-XML format to be read by other devices with the ResumApp app - which can be stuck to something like a user's business card (resume is now built in)!</p>\n<h2>Challenges I ran into</h2>\n<ol>\n<li>First time at a Hackathon, had no idea what was going to happen (no idea prepared, either)</li>\n<li>IDE had to be reinstalled, twice, which took about 3 and a half hours</li>\n<li>No previous experience doing something like this, just vague knowledge about the topic</li>\n</ol>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Mostly stuff under the \"What I learned\" category.\nAlso:</p>\n<ul>\n<li>Tasks I've done before (making a website, setting up a hosting service) went very well, and was pretty easy (see <a href=\"http://www.resumapp.tk\" rel=\"nofollow\">http://www.resumapp.tk</a> )</li>\n<li>Learned a lot, including about the importance of preparation, and also the value of brainstorming</li>\n<li>Did not procrastinate, at all</li>\n<li>Idea is probably marketable</li>\n</ul>\n<h2>What I learned</h2>\n<ul>\n<li>More experience working with Cordova + Ionic to make mobile apps</li>\n<li>Using C++ and C# to create native mobile apps (strongly recommend avoiding C++ for this though)</li>\n<li>How NFC works</li>\n<li>How much fun Hackathons are</li>\n</ul>\n<h2>What's next for ResumApp</h2>\n<p>So much stuff!</p>\n<p>Intended to be part of the release today, filtering of other's resumes (so that HR people can easily find the employees they need, with the help of filtering tools).\nReviews - set up a master SQL server, have every account be able to receive public reviews, as well as offer the ability to send Reference letters directly to the company requesting them (so the user never sees them, just the senders and the recruiters).\nQR codes (they store more information, big potential benefits here).\nAnalytics for people making resumes - hot words, what kind of people/resumes are being hired, etc.</p>\n<p>The entire human resources industry could be changed!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/apache\">apache</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ionic\">ionic</a></span></li><li><span class=\"cp-tag\">crosswalk</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/nfc\">nfc</a></span></li><li><span class=\"cp-tag\">resume</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://resumapp.tk/\" rel=\"nofollow\" target=\"_blank\" title=\"http://resumapp.tk/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>resumapp.tk</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Tabb", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Tabb \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/280/901/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Every day, people are constantly running into the problem of not knowing to whom they owe money, and who owes them money. Tabb is designed to solve this fundamental problem by creating a platform where all monetary transactions and tabs are transparent.</p>\n<h2>How it works</h2>\n<p>Tabb allows users to create groups or join groups for specific projects or events. As the group spends money, the receipt information is uploaded. Tabb takes the amount of money spent by each person and provides a real time image of the current financial situation of each member of the group.</p>\n<h2>Challenges I ran into</h2>\n<p>The Tabb group has never used firebase before, and ran into some troubles getting ideas coded.</p>\n<h2>What's next for Tabb</h2>\n<ol>\n<li>OCR - Using Picture to Text technology to speed up bill splitting process. Simply take a picture of the receipt and Tabb will process the numbers!</li>\n<li>E-Payment options - Allowing tabs to be paid via Interac e-Transfers, Paypal or credit card.</li>\n<li>Filters - Allowing users to filter all debts through people, amount, or activities.</li>\n</ol>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/photoshop\">photoshop</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/adobe-illustrator\">adobe-illustrator</a></span></li></ul>\n</div>\n</div>", [""]], ["Teaching how to use DevPost", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Somethign something</p>\n<h2>How it works</h2>\n<p>Somethign something</p>\n<h2>Challenges I ran into</h2>\n<p>Somethign something</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Somethign something</p>\n<h2>What I learned</h2>\n<p>Somethign something</p>\n<h2>What's next for Teaching how to use DevPost</h2>\n<p>Somethign something</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/myo\">myo</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/intel-edison\">intel-edison</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/muse\">muse</a></span></li></ul>\n</div>\n</div>", [""]], ["Avoid the blocks", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration: the impossible game</h2>\n<h2>How it works: you run around in first person dodging blocks</h2>\n<h2>Challenges I ran into: not knowing any c</h2>\n<h2>Accomplishments that I'm proud of creating: making the arena</h2>\n<h2>What I learned: c#, unity and blender</h2>\n<h2>What's next for Avoid the blocks: blocks and an end</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/blender\">blender</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["Interactive Art Gallery", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Interactive Art Gallery \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/280/898/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>The inspiration came from one of our group members who made an amazing image and we felt that we had to come up with a great way to display it.</p>\n<h2>How it works</h2>\n<p>People will be able to edit the art gallery and upload they're own unique gallery for people to enjoy for themselves. Just download the gallery and start up the program. By simply walking around with WASD and looking around with the mouse, you can experience great creations of art made by various different people. If you want to take a closer look, just hold shift to zoom in on a creation.</p>\n<h2>Challenges I ran into</h2>\n<p>Our original idea was to create a virtual reality guitar hero like game where you punched the notes instead of press a button. Unfortunately the Razer Hydras we were trying to use for hand tracking would not work and we were forced to change ideas.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We were able to create a working game in the little we had left.</p>\n<h2>What I learned</h2>\n<p>Always test your hardware before ever committing to a project built around it.</p>\n<h2>What's next for Interactive Art Gallery</h2>\n<p>Allowing people to create name tags for the artwork so they can know what the piece is called.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/blender\">blender</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://f.kfarwell.org/rwWT_interactiveArtGallery.tar.gz\" rel=\"nofollow\" target=\"_blank\" title=\"http://f.kfarwell.org/rwWT_interactiveArtGallery.tar.gz\">\n<i class=\"ss-icon ss-link\"></i>\n<span>f.kfarwell.org</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["had nightmares", "mainly, I was completing the resources, such as the textures and meshes in Blender. Mostly front-end work, but there was some code that we had to scrap too.", "", ""]]]