[["My UCI Class is Full", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/extEr-Mp0QE?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"My UCI Class is Full \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/325/447/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>2015HackUCI</h1>\n<h1>Newer version of this app is developed and deployed at <a href=\"https://apps.jpatrickpark.com/\" rel=\"nofollow\">https://apps.jpatrickpark.com/</a></h1>\n<h2>Inspiration</h2>\n<p>There are too few faculty members in CS department that it is impossible to take classes nowadays.</p>\n<h2>What it does</h2>\n<p>This app communicates with UCI web server <strong>every minute</strong> to check the availability of the class and lets you know when it becomes available! This app is <strong>free</strong> to use and you can use it <strong>with as many classes as you want</strong>! \nAlternative solutions cost money because of their project's weight. We focused on building a lightweight project which can more efficiently and effectively meet the goals of the users.</p>\n<h2>How We built it</h2>\n<p>We started from sample programs such as sample project using Flask which allowed us to start building and getting feedback right away.\nThen, we customized the sample project by adding additional functions, building our own database for our class, user, follow activities, implementing other web development features.</p>\n<h2>Challenges I ran into</h2>\n<p>We had to struggle so much trying to remind ourselves of the programming languages we barely used.  Also, we did not have enough time to be able to expand our program to something much greater with only two group members.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>JP: This is my first ever web app ever deployed!\nYang: This is the app I hope I could use to enroll in FULL UCI classes. After talking to friends with our app, all of us like this app. It has a specific targeted user groups and the feedback we got after talking to the user group is great! \nEvery quarter, popular classes are quickly filled with students. The rest of students needs to refresh web pages over and over again to monitor the availability of the classes. When it comes the situation that the fulled classes are major-required or department-required classes (which is highly likely the reason why students compete to enroll), our app could be a life saver for UCI students who eagerly needs instant update for the availability of classes. All in all, I love our app!</p>\n<h2>What I learned</h2>\n<p>We learned: </p>\n<ul>\n<li>implementation of Python sqlite3 database</li>\n<li>web application in Python, flask environment </li>\n<li>processing of HTML website</li>\n<li>deployment our web app on Bluemix\nBesides, we refreshed our memory on programming languages and database.</li>\n</ul>\n<h2>What's next for My UCI Class is Full</h2>\n<p>We want to provide help for students who don't end up taking the classes they want to take, since the number of people who actually take the occasional empty spots is very small.\nWe aim to write additional program to plan out their future course work that helps them graduate by the time they want, by providing the best possible set of classes they can take during the current quarter, with remainder of classes.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">jquerey</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sqlite\">sqlite</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag\">lxml</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://myuciclassisfull.herokuapp.com\" rel=\"nofollow\" target=\"_blank\" title=\"https://myuciclassisfull.herokuapp.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>myuciclassisfull.herokuapp.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["support my partner and write unmaintainable code!", ""]], ["AntGroup", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"AntGroup \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/325/348/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We were comparing our classes and trying to figure out which classes we can take together.</p>\n<p>We realized there was no tool that made this easy and visual.</p>\n<h2>What it does</h2>\n<p>It takes Antplanner which allows a single individual to plan his/her schedule and turns it into an API that we consume in order to allow a group of students to use this data visually together to understand their collective schedules.</p>\n<h2>How we built it</h2>\n<p>We used Azure virtual machine with Ubuntu, Node.js, and the Azure MSSQL Database Logic App.</p>\n<h2>Challenges I ran into</h2>\n<p>Sergey decided to use Backbone and Require.js which was a little annoying, but he still delivered despite that.</p>\n<p>We decided to use MSSQL, and had to fix Sequelize's implementation of Tedious.</p>\n<p>We tried to use Hapi but the new versions docs were out of sync, so we switched to express.</p>\n<p>We assumed cookies could work cross-origin but they didn't, so we served the app from the same origin so we don't have to reimplement that.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We designed, planned, and completed a full fledged app that is functional and iterates on the usefulness of Antplanner -- in less than 2 days.</p>\n<h2>What I learned</h2>\n<p>See challenges I ran into. XD</p>\n<h2>What's next for AntGroup</h2>\n<p>We'll await user feedback and improve it accordingly.</p>\n<h2>Warning we did not have time or money to deploy with SSL, don't use an old password when creating an account!!</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://antgroup.cloudapp.net\" rel=\"nofollow\" target=\"_blank\" title=\"http://antgroup.cloudapp.net\">\n<i class=\"ss-icon ss-link\"></i>\n<span>antgroup.cloudapp.net</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Implemented the Azure Virtual machine and the Azure SQL Database Logic App, and installed the stack. ", "Front-End", "", ""]], ["Wearable Compass", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Wearable Compass \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/325/366/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Makayla is a really big fan of wearable electronics and tinkering to create accessories with Arduinos.  She needed to buy a neopixel ring anyway for another project she has been working on, so, we decided we'd use that to make something.  Of the sensors we had, the coolest sensor was a combination of an accelerometer, magnetometer, gyro, and heat sensor all in one.  Thus, the compass was born.</p>\n<h2>What it does</h2>\n<p>While the sensor is level, the compass displays north, south, east, and west as colored parts of the ring: blue indicates north, yellow indicates east, green indicates west, and red indicates south.  The lights move in response to the wearer's movement to continue indicating the correct direction.  If the user forgets which color indicates north, he/she can put his/her hand over the sensor, causing the temperature gauge to notice the increased heat, and only north (the blue lights) will show.</p>\n<p>When not using the compass (when the sensor is not level), such as down at the wearer's side, the neopixels display three trailing lights changing colors as they follow around the circle.</p>\n<h2>How We built it</h2>\n<p>We started off by learning how to use the neopixel ring, figuring out how to address the different leds and how to use for loops to iterate through all the pixels to set each of their values. When we had sufficient knowledge for that part, we then started to work with the adafruit LSM9DS0 3 axis accelerometer, magnetometer, gyro, and temperature sensor. With this sensor we were able to read movement from the accelerometers as well as rotation and direction based on the gyro and magnetometer values.  Also, with the addition of the temperature we were able to add another feature based on the user being able to change the temperature of the chip using their finger.  With this knowledge and the functions we knew from the neopixel ring, we were able to combine the magnetometer readings with the led ring to show the cardinal directions in led format as described above.  Then we attach both the ring and the sensor onto a fabric that acted like a glove, allowing the user to wear the led ring and use it like a compass as intended.  We were first going to make the compass wearable as a bracelet like a watch, but the wires became too difficult to work with and too sensitive to stray movement, so the design changed to a glove.  Also when not in use as a compass, the wearable compass acts as a nice fashion device with a circling led trail of different colors to make it aesthetically pleasing when not in use.</p>\n<h2>Challenges We ran into</h2>\n<p>With the restriction of soldering, we were unable to solder any of our wires and, as a result, the wires had trouble staying connected to each other and the boards, causing the program to freeze. Also, due to the amount of wires, we were unable to follow the original plan of making the wearable compass a watch design. We instead had to make it into a sleeve because of the amount of wires and space needed for them.  If we tried to cram all the wires into the smaller space of a watch design, we would have risked disconnecting some important wires.  In addition, because the smallest arduino on hand compatible with the sensor had breadboard pins soldered onto them from previous use, the trinket pro arduino didn't fit nicely in the end design layout.</p>\n<p>On the programming side of things, we had a fair bit of trouble with the leds not shifting correctly.  When the leds had to move in the negative direction, each led has a value (0-23), they would skip over a led, causing a gap to form between the four sections and making the compass look off. This took many hours of going over code and trying different ideas before figuring the correct way.  This halted our progress for a while as we had to get through this problem before we could create the others functions of the compass. </p>\n<h2>Accomplishments that We're proud of</h2>\n<p>We are proud of every aspect of this project.  We are especially proud of getting the sensor to work.  We had a lot of fun exploring its capabilities and adding light patterns for every new feature we learned. We are also very proud at our ability to learn the sensor and neopixel ring code as neither of us had much experience with the libraries yet we were still able to decode and implement them quickly and successfully.</p>\n<h2>What We learned</h2>\n<p>We learned how to program a neopixel ring, to understand the pins and format of the sensor, and to create a program to work between the two, using different outputs from the sensors to determine what to input into the ring.  Also we learned how to troubleshoot on the fly and be prepared for anything, even to the point of a battery cable breaking after we thought we had finished the project.</p>\n<h2>What's next for Wearable Compass</h2>\n<p>This product could be improved by soldering the wires onto the circuits and the adafruit trinket, the brain of the system. This would drastically reduce the clutter caused by the extra wires and would allow for a more streamlined design as well as a more efficient set up. Also, the prototype could be reduced in size down to the a watch style, looking more stylish and cleaner due to the compact design.  The wire connections would also work dependably instead of seemingly at random.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/adafruit\">adafruit</a></span></li></ul>\n</div>\n</div>", ["I've worked with arduinos before, but I'm still learning.  For this project, I worked on design, wiring, and construction of the wearable compass.  We had a lot of fun bouncing ideas off of each other, figuring out what we wanted to do and what was feasible with the time and tools we had.  While Andrew worked on the code, I sewed; wired the sensor, neopixels, arduino, and batteries; and figured out how to make it all wearable.  We both agreed our original idea of making it watch-like would make the wires too cramped, so I decided to sew a sleeve rather than a wrist-band.", "I created the program that took the sensor's outputs and calculated which pixels should be activated and what color values they should have.  I hadn't worked with arduino in a while but this project helped me get back into it and together we were able to design some really nice looking features. Using the 9 axis sensor, with gyro, accelerometer, magnetometer, and temperasure gauze I was able to determine when certain features of the ring led should be active."]], ["Twee Shirts", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Twee Shirts \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/325/493/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Twee Shirts \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/325/491/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Twee Shirts \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/325/492/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Twee Shirts \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/325/490/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Twee Shirts \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/325/489/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>As technology advances, social media is the first thing that grabs our attention. Twitter is used my millions of users a day and some Tweets even have more than 3 million shares and 2 million likes. Sharing and Liking a Tweet is one thing, but how about putting that popular Tweet on a shirt? You can use any Tweets that are publicly available! How about one of Kanye West's Tweets? Go ahead! Put a celebrity Tweet on a shirt. You know you want to. Wear your Twee Shirt with pride! </p>\n<h2>What it does</h2>\n<p>Our application streamlines the process from Tweet to Shirt. You give us the Tweet URL or Tweet ID and we'll generate the shirt for you.  We created a simple application for the user to purchase Twee Shirts. </p>\n<h2>How we built it</h2>\n<p>Leveraging Twitter, Scalable Press, and PayPal APIs, we automated the process of creating and ordering the Twee Shirt for you. The application itself is built with Node.JS, Express, and MongoDB.</p>\n<h2>What's next for Twee Shirt</h2>\n<p>Our next steps would be to focus on handling marketing research and advertisement before the holiday season. We also would like to make use of an email API to send users an email confirmation for their orders. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jade\">jade</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/azure\">azure</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/paypal\">paypal</a></span></li><li><span class=\"cp-tag\">scalable-press</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twitter\">twitter</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://twee-shirt.herokuapp.com/\" rel=\"nofollow\" target=\"_blank\" title=\"http://twee-shirt.herokuapp.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>twee-shirt.herokuapp.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Worked on website and front-end development.  I also did javascript form and input validations.  Moreover, some super cool features like the loading screen!", "", "", ""]], ["Free For Everyone", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Free For Everyone \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/325/481/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Free For Everyone \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/325/482/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Free For Everyone \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/325/483/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Free For Everyone \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/325/484/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Free For Everyone \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/325/485/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>OUR DEV POST WITH WHICH API PRIZES WE ARE GOING FOR:</p>\n<ul>\n<li>Shoutpoint (used for SMS)</li>\n<li>IBM BlueMix (used for DB)</li>\n</ul>\n<h2>Our Inspiration</h2>\n<p><em>We were tired of seeing the wasted food stashes, the abandoned televisions, and the neglected appliances left out in the wind to brave the elements.</em></p>\n<p>We sought to tackle the issue of excess - giving it to people who were in <strong>need.</strong></p>\n<p>We took our initial idea from UCI's one and only \"Free &amp; for Sale\" group on Facebook - connecting those who were giving away items to those who were searching for said items, and making that process more efficient, fast, and dare we say - fun.</p>\n<h2>What it does</h2>\n<p>Free for Everyone allows for users to post items they'd like to give away, which is broadcast to a live feed.\nOther users are able to view detailed information, and indicate interest for items they'd be interested in.\nThey will receive notifications (SMS) about the objects they subscribe to, and will also be notified when the object has been claimed!</p>\n<p>There are two distinct users:</p>\n<p>Supplier: The person who is providing an item. This person will create a post that provides her/his location, as well as vital information about the item.\nRecipient: The person who plans to receive the item. This person will subscribe to the post of an item, and be able to receive information about the whereabouts of the person/item, as well as be notified if the item is claimed in advance.</p>\n<h2>How we built it</h2>\n<p>We broke our development time into 3 distinct segments.</p>\n<p>The first night, we didn't touch any code, APIs, or keyboards. \nWe broke out pens and paper, and determined our specs, requirements, user stories, and wireframed the app.\nOnce we were set on the same idea and goal, we spent time researching the APIs available to us, namely ShoutPoint, IBM Bluemix, and Microsoft Azure. \nWe decided to pursue all 3.</p>\n<p>The second day was devoted to setting up the core functionality of the app.\nRoutes, server, database, and the majority of the application's features (posting, basic auth, basic sms, populating our views with dummy data).</p>\n<p>Our final day was the most difficult - we had to cut a lot of the features we'd have liked due to the various walls we had hit the previous day. We saved a couple hours near the end to tidy up the application, ensure that we had a reasonably good UI / polish, and ensured that our app was at the demo-able stage.</p>\n<h2>Challenges we ran into</h2>\n<p>We fell into the trap of authentication, which we falsely assumed we needed as a core feature.\nWe could have saved 8-9 hours of time had we skipped the step altogether and made do with cookies we made ourselves, and integrated authentication at a later step (which ended up being a massive bottleneck)\nWe could have also researched the API's available to us in more depth, and asked more questions before spending hours testing before hitting a dead wall. We tried numerous times to deploy our server / DB onto one of the many platforms available, but would hit walls that were ultimately large sink holes!</p>\n<p>And last, but not least - CORS. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>It's a full stack application, built in under 36 hours!\nWe created a simplistic, easy to use UI that didn't get in our way.\nWe made something that everyone on the team was eager to use and see on the app store.\nWe failed a lot, but we didn't break down or give up and go home!\nWe held stand-ups with the team every 2-3 hours to sync up on progress away from the computers. Stepping away helped us take a breather, check in with the rest of the team, and resolve issues that would normally not be possible if everyone was typing away.</p>\n<h2>What we learned</h2>\n<p>We learned a lot about dealing with various cloud solutions that we didn't know were available to us.\nCORS is quite unfriendly, but now we learned the importance of using the right headers.\nStandups can be only 5 minutes long, but can save you 4-5 hours of pain.\nToo many features causes confusion and more work for the team. \nKeep the features well defined, and low in number.\nSudo saves lives.\nrm -rf / is NOT a good idea to send to somebody at 3 AM in the morning. </p>\n<h2>What's next?</h2>\n<p>We want to finish this up, and get it into the app store.\nWe want to get geolocation in here, and test it out at UCI!\nWe're going to let the community police it. Possible an upvote/downvote system like Reddit/Yikyak.\nAllow for more concurrent users, get it up on AWS.\nUse various production grade libraries to minify the overall size and payload of the application to support many users!\nDo a live test and see what happens. \nAnd never stop improving!</p>\n<h2>Instructions on usage (dev):</h2>\n<p>Clone both repositories.\nFFA is the client, FFE_API is the backend.\nRun npm -install on both projects.\nRun mongod.\nIn the FFE_API root directory, run app.js (nodemon / grunt work as well)\nIn FFA root directory, run ionic serve</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ionic\">ionic</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/apache\">apache</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/angular-js\">angular.js</a></span></li><li><span class=\"cp-tag\">shoutpoint</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/EyeWumbo/FFA\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/EyeWumbo/FFA\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/EyeWumbo/FFE_API\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/EyeWumbo/FFE_API\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Producer of the team. Kept team in sync, played the support role, implemented Shoutpoint, called for standups every few hours, directed the initial wireframing, requirements, and set-up phase.", "Full Stack Developer. Worked with both Front-end and Back-end technology. Created several API/ Ionic template views. Assisted the team to provide support to resolve problems we encountered", "For this project, I was mainly a front-end designer. I created the view for the profile page and worked on a good portion of the home view such as styling the tabs, lists, and cards. Lastly, I partly worked on all of our modals and established the logic for the pages I designed.", "", ""]], ["PRJT", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"PRJT \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/329/008/datas/gallery.jpg\"/>\n<p>\n<i>Blackboard</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"PRJT \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/329/009/datas/gallery.jpg\"/>\n<p>\n<i>Landing page for each project</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"PRJT \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/329/010/datas/gallery.jpg\"/>\n<p>\n<i>Members</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"PRJT \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/329/011/datas/gallery.jpg\"/>\n<p>\n<i>Signup/Login page</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"PRJT \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/329/012/datas/gallery.jpg\"/>\n<p>\n<i>Create a new project</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"PRJT \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/329/013/datas/gallery.jpg\"/>\n<p>\n<i>Discover interesting projects</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>PRJT</h1>\n<h2>Inspiration</h2>\n<p>You know how to code and have cool idea, but your app looks really bad. Turns out you should have a designer's help, but you are a student, so you can't afford one. You go find your friend's friend's friend's friend's who is artist. You lost her contact somehow so you have to do this all over again.......</p>\n<p><strong>STOP THIS MESS</strong></p>\n<p>This is not just one example of college students with skills, idea, and motivation. There are a lot of SNS these days, but ultimately they are for socializing. </p>\n<h2>What it does</h2>\n<p><strong>PRJT</strong> is a tool that helps <em>finding people</em> in professional manner.</p>\n<ul>\n<li><p>You can sign up with your skillset, and create a project. Add the talents you need to get your project going. PRJT will broadcast your project to people who have the talents you need. </p></li>\n<li><p>While people sign up, add some ideas to TODO list and add some due dates to the calendar.</p></li>\n<li><p>When people join, say hi to them using embedded <strong>chat</strong> * system.</p></li>\n<li><p>Upload files and share them with your group *.</p></li>\n</ul>\n<p>No idea, but you have some urge to do something awesome? No problem.</p>\n<p><strong>PRJT</strong> also lets you <em>find projects</em>.</p>\n<p>Just browse DISCOVER tab to:</p>\n<ul>\n<li><p>View recently added projects </p></li>\n<li><p>All projects</p></li>\n<li><p>Hot projects</p></li>\n<li><p>Projects that matches your skill</p></li>\n</ul>\n<h2>How I built it</h2>\n<p>This prototype webapp was built at HackUCI alone using Twitter Bootstrap, Google Material Design, MAMP (Mac OSX, Apache2, MySQL DB, PHP) Stack, CODA2 IDE. </p>\n<h2>Challenges I ran into</h2>\n<p><del>Sleep Deprived</del> Some fundamental challenges like designing table schema, technical challenges like javascript syntax, and maybe hunger..?</p>\n<h2>What's next for PRJT</h2>\n<p>Within timeframe, only fundamental functionalities such as \"login\", \"signup\", \"create a project\", \"join project\" have been implemented. It may sound simple (as they only count 4), but they are indeed more than a thousand lines of code with some serious schematic designs for optimized and scalable application.</p>\n<p>I'm planning on taking this further to finish up all the functionalities I have mentioned above, and polish business idea with mentors. I've been asking this idea to random students around my beautiful campus UCSD, and I'm almost certain that students would enjoy this. (Still need some real data like survey, etc)</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php5\">php5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/phpmyadmin\">phpmyadmin</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mysql\">mysql</a></span></li><li><span class=\"cp-tag\">mamp</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag\">google-material-design</span></li></ul>\n</div>\n</div>", ["", "", ""]], ["eSports App", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"eSports App \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/325/637/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"eSports App \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/325/650/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"eSports App \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/325/651/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"eSports App \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/326/094/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"eSports App \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/326/096/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"eSports App \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/326/097/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"eSports App \u2013 screenshot 7\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/326/098/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"eSports App \u2013 screenshot 8\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/326/099/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"eSports App \u2013 screenshot 9\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/326/100/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"eSports App \u2013 screenshot 10\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/326/101/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Tyler and Paul from the eSports Arena are looking for a new all-in-one front counter application for their venue. According to them, the current way of tracking inventories and recurring memberships is not working well in the eSports Arena. It isn't intuitive for both their employees and their customers. Their current system involved just asking incoming customers for their last name and ID, and searching them up in the database to validate their information. Because of this, they are looking for a new gym membership style application that's simple, clean, and easy for employees to use.</p>\n<h2>What it does</h2>\n<p>Designed specifically with the eSports Arena in mind, the eSports App is an all-in-one recurring membership application to satisfy all their needs. Taking inspiration from gym membership-style entry methods, the app allows employees to easily add, remove, and check-in customers to the eSports Arena by phone number and manual facial comparison by the employee at the front counter.</p>\n<p>Once a customer is checked into the venue, they can then rent out peripherals such as mice, keyboards, controllers, etc. The application will keep track of who has what check out at all times, discouraging members from stealing the eSports Arena equipment.</p>\n<p>New customers are quick and simple to add to the database - they'll have to get their picture taken by the front-desk employee and enter their credit card details for monthly billing purposes.</p>\n<p>We ultimately decided that manual facial comparison - comparing the face of the customer with a picture taken of them previously - would be a simple and efficient method of checking people into the venue. Other considerations include a phone-based QR code system.</p>\n<h2>Challenges we ran into</h2>\n<p>More than half of the team members had school work and didn't know the language we were working with.  The learning curve was really high, and many team mates were not able to complete tasks. Internet connections were particularly iffy at the hacking venue, preventing progress at many points.  </p>\n<p>There were many features that was needed to be implemented into the app, we have every feature ready but in separate implementations. There was a great deal of lack of communication - many teammates did not express their need for help until the very last minute when it was really too late. In addition, many of us did not understand what our tasks were and were unwilling to speak up.  We also over-estimated many member's skills. Many team members had to not only fulfill their own roles, but also the roles of other team members.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Writing the website in Angular Material, keeping track of new and existing members, hosting the site on a web server, the check-in system, pulling off an all-nighter.  We got every feature we wanted working even though we have not connected everything together.  We implemented a search bar that will filter based on phonetic typing, so the employee could type the customer's name incorrectly, but still find the customer.  We also implemented the ability to adding customers, where you can quickly fill out information needed to create a membership for them.  There is easy access and maintenance of membership for eSports Arena.</p>\n<h2>What we learned</h2>\n<p>Angular. We also learned the important of organization, time management, and communication</p>\n<h2>What's next for eSports App</h2>\n<p>If our app is selected for use by the eSports Arena, then we will gladly continue further development and polish on the application, ironing out any problems that arise and adding new features as time goes on.</p>\n<h2>Built With</h2>\n<p>HTML, CSS, Javascript, Angular Material, and energy drinks...tons of energy drinks</p>\n</div>\n</div>", ["Research on stripe payments. \nMarketing/presentations.\nResearch and implementation of image capture, storage, and processing. ", "I worked on the website frontend (using Angular), the backend (using Node), and the MongoDB database queries.", "research, presentation/marketing, webserver, front end and backend, design", ""]], ["WiseCrack", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"WiseCrack \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/325/644/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"WiseCrack \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/325/646/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"WiseCrack \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/325/645/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>The first few hours of every Hackathon typically starts with limited to no internet. As I notice everyone around me beginning to tether their phones, I always think of doing the same. I realized that my phone hotspot key was just my phone number, which would be extremely easy to crack. Everyone's packets are easily available to be sniffed, and enough data packet collection would allow for cracking on a distant machine. So it got me thinking...</p>\n<h2>What it does</h2>\n<p>If I ever forgot my password and needed a way to get back into my system, I would be pretty stuck. This web application allows me to wisely crack (I like to say recover) my WiFi keys using Aircrack-ng after I have sniffed sufficient amounts of data packets. The problem that would occur is that I only really have my phone to sniff packets or my laptop. Performing \"recovery\" would drain the battery easily, and everyone knows the computing power to perform \"recovery\" is just not there. That's where the cloud comes in. Why use up your resources when you can allow supercomputer clusters to do your bidding? I mean... uh, help you get back in your systems.</p>\n<p>WiseCrack is a titularly sarcastic approach to packet sniffing and cracking.</p>\n<h2>How I built it</h2>\n<p>Android PCAP allows your phone to sniff packets in monitor mode without any need to root your phone using a wireless card (I have the Alfa Long-Range Adapter) and USB developer mode. Aircrack-ng provides a suite of tools for cracking WEP and WPA-PSK keys. But they're not widely used because brute forcing or even dictionary methods take forever. You have to have your computer on the entire time and if something faulty happens, say goodbye to ever recovering your passwords. However, some <em>may</em> say that this can be used as malicious activity. I don't <em>possibly</em> see why anyone would do such a thing; however, to avoid potentially \"stepping over ethical boundaries\" I did not deploy this on any clouds, just my localhost. I did this using the Meteor Javascript framework. I'm not too fond of web dev, but hey, it's a hackathon; this is the perfect time to pick up something new.</p>\n<p>The process was simply sniffing for packets in monitor mode with PCAP, uploading them into the WiseCrack web application, then deploying Aircrack-ng to do it's thing.</p>\n<h2>Challenges I ran into</h2>\n<p>Before deciding to create a web app, it was going to be an Android App. This made a lot of things difficult because the App would do it's own packet sniffing (without PCAP). It would then connect to my laptop's local server as a proof of concept and run Aircrack. After the key is extracted it would be sent back and logged into the App. There were just so many different moving parts and at one point I was going to use Cordova to just let web apps become available to Android, but even that was not for sure going to work. I pivoted way more times than just this instance, so the final product left much to be desired.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I have an app that works. I got better at web development. </p>\n<h2>What I learned</h2>\n<p>A ton of Javascript. A bunch of server configuration protocol and scripting that I didn't end up using at all. Special thanks to Wynne Tran for the logo, artwork, and some of the front-end design, David Buff for mentoring me on Meteor, Steven Sairafian for the project idea, and Ashley Barton and John Chen for making sure I stayed safe over the weekend.</p>\n<h2>What's next for WiseCrack</h2>\n<p>Potentially create this into a standalone Android app. Less moving parts (no more PCAP, Meteor shenanigans, web dev, less application servers) tends to make a more robust product.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/meteor-js\">meteor.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag\">aircrack-ng</span></li><li><span class=\"cp-tag\">android-pcap</span></li></ul>\n</div>\n</div>", ["I designed the logo and front-end.", ""]], ["Solitude", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Solitude \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/325/696/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Solitude \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/325/697/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Solitude \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/325/698/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Solitude \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/325/700/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Solitude \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/325/701/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Solitude \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/325/702/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Solitude is an attempt to reflect on a potential relationship between artificial intelligence and humanity. We wanted to fully capture the feeling behind being entirely alone with just a computer, but also suggest that maybe Artificial Intelligence is a close ally. We used Virtual Reality to provide the immersive aspect of the game, and we especially wished to convey the sense of isolation and loneliness that comes with being trapped in outer space. In our experience, we sought to answer fundamental questions and cover important topics, toying with ideas such as \"Is A.I. a replacement for humanity? Is A.I. better than humans? Can it provide the same sense of comfort as a human\"? We wanted to make a profound experience, and we did exactly that.</p>\n<h2>What it does</h2>\n<p>You are a captain aboard a ship in space, starting after a major battle in which your crew was wiped out and your ship is left badly damaged and far from home. The game begins with ANNA, your computer, reading battle reports and informing the player that they are the only remaining beings on the ship. After a brief tour around interface, voice commands, and your ship, ANNA informs that there are several hostile ships approaching and you will have to fight them, thus ending exposition.</p>\n<p>You are forced into combat, and using the Razer Hydras as an input mechanism to select targets for ANNA, you can destroy attacking ships. ANNA then explains that destroying ships helps you gather resources from the ships to boost your own stats and obtain upgrades. You will be forced, at each stage, to choose between Individual or AI upgrades. In this sense, you can either improve your own ability, or improve your computer's power. Eventually, you will have enough parts and upgrades to go home, but you will have to make a fundamental choice: Humanity or Artificial Intelligence. </p>\n<p>You are informed that Earth has stopped supporting Artificial Intelligence and is mandating that you disable ANNA. You must then choose whether to \"Kill\" Anna and return home, or fight against humanity and their violent punishment for disobedience.</p>\n<p>If you kept ANNA, you leave Earth and are denounced by humanity. You must fend them off in an attack, but ANNA easily protects you if you upgraded her.  You place ANNA in charge of the ship, and she proceeds to install on other Earth ships, creating an army of Artificially Intelligent ANNA ships.</p>\n<p>If you deactivated ANNA, you will have a final battle with invaders, this time without ANNA aiding you. Earth will be in communications saying they\u2019ll send reinforcements. But you have to keep them away until then, relying only on your individual commands. Waves of reinforcements could enter and die fighting the invaders, while you know full well that if ANNA was there the battle would quickly be over.</p>\n<h2>How I built it</h2>\n<p>We built Solitude using the Unity Game Engine as our main interface. The models were made using Maya software, and the hardware we used included the Oculus Rift and the Sixense Razer Hydras. The language we used was C#. </p>\n<p>Initially, the work was split simply into three categories: Razer Hydra control, modeling, and plot. We focused a lot on plot to ensure that we could convey our message about artificial intelligence clearly. However, as more tasks came up, more work was needed to be done. Tasks consisted of creating the space environment, importing assets like asteroids and planets, finding a way to implement ANNA's speech, managing the queue for ANNA's attack, modeling the user and enemies ship, animating the flight and movement of the ships, and the upgrade system for both the user and ANNA. </p>\n<p>The upgrade system was carefully thought out so that ANNA's updates were more likable because, as a computer, her's were more advanced than a human. </p>\n<p>Player upgrades include laser cannons for continuous lasers, shields to absorb damage, homing missiles, and full manual control.</p>\n<p>ANNA upgrades include more RAM for bigger queues, targeting for multiple attacks, control of enemy ships, and full autonomy of the ship.</p>\n<h2>Challenges I ran into</h2>\n<p>Solitude was an incredibly ambitious project, for we started with a goal of making a beautiful, deep, and profound game. The size of the project alone was a major challenge, and even though we remained optimistic, we were forced to drop some crucial features in order to finish on time. One of those features included voice control, a mechanism we wanted to use to help the player communicate with ANNA.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>In the end, we still accomplished more than we could've dreamed of. We were able to make a game that could force critical thinking and deep analysis of artificial intelligence and humanity as a species. In this sense, we created a VR experience that transcends itself and serves a greater purpose in the community. </p>\n<h2>What I learned</h2>\n<p>We learned a lot about importing Audio into scenes and using it in order to create ANNA's voice. We also discovered a fair amount about multithreading and race conditions as we dealt with multiple ships being targeted at the same time. Above all else, we discovered how difficult it is to truly implement a meaningful plot. In the end, we were fighting as hard as possible to keep Solitude from being just another \"Space Game\".</p>\n<h2>What's next for Solitude</h2>\n<p>Solitude has an incredible amount of potential, and we want to make that happen. First and foremost, we want to finish adding upgrades to the game, such that they're fully fleshed out and functional. We then want to make sure our message is communicated clearly to audiences that care. Of course, we also want to implement voice control and beautify what we already believe to be an incredible experience. The possibilities are endless, and we hope to continue working to create something that has meaning to us and hopefully to others.</p>\n<p>We would like to get the voice control working in Virtual Reality because that would improve user interaction with the 'AI' ANNA. Furthermore, we would like to implement more upgrades for the player and ANNA so there can be a larger variety of options for user choices. One of those is the control. While we ran out of time to implement it, we believe that it is a good idea and would like to follow through with it. There's even a turrent we were suppose to attach to the sides of the user's ship but again also ran out of time. But I feel we made such good progress that we are still excited at the outcome!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/maya\">maya</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/oculus\">oculus</a></span></li><li><span class=\"cp-tag\">razer-hydras</span></li><li><span class=\"cp-tag\">sleep-deprivation</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/anikan/Solitude\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/anikan/Solitude\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I made the hands target objects and also handled the autotargeting system.", "", ""]], ["Happy Dog!", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Happy Dog! \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/325/800/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Happy Dog! \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/325/801/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Happy Dog! \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/325/802/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Happy Dog! \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/325/803/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Dogs need love too!</p>\n<h2>What it does</h2>\n<p>Imagine you're laying on your bed. You're tired. Your dog wants food. Do you get out of bed and feed the thing? Well, no more of that.. Happy Dog is here to save the day! Happy Dog, an automatic dog food dispenser, is a web application which allows you to feed your dog remotely. You're also able to do things like set a future time/date that you would like to feed your dog as well.</p>\n<h2>How we built it</h2>\n<p>We started out with a Photon given out at a Microsoft Seminar. We decided it would be cool to make a web app with it. I really miss my dog, so we decided to dedicate something towards him. We had some crafts so we tried our best to replicate what we thought an automatic dog feeder might be structured like. </p>\n<h2>Challenges we ran into</h2>\n<p>I've never used any of the tools mentioned before. Luckily, my good friend, David was here to lead me through the process. I was able to create a working structure of Happy Dog!</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I made something that is very applicable in the real world! I think it's awesome to remotely control a dog feeder.</p>\n<h2>What I learned</h2>\n<p>I learned photon, a little bit of JavaScript, and dealing with the Meteor framework.</p>\n<h2>What's next for Happy Dog!</h2>\n<p>We hope to make a more polished version of Happy Dog in the future with a way cleaner structure(paper cups definitely won't last...) along with more functionalities such as choosing how much to feed your dog, preferred amount to feed based off of dog breed, and more!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">photon</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/meteor-js\">meteor.js</a></span></li><li><span class=\"cp-tag\">materialize</span></li></ul>\n</div>\n</div>", ["I worked on the photon code, creating the structure of the project, and assisted in debugging whenever needed.", "I made the web app front to back and helped construct the physical apparatus."]], ["Therma-Hack", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Therma-Hack \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/325/880/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Therma-Hack \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/326/053/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Therma-Hack \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/326/163/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>In a world where human waste and energy consumption has propelled the environment into a potentially irreversible state of climate change, where we consume over 80 Gigajoules of energy, only to end up wasting 61-86% through inefficient practices, where our crumbling infrastructure and bad habits have only further perpetuated the modern energy crisis - we know something had to be done to save the world. \nWith nothing but our wits, energy drinks and 36 hours of hacking we created Therma-Hack which would allow regular people to track and identify key areas of heat leakage in their home. Armed with this knowledge, people will be motivated to make steps towards better insulating their home, reducing heat waste for rooms not in use, and ultimately making a conscious effort to save the world.</p>\n<p>Well how does it work? We used the Particle Photon to relay the temperature from different locations around the house and send it to a live database (Azure) that displays the temperature from each module. Rather than using a typical heat sensor, (which requires unnecessary materials for production) we measured the forward voltage induced from LED's and converted this voltage into temperature, significantly reducing the cost of production without a significant drop in accuracy. The Photon code was compiled using build.particle.io and the particle publishes its data to an eventhub, and by using connectthedots we were able to send the results to Microsoft Azure for viewing.</p>\n<p>The goal is to have one of these devices at every window or room where heat leakage may occur, from there Photon will report to a central hub for easy monitoring. Together, with the power of Therma-Hacks we can increase awareness of heat waste in homes and push to make the world a better place for ourselves and our posterity. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/objective-c\">objective-c</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/particle\">particle</a></span></li><li><span class=\"cp-tag\">photon</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/azure\">azure</a></span></li><li><span class=\"cp-tag\">led</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://connectthedotsdx.azurewebsites.net/\" rel=\"nofollow\" target=\"_blank\" title=\"http://connectthedotsdx.azurewebsites.net/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>connectthedotsdx.azurewebsites.net</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["music_simulator", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We like music and tron so we combined them together in beautiful harmony!</p>\n<h2>What it does</h2>\n<p>Our app reads in music and turns it into awesome colors and waves in a 3D world you can explore.</p>\n<h2>How I built it</h2>\n<p>With friendship and shaders and a lot of hard work.</p>\n<h2>Challenges I ran into</h2>\n<p>We had poor internet access throughout the competition which limited us creatively, but we persevered and were able to implement another great idea.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>It looks really cool and makes you feel the music. It is a very immersive and mesmerizing effect. </p>\n<h2>What I learned</h2>\n<p>How to be resourceful and make the best of any situation. We also learned about music frequencies and advanced graphic rendering techniques.</p>\n<h2>What's next for music_simulator</h2>\n<p>More tracked frequencies and better integration with visual effects. Also perhaps some sort of game play. But we are really happy with how it turned out and think it stands well as is.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag\">shaders</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/buckslice/music_simulator\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/buckslice/music_simulator\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["8-bit Retro Membership Wesite", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"8-bit Retro Membership Wesite \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/326/071/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"8-bit Retro Membership Wesite \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/326/072/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"8-bit Retro Membership Wesite \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/326/073/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"8-bit Retro Membership Wesite \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/326/074/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"8-bit Retro Membership Wesite \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/326/075/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Wanted to make a fun membership website that had a similar feel to playing the old Pokemon games.</p>\n<h2>What it does</h2>\n<p>Users can look at check-in, equipment rental and membership information in a interactive 8-bit retro universe.</p>\n<h2>How We built it</h2>\n<p>Built with html, javascript, and css.</p>\n<h2>Challenges I ran into</h2>\n<p>Wifi connectivity issues, IBM Bluemix server issues and reliability issues, and difficulty in setting up database servers with minimal help available at critical moments.</p>\n<h2>Accomplishments that We're proud of</h2>\n<p>Simplicity and Retro design.</p>\n<h2>What I learned</h2>\n<p>Emory: javascript, html, and css</p>\n<p>Wilmer: setting up a server</p>\n<h2>What's next for 8-bit Retro Membership Wesite</h2>\n<p>nothing, we're all going to sleep</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://insertteamnamehere.mybluemix.net/\" rel=\"nofollow\" target=\"_blank\" title=\"http://insertteamnamehere.mybluemix.net/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>insertteamnamehere.mybluemix.net</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the front end of the website, helping with the design and html and css implementations.", "", "", ""]], ["MyBot.io", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"MyBot.io \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/326/062/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"MyBot.io \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/326/063/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"MyBot.io \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/326/064/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"MyBot.io \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/326/065/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"MyBot.io \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/326/066/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Background</h2>\n<p>Looking for a specific item or an information online sometimes required users going through too many steps to get to the final search result that they want. Eventually, users end up opening numerous web browser tab without finding the satisfying result. Also, seniors often need to spend a tremendous amount of time on their computers trying to find their way to the result that they want to search for. We want to shorten all that process and ensure that users will have exactly what they look for in just a keyword or a command away.</p>\n<h2>What it does</h2>\n<p>MyBot.io provides a very human way to get assistance through a chat interface. We combine many useful APIs to give MyBot.Io these amazing features:</p>\n<ul>\n<li>Respond like a person</li>\n<li>Understand command for certain tasks including but not limited to: </li>\n</ul>\n<p>. video &amp; music search through tthe bot without going through search engines to find the right website</p>\n<p>. item search without looking for the best online store to buy</p>\n<p>. translate with normal texting</p>\n<p>. simple weather checking using current location</p>\n<p>. play piano</p>\n<h2>What I learned</h2>\n<p>Nodejs, AngularJs, underscore, socket.io, various APIs usage: walmart, youtube, cleverbot.</p>\n<h2>What's next for MyBot.io</h2>\n<p>Extend it so that MyBot.io can be specified for specific use such as filling out forms while collecting user's profile with instant assistance. This feature could be extremely useful for mobile users.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/angular-js\">angular.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/underscorejs\">underscorejs</a></span></li><li><span class=\"cp-tag\">asyn</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/walmart-open\">walmart-open</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bluemix\">bluemix</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/socket-io\">socket.io</a></span></li></ul>\n</div>\n</div>", ["", "", ""]], ["Callender", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Personal assistants like Facebook M</p>\n<h2>What it does</h2>\n<p>The application was built to pair up calls, conferences, and messages to events and services like Google Calendar and Office 365. Currently the system is able to register events but not with external calendars. </p>\n<h2>How I built it</h2>\n<p>Callendar is built up with a C# and NodeJS backend that run on Microsoft digital mobile services.</p>\n<h2>Challenges I ran into</h2>\n<p>We struggled to work with Google's authtwo to sync with their calendar events.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We are really proud of the backend we built up in C# which serves as a firm foundation for Callendar.</p>\n<h2>What I learned</h2>\n<p>I learned how to work with ShoutPoint's calling API's as well as how the hosting environment on Azure come together on different backend API's that we wrote.</p>\n<h2>What's next for Callendar</h2>\n<p>The next steps for Callendar are to integrate with Microsoft Office 365, Google Calendar and other 3rd party services. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/angular-js\">angular.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li></ul>\n</div>\n</div>", ["", "", ""]], ["Who Am I", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>What it does</h2>\n<p>This ghost can either spread love or hatred, which therefore will alter the whole game's result.</p>\n<h2>What's next for Who Am I</h2>\n<p>More levels, add in animation, and better graphics :D</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li></ul>\n</div>\n</div>", [""]], ["Just Say It", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Conceptualization</h2>\n<p>With Project Oxford, I saw a good opportunity for Just Say It's concept. With the speech capabilities, there was a lot that could be done. However, I wanted to keep stuff simple since I didn't know much. I thought, \"How many times does a language barrier get in the way of communication? Sure, they could type it in onto a translation service somewhere online, but what if we could make that faster?\" That thought lead to Just Say It.</p>\n<h2>What Does It Do?</h2>\n<p>Just Say It is intended to function as a translator. It takes a foreign language (as speech input), translates that to English (in text), and then the device speaks the text in English. However, this version only takes text input, and can only translate from Spanish to English.</p>\n<h2>How It Was Built</h2>\n<p>I utilized Project Oxford APIs in conjunction with Microsoft Azure's web app hosting. I wrote it using Python, HTML, and a little bit of JavaScript.</p>\n<h2>Challenges and Adversities</h2>\n<p>I'm not very comfortable with using Python or JavaScript in a \"real-world\" situation: my only experience with Python is inside of my college class. I'm an incredibly inexperienced programmer, I have very little knowledge besides the basic datatypes. Additionally, I was unable to implement a speech-to-text function, multiple languages, and then a text-to-speech function due to insufficient documentation (Project Oxford text to speech) and a lack of understanding of Python, JavaScript, and APIs.</p>\n<h2>Accomplishments</h2>\n<p>I was able to submit something at the very least. Despite my team breaking up into smaller groups and working on multiple projects, I was able to construct this by myself. I had lost about 12 hours but I still managed to pull this together.</p>\n<h2>Lessons Learned</h2>\n<p>I learned that I need to voice my opinion more; if my team didn't want to go with my project, I should've started working on it from the start. Additionally, I learned a lot about using APIs, using Google to teach myself how to code, and working with a team. Despite some hindrances, a dedicated team (or person) can still recover and create something.</p>\n<h2>HackUCI is done. Now what?</h2>\n<p>Hopefully, in the future I can finish this and then port it out to mobile apps. People often have a hard time due to language barriers. Just Say It should be able to break down those barriers.</p>\n<p>I worked with Tim Reilly from Microsoft and a fellow HackUCI peer, Ghiyath Alazzah, to implement text-to-speech via Project Oxford, and he worked diligently to help me get this function. Their code is linked in the second Github repository, and it will be implemented in the future.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/azure\">azure</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://justsayit.azurewebsites.net\" rel=\"nofollow\" target=\"_blank\" title=\"http://justsayit.azurewebsites.net\">\n<i class=\"ss-icon ss-link\"></i>\n<span>justsayit.azurewebsites.net</span>\n</a></li>\n<li><a href=\"https://github.com/ryanapolinar/justsayit\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ryanapolinar/justsayit\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/Galazzah/tts/\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Galazzah/tts/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["BASHy", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"BASHy \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/326/213/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>BASH scripting is fun, sharing BASH scripts is not.</p>\n<h2>What it does</h2>\n<p>Builds a level of abstraction that makes installing and maintaining BASH scripts easy.</p>\n<h2>How I built it</h2>\n<p>Leveraged Google Spreadsheets as a database using the Google Visualization api along with GQL to build an API that is able to communicate with a Spreadsheet. Wrote a BASH script that feeds inputs into a Python program which handles the operating system details such as writing files, switching directories, etc.</p>\n<h2>Challenges I ran into</h2>\n<p>Using Spreadsheets as a database was not very well documented since it wasn't a very orthodox thing to do. We had to dig deep into the Visualization API to find a way for us to hack together a method to Query from the spreadsheet via REST. \nManaging the environment variables, Sourcing all packages to bash_aliases, and making sure things get executed from the right place at the right time proved to be more difficult than we imagined. I hadn't done very much work on the OS level before so it didn't come easy. </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>You can now install and maintain any BASH script that a friend gives you (and vice versa) with a simple CLI, figuring out how to query a Spreadsheet as a database, and getting each new script Sourced and ready to go on installation. </p>\n<h2>What I learned</h2>\n<p>MODULARIZE! Separation of concerns saved me countless times. Whenever something would break (more frequently than you'd imagine) being able to know exactly which file and which function call was affected and only having to rectify that error in one place was a life savor. \nWe also learned how to scan through API Docs and to be able to use them to find the thing you're looking for.</p>\n<h2>How we incorporated Microsoft API's</h2>\n<p>To demonstrate how easy BASHy is to use we created a series of BASH scripts that an engineer might use in the workplace. We've written a script that queries the Bing Traffic API and pipes that data into a log file, a script that queries your Azure Search service, and others. Sharing these scripts was effortless and shows the power of BASHy.</p>\n<h2>What's next for BASHy</h2>\n<p>GUI?</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bash\">bash</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-visualization\">google-visualization</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-drive\">google-drive</a></span></li><li><span class=\"cp-tag\">gql</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bing-traffic\">bing-traffic</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/azure\">azure</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-apps-script\">google-apps-script</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://getbashy.me/\" rel=\"nofollow\" target=\"_blank\" title=\"http://getbashy.me/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>getbashy.me</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Speech registration with azure web and raspberry pi2", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>The inspiration from the project came from the new power the win 10 IoT OS gives and the oxford project that makes speech registration more acessible.</h2>\n<h2>You can talk to a raspberry pi 2 with attached mic or windows phone running the app. The app will then regornize some commands that will be sent to a logic app deployed on the azure platform where it will go through a workflow.</h2>\n<h2>Used visual studio for the c# and xaml code, and then azure for the azure part.</h2>\n<h2>We ran into challenges with threads and data reading, since this needed to be done async</h2>\n<h2>Getting the speech registration code to work and understand certain commands.</h2>\n<h2>Learn alot about how azure works, and in particularly how logic apps, service buses and workflows works in azure.</h2>\n<h2>What's next for Speech registration with azure web and raspberry pi2. Next step would be to try and implement LUIS from the oxford project as well which would give the app capabilities to learn new terms and commands by itself.</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xaml\">xaml</a></span></li><li><span class=\"cp-tag\">cs</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/azure\">azure</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/windows-10\">windows-10</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/windows-phone\">windows-phone</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag\">raspberry-pi2</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/jle33/hackuci\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/jle33/hackuci\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Tic_tac_toe", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/3wT9VJVi9Gw?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Tic_tac_toe \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/326/091/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>Tic_tac_toe</h1>\n<p>Simple Tic Tac Toe game.\nTo run, download file and run command prompt in the same directory.\nuse command: python \"tic tac toe.py\" or python \"filename\"\nMake sure python is installed. <a href=\"https://www.python.org/downloads/\" rel=\"nofollow\">https://www.python.org/downloads/</a>\nCreated on Python 3.4.3</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/nemi999/Tic_tac_toe\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/nemi999/Tic_tac_toe\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Dodge!", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Our group wanted to create a fun game that utilizes Unity 5 and Oculus Rift since none of have had the opportunity to use one before.</p>\n<h2>What it does</h2>\n<p>In our game, you strive to dodge missiles and meteors as much as you can to get the best score!</p>\n<h2>How I built it</h2>\n<p>Combining our existing knowledge of Unity 5 and researching how to successfully use Oculus Rift with our game, we were able to complete a prototype of an intense virtual reality action game.</p>\n<h2>Challenges I ran into</h2>\n<p>Downtime with no internet where we utilized the time to brainstorm new ideas, frequent crashes on some machines when testing Oculus Rift.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>A completed prototype and experience developing with the Oculus Rift.</p>\n<h2>What I learned</h2>\n<p>Combining movement with the Oculus Rift requires frequent playtesting for the best user experience and to watch out for motion sickness.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/oculus\">oculus</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://drive.google.com/a/uci.edu/file/d/0BzCbNFCYtyYVZjcxRVYtOG1QYkE/view?usp=sharing\" rel=\"nofollow\" target=\"_blank\" title=\"https://drive.google.com/a/uci.edu/file/d/0BzCbNFCYtyYVZjcxRVYtOG1QYkE/view?usp=sharing\">\n<i class=\"ss-icon ss-link\"></i>\n<span>drive.google.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Coded gamelogic and gamesystems", ""]], ["UCIHacks", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<h2>What it does</h2>\n<p>Teacher computer science basic data structures.</p>\n<h2>How I built it</h2>\n<p>Used Unity and C# to do everything! 3d models are imported in .fbx files</p>\n<h2>Challenges I ran into</h2>\n<p>Setting up a kinect as the control schema.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<p>A lot about how unity works and kinect.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li></ul>\n</div>\n</div>", [""]], ["Paper Cutz VR", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/r_z-gOkWO-c?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Paper Cutz VR \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/326/132/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Paper Cutz VR \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/326/133/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Paper Cutz VR \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/326/134/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Paper Cutz VR \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/326/135/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Paper Cutz VR \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/326/136/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Paper Cutz VR \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/326/137/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Our team comes from a heavy robotics background. Each of us spent all four years of high school heavily involved in our high school FIRST Robotics Competition (<a href=\"http://www.firstinspires.org/\" rel=\"nofollow\">FRC</a>) teams. In FRC, high school teams are given a challenge, and six weeks to build and program a (usually 120 pound) robot from scratch to compete against other FRC teams. Each of us spent upwards of 300 hours each year in those six weeks alone leading the design and manufacturing of the robot, and another 300 hours during the rest of the year leading outreach efforts, and now mentor one such robotics team of like-minded students.. We eat, drink, breathe, and live robots.</p>\n<p>Naturally, we have been heavily inspired by the venerated Battlebots series and its counterparts. In the past year, the Battlebots series was given a fantastic reboot, and brought memories of our childhood dreams of robot fighting flooding back.</p>\n<p>Currently, remotely controlled robots are controlled from the sidelines. We believed that everyone should experience robot battles in the most immersive way possible, through the Oculus Rift.</p>\n<h2>What it does</h2>\n<p>Paper Cutz puts the cathartic joy of robot violence inches from your face. Two USB webcams are mounted on a custom pan-tilt mount. This module is mounted to an inexpensive chassis, and controlled by an Arduino.</p>\n<p>The images from the webcams are rendered onto each eye of the Oculus Rift, giving the user fully stereoscopic vision from the robots point of view. In addition, the head tracking data is sent to the Arduino over serial, and the Arduino follows head movements with minimal latency. This quick response time results in a system that is very natural to use.</p>\n<p>Lastly, joystick axes from an Xbox 360 are used to drive the robot over the same serial interface.</p>\n<p>The first thing users do when they don the system is look up at themselves. A common result is a slight giggle.</p>\n<h2>How I built it</h2>\n<p>The chassis and structural components are built out of the most inexpensive materials we could find. The motors, wheels, and baseplate were a total of $10 per bot. The servo motors for the pan tilt were mounted with simple VHB, and the cameras mounted to the pan-tilt module through the inventive use of NXT legos and zip ties.</p>\n<p>The drive system is written as an \u201cArcade Drive,\u201d where throttle and steering controls being used to create an output for the \u201cTank Drive\u201d or differential drive. This is a simple feature added to enhance the user experience as driving a robot built as a tank drive takes extra finesse and is rather unintuitive without controls modifications. The VR version of the robot is driven with an XBox controller, while the pure control version is driven with a Wiimote controller. </p>\n<p>On the user side things get more complex. The codebase here is all in c#. The interface that handles changing head tracking data into sendable data takes the orientation from the centerEye VRNode, remaps the values given by the GetLocalRotation function to values between 0 and 180 for the servo motors. A separate class then grabs this data and encodes it into a ByteBuffer to which the drive controls are added and sent.</p>\n<p>The serial communication is kept to minimal bandwidth, with the entirety of the control system data sent via 4 bytes, one for each servo, and two for the drive system.</p>\n<p>Lastly, webcams images are projected onto planes as WebcamTextures and placed in front of each eye to produce the stereoscopic image. As users wear the rift differently, a callibration function is added, where the image can be slightly shifted using the arrow keys to make the two images match.</p>\n<h2>Challenges I ran into</h2>\n<p>The first involves the Oculus Rift itself. The Oculus Rift runtime technically does not support optimus enabled graphics cards, due to the fact that the external hdmi port is hardwired to the Intel integrated graphics. As my team did not have a desktop with us, we had to download special Nvidia drivers from our own OEMs that allowed the Rift to work.</p>\n<p>Later came the issue of rendering the images from the robot in the same place in front of the user\u2019s eyes, while still acquiring rotation data. Our original plan was to take the prefab code, and hack away and disable the actual rotation of the OVRCameraRig. This would allow us to place the planes in static locations and move the individual eyes apart. This turned out to, unfortunately, not be possible, as the code that actually rotated the prefabs was too integrated into Unity to change. Our workaround was to attach the planes to the cameras themselves, scale them down, and place them extremely close to the eyes. In order for them to remain visible, we had to disable clipping for the camera.</p>\n<p>Lastly, the original code that sent data to the Arduino took the ByteArray that held all of the controls data, encoded it to UTF8, and sent it via serial. For a reason we plan to ascertain after the hackathon, this changes the byte values in the string, causing the data to be incorrect for values above 127. After a difficult diagnosis, we switched to a function that simply sent the array raw.</p>\n<p>Another big challenge we had was with actually controlling the robots. At first, we planned on using Wiimotes, over bluetooth, to communicate and drive the robots. We first tried to write our own protocol in Python to communicate with the Wiimotes, using a bluetooth library called Pybluez. After much struggle, we realized that Pybluez only supported RFCOMM bluetooth communications, while the Wiimotes used L2CAP. We moved onto another library called Wiiuse, which used another C library with the same name. We were able to reliably get gyro and accelerometer readings, but not nunchuck or button output. After struggling with this, we looked at other solutions in the Processing, Java, and C++ languages. Most libraries for the Wiimotes seemed to be outdated and not usable with current bluetooth libraries in those languages. We ended up using a program called FreePIE (Free Programable Input Regulator). This had native support for wiimotes, but is very restrictive on what can be done in this language. A .NET serial communication library was found, and we can now drive our robot using a Wiimote. </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>When we set out to make this project, we set a base goal: Simply make the robots work with the rift. As the day progressed, with issues ranging from \u201cThis byte changed for no visible reason\u201d to \u201cUnity crashes when I attempt to run my code.\u201d we started losing hope that this would be a project that would reach completion. As the day progressed, and with the gracious and generous help of the representatives from Unity, functionality issues were fixed and we were able to, by the beginning of Sunday, complete all of our goals for functionality goals, and were even able to demo the system to some representatives and other teams.</p>\n<h2>What I learned</h2>\n<p>Technically, we gained more literacy in Unity3D, with Arduinos, and in Freepie than we would over a month of free time developement at home.</p>\n<p>There\u2019s more to learn than technical knowledge however. </p>\n<p>We learned over this weekend the true value of experience. Without the presence of the extremely knowledgeable Unity representatives, we would have fain gotten the rift to render images, let alone finalize the control system.</p>\n<p>We also learned the value of proper documentation. There was little documentation when working with controllers, because these controllers were from a few years ago. Documentation seems to be a luxury with retired code, and we need to document everything better for the longevity of a product. </p>\n<h2>What's next for Paper Cutz</h2>\n<p>Next we hope to get our systems wireless. This would mean a wider range of possible attachments (IE: spinners, giant arms and, more area a robot can be controlled in.) After that, making APIs to connect with each robot over the internet would increase how many people can use our platform and could hopefully bring in a new age of competitive robot combat. Because we hope to increase the number of users who are able to experience VR technology we want to add Google Cardboard integration because it is a very cheap VR solution. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/net\">.net</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/oculus\">oculus</a></span></li><li><span class=\"cp-tag\">freepie</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/PaperCutz/PaperCutzRobotFramework\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/PaperCutz/PaperCutzRobotFramework\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I mainly focused on the interface to the Oculus Rift in Unity, setting up the rendering, and using Ravi's Arduino communication APIs and Saikiran's socket communication APIs to send control system data to the robot.", "I worked on communication between the controllers and the Arduino.", "I wrote all the code that controls the arduino and I made the API that sends data over serial for robot computer communication"]], ["TransImage", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"TransImage \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/326/113/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"TransImage \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/326/114/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to make an application that allows users to learn new words in different languages from pictures. </p>\n<h2>What it does</h2>\n<p>This application takes a photo from your camera or library and determines the one word description using AlchemyVision API. Then using the IBM Translator, we translate the single word, such as \"Dog\", into Arabic, French, Spanish, and Portuguese from English.</p>\n<h2>Challenges I ran into</h2>\n<p>Challenges that we ran into was figuring out how callback functions work in javascript</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We are proud of being able to complete the program that we initially conceptuallized</p>\n<h2>What I learned</h2>\n<p>We have learn how to use javascript, parse, and the IBM's API.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/parse\">parse</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/objective-c\">objective-c</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bluemix\">bluemix</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/alchemyapi\">alchemyapi</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/pcherng01/ImageTranslatez\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/pcherng01/ImageTranslatez\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["looking-for-group", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"looking-for-group \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/326/230/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>looking-for-group</h1>\n<p>It's becomingly increasing difficult to meet people nowadays. Looking for group helps you find groups of new people around your area scheduling events and activities! Begin with logging in and verifying with Facebook. Select from a list of categories such as lunch, games, and food. See the number of people attending local events and the recommended age range. Signing up for events is anonymous until a defined time before the event is reached. An event finalizes once a certain time before the event is reached and the minimum number of people is met. You will be able to view the location of the event, to enter a group chat with the other participants, and to view others' ratings and reviews once the event becomes finalized. If the specified minimum number of people isn't reached before the event becomes finalized, the event gets cancelled. After successful events, give reviews and ratings for other users.</p>\n<p>Powered by IBM Bluemix's MongoDB by Compose service and IBM's SDK for Node.js Runtime</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongoose\">mongoose</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bluemix\">bluemix</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag\">mongodb-by-compose</span></li><li><span class=\"cp-tag\">ibm-bluemix-nodejs-sdk</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/allenthich/looking-for-group-server\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/allenthich/looking-for-group-server\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/ggtucker/looking-for-group\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ggtucker/looking-for-group\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Occupation Video Game", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>The War in Iraq was not handled very well.  I always wanted to envision we could have avoided some of the problems we ran into.  Probably the biggest reason we failed is that we did not have a unified policy and dealt with people very haphazardly.  While this game is not nearly as complex as the war, it is based on the discussions we had together.</p>\n<h2>What it does</h2>\n<p>Just a brief mental exercise in coordinating the logistics of allocating soldiers to different provinces.  You will need to do damage control when things go bad and capitalize on the good events that knock the enemy off balance.</p>\n<h2>How I built it</h2>\n<p>Using the C programming language and regular intake of caffeine in its many, wonderful forms.</p>\n<h2>Challenges I ran into</h2>\n<p>Trying to narrow down the list of variables that could be used in-game and what functionalities to include</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>A game that appears simple, but requires a fair amount of long term planning to beat.</p>\n<h2>What I learned</h2>\n<p>Using a series of random number generators can create a primitive probability system that is actually quite robust.</p>\n<h2>What's next for Occupation Video Game</h2>\n<p>Adding in the other features that had to be cut due to time and a better user interface so it doesn't feel like a 90s Oregon Trail game.</p>\n<h2>Submission</h2>\n<h1>include</h1>\n<h1>include</h1>\n<h1>include</h1>\n<h1>include</h1>\n<p>int GarnangHappiness = 25, GarnangInfrastructure = 15;  //scale is from 0 - 100\nint GarnangInsurgency = 40;\nint GarnangTroopCount = 20, GarnangAid_Worker = 2, chance = 0;</p>\n<p>int TaliaHappiness = 35, TaliaInfrastructure = 20;\nint TaliaInsurgency = 45;\nint TaliaTroopCount = 27, TaliaAid_Worker = 6;</p>\n<p>int RalkangHappiness = 20, RalkangInfrastructure = 20;\nint RalkangInsurgency = 30;\nint RalkangTroopCount = 16, RalkangAid_Worker = 0;</p>\n<p>int Approval = 90, Morale = 70, count_bombings = 0, count_sacrifice = 0;</p>\n<p>double Bomb(Insurgency, TroopCount)\n{\n    if (TroopCount &lt; 10 &amp;&amp; Insurgency &gt; 5) return 100; //guarantee of bombing\n    //printf(\"%d\\n\", Insurgency - (TroopCount * 0.1));\n    return Insurgency - (TroopCount * 0.1);\n}</p>\n<p>int Sacrifice(Morale)\n{\n    chance = (rand() % 100) + 60;\n    //printf(\"%d\\n\", chance);\n    if (Morale &gt; chance) return 1; //event will occur\n    else return 0;\n}</p>\n<p>int Hideout(Insurgency, TroopCount)\n{\n    return ((0.75 * TroopCount) + (0.25 * Insurgency));\n}</p>\n<p>void GarnangProvince(num_troop, num_aidworker)\n{\n    int bombing_chance, sacrifice_chance, hideout_chance;</p>\n<pre class=\"language-nolang\"><code>GarnangTroopCount = GarnangTroopCount + num_troop;\nGarnangAid_Worker = GarnangAid_Worker + num_aidworker;\nGarnangHappiness = GarnangHappiness - (GarnangTroopCount * 0.15) + (GarnangAid_Worker * 0.4);\nGarnangInfrastructure = GarnangInfrastructure + (GarnangAid_Worker * 0.4) + 1.5;\nMorale = Morale + (GarnangTroopCount / 50 * 0.1);\nGarnangInsurgency = GarnangInsurgency + ((100 - GarnangHappiness) * 0.1) + ((100 - GarnangInfrastructure) * 0.175) - (GarnangTroopCount * 0.2);\n\nbombing_chance = rand() % 100;\nbombing_chance = bombing_chance + 25;\n//printf(\"%d\\n\", bombing_chance);\nif (Bomb(GarnangInsurgency, GarnangTroopCount) &gt;= bombing_chance)\n{\n    count_bombings = count_bombings + 1;\n    if (rand() % 10 &gt; 5)\n    {\n        chance = rand() % 10;\n        GarnangTroopCount = GarnangTroopCount - chance;\n        printf(\"A bomb has exploded outside a Garnang Province military base!\\n\");\n        printf(\"%d troops were injured or killed.\\n\", chance);\n        Morale = Morale - 3;\n        Approval = (Approval - 5) - (0.5 * count_bombings + 0.5);\n        GarnangInsurgency = GarnangInsurgency + 3;\n    }\n    else\n    {\n        printf(\"A bomb has destroyed a Garnang Province cafe!\\n\");\n        GarnangHappiness = GarnangHappiness - 2;\n        GarnangInfrastructure = GarnangInfrastructure - 4;\n        Approval = (Approval - 4) - (0.5 * count_bombings + 0.5);\n    }\n}\nsacrifice_chance = Sacrifice(Morale);\nif (sacrifice_chance == 1)\n{\n    printf(\"One of your soldiers sacrificed themself to save a civilian in Garnang.\\n\");\n    GarnangTroopCount = GarnangTroopCount - 1;\n    GarnangHappiness = GarnangHappiness + 6;\n    Morale = Morale - 8;\n}\nhideout_chance = rand() % 100 + 40;\n//printf(\"%d\\n\", hideout_chance);\nif (Hideout(GarnangInsurgency, GarnangTroopCount) &gt;= hideout_chance)\n{\n    chance = rand() % 10;\n    GarnangInsurgency = GarnangInsurgency - chance;\n    printf(\"Your soldiers have uncovered an Insurgency hideout in Garnang!\\n\");\n    printf(\"%d enemies captured.\\n\", chance);\n    Approval = Approval + 2;\n}\n</code></pre>\n<p>}</p>\n<p>void TaliaProvince(num_troop, num_aidworker)\n{\n    int bombing_chance, sacrifice_chance, hideout_chance;</p>\n<pre class=\"language-nolang\"><code>TaliaTroopCount = TaliaTroopCount + num_troop;\nTaliaAid_Worker = TaliaAid_Worker + num_aidworker;\nTaliaHappiness = TaliaHappiness - (TaliaTroopCount * 0.15) + (TaliaAid_Worker * 0.4);\nTaliaInfrastructure = TaliaInfrastructure + (TaliaAid_Worker * 0.4) + 1.5;\nMorale = Morale + (TaliaTroopCount / 50 * 0.1);\nTaliaInsurgency = TaliaInsurgency + ((100 - TaliaHappiness) * 0.1) + ((100 - TaliaInfrastructure) * 0.175) - (TaliaTroopCount * 0.2);\n\nbombing_chance = rand() % 100;\nbombing_chance = bombing_chance + 25;\n//printf(\"%d\\n\", bombing_chance);\nif (Bomb(TaliaInsurgency, TaliaTroopCount) &gt;= bombing_chance)\n{\n    count_bombings = count_bombings + 1;\n    if (rand() % 10 &gt; 5)\n    {\n        chance = rand() % 10;\n        TaliaTroopCount = TaliaTroopCount - chance;\n        printf(\"A bomb has exploded outside a Talia Province military base!\\n\");\n        printf(\"%d troops were injured or killed.\\n\", chance);\n        Morale = Morale - 3;\n        Approval = (Approval - 5) - (0.5 * count_bombings + 0.5);\n        TaliaInsurgency = TaliaInsurgency + 3;\n    }\n    else\n    {\n        printf(\"A bomb has destroyed a Talia Province bar!\\n\");\n        TaliaHappiness = TaliaHappiness - 2;\n        TaliaInfrastructure = TaliaInfrastructure - 4;\n        Approval = (Approval - 4) - (0.5 * count_bombings + 0.5);\n    }\n}\nsacrifice_chance = Sacrifice(Morale);\nif (sacrifice_chance == 1)\n{\n    printf(\"One of your soldiers sacrificed themself to save a civilian in Talia.\\n\");\n    TaliaTroopCount = TaliaTroopCount - 1;\n    TaliaHappiness = TaliaHappiness + 6;\n    Morale = Morale - 8;\n}\nhideout_chance = rand() % 100 + 40;\n//printf(\"%d\\n\", hideout_chance);\nif (Hideout(TaliaInsurgency, TaliaTroopCount) &gt;= hideout_chance)\n{\n    chance = rand() % 10;\n    TaliaInsurgency = TaliaInsurgency - chance;\n    printf(\"Your soldiers have uncovered an Insurgency hideout in Talia!\\n\");\n    printf(\"%d enemies captured.\\n\", chance);\n    Approval = Approval + 2;\n}\n</code></pre>\n<p>}</p>\n<p>int RalkangProvince(num_troop, num_aidworker)\n{\n    int bombing_chance, sacrifice_chance, hideout_chance;</p>\n<pre class=\"language-nolang\"><code>RalkangTroopCount = RalkangTroopCount + num_troop;\nRalkangAid_Worker = RalkangAid_Worker + num_aidworker;\nRalkangHappiness = RalkangHappiness - (RalkangTroopCount * 0.15) + (RalkangAid_Worker * 0.4);\nRalkangInfrastructure = RalkangInfrastructure + (RalkangAid_Worker * 0.4) + 1.5;\nMorale = Morale + (RalkangTroopCount / 50 * 0.1);\nRalkangInsurgency = RalkangInsurgency + ((100 - RalkangHappiness) * 0.1) + ((100 - RalkangInfrastructure) * 0.175) - (RalkangTroopCount * 0.2);\n\nbombing_chance = rand() % 100;\nbombing_chance = bombing_chance + 25;\n//printf(\"%d\\n\", bombing_chance);\nif (Bomb(RalkangInsurgency, RalkangTroopCount) &gt;= bombing_chance)\n{\n    count_bombings = count_bombings + 1;\n    if (rand() % 10 &gt; 5)\n    {\n        chance = rand() % 10;\n        RalkangTroopCount = RalkangTroopCount - chance;\n        printf(\"A bomb has exploded outside a Ralkang Province military base!\\n\");\n        printf(\"%d troops were injured or killed.\\n\", chance);\n        Morale = Morale - 3;\n        Approval = (Approval - 5) - (0.5 * count_bombings + 0.5);\n        RalkangInsurgency = RalkangInsurgency + 3;\n    }\n    else\n    {\n        printf(\"A bomb has destroyed a Ralkang Province library!\\n\");\n        RalkangHappiness = RalkangHappiness - 2;\n        RalkangInfrastructure = RalkangInfrastructure - 4;\n        Approval = (Approval - 4) - (0.5 * count_bombings + 0.5);\n    }\n}\nsacrifice_chance = Sacrifice(Morale);\nif (sacrifice_chance == 1)\n{\n    printf(\"One of your soldiers sacrificed themself to save a civilian in Ralkang.\\n\");\n    RalkangTroopCount = RalkangTroopCount - 1;\n    RalkangHappiness = RalkangHappiness + 6;\n    Morale = Morale - 8;\n}\nhideout_chance = rand() % 100 + 40;\n//printf(\"%d\\n\", hideout_chance);\nif (Hideout(RalkangInsurgency, RalkangTroopCount) &gt;= hideout_chance)\n{\n    chance = rand() % 10;\n    RalkangInsurgency = RalkangInsurgency - chance;\n    printf(\"Your soldiers have uncovered an Insurgency arsenal in Ralkang!\\n\");\n    printf(\"%d enemies captured.\\n\", chance);\n    Approval = Approval + 2;\n}\n</code></pre>\n<p>}</p>\n<p>int main()\n{\n    printf(\"Nissinia was once feared as the greatest menace to civilization under their\\n\"); \n    printf(\"Eternal Great Leader.  However, they overstepped their boundaries and made\\n\"); \n    printf(\"one threat too many against your country. One brief war later and your country\\n\");\n    printf(\"controls its broken remains. As the invading general, you are the\\n\"); \n    printf(\"de facto leader and will determine the future of Nissinia.\\n\\n\");\n    printf(\"However, rebuilding this land takes time and already there is talk of an\\n\"); \n    printf(\"'Insurgency' against your country's control.  At the same time, the Nissinians\\n\"); \n    printf(\"are unhappy under foriegn occupation and your countrymen call for their sons to\\n\"); \n    printf(\"return home.  If Nissinia is to never threaten your people again, you must\\n\"); \n    printf(\"rebuild this country, with the support of its people and crush the Insurgency.\\n\\n\"); \n    printf(\"Good luck general, you will need it.\\n\\n\");</p>\n<pre class=\"language-nolang\"><code>int count = 0;\nint num_troop_garnang, num_aidworker_garnang;\nint num_troop_talia, num_aidworker_talia;\nint num_troop_ralkang, num_aidworker_ralkang;\n\n//char select[30];\nsrand((unsigned)time(NULL));\n\n/*printf(\"Select a region to view: \\n\");\nprintf(\"       Garnang\\n\");\n\nscanf(\"%s\", &amp;select);\n\nif (strcmp(select, \"Garnang\") == 0)*/\n\nwhile (Approval &gt; 25)\n{\n    printf(\"Garnang Status: \\n\");\n    printf(\"   Happiness - %d%%\\n\", GarnangHappiness);\n    printf(\"   Infrastructure - %d%%\\n\", GarnangInfrastructure);\n    printf(\"   Troop Count - %d\\n\", GarnangTroopCount);\n    printf(\"   Aid Worker Count - %d\\n\", GarnangAid_Worker);\n    printf(\"   Insurgency - %d\\n\", GarnangInsurgency);\n\n    printf(\"\\nTalia Status: \\n\");\n    printf(\"   Happiness - %d%%\\n\", TaliaHappiness);\n    printf(\"   Infrastructure - %d%%\\n\", TaliaInfrastructure);\n    printf(\"   Troop Count - %d\\n\", TaliaTroopCount);\n    printf(\"   Aid Worker Count - %d\\n\", TaliaAid_Worker);\n    printf(\"   Insurgency - %d\\n\", TaliaInsurgency);\n\n    printf(\"\\nRalkang Status: \\n\");\n    printf(\"   Happiness - %d%%\\n\", RalkangHappiness);\n    printf(\"   Infrastructure - %d%%\\n\", RalkangInfrastructure);\n    printf(\"   Troop Count - %d\\n\", RalkangTroopCount);\n    printf(\"   Aid Worker Count - %d\\n\", RalkangAid_Worker);\n    printf(\"   Insurgency - %d\\n\", RalkangInsurgency);\n\n    printf(\"\\nOverall Troop Morale - %d%%\\n\", Morale);\n    printf(\"Public Approval - %d%%\\n\", Approval);\n\n    printf(\"\\nTroop allocation for Garnang: \");\n    scanf_s(\"%d\", &amp;num_troop_garnang);\n    printf(\"Number of international aid workers to send to Garnang: \");\n    scanf_s(\"%d\", &amp;num_aidworker_garnang);\n\n    printf(\"\\nTroop allocation for Talia: \");\n    scanf_s(\"%d\", &amp;num_troop_talia);\n    printf(\"Number of international aid workers to send to Talia: \");\n    scanf_s(\"%d\", &amp;num_aidworker_talia);\n\n    printf(\"\\nTroop allocation for Ralkang: \");\n    scanf_s(\"%d\", &amp;num_troop_ralkang);\n    printf(\"Number of international aid workers to send to Ralkang: \");\n    scanf_s(\"%d\", &amp;num_aidworker_ralkang);\n    printf(\"\\n\");\n\n    GarnangProvince(num_troop_garnang, num_aidworker_garnang);\n    TaliaProvince(num_troop_talia, num_aidworker_talia);\n    RalkangProvince(num_troop_ralkang, num_aidworker_ralkang);\n    printf(\"\\n\");\n\n    count++;\n    if (count &gt; 8) break;\n}\n\nprintf(\"\\n\");\nif (GarnangInsurgency + TaliaInsurgency + RalkangInsurgency &gt;= 300)\n{\n    printf(\"Ending 1: \\n\");\n    printf(\"  Nissinia is taken over by the insurgency who installs a new\\n\");\n    printf(\"  oppressive government and kills everyone who disagrees with their doctrine. \\n\");\n    printf(\"  It is the beginning of a long period of violence.\\n\");\n}\nelse if (GarnangInfrastructure + TaliaInfrastructure + RalkangInfrastructure &lt;= 150 &amp;&amp; Morale &lt; 50)\n{\n    printf(\"Ending 2: \\n\");\n    printf(\"  Formerly occupied Nissinia is propped up by your aid and corruption flourishes. \\n\");\n    printf(\"  When you finally stop supporting them, they will fall to the Insurgency.\\n\");\n}\nelse if (GarnangHappiness + TaliaHappiness + RalkangHappiness &lt;= 150)\n{\n    printf(\"Ending 3: \\n\");\n    printf(\"  The Nissinian civil war rages with neither side able to \\n\");\n    printf(\"  gain a decisive advantage over the other.  As with all wars, the ultimate \\n\");\n    printf(\"  losers are the people of Nissinia.\\n\");\n}\nelse\n{\n    printf(\"Ending 4: \\n\");\n    printf(\"  Nissinia becomes a free democracy with an enlightened public and a \");\n    printf(\"  faithful ally to your country.  You support each other for many, many years.\\n\");\n}\n\nprintf(\"Congrats!  You survived for %d turns.\\n\", count);\n</code></pre>\n<p>}</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c\">c</a></span></li></ul>\n</div>\n</div>", [""]], ["Esports Tournament Bracket", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>HackUCI 2015</p>\n<p>Develop a tournament organization application that allows organizers to keep track of and update team information and create brackets to set up tournament style play. Designed with an emphasis on esports.</p>\n<p>What is the criteria?\nCreate an esports event/tournament management and bracket application.\nApplication needs\nAll standard tournament formats\nCustomizable\nCheck in interface\nScore/result updates</p>\n<p>RUN THROUGH \"tourney_info_window.py\"</p>\n<p>After throwing away a previous project from aiming a bit too high and being a relatively new team of hackers, we used what experience and time we had left to create an esports tournament bracket creator. We agreed later that taking the time to full set up a cleaner software engineering process would allow for smoother collaboration overall.</p>\n<p>What we accomplished:\n-tourney display window that takes in tournament style, game type, series type, and finals series type (drop down menus)\n-check in window that adds teams to the program, adds in player data to teams, and displays that teams players (must \nfirst select a team after creating one; drop down menu)\n-the logic to simulate an entire single elimination tournament (creates bracket based on number of teams, accounts for first round byes, eliminates teams upon selecting winners, putting byes on correct sides of the tournament)\n-the gui for the single elimination tournament upon starting the tournament (displays the teams in the first 2 rounds correctly)</p>\n<p>Unfinished:\n-connecting the files so that the logic could update with manual input, not test statements\n-updating the gui as the tournament progresses</p>\n<p>Original end goals:\n-fancier gui\n-selection of bracket types\n-accounting for different game types\n-direct gui interaction\n-gui displays team/game info</p>\n<p>Contributors:\nHoward Liu - tourney display window\nVivian Thach and Henry Tran - check in window (create teams, add players (must select a team), display players (must select a team))\nRyan Chan and Aaron Ching - single elimination logic, bracket gui </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/howardl2/Lockaflocka\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/howardl2/Lockaflocka\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Shut-Up-and-Escape-With-Me", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Shut-Up-and-Escape-With-Me \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/326/144/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to experiment with virtual reality applications and how to integrate them into Unity projects.</p>\n<h2>What it does</h2>\n<p>It is a randomly generated traversable maze with monsters also randomly spawned throughout it. There are a few tools available to the player in order to successfully complete the maze. These tools include icons that can be used on the walls of the maze as markers and a remote drone for exploring the area ahead of you. When using the drone, the VR camera switches to the vision of the drone which is used to seek out monster locations. Whenever a drone runs over a monster location it is marked with a red mist to signify that it is a dangerous area.</p>\n<h2>How we built it</h2>\n<p>We built it using Unity 5.2 and various files from the Oculus DK.</p>\n<h2>Challenges we ran into</h2>\n<p>Learning how to integrate the virtual reality kit with the Unity 5 engine. We had a lot of trouble attaching a first person camera using the Oculus to a pre-made 3D model, but we eventually were able to figure it out.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Despite having never touched Oculus, we were able to make a full working prototype of a game that is played different every time!</p>\n<h2>What we learned</h2>\n<p>Just because one is unfamiliar with a tool, doesn't mean he can't learn how to use it.</p>\n<h2>What's next for Shut-Up-and-Escape-With-Me</h2>\n<p>If enough people like it, we may consider refining the scripts and integrating a pathfinding AI to all the enemies to allow our game to have a more immersive horror experience.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/asp-net\">asp.net</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/glsl\">glsl</a></span></li><li><span class=\"cp-tag\">mask</span></li><li><span class=\"cp-tag\">objective-c++</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/objective-c\">objective-c</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/eaho1/Shut-Up-and-Escape-With-Me\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/eaho1/Shut-Up-and-Escape-With-Me\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["BeerB", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>//todo implement later</h1>\n<h2>Inspiration</h2>\n<p>WE LOVE BEER</p>\n<h2>What it does</h2>\n<p>Rate beer and their flavor profiles. And discover beer!</p>\n<h2>How I built it</h2>\n<p>Using lots of beer and code.</p>\n<h2>Challenges I ran into</h2>\n<p>Not enough beer provided.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Shotgunned beer.</p>\n<h2>What I learned</h2>\n<p>How to beer.</p>\n<h2>What's next for Beer app</h2>\n<p>Beer.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/apache\">apache</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ionic\">ionic</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/laravel\">laravel</a></span></li><li><span class=\"cp-tag\">eloquent</span></li></ul>\n</div>\n</div>", ["", ""]], ["Roll a ball with Kinect", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to learn Unity!</p>\n<h2>What it does</h2>\n<p>You lean left to get the ball to move!</p>\n<h2>How I built it</h2>\n<p>We used Unity and the Kinect</p>\n<h2>Challenges I ran into</h2>\n<p>It was difficult to integrate the gestures and the Kinect movements into the game that we created in Unity.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Making the ball move based on our leaning motion was really exciting!</p>\n<h2>What I learned</h2>\n<p>I learned how to use Unity and connect it to gestures trained in the Kinect.</p>\n<h2>What's next for Roll a ball with Kinect</h2>\n<p>We want to integrate movement to the right.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/kinect\">kinect</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/visual-studio\">visual-studio</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/alexandriamar/RollerBallKinect\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/alexandriamar/RollerBallKinect\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["eSport Arena ios app", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"eSport Arena ios app \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/326/152/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"eSport Arena ios app \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/326/153/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<h2>What it does</h2>\n<p>log in, check in , registration </p>\n<h2>How I built it</h2>\n<h2>Challenges I ran into</h2>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<h2>What's next for eSport Arena ios app</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">built-in-swift</span></li></ul>\n</div>\n</div>", ["", ""]], ["Friendboard", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Friendboard \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/326/131/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We enjoy having wacky conversations over the phone with our friends, and there's times when they something so hilarious that we want to capture it for posterity. We decided it would also be something that people of all ages can have fun with. This is how we came up with the idea for Friendboard.</p>\n<h2>What it does</h2>\n<p>Friendboard records a phone conversation of you and your friend(s) and splits the conversation into smaller .wav files that represent sentences in the conversation. With those individual .wav files, we assign them to individual buttons (with the text of speech labeled) to create a soundboard which can be replayed an infinite amount of times!</p>\n<h2>How we built it</h2>\n<p>We developed it using Android Studio for smartphones with Android OS. We created a simple UI where the user will input a phone number and press the \"Call\" button, which will initiate the call using Android's default call application. In the background, we record the conversation into one big .wav file, which is then split into individual .wav files containing sentences from the call. With the help of Microsoft's Oxford Project Speech API, we were able to convert those .wav files to text which would then be used as labels for the soundboard buttons. </p>\n<h2>Challenges we ran into</h2>\n<p>One challenged we faced was attempting to find an API that would take an audio file/sound clip and convert it to text. Two members of our team spent the majority of Friday night trying to find a suitable speech to text API to use. Eventually we stumbled across Microsoft's Oxford Project Speech API that was able to convert a sound clip to text.</p>\n<p>Another challenge was finding a way to split the recorded conversation into individual sound clips. The Oxford Project Speech API only converts sound clips into text, and it enforces an maximum limit of 2 minutes for sound clips. As we needed to also store individual sound clips to play back to the user, we needed to determine a way to mark activity in the conversation and split it into separate .wav files. 1-2 members researched into analyzing sound clips and, with the help of the Java musicg library, implemented a custom function to analyze a recorded conversation and output the spliced conversations.</p>\n<p>There was also a bug where the label of the buttons for our soundboard, although they played the appropriate sound clip, had generic labels (#1, #2, #3, etc.) instead of the text generated form the Project Oxford Speech API.</p>\n<h2>Accomplishments that we're proud of</h2>\n<ul>\n<li>We were able to record a phone conversation between friends into a .wav file.</li>\n<li>We were also able to splice it into individual sound clips containing mostly complete sentences by analyzing and marking the activity in the conversation using Fast Fourier Transform libraries (musicg).</li>\n<li>We were able to send individual sound clips to Microsoft's Project Oxford Speech to Text API.</li>\n</ul>\n<h2>What we learned</h2>\n<ul>\n<li>We learned a lot on Android Studio and would like to continue to develop apps on the IDE.</li>\n<li>We also learned how to manipulate .wav files using external libraries and cut it into smaller .wav files, each carrying a sentence or phrase of the phone conversation.</li>\n<li>We learned how to learn and implement complex APIs such as Microsoft's Project Oxford Speech to Text API and navigate how to implement its results into our app.</li>\n</ul>\n<h2>What's next for Friendboard</h2>\n<p>Friendboard is still trying to work around some bugs that prevent it from its full potential. 36 full hours is not enough for the complexities that Friendboard possesses, but we will continue to work on Friendboard after HackUCI.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag\">musicg</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/microsoft-project-oxford\">microsoft-project-oxford</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/tonynd/Friendboard\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/tonynd/Friendboard\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Esports Brackets", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>//Fill Later</p>\n<h2>Inspiration</h2>\n<h2>What it does</h2>\n<h2>How I built it</h2>\n<h2>Challenges I ran into</h2>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<h2>What's next for Esports Brackets</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["Road Angel", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Road Angel \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/326/093/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>Pedestrians, drivers and workers alike are exposed to risks of being involved in dangers due to unforeseen circumstances. The idea is to provide an extra safety device on the road that will decrease the likelihood of accidents. Our original idea In order to build the device we used 2 LEDs, a breadboard, an Arduino Uno,  an ultra-sonic sensor, two resistors, a buzzer, and Microsoft virtual shield.</p>\n<p>In order to build it, we used several wires to connect the breadboard onto the Uno. We then hooked up the ultrasonic sensor and we used the serial monitor in order to display changes in distance. This will prompt the buzzer and LEDs to activate if reach a certain threshold. Later we hooked up a Microsoft smartphone and used the Windows 10 virtual shield feature for Azure Blob in order to connect to Microsoft azure and upload the info onto the cloud. </p>\n<p>About 75% of the things we wanted to implement during the hackathon malfunctioned or had hardware issues. We wanted to use a Lilypad arduino and sew it into a safety vest as an indicator and use a a traffic as motion sensor that would go off when it sensed a car coming toward it at dangerous speed. It would also send info to the cloud through a particle photon for legal purposes. We had to improvise because the processor for the lilypad was malfunctioning and the WiFi for the Esports arena had a lot of downtime.</p>\n<p>I was very fascinated by a lot of the stuff I learned about electrical engineering and it was very satisfying getting the arduiono working.</p>\n<p>We hope our idea can be a template for road safety devices and save lives.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag\">microsoft-windows-10-for-arduino</span></li></ul>\n</div>\n</div>", ["Programmer and co-organizer. \n\nProgrammed the Photon Particle (a hardware we ended up not using), verify arduino code was working as intended, and coordinated presentation.", "Team leader and programmer.", "", ""]], ["AimHigh", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"AimHigh \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/326/215/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We are lazy to keep exercising. But we need to do it since health is the most important factor for our livingness. Now, we have greater opportunities to access to user's health related data with the evolvement of health related IoT devices and API. We wanted to create something that purely motivate people to keep exercising leveraging the data and gamified online environment.</p>\n<h2>What it does</h2>\n<p>It allows users to do following actions\na. Setting up an individual exercising goal ( Activities types [Walking, Running, Biking, etc.. ], Time, Date )\nb. Setting up a group exercising goal ( Activities types [Walking, Running, Biking, etc.. ], Time, Date )\nc. Setting up a exercising competition ( Activities types [Walking, Running, Biking, etc.. ], Time, Date )\nd. Viewing exercise progress with beautiful visualisation ( Steps Count, Distance to exercise, Duration to Exercise, Calories to burn)\ne. Share your goal and progress to others within community or to social network services</p>\n<h2>How we built it</h2>\n<ol>\n<li>Build an access to Google Fit API</li>\n<li>Pursing data stream to JSON</li>\n<li>Built client side with Meteor</li>\n<li>Connected front-end and back-end</li>\n</ol>\n<h2>Challenges We ran into</h2>\n<p>Connecting technical components such as Meteor framework and APIs.</p>\n<h2>Accomplishments that we are proud of</h2>\n<p>We learned a lot... and this team is amazing...!</p>\n<h2>What we learned</h2>\n<p>How to manage APIs, efficient team communication, and how to adopt to new technologies quickly.</p>\n<h2>What's next for AimHigh</h2>\n<p>Integrating with bootstrap.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/meteor-js\">meteor.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag\">google-fitness-api</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/d3-js\">d3.js</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://aimhigh.meteor.com\" rel=\"nofollow\" target=\"_blank\" title=\"http://aimhigh.meteor.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>aimhigh.meteor.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Unavoidable", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Unavoidable \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/326/158/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Unavoidable \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/326/159/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Unavoidable \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/326/160/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We have gathered as a team with pure admiration for Oculus Rift, and to maximize its full potential, we decided to create a horror game in Unity. Even though most members were not familiar with either Unity or C#, we managed to create a finished product in the end!</p>\n<h2>What it does</h2>\n<p>It will scare you. Just grab an Oculus Rift and jump in :)</p>\n<h2>How I built it</h2>\n<p>It would be great if I could explain how we built it, but at this very moment, I am a bit too exhausted to remember everything we did during the project. We have used a free graphics and sound asset that is available in Unity Asset Store, but the level design, the enemy AI, and the main menu UI were all created by us.</p>\n<h2>Challenges I ran into</h2>\n<p>The biggest challenge was our familiarity with Unity. Once we passed that hurdle, we realized that Oculus Rift requires a computer with high spec graphics card, which none of us had. In the end, we built our game without actual testing until the very end. We borrowed a fellow hacker's awesome laptop to test our finished game at the end (which was an awesome experience). Also, I personally struggled to stay awake for 2 days in a row, since my stamina is lacking.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>What else can I say? We created what we wanted to create (in time!).</p>\n<h2>What I learned</h2>\n<p><strong>OCULUS RIFT IS AWESOME</strong></p>\n<h2>What's next for Unavoidable</h2>\n<p>Right now, Unavoidable is in its early alpha stage. It has a core function where a player can enjoy, but it doesn't have the necessary details to fully express the depth of our intended horror. Also, most of the works we created were all made without using Git (OH NO!), so hopefully, my teammates are still willing to update our game in the future when they have time. But since we don't personally own Oculus Rift, we will probably lose our interest quite soon. It's time to create a next game!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/woo00154/Unavoidable\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/woo00154/Unavoidable\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I love Unity! I had never used C# before, but apparently the only parts that require scripts could be done with the help of the Internet. I worked on enemy AI algorithm and graphics. ", ""]], ["3D Graphics Engine", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We were interested in 3D graphics and wanted to try implementing some stuff.</p>\n<h2>What it does</h2>\n<p>You can look around the cube in the center of the screen.</p>\n<h2>How I built it</h2>\n<p>We used c++ to implement it.</p>\n<h2>Challenges I ran into</h2>\n<p>The linear algebra required for the project was difficult and we weren't able to fully fix the move vector.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We were able to transform a 3D point into a 2D space.</p>\n<h2>What I learned</h2>\n<p>We learned about the different matrix transformations required to convert a 3D point and some miscellaneous information about 3D graphics engines.</p>\n<h2>What's next for 3D Graphics Engine</h2>\n<p>We would like to fix the bug and maybe implement a feature where you can add different shapes to the viewport.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/allegro\">allegro</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/kloofe/GraphicsEngine\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/kloofe/GraphicsEngine\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["GestureBot", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/Rk3B7ZzJPLU?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Our ultimate goal was to have an autonomous robot send information of its surrounding for us to visually map into Unity. This project is a proof of concept for this.</p>\n<h2>What it does</h2>\n<p>A small robot follows the path drawn on a computer via Unity. The user uses swipes/gestures to draw the path on screen. </p>\n<h2>How I built it</h2>\n<p>The client-side of the project is built on Unity. C# is used to create the socket on the client-side as well as the path drawing interface, while Java is used to create the socket on the server-side that is in Raspberry Pi.To build the robot, we sent 4.5 volts to a circuit connected to motors that we built on a breadboard and attached the components to a wooden block with duct tape.</p>\n<h2>Challenges I ran into</h2>\n<p>Trying to connect to the Raspberry Pi via local Wi-Fi was a challenge to us as the IP addresses kept changing. Also, we had to build the robot using motors that moved at different rates, so we had to constantly adjust the motors so that both wheels moved at the same rate.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We're proud that we successfully created a project that combined software and hardware and utilizes TCP sockets, opening the ability to communicate world wide.</p>\n<h2>What I learned</h2>\n<p>We learned that transistors blow up very easily and that even simple tasks take a long time when sleep-deprived.</p>\n<h2>What's next for GestureBot</h2>\n<p>The next goal is to add sensors to the robot so it can detect obstacles and walls around it and have it move autonomously.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag\">raspberry-pi-2</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://Astrocity@bitbucket.org/hackuci/unity-sockets.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://Astrocity@bitbucket.org/hackuci/unity-sockets.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>bitbucket.org</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the socket communication of the client-side.", "I worked on the circuit construction and Raspberry Pi programming.", "I contributed by working on the socket communication, most notably on the server. Also helped with testing ", ""]], ["Fashendz", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Our application helps you decide what to wear and keeps you up to date with the latest trends without much trouble</p>\n<h2>What it does</h2>\n<p>Scans barcodes of clothing items, stores them in a \"virtual closet\" and recommends the best option within and outside your closet. </p>\n<h2>How I built it</h2>\n<p>Using Java, Python, Azure, Git and Android API.</p>\n<h2>Challenges I ran into</h2>\n<p>We do not have access to the server.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We figured out the algorithm!</p>\n<h2>What I learned</h2>\n<p>You don't grow if you dont fail.</p>\n<h2>What's next for Fashendz</h2>\n<p>Planning to expand it into startup.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/azure\">azure</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/git\">git</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/cnavasca59/VirtualWardrobeStylistv2\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/cnavasca59/VirtualWardrobeStylistv2\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on designing the mock up and user interface of the application using Balsamiq. Furthermore, I suggested the initial idea proposal, business model and the future scope for the development of the application.", "I helped work on the back end of things. It was my first time trying to interface with Azure, which took up basically my entire day to get a server up to use. We started programming in C++ but eventually switched to Python when I realized we needed it to use Azure. ", "I designed the user interface and layout design for the application. I also was able to brainstorm the algorithm and formula to solve the main engine of the application. ", ""]], ["Hom.io", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Hom.io \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/326/146/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Hom.io \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/326/147/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Hom.io \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/326/148/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Hom.io \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/326/149/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Hom.io \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/326/154/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Hom.io \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/326/181/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>Hom.io</p>\n<p>A smarter home concept that takes in human and environment inputs, then outputs an energy conscious home.\nPeople want to have their houses at their preferred temperatures, humidity, etc, but often ties, there is a large excess in energy waste!</p>\n<p>Hom.io provides a user interface to change your home's settings for when lights should be on/off, temperature, humidity. </p>\n<p>Based on your settings, Hom.io will automatically ...</p>\n<ul>\n<li>open/close your curtains to bring in natural sunlight to warm your home</li>\n<li>open/close the windows to cool/warm your home and bring in fresh air</li>\n<li>open/close doors to regulate temperatures/humidity between rooms</li>\n<li>automatic lighting based on activity in the room and time of day</li>\n</ul>\n<p>Our team learned a vast amount using a PaaS (Platform as a Service) with Bluemix for the first time. We also learned about Full Stack Web Development and the Intel Edison.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bluemix\">bluemix</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/intel-edison\">intel-edison</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li></ul>\n</div>\n</div>", ["", "", "", ""]], ["Temp. and Humidity  puller from azure to Android ", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Temp. and Humidity  puller from azure to Android  \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/326/218/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Temp. and Humidity  puller from azure to Android  \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/326/219/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Last minute idea when Microsoft gave free Photon. Initial intention was to learn android. I felt I could merge the ideas.  </p>\n<h2>What it does</h2>\n<p>Using the Particle Photon sensor paired with Microsoft's Azure, I pull Temperature and Humidity reading into a cloud based message queue.With the intention of being able to pull these readings </p>\n<h2>How I built it</h2>\n<p>Using Visual Studio to set up an Azure service bus, storage account, and web apps, I had the Photon send it's reading to the cloud. While trying to build my first android app to read from the service bus.</p>\n<h2>Challenges I ran into</h2>\n<p>The Photon needed a steady WiFi signal, so I had to install a hotspot application to route the traffic though ethernet cable on my  laptop. when setting service bus, the services I used had built in bug which cause me to redo the set up multiple time. I had chosen the wrong service for optimal communication to android from Azure. </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I have something to show. By that I mean, I took on more than I could chew. I forced myself to learn to environments I was unfamiliar with.</p>\n<h2>What I learned</h2>\n<p>I feel that I have a greater grasp of Azure and other Microsoft product. I feel I also learn Android a  great deal. </p>\n<h2>What's next for Temp puller from azure</h2>\n<p>I hope to finish it.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/azure\">azure</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/visual-studio\">visual-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag\">best-microsoft-hack</span></li></ul>\n</div>\n</div>", [""]], ["Bookstir", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We are sick of over prized books and of over complicated exchange services. We want to keep textbook exchange simple - from student to student.</p>\n<h2>What it does</h2>\n<p>Follows the simple philosophy of a bulletin board where students can buy and sell their books to other college students. </p>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://test1uci.cloudapp.net/ucihack3\" rel=\"nofollow\" target=\"_blank\" title=\"http://test1uci.cloudapp.net/ucihack3\">\n<i class=\"ss-icon ss-link\"></i>\n<span>test1uci.cloudapp.net</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", "", ""]], ["Pong Around", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/q-rOp68aQbg?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Pong Around \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/326/128/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Pong Around \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/326/172/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Pong Around \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/326/178/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>There aren't enough great virtual reality multiplayer games around. Our goal was to make a smooth, quick to pick up, and fun game employing the use of virtual reality through Google Cardboard.</p>\n<h2>How we built it</h2>\n<p>We started with the simple idea of 3D Pong using Google Cardboard. From there it morphed into Pong Around. Our team of three is perfectly balanced between two coders and an amazing artist/designer/UX/UI extraordinaire. This allowed us to divide tasks up rather quickly. There was a lot of unknowns going into this project. We had to get networking going from a rather new system. So naturally one of the programmers went right into learning about and making the network work and the other delved into the game. This allowed the game to be developed mechanics and all before bringing in player two. This simplified the production as well as created a better user experience. While this was going on, our artist teammate created sprites and some general ideas about look and flow.</p>\n<h2>Challenges we ran into</h2>\n<p>During development of the multiplayer network we kept running into timeout issues. After significant research we narrowed it down to running out of bandwidth. But we weren't sending very much data! We realized that the type of data we were sending was what was causing the issue. We were sending the location of object stored in a vector. In sending that vector the system didn't just send the X,Y and Z, but it also serialized the getters and setters and creating an extremely bloated piece of data!</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are proud of the whole system. The game is easy to pick up. We can hand it to someone with very little explanation and they know exactly what to do. The networking was the most challenging part. We worked with Unity's new UNET system which is still lacking full documentation. But we got it working and it plays great. To top it of, we polished the game including in cute little sprites and music! We even added music we created at the hackathon!</p>\n<h2>What's next for Pong Around</h2>\n<p>We need to make a lobby system for multiplayer as well as allowing users to choose the match to enter so as to play with friends. With those two things we have a game ready to hit the play store and the app store!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/glsl\">glsl</a></span></li><li><span class=\"cp-tag\">vr</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-cardboard\">google-cardboard</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/iangoegebuer/LADN\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/iangoegebuer/LADN\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I spun up the networking basics while the game was being constructed, and made the music and audio.", "", ""]], ["Care", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Care \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/326/180/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Parent care</p>\n<h2>What it does</h2>\n<p>Monitors Child </p>\n<h2>How I built it</h2>\n<p>Hardware + software</p>\n<h2>Challenges I ran into</h2>\n<p>hardware + software</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>hardware + software</p>\n<h2>What I learned</h2>\n<p>hardware + software</p>\n<h2>What's next for Care</h2>\n<p>more advanced hardware + software</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bluemix\">bluemix</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/intel-edison\">intel-edison</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag\">grove-sensors</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/eclipse\">eclipse</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://care.mybluemix.net/index.html\" rel=\"nofollow\" target=\"_blank\" title=\"http://care.mybluemix.net/index.html\">\n<i class=\"ss-icon ss-link\"></i>\n<span>care.mybluemix.net</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["No Cheese", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>Will fill in later!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://drive.google.com/folderview?id=0B4S0N-9-_PwzdHJqYU1fRnA5NnM&amp;usp=sharing\" rel=\"nofollow\" target=\"_blank\" title=\"https://drive.google.com/folderview?id=0B4S0N-9-_PwzdHJqYU1fRnA5NnM&amp;usp=sharing\">\n<i class=\"ss-icon ss-link\"></i>\n<span>drive.google.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["We Have Now Become Game", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<h2>What it does</h2>\n<p>It's a game!</p>\n<h2>How I built it</h2>\n<p>In Unity with C#.</p>\n<h2>Challenges I ran into</h2>\n<h2>Accomplishments that I'm proud of</h2>\n<h2>What I learned</h2>\n<h2>What's next for We Have Now Become Game</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li></ul>\n</div>\n</div>", [""]]]