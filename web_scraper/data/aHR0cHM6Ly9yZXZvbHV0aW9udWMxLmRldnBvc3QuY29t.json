[["Help, Actually", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Help, Actually \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/423/915/datas/gallery.jpg\"/>\n<p>\n<i>Help, Actually in action</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Since hurricane Matthew tore through Haiti last week, we've been seeing posts shared about how charities such as The American Red Cross and The Clinton Foundation accepted millions of dollars in aid after the horrific earthquake devastated the nation and created nothing but false hope and poorly implemented temporary solutions. Charities like Autism Speaks have faced strong opposition from those they're supposedly speaking for, and some charities squander more money than they take in on professional fund-raising and CEO salaries, like the Kids Wish Network. We wanted a way for potential donors to see why they might not want to support some charities, while simultaneously providing options that would our users to donate to more effective organizations. So we designed a Chrome extension to help guide users through this process.</p>\n<h2>What it does</h2>\n<p>When you arrive at a questionable charity's website, the extension icon becomes highlighted and click-able. Clicking on the icon pops up a small window that displays the rating issued by Charity Navigator (a third party service that ranks financial transparency and accountability), several alternate charities that work for similar causes, and news articles related to the charity in question - sometimes the Charity Navigator rating doesn't tell the whole story.</p>\n<h2>How we built it</h2>\n<p>It's a pretty standard Chrome extension, built with HTML and JavaScript. At the moment we're using a relatively small, hand-curated list of charities and alternatives. We scraped news articles using Python and the Google Custom Search API, and used IBM's Bluemix to do sentiment analysis to single out the negative articles on a given charity.</p>\n<h2>Challenges we ran into</h2>\n<p>Initially, we struggled to get links and images to display in the extension pop-up. All of the charity evaluating and ranking organizations that we could find neither provided an API nor responded to our request to use their paid service. We tried brute-force search-scraping with Python, but iterating through every entry on Charity Navigator to pull ratings and charity home-pages was a slow process that inevitably timed out and left us with an incomplete data set. We divided the labor for coding the front-end and having two people making commits to the same file simultaneously caused some errors to come up. Bluemix was tricky to get running on our data, though it saved us a lot of time in the end.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We created a functional extension that addresses a real world problem. We incorporated and utilized various technologies and libraries we'd never worked with before, including IBM's Bluemix and Google's Custom Search API. </p>\n<h2>What we learned</h2>\n<p>First and foremost, we learned the process of writing a functional Chrome extension. We gained proficiency in using Bluemix to process text for sentiment, and improved our knowledge of both scraping and JSON parsing.</p>\n<h2>What's next for Help, Actually</h2>\n<p>With access to the Charity Navigator API, we could more effectively create a database of charities and their ratings and web pages. We could create a scalable solution that deals with every charity in Charity Navigator's database, and use Bluemix to gauge the sentiment of any news articles the charity appears in to provide a quantitative and qualitative assessment of any charity the user navigates to. We would also like to port to Firefox and Opera.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bluemix\">bluemix</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://bitbucket.org/earlhamrevuc/chromeextension/src\" rel=\"nofollow\" target=\"_blank\" title=\"https://bitbucket.org/earlhamrevuc/chromeextension/src\">\n<i class=\"ss-icon ss-link\"></i>\n<span>bitbucket.org</span>\n</a></li>\n<li><a href=\"http://www.helpactually.com\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.helpactually.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.helpactually.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I spent time aggregating data about charities and pursuing API solutions, and eventually scraping data from Charity Navigator.", "I worked on using Google Custom Search API to scrape news articles about charities from multiples news sources, and using AlchemyLanguage API to analyze the sentiment of the articles, and provide users with relevant articles.", "I worked mainly on the front-end development and design. I spent most of my time getting the links to display properly.", "I worked mostly on the back-end with the url and data queries. I spent some time implementing google custom search api and chrome.* apis"]], ["Smart434", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/hiEwXCWSEy8?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Smart434 \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/424/148/datas/gallery.jpg\"/>\n<p>\n<i>The device</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Smart434 \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/424/135/datas/gallery.jpg\"/>\n<p>\n<i>Radio Packet</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Smart434 \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/424/136/datas/gallery.jpg\"/>\n<p>\n<i>Node Red</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Smart434 \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/424/138/datas/gallery.jpg\"/>\n<p>\n<i>Wireless Signal</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>The goal of the Internet of Things (IoTs) is to make everyday objects connected and smarter to shape our environment. Currently, every device requires internet-connected electronics. This model is not scalable or affordable. There are off-the-shelf products that exist, which are not internet-connected, however have wireless infrastructure. </p>\n<p>Our project aims to exploit these devices to build an Internet hub that acts as a gateway for the rest of the not-so-smart devices. Our example target is a set of electrical outlets are both easily accessible on Amazon and controllable by a 433 MHz signal (non-WiFi), commonly used for home lighting automation.</p>\n<h2>What it does</h2>\n<p>Voice commands spoken to an Amazon Echo are sent to the IBM IoT platform for parsing. The IBM platform sends the appropriate commands to an Internet-connected Raspberry Pi running IBM\u2019s Node Red service. The commands to turn on or off lights are translated into radio packets that mimic the bursts sent by the included remote control, adjusting the ambient lighting to each of the user\u2019s request.</p>\n<h2>How we built it</h2>\n<p>Our team reverse-engineered the remote protocol using a software-defined radio (SDR) and audio waveform tools. We used a 434 MHz transmitter connected to a Raspberry Pi to send the signal to the outlets.</p>\n<p>The Raspberry Pi was registered as a device on our Bluemix IoT Platform instance, meaning that the Bluemix Node Red flow could feed into the flow running locally on the Pi. Using the Amazon's developer tools, we created custom skills for Amazon Echo. After a vocal cues, the Amazon Echo was configured to send to an HTTP endpoint opened on Bluemix. Bluemix filtered and parsed the vocal intents and routed them appropriately to the Pi.</p>\n<h2>Challenges we ran into</h2>\n<p>No member of our group has ever used a Raspberry Pi prior to this Hack-a-thon. In addition, we had no prior experience with Bluemix or Amazon's developer tools. As a result, there was a steep learning curve for integration of these numerous services.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p><strong>8PM:</strong> Reverse-engineering of the protocol</p>\n<p><strong>2AM:</strong> Emulation of the protocol on the Raspberry Pi</p>\n<p><strong>4AM:</strong> Two-way communication between the Raspberry Pi and Bluemix</p>\n<p><strong>7AM:</strong> Getting the Amazon Echo to communicate with Bluemix</p>\n<p><strong>8AM:</strong> When the light finally responded to voice for the first time (way later in the game than we expected)</p>\n<p><strong>11AM:</strong> Stable, repeatable voice actions</p>\n<p><em>Refinement, refinement, refinement...</em></p>\n<h2>What we learned</h2>\n<p>Raspberry Pi, Bluemix IoT, Amazon Echo skill development, and team collaboration. Once we were all invested and sold on the same idea, we surprised ourselves in what we have been able to accomplish in such a short time. Great collaboration leads to even greater innovation.</p>\n<h2>What's next for Smart434</h2>\n<p>Publish a guide to help other hackers set up this easy-to-use hub themselves. Refine the interaction with Amazon Echo.</p>\n<h2>Punny Domain</h2>\n<p>itMegahertzWhenIP.com</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bluemix\">bluemix</a></span></li><li><span class=\"cp-tag\">iot</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ibm-watson\">ibm-watson</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-alexa\">amazon-alexa</a></span></li><li><span class=\"cp-tag\">electronics</span></li><li><span class=\"cp-tag\">node-red</span></li></ul>\n</div>\n</div>", ["Reverse-engineering of the radio protocol. Emulation of the radio signal. Bluemix, Pi, and Echo integration.", "I worked on ideation and graphic communication design.  I also assisted  in coding.", "I worked on the creation and editing of documents/the presentation.", "I assisted with two way communication between raspberry pi and blue mix."]], ["JazzItUp", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/5eRjky8j_Eg?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"JazzItUp \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/423/926/datas/gallery.jpg\"/>\n<p>\n<i>Jingle Bell Rock</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"JazzItUp \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/423/931/datas/gallery.jpg\"/>\n<p>\n<i>Radioactive</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"JazzItUp \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/423/932/datas/gallery.jpg\"/>\n<p>\n<i>UC Fight Song</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"JazzItUp \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/423/969/datas/gallery.jpg\"/>\n<p>\n<i>Source File for Jingle Bell Rock</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>JazzItUp</h1>\n<p>Using midi file format to improvise music from lead sheets.</p>\n<p>Nicholas Maltbie, Vuong Khuat, Wyatt French</p>\n<h2>Objective</h2>\n<p>This is part of Revolution UC Hackathon, Oct. 8-9, 2016. The objective is to \ncreate a program in Java that can read a lead sheet then export a midi file \nthat adds improvisation to the song based on the chord progression and music \ntheory. </p>\n<p>The basics of how to play a lead sheet can be found <a href=\"https://greghowlett.com/blog/free-lessons/061111012.aspx\" rel=\"nofollow\">here</a> \nfrom Greg Howlett.</p>\n<h2>How</h2>\n<p>Reading lead sheets and improvising is hard, now we will split it up into \nsmaller steps.</p>\n<h3>First Objective</h3>\n<p>We will develop some format to read lead sheets.</p>\n<p>Lead sheets contain</p>\n<ul>\n<li>Time Signature</li>\n<li>Key</li>\n<li>Chord progression</li>\n<li>Melody</li>\n<li>Possibly Lyrics</li>\n</ul>\n<h3>Second Objective</h3>\n<p>Once the lead sheets can be read into the computer, then the program will export \nthe melody along with chords to a midi file to create a proof of concept. </p>\n<h3>Third Objective</h3>\n<p>Add improvisation to the midi file (more work on this later, first two should be\ncompleted first.</p>\n<h2>Output</h2>\n<p>These exported music files can then be played using a <a href=\"http://www.musanim.com/player/\" rel=\"nofollow\">Music Animaiton Machine \nMIDI Player</a> from Stephen Musanim to generate a \ncolored, animated score from the midi file. More information about the graphical\n score is created can be found <a href=\"http://www.musanim.com/mam/pfifth.htm\" rel=\"nofollow\">here</a>.  </p>\n<h1>Finished Product</h1>\n<p>Now the program can read in either specially written text files that represent a music\n sheet or from midi files with different tracks for chords and the melody. Then,\n the program will take the results from this data and use the melody and \n chords to compose a song. </p>\n<p>In order to use the application, you can use the GUI launched when the \n FakeMidi.jar is executed (found in builds). The GUI will present the user with \n two text boxes for input and output. The path of the input can be \n directly typed into the load box or it can be selected using the dialog created\n when the select file button is pressed. Once a file is selected, it must be \n loaded by pressing the load file button. After the file is loaded, it can be exported\n to the file specified in export file text box. A export location can be \n specified using the select export button.</p>\n<h2>Final Output</h2>\n<p>The project can read in a midi file and output a midi file of an improvised \n reading of the file's chords and melody. The chords and melody must be on \n different tracks within the midi file. Examples of these txt files are in the project\n as AutumnLeaves.txt, Entertainer.txt and JingleBellRock.txt</p>\n<p>If a midi file is not available, a text file to store the iformation can be created.\n The text file must be as follows (without the line1, line2, line3...):</p>\n<p>line 1: Title of Song</p>\n<p>line 2: Composer</p>\n<p>line 3: Time Signature</p>\n<p>line 4: key</p>\n<p>line 5: melody</p>\n<p>line 6: chord progression.</p>\n<p>the melody is a single line of notes such as: \n    Ci C#i Ei C+q Ei C+q Ei t(C+i;C+q) Rq Ri C+i D+i D#+i E+i C+i D+i t(E+i;E+i) Bi D+q C+q Rq Rq Di D#i Ei C+q Ei t(C+i;Cq) Rq Rq Ai Gi </p>\n<p>a t(note;note) means note and note are tied\n notes are saved as follows: note then length note or rest, for example:\n    example: C+1#w is a C# whole note one octave up from middle C.\n        C (middle C)\n        C+ (C one octave up)\n        C+3 (C three octaves up)\n        C- (C one octave down)\n        Bf (B flat)\n        R (rest)\n        E# (E sharp)\n    length is the type of note (A . after the letter means a dotted note):\n        whole is w  (4 beats)\n        half h      (2 beats)\n        quarter q   (1 beat)\n        eighth i    (1/2 beat)\n        sixteenth s (1/4 beat)\n        thirty-second t\n        sixty-fourth x\n        one-twenty-eighth o</p>\n<p>the chords is a single line of the song's chord progression such as:\n    Rq Ch C7h Fw Ch Gmaj7h Cw Rh C7h Fw </p>\n<pre class=\"language-nolang\"><code>chord_name is the name of the chord, for example:\n    C (C major)\n    Bb (B flat major)\n    Gm (G minor)\n    G#m (G# minor)\n    Bbmaj7 (B flat mojor 7)\n    F#min (F sharp minor)\n    R (A break, no chord)\nlength is the same as before\nlength is the length in beats until the next chord occurs   \n</code></pre>\n<h2>Challenges While Working on the Project</h2>\n<p>Attempting to understand Midi in java. None of the group had experience using Midi and it \nwas very difficult to find a Library to use with the project and we ended up writing all \nof the code to implement music theory and midi file io ourselves using code on the \ninternet and the default java API.</p>\n<p>Lack of sleep. The project is 24 hours and None of us on the team slept while we \nwere working so we all could use a nap now that it is almost over.</p>\n<h2>Future Ideas</h2>\n<p>More music improv standards and music theory ideas added to options for Improviser.java</p>\n<p>Image Recognition using OCR to read from sheet music pictures.</p>\n<p>Export to Phone for image recognition (written in Java which exports to Android, too much time for this hackathon)</p>\n<p>Export to Phone to listen and accompany musicians automatically (we know how to recognize pitches for notes).</p>\n<p>More instruments than just piano.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/nicholas-maltbie/FakeMidi\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/nicholas-maltbie/FakeMidi\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Worked implementing the midi io for txt and mid files and I have experience improvising on piano.\nHelped create process to have the computer improvise from a lead sheet.\nHelped design the Object Oriented code structure.", "I worked on inputting and exporting the midis in the program.", "- Designed methods for Notes, Chords, and Scales.\n- Worked on algorithms to make improvisations.\n- Implemented algorithms to determine how loud each note should be played."]], ["Tilt-VR", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/i2md5j1XYqs?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Tilt-VR \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/424/074/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>Tilt VR was a great learning experience for us all. Going into this hackathon thinking we would be using a Myo, we weren't expecting to walk away with a fully functional game that utilized the technology of the LeapMotion. Having never used hand-capture technology like this before it was exciting to see what new options it opened up for us. The inspiration came from classic skill based puzzle games that we grew up playing like Super Monkey Ball and Wooden Labyrinth. We wanted to see how a game would function if you were the environment instead of the player. We had a lot of fun and we're excited to share what we created!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/leap-motion\">leap-motion</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Somnacin7/Tilt-VR\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Somnacin7/Tilt-VR\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Leveraged paradigms including bleeding-edge technologies such as Oculus and Leap Motion.", "I worked on game mechanics and physics in Unity, and made our logo!", "I designed the levels, made the objects and the textures.", "I worked on incorporating the physics and special blocks through scripts and Unity. I also wrote the music."]], ["Meme Me!", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Meme Me! \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/424/104/datas/gallery.jpg\"/>\n<p>\n<i>Example</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Allowing students to explore their inner self by utilizing an emotional sympathizing software that perpetuates a journey of self discovery.</p>\n<h2>What it does</h2>\n<p>It uses facial recognition software (Affectiva) to detect emotions. Using that information, the Meme Me! generates a unique meme with you-- unlike any others out there.</p>\n<h2>How we built it</h2>\n<p>We used SDKs bundled with custom HTML, Javascript, and CSS. Node.JS was also used on the server side/backend.</p>\n<h2>Challenges we ran into</h2>\n<p>The formalities of Javascript made it flexible to use, but also made it difficult to find minor syntax errors. Much time was spent searching for \"Unnecessary tokens\" and \"Uncaught type errors\". Also, SDKs were relatively new for us, so we spent a lot of time learning about that. Brainstorming an innovative idea proved difficult at the beginning as well.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>-Successfully used a facial recognition software\n-Able to understand much of the SDK logic/flow\n-Circumventing problems (ie. used phone as webcam b/c monitor didn't have one; used node.JS when secure server error kept popping up; eliminated interrupting code)</p>\n<h2>What we learned</h2>\n<p>-Time management (especially sleep!)\n-Teamwork\n-Problem solving</p>\n<h2>What's next for Meme Me!</h2>\n<p>-Making it into a real website\n-More meme texts\n-Direct export to social media websites\n-Making it available on other platforms</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag\">sdk</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li></ul>\n</div>\n</div>", ["", "", ""]], ["You Suck At Music", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"You Suck At Music \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/423/917/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>I like Spotify and wanted to implement a feature that I have not seen before. The name You Suck at Music came from the fact that most people you tried the website ended up getting very low scores.</p>\n<h2>What it does</h2>\n<p>Spotify publishes popularity ratings for individual songs. This websites looks at all the songs you have saved as well as all the songs you have added to playlists and calculates an overall popularity rating for each of your playlists and an overall score.</p>\n<h2>How I built it</h2>\n<p>The entire website is written in PHP, html, and java script. The user provides authorization to the server to view their playlists and saved songs. The website then analyses the data provided by the user to give them scores on each of their playlists and an overall score.</p>\n<h2>Challenges I ran into</h2>\n<p>There are MANY API calls that have to be made per user. Designing the java script so that it properly loaded the webpage and all the data in a short amount of time proved to be a very difficult challenge.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I completed almost every feature that I had planned for this during the hackathon.</p>\n<h2>What I learned</h2>\n<p>My understanding of CSS and JavaScript greatly increased from this project.</p>\n<h2>What's next for You Suck at Music?</h2>\n<p>A better UI wouldn't be a bad start. I have much more experience in software development and back end website development. Learning more about CSS to make my site beautiful would be a great enhancement.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mysql\">mysql</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://yousuckatmusic.com/\" rel=\"nofollow\" target=\"_blank\" title=\"https://yousuckatmusic.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>yousuckatmusic.com</span>\n</a></li>\n<li><a href=\"https://github.com/MM4005/YouSuckAtMusic\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/MM4005/YouSuckAtMusic\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Proxy Pi", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Proxy Pi \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/423/758/datas/gallery.jpg\"/>\n<p>\n<i>Pi Setup</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Proxy Pi \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/423/759/datas/gallery.jpg\"/>\n<p>\n<i>SSH Setup</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>The group has a fascination for small hardware devices like the Raspberry Pi, as well as cyber security. We felt that we could create a prototype of an interesting project.</p>\n<h2>What it does</h2>\n<p>Connecting to the Raspberry Pi 3, a laptop can use the IP address from the Pi. This causes any network activity from the main source to be hidden. This can be very useful in preventing identity theft and other privacy data theft from suspiscious websites. IPTraf allows us to track the data being sent over the network so we can really show what is happening.</p>\n<h2>How we built it</h2>\n<p>We used the Rasbian API to set up a Raspberry Pi 3 to be able to work with ssh. Then, we ran the ssh on the device we wanted to become more private, linking it to the Pi. Lastly, we configured a proxy using the newly created ssh in a compatable web browser, which finishes the process of routing network activity to the Pi. We then installed tracking software to include additional information that may be useful.</p>\n<h2>Challenges we ran into</h2>\n<p>The Raspberry Pi 3 gave us multiple installation issues, the main one being an issue that knocked out the wifi capabilities. We ended up having to complete a fresh install of the OS in order to fix the issues. We also had issues with connecting the ssh to the Pi device which was fixed after figuring out the perfect set of settings.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We came in expecting to try something new, and we feel very proud to have learned about a topic that has been a high interest of ours, as well as succeeded in building a prototype of what we learned.</p>\n<h2>What we learned</h2>\n<p>We came in knowing very little about Pi devices, and we learned about how the Raspberry Pi terminal works to provide most of the necessary tasks that are needed to run a Raspberry Pi. </p>\n<h2>What's next for Proxy Pi</h2>\n<p>We'd like to look into increasing the privacy functions of the Pi, like python scripts for determining and blocking suspicious websites.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li><li><span class=\"cp-tag\">unix</span></li></ul>\n</div>\n</div>", ["I worked on setting up the WiFi and ports on the Pi Device as well as setting up the proxy. I also worked a bit in setting up the SSH.", "I worked on system solutions for our raspberry Pi. Through several ssh sessions I learned more about Unix for navigation, and I spent time fixing various connection and network issues that had been occurring. Additionally I helped with testing the proxy for multiple computers at once through internet speed tests and manually checking IPs"]], ["Live Accountable", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Live Accountable \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/424/113/datas/gallery.jpg\"/>\n<p>\n<i>Home Page</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Difficulty saving money in college </p>\n<h2>What it does</h2>\n<p>Allows Users to manage their budget using a pay check managing system</p>\n<h2>How we built it</h2>\n<p>We built it on top of a LAMP stack using AWS, Alexa API , and Lambda.</p>\n<h2>Challenges we ran into</h2>\n<p>Alexa API , and Lambda</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Having a working prototype</p>\n<h2>What we learned</h2>\n<p>Alexa API , and Lambda</p>\n<h2>What's next for Live Accountable</h2>\n<p>Expansion of tools </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php5\">php5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mysql\">mysql</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/lamp\">lamp</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ubuntu\">ubuntu</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://liveaccountable.digibara.com\" rel=\"nofollow\" target=\"_blank\" title=\"https://liveaccountable.digibara.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>liveaccountable.digibara.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["SmartMirror", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"SmartMirror \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/424/127/datas/gallery.jpg\"/>\n<p>\n<i>The Interface</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Create easier access to important information for students.</p>\n<h2>What it does</h2>\n<p>The Smart Mirror displays essential information, including the time, weather forecasts, and even your blackboard calendar.</p>\n<h2>How we built it</h2>\n<p>We used amazon web services to run a website that pulls data from Weather Underground and the UC blackboard. The display is done through HTML, CSS, and Javascript, meaning it will work on any device that has access to the internet. </p>\n<h2>Challenges we ran into</h2>\n<p>Solved:\nWe solved problems with connecting the domain name to the Amazon Web Service as well as parsing errors and header information when pulling information from the Amazon Web Server.</p>\n<p>Unsolved:\nWe were unable to add voice commands as Voice API's for the Raspberry Pi, our intended platform for the Smart Mirror, were not loading or running functionally. We were also unable to add a LED strip for time and internet controlled ambient lighting, as the LED strip we were using failed during development.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are proud that the Smart Mirror can run on any platform with internet access and a web browser. We are also proud that Blackboard Calendar integration happened smoothly, as well as the visual aesthetic of the web page.</p>\n<h2>What we learned</h2>\n<p>We learned how to set up an Amazon Web Service server, as well as linking it to a domain name, even after making an irreversible mistake with our first domain name. Furthermore, we learned how to set up SSH and FTP connections with the web service. We also learned an extensible amount about using a command line interface. Finally, we learned different programming syntaxes within HTML, Python, PHP and JavaScript.</p>\n<h2>What's next for SmartMirror</h2>\n<p>In the future, we hope to implement light control to turn on either at a certain time or when motion is detected, as well as voice-control so the user can ask the device to only show specific information or to control lights.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/apache\">apache</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/domain\">domain</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li><li><span class=\"cp-tag\">iot</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://www.revoflectionuc.net\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.revoflectionuc.net\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.revoflectionuc.net</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I helped with the html formatting and wrote some scripts I learned a lot about js scripting", "", "", ""]], ["Dinero", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Dinero \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/424/421/datas/gallery.jpg\"/>\n<p>\n<i>Save money and feel powerful</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>After brain storming and researching for a long time, I looked in to the fifth third challenges. I instantly got inspired about Save Money challenge. Saving money is a challenge for every individual and we all need a motivation to do that. Some one wants a car, some one else wants a house and some one wants to go to college.</h2>\n<p>The idea is to motivate people by reminding them of their goals and rewarding them for saving money.</p>\n<p>I am not a coder so I had to teach myself HTML and CSS to do throw a website</p>\n<p>Challenges: Teaching myself how to code</p>\n<p>Accomplishments: Solving a real world problem</p>\n<p>What's next for Dinero: Develop a mobile application and start a company</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">html-and-css</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://drive.google.com/drive/folders/0B1NWykhjzOIiUXNhNmhkdmtkczQ\" rel=\"nofollow\" target=\"_blank\" title=\"https://drive.google.com/drive/folders/0B1NWykhjzOIiUXNhNmhkdmtkczQ\">\n<i class=\"ss-icon ss-link\"></i>\n<span>drive.google.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I taught myself HTML and CSS to develop a basic website to demonstrate this. It would have been ideal if I developed a mobile App"]], ["Benjamin Chat", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Benjamin Chat \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/424/166/datas/gallery.jpg\"/>\n<p>\n<i>places</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Benjamin Chat \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/424/164/datas/gallery.jpg\"/>\n<p>\n<i>places output</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Benjamin Chat \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/424/165/datas/gallery.jpg\"/>\n<p>\n<i>expire message</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Benjamin Chat \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/424/168/datas/gallery.jpg\"/>\n<p>\n<i>movie suggestion</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Benjamin Chat \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/424/167/datas/gallery.jpg\"/>\n<p>\n<i>movie output</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Trending Recommender Systems and bots.</p>\n<h2>What it does</h2>\n<p>Benjamin is a next gen communication platform with contextual text suggestions, smart home alerts and ephemeral messaging features.</p>\n<h2>How we built it</h2>\n<p>Techstack:\nAndroid (Java)\nPubnub (Backend as a service)\nPython\nRaspberry Pi</p>\n<h2>Challenges we ran into</h2>\n<p>Interface with web applications</p>\n<h2>Accomplishments that we're proud of</h2>\n<h2>What we learned</h2>\n<h2>What's next for Benjamin Chat</h2>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/yellajaswanth/BenjaminUC\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/yellajaswanth/BenjaminUC\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Project Party Up", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration -The idea was to create a fun, personalized way to keep connected with friends and family when attending events or going out.</h2>\n<h2>What it does -Allows users to form a party to see real time location of party members, form group chats, and leave at will.</h2>\n<h2>How I built it -It was built in Android Studio, MySQL, and Adobe Illusrator. It was designed to be a mobile app that interfaced with a database for updated information.</h2>\n<h2>Challenges I ran into -Android doesn't support JDBC</h2>\n<h2>Accomplishments that I'm proud of -Learned new software, and how to implement our knowledge in a practical away.</h2>\n<h2>What I learned -Don't assume that your programs will be supported by new software.</h2>\n<h2>What's next for Project Party Up -Probably continue development and hopefully complete the project</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mysql\">mysql</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/adobe-illustrator\">adobe-illustrator</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://uc.box.com/s/fs9iaeeayi0mghoto0jueem9m1mmv8jc\" rel=\"nofollow\" target=\"_blank\" title=\"https://uc.box.com/s/fs9iaeeayi0mghoto0jueem9m1mmv8jc\">\n<i class=\"ss-icon ss-link\"></i>\n<span>uc.box.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["RPGBOT", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration - DND and text style adventure games</h2>\n<h2>What it does - Runs a DND style text adventure via a groupme bot in user's desired groupme chat</h2>\n<h2>How I built it - Different members developed different functionality within eclipse, came together at the end to create a finished product. Used github as well as heroku with a node.js library.</h2>\n<h2>Challenges I ran into - Very new to javascript and node.js. Ran into issues correctly parsing text files as well as using regex, a relatively new concept for many of us. Also, object oriented programming within javascript.</h2>\n<h2>Accomplishments that I'm proud of - Using a hashmap to store regex parsed story frames for quick recall. Learning javascript, using different platforms, and developing a moderate scale project with many people's collaboration.</h2>\n<h2>What I learned - Javascript, node.js, gitHub, groupme bot development, regex file parsing</h2>\n<h2>What's next for RPGBOT - Adding combat functionality, making save files stored as text files, adding multiplayer functionality and an efficient set of checks to make the bot run effectively.</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/SpoonDoctors/RPGBOT\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/SpoonDoctors/RPGBOT\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Purrfect-Kitties", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to make an app with the Oculus Rift and the Muse. After problems with the Muse, we moved on to something else.</p>\n<h2>What it does</h2>\n<p>Right now it just displays values from the Muse and shows that we can execute triggers from it, but we had two repositories that we were working to put together that we didn't have time to join.</p>\n<h2>Challenges I ran into</h2>\n<p>We've never used the Muse or programmed Android apps before. One of our team members didn't know much about any particular programming language coming in and another's main language was Python. The cords we were given by the MLH Hardware Lab for the desktop didn't work. The Oculus Rift didn't work for the laptop. Over 4 hours were just spent on that alone. But after those initial hurdles, we were finally able to start hacking.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We made an app! It's a very rough one. But we did some complicated things and learned so, so much over the course of these 24 hours.</p>\n<h2>What's next for Purrfect-Kitties</h2>\n<p>Adding the cats! Orginally, our goal was to read brainwaves from the Muse and tell if the user found the current cat picture enjoyable. We were sooooo close, but maybe later we can finish it.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/alexsmith531/Purrfect-Kitties\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/alexsmith531/Purrfect-Kitties\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Space-Shooter", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<h2>What it does</h2>\n<p>This is a space shooter written in python using the pygame library.</p>\n<h2>How I built it</h2>\n<p>Python and pygame.</p>\n<h2>Challenges I ran into</h2>\n<p>The limited amount of time was challenging.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I'm proud of finishing a game in the time given to me.</p>\n<h2>What I learned</h2>\n<p>I refreshed my knowledge of pygame and improved my programming skills.</p>\n<h2>What's next for Space-Shooter</h2>\n<p>Bosses, and sound.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/pygame\">pygame</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/nick1957/space-shooter\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/nick1957/space-shooter\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["UCwhatIdidThere", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"UCwhatIdidThere \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/423/986/datas/gallery.jpg\"/>\n<p>\n<i>Stamp of a location</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"UCwhatIdidThere \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/424/004/datas/gallery.jpg\"/>\n<p>\n<i>Stamp loading</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"UCwhatIdidThere \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/424/005/datas/gallery.jpg\"/>\n<p>\n<i>Scanning a tag</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"UCwhatIdidThere \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/424/006/datas/gallery.jpg\"/>\n<p>\n<i>A loaded stamp</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to create a \"passport\" to encourage people to explore the new places around them. Our vision is an app where users can scan NFC tags around town to learn about and collect locations so users can reflect on, as well as show off, what they have done.</p>\n<h2>What it does</h2>\n<p>This app and API enable users to explore new places around them and show it off to others. By using UCwhatIdidThere, city officials can encourage visitors and residents alike to explore and learn about the city. </p>\n<p>While we initially imagined this for city tourism, this could also have applications for universities and large events. Tags could be placed in key locations that users scan and receive important information. For instant freshman and transfer students new to a school can scan tags to learn about the university around them. Or new attendees of hackathons can scan tags placed strategically around a hackathon to learn more about the hackathon cultrue, devpost links, mentors available, etc.</p>\n<h2>How we built it</h2>\n<p>Using Node.js we built an API that allows for expansion into platforms beyond just android. One such example is iOS, which doesn't allow devlopers to use NFC. An alternative will be QR codes that store the same information as the NFC tags, requiring no changes on the backend. </p>\n<p>We also build native android app that allows Android users to collect and interact without tags. Users can login and check their collection of tags and scan new tags that they come across. For future development we hope to give users more way to interact with each other via the tags such as sharing their collection via social media or adding the ability to leave a message at a location.</p>\n<h2>Challenges we ran into</h2>\n<p>Having only one experienced coder slowed our process. We had some expansions we wanted to add, but didn't have the time.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>The less experiecne hackers gained a lot of expericene while working on this project. One memeber in particlular was able to implement the backend that we use to transfer information.</p>\n<h2>What we learned</h2>\n<p>Of the three members, only one had any real coding experience. Tyler worked on devlopoing the his first ever API using Node.js and Express.js, while Cullen worked on the android app. Sam helped both of them with questions and troubleshooting. </p>\n<h2>What's next for UCwhatIdidThere</h2>\n<p>We plan on adding a admin application to allow users and businesses to create their tags and add it to our network. We also plan on adding more features to make our app more user friendly and to provide our users a robust and fun experience. UC there is a lot we can do with this application.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/thault/UCwhatIdidThere\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/thault/UCwhatIdidThere\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I built the backend using express.js and node.js.", "I came up with the idea for the application and built the android application that interfaced to our backend"]], ["vinylb.org", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>vinylb.org</h1>\n<p>Rails-based personal vinyl library manager</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ruby\">ruby</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/coffeescript\">coffeescript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/typescript\">typescript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ruby-on-rails\">ruby-on-rails</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sqlite\">sqlite</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Thing342/vinylb.org\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Thing342/vinylb.org\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Savor", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Savor \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/424/183/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Savor \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/424/184/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Savor \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/424/185/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Savor \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/424/186/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Savor \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/424/187/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Savor \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/424/188/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Savor \u2013 screenshot 7\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/424/192/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Savor \u2013 screenshot 8\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/424/193/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Savor \u2013 screenshot 9\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/424/189/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Savor \u2013 screenshot 10\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/424/190/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Savor \u2013 screenshot 11\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/424/191/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>reduce wastage of food and we can utilize that to feed the needy.</p>\n<h2>What it does</h2>\n<p>It connects people who have surplus amount of food to the people who has shortage of food.</p>\n<h2>How we built it</h2>\n<p>We built and an Android Application in Android Studio using as google's firebase as a backend.</p>\n<h2>Challenges we ran into</h2>\n<p>Integrate firebase in the android application.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We have completed a basic android application which can start serving its purpose. </p>\n<h2>What we learned</h2>\n<p>Google's firebase integration with android. </p>\n<h2>What's next for Savor</h2>\n<p>Make it available for multiple platform, and add new features.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/anuj4994/savor.git\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/anuj4994/savor.git\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the development of the application and the integration with firebase\n", "", "", ""]], ["UC Monopoly", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"UC Monopoly \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/423/981/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"UC Monopoly \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/423/982/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"UC Monopoly \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/423/999/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to try something new. None of us have written a simple 2D game, none the less, we decided to learn the Babylon 3D javascript engine in 24 hours, along with modeling meshes in Blender.</p>\n<h2>What it does</h2>\n<p>We couldn't fit all the features of Monopoly in our time frame, but you can buy and pay rent on other property and you can go to jail. We spent a lot of time working on our meshes and 3D modeling and we are proud on how it came out. </p>\n<h2>How I built it</h2>\n<p>This was built using open web technologies, allowing it to be cross-platform. It can even be used on phones and televisions. </p>\n<h2>Challenges I ran into</h2>\n<p>We had to learn 3D modeling from scratch and using a whole new framework for rendering so that was tough. </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>It was so beautiful that BearcatSnaps featured us on their Snapchat story. The 3D environment is fun to play with, </p>\n<h2>What I learned</h2>\n<p>I learned to not focus on networking before you have the core game mechanics worked out, I spent a long time trying to work on both the game mechanics and networking, which just caused confusion the entire time and required me to scrape the networking code. </p>\n<h2>What's next for UC Monopoly</h2>\n<p>Including the rest of Monopoly game mechanics. We tried implementing web sockets to allow for using a smart TV or computer monitor as the display for the game board and using mobile phones as the controller, allowing the whole family to gather around and enjoy the game, and letting you manage your property's while it is someone elses turn allowing the game to go faster.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/webgl\">webgl</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/canvas\">canvas</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag\">babyloon-js</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/isiah-lloyd/RevUC-CincinnatiMonopoly\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/isiah-lloyd/RevUC-CincinnatiMonopoly\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"http://isiah.me/revUC\" rel=\"nofollow\" target=\"_blank\" title=\"http://isiah.me/revUC\">\n<i class=\"ss-icon ss-link\"></i>\n<span>isiah.me</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Meme Stock Market", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Meme Stock Market \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/424/057/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>Meme Market 2016</h1>\n<h2>Project built for Revolution UC Hackathon 2016</h2>\n<h3>Andrew Brooke, Colton Crouch, Matt Jeffers, Caleb Adcock</h3>\n<h2>What we used</h2>\n<h3>AngularJS, NodeJS (Express), Firebase</h3>\n<h2>How to install</h2>\n<ul>\n<li><code>npm install</code></li>\n<li><code>bower install</code> in <code>public/</code></li>\n<li><code>npm start</code></li>\n<li>Goto: <code>http://localhost:8080/</code></li>\n<li>Enjoy!</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/angular-js\">angular.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/andrewbrooke/meme-market\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/andrewbrooke/meme-market\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["vr Alone", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>I like VR and want to make a game on the platform.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag\">a-frames</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://www.vralone.co\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.vralone.co\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.vralone.co</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Smart Motion Sensor", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Smart Motion Sensor \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/424/092/datas/gallery.jpg\"/>\n<p>\n<i>The Smart Motion Sensor</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Smart Motion Sensor \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/424/093/datas/gallery.jpg\"/>\n<p>\n<i>Having fun with the project!</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Smart Motion Sensor \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/424/094/datas/gallery.jpg\"/>\n<p>\n<i>Mr.White 5th/3rd IT person who is very nice and helped us get around our challenges</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration: learning Raspberry pi for the first time was something that we always wanted to do!</h2>\n<h2>What it does: It senses if someone moves in front of the sensor then takes a picture with an alert msg and send it to a mobile number already defined by the user.</h2>\n<h2>How we built it: Simple as it can be! We used Raspberry pi 3, Bread board, Web cam and Ultrasonic sensor.</h2>\n<h2>Challenges we ran into: A lot from learning how to use Python and how to connect stuff with not much materials provided. Uploading the image to imgur to be used by Twilio was a big big challenge.</h2>\n<h2>Accomplishments that we're proud of: Made something useful out after joining the Hackathon just for Fun! Crazy right!</h2>\n<h2>What we learned: How to use Raspberry pi and Python with Twilio</h2>\n<h2>What's next for Smart Motion Sensor: A lot and a lot and a lot! Adding a touch screen for user to interact with to connect to a wifi and enter the mobile number they want to use. Adding some lights to light red as a sign for children in the house to not answer the bell if someone showed after the user send a sms back saying \"It is not safe\" for example then the system lights red. Facial recognition based on previous faces showed to the camera and saved as a known people.</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n</div>", ["Helped with python syntax and catching mistakes, coming up with ideas and whether or not they were viable, and moral support.", ""]], ["WatsonBot", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"WatsonBot \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/424/045/datas/gallery.jpg\"/>\n<p>\n<i>Bluemix dashboard</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"WatsonBot \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/424/046/datas/gallery.jpg\"/>\n<p>\n<i>Node RED flow</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We're the moderators/owners of the Wright State University gaming server, so we use Discord quite a bit. We're moving to an apartment next year and wanted to find a way to integrate Discord into our future home.</p>\n<h2>What it does</h2>\n<p>The application we made is an easily expandable framework for using Discord in home automation. Using Watson's natural language processing, we were able to make a user-friendly system for giving Bluemix commands. </p>\n<h2>How we built it</h2>\n<p>We used an existing library to create a Discord bot that polls every message sent in a server for a certain trigger. In this case it was prefacing a message with \"!w\". In the event that such a message exists it gets sent to Bluemix where it is run through Watson's intent recognition service. Upon finding the correct intent of the user, a specific action is completed and a message is returned back to the user on the Discord server.</p>\n<h2>Challenges we ran into</h2>\n<p>One of the biggest challenges that we ran into was the fact that neither of us had ever used our respective softwares before. I have a background in Python, but CJ was itching to get the chance to try. I, myself, had never used IBM's Bluemix before, and I don't believe that I would have been able to complete the project without the help from the wonderful people at the IBM booth.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>The fact alone that we completed the project put us far ahead of the last Hackathon we attended. On top of that, we made a service that we will be able to use in the future that nobody else had done before.</p>\n<h2>What we learned</h2>\n<p>Each of use learned a ton of information and gained a lot of experience from working with environments that we had never used before. We also learned that there is a specific time around 3:30 am where we become incredibly productive while coding (a la xkcd's <a href=\"Ballmer%20Peak%20comic\" rel=\"nofollow\">https://xkcd.com/323/</a>).</p>\n<h2>What's next for WatsonBot</h2>\n<p>We plan on expanding both the amount of features and the functionality of WatsonBot. As it stands, we just have the framework for future use. Once we get our hands on some Phillips HUE light-bulbs and/or a Nest thermostat we'll have the software ready to go for implementation with Discord.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bluemix\">bluemix</a></span></li><li><span class=\"cp-tag\">node-red</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/odevine\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/odevine\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I covered the Bluemix and Watson end of things on the bot", "I created the python program that sent and received data from Discord to Bluemix."]], ["Hackathon", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>It's a fun side scroller for everyone at a hackathon!</p>\n<h2>What it does</h2>\n<p>You race against others while avoiding obstacles and hacking obstacles/other players courses to win the race!</p>\n<h2>How we built it</h2>\n<p>Built using Javascript and the Crafty.js library</p>\n<h2>Challenges we ran into</h2>\n<p>I'm new to Javascript while my partner is a big Javascript fan, so my challenges were learning how to use Javascript as well as the library to create a game image. Another obstacle was the use of socket.io. The game is supposed to use socket.io for networking but we were unable to get it working before time ran out.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>It works!</p>\n<h2>What we learned</h2>\n<p>I learned Javascript and how to use the Crafty library somewhat.</p>\n<h2>What's next for Hackathon</h2>\n<p>Get it running with socket.io and have a progress bar/ghost racing to see the status of other players. Also implement two hacks to assist the hacker as well as one to attack other racers by messing with their course.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag\">crafty</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/socket-io\">socket.io</a></span></li><li><span class=\"cp-tag\">webpack</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Migsect/Hackathon\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Migsect/Hackathon\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["BrainPuddle", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"BrainPuddle \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/424/035/datas/gallery.jpg\"/>\n<p>\n<i>Errors suck.</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>BrainPuddle</h1>\n<p>This is an interpreter for a custom programming language I created, vaguely resembling assembler. \nIt uses 3-letter tokens for each command, as well as some parameters.\nThis code will take an input of a text file containing the source code, and will run the code in a console window.</p>\n<p>Commands for this include:</p>\n<p>DIM - Create numerical variable</p>\n<p>SLC - \"Select\" a variable</p>\n<p>SET - Set the selected variable to a value</p>\n<p>OUT - Output the selected variable's value</p>\n<p>SAY - Output a message to the console</p>\n<p>GET - Grab a value from the keyboard, store in selected variable</p>\n<p>_IF [EQL/LSS/GRE/DIF] [VAR/NUM] [Parameter] - Executes the following block if the parameter is met</p>\n<p>END - Ends an _IF block. _IF blocks can be nested.</p>\n<p>LBL - Creates a goto label</p>\n<p>JMP - Jump to a label (\"goto\")</p>\n<p>ARR - Stub for array operations: ex. \"ARR NEW CHAR A\" creates a new char[] named \"A\"</p>\n<p>... And more.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/vasilescur/BrainPuddle\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/vasilescur/BrainPuddle\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I coded almost all of the interpreter for this language, as well as creating the language specification and plan, and debugging the various errors and bugs that arose. In addition, I wrote a couple of sample programs using our new language.", ""]], ["WhatTheContolF", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>WhatTheContolF</h1>\n<p>What if you could Control+F a video?</p>\n<p>Imagine if you were able to find exactly where in a video you want to go just with a simple voice command. That's what we have set out to do. Our project is essentially implementing Control+F functionality for a video, meaning we can search and jump to exactly to where we want quickly and efficiently.</p>\n<p>As many of you know, Computer Science is largely a self taught subject. You won't be able to learn everything you need to succeed in a University Classroom, and taking to the internet for online lectures is sometimes a necessity. This would be a perfect scenario when our project could be used. </p>\n<h1>What it does</h1>\n<p>This software uses keywords you say to jump to a part of a given video.</p>\n<h1>Insperation</h1>\n<p>Lecture videos often are full of content that we're not interested in. We wanted to make it easier for students to easily find what a professor had to say about a specific topic.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bluemix\">bluemix</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ibm-watson\">ibm-watson</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/ChatSam/WhatTheContolFWatson\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/ChatSam/WhatTheContolFWatson\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["The user will pass the program a video they want to be able to search through. I was tasked with retrieving the audio from this video and creating a transcript from it using Watson Speech to Text API.", "When the user gives an command to the computer microphone, the command should be recognized and converted to text. I used the Watson Speech to text API in a python file", ""]], ["Melody Player", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/Lk1YIvMztuU?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Melody Player \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/423/956/datas/gallery.jpg\"/>\n<p>\n<i>Overhead view.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Melody Player \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/423/957/datas/gallery.jpg\"/>\n<p>\n<i>Close-up view.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Melody Player \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/423/958/datas/gallery.jpg\"/>\n<p>\n<i>Angled overhead view.</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>The inspiration for this project was two different components. The first component was the WWE Wrestler John Cena's self-made viral rap song, \"The Time is Now,\" which today is a popular and easily recognizable tune amongst young people by its opening melody and associated image. The second component to this project's inspiration was a term project I did in high school, in which I used RC circuits to play an entire octave of notes through piezo buzzers, all without any microcontrollers.</p>\n<h2>What it does</h2>\n<p>The coded program uses 6 piezo buzzers to play melodies from various recognizable tunes. The base shield provides digital pin connections for the buzzers and button; and an I2C pin connection for the LCD. In this program, a song is selected (at this time, the others must be commented out), and a brief melody is played through the buzzers when the button is pressed. In addition, the LCD displays the song title</p>\n<h2>How I built it</h2>\n<p>Materials (all provided by MLH Hardware Lab)</p>\n<ul>\n<li>Intel Edison</li>\n<li>Base Shield v1.3</li>\n<li>Grove Components Kit (items listed below)\n\n<ul>\n<li>8 ribbon wires</li>\n<li>6 Buzzers v1.2</li>\n<li>1 LCD RGB Backlight v4.0</li>\n<li>1 Button v1.1</li>\n</ul></li>\n</ul>\n<h2>Challenges I ran into</h2>\n<p>The buzzers, for unclear reasons, play at different pitches, and the order shown below may not, and probably will not, always be accurate. This may be attributable to errors in manufacturing or uneven distribution of voltage. Additionally, I was not able to play all the notes for Clocks melody because I needed another buzzer (the melody has 7 notes), which requires a set of digital pins. The Base Shield only has 7 sets of digital pins, and because I needed one set for the button to trigger the playing of the tune, there were only 6 sets left for six different buzzers.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I'm proud that I came to this hackathon, my first hackathon, with no ideas about how the event would work or what I would do during the event, and I was able to put together a functioning project. I'm proud that I was able to create something that provides mild amusement to others while helping me refine my skills. </p>\n<h2>What I learned</h2>\n<p>Throughout this project, I learned how frustrating that it can be to not have the components one desires for prototyping purposes. In addition, I worked with an Intel Edison and Base Shield for the first time, and refreshed my Arduino/C++ coding.</p>\n<h2>What's next for Melody Player</h2>\n<p>In the future, I'd like to see an interface developed to use buzzers to play melodies that are created by the user, in addition to pre-programmed melodies. Another option would be to acquire components to use the tone function of the buzzer (via PWM) and allow just a single buzzer with many buttons to play various tunes (each button would be a separate melody).</p>\n<h2>Demo Videos</h2>\n<p><a href=\"https://youtu.be/Lk1YIvMztuU\" rel=\"nofollow\">John Cena</a></p>\n<p><a href=\"https://youtu.be/-l9HJtynPNA\" rel=\"nofollow\">We Don't Talk Anymore</a></p>\n<p><a href=\"https://youtu.be/UvRhZflSECI\" rel=\"nofollow\">Clocks</a></p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/intel-edison\">intel-edison</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.uc.edu/claytomp/revolutionUC2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.uc.edu/claytomp/revolutionUC2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.uc.edu</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Sword Fight", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/lXoxbEp6Huw?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We want to replace rock, paper, scissor.\nTired of having to meet each other to play rock, paper, scissor.\nTired of people trying to figure whether you going for rock, paper or scissor.\nTired of people who use psychological loopholes to figure out your next move.</p>\n<h2>What it does</h2>\n<p>Move your device front and back to attack.\nMove your device side to side to defend.\nMove your device up and down to push.\nDefend beats attack, attack beats push and push beats defend.\nThe score fluctuates from -2 to 2 between player 1 win when reached 2 and the another way around.\nWhoever get the score to 2 or -2 win.</p>\n<h2>How I built it</h2>\n<p>We turn our phones into IoT devices. Grab the movement's information and process it through Node-Red. Finally, turning it from text to speech to announce who win.</p>\n<h2>Challenges I ran into</h2>\n<p>10 hours ago, we don't even know what IoT is. Turning the movement of the phone into information we could process.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Learned node-Red in few hours and developed this app.\nFiguring out the movement of the phone to translate into moves.</p>\n<h2>What I learned</h2>\n<p>IoT, node-Red, Bluemix and you can have fun at a hackathon even if you don't know much technical stuff.</p>\n<h2>What's next for Sword Fight</h2>\n<p>Turning it into a real-time sword fighting game where there would a fixed size arena. Using acceleration between 2 players get the relative coordination between two phones. So basically Sword Art Online without the VR.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bluemix\">bluemix</a></span></li><li><span class=\"cp-tag\">iot</span></li><li><span class=\"cp-tag\">red-node</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://swordfight.mybluemix.net/\" rel=\"nofollow\" target=\"_blank\" title=\"http://swordfight.mybluemix.net/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>swordfight.mybluemix.net</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["kase", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"kase \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/423/916/datas/gallery.jpg\"/>\n<p>\n<i>KASE analysis demonstration</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>kase</h1>\n<p>Kinome Array Significance Evaluator</p>\n<p>A tool to analyze Kinome Array data for scientific publication.\nExamples:</p>\n<h2>V1.0</h2>\n<p>Re-coded application from EXCEL macro, reducing computation from hours to seconds\nRuns 100,000 iterations of a simulation in ~10s</p>\n<p>For Python 2.7\nWe recommend running using Anaconda for easy package install\n<a href=\"https://www.continuum.io/downloads\" rel=\"nofollow\">https://www.continuum.io/downloads</a></p>\n<h3>PLANNED FUTURE FEATURES:</h3>\n<pre class=\"language-nolang\"><code>Figure generation\nConfigurable random seed\n</code></pre>\n<h2>Purpose</h2>\n<p>Kinome Arrays often give confusing results because each detector corresponds to multiple kinases.\nTherefore, using simulation, this program approximates a parametric analysis of the distribution of number of hits\nfor each kinase given that x substrates are chosen, where x equals the actual number of substrates chosen.\nUsing this approximated distribution, a z-score and subsequent p-value (two-tailed) is calculated for each kinase.</p>\n<p>An inexact approximation:\n    Standard normal distribution is used as simplifying assumption; although we expect a skewed distribution due ot proximity to zero.\n    While a large n=100,000 (random) simulations can be accomodated, this is a tiny fraction of all the true\n    combinations.  141 C 10 ~= 617 trillion\n    Nonetheless, this is sufficent to rank and compare effect size.</p>\n<h2>Instructions</h2>\n<p>Run kase_gui.py for interactive analysis\nNote that three files are included as example input/output (in order to load in program)\n    SubstrateKinaseDefinition.csv\n    SigSubstrates.csv\n    output.tsv</p>\n<h2>Authors</h2>\n<p>2016 Oct 9 UC Revolution Hackathon\n            Jeremy Cox          (<a href=\"mailto:JeremyCoxBMI@github.com\" rel=\"nofollow\">JeremyCoxBMI@github.com</a>)\n            and\n            Erica DePasquale    (<a href=\"mailto:careyea@github.com\" rel=\"nofollow\">careyea@github.com</a>)        author of original tool</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">anaconda</span></li><li><span class=\"cp-tag\">python2.7</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/JeremyCoxBMI/kase\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/JeremyCoxBMI/kase\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["uDj", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"uDj \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/423/865/datas/gallery.jpg\"/>\n<p>\n<i>uDj MobileView</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"uDj \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/423/864/datas/gallery.jpg\"/>\n<p>\n<i>uDj desktopView</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>When you're at a party or any kind of gathering with music, it's almost a given that everyone will have different opinion. The goal of this application is to give everyone a chance to add their musical taste to the social environment from the convenience of their smartphone. </p>\n<h2>What it does</h2>\n<p>uDj hosts a web service from a raspberry pi that allows multiple client connections to manipulate a song queue. Using a RESTful API, the application allows for real-time modification to a song output. This way, whether you are at the bar with your friends, hosting a party, or just too lazy to walk to your music player, you can choose what you listen to. </p>\n<h2>How we built it</h2>\n<p>The application was built using a node.js backend with a sqlite3 database. The front-end framework was built with HTML, CSS, jquery, and JavaScript. The music output on the pi was programmed with python and rabbitmq was used to communicate between the node.js and python interfaces. </p>\n<h2>Challenges we ran intoWhat it does</h2>\n<p>The architecture was our biggest roadblock. We understood how crucial it would be to organize the multiple levels of communication and therefore spent a great deal of time planning this aspect. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>After a decent amount of planning, we stuck with our architecture design and it worked out great. The music plays smoothly and communicates efficiently with the other platforms. We also have a pretty cool interface.</p>\n<h2>What we learned</h2>\n<p>Pat: I learned more about how to use node.js and sqlite. I also was able to brush up on my python skills.\nKyle: I learned how to communicate with the back-end server through front-end JavaScript.\nKan: I became more familiar with node.js and the overall design process of a web application.\nMatt: I learned a lot about rabbitmq, node.js and RESTful API. </p>\n<h2>What's next for uDj</h2>\n<p>Future updates for uDj will include varying permissions based on user rights. We also would like to add integration for the Spotify API. </p>\n<h2>Headline</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/rabbitmq\">rabbitmq</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sqlite\">sqlite</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/mtihlenfield/uDj\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/mtihlenfield/uDj\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["What is the current year?", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>We felt ashamed for the human race that many people were not properly informed of the current year. We have solved this dilemma by implementing static html text that updates with the calendar year. Now we are able to spread the word of the current year through our website. Please contact us if you are interested in advertising.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://www.whatisthecurrentyear.com\" rel=\"nofollow\" target=\"_blank\" title=\"http://www.whatisthecurrentyear.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.whatisthecurrentyear.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]]]