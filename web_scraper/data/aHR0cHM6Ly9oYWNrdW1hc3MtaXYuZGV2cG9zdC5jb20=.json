[["Censei", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Countless people's most private and intimate moments, in the form of private photos shared with significant others, are being used for the purpose of bullying, sexual harassment and shaming. We feel that the various websites where this occurs online have a responsibility to prevent these images from being posted to the internet. </p>\n<p>We understand that the task of identifying this type of activity isn't so simple, and we hope Censei can provide the facility to curb this harassment.</p>\n<h2>What it does</h2>\n<p>Censei is a service developers can communicate with while processing a new Post/Photo Upload. \nBy simply asking <code>Censei.isThisSafe({ image, text })</code>, we can confirm through our API, by using a combination of Image Analysis (with Clarifai), Watson's Tone Analysis service, and our own algorithms, if an image is safe to publish on the web.</p>\n<h2>How we built it</h2>\n<p>The Censei Client is currently build as an npm module, which provides the facility for any Node server to communicate with our Censei Server (Node.JS). The Client library could easily be ported to other languages and frameworks. </p>\n<p>The Censei Server itself encodes image in base64, running it through Clarifai's NSFW model, while simultaneously running the coupled text through Watson's Tone Analysis engine. </p>\n<p>If an image is tagged NSFW from Clarifai over a tuned threshold, we further process the emotional intent and feeling analysis from Watson, and decide if an image (and it's text), is safe to post. It's important to note as well that the server could be configured instead to return a scored decision, rather then a binary one. </p>\n<h2>Challenges we ran into</h2>\n<p>We attempted to train a natural language text classifier, based on training data from conversations surrounding these harassment occurrences, but have yet to accurately classify text samples.</p>\n<p>We ran into some issues around image processing, but managed to get past them fairly quickly. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We're proud of all that we accomplished with Censei after an unsuccessful attempt to build a gesture controlled quadcopter, and how well our team handled the pivot.</p>\n<h2>What we learned</h2>\n<p>One of the most valuable things we learned from this experience, is that often some of the most troubling issues in our society are left unsolved, merely because they exist in tabooed topics of conversation.</p>\n<h2>What's next for Censei</h2>\n<p>We hope to extend Censei not only to more platforms, but to more forms of classification. There are plenty of other types of harassment and bullying that occur online, and Censei could grow into a service to detect and prevent all of them.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ibm-watson\">ibm-watson</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/natural-language-processing\">natural-language-processing</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/dylanfischler/Censei-Client\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/dylanfischler/Censei-Client\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/dylanfischler/Censei-Server\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/dylanfischler/Censei-Server\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["DualAuth RFID ", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"DualAuth RFID  \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/629/datas/gallery.jpg\"/>\n<p>\n<i>Exterior</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"DualAuth RFID  \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/630/datas/gallery.jpg\"/>\n<p>\n<i>Interior</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Originally, our idea was to be able to login to public UMass computers using our UCards to bypass entering credentials each time. However, we soon learned that although the RFID tags in UCards have the same frequency as generic RFID cards, UCard RFID tags can only be read using the manufacturer's reader. This limitation brought us back to the drawing board, and using the generic RFID card and RFID reader that we had, we came up with the idea to use data stored on an RFID tag as a second authentication factor for logging into websites that are data-sensitive. (i.e. employee logins). </p>\n<h2>What it does</h2>\n<p>The main purpose of DualAuth RFID is to add an extra layer of security in addition to just a regular password, using data read from an RFID tag as another login credential. </p>\n<h2>How we built it</h2>\n<p>We used an Adafruit PN532 RFID/NFC shield for Arduino Uno to read in 16 bytes (one block) of data from a 13.56 MHz RFID card. To read in the data, a button is pressed on the Adafruit shield, which triggers the RFID reader to scan (for 3 seconds) for data from the RFID tag. If data is found, our Python driver strips and retrieves the first 8 bytes (out of 16), represented as an 8-digit Unique Identifier (UID) returned from the arduino program through the reader. The driver passes this data to a Java program, which (in our implementation) enters the retrieved UID into the UID field of our website login (presented to the user <em>after</em> they have entered the correct username and password), at which point it is compared to the UID on file for the specific user. If the UID retrieved from the RFID card is a match, the user is automatically logged in. We used a Raspberry Pi 3 to simulate the host machine running the website, which was made using a combination of HTML5, CSS3, MeteorJS, bootstrap, SASS, and JQuery, and hosted on galaxy. </p>\n<h2>Challenges we ran into</h2>\n<p>Our first major challenge was discovering that the RFID readers provided were unable to process UCard data, which rendered our initial idea useless. Additionally, we initially had issues in trying to pass the data from Arduino--&gt;Raspberry PI--&gt;Python--&gt;Java--&gt;Web server, which took some time to smooth out. The Arduino Uno also lacks Keyboard.write() capabilities, which is why it was necessary for us to fill in the UID using Java instead, and took some tinkering. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We were able to successfully implement our project in a working scenario using a live website from the Raspberry Pi. We also designed and 3D-printed our own case to hold the Arduino/RFID Shield, leaving our final result aesthetically pleasing as well as functional.</p>\n<h2>What we learned</h2>\n<p>Each of us learned something previously unknown going into Hack UMass, whether it be writing Python scripts for the first time learning how to design a 3D-printed model. None of us had any experience using RFID readers prior to this, which was interesting to learn along the way.</p>\n<h2>What's next for DualAuth RFID</h2>\n<p>Our main goal, which we sadly ran out of time to implement, is to increase the security of our project. Ideally, we would like to eventually hash/encrypt the UID values read from the RFID tags in order to make the transfer and storage of the sensitive data more secure. Security aspects in general and fine-tuning the mechanics of our RFID reading method would be the next steps taken. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sass\">sass</a></span></li><li><span class=\"cp-tag\">adafruit-pn532-rfid/nfc-shield</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/meteor-js\">meteor.js</a></span></li></ul>\n</div>\n</div>", ["I helped", "", "", ""]], ["Pretentious Poet", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>Here is a link to <a href=\"https://github.com/PretentiousPoet/pretentious-poet\" rel=\"nofollow\">Pretentious Poet on GitHub</a>. Please refer to the README for how to build and run the project and our <a href=\"https://github.com/PretentiousPoet/pretentious-poet/wiki\" rel=\"nofollow\">wiki</a> and <a href=\"https://docs.google.com/presentation/d/1a90xhb1yj2-fNdSoJLsE7SlAV1NVJik7uxJc9wWVt-c/edit?usp=sharing\" rel=\"nofollow\">slides</a> for further documentation and technical explanations of the project works.</p>\n<h2>What it does</h2>\n<p>Generate pretentious poems from images! We provide a responsive webpage to allow for easy poem generation on the go.</p>\n<h2>How we built it</h2>\n<p>We built a single page React JS page that utilizes Redux to manage application state. This passes an image URL to our RESTful API written in Spring. This then passes the image information to ClarifAi which responds with tags related to the image. We then take those tags and pass them to Thesaurus.com, which we then DOM scrape to get the synonym's part of speech as well as synonyms themselves. We then generate the singular and plural form of these synonyms using a custom fork of JBoss DNA's inflector. Then, we take those synonyms and combine them with our context free grammar, in order to generate a single poem. We then generate several pools of multiple poems and then take the highest scoring poems from each pool and breed them together, generating a new set of pools. We do this across several generations, ultimately spitting out a finished poem that best fits our scoring function.</p>\n<h2>Challenges we ran into</h2>\n<p>It's difficult to generate quality poems as well as quantify the quality of a given poem. It's even harder to understand the semantics of a poem than it is to understand regular text, so this added an additional challenge to our project.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>In order to solve these problems, we started by defining a context free grammar that created a subset of English that would always be grammatical.  Additionally, to further to attempt to build high quality poems, we built our own genetic programming implementation and algorithm from the ground up as well as intensely tuned our scoring algorithm to consistently create high quality poems. Finally, in order to tie together ClarifAi's classifier with our poem generation algorithm, we had to DOM scrape Thesaurus.com and appropriately use a custom fork of JBoss DNA's Inflector in order get all the pieces to work together properly.</p>\n<h2>What we learned</h2>\n<p>The success of genetic programming is heavily based upon having a scoring algorithm that models the goal well. In the case of poem generation, it's nearly impossible to quantify poems, so we learned about tricks to design scoring functions to closely approximate the actual situation.</p>\n<h2>What's next for PretentiousPoet</h2>\n<p>Full scale literary work generation.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/react\">react</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/spring\">spring</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jsoup\">jsoup</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/redux\">redux</a></span></li><li><span class=\"cp-tag\">genetic-programming</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/natural-language-processing\">natural-language-processing</a></span></li></ul>\n</div>\n</div>", ["", "", "", ""]], ["Code x Culture", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Code x Culture \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/489/datas/gallery.jpg\"/>\n<p>\n<i>Home page</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Code x Culture \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/488/datas/gallery.jpg\"/>\n<p>\n<i>Agile design process</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Code x Culture \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/491/datas/gallery.jpg\"/>\n<p>\n<i>Mid interaction</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Code x Culture \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/490/datas/gallery.jpg\"/>\n<p>\n<i>Developing brand/concept</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Code x Culture \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/487/datas/gallery.jpg\"/>\n<p>\n<i>Celebration!</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>\"Let's play a game: Programming Language or Indie Band?\"</h2>\n<p>With that challenge, our friend Jon stumped us with a difficult game of discerning between obscure programming languages and even more strange, underground band names. We wanted to grow his idea beyond the scope of our lunchroom table and into an interactive web game where users could be challenged with the very same premise. </p>\n<h2>Purpose</h2>\n<p>The primary reason that each of us attended this hackathon was to gain exposure to new frameworks, technologies and methods of working. Thus, discovery was the main theme that we wanted to convey with our app. Regardless of level of experience, we hope that users of our app will feel motivated to explore the technologies that we share with them. In early prototyping, we actually found it quite comical that some of the most experienced people here at the hackathon didn't perform any better at our game than newbies. In the world of CS, there's always something new to discover, and that's the attitude that we want Code x Culture to convey. </p>\n<h2>What it does</h2>\n<p>Our web app allows users to drag cards left or right if they think the randomly shuffled card presented to them is either a computer programming language or indie band. Inspired by the addictive Tinder UI of swiping, we wanted to tap in to a familiar interface to highlight the fun, topical nature of our project. Users can also click on card titles to learn more about the topics that are presented.</p>\n<h2>How we built it</h2>\n<p>Our web app was built with Javascript, HTML, and CSS. This was our first time using javascript, and we utilized the swing.js library for our swiping interface. We all had background in HTML, CSS, and graphic design, and wanted to explore more languages of front end development.</p>\n<p>Drawing upon our experience working in a design studio, we utilized the agile work flow. We began with branding exercises to capture the emotions and characteristics we wanted to capture in our project\u2014cheeky, surprising, educational, familiar\u2014and then moved breaking up our objects into a project backlog, spring backlog, spring progress, and review. We were constantly focused on building a MVP that was functional, and focused on adding features and enhancements as time went on.</p>\n<h2>Challenges we ran into</h2>\n<p>Initially picking a path to take in terms of frameworks was difficult due to our lack of front-end experience. We first explored using React, but eventually happened upon a more fitting solution given our time constraint. Installing and tinkering with the swing.js library was a challenge all in itself, but thanks to Marc from Robin we were able to navigate the interface. We each got further practice with git, node, express and other workflow technologies that we previously only had minimal experience to.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are really proud of playing with a new language, and building a product that is fun to use and show to friends. Our team was able to work collaboratively within both design and development, and we all had a good time working across our disciplines.</p>\n<h2>What's next for Code vs. Culture</h2>\n<p>We are interested in creating different themes for the site, comparing programming languages to all sorts of topics like Renaissance painters, Shakespearean characters, poem titles, etc. We hope to use our site to expand knowledge and discovery of programming but also different art and entertainment topics. Also, having only focused on web development this weekend, we hope to be able to see this concept expand to mobile.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag\">swing.js</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://applebynj.github.io/HACKUMASS0100/public/\" rel=\"nofollow\" target=\"_blank\" title=\"https://applebynj.github.io/HACKUMASS0100/public/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>applebynj.github.io</span>\n</a></li>\n<li><a href=\"https://github.com/applebynj/HACKUMASS0100\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/applebynj/HACKUMASS0100\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://www.codexculture.com\" rel=\"nofollow\" target=\"_blank\" title=\"https://www.codexculture.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>www.codexculture.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["After branding exercises I primarily lead development while Vanessa covered Design. This was my first heavy exposure to JavaScript- I also got in great practice with git, hosting local servers through express with mentor help, and explored React framework before deciding on Swing.", "Completed branding exercises, sketched wireframes, chose color palettes, designed low fidelity mock ups, contributed to CSS and HTML pages", ""]], ["PITCH", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>WE LOVE MUSIC. WE LOVE MAKING THINGS. </p>\n<h2>What it does</h2>\n<p>IT TAKE VIDEOS, EXTRACTS THE AUDIO, TRANSFORMS THE AUDIO FROM A TIME DOMAIN TO A FREQUENCY DOMAIN, TURNS THE FREQUENCY DOMAIN INTO AN IMAGE, THEN FINALLY TRAINED A CLARIFAI MODEL BY PASSING IT THE IMAGES OF THE MAPPED FREQUENCIES IN ORDER TO IDENTIFY INSTRUMENTS.</p>\n<h2>How we built it</h2>\n<p>We wrote a java program to scrape sites for URLs of music, sorted by instrument. Using Python, we extracted audio files from the videos and performed Fast Fourier Transforms on them. The FFT took 4 second intervals and outputted the harmonic frequencies in each 4 second interval. We normalized these harmonic frequencies by setting the highest amplitude frequency wave in each interval as 1, and all other amplitudes relative to it. We then converted these frequency files to images. We did this by setting each pixel in the image to a specific frequency and the intensity of the pixel corresponded to the amplitude. Next we whisked the images off to Clarifai for training. By tagging the the images by instrument, we train Clarifai to identify instruments by frequency. This works due to the different overtones produced by varying instruments.</p>\n<h2>Challenges we ran into</h2>\n<p>Fourier Transforms are hard. It was very difficult to code for and even after figuring it out, we ran into a wall of errors. We discovered that we actually did not have the computing resources to run the algorithm so we had to use someone's home desktop from our laptop. Additionally, we attempted to use the Clarifai java API--since most of our group knew java and not Python--without any machine learning experience. Although we finally figured it out, it turned out to be too complex and we used the Python API instead. Lastly, we found it difficult to find libraries for Html parsing, scarping, and Fourier Transforms. The end result was that we had to test out many libraries.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>NOT SLEEPING, getting better at table tennis and opening doors, actually getting a working project--which INCLUDES A FAST FOURIER TRANSFORM--which feels really good.</p>\n<h2>What we learned</h2>\n<p>Hackathons are fun, TJ can do Fourier Transforms, the correct pronounciation of Fourier</p>\n<h2>What's next for PITCH</h2>\n<p>PITCH currently only identifies 5 instruments. The next step would be increasing the number of instruments the model can predict. The ultimate goal would be to include all instruments that are played in the modern day. This would entail gathering more data on instruments to provide to our Clarifai model. Data can be collected on new instruments to allow the model to identify new instruments but can also be collected for instruments that can already be identified. For each bit of data collected, we increase the accuracy of our model. Data for instruments would be affirmative data, telling the model what an instrument looks like as a mapped frequency image, but data for other instruments would tell the model what the instrument isn't, also increasing accuracy. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["Scale Excavator", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Scale Excavator \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/716/datas/gallery.jpg\"/>\n<p>\n<i>A Photo of Many Parts</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>I saw an excavator in a construction site and thought it was cool.</p>\n<h2>What it does</h2>\n<p>It functions like a real excavator</p>\n<h2>How we built it</h2>\n<p>Lots of hot glue and wooden sticks</p>\n<h2>Challenges we ran into</h2>\n<p>Lack of time</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Wood based track system! Hydraulics!</p>\n<h2>What we learned</h2>\n<p>As for me, I learnt how to use a lot of tools like Dremel. We learned software, hardware, and circuits. Most important thing is that we learned how to do tedious work interestingly. </p>\n<h2>What's next for Scale Excavator</h2>\n<p>Finish up the project</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">mbed</span></li><li><span class=\"cp-tag\">servos</span></li><li><span class=\"cp-tag\">arm</span></li><li><span class=\"cp-tag\">popsicle-sticks</span></li><li><span class=\"cp-tag\">hot-glue</span></li></ul>\n</div>\n</div>", ["I am the lead project manager, designer, and builder. Thanks to everyone who helped me!", "", ""]], ["VR Playground", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>At the first idea jam, my teammates and I met a fellow who absoutely raved about the coming VR revolution. We were so taken with the idea that we decided to make VR our project. </p>\n<h2>What it does</h2>\n<p>It's a physics playground, or as much of one that could be built in three days by a couple of Unity and VR newbies.</p>\n<h2>How we built it</h2>\n<p>Lot's and lot's of caffeine. And no small amount of cursing at inanimate objects, both physical and digital.</p>\n<h2>Challenges we ran into</h2>\n<p>Where to start? We were new to Unity, new to VR, new to the Rift SDK, new to the Leap-Motion SDK, new to everything. What can I say? We enjoy a challenge.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Not giving up when our half-complete VR game became, despite <strong>significant</strong> effort, unfathomably and irrecoverably corrupted. </p>\n<h2>What we learned</h2>\n<p>Unity is a joy when it works, and worse than the darkest nightmare when it breaks. You will rave and rant through all five stages of grief, only to carry the pale memory of 'the project that might have been' as you move on to an even-more-minimum viable product. Also, that I shouldn't write dev submissions on three hours of sleep and <strong>entirely</strong> too much caffeine.</p>\n<h2>What's next for VR Playground</h2>\n<p>Absolutely nothing, because I'm going to sleep. Also because our previous, half-finished-yet-corrupted VR game _ will _ be resurrected.</p>\n<h2>Why it's not on Github</h2>\n<p>With the audio-visual elements, it quite exceeds githubs limit on uploading.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/oculus\">oculus</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/leap-motion\">leap-motion</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://drive.google.com/open?id=0B3pS6NOg9OAxcUJVNGFEa3NSZEU\" rel=\"nofollow\" target=\"_blank\" title=\"https://drive.google.com/open?id=0B3pS6NOg9OAxcUJVNGFEa3NSZEU\">\n<i class=\"ss-icon ss-link\"></i>\n<span>drive.google.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I was responsible for integrating the hardware and software for the VR environment, designing the playground and testing the physics. ", "I was the developer and evangelist. I researched Webvr and showed everyone around how awesome VR is. ", "", ""]], ["STASiS", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>STASiS</h1>\n<p><img alt=\"STASiS design example\" data-canonical-url=\"https://i.imgur.com/vxhF7ob.jpg\" src=\"https://res.cloudinary.com/devpost/image/fetch/s--HmEqQJRc--/https://i.imgur.com/vxhF7ob.jpg\"/></p>\n<h2>Inspiration</h2>\n<p>Noticing dangerous situations and reacting to them can often lead to a difference between life and death. Often times, noticing these critical situations is hard for people since it might require looking at lots tiny details and putting them together. Our solution to this: computers!</p>\n<p>With the increase in computational power in the last 5 years, computers have gotten exponentially faster, analyzing and moving heaps of data. With tools like Clarifai, TensorFlow and Caffe now open to the masses, it has become easier to combine these systems to build tools that are capable of collecting large amounts of data and processing them into usable data.</p>\n<p>Our inspiration for this situational analysis system came from real-life projects such as DeepMind, as well as fictional icons such as Person of Interest. While in some fictitious shows the system is used as a tool for monitoring people, we want our tool to be used for potentially dangerous situations which could save lives without being intrusive and respecting privacy.</p>\n<h2>How We Built It</h2>\n<p>We started building around the Clarifai API and playing with it. Another teammate developed a simple back-end web server capable of taking input from the webcam. We then linked these two up so that we could send pictures to the server and get back tags from Clarifai's API. We then built a statistical analysis tool for the data in a way that the more recent frames are given higher weightage when the system is trying to calculate the probability of a specific situation. We then brought it all together in a front-end that was written in Materialize. </p>\n<h2>Technical details</h2>\n<h4>Front-end</h4>\n<p>With our front, we trying to achieve one simple goal: Make the UI as clean as possible while still displaying all the information to the user. Materialize, which implements Material Design by Google, seemed to be a natural fit for this. We use a grid layout that is responsive to the device's screen size, and we get all the data from the server asynchronously. This means that the user does not experience a slow browsing experience, but still has all the necessary information plus nice visualizations.</p>\n<h4>Statistical Analysis</h4>\n<p>The statistical analysis that we use is one of the core algorithms for the project. The idea behind it is fairly simple: If two frames are close together (i.e. the timestamps have some range), the tool should weigh in analysis tags from the old frames when getting the probablilities for the new frames. This is done to normalize outlying probablilty for tags, which means that if the API get a tag wrong in a single frame, it is unlikely to affect the entire probability outcome.</p>\n<h2>Running the server</h2>\n<p>To build the required back-end, use the following commands:</p>\n<pre class=\"language-nolang\"><code>mkvirtualenv --python=$(which python3) hackum\npip install -r requirements.txt\ndaphne -b 127.0.0.1 -p 9000 hackum.asgi:channel_layer\n./manage.py runworker\n</code></pre>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/django\">django</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">materialize</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/redis\">redis</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://stasis-project.org\" rel=\"nofollow\" target=\"_blank\" title=\"https://stasis-project.org\">\n<i class=\"ss-icon ss-link\"></i>\n<span>stasis-project.org</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I came up with the statistical analysis for the system and wrote the program to implement it. I also worked on the back-end and exposed the Clarifai API to the system.", "I worked on Django to create a User Interface for testing and switched over to create a real-time graph using javascript. I also gained knowledge about Materialize UI.", "I headed the project and came up with the main idea for it using Clarifai. I wrote the front-end and wrote some back-end for piping data into the front-end, then hooked it up to AWS.", "I set up the realtime communication between the client and server parts of the application using Django Channels, and set up the HTML5 video system."]], ["DoppleGanger", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We\u2019ve all heard at least once in our life that each human being has 7 clones, that it to say seven look-alikes who live somewhere on Earth. But has anyone ever tried to verify this claim? </p>\n<h2>What it does</h2>\n<p>We built a web app that allows its users to find their clones around the world and get to meet them!</p>\n<h2>How I built it</h2>\n<p>We utilized the image recognition API provided by Clarifai, wrote code in Python, HTML, CSS and JavaScript, and we used Jinja2 as a framework for HTML templates and Flask as a web framework for creating the web app. </p>\n<h1>The challenge that we encountered</h1>\n<p>During the process of making the project, we have encountered several problems such as: getting the APIs and the face recognition to work correctly, laying our the UI design, miscommunication and probably...sleeplessness! However, the power of team work has helped us complete this project!</p>\n<h1>Our accomplishments</h1>\n<p>This is our first hackathon! At first, we thought the idea of face recognition may be too overwhelming to do in 2 days. We have finished the project!</p>\n<h1>What we have learned</h1>\n<p>We doesn't only create a really cool app that is pretty unique and useful but we only learn a lot from the hackathon: teamwork, communication, project management, design, function and even..new languages! </p>\n<h1>What's next</h1>\n<p>We are planning to add a login feature connected to social media platforms such as Facebook, Twitter, Linkedin and Google+ so that anyone around the world can use our website and that we respect privacy guidelines.\nAfter creating this project successfully, we are looking forward to collaborate again to create new ideas and make more unique products!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jinja\">jinja</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://findyourclone.github.io\" rel=\"nofollow\" target=\"_blank\" title=\"https://findyourclone.github.io\">\n<i class=\"ss-icon ss-link\"></i>\n<span>findyourclone.github.io</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["sit", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>+TITLE: sit: Simple Interactive Testing</h1>\n<h1>+AUTHOR: Team: 404 Team_Name_Not_Found</h1>\n<p>Hack UMass IV, 2016</p>\n<p>Team Members:</p>\n<ul>\n<li>Lukas Lazarek</li>\n<li>Owen McCormack</li>\n<li>Gordon Wu</li>\n<li><p>Christopher Gibbs</p></li>\n<li><p>Summary\nEffective testing requires time and planning to adequately check for a\ncode correctness. Strong design principals require developers to\ndetermine test cases before, during, and after the development\nprocess.\nSimple Interactive Testing (hereafter referred to as \"sit\") was\ncreated with the goal of easing and simplifying unit testing, removing\nall but the most insignificant barriers of entry.</p></li>\n</ul>\n<p>Sit is inspired partially by Doxygen, a tool that generates\ndocumentation, and the Boost Unit Test Framework library, a set of\ntools for testing code and constructing testing suites in C++. Sit\ngenerates unit tests for C++ functions from formatted documentation\ncomments above a function definition. Each comment specifies a type of\ntest to run along with relevant input and expected output information\nin a compact and succinct format. Invoking sit with a C++ code file\nproduces a corresponding file containing test code, ready to test your\ncode.</p>\n<ul>\n<li>Example\nAssume that you have a function named addTwoInts that\ntakes in two integers and returns their sum. In order to test this\nfunction with sit, you could add a comment above its definition similar\nto this:</li>\n</ul>\n<h1>+BEGIN_SRC C++</h1>\n<p>// &gt;&gt;&gt; test: 7 20 @ 27\nint addTwoInts(int a, int b){\n  return a + b;\n}</p>\n<h1>+END_SRC</h1>\n<p>In the sample above, \"&gt;&gt;&gt;\" is used to indicate the start of a sit test\ncase comment. After that is the keyword, shown to be \"test\" here,\nwhich tells what type of test to create. Next are the input arguments\nfor the test case, and, separated by an '@' is the expected output.\nTherefore, at its core, sit creates this test by checking that the\nfollowing statement is true:</p>\n<p>: addTwoInts(7, 20) == 27</p>\n<ul>\n<li>Overview</li>\n</ul>\n<p>** Types of Tests\nSit is capable of running three different types of tests depending on\nthe keyword invoked. The first is \"test\", which takes in values for\nthe inputs and the expected output of the function after passing those\nvalues.</p>\n<p>Next is \"test-exn\", which checks that the tested function invocation\nraises a given exception.This includes the ability to specify what\ntype of exception should be expected as well as even what the expected\nerror message should be.</p>\n<p>Finally, \"test-input\" may be used to test the side-effects of function\ninvocation.It takes in the input values that you would like to check\nafter calling the function, any initial setup conditions, and the\nexpected values of the inputs once the function has been executed.\nThis feature allows sit to test functions that are not purely\nfunctional, an important feature in a language as heavily\nobject-oriented as C++. By specifying both what exactly to inspect and\nallowing arbitrary commands to precede execution, sit attains a high\nlevel of flexibility that allows developers to easily test procedures\nwhose functionality extends beyond explicit input and output.</p>\n<p>*** Syntax specification\n**** test\n: &gt;&gt;&gt; test: input1 input2 ... @ (setup commands)* @ output\nE.g:\n: &gt;&gt;&gt; test: 1 @ 5\n: &gt;&gt;&gt; test: -5 2 300 @ 42\n: &gt;&gt;&gt; test: 2 4 @ (x = 5) @ 1</p>\n<p>These tests perform simple checking that the given inputs produce the given results.</p>\n<p>**** test-exn\n: &gt;&gt;&gt; test-exn: input1 input2 ... @ (setup commands)* @ exception_type exception_message\nE.g:\n: &gt;&gt;&gt; test-exn: 0 @ cstr \"input must be positive\"\n: &gt;&gt;&gt; test-exn: -42 @ std::invalid_argument</p>\n<p>These tests check that the given inputs raise the specified exception.</p>\n<p>***** Notes</p>\n<ul>\n<li>Exception_type of =cstr= is equivalent to \"const char*\"</li>\n</ul>\n<p>**** test-input\n: &gt;&gt;&gt; test-input: lvalue1 lvalue2 ... @ (setup commands)* @ rvalue1 rvalue2 ...\nE.g:\n: &gt;&gt;&gt; test-input: foo.x foo.y @ (foo = Foo()) (foo.x = 2) (foo.y = 55) @ 4 11\n: &gt;&gt;&gt; test-input: *p @ (int x = 5) (p = &amp;x) @ 10</p>\n<p>***** Notes</p>\n<ul>\n<li>Setup commands are most useful in combination with these test types</li>\n<li>Arguments to the the function may only be specified via setup commands, and argument values may be set by simply setting the argument as if it were a variable.\n\n<ul>\n<li>For example, a function with the signature =int foo(int x)= may specify the value of argument =x= by providing the setup command: =(x = 5)=</li>\n</ul></li>\n<li><p>Be aware of the code specified in setup commands: invalid, erroneous, or illogical setup commands may prevent compilation of the entire testing suite</p></li>\n<li><p>Invocation\n: python3 sit.py \nInvoke sit by providing it with a source file named \"source_file.cpp\" and it will produce another source file named \"source_file_tests.cpp\" in the same directory. This contains the testing suite for the original source file.</p></li>\n<li><p>Demo Instructions\nIncluded in this repository is an example source code file (example_code.cpp) that demonstrates each form of syntax in a practical setting. To run sit on the file and compile the resulting test suite, simply invoke\n: make sit\nin the root directory of the repository. Doing so will create an executable file named \"test\" which may be invoked to run the testing suite corresponding to the example code file. Two of the tests in example_code.cpp are deliberately designed to fail so as to display the format used when tests fail.</p></li>\n<li><p>Future features</p></li>\n<li><p>=test-interactive=: Interactive unit test generation</p>\n<ul>\n<li>Analyze function arguments to predict edge and standard cases</li>\n<li>Prompt for expected behavior in those cases</li>\n<li>Generate tests based on such interactive sessions</li>\n</ul></li>\n<li><p>=test-prop=: Property based testing</p>\n<ul>\n<li>In the spirit of QuickCheck, specify general properties or relationships that your function should hold</li>\n<li>Automatically generate large suites testing those properties</li>\n</ul></li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/makefile\">makefile</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/LLazarek/sit\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/LLazarek/sit\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I was the author of the module responsible for generating the C++ test file with code based on the required unit tests.", "I developed the module responsible for parsing the comments describing tests to perform into an internal data structure.", "", ""]], ["Qrator", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Qrator \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/542/datas/gallery.jpg\"/>\n<p>\n<i>Qrator Logo</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Our inspiration was derived from our motivation to break free from our years of torturous endurance of the cruel restrictions of music rating sites; being only able to rate our favorite songs with a certain number of stars is inhumane, and this weekend is the time we make this change to save ourselves and those who share our pain and suffering.</p>\n<h2>What it does</h2>\n<p>The project provides options for users to add their own categories to rate songs and allows connection to spotify. Data collected allows users to search up songs more freely, through with customizable categories. </p>\n<h2>How we built it</h2>\n<p>The project was made using javascript, nodejs, and the spotify web api. The site is served using express.js routing and swig templates, and the whole project itself is hosted on heroku.</p>\n<h2>Challenges we ran into</h2>\n<p>The main issues arose from not predicting what would be needed of the project as time went on. Some original functionality had to be entirely rewritten or scrapped completely when it conflicted with other features.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Finishing the app at all is a major achievement as burnout nearly prevented the app from being finished.</p>\n<h2>What we learned</h2>\n<p>Kevin learned more about coding in Javascript and the useful libraries that can speed progress of projects. Rudy learned that Javascript will never stop being a fickle mistress.</p>\n<h2>What's next for Qrator</h2>\n<p>Most likely a complete rewrite as a lot of the methods used to finish the app in such a short time are not the most efficient. As for future features, we'd like to incorporate playlist sharing so that users can see how what other users look for in music and how they appreciate music. We would also like to create a robust search system that's personalized to users customized categories so that they can find specific types of songs easier.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/heroku\">heroku</a></span></li><li><span class=\"cp-tag\">mdl</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/spotify\">spotify</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://qratorapp.com\" rel=\"nofollow\" target=\"_blank\" title=\"https://qratorapp.com\">\n<i class=\"ss-icon ss-link\"></i>\n<span>qratorapp.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the frontend, creating the user experience that exists currently", ""]], ["Watchdog", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>Watchdog is a monitoring, response, and spacial analysis device for law enforcement.  As a compact and lightweight shoulder-mounted item, Watchdog aids police enforcement by detecting hostile situations using a deep neural network, informing dispatchers of the situation with a live video feed. Watchdog also uses machine learning and facial recognition to identify individuals, with applications ranging from AMBER alerts to recognizing wanted criminals. </p>\n<p>Based originally around capabilities offered by the Microsoft HoloLens, the Watchdog has been adapted to offer the same functionality in a more practical and portable format for police officers in the field.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li><li><span class=\"cp-tag\">torch</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/opencv\">opencv</a></span></li><li><span class=\"cp-tag\">openalpr</span></li></ul>\n</div>\n</div>", ["", "", ""]], ["Emoji Home", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/LwQ-CjCBV6Y?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Need for speed</p>\n<h2>What it does</h2>\n<p>Emoji Home allows you to send emoji's to a central hub to control all of your connected devices. Send a detective emoji to find out who's at your front door or a lock emoji to arm your alarm system, the possibilities are endless!</p>\n<h2>How we built it</h2>\n<p>We used the twilio sms messaging api and node.js with express.js to write a server application that would handle incoming texts and execute the appropriate action and notify the user once the action has completed. We 3D printed a small floor plan and added LED's to visually represent calls to different devices.</p>\n<h2>Challenges we ran into</h2>\n<p>Connecting the Arduino board to wifi was a challenge as we did not have a wifi shield. So, we set up a local server and communicated with the board using the serial port. Another issue we encountered was emojis aren't completely standardized across platforms.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Successfully using node and the twillio api</p>\n<h2>What we learned</h2>\n<p>Learned how to use node.js and express.js as well as the twillio api</p>\n<h2>What's next for Emoji Home</h2>\n<p>Connecting it to real devices!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li><li><span class=\"cp-tag\">3d-printing</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/monsuratolaosebikan/emojihome\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/monsuratolaosebikan/emojihome\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Design and print representative house model. Develop and test sound-based demo features.", "", ""]], ["Pictionary with Jibo!", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Pictionary with Jibo! \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/688/datas/gallery.jpg\"/>\n<p>\n<i>An example image Jibo and recognize</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Jibo is cute, and has cameras. What better game to play than pictionary? This game is an exercise both in the interactive capabilities as well as it's cameras.</p>\n<h2>What it does</h2>\n<p>First, ask Jibo to take a guess your drawing. It will take a picture and send it off to be classified by our custom-trained tensor flow neural networks. The first step uses openCV to detect the playing area within the board and crop off the rest of the image, and make it black and white. The image then gets passed off the our tensorflow model to be classified. We build trained neural network using hundreds of images pulled automatically from Bing Image Search. We used the \"line drawing\" category to limit it to pictures that look more like something drawn a whiteboard. We then supplemented the training data with a few examples of our own hand-drawn pictures. This network gives us a likelyhood for each possible label, which is sent back to Jibo. Then Jibo will go through these items one by one, listening for a \"yes\" or \"no\" from the user. There is an adorable celebration and frustration animation that plays when it gets the answer right or wrong. This continues until it exhausts its entire vocabulary, at which point it insults your artwork in protest!</p>\n<h2>Challenges we ran into</h2>\n<p>The hardest part was learning how to use the jibo SDK. We are arguably the first people outside of private Jibo events to use the robot, so there was a steep learning curve, and we had lots of feedback for the Jibo team. We also don't have good experience with Node and javascript, so that slowed us down a lot.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>This was our first time using Tensorflow, and Jibo. We were able to use transfer learning on the existing Tensorflow Inception image classification model.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">jibo</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag\">atom</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/opencv\">opencv</a></span></li><li><span class=\"cp-tag\">tensorflow</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/docker\">docker</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/npm\">npm</a></span></li><li><span class=\"cp-tag\">whiteboards</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag\">neural-networks</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/jamesmorris2/jibo-pictionary\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/jamesmorris2/jibo-pictionary\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked mainly with Jibo itself. I made the animations that play when Jibo is happy or upset and created the logic for the game and speech recognition.", "I worked on Pre-Processing Image Data with OpenCV by identifying the nearest contour to the actual line drawing, and cropping the image to that size. I also helped train the model by filtering image data.", "I worked on Tensor Flow for the image classification algorithm which helps us to classify the images into the words in the pictionary database. We trained it on linedrawings from Bing Search and hand drawn images as well.", ""]], ["HackChat", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"HackChat \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/421/874/datas/gallery.jpg\"/>\n<p>\n<i>User can communicate with the group chat in Chinese.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"HackChat \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/421/875/datas/gallery.jpg\"/>\n<p>\n<i>...or Spanish</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Internet connects every one around the world and Facebook can provide a way for everyone to communicate with one another. But no one has came up with a tool to provide a solution to language barriers. We want to build a solution where a person living in one part of the world can communicate through our product with another person across the globe without having to learn another language. This experience will be as easy and as fast as texting your own family members.</p>\n<h2>What it does</h2>\n<p>HackChat is an international group chat that allows everyone around the world to communicate with one another in any language that the user has chosen. If a user is in Japan and can only speak in Japanese, he/she can still communicate and interact with everyone in this world group chat by either speaking or writing the messages in Japanese. Our product has the ability to recognize and detect speech from various languages and make a 1-to-1 translation to another available language. Which gives the user the ability to receive their response from other users back in their chosen language. </p>\n<p>In additional to speech recognition, our software has the text-to-speech ability which allows the user to hear their messages/responses in the language they chose. HackChat can individually help each user by translating every text messages into a message that is readable by the user despite the language that those messages were sent from. </p>\n<h2>How we built it</h2>\n<h2>Challenges we ran into</h2>\n<p>Implementing a speech recognition was a challenge that we faced since there are not as much API library that we can use for this implementation. Another challenges that we faced was making sure that those translation and speech translation are all being returned correctly. At the same time, we ran into the challenge of finding each other strengths so that we could allocate the tasks to the right person.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are proud to have the opportunity to represent our school, University of Massachusetts: Lowell, at HackUMass and we are very proud of our work and what we have accomplished with this project.</p>\n<h2>What we learned</h2>\n<p>We learned a lot about firebase and implementing a chat group. Our biggest take-away from this week is to always take a break and have fun in all the things we do.</p>\n<h2>What's next for HackChat</h2>\n<p>We currently have HackChat as a web application because a web application is a lot easier to demo and prototype at a Hackathon, but our goal would be to finalize our design and release a mobile version of HackChat for people around the world. Before we can do all that, there are a lot of bugs to fix and features to add. To build a world where communication is only a click away.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/d3-js\">d3.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag\">google-material-design</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-web-speech-api\">google-web-speech-api</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-translate\">google-translate</a></span></li><li><span class=\"cp-tag\">responsivevoice.js</span></li><li><span class=\"cp-tag\">speech-recognition</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://hackchat-2f2cd.firebaseapp.com/?#\" rel=\"nofollow\" target=\"_blank\" title=\"https://hackchat-2f2cd.firebaseapp.com/?#\">\n<i class=\"ss-icon ss-link\"></i>\n<span>hackchat-2f2cd.firebaseapp.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I set up the Firebase environment and created the GUI. I also help integrate the Google translation API  ", "Worked on front-end and UI.", "", ""]], ["DineFine", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>FineDine was inspired by the need to make the dining experience more pleasurable for customers, efficient for waiters and waitresses, and more profitable for business owners. </p>\n<h2>What it does</h2>\n<p>FineDine is a web application that allows you to contact your waiter or waitress telling them you're in need of assistance, or ready to receive your check.</p>\n<h2>How we built it</h2>\n<p>We built our project using HTML, CSS and Javascript/jQuery for the front end, and Node.js and Amazon web services for the back end.</p>\n<h2>Challenges we ran into</h2>\n<p>A major challenge we ran into was in attempting to publish the website to the internet. Features which worked perfectly when run locally suddenly were full of errors and crashes. We eventually resolved these issues by shifting our server hosting from Heroku to Amazon Web Services. </p>\n<p>Another challenge our team of two had to overcome was the mysterious disappearance of their lead visionary when the Devpost was due to be made, forcing their programmer to attempt to complete it to the best of his abilities.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We're extremely proud to have produced a fully functioning web application, ready to use, from scratch in the 36 hours allotted.With just a bit more tweaking, DineFine will be completely ready to be presented to businesses. We are also very proud of our extensive business plan, and research into the markets DineFine would be entering.</p>\n<h2>What we learned</h2>\n<p>The team's knowledge in Javascript, Node.js and the back end of web development increased dramatically over the course of this project. </p>\n<h2>What's next for DineFine</h2>\n<p>DineFine will continue to undergo development, eventually becoming marketed to restaurants, both small and large, as a cheaper alternative to the expensive tablets and systems currently available to these businesses.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://54.68.187.59/LoneWolf/13/\" rel=\"nofollow\" target=\"_blank\" title=\"http://54.68.187.59/LoneWolf/13/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>54.68.187.59</span>\n</a></li>\n<li><a href=\"http://54.68.187.59/Restaurant2\" rel=\"nofollow\" target=\"_blank\" title=\"http://54.68.187.59/Restaurant2\">\n<i class=\"ss-icon ss-link\"></i>\n<span>54.68.187.59</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["In Real Life (IRL)", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"In Real Life (IRL) \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/837/datas/gallery.jpg\"/>\n<p>\n<i>In a professional setting, IRL can be used to connect colleagues and potential employers.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"In Real Life (IRL) \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/835/datas/gallery.jpg\"/>\n<p>\n<i>IRL can be used to share your passions with others.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"In Real Life (IRL) \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/836/datas/gallery.jpg\"/>\n<p>\n<i>IRL can be used to break the ice and streamline social settings.</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>I think it\u2019s important to acknowledge that social media is fantastic. It\u2019s a medium through which people can express their ideas, feelings, and memories to anyone at any time. It allows people to share photos or coordinate events with friends and colleagues and even communicate with family members on the other side of the world. However, the irony of social media is that the more connected we become, the more disconnected we feel from many of the people we interact with in our daily lives. Casual social interactions are rapidly becoming a thing of the past, and it's because we don't have to be social in public to communicate anymore. With IRL, we see an opportunity to make social media truly social. We plan to create a fully integrated and interactive application that uses real life as its platform, encouraging people to go outside, strike up a conversation, and make their life legitimately social again. IRL will create an augmented reality avatar and profile above the user\u2019s head which will be visible to other app users and will contain links to any of the social media outlets which they choose to share publicly. Other app users can then use the cameras on their phones to see the avatar above your head. If at any point you don\u2019t want to have your information being public you can turn your avatar off so other people can\u2019t see it. We hope that IRL will be a new phenomenon that works to make being social a human thing again.</p>\n</div>\n</div>", ["I worked to define and create the concept behind our application, and what it aims to accomplish. I also contributed to our pitch and presentation.", "I worked to refine our app idea into a usable and marketable product. I contributed to writing our pitch and I also designed our presentation slides."]], ["Polynation", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>We wanted to do some machine learning, and we both were interested in environemental issues.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/iphone-sdk\">iphone-sdk</a></span></li><li><span class=\"cp-tag\">tensorflow</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/docker\">docker</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["Game On", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Game On \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/817/datas/gallery.jpg\"/>\n<p>\n<i>login</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Game On \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/818/datas/gallery.jpg\"/>\n<p>\n<i>demo list</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>The inspiration for our project comes from wanting to be able socialize with new people over a common ground of playing sports/games. </p>\n<h2>What it does</h2>\n<p>Our project is a mobile and desktop application that gets people together to play pick up games based on their interests and location.</p>\n<h2>How we built it</h2>\n<p>Through shire willpower and determination... \nWe used Angular as the front-end MVC and Express on top of Node as the backend.</p>\n<h2>Challenges we ran into</h2>\n<ul>\n<li>Having limited time</li>\n<li>Trying to implement React Native took a lot of time at first and ended up being scraped</li>\n<li>Having only 2 team members meant work delegation was pretty limited</li>\n</ul>\n<h2>Accomplishments that we're proud of</h2>\n<p>Having a prototype interface with some base back end functions</p>\n<h2>What we learned</h2>\n<p>Time management is key for these events.</p>\n<h2>What's next for Game On</h2>\n<p>The app will continue to be developed and will be tested at our school.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/angular-js\">angular.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li></ul>\n</div>\n</div>", [""]], ["SplitWork", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>As fresh grad students living with our batch mates and doing all the household chores on out own, we faced difficulties in dividing the household work fairly and systematically.Many a times we do not have the time to any activity and some other times we are not aware of what to do.The household chores greatly vary in their strenuous levels; where some are easy like vacuum cleaning, others are difficult like dish cleaning and most other flatmates are unaware of what other person has done.\nAll these problems prompted us to build the \"SplitWork\"</p>\n<h2>What it does</h2>\n<p>It performs 3 activities : a) Anybody in a group can can create any task, each member in the group will be able to see those tasks b)Through voting by each member of the group, the strenuous level of the task is decided  c). For each group the Pie-chart is made to show the relative contribution of each member in the group.</p>\n<h2>How we built it</h2>\n<p>We divided the work into Front-end and Back-end.Where Abhiram handled the Android part , I handled the back-end part.</p>\n<h2>Challenges we ran into</h2>\n<p>Both of us were new to the technologies when we started, therefore we had to learn and implement at the same time.At one point we were stuck in the Android and we could not resolve it.However, we changed our implementation a little bit and went ahead.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We never knew we could work so hard without sleeping for two days continuously.We had completed 100% of our back-end and 80% of android.</p>\n<h2>What we learned</h2>\n<p>Apart from the obvious technical aspects, the fun of going into Hack Mode.</p>\n<h2>What's next for SplitWork</h2>\n<p>We might think of building it to full and giving it to students , as we believe it can greatly help them.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/agankur21/SplitWork\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/agankur21/SplitWork\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["sievr", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"sievr \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/773/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"sievr \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/777/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>Seivr isn't anything complicated. You want food now, even if you're going to an impromptu dinner with your gluten-intolerant boyfriend and your Kosher aunt? Tracking macros becoming more than a confusing buzzword? We've got your back. With access to Google Maps, the USDA, and hopefully, at some point, menu-sharing and delivery sites like GrubHub and Foodler, we're collecting data to make sure you can find the right food for you. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/spring\">spring</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/pluens/seivr-2\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/pluens/seivr-2\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Sign to Text Convertor", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We decided to do something with visual recognition. After much deliberation, we decided to do a sign to text converter.\nWe wanted to create something that would help people who don't know American Sign Language (ASL) to be able to converse with vocal and hearing impaired people. </p>\n<h2>What it does</h2>\n<p>The Raspberry Pi takes input of the hand gestures and return a letter the hand gesture corresponds to. A series of such hand gestures would form words and sentences. We decided not to do any word gestures, and we thought it would be impractical to do that in 36 hours.</p>\n<h2>How we built it</h2>\n<p>We used a Raspberry Pi and install the Raspbian OS on it. Using a Pi Camera Module, we were able to capture images on the Pi. We decided to use simple images and the Clarifai API for the hand gestures. We used multiple images sources (~10 for each alphabet) to train our model to identify hand gestures. Using a python program, we trained our model to make probabilistic guesses on the hand gestures. Doing this multiple times, it would string the letter together to form words and sentences.</p>\n<h2>Challenges we ran into</h2>\n<p>Initially, we decided to use a XBox Kinect but the hardware wasn't available. We then decided to use a Leap Motion, but all of them were taken. Finally, we decided to use images. We had a bit of problem installing the OS on the Raspberry Pi, and had to eventually get a new SD card and re install the OS. For presentation, we decided that we would use a website to live stream the camera images in the browser and output the text in real time. However, after much research, we decided that we didn't have the time to accomplish this, and eventually settled on a terminal program for the prototype. \nKeep in mind that this text to speech converter is NOT very accurate. Due to the time limitation, we had to cut a lot of edges, and make compromises where we probably wouldn't have liked to. The accuracy is somewhere between 35-55% based on the tests we conducted. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are really proud of what we've done, although it may not be where we wanted it to be. Given the time limitation (and more than 36 hours of looking at screen, downing caffeine and not sleeping), it's nowhere near perfect, but we are proud of it.</p>\n<h2>What we learned</h2>\n<p>We learned how to program and use a Raspberry Pi, play around the Clarifai API, and general machine learning. </p>\n<h2>What's next for Sign to Text Convertor</h2>\n<p>We don't know. We would like to improve on it so that the accuracy improves and is consistently more than at least 80%. Maybe in the future, who knows? ;)</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag\">raspbian</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/jzhang23/Sign-Detection\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/jzhang23/Sign-Detection\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Skwad", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Skwad \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/784/datas/gallery.jpg\"/>\n<p>\n<i>Skwad</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>Skwad is an anonymous, location-based, social media app for iOS. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li></ul>\n</div>\n</div>", ["", "", "", ""]], ["Icebox", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration: The idea was collaborated during an brainstorming session.</h2>\n<h2>What it does: It builds and searches a recipe based on what is on hand in the fridge.</h2>\n<h2>How I built it: Used a combination of javascript, python, sqlite, html, bottle, and mod_wsgi in order to develop a web app.</h2>\n<h2>Challenges I ran into: Populating the database, adding more functionality, image to text recognition, getting the project from local to online</h2>\n<h2>Accomplishments that I'm proud of: Visual recognition software, web-scraping over five thousand recipes, designing the user interface and getting it online</h2>\n<h2>What I learned: learning a new API (Clarifai), more advanced levels of coding and programming, working with CSS in combination with html, building a web-scraper, set up a website and redirect url</h2>\n<h2>What's next for Icebox: Improving the UI and creating a mobile application. Adding nutritional information and scanning a receipt without uploading to the interface.</h2>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://bit.ly/2dcozYn\" rel=\"nofollow\" target=\"_blank\" title=\"http://bit.ly/2dcozYn\">\n<i class=\"ss-icon ss-link\"></i>\n<span>bit.ly</span>\n</a></li>\n<li><a href=\"https://github.com/partyrico/icebox\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/partyrico/icebox\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["VirtualHQ", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"VirtualHQ \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/640/datas/gallery.jpg\"/>\n<p>\n<i>Sample Workspace Frontview</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"VirtualHQ \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/663/datas/gallery.jpg\"/>\n<p>\n<i>Sample Workspace Sideview</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"VirtualHQ \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/757/datas/gallery.jpg\"/>\n<p>\n<i>Running Visual Studio</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>I've been planning to build a VR app for quite some time. I invested in a personal HTC Vive which I've been developing with in my free time. I've always wanted to have a 'Minority Report' style computer system and couldn't wait to get my hands on VR as soon as it was released. I've noticed some apps hitting the market of late, such as 'BigScreen' and 'Virtual Desktop' but I hope to make something that can take what they've started and improve on it.  </p>\n<h2>What it does</h2>\n<p>The current build is capable of streaming your desktop in real-time to a textured pane inside the game engine. You can build worlds around it and have your desktop displayed anywhere from the middle of a forest to the farthest reaches of space.  </p>\n<h2>How I built it</h2>\n<p>I built it using unity, the oculus rift (as there were no vives available), the leap motion (to compensate for the lack of vive remotes and also get that 'minority report' feel), c# and c++ for scripting the desktop capture using windows desktop duplication api.  </p>\n<h2>Challenges I ran into</h2>\n<p>The desktop duplication api was a great challenge. There is very little documentation of the api and even fewer examples of it in action. It was difficult and tough going scripting the api to render in real time to a texture in the unity engine.  </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I'm extremely proud that I was able to crack the desktop api and render my desktop inside the game engine. This was the first major step on the way to developing my app, the next being touch interaction.  </p>\n<h2>What I learned</h2>\n<p>I learned a great deal of C#, something that I had very little experience of before Friday night.  </p>\n<h2>What's next for VirtualHQ</h2>\n<p>My next immediate goal is to finish integrating touch interaction with the desktop. This will start with being able to tap your finger on the screen to click, and then develop into pinching the sides of the desktop to enlarge or make it smaller. I'll also implement rotation and inclusion of more than just one screen.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/oculus\">oculus</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/leap-motion\">leap-motion</a></span></li><li><span class=\"cp-tag\">desktop-duplication-api</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["REMember", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"REMember \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/685/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"REMember \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/692/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Our primary inspiration was constraint. We had originally planned something else, that would've required input from a device. After unsuccessful attempts to acquire the necessary hardware, we decided to make something brand new - REMember. </p>\n<h2>What it does</h2>\n<p>REMember is a psychological machine-learning VR game where the player simply has to navigate left or right with the headset. The app tracks the player's decisions, and attempts to make the game more difficult for the player by offering choices based on the player's previous choices.</p>\n<h2>How we built it</h2>\n<p>We built this app largely through Unity3d and Visual Studio, splitting work between each of the members. Two people worked on code and concept at a time, and the other worked on assets in Unity.</p>\n<h2>Challenges we ran into</h2>\n<p>Fitting the algorithm into a game engine, working with colliders, trying to make it optimized enough for mobile phones to run in VR mode, </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Great algorithm, integration of randomization + logic, etc. </p>\n<h2>What we learned</h2>\n<p>We enhanced our understanding of animation and the connection between coding and modelling in 3D. We also learned the importance of being prepared with a back up plan or two, since we had spent much of our time pivoting and brainstorming ideas once our original ones were constrained by hardware and time limitations.</p>\n<h2>What's next for REMember</h2>\n<p>Graphical improvements, optimization of code and movement, enhanced machine-learning, and possible other uses such as flash cards for education.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li></ul>\n</div>\n</div>", ["", "", ""]], ["Catch", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We're a bunch of 4 international students who arrived at UMass last month. After getting here, we met a lot of people over casual and formal events but were not able to keep in touch with them. So we decided to build an <strong>easy</strong> and <strong>intuitive</strong> solution that <strong>shares our social profiles right at the point of contact without explicitly asking for it</strong>.</p>\n<h2>What it does</h2>\n<p>The designed solution involves a <strong>wearable device</strong> coupled with a <strong>mobile application</strong>. The app stores all the social profiles a person intends to share with other people at various events. It is at the user's discretion to pick what pieces of information they would like to share with people, depending on the nature of the event.</p>\n<p>Whenever two people shake hands with each other, their wearable generate a signal marking the meeting. Using this signal, the back end of our solution exchanges their social information and shows it inside their respective apps.</p>\n<h2>How we built it</h2>\n<p>We have used Raspberry Pi as the wearable to simulate the handshake event. Our back end runs on Python and MongoDB. The mobile application has been developed using the Oracle MAF technology that allowed us to build a cross-platform application.</p>\n<h2>Challenges we ran into</h2>\n<ol>\n<li>No open API that enables commonly available wearable devices to pair/interact with each other.\n2 . Had to get acquainted with Raspberry pi to simulate a wearable device.</li>\n<li>We struggled with the application development part and were not able to add all the features we had originally thought of implementing.</li>\n</ol>\n<h2>Accomplishments that we're proud of</h2>\n<ol>\n<li>We were able to develop a fully working, deployable back-end system within a day. </li>\n<li>A cross-platform mobile application that has most of the features we envisaged in our initial design is nearly ready.</li>\n</ol>\n<h2>What we learned</h2>\n<ol>\n<li>Coming up with a good idea is half the job done. </li>\n<li>The idea grows and changes as you discuss more within the team and with other people.</li>\n</ol>\n<h2>What's next for Catch</h2>\n<p>Lots! Upgrading our mobile app will be our topmost priority. We would also like to explore this idea with other, more convenient and cheaper hardware options like NFC sensors. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/MayankAgarwal/HackUMass\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/MayankAgarwal/HackUMass\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the client side design and development of the mobile app used in this project, using Java. Also, contributed in development of raspberry pi being used as a wearable proximity detection device.", "", "", ""]], ["ARPlace", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/2wIexRfD5jM?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Many of us love virtual reality (VR), and want such an experience, but it's inaccessible to many people due to the hardware requirements. Google solved that problem for consumers and developers by making Google Cardboard. But introducing augmented reality (AR) to the masses is a challenge because of even more hardware requirements. Our hope was to bring a AR heads-up display to the masses with our project.</p>\n<h2>What it does</h2>\n<p>When you point your phone at a store, restaurant, or other building, ARPlace takes your current location and bearing, to check where you're facing and your proximity to an establishment, and then uses that info with Google Places to scrape information such as the name, how expensive the place is, the type of establishment, and the overall rating from reviewers.</p>\n<h2>How we built it</h2>\n<p>We first started out with trying to use optical character recognition read the establishment's sign, but that proved to be a challenge due to stylized fonts on many signs. So we pivoted to using location based services to find out which establishment your phone is pointing at, and scraping data via that.</p>\n<h2>Challenges we ran into</h2>\n<p>Optical character recognition is hard to do on stylized text. Another challenge we faced was using the compass to find the bearing of the user in relation to surrounding buildings. Due to inaccuracies with the phone's compasses, we had to alter our algorithm a few times to make sure it was accurate. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Getting the compass algorithm fairly accurate.</p>\n<h2>What we learned</h2>\n<p>Compasses on mobile phones are annoying.</p>\n<h2>What's next for ARPlace</h2>\n<p>Ideally, this would be implemented in taxicabs, with the information of places overlayed on the places themselves so that tourists and other visitors can find out what's available. Businesses could pay for ads to show off their business more.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-places\">google-places</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/GeoffreyLong/AugmentedUMass\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/GeoffreyLong/AugmentedUMass\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Lazarus", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Lazarus \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/710/datas/gallery.jpg\"/>\n<p>\n<i>Sample dashboard</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<ol>\n<li><p>Ever wondered what the fastest song of the Beatles is? Or tried to find all Porcupine Tree songs with guitar solos greater than 3 minutes? Or the Radiohead song with the most number of happy words (if that's even possible)? Being a music junkie, i often find myself looking for these in a wide variety of places.</p></li>\n<li><p>I could not find a project (research or otherwise) which has tried to analyze the lyrics of Indian film songs using common data analysis techniques.</p></li>\n</ol>\n<h2>What it does</h2>\n<ol>\n<li><p>Pulls all metadata and audio features of all songs of an artist from Spotify using their APIs. Looks up the lyrics on Musixmatch and puts all of this into a single object which is then indexed. This can then be searched, aggregated and plotted to our hearts content.</p></li>\n<li><p>Crawled ~1800 Hindi songs (metadata + lyrics) from <a href=\"http://geetmanjusha.com/\" rel=\"nofollow\">http://geetmanjusha.com/</a> and analyzed them similarly. Because most data analysis tools/algorithms are primarily geared towards english data, I added a translation layer using the Google Translation APIs.</p></li>\n<li><p>Search using a restricted natural query language\nEg: 1. \"Bon Iver songs about loneliness\" 2. \"fastest Beatles song in the key of E\" 3. \"Hindi songs after 1980 about cars\"</p></li>\n<li><p>Use NLTK for semantic searching\nEg: \"Beatles songs about love\" should return hits for lyrics containing \"affection\"</p></li>\n<li><p>Plot all of the analyzed data in a neat dashboard. This dashboard can then be furthered queried and filtered by simple clicks.\nEg: If i want to find all Bon Iver songs with the time signature 3/8, i just click on 3 in the \"Time Signature\" panel and every other panel (lyrics, songs etc.) are filtered for this query. (Image 1)</p></li>\n</ol>\n<h2>How I built it</h2>\n<ol>\n<li>Core indexing is performed by elasticsearch and plotting by kibana</li>\n<li>Crawlers and API clients are written in python</li>\n<li>Server is in Django</li>\n<li>Typeahead for autocomplete</li>\n</ol>\n<h2>Challenges I ran into</h2>\n<ol>\n<li>Tuning the crawlers to work with all the peculiarities of the input datasets</li>\n<li>Reading through obtuse API documentation (Can it be anything else:))</li>\n<li>Setting up all the different pieces of the infrastructure (My AWS instance has only 1GB RAM, so i had to launch elasticsearch elsewhere and spent quite a while getting all the pieces to talk to each other sanely)</li>\n</ol>\n<h2>Accomplishments that I'm proud of</h2>\n<ol>\n<li>Solved a personal need (there will always be one user:))</li>\n<li>Probably stumbled upon an interesting research topic that isn't actively being worked on (data analysis of Indian film content and songs)</li>\n<li>Built an extensible platform that interested people can use to extract data. Elasticsearch has easily accessible APIs to get all of the indexed data. For example, an anthropology student studying Indian political outreach via films can extract data from my system easily.</li>\n</ol>\n<h2>What I learned</h2>\n<ol>\n<li>Sometimes, it's ok to build things just for yourself. Not for a million people.</li>\n</ol>\n<h2>What's next for Lazarus</h2>\n<ol>\n<li>Iron out all the rough edges (crawlers are a bit hard-coded)</li>\n<li>Add more Indic languages</li>\n</ol>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/spotify\">spotify</a></span></li><li><span class=\"cp-tag\">google-translate-api</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/elasticsearch\">elasticsearch</a></span></li><li><span class=\"cp-tag\">kibana</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/django\">django</a></span></li><li><span class=\"cp-tag\">typeahead</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/musixmatch\">musixmatch</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://people.cs.umass.edu/~skatkuri/lazarus\" rel=\"nofollow\" target=\"_blank\" title=\"http://people.cs.umass.edu/~skatkuri/lazarus\">\n<i class=\"ss-icon ss-link\"></i>\n<span>people.cs.umass.edu</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Bar Ticker", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Some Bars often get too overcrowded while some are not that busy. We want to give the not-busy bars an opportunity to temporarily lower drink prices to attract customers, while the busy bars can increase prices to increase the revenue generated.</p>\n<h2>What it does</h2>\n<p>It uses an algorithm that constantly updates prices of drinks to reach an equilibrium level. We display these prices on the our web app, and on the screens in the bar, so consumers can make cost effective decisions about the bar they want to go to at that time.</p>\n<h2>How we built it</h2>\n<p>Ionic agularjs firebase</p>\n<h2>Challenges we ran into</h2>\n<p>Algorithm to take min max prices for the bars and figures out via machine learning the most optimum price for maximum bar profit and cheap drinks for the user.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Figured out the algorithm. Finished a prototype application.</p>\n<h2>What we learned</h2>\n<p>We learnt how to think and leanr fast.</p>\n<h2>What's next for Bar Ticker</h2>\n<p>We plan to incorporate machine learning algorithms, so the system is able to predict demand ahead of time and adjust prices accordingly. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ionic\">ionic</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/angular-js\">angular.js</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/rohankaps123/BarTicker\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/rohankaps123/BarTicker\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I created the algorithm that was ultimately the most important part of the project using Javascript.", "", "", ""]], ["Carole", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Carole \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/423/575/datas/gallery.jpg\"/>\n<p>\n<i>Carole</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Science fiction stories like Star Trek feature a comm system in which the user 'opens a channel' to a nearby ship, without necessarily knowing any details about the ship itself. Why can't we use a system like this in cars?</p>\n<h2>What it does</h2>\n<p>The system enables a driver to open a communication channel with another driver, identified by their license plate number. Once communication is requested, the receiving driver may accept or decline the call.</p>\n<h2>How I built it</h2>\n<p>The radio aspects of the device are implemented with the NRF24L01 modules and Arduino microcontrollers. Libraries were used to control the radio modules, while our own code adds on to them to allow networking based on license plate identifiers. </p>\n<h2>Challenges I ran into</h2>\n<p>It was difficult to read data from a microphone and have the sound reconstructed because the Arduino Uno does not have a readily available digital to analog converter. Creating a protocol for the radio communication such that only the targeted driver was sent a voice message request.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>We are proud of our idea, and believe it has potential. Also, some of the more successful parts include three identical amplifier circuits were soldered to a prototype board, and these successfully allowed us to use speakers as microphones - a workaround justified by the microphones having nearly invisible readings. The state-logic for our networking protocol is simple and efficient. Furthermore, as a testament to our dedication, our group probably has the most hours awake per member as the average hours of sleep for the entire weekend was about 4 hours. Lastly, we made some cool cardboard props for the demo.</p>\n<h2>What I learned</h2>\n<p>This Hackathon allowed us to explore a lot of different types of hardware, including the Raspberry Pi and the NVIDIA Jetson - despite not using the boards in the end. Additionally, since the project required a variety of knowledge from within the fields of circuitry, hardware, software, and radar, knowledge from each member's particular engineering speciality was diffused as we helped each other in the design phases of the project.</p>\n<h2>What's next for Carole</h2>\n<p>The framework for the networking was the main experiment of this Hackathon. Next, the system can be extended to use a phone application - drawing upon the available GPS, WiFi, microphone, speaker, and additional phone services. Additionally, since the system is somewhat generic, it does not need to be restricted to the case of driving and could potentially be implemented for any vehicle, as well as within non-vehicular applications. For example, using Carole's framework, a person could address a text message to a person within their proximity without knowing their phone number or any of their personal information. Lastly, a user review system could be put in place, such that people can filter out users who spam advertisements or those who have low ratings.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">radio</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag\">audio</span></li></ul>\n</div>\n</div>", ["", ""]], ["Clarifai Your Fantasy Race", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Clarifai looked like they have some really cool technology so we started off by taking a look at their website to see exactly what they do. After spending some time just browsing around, we found the \"Clarifai Bounties\" section. One of the bounties was a Lord of the Rings hack and since we are both big fans of the series, we decided to pursue an idea related to it.</p>\n<h2>What it does</h2>\n<p>Our app takes in any image you give it and tells you which Lord of the Rings race you are: Hobbit, Elf, Dwarf, or Human. There are also a few Easter eggs and try inputting a completely BS image to see what it says! ;)</p>\n<h2>How we built it</h2>\n<p>We used Clarifai's fantastic image recognition API to note subtle differences between images that could help us distinguish between the races. We used Objective-C to program the iOS application and HTML and CSS to create the accompanying webpage.</p>\n<h2>Challenges we ran into</h2>\n<p>One of the challenges we ran into was using XCode since it was difficult to programmatically build the interface. Also neither of us had used Objective-C for years so we had to freshen up before we could actually begin programming again. With HTML and CSS, we spent many hours trying to get a cool parallax effect to work but in the end, succumbed to a lesser but still cool parallax.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Even though we were not able to get everything we wanted done, our project still looks pretty nice. We believe the webpage looks great and can be used as an effective marketing tool. The app on the other hand is functional but definitely needs more work before it can be put into production.</p>\n<h2>What we learned</h2>\n<p>We learned to always overestimate the amount of time it will take to complete a project. Things that you think will be easy turn out to be the hardest part sometimes. We also learned that submitting to Devpost takes longer than previously anticipated.</p>\n<h2>What's next for Clarifai Your Fantasy Race</h2>\n<p>We plan on continuing to build this product since both of us really like this idea. It even has the potential of extending to other movies / books / media, such as Star Wars, Game of Thrones, DC / Marvel superheros, Harry Potter, etc. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ios\">ios</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xcode\">xcode</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/objective-c\">objective-c</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag\">ccs</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/cocoapods\">cocoapods</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/LOTRRaceIdentifier\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/LOTRRaceIdentifier\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Capture Kingdom", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Capture Kingdom \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/736/datas/gallery.jpg\"/>\n<p>\n<i>An in-game screenshot</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Pokemon Go kinda</p>\n<h2>What it does</h2>\n<p>Users must take pictures of objects that are the correct color, start with the correct letter, or are simply a specific object. Some things the user collects are used to personalize the experience later on.</p>\n<h2>How we built it</h2>\n<p>Started with the Clarifai starter app, and built our own solution on top of that.</p>\n<h2>Challenges we ran into</h2>\n<p>Not starting from a clean slate in terms of app organization lead to slowdowns. We did not finish entirely. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>It is beautiful </p>\n<h2>What we learned</h2>\n<p>The true meaning of friendship, android UI, git stuff. </p>\n<h2>What's next for Capture Kingdom</h2>\n<p>Further development and bug fixes.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://bitbucket.org/Calebwk/capturekingdom/\" rel=\"nofollow\" target=\"_blank\" title=\"https://bitbucket.org/Calebwk/capturekingdom/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>bitbucket.org</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Holduino", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/YplLWhKXVLk?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Holduino \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/625/datas/gallery.jpg\"/>\n<p>\n<i>Success at 6:35 AM!</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Holduino \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/618/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Holduino \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/621/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Holduino \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/620/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Holduino \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/622/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Holduino \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/623/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h3>Holduino</h3>\n<p>We wanted to take a luxury electronic and see if we could make it into a prosthetic. That's pretty much it.</p>\n<p>The four of us came into this with a totally different idea, and, twelve hours in, when we figured out that our idea wasn't going anywhere, our teammate walked in with a box holding a Myo wristband looking like a kid on Christmas. The prosthetic was the engineer's idea almost immediately, and couple hours later he had literally worked up a sweat working on Autodesk Fusion 360.</p>\n<p>So we wanted to make a prosthetic that responded to real time impulses from the brain.</p>\n<p>Those among us who are disabled deserve the absolute best technology has to offer. We believe the best application of groundbreaking technology such as the Myo is to serve as the primary platform on which we approach the challenges they face- to be the thing, capital T thing, that disabled people use, instead of some less-than-immaculately designed device.</p>\n<p>Just a bit about what we did- we got the Myo paired with the computer, and then looked into what could connect to it. A direct bluetooth connection to the Arduino was not feasible, so we decided to keep an UNO serially connected (via USB) to the computer to which Myo was paired, and used the Arduino as the control center of our printed hand.</p>\n<p>After a heartbreaking failed 3D printing attempt and rather too many milligrams of caffeine, we had a prosthetic. It could respond to four types of commands and lift relatively light objects. All of this was done, first and foremost, as a proof of concept. Using hobbyist components and cardboard (and a highly advanced piece of consumer hardware), we developed exactly the kind of rudimentary hand that could be used to rehabilitate, or possibly introduce, someone to having their hand.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/myo\">myo</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/autodesk-fusion-360\">autodesk-fusion-360</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/hoanghonn/holduino\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/hoanghonn/holduino\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I help write the code for the hand and helped come up with solutions to engineering problems.", "", ""]], ["Plane Text", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>Sometimes, when you look up at the sky, it's nice to know that all your friends are looking up at the same sky. Everyone sharing the same sky allows us to see the same constellations and planets among the stars. We though, well why not add one more thing to that sky. With skyline, it would be possible to point your phone at a certain part of the sky, write out a message, and notify your friends that you've wrote something among the stars. When they point their phone into the night, at the exact position where you left your message, they'll see a starry version of what you had written. Further into development, we would add an ability to send private messages and perhaps draw something that your friends can hunt for in the sky.</p>\n<p>Notes:\nNot working as of yet (haven't yet figured out how to place activities on top of each other in Java)\nSome methods exist as unimplemented code, which would have been used if we had a bit more time\nThe demo as of now just accesses the camera API and will put a dialog box over the the background</p>\n<p>How We Would Have Done This:\nWhen you write a message, the text and positional information(pitch, yaw, roll) would be saved in a file which would be sent to your friends\nWhen your phone gets within bounds of the item, it appears on your phone screen\nWe tried converting the text inputted from a string to bitmap to png, but didn't know how to go any further in this</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android-studio\">android-studio</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://drive.google.com/open?id=0BwvL_6WLzLugSUpvNzR6VldvVUk\" rel=\"nofollow\" target=\"_blank\" title=\"https://drive.google.com/open?id=0BwvL_6WLzLugSUpvNzR6VldvVUk\">\n<i class=\"ss-icon ss-link\"></i>\n<span>drive.google.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["GrubSpot", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"GrubSpot \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/615/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"GrubSpot \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/616/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>The inspiration behind this app was derived from our love of food and our vision to recognize the need for this app for the regualr person. All of us love food but have trouble deciding which restaurants to go to or what cuisine to try. This app, GrubSpot, eliminates the choosing aspect of eating with friends. Additionally, with its algorithm to showcase the highest rated restaurants first with plenty of reviews, users are bound to recieve top choices for restaurants and food that certainly will not disappoint.</p>\n<h2>What it does</h2>\n<p>The app utilizes geolocation and database information to assist a user in choosing the quickest path available from points A to B and additinally showcasing all the restaurants that appear on the roads you travel on so that you never wander afar from your roads. This peculiar feature allows one to eat and try sophisticated food while traveling alongside their preselected destination to save time. The app could be used to save one's time or to be enjoyed by people who yearn for a new dining experience between point A and B and have no idea where to proceed. By eliminating the choice aspect of eating out and recommending restaurants, Grubspot allows choosing  to be easier and calm the anxiety of the undecisive.</p>\n<h2>How we built it</h2>\n<p>This application is built with swift, php, json, and sql so we can maintain our data, access it, and also grant directions from points A to B. Swift was utilized to design the interface of the app for iOS and everything from the app design wise was built from scratch. Php was primarily used for our backend and we coupled he language with json and sql so that we can ganar data for restaurants and their respective informaiton, recieve them in a usable form, and store them in our database. Sql is used to insert and sort through our restaurant data. We also extended our api usages from Google Maps to Yelp to future aid us on our journey and these apis allowed us to calculate distances and other crucial information.</p>\n<h2>Challenges we ran into</h2>\n<p>Challenges that we were confronted with include the integrating of the programs with the app as well as ensuring that the information we recieved from our scripts were correct data and of correct fields. Writing the programs on the computer took a while but for everythign to link up to an iPhone command really presented a challenge for us. Additionally, in the very beginning, scraping data for restaurants and working with apis were something we were not familiar with so syntax and usage gave us dilemmas. Most importantly, our algorithm for disocvering which restaurants appeared near the user and how only the ones on the same street as the user gave us \nsignificant trouble as well. Every one of our challenged either derived from math or utilizing  something we were not used to doing.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We're extremely proud of the resultive app because of the clean simple design and the app's potential to really allow users to have a simpler life. The interface is super clean and well designed and we integrated the program with the app so that it works seemlessly well together. We're additionally proud of collaborating well together as a team as there were some tough scenarios for us to hurdle over. Overwall, we collaborated well and we designed a beautiful app that makes one's life easier. </p>\n<h2>What we learned</h2>\n<p>We learned a multitude of things including new computer science languages, amth, and design. We all became more familiar with php and json because of the amount of data we had to scrap from yelp. Forcing us to recieve all the data from yelp made us utilize json and php constantly, and in the end, it certainly feels like we know the two languages like the back of our hand. Moreover, every language we feel more confident coding in because of the effort we put in. Some math was implemented, and we learned about Haversine's equation and how relevant this equation is to the real world. Lastly, we all learned about app design and how to create wonderful user interfaces without confusing anyone. The team played about with different design cues, and through these design cues we were all exposed to swift and most of the functionalities of it. This project included a lot of features, and it was through these features the group was forced to use so many languages in so many different ways.</p>\n<h2>What's next for GrubSpot</h2>\n<p>Next for GrubSpot, we can further push development into other cities of the USA such as New York or LA. We can also implement options for users to choose the kind of search algorithm they want aka do they want eateries close to their starting location or their end location. More features could cater to restaurants and allow users to make reservations on the store or possibly even order food online to skip the wait at the restaurant and allows users to pick up their delicious food and contine along their way. Lastly, a real time map view of the restaurants that appear alongside a user's route would be fantastic. We ran out of time to implement it in this hackathon, but we would love to have this feature somewhere in the future.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/iphone-sdk\">iphone-sdk</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mysql\">mysql</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/SazanDauti/GrubSpot\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/SazanDauti/GrubSpot\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Shook", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>SHOOK</h1>\n<h3>OUR GOAL</h3>\n<p>A bet is an agreement that is made between two parties that involves a wager. What happened when someone breaks that agreement? With Shook, you can record every bet you made with your friends and foes. We aimed to create a website where we bring friendly competitions to another level. Now you can extort money from your friends in the form of fun.</p>\n<h3>FEATURES</h3>\n<p>Quick and easy to create a bet. Send the generated link to a friend to seal the deal.\nAccounts to keep track of wins and losses</p>\n<h3>HOW TO USE</h3>\n<p>Create an account if you do not have one and log in.</p>\n<p>Input the desired bet and consolation prize into the appropriate fields.</p>\n<p>Click create bet.</p>\n<p>Share the link with a friend.</p>\n<p>Have the friend agree.</p>\n<p>After a winner has been decided, return to the link and choose the winner.</p>\n<p>You may access your previous bets using the bets history page.</p>\n<h3>HOW WE STARTED</h3>\n<p>Within 36 hours, we finished this project for HackUMass IV. Our inspiration for our idea is none other than the author of this about page, Wilson Chong Mei. He would always make bets and back out of them. Therefore we created this website to keep track of our extortions.</p>\n<h3>UPCOMING FEATURES</h3>\n<p>Incorporating multiple people</p>\n<p>Notifications and reminders about the bet.</p>\n<p>Viewing all bets that you are currently in.</p>\n<h3>MEMBERS</h3>\n<p>Ho Yin Ho <a href=\"mailto:hho@umass.edu\" rel=\"nofollow\">hho@umass.edu</a></p>\n<p>Chris Llaga <a href=\"mailto:cllaga@umass.edu\" rel=\"nofollow\">cllaga@umass.edu</a></p>\n<p>Wilson Chong Mei <a href=\"mailto:wchongmei@umass.edu\" rel=\"nofollow\">wchongmei@umass.edu</a></p>\n<p>Lay Gandhi <a href=\"mailto:lgandhi@umass.edu\" rel=\"nofollow\">lgandhi@umass.edu</a></p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/hoyinho/Shook\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/hoyinho/Shook\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["JigSolvr", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>What inspires us?</h2>\n<p>The first hackathon for every member of our team, we were inspired to push our learning to the limits and try to create something truly out of the ordinary. Yes, we were inspired to complete our project but more so to be enveloped by the experience. </p>\n<h2>What does our project do?</h2>\n<p>We set out on our mission attempting to make puzzles more enjoyable to the everyday person, and that's exactly what JigSolvr does. We accomplish this in two major parts. The first of which is an algorithm that takes a picture of the completed puzzle (I.E. The picture on the box) and also a specific piece of the puzzle. It is then able to determine where in the larger puzzle the smaller piece is located. The second part is the mechanical aid to the algorithm. The user is able to place a piece into the robot's tray where it is photographed, and given to the algorithm described above. Once it's location is known, the robot brings it to the correct location in the puzzle and drops it, allowing for easy completion of the puzzle for the user. </p>\n<h2>How was it developed?</h2>\n<p>Our team of four was split down the middle for most of the weekend, with two coders and two mechanical designers. The algorithm had many different layers <a href=\"https://github.com/oziasg/JigSolvr\" rel=\"nofollow\">link</a>![(as seen on our github page!)], and continued to grow throughout the hackathon. The same triumphs can be quoted for our robotic piece, as 3D printing, electrical engineering, and other new talents were successfully put to the test. </p>\n<h2>Were there challenges?</h2>\n<p>There were many challenges we faced throughout the development of our project ranging from coding standstills to lacking access to hardware goods. Yes, many of these setbacks did impact our project and led to its finished project, but never did a setback cause us to rethink the importance of the project we were making. Some if not most of our challenges stuck with us until hacking ended, leading to an imperfect ending to our project. Although there were more things we wish we could have gotten done, our performance was still highly aggressive given the time frame allotted. </p>\n<h2>Accomplishments that our team is proud of</h2>\n<p>We almost finished. Two days ago we came in with an idea we only thought to take a chip out of. We did that and a whole lot more, finishing with differences ranging from hardware to new knowledge. To put it frankly, we should be asleep right now. But we're still here and looking at our computer screens until the minute this document is submitted. That's something we're proud of. </p>\n<h2>What did our team learn?</h2>\n<p>This can be best conveyed through a list.</p>\n<ol>\n<li>3D Printing</li>\n<li>Energy drinks are helpful</li>\n<li>Sleeping is more helpful than energy drinks</li>\n<li>How to use a linux terminal more effectively</li>\n<li>Energy drinks aren't actually that helpful</li>\n<li>How to use a breadboard</li>\n<li>How to implement libraries</li>\n<li>How to use a Raspberry Pi</li>\n</ol>\n<h2>What's next for JigSolvr?</h2>\n<p>Although we have no concrete plans for JigSolvr, we are still interested in smoothing the cracks between the code and the hardware we developed at this event. All of our team truly believe that this was an accomplishment for us as hackers and for the hackathon as a whole. It was a pleasure hacking alongside an organization such as HackUMass, and we look forward to joining again next year. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/oziasg/JigSolvr\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/oziasg/JigSolvr\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I primarily developed the feature recognition and association features, as well as helping to integrate them into the larger program.", "", "", ""]], ["The RBG", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We got in trouble. A couple weeks ago we had a noise complaint from our RA, so we decided to never have a noise complaint again.</p>\n<h2>What it does</h2>\n<p>Identifies certain scenarios and deals with them accordingly, scenarios such as having someone knock on the door or if the residents are too loud. </p>\n<h2>How we built it</h2>\n<p>We McGyvered a number of pieces and libraries together into a self contained system. Using an Arduino with a microphone plus a Raspberry PI with a camera. We used the Clarifai API to recognize if there was a person at the door.</p>\n<h2>Challenges we ran into</h2>\n<p>We had trouble figuring out how to measure these noises and visuals. Also how to reduce mic interference, how to identify who or what was at the door, how to take an image remotely, processing images, etc. We also had an android app and Pebble app that did not come to fruition.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We were able to establish two-way connection between the Arduino and the Raspberry Pi, all of our API's are integrated correctly, and all of the Arduino outputs are wired correctly.</p>\n<h2>What we learned</h2>\n<p>Bluetooth integration is a lot more annoying than the android tutorial might suggest. There are a large number of factors to two-step Bluetooth integration between master and slave computers. </p>\n<h2>What's next for The RBG</h2>\n<p>Finishing the Android app to interface between different users and the app, being able to change who is on what whitelist and what notifications each person gets for what situations matched. Ideally this will also have a firewall built in to protect the numbers of the users, and that there would be different whitelists for different notifications. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c\">c</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li><li><span class=\"cp-tag\">picamera</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/royJackman/hackUmass2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/royJackman/hackUmass2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I helped plan and design the mobile app; I focused most of my time on building the android app. It connects to the Rasberry Pi 3 via Bluetooth and would use a constant stream of inputs and outputs between the phone and the Rasberry Pi to communicate the different notifications to the user. It has a settings page where the use can control which notifications he/she may want and a volume page where the user can see the volume(decibel) in real time with sound controls. The code was done mostly in Java in the Android Studio IDE.\n", "I helped plan the build and began with working on the Pebble app. It was reliant on us also finishing a mobile app on Android so I moved elswhere in case it didn't finish. I spent most my time programming the Arduino. Getting the microphone to detect the correct noises. This was done in C C++. I also filmed the whole process. ", "I focused mainly on hardware development. By integrating the sensors used in the Arduino IoT configuration, it allowed the device to be able to receive and transmit valuable data necessary to the project. This data included sound level information and media from the Pi Camera. I also helped to develop the housing and demonstration pieces. In addition, I contributed  to the sourcing and specification of the parts required in order for the project to function.  ", ""]], ["Make Moves", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>While enjoying mandatory fun Chris and I realized that we could use the countless laps on the track and translate it into useful data via a wearable device.</p>\n<h2>What it does</h2>\n<p>The concept of Make Moves is a Smart Shoe which can calculate a runner's distance run, average speed, heart rate, calorie burn, and the pressure points on their feet (where they contact the ground). It can help runners fix or work on their form as well as be used for physical therapy, such as to help correct flat footed-ness.</p>\n<h2>How we built it</h2>\n<p>We built it using C++ and an Arduino/Micro-processor (Intel Edison) to, in theory, take in the raw data and process it at which point it sends it via Bluetooth to the Android application, written in Java, which displays the information for the user. (This was never achieved)</p>\n<h2>Challenges we ran into</h2>\n<p>Bluetooth was our biggest challenge, we were never able to achieve a stable connection which would transmit data. Due to this we were unable to complete our hack.</p>\n<p>We ran into other problems here and there but Bolted past them. We had to jog our memories to and dust off a few of our skills that we hadn't used in a while (such as C++ and Android development).</p>\n<h2>Accomplishments that we're proud of</h2>\n<ul>\n<li>Coming up with the idea; it let us get off on the right foot.</li>\n<li>The amount of running puns we were able to work into the DevPost.</li>\n<li>Making it to Target before they closed.</li>\n</ul>\n<h2>What we learned</h2>\n<p>C++ and Bluetooth</p>\n<h2>What's next for Make Moves</h2>\n<p>The closet probably, maybe a box next to the power glove and smart helmet.</p>\n<p>Or a multi-million dollar start-up. Who knows?</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/hardware\">hardware</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/intel-edison\">intel-edison</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/accelerometer\">accelerometer</a></span></li><li><span class=\"cp-tag\">force-sensor</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bluetooth\">bluetooth</a></span></li><li><span class=\"cp-tag\">wifi</span></li><li><span class=\"cp-tag\">shoes</span></li></ul>\n</div>\n</div>", ["UI/UX Design", "", ""]], ["Virtual Disc Golf Basket", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>As two students who love to play frisbee golf, we wanted to create something which would allow us to take the fun of golf anywhere.</p>\n<h2>What it does</h2>\n<p>Creates a virtual basket with ultrasonic ping sensors that lets the user know when they have scored a basket</p>\n<h2>How we built it</h2>\n<p>It is built with an arduino uno</p>\n<h2>Challenges we ran into</h2>\n<p>The sensors were innaccurate.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Calibrating the sensors to not count random extreme data points</p>\n<h2>What we learned</h2>\n<pre class=\"language-nolang\"><code>How to code with arduino\n</code></pre>\n<h2>What's next for Virtual Disc Golf Basket</h2>\n<pre class=\"language-nolang\"><code>we can now play golf ANYWHERE\n</code></pre>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li></ul>\n</div>\n</div>", ["", ""]], ["Verkuus", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>A friend told me about the Leap Motion sensors, and I had the idea to bring]\ndreams of playing air instruments alive. Now, in a short time frame the most\ncomplicated and desirable result is quite difficult to implement: air guitar.\nBut so I started with a keyboard.</p>\n<h2>What it does</h2>\n<ul>\n<li>Detects finger motion with the Leap Motion sensor and turns that into notes.</li>\n<li>Can limit virtual notes to a specific key to make it easier to sound good :D</li>\n<li>Tune the keyboard up or down by twisting your fist.</li>\n<li>Play chords by using multiple fingers at once.</li>\n</ul>\n<h2>How I built it</h2>\n<ul>\n<li>Used the Leap Motion API to start with, understanding how it tracks parts of the hands.</li>\n<li>Converts the X-coordinate of a finger into a note by rounding to the nearest note in a key.</li>\n<li>Check whether any of our fingers pressed down from our hand(s). If so, get a note for its position and play that note with a certain audio synthesis function.</li>\n<li>The Leap Motion API has an endpoint in Python, so I started with that and experimenting with the sensor.</li>\n</ul>\n<h2>Challenges I ran into</h2>\n<ul>\n<li>The Leap Motion api processes frames on multiple threads, so I had to sync up for audio synthesis since audio can only run on one thread.</li>\n</ul>\n<h2>Accomplishments that I'm proud of</h2>\n<ul>\n<li>I kind of <em>finished</em> something for a hackathon.</li>\n<li>My first sensor project.</li>\n</ul>\n<h2>What I learned</h2>\n<ul>\n<li>Clean, nice, tested code is hard to write in a short timeframe, especially working alone.</li>\n</ul>\n<h2>What's next for Verkuus</h2>\n<ul>\n<li>Better code architecture.</li>\n<li>Other instrument gestures: drums, guitar, etc.</li>\n<li>More advanced audio synthesis and different synthesizers</li>\n<li>Some kind of GUI to help users get a feel for the width and placement of virtual keys.</li>\n<li>Different synthesizers for each hand.</li>\n</ul>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">audiolazy</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/leap-motion\">leap-motion</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/loafofpiecrust/verkuus\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/loafofpiecrust/verkuus\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["SmartSTOP", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"SmartSTOP \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/550/datas/gallery.jpg\"/>\n<p>\n<i>When started working</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"SmartSTOP \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/577/datas/gallery.jpg\"/>\n<p>\n<i>screenshot of message received</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration Use data science for safety</h2>\n<h2>What it does is Sends a notification to the driver's phone about a forthcoming stop sign</h2>\n<h2>How I built it is We used Clarifai API to train the AI to recognise stop signs and used their relative size in the image to estimate the distance. The output from the AI decides the response from Twilio API, which is used as a messenger between AI and person</h2>\n<h2>Challenges -  Repeatedly ran into challenges with some of the API codes. 2) Getting to interface between two APIs 3) Training the Clarifai AI with the appropriate images and marking them so as to get a high accuracy utilising with limited images samples.</h2>\n<h2>Accomplishments that I'm proud of -  1. The API can successfully predict with reasonable accuracy the presence of the stop sign in the images 2. Can provide basic feedback as to if the car is 100m away from the STOP sign</h2>\n<h2>What I learned  Coding, Decoding, keep working and having fun while somehow continue to avoid sleep</h2>\n<h2>What's next for SmartSTOP- Maybe become the engine that powers an app for mobile devices.</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">apis</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li></ul>\n</div>\n</div>", [""]], ["Medicus", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Medicus \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/565/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Medicus \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/566/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Medicus \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/564/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>Users will be able to scan their skin conditions which the application would analyze to find the best fit diagnosis. It would then provide the user with with more information about the condition as well as possible home remedies and professional medical solutions. The user is also prompted with the option of sending a report of the diagnosis to their doctor.</p>\n<p>The application's image recognition software is powered by Clarifai. This provides the backbone for the iOS application. </p>\n<p>Training the models for analysis of the picture was one of the biggest challenges we faced. Due to a very data-backed project, we had to run many images through the learning algorithm to begin to see accurate diagnosis. </p>\n<p>Medicus has the power to create a safer world. Teachers would be able to use it for playground accidents to check for possible infections. Doctor's would be able to provide faster solutions with a detailed report, including pictures, of the condition. In times of earthquake and other natural disaster, the speed of injury recognition can be vital in damage control. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/ios\">ios</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li></ul>\n</div>\n</div>", ["Helped organize, train the model, do research", "Trained the model by feeding in several images to make predictions more accurate.", "UI/UX. Machine Learning models for pictures.", "Developed a backend integration with the Clarifai API. Used machine learning to develop unique models for data classification"]], ["JIBO-HCI", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"JIBO-HCI \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/471/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>The inspiration behind this project was to make JIBO do cool things like interact with other smart devices (IoT devices) and be of more use for humans, while also increasing direct interaction with humans.</p>\n<h2>Hardware Used:</h2>\n<p>OpenBCI starter kit (3D printed sensor, circuit board, usb dongle, 1.5V AA batteries 4-pack, Myo wrist band, data cable, Bluetooth dongle, JIBO robot, 8GB RAM processing units (laptops, etc)</p>\n<h2>Setting up webservice hosting JIBO:</h2>\n<p>After installing the crowd-sourced jibo-sdk package, we implemented a RESTful architecture inside JIBO, by setting up a webservice in Express employing nodeJS. This enabled JIBO to receive api calls over the internet to perform relevant tasks, based on remote human input. Express was used so that the setup is compatible with the real robots brought at the hackathon. Once any JIBO was able to respond to api calls, it's fun seeing it dance around in reality.</p>\n<h2>Setting up Myo WristBand:</h2>\n<p>We set up Myo WristBand with the instruction given on the official website to be used along with Myo Connect on Windows. Apart from the SDK, Myo Connect has nodeJS capabilities to alter the function methods of event sequences. Since our JIBO webservice is also hosted using nodeJS, sending REST calls becomes easy.\nThere are 5 hand motions detected by Myo Wristband:  Wave-in, wave-out, spread-fingers, make-fist and double-tap. Each motion is mapped to a specific JIBO animation/text output.</p>\n<h2>Setting up OpenBCI:</h2>\n<p>We used the EEG signals from the human forehead to detect eye blinks, closing, and opening of eyes. We set up the Processing tool provided by OpenBCI to see our brain waves on their setup. The EEG output were signals with a lot of noise. We filtered the input data to smoothen the curve. We then employed thresholding and came up with peak detection algorithms to identify the motions in user\u2019s actions. Then we did a bit of signal analysis to detect three different type of actions: closing eyes, opening eyes, and blinking (quickly). This signal processing was done by making alterations to the BCI codebase available. Once the actions were differentiable to a reasonable degree of accuracy, we sent the appropriate calls over REST to control JIBO.</p>\n<h2>Challenges we ran into</h2>\n<p>Identifying peaks in the different channels of BCI interface and then mapping it to a particular user action.\nBuilding all of JIBO's code in EMAC6, and then finding that the actual robots brought to the hackathon are the older versions and do not support happy servers. We had to shift the whole thing to Express.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Making very different type of technologies talk to each other, and thereby delving into the field of IoT. Exposing JIBO to a plethora of other smart devices. Using a combination of BCI and Myo wristband, more complex tasks are possible to be dictated to JIBO through remote access by a human.</p>\n<h2>What we learned</h2>\n<p>That simple concepts can be used to integrate very different technologies and come up with something substantial. The coupling of brain waves with JIBO can make the robot in the long run talk for a speech-challenged person.</p>\n<h2>What's next for JIBO-HCI</h2>\n<p>The three products belong to the three companies, so apart from giving the demo and presentations, hopefully something else cool very soon.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag\">eeg</span></li><li><span class=\"cp-tag\">hci</span></li><li><span class=\"cp-tag\">jibo</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/myo\">myo</a></span></li><li><span class=\"cp-tag\">bci</span></li><li><span class=\"cp-tag\">rest</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://bitbucket.org/abhaymittal/jibo-hci\" rel=\"nofollow\" target=\"_blank\" title=\"https://bitbucket.org/abhaymittal/jibo-hci\">\n<i class=\"ss-icon ss-link\"></i>\n<span>bitbucket.org</span>\n</a></li>\n<li><a href=\"https://github.com/sudhamsu/OpenBCI_Processing\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/sudhamsu/OpenBCI_Processing\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Developed the interface for the myo armband to send requests to jibo and the backend for jibo.", "", "", ""]], ["LitBit", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"LitBit \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/424/797/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"LitBit \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/556/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"LitBit \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/557/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"LitBit \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/558/datas/gallery.jpg\"/>\n<p>\n<i>A demo of the capacitive touch system on version 1.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"LitBit \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/424/610/datas/gallery.jpg\"/>\n<p>\n<i>The basic webapp interface</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"LitBit \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/424/611/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We wanted to make campus safety and responsibility fun and easy. Having walked home countless times late at night through unsafe-feeling areas around our campus, we wanted to create something that empower students to stay safe and provide peace of mind when going out with friends.</p>\n<p>With the wearable device market booming, and some surveys even putting personal safety wearables above fitness trackers and smart watches as consumers' number one desired wearable device, we figured it was time to bring personal safety devices to college campuses.</p>\n<h2>What it does</h2>\n<p>LitBit is a wearable safety package that also interacts with others. By creating the ultimate wearable for college students, we aim to break out into a new market - reminding the world how people can look out for each other while also having fun. Checking in with your friends gives you comfort about knowing that your friend is safe, also, gives an opportunity to interact with them through our technology.\nThe main purpose being the safety of the individual, LitBit can tell your GPS location to 911 (or campus police) and your emergency contacts if you punch a quick combo. LitBit could also in the near future help you care about your loved ones safety, with the \"WalkMeHome\" feature. User can activate this feature when they get sketched out at night but sending an easy notification to their selected friend and basically make them walk you home by watching your every step on the map in the LitBit app.</p>\n<h2>How I built it</h2>\n<p>As the main processor board, the team used the Particle Photon, used Piezo sound alarms, vibration motors and capacitive touch sensors. Currently, LitBit has a sleek design, 3D printed from Carbon fiber and Onyx, however, only the basic functionality is running. User can call 911 and send their location to them. </p>\n<h2>Challenges I ran into</h2>\n<p>We originally set out to use a Bluetooth board that would pair with your phone and handle most of the processing in the mobile app. However, after working on the iOS app and bluetooth board for more than 15 hours, team decided to pivot to using Particle Photon because of technical difficulties.\nhole electrical design. Whenever we thought that every was done, some wires came unsoldered, or broke. Our battery charger broke halfway thought the competition however, we came up with a solution with the generic batteries on hand by tailoring them to our application.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>The Markforged printed enclosure came out great. Especially for a prototype and only having access to clunky electrical components, it was a pretty decent looking design.</p>\n<h2>What I learned</h2>\n<p>We learned how to cope with problems, some might just come and go, some might be very frustrating. Seeing the bigger picture in that gave all of us motivation to continue and finish our project. \nWe learned a lot about how to recover from unexpected roadblocks. When </p>\n<h2>What's next for LitBit</h2>\n<p>We would like to continue pursuing this project and turn LitBit into the ultimate wearable for college life. We wanted to develop all of our existing ideas to LitBit then improve it by coming up with unique concepts and functionality to maintain our position in the market.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/meteor-js\">meteor.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/react\">react</a></span></li><li><span class=\"cp-tag\">photon</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag\">markforged</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c\">c</a></span></li></ul>\n</div>\n</div>", ["I worked on the electrical design and embedded programming on the microprocessor. I helped with the mechanical design.", "I developed a CAD model for both the first and second iterations of our design, as well as worked on wiring design and implementation. ", "I wrote the front and backend for the web app and battled Mac OS and XCode updates.", ""]], ["DEPP", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"DEPP \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/498/datas/gallery.jpg\"/>\n<p>\n<i>20-Minute Simulation (Solutions up to a, b = 262144, 200x200 calculations per pixel)</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"DEPP \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/424/417/datas/gallery.jpg\"/>\n<p>\n<i>8-Hour Simulation (Solutions up to a, b = 1048576, 256x256 calculations per pixel)</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Just came up with a random idea after being defeated for a while about stuff.</p>\n<h2>What it does</h2>\n<p>Takes a simple diophantine equation (x^2 + y^2 = z^2) and finds solutions, then plots them to a greyscale image.</p>\n<h2>How we built it</h2>\n<p>Wrote it in C#, Visual Studio 2015. Originally was going to work in C++ but noticed no discernable performance difference so went with the easier C#.</p>\n<h2>Challenges we ran into</h2>\n<p>Optimization, threading.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>The threading was quite difficult to pin down :P</p>\n<h2>What we learned</h2>\n<p>How to do some basic image manipulation in C#, other C# control structures</p>\n<h2>What's next for DEPP</h2>\n<p>Probably just longer-term simulations to get larger images with a larger set of solutions, maybe some different diophantine equations. Further optimization.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/derbismarck/DEPP-CSharp\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/derbismarck/DEPP-CSharp\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [">Is Bismarck", ""]], ["robin-chat-hackumass", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>We don't have any friends, especially on the first day of class. To escape depression and meet some cool ppl, we built this app.</p>\n<h2>What it does</h2>\n<p>Basically finds people in your surrounding area (aka room) via Robin's Beacon and then creates a group chat with all the members of the room. This eliminates the need to add members to the group, since everyone in the room gets an invite via email to join the chat room. </p>\n<h2>How we built it</h2>\n<p>We used Firebase as our backend, and we also used Node.js as the server software to host the app. We hosted the app on Firebase's static server. We coded everything in JavaScript.</p>\n<h2>Challenges we ran into</h2>\n<p>We've never really built anything using APIs so just getting used to that was a challenging task. Working at the front end and the backend simultaneously was a difficult task as well, since we had to coordinate who did what. Setting up an automated email service also held us back for a bit. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>This is the first time we've built a project from scratch at a hackathon, in time. We also explored undiscovered avenues, be it javascript, or using a bluetooth beacon.</p>\n<h2>What we learned</h2>\n<p>We learned the entire process of front end to back end development, and some more javascript along the way.</p>\n<h2>What's next for robin-chat-hackumass</h2>\n<p>$10,000 per day? :P \nNah more like add ons, multiple chat rooms, better chat interface, and much more security!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/firebase\">firebase</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/siddarthpatel/robin-chat-hackumass\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/siddarthpatel/robin-chat-hackumass\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", "", ""]], ["hackumass", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>To help students who do not know where to start have a place to start!</p>\n<h2>What it does</h2>\n<p>teaching basic HTML and CSS</p>\n<h2>How I built it</h2>\n<p>With HTML, CSS, Jquery and Firebase</p>\n<h2>Challenges I ran into</h2>\n<p>Building with Wordpress or from Scratch. I chose building from Scratch because I have not done that for a long time and it is a good practice too!</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Finish the project myself in 1 and a half day and 1 hour of sleep for that period of time</p>\n<h2>What I learned</h2>\n<p>It is hard to start from scratch... especially coding by myself</p>\n<h2>What's next for hackumass</h2>\n<p>Full stack app, something cooler with more teammates</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/nctl144/hackumass\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/nctl144/hackumass\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["nudger", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>nudger</h1>\n<p>Project Nudger is our solution to task management in shared living spaces. The goal of this app is to make delegating shared tasks to the people living together easy and argument-free. The app allows people to be assigned to groups representing shared living spaces, and from there chores can be automatically assigned to the people in a particular group.</p>\n<p>In the future, a weight system for the chores would be implemented to assess the relative difficulty of chores and balance the load between each person.</p>\n<p>The app has a complete backend that can provide API for Android, iOS and Web App via Google Cloud Endpoints. It runs on Google App Engine and store data on Google Cloud Datastore.</p>\n<h2>Team:</h2>\n<p>+SeihakRithy Muth\n+Kenneth Tsui\n+Ethan Liu</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-app-engine\">google-app-engine</a></span></li><li><span class=\"cp-tag\">cloud-endpoint</span></li><li><span class=\"cp-tag\">google-cloud-datastore</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Rithy58/nudger\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Rithy58/nudger\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["Happenin", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Happenin \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/501/datas/gallery.jpg\"/>\n<p>\n<i>logo</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>About</h1>\n<p>Happenin is a web application for people living in the same area to share what they're doing and invite others to join in! Using it is easy: Just open the web page and see what others have shared in your area. You can click on the \"Create an event\" button to share your own activity too, whether it be a hackathon, nature walk, study session, or pickup ball game! We hope that Happenin can be a platform for people to meet new friends and form community bonds. </p>\n<h1>Development Team:</h1>\n<p>Dalton Miner, Quinn Vissak, Sam Markelon, Kyle Fujio</p>\n<h1>Building and running</h1>\n<p>Install node/npm</p>\n<p>Clone repo:</p>\n<pre class=\"language-nolang\"><code>git clone https://github.com/dwminer/happenin-web\n</code></pre>\n<p>cd to project</p>\n<pre class=\"language-nolang\"><code>cd happenin-web\n</code></pre>\n<p>Install dependencies</p>\n<pre class=\"language-nolang\"><code>npm install\n</code></pre>\n<p>Run the project</p>\n<pre class=\"language-nolang\"><code>npm start\n</code></pre>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/angular-js\">angular.js</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/dwminer/happenin-web\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/dwminer/happenin-web\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I designed the front page and wrote the controller code that glues the software together!", "I designed the logo, did research and documentation, basic work on the front end, some server configuration, and some work on the now defunct back end. ", "I contributed to web interface design, database design and implementation (future updates), logo design, front end HTML, Javascript, and CSS development, as well as test-driven development.", "I came up with the idea and came up with the UML diagrams. This was my first time working with html, Javascript, and CSS and collaborated on some front-end and backend. "]], ["Pour Me A Drink", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Pour Me A Drink \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/393/datas/gallery.jpg\"/>\n<p>\n<i>Logo</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>When determining our team\u2019s strengths, it was found that 4/5 of the team had background in programming and/or web design. As such, and especially due to the hardware constraints, a stroke of inspiration came out of browsing available API\u2019s at the time. It was the Brewery DB API that piqued our team\u2019s interest, as the rise of craft beers, etc. has created reasonable demand for such a service. We also saw use in the Wine.com API using that to further the idea for grander features.</p>\n<h2>What it does</h2>\n<p>Our website is a tool to help navigate the complex world of Beer and Wine. With this website you can put in some starting information and it will recommend you beer or wine with statistics about the chosen option.</p>\n<h2>How we built it</h2>\n<p>We built this website using a web framework called flask. With this we could use python to manage api calls to wine.com and breweryDB then integrating that with an html template file were able to make a webpage that could access both api's.</p>\n<h2>Challenges we ran into</h2>\n<p>One of the biggest challenges we had was that the API's we had were very powerful, but the documentation was complex and light on certain information. This caused lots of time to be spent on finding out the most effective way to utilize the api's and understanding the functions we were calling.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Given that this is our first hackathon event we have attended we are happy to have developed an idea and developed it into a starting prototype with actual and tangible results showing off our variegated skills.</p>\n<h2>What we learned</h2>\n<p>We learned bits about html, css and python from each other by working together as a team. We also learned about how to interact and utilize data from api's as well as integrating  python into html.</p>\n<h2>What's next for Pour Me A Drink</h2>\n<p>Our team\u2019s skills allowed us to capitalize on the construction of a website. Given time, a mobile application can be made. Should we end up moving forward, additional functionality in terms of search preference and user interfacing will be enacted.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/brewery-db\">brewery-db</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/wine-com\">wine.com</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://beermaid.me:8080/\" rel=\"nofollow\" target=\"_blank\" title=\"http://beermaid.me:8080/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>beermaid.me</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the front end of the website coding it in html and css. I worked with Ian and Sirius in integrating the python and html into one webpage. This was my first experience with python and integrating python into html. ", "I worked on the back end of the website using the bottle framework. I wrote most of the python code for the html management in bottle and also wrote the code for the beer half of the website.", "I worked primarily on the design of the logo and assisted with other graphical additions. This was my first exposure to programming and/or web design.", "I wrote the python script for the wine half of the website. I also helped fix a major issue in the beer python script. This was my first experience with web design and incorporating python scripts in a website."]], ["Hack_UMass Spike Storm", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>Hack_UMass</h1>\n<p>UMass Hackathon Project\nCollaboration between Joseph O'Rielly and Daoxu Ye\ngoals: Difficult but thoughtful\nMix of hard timing and difficult puzzles?</p>\n<ol>\n<li>You have a set (maybe destroyable) set of blocks at the middle tower format? </li>\n<li>Blocks come targetted at you, move at different speeds. </li>\n<li>Spawn rate increases as time passes</li>\n</ol>\n<p>Can't go through platforms/enemies in any way, shape, or form\nOnly ways to die are by hitting the bottom or a spike. (Requires a reset button)\nJump has a max time (1 second? 0.5 second?). If jump key hasn't been released, gravity starts then\nInfinite jump (Counter for jump = 1. Set to 0 if jump is released then pressed again) \nBlocks come flying at you (more and more later on). Same collision as platforms/enemies.\nBlock direction is based on spawn point and where you were when it spawned.\nPoint counter equal to number of blocks that have spawned so far</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/jake-orielly/Hack_UMass\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/jake-orielly/Hack_UMass\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["MusiKeys", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>I own a mechanical keyboard and love the sound it produces, though I always wanted more. I figured I could make a program to fulfill my desires without having to actually spend money. Soon I realized it didn't have to be the sounds of a mechanical keyboard I could simulate, but anything.</p>\n<h2>What it does</h2>\n<p>MusiKeys maps basic keys of a keyboard to audio files. Even when the window is out of focus or minimized, typing a key can still result in a sound being made. Whether it be small sound effects or entire songs, this program can play it, as well as additional functionality.</p>\n<h2>How we built it</h2>\n<p>Our team programmed completely in Java with the JavaFX library and JNativeHook. We worked as a team to delegate tasks amongst ourselves, then came together when we all felt we were ready to merge our progress. Finally, we would rinse and repeat until the final product came together.</p>\n<h2>Challenges we ran into</h2>\n<p>Some of the team were completely new when it came to the JavaFX library, so teaching how it worked and it's capability as well as restrictions took some time. We also ran into small issues along the way, as well as figuring out how to detect keystrokes even when the window is minimized.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are proud of being able to come with a finished project for our first ever Hackathon. The functionality works just as intended and we have accomplished what we consider to be a difficult but practical task.</p>\n<h2>What we learned</h2>\n<p>All of us learned more about the JavaFX library as well as the difficulty of detecting input even when the window is out of focus. We learned about the difficulty of working together as a team as well as how much better it is, being able to delegate more time to certain tasks.</p>\n<h2>What's next for MusiKeys</h2>\n<p>What's next for MusiKeys is improving the graphical design of the program and cleaning up the code to look more presentable. Afterwards, additional functionality and more ideas that are in the benefit of the user will be considered for updates.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/qtran09/MusiKeys/tree/master\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/qtran09/MusiKeys/tree/master\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked primarily on the UI, although I did have a few significant contributions with the functionality of the program. I worked on creating the structure of the interface and making the program work while minimized.", "I worked on the functionality of the buttons that would produce the sounds that came out of the keys. I worked on the GUI so that everything looks pretty and so that the user would not become confused. I also contributed a bit towards getting the program to be able to detect movements while the program is minimized.", "I worked mainly on the back end, working on the save-load functions, creating a global listener, so the app works in the background and managed the hash table holding the key's functions and files.", "I worked on the backend data structures and the integration with the GUI. I also added the functionality of bindstop, bindall, key listener, Override/overlap, button color control and multiple selection. Bugtested for errors afterwards. First time working on an project out of school, so it was nice."]], ["Movie Review Reviewer ", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Movie Review Reviewer  \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/406/datas/gallery.jpg\"/>\n<p>\n<i>Example Output</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Coming as a first-timer to hackathon, I was bubbling with a ton of crazy ideas. I had concepts down in my mind for computerized wallets, beautiful virtual reality games and sound-changing technology that hadn't been developed before. The only issue was that I am a noob. I overestimated what I could possibly do, and that led to the reality check of me finding out I couldn't develop almost all of the things I wanted too. However, my artificial intelligence seminar flashed in my head and I thought it would be neat to try out something involving machine learning.</p>\n<h2>What it does</h2>\n<p>This is a Python implementation of the <a href=\"https://en.wikipedia.org/wiki/Naive_Bayes_classifier\" rel=\"nofollow\"><strong><em>Naive Bayes classifier</em></strong></a>. The purpose of the classifier is that it will look at a block of text and analyze from what it knows about positive and negative words whether or not the block of text holds a positive or a negative message. It measures its own confidence level in how sure it is in its validity.</p>\n<h2>How I built it</h2>\n<p>The University of Pennsylvania developed a very well-known *<em>Natural Language Processing</em> toolkit for Python in 2001. It is known as <a href=\"NLTK\" rel=\"nofollow\">http://www.nltk.org</a> and it is widely used to develop bare functions involved with NLP. I worked around with some of the methods supplied by this library as well as creating my own to develop this. Originally it was a lot of trial-and-error; however, lots of reading later, things became simple.</p>\n<h2>Challenges I ran into</h2>\n<p>It's not simply simple to develop something like this. Some believe you can just count the number of <em>positive words</em> and compare it directly to the number of <em>negative words</em>. This does not hold true however. Consider the phrase, <em>\"he brilliantly succeeded at failing\"</em>. The sentence is definitely negative; however, just simply counting specific words to determine if it was positive or negative would make the machine believe the sentence was positive.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>I was absolutely proud of the brilliance behind my <em>Collective Classifier</em> simply because it took every single algorithm in the project [regardless of accuracy], took the best parts of all the algorithms, and merged everything into one classifier that gives the best result possible. All simply within a few lines of code:</p>\n<pre class=\"language-python\"><code>class Collective_Classifier(ClassifierI):\n    def __init__(self, *CLASSIFIERS):\n        self._CLASSIFIERS = CLASSIFIERS\n\n    def classify(self, FEATURES):\n        CUM_TOTAL_AMOUNT = []\n        for c in self._CLASSIFIERS:\n            t = c.classify(FEATURES)\n            CUM_TOTAL_AMOUNT.append(t)\n        return mode(CUM_TOTAL_AMOUNT)\n\n    def CONFIDENCE(self, FEATURES):\n        CUM_TOTAL_AMOUNT = []\n        for c in self._CLASSIFIERS:\n            t = c.classify(FEATURES)\n            CUM_TOTAL_AMOUNT.append(t)\n\n        CUM_TOTAL = CUM_TOTAL_AMOUNT.count(mode(CUM_TOTAL_AMOUNT))\n        CONF = CUM_TOTAL / len(CUM_TOTAL_AMOUNT) * 100\n        return CONF\n</code></pre>\n<h2>What I learned</h2>\n<p>I learned that NLP is definitely an incredibly bigger challenge to implement than I could have imagined. What I was able to do hardly even covers the basic necessities to properly <em>read</em> and <em>analyze</em> text written by a seven year old. However, I also learned how to properly implement classes and functions in a proper way and I also learned a lot of Python within the day. </p>\n<h2>What's next for Movie Review Reviewer</h2>\n<p>Having Movie Reviewers Review how the Movie Review Reviewer Reviews Movie Reviews.</p>\n<p>Just kidding. </p>\n<p>Honestly, instead of making it more <em>specific</em> for movies, I just want to make something that can be more broadly applied to many different segments of text.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/nltk\">nltk</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/natural-language-processing\">natural-language-processing</a></span></li><li><span class=\"cp-tag\">movie-reviews</span></li><li><span class=\"cp-tag\">pip</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/numpy\">numpy</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/scipy\">scipy</a></span></li><li><span class=\"cp-tag\">sklearn</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/DigitalVeer/HackathonNLP16\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/DigitalVeer/HackathonNLP16\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["ADKI", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Interested in working with machine learning and the Clarifai API.</p>\n<h2>What it does</h2>\n<p>Can take audio and convert it into a picture to have it analyzed by Clarifai's machine learning.</p>\n<h2>How we built it</h2>\n<p>We used a space filled curve library to create visual representations of audio binaries. We trained a model to recognize words from pictures.</p>\n<h2>Challenges we ran into</h2>\n<p>Some challenges we ran into were finding a way to represent the audio binaries as a picture. Our original approach was through javascript but later reverted to python in order to work with the space filled curve library.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We successfully communicated with an API. It was our first time working with machine learning and we were excited to see our model respond so positively. </p>\n<h2>What we learned</h2>\n<p>We learned how to train a Clarifai model and what a space filled curve was. We also learned how to manage a project with git. </p>\n<h2>What's next for ADKI</h2>\n<p>A GUI to help with training and streamline the experience. More words for our model to recognize. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li><li><span class=\"cp-tag\">scurve</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/lazaroshi/ADKI_py\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/lazaroshi/ADKI_py\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on using the Clarifai API for creating a model and predicting. ", "", "", ""]], ["LED Cube ", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/H09RF4P78ek?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"LED Cube  \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/421/760/datas/gallery.jpg\"/>\n<p>\n<i>LED Cube</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"LED Cube  \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/421/809/datas/gallery.jpg\"/>\n<p>\n<i>Soldering </i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"LED Cube  \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/362/datas/gallery.jpg\"/>\n<p>\n<i>Wiring scheme</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"LED Cube  \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/426/datas/gallery.jpg\"/>\n<p>\n<i>Layer scheme</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Both of us have little experience in hardware coding so we decided to use HackUmass as an opportunity to learn some arduino. As we explored the possible projects for arduino, we came across a cool demo video of LED cube on youtube <a href=\"https://www.youtube.com/watch?v=LeBbEWycK8g\" rel=\"nofollow\">link</a> Thus we decided to try  it out.</p>\n<h2>What it does</h2>\n<p>Our project is a 4x4x4 led cube. The circuit is designed to have the 16 columns (4 in each) distinctively controlled by 16 pins on Arduino UNO. The LED cube animation includes <em>flickers</em>, <em>wave</em>, <em>circling</em></p>\n<h2>How we built it</h2>\n<p><strong>Materials Preparation</strong></p>\n<ul>\n<li>100 LED lights</li>\n<li>Arduino</li>\n<li>4 100-Ohm resistors</li>\n<li>wires</li>\n<li>Breaker Board</li>\n<li> Soldering iron</li>\n<li>cardboard</li>\n</ul>\n<p><strong>Building the cube</strong>\n</p><ol>\n<li><em>Test LED light</em></li> \nBefore we soldered the LED light together, we tested each LED lights.\n<li> <em>Build the cube by layer</em></li>\nWe used cardboard to set up the structure of the cube. As shown in the image, the anodes of the led lights line up while the cathodes point upward. Then we soldered the LED lights from anode to anode.\n<img alt=\"layers soldering\" data-canonical-url=\"http://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/426/datas/gallery.jpg\" src=\"https://res.cloudinary.com/devpost/image/fetch/s--Scq06Fb7--/http://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/426/datas/gallery.jpg\"/>\n<li><em>Solder layers together</em></li>\nWe soldered four layers together from cathode to cathode.\n<li><em>Build circuit</em></li>\nWe connected each column of the cube to a pin on the arduino. Layers have separate input voltage control.\n<img alt=\"Wiring scheme\" data-canonical-url=\"http://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/362/datas/gallery.jpg\" src=\"https://res.cloudinary.com/devpost/image/fetch/s--A6oDwHiz--/http://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/362/datas/gallery.jpg\"/>\n<li><em>Arduino</em></li>\nWe defined animation pattern using Arduino.\nCode is stored at GitHub: <a href=\"https://github.com/YuHu0621/LedCubeArduino\" rel=\"nofollow\">link</a>\n<li> test and debug</li>\nWe tested and debugged our circuit. <p></p>\n<h2>Challenges we ran into</h2>\n<p><strong>Soldering the cube</strong>\nWe realized that it is hard to solder the circuit and not overheat the LED light. We constructed the cube twice because, at the first time, many LED lights were broken because of overheat. Also, it is challenging to avoid short circuit which always happened when wires mistakenly attached to each other. </p>\n<p><strong>Debugging circuit</strong>\nDuring the process of constructing the cube, we found its challenging to debug the circuit. Without a consistent pattern, the circuit conditions can be complicated (e.g. A short circuit being misinterpreted as a broken circuit)</p>\n<p><strong>Monitoring circuits using Arduino</strong>\nIt was challenging to monitor the input to the circuit using Arduino. We first mistakenly assigned 1, or high voltage to Led pins, but the lights didn't turn on. Then we realized the Led pins were connected to the cathode, so we changed assigned digit value to 0.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We are proud of successfully building the cube and creating animation using Arduino. <br/> After the first attempt, we analyzed our failure and continued with our second attempt. </p>\n<h2>What we learned</h2>\n<p>As our first attempt on hardware coding, we learned how to use Arduino to control circuits. Circuit schemes are very different from the real structure. The design of the real structure needs to consider construction difficulty, wires arrangement, structure steadiness, cost, etc. We learned to design the structure based on the circuits scheme. \nAlso, building an LED cube is a great hand-on experiences for us as both of us are now excelled in soldering and designing circuit schemes. </p>\n<h2>What's next for LED cube</h2>\n<p>We can add a motion sensor to the LED cube. Instead of following a pre-written animation pattern, the motion-censored LED cube can light up in the patterns of the user's hand motion. <br/>\nWe can also turn LED cube into other shapes, such as an LED globe.</p>\n</ol>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag\">led-light</span></li></ul>\n</div>\n</div>", ["", ""]], ["DuChess Vision", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"DuChess Vision \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/631/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"DuChess Vision \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/632/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"DuChess Vision \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/638/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>As busy chess enthusiasts we are always happy to start games of chess, but don't always have the time to finish them. We want to bridge the gap between the physical and virtual games of chess so we don't leave a game half finished.  </p>\n<h2>What it does</h2>\n<p>It takes an image of a chess board, and processes it so that you can seemlessly continue your gameplay online!</p>\n<h2>How we built it</h2>\n<p>We used corner detection and a self-made grid identifying algorithm on the image of the chessboard to find the individual squares. We then trained a logistic regression model to recognize chess pieces from the top down point of view. We took the chess board with all of the pieces labeled and used a Python chess library to display the game online!</p>\n<h2>Challenges we ran into</h2>\n<p>As a group we had little experience with computer vision. Corner detection our square-finding algorithm required significant effort to get working. Processing the output from the computer vision in order to perform machine learning also proved to be a technical challenge. Transitions from one part of our pipeline to another involved a great attention to detail.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Starting from scratch, we developed a robust corner detection system for the chess board, even with pieces on it and with pictures taken from various rotations. Weaving together different technologies and aspects of our project. Most of all are proud of how well we worked together, making sure that everyone had a challenge well-aligned to their skills and helping eachother to smooth out an roadblocks we encountered. </p>\n<h2>What we learned</h2>\n<p>We learned some foundational concepts of Computer Vision and we discovered that filming on a colorful rug is a terrible idea when detecting corners.</p>\n<h2>What's next for DuChess Vision</h2>\n<p>Feeding positions to a chess engine to get the best move. Adding a robot to move the pieces!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://drive.google.com/open?id=0By-0VtuIii2_ajdodC1reEN1QjA\" rel=\"nofollow\" target=\"_blank\" title=\"https://drive.google.com/open?id=0By-0VtuIii2_ajdodC1reEN1QjA\">\n<i class=\"ss-icon ss-link\"></i>\n<span>drive.google.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["SpeakIn", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"SpeakIn \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/664/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"SpeakIn \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/668/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"SpeakIn \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/669/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"SpeakIn \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/670/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"SpeakIn \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/671/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Journaling is a proven therapeutic process that everyone can benefit from. But, many people are too tired and forgetful at the end of the day to write journal entries every day. We developed SpeakIn, an iOS app that lets you speak into a microphone and transcribe what you say into an electronic journal on your phone.</p>\n<h2>What it does</h2>\n<p>SpeakIn sends a once-daily push notification to journal.  Think of it is a blog, but with less commitment.  This app listens to you, and records and saves your thoughts.  SpeakIn tracks tracks these thoughts and transforms them into emotional scores with sentiment analysis.</p>\n<h2>How we built it</h2>\n<ol>\n<li>Used Xcode's MVC for system architecture </li>\n<li>Used swift3's  AVAudioengine library to implement speech functionality </li>\n<li>Used Realm to create data structures for storage of journal entries</li>\n<li>Used Indico to calculate positivity of journal entries</li>\n<li>Used swift charts to graph the positivity of journal entries over time</li>\n</ol>\n<h2>Challenges</h2>\n<p>1) Since Swift 3.0 was released a month ago, it has not many tutorials.\n2) Our first project was an abject failure.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We have a working app, that accomplishes our MVP.  This almost never happens at a hackathon.  Two of our four member had never worked with Swift but made significant contributions.</p>\n<h2>What we learned</h2>\n<p>Pair programming can be effective (especially at night when you are tired)! We also learned how to communicate effectively with people we've just meet.</p>\n<h2>What's next for SpeakIn</h2>\n<p>+Attaching it to Amazon Echo.\n+Create graphs for the other emotions (fear, sadness, etc) we collected.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xcode\">xcode</a></span></li><li><span class=\"cp-tag\">indico</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/AliceFanYang/VoiceJournal\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/AliceFanYang/VoiceJournal\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I connected the Indico API for sentiment analysis on text, created and managed the Journal Entry data, created the Happiness Graph, and designed most of the UI.", "I helped introduce the team's newer members to swift, and served as a fire extinguisher for any and all fires.", "I worked on the front end and on the overall layout of the app using Swift. I designed the icons of the app. I also helped to implement the \"save\" pop-up for the entry recordings.", "I used swifts AVAudioengine library to implement speech recognition. I then parsed the speech and convert it into text. I also handed some of the UX on the front end. "]], ["Learning by Teaching", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>Most (&gt;99.9%) languges are not used in the internet. They will soon DIE if they\u2019re not used in the internet. We need to bring them to the internet. And to do that, we need to make them much easier to use. This project aims to establish framework to do that.</p>\n<p>Not all languages are equal\nAt least 3000 (!) written languages. Likely a LOT more\nNumber of languages commonly used in the Internet: &lt; 8\n: (\nWe care about languages. Languages are cool!</p>\n<p>Non-roman/english languages hard to type\nNot fundamentally, but because not enough work done.\nWhy not?\nNot enough resources.\nNot enough data.</p>\n<p>Think of students as almost-perfect teachers.\ufffd\ufffdComputers are \ufffdBABIES!</p>\n<p>Not a new idea AT ALL.\nDuolingo leverages languages learners\u2019 services to sell translation products.\nGoogle Translate uses suggestions.\nGoogle sees computer aided services (translation) as aids, not solutions. Because even humans don\u2019t agree on exact translations!\nWe know random errors are averaged away, and systematic errors are easily detected.</p>\n<p>Errors will be averaged out/ system wouldn\u2019t be completely off\nThere would be teacher supervision. Better for instructor because can coordinate answers in one screen, mass correct the problems\nIf EVERYONE makes same mistake, we learn WHAT kind of errors humans make, and work more towards helping/fix</p>\n<p>Instructor decides activity: fill-in-the-blanks, spelling/grammar correction, similar words, etc\nThe system generates examples of it that it has trouble figuring out.\nTakes the students\u2019 answer, and teachers\u2019 validation, and improves itself : )\nBetter students, better autocorrect, better typing, better translation !</p>\n<p>This is not an all-or-nothing game.\nEven telling the computer that cell_Lymphoma_PTCL does NOT mean peripheral in context is a BIG improvement.(real example)\nThe system/students will make many, many mistakes, but the System will still be better than it is now. \nComputers are REALLY bad at this sort of stuff, and as we mentioned earlier, even YOUNG adults can teach computers languages : )\nNo one is going to spend  billions of dollars in training data for thousands of languages. This is a chance for them!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag\">word2vec</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/natural-language-processing\">natural-language-processing</a></span></li><li><span class=\"cp-tag\">p5js</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://hack-umass-proj-shirish93.c9users.io/index?url=http://www.masslive.com/news/index.ssf/2015/04/hundreds_of_students_push_tech.html\" rel=\"nofollow\" target=\"_blank\" title=\"https://hack-umass-proj-shirish93.c9users.io/index?url=http://www.masslive.com/news/index.ssf/2015/04/hundreds_of_students_push_tech.html\">\n<i class=\"ss-icon ss-link\"></i>\n<span>hack-umass-proj-shirish93.c9users.io</span>\n</a></li>\n<li><a href=\"https://hack-umass-proj-shirish93.c9users.io\" rel=\"nofollow\" target=\"_blank\" title=\"https://hack-umass-proj-shirish93.c9users.io\">\n<i class=\"ss-icon ss-link\"></i>\n<span>hack-umass-proj-shirish93.c9users.io</span>\n</a></li>\n<li><a href=\"https://ide.c9.io/shirish93/hack-umass-proj\" rel=\"nofollow\" target=\"_blank\" title=\"https://ide.c9.io/shirish93/hack-umass-proj\">\n<i class=\"ss-icon ss-link\"></i>\n<span>ide.c9.io</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["DapMeUp", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"DapMeUp \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/302/datas/gallery.jpg\"/>\n<p>\n<i>Social media</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"DapMeUp \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/304/datas/gallery.jpg\"/>\n<p>\n<i>Generated QR code</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"DapMeUp \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/303/datas/gallery.jpg\"/>\n<p>\n<i>Mark Zuckerberg as an example</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"DapMeUp \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/305/datas/gallery.jpg\"/>\n<p>\n<i>Work page</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"DapMeUp \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/306/datas/gallery.jpg\"/>\n<p>\n<i>Different methods of searching for a person</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"DapMeUp \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/307/datas/gallery.jpg\"/>\n<p>\n<i>Home page of application.</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"DapMeUp \u2013 screenshot 7\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/308/datas/gallery.jpg\"/>\n<p>\n<i> Portfolio</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"DapMeUp \u2013 screenshot 8\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/423/307/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p><a href=\"https://travis-ci.org/angular/angular\" rel=\"nofollow\"><img alt=\"Build Status\" data-canonical-url=\"r\" src=\"https://res.cloudinary.com/devpost/image/fetch/s--lBC6UdwN--/r\"/></a>\n<a href=\"https://circleci.com/gh/angular/angular/tree/master\" rel=\"nofollow\"><img alt=\"CircleCI\" data-canonical-url=\"https://circleci.com/gh/angular/angular/tree/master.svg?style=shield\" src=\"https://res.cloudinary.com/devpost/image/fetch/s--C5VcaZ2c--/https://circleci.com/gh/angular/angular/tree/master.svg%3Fstyle%3Dshield\"/></a>\n<a href=\"https://gitter.im/angular/angular?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge\" rel=\"nofollow\"><img alt=\"Join the chat at https://gitter.im/angular/angular\" data-canonical-url=\"https://badges.gitter.im/Join%20Chat.svg\" src=\"https://res.cloudinary.com/devpost/image/fetch/s--hBni-H0R--/https://badges.gitter.im/Join%2520Chat.svg\"/></a>\n<a href=\"http://issuestats.com/github/angular/angular\" rel=\"nofollow\"><img alt=\"Issue Stats\" data-canonical-url=\"http://issuestats.com/github/angular/angular/badge/pr?style=flat\" src=\"https://res.cloudinary.com/devpost/image/fetch/s--ukVV0Tf8--/http://issuestats.com/github/angular/angular/badge/pr%3Fstyle%3Dflat\"/></a>\n<a href=\"http://issuestats.com/github/angular/angular\" rel=\"nofollow\"><img alt=\"Issue Stats\" data-canonical-url=\"http://issuestats.com/github/angular/angular/badge/issue?style=flat\" src=\"https://res.cloudinary.com/devpost/image/fetch/s--VlKWezw6--/http://issuestats.com/github/angular/angular/badge/issue%3Fstyle%3Dflat\"/></a>\n<a href=\"https://badge.fury.io/js/%40angular%2Fcore\" rel=\"nofollow\"><img alt=\"npm version\" data-canonical-url=\"https://badge.fury.io/js/%40angular%2Fcore.svg\" src=\"https://res.cloudinary.com/devpost/image/fetch/s--5B2pJwTL--/https://badge.fury.io/js/%2540angular%252Fcore.svg\"/></a>\n<a href=\"https://saucelabs.com/u/angular2-ci\" rel=\"nofollow\"><img alt=\"Sauce Test Status\" data-canonical-url=\"https://saucelabs.com/browser-matrix/angular2-ci.svg\" src=\"https://res.cloudinary.com/devpost/image/fetch/s--x8b80tsh--/https://saucelabs.com/browser-matrix/angular2-ci.svg\"/></a><br/>\n<em>Safari (7+), iOS (7+), Edge (14) and IE mobile (11) are tested on [BrowserStack][browserstack].</em></p>\n<h2>Inspiration</h2>\n<p>The source of inspiration came from few personal experiences. They were all negative experiences related to networking that could've been more pleasant had I been more resources and prepared for the unexpected scenarios. These scenarios can happen/might have already happened to some of you guys. A typical example could be the desire to approach a company recruiter during a career fair for that technical position that they have just opened. But what happens when you don't know anything about the company? Most of the times, individuals will either approach the recruiter and show interest or walk away. However, wouldn't it be much better if you instantly get all the statistics and core values about the company and THEN go up to them, showing you interest?</p>\n<h2>What it does</h2>\n<p>The primary focus behind DapItUp is to enable the ability of quickly connect with someone that you just meet. Additionally, it resolves issues such as trying to remember someone's name after the initial conversation with the other person as well as keeping track of where you've met your contacts.</p>\n<h2>How we built it</h2>\n<p>The main technology used to backup the is using the hybrid framework of Ionic2 side by side with angular 2. Using Firebase as a real time database to store our data, the application becomes more responsive by nature when used by the end user.  Another big technology that allowed this project to be plausible was implementing facial recognition through the Clairafa. The quick and simple people search allows us to focus on researching the employer instead of fumbling over useless internet </p>\n<h2>Challenges we ran into</h2>\n<p>There are a few bug issues that currently exists within the code base might not be implemented/fix during the duration of the company. Aside from that, there's nothing that's too much of an issue during our development. The are obviously times where we become stuck from going further into our project.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>The ability to actually created a functional set of features combined with a great application idea that we came up with is definitely the biggest and proudest achievement for this hackathon. Since there's only 2 members on the team, it was harder to complete all the ideas that we had in mind for a large scale project (relative to hackathon completion). However, through careful planning and dedication, we have gotten further than we had anticipated.</p>\n<h2>What we learned</h2>\n<p>Every Hackathon that we've been to is a learning experience with some rewarding prize. For this hackathon, we have learned that teamwork and careful planning can play a big part when it comes to completing a goal. </p>\n<h2>What's next for DapItUp</h2>\n<p>Since DapItUp is already at a  functional/complete state with lots of potential in growth, we plan on moving the application to the cloud(most likely with AWS) and integrate the components for full scale development (into the app store). Also, depending on the outcome of success, there could be a need to migrate the application from hybrid to use more a native language to reduce possible lag time and awkwardness for end users.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-maps\">google-maps</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/meetup\">meetup</a></span></li><li><span class=\"cp-tag\">auth0</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag\">ionic-2</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/verizon\">verizon</a></span></li><li><span class=\"cp-tag\">mitre-corp</span></li></ul>\n</div>\n</div>", ["", ""]], ["Phaseshift Game", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Phaseshift Game \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/288/datas/gallery.jpg\"/>\n<p>\n<i>the game!</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We like the video game dota2, and tried to \"demake\" the game into a much simpler one that is still fun to play. 3d -&gt; 2d. Also, we all like the idea of making games.</p>\n<h2>What it does</h2>\n<p>It's a game where 2 players face off to the death. Controller support. Animations. Flashy things. Woo!</p>\n<h2>How we built it</h2>\n<p>Java w/ libgdx game library.</p>\n<h2>Challenges we ran into</h2>\n<p>Animations, lack of dev hardware, biological needs</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Animation system! Flashing! Controller support! Art! That we actually made it! It's somewhat fun!</p>\n<h2>What we learned</h2>\n<p>Making a game with friends is quite fun. And stressful. Mostly fun.</p>\n<h2>What's next for Phaseshift Game</h2>\n<p>Refining the gameplay in the prototype, and going on to make more games</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/libgdx\">libgdx</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://brickcodes.itch.io/hack-umass-phaseshift\" rel=\"nofollow\" target=\"_blank\" title=\"https://brickcodes.itch.io/hack-umass-phaseshift\">\n<i class=\"ss-icon ss-link\"></i>\n<span>brickcodes.itch.io</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Programmer, architecture", "Worked on code", "Drew all of the art assets, was in charge of art direction. Came up with backstab idea.", "Development"]], ["IntelliDrive", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"IntelliDrive \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/320/datas/gallery.jpg\"/>\n<p>\n<i>Hackers in their natural habitat</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"IntelliDrive \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/323/datas/gallery.jpg\"/>\n<p>\n<i>Sign up page to join IntelliDrive</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"IntelliDrive \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/326/datas/gallery.jpg\"/>\n<p>\n<i>The main screen for IntelliDrive</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"IntelliDrive \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/678/datas/gallery.jpg\"/>\n<p>\n<i>Website home page</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>The barrier to entry for a smart car can be described in one word: cost. Smarter cars are in the future, but most people will be unable to experience smart cars for years because of price. </p>\n<p>We wanted to lower the barrier to entry. As of a couple of years ago, more than 50% of Americans owned a smartphone, the FCC and Germany declared Internet a utility. Smartphone and Internet use has never been higher, and modern smartphones have more than enough power to make a car smart.</p>\n<h2>What it does</h2>\n<p>So we did just that. We took smart functionality that you would find useful in your car, and implemented it in our app and service.</p>\n<p>Whether of business travel or for personal use, we help track your gas spending and miles traveled for responsible driving feedback.</p>\n<p>IntelliDrive Efficiency is a computerized way to monitor your vehicle's fuel efficiency through data entry whenever you fill 'er up.</p>\n<p>Getting tired on the road? Stay awake with our sassy chat bot Mia who will give you a run for your money with a lively conversation.</p>\n<h2>How we built it</h2>\n<p>Our service is broken into three parts, a robust data aggregating API, an Android front end, and a website.</p>\n<p>Our API has a number of REST APIs that any service can hook into. It receives data back from the API calls, and aggregates data in an easy to read format on AWS EC2 instances. All data used by the site is collected by our Android app which we get by polling GPS and triangulating position over a number of set intervals. We push our data back up to the server every 10 minutes or so. We display everything on our website using a combination of PHP, HTML, CSS, and JS. </p>\n<h2>Challenges we ran into</h2>\n<p>Threading on Android gave us some issues we run a number of processes off of the main thread to keep the UI fast, and for all networking. Ensuring every thread had an entrypoint back to the main thread was difficult. There were also some initial issues with routing RESTful APIs to where they needed to go.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We made a full fledged service with a well documented API, app, and website with unit tests in under 36 hours.  </p>\n<h2>What we learned</h2>\n<p>36 hours is both a very long time, and a very short time. It's amazing to see how much we were able to do in 36 hours, but when thinking about how much we could scale our idea, it seems like such a tiny amount of time.</p>\n<h2>What's next for IntelliDrive</h2>\n<p>Just wait and see. We want to continue development on the app and website for the forseeable future, so make sure to check out or website, and watch our GitHub!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/php\">php</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/xml\">xml</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/sql\">sql</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://intellidriveapp.com/\" rel=\"nofollow\" target=\"_blank\" title=\"http://intellidriveapp.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>intellidriveapp.com</span>\n</a></li>\n<li><a href=\"https://github.com/IntelliDrive/IntelliDrive-Android/releases/tag/1.0RC\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/IntelliDrive/IntelliDrive-Android/releases/tag/1.0RC\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/IntelliDrive\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/IntelliDrive\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked with the back-end, deploying us on an AWS EC2 server with a full LAMP stack. I also programmed the website and API functions using Laravel.", "I built the Android front end for our service, and used the app to collect aggregate data for our website.", "I created the logo, powerpoint, and color scheme as graphic designer, as well as advising and writing web content for this project. I began using HTML and CSS during this project, but didn't pick up enough to be effective in writing a front end. Being involved firsthand in a collaborative multi-dimensional design process was very rewarding and enjoyable!"]], ["FinesseFitness", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>FinesseFitness</h1>\n<p>Are you sick and tired of doing the boring workout videos at home? Do you want some variety in your routine? FinesseFitness is an interactive workout app that motivates you to go outside and participate in assisted workout routines. There are three levels of work outs to choose from: beginner, intermediate, and advanced. You can also link your Spotify music with FinesseFitness for the best workout you will ever experience in your life!</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/l-tn3314/FinesseFitness\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/l-tn3314/FinesseFitness\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I integrated Spotify's APIs so that users can play music while working out without having to migrate to a third-party app. This is my first time learning Android dev and I learned a lot about an app's structure and front-end dev from my cool teammates. ", "", ""]], [" Traktor Motion", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<h2>What it does</h2>\n<h2>How we built i</h2>\n<h2>Challenges we ran into</h2>\n<h2>Accomplishments that we're proud of</h2>\n<h2>What we learned its lit</h2>\n<h2>What's next for  Traktor Motion</h2>\n</div>\n</div>", [""]], ["meet", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"meet \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/251/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"meet \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/252/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"meet \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/253/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>There are a lot of video chat applications in existence. However, most are plagued by complex interfaces, messy authentication systems and platform dependencies that hinder a groups ability to get together. We wanted to build something to fill the void.</p>\n<h2>What it does</h2>\n<p>Meet is an intelligent WebRTC based video conferencing system which requires no additional software or even authentication. Provide an email, name or both and in under a second, you'll be running your own chat room, private to those you choose to invite. Invite your colleagues and friends via simple URL invitations. Meet also employs the use of speech recognition technology, and jots down light notes as conversations occur. </p>\n<h2>How we built it</h2>\n<p>We built Meet using WebRTC, Node, React, Express, Redux and the Google speech API.</p>\n<h2>Challenges we ran into</h2>\n<p>We ran into a number of issues regarding speech analysis, particularly the streaming of system audio to an analyzation service.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>We're quite happy that we were able to produce a quality, stable application within the time confines. Overall, the application is very stable and works reliably.</p>\n<h2>What we learned</h2>\n<p>We both learned more intricate details of WebRTC than we ever thought possible. From TURN to STUN to ICE and everything in between, we dabbled through the WebRTC stack and ever ended up learning a bit about audio processing.</p>\n<h2>What's next for meet</h2>\n<p>Meet's intelligent capabilities can be enhanced and refined far beyond what we currently support. Additionally, we'd like enhance our email reporting to include additional call metrics.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/react\">react</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/google-web-speech-api\">google-web-speech-api</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/cwheel/meet\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/cwheel/meet\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", ""]], ["OurAbode", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"OurAbode \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/423/900/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<p>Review of our project.</p>\n<p>We are a group of college freshmen who are working on a project that allows an individual to customize their home systems which includes:</p>\n<p>-custom lighting.\n-individualized music preferences.\n-even their optimal toasting time on their toaster.\n-locking systems for doors which is only unlocked by certain people.</p>\n<p>Each person will have a card which stores their ID which is then used to call the information relating to said ID which is used to set \ntheir appliances to their prefered setting.</p>\n<p>Example:</p>\n<p>The father of the household prefers the kitchen lighting to be dim and his toast almost burnt while listening to jazz before leaving \nfor work. \nThe daughter of the household, who gets up a few hours after the father likes the lights as bright as they can be with very lightly \ntoasted toast and listening to Justin Beiber on the radio.</p>\n<p>Lets say that the son has come back after 4 years of college and is new to this new technology. He does not know his prefered lighting \nor how long to toast his toast. Luckily, the toaster and lights will adapt to his preference. Both will start at base settings with High\nand low and choose a random value inbetween the range. For example, the toaster's miniumum toasting time starts at 30 seconds and the \nmaximum starts at 300 seconds, a random time inbetween the two will be chosen for the son to experience and then he can rate the toast.\nDoes he prefer it to be crispier? The toaster will increase maximum time and minimum time by a few seconds. Does he prefer it to be \nlighter? the toaster will decrease the maximum time and minimum time by a few seconds. Maybe he doesn't know and has neutral feelings,\nthe toaster will decrease the maximum time and increase the minimum time to close in on his prefered toast time. Eventually it will find\nthe perfect amount of seconds for his toast to be toasted.</p>\n<p>Repeat same thing with Lighting brightness.\n** Please note that there is a typo in the repo name, it is accidently OurAdobe instead of OurAbode (accidental swap of the b and d)</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/arduino\">arduino</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--3\">c++</a></span></li><li><span class=\"cp-tag\">batchfile</span></li><li><span class=\"cp-tag\">rfid</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/thieraufc/OurAdobe\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/thieraufc/OurAdobe\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Formal Writing Checker", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>High school students often spend a lot of time double-checking and triple-checking their essay for informal language that English teachers hate. </p>\n<h2>What it does</h2>\n<p>This app checks essays for first-person pronouns, second-person pronouns, and contractions. There is the option to exclude quoted text because students must sometimes quote informal works.</p>\n<h2>How we built it</h2>\n<p>We used an algorithm based on regex to find the pronouns and differentiate between contractions and possessive nouns. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Our algorithm amounts to less than 200 lines of code. It took our best creative thinking and many failed attempts to end with such a compact algorithm.</p>\n<h2>What we learned</h2>\n<p>We learned that we should not let the fear that an algorithm will fail in execution or efficiency to deter us from diving in and writing the algorithm. Even if we don't end up using it, we can use it to gain a clearer picture of the problem and how to make a better algorithm.</p>\n<h2>What's next for Formal Writing Checker</h2>\n<p>Unsupervised machine learning can enable the algorithm to detect differences in sentence structure between formal writing and informal writing. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/android\">android</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Philosobyte/FormalWritingChecker\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Philosobyte/FormalWritingChecker\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Once Upon a Pixel", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Once Upon a Pixel \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/167/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>The Clarifai API is a powerful tool -- but it can do so much more than just dissect images.  It can tell stories.  They say a picture is worth a thousand words.  Just how many of those words can Clarifai help us find?</p>\n<h2>What it does</h2>\n<p>Once Upon a Pixel allows users to text photos to its server.  It then posts that picture to the main feed, where it is accompanied by an extensive caption written by famous authors.  </p>\n<h2>How we built it</h2>\n<p>First things first, we collected a massive corpus of famous novels that were available for free online.  We cleaned the text and iterated over ever word of every novel, logging the coordinates of every instance of every word in a massive hashmap and wrote the map out to JSON.  </p>\n<p>Then we set up a Flask server to accept incoming image texts from anyone who as our number.  We used to Twilio API to power this feature.  </p>\n<p>We use the Clarifai API to look at each given image and provide tags -- letting us know what is in the picture.  This is critical.  </p>\n<p>Then we select the most prevalent tags and retrieve their coordinates from our master hashmap of words.  We randomly select a set of coordinates from the given list, and then go find the instance of that tag in the text.  Then we extract the surrounding passages with regular expressions and stitch together the passages for all of the top tags.  </p>\n<p>This is the passage that we post to the main feed.  And there you have it!</p>\n<h2>Challenges we ran into</h2>\n<p>We started the hackathon on a completely different project and did not pivot until late Saturday afternoon.  The pressure to build a new application in the remaining time was immense, but we managed.  </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Our team was coordinated and worked well together.  We managed to survive a complete failure halfway through the hackathon and successfully pivot to a full web application.  </p>\n<h2>What we learned</h2>\n<p>We all learned tons of new technology, and a huge amount about teamwork!</p>\n<h2>What's next for Once Upon a Pixel</h2>\n<p>Expand the literature base!!! This will make much more varied stories. Also expand tag searches to synonyms!  Oh and maybe make it available to the public...</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongodb\">mongodb</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/twilio\">twilio</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/nightCapLounge/OnceUponAPixel\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/nightCapLounge/OnceUponAPixel\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Atlas", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Atlas \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/092/datas/gallery.jpg\"/>\n<p>\n<i>In App screenshot of the map</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Atlas \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/094/datas/gallery.jpg\"/>\n<p>\n<i>In App screenshot of an image</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Atlas \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/097/datas/gallery.jpg\"/>\n<p>\n<i>Another Image</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>Atlas</h1>\n<h2>Authors</h2>\n<ul>\n<li><a href=\"http://github.com/rjerue\" rel=\"nofollow\">Ryan Jerue</a></li>\n<li><a href=\"https://github.com/Slymodi\" rel=\"nofollow\">Sahil Mishra</a></li>\n<li><a href=\"https://github.com/lrothschildshea\" rel=\"nofollow\">Liam Rothschild-Shea</a></li>\n</ul>\n<h2>About</h2>\n<p>Atlas is an app in development for Android that allows users to take a picture of something where they are and that picture will appear on a map. They can also see the pictures of other users. The app is a work in progress and was created for use in <a href=\"http://hackumass.com/\" rel=\"nofollow\">HackUMass IV</a>. The backend server is in a folder makred \"backend.\"</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/rjerue/Atlas\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/rjerue/Atlas\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Crammer", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Crammer \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/123/datas/gallery.jpg\"/>\n<p>\n<i>Home Page</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Crammer \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/132/datas/gallery.jpg\"/>\n<p>\n<i>Create Profile</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Crammer \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/183/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Crammer \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/136/datas/gallery.jpg\"/>\n<p>\n<i>Cram options</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Crammer \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/140/datas/gallery.jpg\"/>\n<p>\n<i>Join Cram Session</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Crammer \u2013 screenshot 6\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/150/datas/gallery.jpg\"/>\n<p>\n<i>Create Cram Session</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Crammer \u2013 screenshot 7\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/154/datas/gallery.jpg\"/>\n<p>\n<i>Cram Chat</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Our inspiration to create Crammer was based off the struggle to find the right study buddy for studying for Midterms coming up this week. We just wanted something that would allow us to find the right study group at the right time. </p>\n<h2>What it does</h2>\n<p>Our app basically creates individual user profiles and creates new study groups, then it compares the users preferences and allows the individual to choose from a bunch of cram sessions. After the cram session is selected a chat interface is created with all the members in the chat. </p>\n<h2>How we built it</h2>\n<p>We have not created a full functioning mobile application, since we are in comp sci 121. We created a replication of how the app will function through Java. And then we used Kony Visualizer to create a visual example of how our app will look like. </p>\n<h2>Challenges we ran into</h2>\n<p>We ran into the challenge of not having the full knowledge of creating an application. And then how to use Kony Visualizer. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>The demo app from Kony, and the successful Java app. And our first hackathon.</p>\n<h2>What we learned</h2>\n<p>We learned how to use HTML, JavaScript, and CSS. And how to use the Kony Visualizer</p>\n<h2>What's next for Crammer</h2>\n<p>We want to actually implement the idea for crammer, first we make a web application version using Ruby on Rails, but then we will change it into a mobile application. We hope to bring more features into our app such as an location tracker fully functional chat interface. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag\">kony-visualizer</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://docs.google.com/presentation/d/1PPZw1aEtVM9qcLppR9bBd3h8etRB1dchHryVrkumilY/present?slide=id.p\" rel=\"nofollow\" target=\"_blank\" title=\"https://docs.google.com/presentation/d/1PPZw1aEtVM9qcLppR9bBd3h8etRB1dchHryVrkumilY/present?slide=id.p\">\n<i class=\"ss-icon ss-link\"></i>\n<span>docs.google.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", ""]], ["Breadcrumbs", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://player.vimeo.com/video/186136288?byline=0&amp;portrait=0&amp;title=0#t=\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n<li class=\"text-center\">\n<img alt=\"Breadcrumbs \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/421/795/datas/gallery.jpg\"/>\n<p>\n<i>Always remember where you were</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Breadcrumbs \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/421/938/datas/gallery.jpg\"/>\n<p>\n<i>What's your favorite place?</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Breadcrumbs \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/175/datas/gallery.jpg\"/>\n<p>\n<i>Drop breadcrumbs automatically</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Breadcrumbs \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/210/datas/gallery.jpg\"/>\n<p>\n<i>Backtrack to your breadcrumbs</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Breadcrumbs \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/229/datas/gallery.jpg\"/>\n<p>\n<i>Decide when your want to drop breadcrumbs</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>It is easy to forget where you were. It is easy to forget where you left something. And it is hard to maintain a diary.</p>\n<h2>What it does</h2>\n<p>Breadcrumbs is a living diary. It keeps track of your location, to the meter. Lost something? Breadcrumbs can help you find it. Want to know where you were 10 days ago? Breadcrumbs can tell you. Your favorite places? Breadcrumbs can tell you that too. </p>\n<h2>How we built it</h2>\n<p>Swift, XCode, and Red Bull.</p>\n<h2>Challenges we ran into</h2>\n<p>Reverse geocoding. Managing big data. Efficiency.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Reverse geocoding. Managing big data. Efficiency.</p>\n<h2>What we learned</h2>\n<p>How to use maps in XCode and Swift.</p>\n<h2>What's next for Breadcrumbs</h2>\n<p>Pushing it to the app store and changing lives. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/iphone-sdk\">iphone-sdk</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/swift\">swift</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/objective-c\">objective-c</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/mkeegan27/amnesia-app\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/mkeegan27/amnesia-app\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Reminisce", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Reminisce \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/422/269/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>A few weeks ago I started learning about assembly and this idea for my project was inspired by that experience. \nI remember encountering difficulties in my debugging process for my programs and GDB, the existing popular debugger was intimidating to navigate as a beginner. I envisioned creating a debugger that would be more accessible and helpful for others who may be in my shoes and is just starting to become familiar with assembly and not completely comfortable with more advanced and complicated debuggers.   </p>\n<h2>What it does</h2>\n<p>My project is a web application that allows users to simulate x86-64 assembly code in NASM syntax. It provides users with useful debugging information such as the registers and stack in real time. It also gives users the option to go through the code instructions line by line. Additionally this application is beneficial for those who are looking for a visual representation. </p>\n<h2>How I built it</h2>\n<p>The foundation of this project was the virtual machine, which provided the essential feature that parsed through x86-64 assembly code and simulated it. This was written in Go. The results were sent to the client side through a web socket.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">x86-64</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/go\">go</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li></ul>\n</div>\n</div>", [""]], ["Bard", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Bard \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/421/320/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Bard \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/421/437/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Bard \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/421/436/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Bard \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/421/761/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We felt compelled to build a video game with some pretty interesting custom hardware.What is more interesting than an electric guitar?</p>\n<h2>What it does</h2>\n<p>Right now, it exists as a web app at imoutof.coffee (yes that is a URL). Users can play \"Bard\" with the keyboard from anywhere. </p>\n<h2>How we built it</h2>\n<p>The game is built in Unity with C#. The unity code was compiled to an html5 application which was hosted on an aws site that was managed with flask.</p>\n<h2>Challenges we ran into</h2>\n<pre class=\"language-nolang\"><code>There is a bug in Unity that makes it impossible to process real time audio input.\nEarly in the hackathon we chose to develop a hardware connection between the guitar and \nthe microphone port in the sound card. Due to that difficult to detect bug, such a route \nmade it impossible to perform a FFT on the guitar signal in Unity and therefore not useful for\nprocessing. The hardware team spent nearly 12 hours trying strange and arcane workarounds\n(including using a USB oscilloscope SDK to make sampling measurements and cutting up \nearbuds to access the microphone input.)\n</code></pre>\n<h2>Accomplishments that we're proud of</h2>\n<pre class=\"language-nolang\"><code>While not the technical marvel that we set out to build, we are still proud of the \ndevelopment process that we all put into Bard. We all expanded into new roles and widened \nour skillsets. Two of us came in without any C# knowledge, but left with tangible experience.\nAs always, we are proud of our human interaction skills throughout the weekend despite \nthe lack of sleep.\n</code></pre>\n<h2>What we learned</h2>\n<pre class=\"language-nolang\"><code>* *You can't process audio real time in Unity.*\n* how to overcome adversity and succeed as a team       \n* How to put up a demo site with AWS and Flask(none of us had ever touched that before)\n* Some of the more advanced Unity features, like customized sprites and abstract C# classes\n</code></pre>\n<h2>What's next for Bard</h2>\n<pre class=\"language-nolang\"><code>* Bard, the game is complete. We had fun with it, especially with the hardware challenges.\n   Three of the four members of our team will come back together to Hack AE. \n   We might not try to do another hardware custom controller... but if we do, we'll\n   have the benefit of all this weekend's experience.\n</code></pre>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"http://imoutof.coffee/\" rel=\"nofollow\" target=\"_blank\" title=\"http://imoutof.coffee/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>imoutof.coffee</span>\n</a></li>\n<li><a href=\"https://github.com/UMLGameHack/UHack2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/UMLGameHack/UHack2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/UMLGameHack/UHack2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/UMLGameHack/UHack2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n<li><a href=\"https://github.com/UMLGameHack/UHack2016\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/UMLGameHack/UHack2016\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I lead an unfortunately fruitless march to interface the electric guitar to the video game. Also, I did some art and contributed to hosting the website. ", "I worked on some of the physical stuff for our project and gave ideas about the game to my teammates. ", "", ""]], ["Knock Knock!", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>hackumass-knockknock</h1>\n<p>Knock Knock! is a hack to make your door smarter. The camera acts as a wireless, connected peephole which automatically sends images to the Knock Knock! website when a person is near. The user can then remotely unlock the door via the web app, which activates a 3D-printed mechanism that turns the door handle.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/3dprinting\">3dprinting</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/amazon-web-services\">amazon-web-services</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/dgandle/hackumass-knockknock\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/dgandle/hackumass-knockknock\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["AutoUploadFiles", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>AutoUploadFiles</h1>\n<p>A simple FTP uploader using JavaFX and Apache Commons Net.</p>\n<p>Requires Apache Commons Net library to work.\nDownload: <a href=\"https://commons.apache.org/proper/commons-net/download_net.cgi\" rel=\"nofollow\">https://commons.apache.org/proper/commons-net/download_net.cgi</a></p>\n<p>FXML-based JavaFX version in development.\nAndroid app in development.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag\">apache-commons</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/maximberezin97/AutoUploadFiles\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/maximberezin97/AutoUploadFiles\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Wrote the whole project. Learned how to use JavaFX, multithreading and cross-thread  platform manipulation, Maven build tool and online repositories, .properties file for persistent data, and external libraries like Apache Commons. Worked with FTP protocol and SSL security."]], ["Freenity", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Freenity \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/421/622/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>There is a lot of online harassment occurring currently. We wanted to create a way to help people by creating a way for them to filter out words that trigger them so they have a more pleasurable browsing experience.</p>\n<h2>What it does</h2>\n<p>The Freenity chrome extension will warn users if a site contains trigger words before they open that page from a search engine.</p>\n<h2>How I built it</h2>\n<p>Our website that allows users to input their trigger words is build in python using flask as the server. That user information is then sent to a database that was made in java. The chrome extension, which is made in javascript, will send a list of url results to another python server that will query the java database to get the user's information. It then will run a web scraper over that url to see if it contains any of the trigger words of the user.</p>\n<h2>Challenges I ran into</h2>\n<p>Two of our three group members are not science or engineering majors so there was trouble getting the database and the html to work properly. Apart from that chrome extensions are really hard to make.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Even though two of our members have had very little coding experience they were able to accomplish the tasks that they took on. There is also very little recent information about creating chrome extensions so it was pretty complicated to get it to talk to a server with the proper information. Also it was our first time using flask so getting the website to display dynamic information was nice.</p>\n<h2>What I learned</h2>\n<p>We got to learn how to:</p>\n<ul>\n<li>properly make a database with java</li>\n<li>a website with HTML</li>\n<li>a dynamic webpage with flask</li>\n<li>a chrome extension with javascript</li>\n<li>a web scraper with python</li>\n</ul>\n<h2>What's next for Freenity</h2>\n<p>Right now a user can only pick from a set list of words but in the future we would like for the user to be able to input their own words to block.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/java\">java</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li></ul>\n</div>\n</div>", [""]], ["scrappedideas", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h1>scrappedideas</h1>\n<p>Authors: Terry Breen, Junqing Qiao</p>\n<p>It's our first Hackathon and we both wanted to try web development. We noticed during the idea jams many people had half an idea and wanted other input on it, so we thought it would be cool to have this concept turned into a website. Right now all it does is have one person draw part of something, and someone else finish the drawing, but we believe it can extended to other types of ideas as well.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/Terry-Breen/scrappedideas\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/Terry-Breen/scrappedideas\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the backend and helped with debugging.", ""]], ["Jibo-Application", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<p>We saw a robot, we thought it was really neat. So we started thinking of ideas to implement into this robot. We didn't want something too difficult, we made it just within our range of abilities.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/haseoxform/Jibo-Application\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/haseoxform/Jibo-Application\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", "", ""]], ["imHere", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"imHere \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/421/461/datas/gallery.jpg\"/>\n<p>\n<i>Logoo</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"imHere \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/421/556/datas/gallery.jpg\"/>\n<p>\n<i>Dashboard</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"imHere \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/421/558/datas/gallery.jpg\"/>\n<p>\n<i>Estmote Beacon</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>When it comes to day-of logistics, attendance is the weakest and most difficult link of the process. It drives up time expenses exponentially as the number of people increases. Solutions come in many of Saas: QR Codes, Email look ups, even just plain old paper and pen. However, what if the solution, is no sign in at all?</p>\n<h2>What it does</h2>\n<p>imHere is a platform which runs on the Robin API, enabling the counting, tracking and attendance taking of individuals around semantic locations of the Estimote Beacon and other potential IoT bluetooth devices. With a click of a button, the host organizer has complete access to the attendees names, email addresses, and other user provided information. The organizer can then use this list to take attendance and send out information to the attendees.</p>\n<h2>How we built it</h2>\n<p>We build this upon a node.js back-end running NPM Modules which would access the Robin API. What this API allowed us to do was to connect to Robin's services and gather semantic location information regarding Robin mobile users within the vicinity of Estimote Beacons. In addition, we developed a minimalist front-end interface using the Bootstrap CSS Framework, in addition to Keyframe css animation models. To tie the server calls and interface together, Express.js calls were developed to get user information from Robin's servers.</p>\n<h2>Challenges we ran into</h2>\n<p>Although well documented, the development of the application using Robin's API on top of a Node.js framework was difficult, and required a full night without sleep to understand and implement. With amazing help from developers at Robin, we were able to make a complete connection to the services provided to us. In addition, our unfamiliarity with npm and javascript networking slowed the development process, and our overall scope of the project. </p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Our group consists of fairly fresh hackathon hackers, so it is really great to see that we are able to fully develop a working project which incorporates a real, live API. We are very proud to know that with enough effort, we were able to overcome the hurdles explained above.</p>\n<h2>What we learned</h2>\n<p>With enough help and collaboration, even beginner hackathon hackers can develop cool and innovative software.</p>\n<h2>What's next for imHere</h2>\n<p>Sleep.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/express-js\">express.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/github\">github</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/npm\">npm</a></span></li><li><span class=\"cp-tag\">robin</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/microsoft-office\">microsoft-office</a></span></li><li><span class=\"cp-tag\">oracle-vm</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/dianetam523/RobinNodeJS\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/dianetam523/RobinNodeJS\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Worked on front-end, back-end connectivity and networking, as well as assisting in development of website\n", "Backend Node.js server with GET calls to Robin's API that return people presence in a room", "", ""]], ["coach-jibo", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>\u201cIntrigued by concept and inspired by presentation\u201d\nThe idea of a robot that becomes part of your everyday social life is a very interesting and new concept. It was motivating to see the presenter\u2019s enthusiasm for the robot. Being able to further integrate the new technology Jibo provides, with the data a fitbit provides seemed obvious. With the integration between the two, people can be healthier and happier. </p>\n<h2>What it does</h2>\n<p>Jibo will act as a fitness coach. It can reveal the number of steps left to go in a day, to meet your goal. Jibo can tell you your heart rate. Jibo can also keep track of the number of hours slept. </p>\n<h2>How we built it</h2>\n<p>Once we were provided the access key. A series of API calls were made to cache the data. The Jibo SDK was installed and relayed the information from fitbit's api to Jibo. Then when using the voice command, \u201csync my fitbit\u201d it will relay the information</p>\n<h2>Challenges we ran into</h2>\n<p>The API for fitbit was secured by OAuth2.0. The process to use their API involved making an http request in order to get an authentication key. Then the authentication key was used to get an access key which has an expiration period of only 10 minutes unless otherwise specified. </p>\n<h2>What we learned</h2>\n<p>The process of gaining access to API\u2019s with OAuth2.0 security. </p>\n<h2>What's next</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag\">jibo</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/fitbit\">fitbit</a></span></li><li><span class=\"cp-tag\">fitbit-api</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag\">jibo-sdk</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/tonytran/jibo-bits\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/tonytran/jibo-bits\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I handled the authentication portion with the fitbit rest api and OAuth. I also made the api calls and cached the data. And I built the behaviors in the jibo-sdk"]], ["Smart Pantry", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Smart Pantry \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/421/487/datas/gallery.jpg\"/>\n<p>\n<i>Our Smart Pantry Website</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>If you ever wanted to grocery shop, it's sometimes hard to plan ahead and record what you may have in your pantry..</p>\n<h2>What it does</h2>\n<p>Scans the UPC barcode of your food and stores it in an inventory that can be viewed remotely. </p>\n<h2>How we built it</h2>\n<p>Built it with a Raspberry Pi 3, a camera, and a web server. </p>\n<h2>Challenges we ran into</h2>\n<p>Getting the camera to work. Getting a high enough resolution photo of the UPC. Finding a reliable UPC translation that would accept most of the foods customers would purchase. Group members leaving the group. </p>\n<h2>Accomplishments that were proud of</h2>\n<p>Making a bar code scanner, finding the correct UPC look-up, and implementing the UPC code converter. </p>\n<h2>What we learned</h2>\n<p>Hackathons are an investment, in more ways than one.</p>\n<h2>What's next for Smart Pantry</h2>\n<p>Streamline application for managing your kitchen. Viewing your inventory in virtual reality. Nutrition and recipe suggestions. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/django\">django</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/opencv\">opencv</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/postgresql\">postgresql</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://polar-bastion-54962.herokuapp.com/\" rel=\"nofollow\" target=\"_blank\" title=\"https://polar-bastion-54962.herokuapp.com/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>polar-bastion-54962.herokuapp.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Emojjr", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Have you ever questioned your ability to properly emojify your writing? Do you want to know what the Declaration of Independence would look like if it were written to the age of digital pictographs? Emojjr provides the ability to intelligently insert emojis into any text. </p>\n<h2>What it does</h2>\n<p>What doesn't it do?</p>\n<h2>How we built it</h2>\n<p>Machine learning. </p>\n<h2>Challenges we ran into</h2>\n<p>Too many emojis were inserted into the text\u200d. We had to scale it back before release - you <em>can</em> have too many emojis. </p>\n<h2>Accomplishments that we 're proud of</h2>\n<p>The Declaration of Independence is now accessible to 21st century readers. </p>\n<h2>What we learned</h2>\n<p>(emoji)</p>\n<h2>What 's next for Emojjr</h2>\n<p>In the future , Emojjr will utilize emoji data from Twitter to learn more complex representations of real emoji usage. Emojjr will also have a website to allow users to convert any text into emojified text. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/zediski/Emojjr\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/zediski/Emojjr\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on the sentiment analysis and POS tagger part of the program.", "", ""]], ["Katana defense", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"Katana defense \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/421/409/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"Katana defense \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/421/412/datas/gallery.jpg\"/>\n<p>\n<i></i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>We originally planned to make an 80's inspired ninja vr trainer for the vive.  Lack of vive made us do a 180 towards mobile instead.  </p>\n<h2>What it does</h2>\n<p>You slash and reflect incoming projectiles with nothing more than your hand.  </p>\n<h2>How I built it</h2>\n<p>I used unity engine and c# to program the game.  A bit of camera shake and particle effects handled the game juice, and Anthony's ms paint skills are beyond belief.<br/>\nI had fun using scene management to allow for background switching and waitless transitions.  </p>\n<h2>Challenges I ran into</h2>\n<p>Decompressing the 24s music track at runtime added 10,000ms of compute time to the background scene asynchronous load.  This led to a jarring disconnect between scene loads.  I fixed this by spending CPU cycles on playing compressed audio, and removed the conversion from mp3 to vorbis.  This removed intermediary steps to loading and playing the track from SRAM. This subsequently put the scene loads in almost perfect sync, with virtually no wait for the background and music to appear after the menu UI loads.  </p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>I got the game extremely fun out of a really simple mechanic, and still managed to accomplish higher order dynamics-level design structures.  This opens the door for a lot of strategies to be viable.  </p>\n<h2>What I learned</h2>\n<p>SOUND IMPORT SETTINGS DO MATTER!</p>\n<h2>What's next for Katana defense</h2>\n<p>I'm addicted, so I'll be playing the hell out of it.  </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li></ul>\n</div>\n</div>", [""]], ["First Person View Racing Quad", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Quadcopter racing is an exciting new sport that we wanted to explore in a budget-friendly, DIY way.  Plenty of pre-built copters can be bought and flown but we thought it would be fun to build one ourselves.</p>\n<h2>How we built it</h2>\n<p>Soldering iron, basic tools, a carbon fiber frame, electronic components</p>\n<h2>What we learned</h2>\n<p>Radio/power interference is not fun to debug</p>\n<h2>What's next for First Person View Racing Quad</h2>\n<p>Fly it</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag\">motor</span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/hardware\">hardware</a></span></li><li><span class=\"cp-tag\">esc</span></li><li><span class=\"cp-tag\">vtx</span></li><li><span class=\"cp-tag\">vrx</span></li><li><span class=\"cp-tag\">tx</span></li><li><span class=\"cp-tag\">rx</span></li><li><span class=\"cp-tag\">lipo</span></li></ul>\n</div>\n</div>", ["", "", ""]], ["PicPlay", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>Show don't tell music app</p>\n<h2>What it does</h2>\n<p>Finds spotify playlists based on the mood of a picture</p>\n<h2>How I built it</h2>\n<p>Clarifai</p>\n<h2>Challenges I ran into</h2>\n<p>Making the mobile app</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>Actually making a functioning product</p>\n<h2>What I learned</h2>\n<p>Frontend/Backend</p>\n<h2>What's next for PicPlay</h2>\n<p>Mobile App</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/flask\">flask</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css3\">css3</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/hkoumjian/PicPlay\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/hkoumjian/PicPlay\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]], ["Unicorn Zombie Apocalypse", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Unicorn Zombie Apocalypse \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/421/265/datas/gallery.jpg\"/>\n<p>\n<i>Need I say more?</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>Zombies/Unicorns. A strong desire to skewer. (And a song, with a name that follows suit)</p>\n<h2>What it does</h2>\n<p>A VR game that places you as the Unicorn fighting against waves of zombies.</p>\n<h2>How we built it</h2>\n<p>Unity engine, with cross scripting from Javascript and C#</p>\n<h2>Challenges we ran into</h2>\n<p>Learning Unity + Javascript + C# and Google Cardboard (OUR ENTIRE PROJECT)</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>OUR ENTIRE PROJECT. Specifically, a functioning and fun game that we can call ours.</p>\n<h2>What we learned</h2>\n<p>Unity, Javascript, C#, Google Cardboard, API for Android VR, GoogleVR, how to stay up for 36+ hours</p>\n<h2>What's next for Unicorn Zombie Apocalypse</h2>\n<p>Beware the horse that gallops...you're next....</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/unity\">unity</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/c--2\">c#</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/jacklaplante/UnicornZombieApocalypse\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/jacklaplante/UnicornZombieApocalypse\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["", "", "", ""]], ["Jibo the Math Genius", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li class=\"text-center\">\n<img alt=\"Jibo the Math Genius \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/421/232/datas/gallery.jpg\"/>\n<p>\n<i>https://res.cloudinary.com/hpl6bqtb2/image/upload/t_project/v1442272536/9f7f8f4d-4b84-425e-8cdb-9b6725316594/xztnyqfkqewdixxhbwlh.jpg</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<h2>What it does</h2>\n<p>Use robot to teach kids math.</p>\n<h2>How we built it</h2>\n<p>Using Jibo SDK, node.js, javascript, son, etc.</p>\n<h2>Challenges we ran into</h2>\n<p>Challenges of recognizing natural language of human speech.</p>\n<h2>Accomplishments that we're proud of</h2>\n<h2>What we learned</h2>\n<h2>What's next for Jibo Math Genius</h2>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/node-js\">node.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/json\">json</a></span></li><li><span class=\"cp-tag\">atom</span></li><li><span class=\"cp-tag\">jibo</span></li></ul>\n</div>\n</div>", ["Coding and testing", "Coding and testing", "", ""]], ["ZooMass", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"ZooMass \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/421/180/datas/gallery.jpg\"/>\n<p>\n<i>Starting Page</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"ZooMass \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/421/181/datas/gallery.jpg\"/>\n<p>\n<i>What, you're not an animal!</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"ZooMass \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/421/182/datas/gallery.jpg\"/>\n<p>\n<i>Animal Detected!</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>Web-Hashtagify</h1>\n<p>UMass Hacks w/ An Phan, Clarifai API. We utilized Clarifai's deep learning algorithm to determine features of an animal. Enter in a URL of the image of any animal you want, and ZooMass will tell you what it is. </p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html\">html</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/clarifai\">clarifai</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/jquery\">jquery</a></span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/theklam/Web-ZooMass\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/theklam/Web-ZooMass\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["Helped implementing Clarifai's API and parsing the tags.", ""]], ["Jedi Maze Game", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\">\n<li>\n<div class=\"flex-video\">\n<iframe allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" class=\"video-embed\" frameborder=\"0\" height=\"375\" mode=\"transparent\" src=\"https://www.youtube.com/embed/N4QyJGZ7c14?enablejsapi=1&amp;hl=en_US&amp;rel=0&amp;start=&amp;version=3&amp;wmode=transparent\" type=\"text/html\" webkitallowfullscreen=\"true\" width=\"615\" wmode=\"transparent\"></iframe>\n</div>\n</li>\n</ul> </div>\n<div>\n<h2>Inspiration</h2>\n<p>You know those games where you move a ball through a maze? What if we made it even harder?</p>\n<h2>What it does</h2>\n<p>By using a Leap Motion, simply rotating your hand rotates a maze. You can move a ball through a maze even if you're a thousand miles away!</p>\n<h2>How we built it</h2>\n<p>We 3d printed the maze and other parts that control rotation. A Raspberry Pi controls 2 servo motors. The 2 servos control the pitch and roll of the maze.</p>\n<h2>Challenges we ran into</h2>\n<p>We had never used python nor servo motors before this project, so that was interesting.</p>\n<h2>Accomplishments that we're proud of</h2>\n<p>Actually finishing something for once.</p>\n<h2>What we learned</h2>\n<p>Robots are super cool! Also super hard.</p>\n<h2>What's next for MazeMotion</h2>\n<p>We could make larger and more interesting mazes, by adding holes or moving obstacles. This would probably require a better system to control the orientation than 2 servos connected to each other. We could add 2 or more balls, or a multilayer maze.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/leap-motion\">leap-motion</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/raspberry-pi\">raspberry-pi</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/servo\">servo</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/3dprinting\">3dprinting</a></span></li></ul>\n</div>\n</div>", ["I worked on the communication between the computer with the Leap Motion and the Raspberry Pi with the servo motors, and on controlling the servo motors. I also designed some 3D printed parts for the game.", "I worked on printing and installing the 3D maze. In addition, I helped program the board controller to read information from the Leap Motion sensor, in particular the pitch and roll of the hand. "]], ["whats_hAPPnn", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div id=\"gallery\">\n<ul class=\"no-bullet\" data-options=\"animation_speed:0;slide_number:false;timer:false\" data-orbit=\"true\">\n<li class=\"text-center\">\n<img alt=\"whats_hAPPnn \u2013 screenshot 1\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/421/137/datas/gallery.jpg\"/>\n<p>\n<i>Our logo</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"whats_hAPPnn \u2013 screenshot 2\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/421/110/datas/gallery.jpg\"/>\n<p>\n<i>Main home screen</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"whats_hAPPnn \u2013 screenshot 3\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/421/109/datas/gallery.jpg\"/>\n<p>\n<i>An added news post</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"whats_hAPPnn \u2013 screenshot 4\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/421/111/datas/gallery.jpg\"/>\n<p>\n<i>Adding a news post</i>\n</p>\n</li> <li class=\"text-center\">\n<img alt=\"whats_hAPPnn \u2013 screenshot 5\" class=\"software_photo_image image-replacement\" src=\"//challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/421/112/datas/gallery.jpg\"/>\n<p>\n<i>Facebook Login</i>\n</p>\n</li>\n</ul> </div>\n<div>\n<h1>whats_hAPPnn</h1>\n<h2><em>The Idea</em></h2>\n<p>Clowns sightings on campus. There\u2019s a quiz in biology class. BBQ in the quad at 4:30pm.\u00a0\u00a0These are the things that students need to know in real time.\u00a0</p>\n<p>whats_hAPPnn is a fast news app based on YikYak that allows people to anonymously post about things that are happening in their local area. By upvoting and downvoting, people can find which news is credible while also internally the system builds their anonymous credibility to improve the reliability of news.</p>\n<p>This allows the news of smaller events to travel extremely fast around a large campus like UMass.\u00a0\u00a0Local news stations need to confirm news stories before they can air them. With whats_hAPPnn news can get to your pocket faster than any other media. </p>\n<p>This app is great at letting minimal advertised events around campus become known.\u00a0\u00a0Every user only gets one vote per post.\u00a0\u00a0The data is saved on a MONGO DB cloud based back up.\u00a0\u00a0If posts get too many down votes it will be removed from the blog.\u00a0\u00a0Users can login through Facebook but their posts will still remain anonymous.\u00a0\u00a0Posts get deleted when they become irrelevant, currently it will get deleted after 24 hours. </p>\n<h2><em>Future Extensions</em></h2>\n<p>As it's built with Meteor, our app can be easily deployed to Android and iOS with little hassle and plenty of open-source technologies. The features we would like to add given more time would include more advanced sorting algorithms (like Reddit or HackerNews) that sorts posts according to both accuracy and recency, as well as a more dynamic UI for sorting between posts by location (i.e. different parts of a student campus) and by topic (perhaps for posting regular news, academic news, extracurricular news, etc.) In addition, there is the possibility of adding a comment system to broaden the amount of interaction between users and allow users to provide updates to developing stories.</p>\n<p>As our app stands, there is no current moderation system, so it has to rely on the good intention of its users. When scaling our app, we would ideally implement a system to filter our repeat posts, and negatively value the votes of users who aren't reflecting the accuracy of most posts (ex. if somebody down votes accurate news stories, then they would have no credibility and the app would reflect this without them knowing).</p>\n<p>We are looking to pursue publishing our app following the hackathon! We all had a great time working on this app, and we'd love to see it hit the market.</p>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/html5\">html5</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/javascript\">javascript</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/css\">css</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/meteor-js\">meteor.js</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/mongohq\">mongohq</a></span></li><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/bootstrap\">bootstrap</a></span></li><li><span class=\"cp-tag\">blaze</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/jagath-jaikumar/whats_hAPPnn\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/jagath-jaikumar/whats_hAPPnn\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", ["I worked on developing the central project idea, as well as organizing much of the main UI and navigation between pages, and writing project documentation on GitHub", "I worked on the back-end and helped to implement features such as tags, the up/down vote counter and deleting stories that have been down voted.", "", ""]], ["ShadowHero", "<div class=\"large-9 columns\" id=\"app-details-left\">\n<div>\n<h2>Inspiration</h2>\n<p>ShadowHero is inspired by the data available through the <a href=\"https://github.com/HackHarassment/TwitterClassifier\" rel=\"nofollow\">HackHarassment data repository on GitHub</a>. The sheer quantity of this data shows the need for an intelligent online agent like ShadowHero.</p>\n<h2>What it does</h2>\n<p>ShadowHero silently listens to online user interactions. If a harassment situation is detected, ShadowHero will make a decision about how to handle the situation. The online anti-harassment activities that ShadowHero can execute are designed to quickly stop harassment as soon as it starts.</p>\n<h2>How I built it</h2>\n<p>ShadowHero use the ChatterBot framework to create a chatbot agent that can monitor online chat rooms. Tools and data from the <a href=\"https://github.com/HackHarassment/TwitterClassifier\" rel=\"nofollow\">Hack Harassment data repository</a> on GitHub were used to train the bot to identify harassment situations.</p>\n<h2>Challenges I ran into</h2>\n<p>For this project, I needed a chat room to demonstrate the application with. At first I attempted to get it set up with Slack's API, but I couldn't get authentication to work correctly. To apply my available time more effectively I chose to \nuse HipChat's API instead.</p>\n<h2>Accomplishments that I'm proud of</h2>\n<p>ShadowHero represents a fully functional prototype and can be easily demonstrated to show it's effectiveness.</p>\n<h2>What I learned</h2>\n<p>This project helped me to expand my skills and knowledge regarding various open data and data analysis tools that are available to developers.</p>\n<h2>What's next for ShadowHero</h2>\n<p>The next step is to build a community around ShadowHero to support the software and expand it's functionality. The following two items are the highest priority at the moment.</p>\n<ol>\n<li>Adding support for ShadowHero to connect to additional social media sites and chat rooms.</li>\n<li>Creation of an infrastructure that will allow ShadowHero to monitor numerous online sites for cases of harassment.</li>\n</ol>\n</div>\n<div class=\"\" id=\"built-with\">\n<h2>Built With</h2>\n<ul class=\"no-bullet inline-list\"><li><span class=\"cp-tag recognized-tag\"><a href=\"https://devpost.com/software/built-with/python\">python</a></span></li><li><span class=\"cp-tag\">chatterbot</span></li></ul>\n</div>\n<nav class=\"app-links section\">\n<h2>Try it out</h2>\n<ul class=\"no-bullet\" data-role=\"software-urls\">\n<li><a href=\"https://github.com/gunthercox/ShadowHero/\" rel=\"nofollow\" target=\"_blank\" title=\"https://github.com/gunthercox/ShadowHero/\">\n<i class=\"ss-icon ss-link\"></i>\n<span>github.com</span>\n</a></li>\n</ul>\n</nav>\n</div>", [""]]]